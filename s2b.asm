; Sonic the Hedgehog 2 (Simon Wai prototype) disassembly
; Originally created by Esrael L.G. Neto around 2008

align macro
	cnop 0,\1
	endm

	include	"s2b.constants.asm"

StartOfRom:      
Vectors:
	dc.l    $FFFFFE00, EntryPoint, BusError, AddressError                  
	dc.l    IllegalInstr, ZeroDivide, ChkInstr, TrapvInstr
	dc.l    PrivilegeViol, Trace, Line1010Emu, Line1111Emu
	dc.l    ErrorExcept, ErrorExcept, ErrorExcept, ErrorExcept
	dc.l    ErrorExcept, ErrorExcept, ErrorExcept, ErrorExcept
	dc.l    ErrorExcept, ErrorExcept, ErrorExcept, ErrorExcept
	dc.l    ErrorExcept, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    HBlank, ErrorTrap, VBlank, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap

Header:
	dc.b "SEGA MEGA DRIVE " ; Console name
	dc.b "(C)SEGA 1991.APR" ; Copyright holder and release date (generally year, leftover from Sonic 1)
	dc.b "SONIC THE             HEDGEHOG 2                " ; Domestic title
	dc.b "SONIC THE             HEDGEHOG 2                " ; International title
	dc.b "GM 00004049-01"	; Serial number (leftover from Sonic 1)
Checksum:
	dc.w $AFC7		; Checksum (leftover from Sonic 1)
	dc.b "J               " ; I/O support
	dc.l StartOfRom		; Start address of ROM
RomEndLoc:
	dc.l $7FFFF		; End address of ROM (leftover from Sonic 1)
	dc.l $FF0000		; Start address of RAM
	dc.l $FFFFFF		; End address of RAM
	dc.b "                " ; Backup RAM
	dc.b "                                                " ; notes (can be anything, but must be 52 bytes)
	dc.b "JUE             " ; Country code 

ErrorTrap: ; loc_200: 
                nop 
                nop  
                bra.s   ErrorTrap               ; loc_200
EntryPoint: ; loc_206:                
		tst.l	($A10008).l
		bne.s	PortA_OK
		tst.w	($A1000C).l
; loc_214:
PortA_OK:
                bne.s   PortC_OK                ; loc_292
                lea     InitValues(PC), A5      ; loc_294
                movem.w (A5)+, D5-D7 
                movem.l (A5)+, A0-A4 
		move.b	-$10FF(A1), D0
                andi.b  #$0F, D0
                beq.s   SkipSecurity            ; loc_234
                move.l  #'SEGA', $2F00(A1) 
SkipSecurity: ; loc_234:                                 
                move.w  (A4), D0
                moveq   #$00, D0
                move.l  D0, A6
                move.l  A6, USP
                moveq   #$17, D1
VDPInitLoop: ; loc_23E:                
                move.b  (A5)+, D5
                move.w  D5, (A4)
                add.w   D7, D5
                dbra    D1, VDPInitLoop         ; loc_23E
                move.l  (A5)+, (A4)
                move.w  D0, (A3)  
                move.w  D7, (A1)               
                move.w  D7, (A2)
WaitForZ80: ; loc_250:                   
                btst    D0, (A1)
                bne.s   WaitForZ80              ; loc_250
                moveq   #$25, D2
Z80InitLoop: ; loc_256:                 
                move.b  (A5)+, (A0)+
                dbra    D2, Z80InitLoop         ; loc_256
                move.w  D0, (A2)
                move.w  D0, (A1)
                move.w  D7, (A2)
ClearRAMLoop: ; loc_262:                  
                move.l  D0, -(A6)
                dbra    D6, ClearRAMLoop        ; loc_262
                move.l  (A5)+, (A4)
                move.l  (A5)+, (A4)
                moveq   #$1F, D3 
ClearCRAMLoop: ; loc_26E:                 
                move.l  D0, (A3)
                dbra    D3, ClearCRAMLoop       ; loc_26E
                move.l  (A5)+, (A4)
                moveq   #$13, D4 
ClearVSRAMLoop: ; loc_278: 
                move.l  D0, (A3) 
                dbra    D4, ClearVSRAMLoop      ; loc_278   
                moveq   #$03, D5
PSGInitLoop: ; loc_280:                    
                move.b  (A5)+, $0011(A3) 
                dbra    D5, PSGInitLoop         ; loc_280   
                move.w  D0, (A2)   
                movem.l (A6), D0-A6
                move    #$2700, SR 
PortC_OK: ; loc_292:                
                bra.s   GameProgram             ; loc_300 
InitValues: ; loc_294:                 
                dc.w    $8000, $3FFF, $0100     ; Z80 RAM start	location
                dc.l    $00A00000               ; Z80 bus request
                dc.l    $00A11100               ; Z80 reset
                dc.l    $00A11200               ; VDP data port
                dc.l    $00C00000               ; VDP control port
                dc.l    $00C00004
                dc.w    $0414, $303C, $076C, $0000, $0000, $FF00, $8137, $0001
                dc.w    $0100, $00FF, $FF00, $0080, $4000, $0080, $AF01, $D91F
                dc.w    $1127, $0021, $2600, $F977, $EDB0, $DDE1, $FDE1, $ED47
                dc.w    $ED4F, $D1E1, $F108, $D9C1, $D1E1, $F1F9, $F3ED, $5636
                dc.w    $E9E9, $8104, $8F02, $C000, $0000, $4000, $0010, $9FBF
                dc.w    $DFFF
; ===========================================================================
; loc_300:
GameProgram:
		tst.w	($C00004).l
		btst	#6,($A1000D).l
		beq.s	ChecksumTest
		cmpi.l	#'init',($FFFFFFFC).w
		beq.w	GameInit
; loc_31C:
ChecksumTest:
		move.l	#ErrorTrap,a0
		move.l	#RomEndLoc,a1
		move.l	(a1),d0  
		move.l	#$7FFFF,d0
		moveq	#0,d1 
; loc_332:
ChecksumLoop:
		add.w	(a0)+,d1
		cmp.l	a0,d0
		bcc.s	ChecksumLoop
		move.l	#Checksum,a1
		cmp.w	(a1),d1
		nop
		nop
		lea	($FFFFFE00).w,a6
		moveq	#0,d7 
		move.w	#$7F,d6
; loc_34E:
GameClrStack:               
		move.l	d7,(a6)+
		dbf	d6,GameClrStack
		move.b	($A10001).l,d0
		andi.b	#$C0,d0
		move.b	d0,($FFFFFFF8).w
		move.l	#'init',($FFFFFFFC).w
; loc_36A:
GameInit:              
		lea	($FF0000).l,a6 
		moveq	#0,d7 
		move.w	#$3F7F,d6
; loc_376: 
GameClrRAM:                
		move.l	d7,(a6)+
		dbf	d6,GameClrRAM

		bsr.w	VDPRegSetup
		bsr.w	JmpTo_SoundDriverLoad
		bsr.w	JoypadInit
		; strangely, this loads the title screen, and not the Sega screen,
		; and the August 21st prototype suggests this was NOT done by the pirates...
		move.b	#4,($FFFFF600).w
; loc_38E:
MainGameLoop:
		move.b	($FFFFF600).w,d0
		andi.w	#$1C,d0
		jsr	GameModesArray(pc,d0.w)
		bra.s	MainGameLoop
; ===========================================================================
; loc_39C:
GameModesArray:
		bra.w	SegaScreen
		bra.w	TitleScreen
		bra.w	Level
		bra.w	Level
		bra.w	SpecialStage
; ===========================================================================
; Leftover from Sonic 1, turned the screen red if the checksum ever failed
ChecksumError:
		bsr.w	VDPRegSetup
		move.l	#$C0000000,($C00004).l	; write to CRAM
		moveq	#$3F,d7
; loc_3C0:
Checksum_Red:
		move.w	#$E,($C00000).l		; color a line red
		dbf	d7,Checksum_Red		; repeat $3F times
; loc_3CC:
Checksum_Loop:
		bra.s	Checksum_Loop
; ===========================================================================
BusError: ; loc_3CE:
                move.b  #$02, ($FFFFFC44).w
                bra.s   ErrorMsg_TwoAddresses   ; loc_432
AddressError: ; loc_3D6:                
                move.b  #$04, ($FFFFFC44).w
                bra.s   ErrorMsg_TwoAddresses   ; loc_432
IllegalInstr: ; loc_3DE:                
                move.b  #$06, ($FFFFFC44).w
                addq.l  #$02, $0002(A7)
                bra.s   ErrorMessage            ; loc_45A
ZeroDivide: ; loc_3EA:                
                move.b  #$08, ($FFFFFC44).w
                bra.s   ErrorMessage            ; loc_45A
ChkInstr: ; loc_3F2:                
                move.b  #$0A, ($FFFFFC44).w
                bra.s   ErrorMessage            ; loc_45A
TrapvInstr: ; loc_3FA:                
                move.b  #$0C, ($FFFFFC44).w
                bra.s   ErrorMessage            ; loc_45A             
PrivilegeViol: ; loc_402:
                move.b  #$0E, ($FFFFFC44).w
                bra.s   ErrorMessage            ; loc_45A  
Trace: ; loc_40A:
                move.b  #$10, ($FFFFFC44).w
                bra.s   ErrorMessage            ; loc_45A 
Line1010Emu: ; loc_412:
                move.b  #$12, ($FFFFFC44).w
                addq.l  #$02, $0002(A7)
                bra.s   ErrorMessage            ; loc_45A                 
Line1111Emu: ; loc_41E:
                move.b  #$14, ($FFFFFC44).w
                addq.l  #$02, $0002(A7)
                bra.s   ErrorMessage            ; loc_45A 
ErrorExcept: ; loc_42A:
                move.b  #$00, ($FFFFFC44).w
                bra.s   ErrorMessage            ; loc_45A 
ErrorMsg_TwoAddresses: ; loc_432: 
                move    #$2700, SR
                addq.w  #$02, A7
                move.l  (A7)+, ($FFFFFC40).w
                addq.w  #$02, A7
                movem.l D0-A7, ($FFFFFC00).w
                bsr     ShowErrorMsg            ; loc_480
                move.l  $0002(A7), D0
                bsr     ShowErrAddress          ; loc_5B2
                move.l  ($FFFFFC40).w, D0
                bsr     ShowErrAddress          ; loc_5B2
                bra.s   ErrorMsg_Wait           ; loc_470                  
ErrorMessage: ; loc_45A:
                move    #$2700, SR
                movem.l D0-A7, ($FFFFFC00).w
                bsr     ShowErrorMsg            ; loc_480
                move.l  $0002(A7), D0
                bsr     ShowErrAddress          ; loc_5B2
ErrorMsg_Wait: ; loc_470:
                bsr     Error_WaitForC          ; loc_5D8 
                movem.l ($FFFFFC00).w, D0-A7  
                move    #$2300, SR
                rte
; ===========================================================================
; loc_480:
ShowErrorMsg:
		lea	($C00000).l,a6
		move.l	#$78000003,($C00004).l
		lea	(Art_Text),a0
		move.w	#$27F,d1
; loc_49A;
Error_LoadGfx:
		move.w	(a0)+,(a6)
		dbf	d1,Error_LoadGfx
		moveq	#0,d0
		move.b	($FFFFFC44).w,d0	; load error code
		move.w	ErrorTextTbl(pc,d0.w),d0
		lea	ErrorTextTbl(pc,d0.w),a0
		move.l	#$46040003,($C00004).l	; position on screen
		moveq	#$12,d1			; number of characters
; loc_4BA:
Error_LoopChars:
		moveq	#0,d0
		move.b	(a0)+,d0
		addi.w	#$790,d0
		move.w	d0,(a6)
		dbf	d1,Error_LoopChars	; repeat for number of characters
		rts
; End of function ShowErrorMsg

; ===========================================================================
ErrorTextTbl:	dc.w ErrTxt_Except-ErrorTextTbl
		dc.w ErrTxt_BusError-ErrorTextTbl
		dc.w ErrTxt_AddressError-ErrorTextTbl
		dc.w ErrTxt_IllegalInstr-ErrorTextTbl
		dc.w ErrTxt_ZeroDivide-ErrorTextTbl 
		dc.w ErrTxt_ChkInstr-ErrorTextTbl
		dc.w ErrTxt_TrapvInstr-ErrorTextTbl
		dc.w ErrTxt_PrivilegeViol-ErrorTextTbl
		dc.w ErrTxt_Trace-ErrorTextTbl
		dc.w ErrTxt_Line1010Emu-ErrorTextTbl
		dc.w ErrTxt_Line1111Emu-ErrorTextTbl
ErrTxt_Except:		dc.b "ERROR EXCEPTION    "
ErrTxt_BusError:	dc.b "BUS ERROR          "
ErrTxt_AddressError:	dc.b "ADDRESS ERROR      "
ErrTxt_IllegalInstr:	dc.b "ILLEGAL INSTRUCTION"
ErrTxt_ZeroDivide:	dc.b "@ERO DIVIDE        " ; '@' displays as 'Z' in-game
ErrTxt_ChkInstr:	dc.b "CHK INSTRUCTION    "
ErrTxt_TrapvInstr:	dc.b "TRAPV INSTRUCTION  "
ErrTxt_PrivilegeViol:	dc.b "PRIVILEGE VIOLATION"
ErrTxt_Trace:		dc.b "TRACE              "
ErrTxt_Line1010Emu:	dc.b "LINE 1010 EMULATOR "
ErrTxt_Line1111Emu:	dc.b "LINE 1111 EMULATOR "
		even

ShowErrAddress: ; loc_5B2:
                move.w  #$07CA, (A6)
                moveq   #$07, D2 
ShowErrAddress_DigitLoop: ; loc_5B8:                
                rol.l   #$04, D0
                bsr.s   ShowErrDigit            ; loc_5C2
                dbra    D2, ShowErrAddress_DigitLoop ; loc_5B8
                rts
ShowErrDigit: ; loc_5C2:   
                move.w  D0, D1
                andi.w  #$000F, D1
                cmpi.w  #$000A, D1
                bcs.s   ShowErrDigit_NoOverflow ; loc_5D0
                addq.w  #$07, D1
ShowErrDigit_NoOverflow: ; loc_5D0:                
                addi.w  #$07C0, D1 
                move.w  D1, (A6)
                rts
Error_WaitForC: ; loc_5D8:
                bsr     ReadJoypads             ; loc_132C
                cmpi.b  #$20, ($FFFFF605).w
                bne     Error_WaitForC          ; loc_5D8
                rts 
Art_Text:	incbin	"data\sprites\art_menu.dat"
		even
VBlank: ; loc_B08:                  
                movem.l D0-A6, -(A7) 
                tst.b	($FFFFF62A).w
                beq     loc_B82 
loc_B14:                 
                move.w	($00C00004), D0
                andi.w	#$0008, D0
                beq.s   loc_B14
                move.l  #$40000010, ($00C00004)
                move.l	($FFFFF616).w, ($00C00000)
                btst	#$06, ($FFFFFFF8).w
                beq.s   loc_B42
                move.w  #$0700, D0
loc_B3E: 
                dbra    D0, loc_B3E 
loc_B42:                 
                move.b	($FFFFF62A).w, D0  
                move.b	#$00, ($FFFFF62A).w
		move.w	#$0001, ($FFFFF644).w  
                andi.w	#$003E, D0         
                move.w	loc_B68(PC, D0), D0   
		jsr	loc_B68(pC, D0)   
loc_B5E:		
                addq.l	#$01, ($FFFFFE0C).w
		movem.l (A7)+, D0-A6
		rte
loc_B68:  
                dc.w    (loc_B82-loc_B68)
                dc.w    (loc_CEC-loc_B68)
                dc.w    (loc_D2A-loc_B68)
                dc.w    (loc_D40-loc_B68)
                dc.w    (loc_D50-loc_B68)
                dc.w    (loc_E72-loc_B68)
                dc.w    (loc_F18-loc_B68)
                dc.w    (loc_1004-loc_B68)
                dc.w    (loc_D46-loc_B68)
                dc.w    (loc_1014-loc_B68)
                dc.w    (loc_CFE-loc_B68)
                dc.w    (loc_1020-loc_B68)
                dc.w    (loc_F18-loc_B68)
loc_B82:
                cmpi.b  #$8C, ($FFFFF600).w 
                beq.s   loc_BBC
                cmpi.b  #$08, ($FFFFF600).w 
                beq.s   loc_BBC  
                cmpi.b  #$0C, ($FFFFF600).w 
                beq.s   loc_BBC                
                move.w	#$0100, ($00A11100)
loc_BA2:                   
                btst	#$00, ($00A11100)
                bne.s   loc_BA2
                jsr     loc_12AC
                move.w  #$0000, ($00A11100)
                bra.s   loc_B5E
loc_BBC:                  
                tst.b	(Water_flag).w
                beq     loc_C60
                move.w	($00C00004), D0
                btst	#$06, ($FFFFFFF8).w
                beq.s   loc_BDA
                move.w	#$0700, D0
loc_BD6:   
                dbra    D0, loc_BD6             
loc_BDA:
                move.w	#$0001, ($FFFFF644).w 
                move.w	#$0100, ($00A11100)
loc_BE8:                
                btst	#$00, ($00A11100)
                bne.s   loc_BE8  
                tst.b	(Water_fullscreen_flag).w 
                bne.s   loc_C1E   
                lea	($00C00004), A5 
                move.l	#$94009340, (A5)
		move.l	#$96FD9580, (A5) 
                move.w	#$977F, (A5)
                move.w	#$C000, (A5) 
                move.w	#$0080, ($FFFFF640).w  
                move.w	($FFFFF640).w, (A5)
                bra.s   loc_C42   
loc_C1E:
                lea	($00C00004), A5 
                move.l	#$94009340, (A5)
                move.l	#$96FD9540, (A5)
                move.w	#$977F, (A5)
                move.w	#$C000, (A5) 
                move.w	#$0080, ($FFFFF640).w  
                move.w	($FFFFF640).w, (A5)
loc_C42:                
                move.w	($FFFFF624).w, (A5)
                move.w	#$8230, ($00C00004) 
                jsr     loc_12AC
                move.w	#$0000, ($00A11100)
                bra     loc_B5E
loc_C60:                
                move.w  ($00C00004), D0 
                move.l	#$40000010, ($00C00004)
                move.l	($FFFFF616).w, ($00C00000)
                btst	#$06, ($FFFFFFF8).w
                beq.s   loc_C88
                move.w	#$0700, D0
loc_C84:  
                dbra    D0, loc_C84            
loc_C88:
                move.w	#$0001, ($FFFFF644).w 
                move.w	($FFFFF624).w, ($00C00004) 
                move.w	#$8230, ($00C00004)  
                move.l	($FFFFF61E).w, ($FFFFEEEC).w 
                move.w	#$0100, ($00A11100) 
loc_CAC:                
                btst	#$00, ($00A11100)
                bne.s   loc_CAC  
                lea	($00C00004), A5 
                move.l	#$94019340, (A5)
                move.l	#$96FC9500, (A5) 
                move.w	#$977F, (A5)
                move.w	#$7800, (A5) 
                move.w	#$0083, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5) 
                jsr     loc_12AC
                move.w	#$0000, ($00A11100)
                bra     loc_B5E
loc_CEC:
                bsr     loc_10BE
                tst.w   ($FFFFF614).w
                beq     loc_CFC  ; beq.s
                subq.w  #$01, ($FFFFF614).w 
loc_CFC:
                rts                
loc_CFE:
                move.w	#$0100, ($00A11100)
loc_D06:                
                btst	#$00, ($00A11100)
                bne.s   loc_D06
                bsr     ReadJoypads             ; loc_132C 
                move.w	#$0000, ($00A11100)
                tst.w   ($FFFFF614).w
                beq     loc_D28
                subq.w  #$01, ($FFFFF614).w 
loc_D28:  
                rts 
loc_D2A:
                bsr     loc_10BE
                bsr     loc_17FE
                tst.w   ($FFFFF614).w
                beq     loc_D3E
                subq.w  #$01, ($FFFFF614).w 
loc_D3E:  
                rts                
loc_D40:
                bsr     loc_10BE
                rts
loc_D46:
                cmpi.b  #$10, ($FFFFF600).w
                beq     loc_E72                 
loc_D50:
                move.w	#$0100, ($00A11100)
loc_D58:                
                btst	#$00, ($00A11100)
                bne.s   loc_D58
                bsr     ReadJoypads             ; loc_132C 
                tst.b   (Water_fullscreen_flag).w
                bne.s   loc_D92
                lea     ($00C00004), A5
                move.l  #$94009340, (A5)
                move.l  #$96FD9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
                bra.s   loc_DB6
loc_D92:
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9540, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
loc_DB6:  
                move.w  ($FFFFF624).w, (A5)  
                move.w  #$8230, ($00C00004)  
                lea     ($00C00004), A5 
                move.l  #$940193C0, (A5)
                move.l  #$96F09500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7C00, (A5) 
                move.w  #$0083, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5) 
                lea     ($00C00004), A5  
                move.l  #$94019340, (A5) 
                move.l  #$96FC9500, (A5)  
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)  
                move.w  #$0083, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5)
                bsr     ProcessDMAQueue             ; loc_15CA
                jsr     loc_12AC
                move.w	#$0000, ($00A11100)
                movem.l ($FFFFEE00).w, D0-D7
                movem.l  D0-D7, ($FFFFEE60).w
                movem.l ($FFFFEE20).w, D0-D7
                movem.l  D0-D7, ($FFFFEE80).w
                movem.l ($FFFFEE50).w, D0-D3
                movem.l  D0-D3, ($FFFFEEA0).w
                move.l  ($FFFFF61E).w, ($FFFFEEEC).w
                cmpi.b  #$5C, ($FFFFF625).w
                bcc.s   DemoTime                ; loc_E56
                move.b  #$01, ($FFFFF64F).w
                rts
DemoTime: ; loc_E56:   
                bsr     LoadTilesAsYouMove      ; loc_6E1A
                jsr     HudUpdate               ; loc_23012
                bsr     loc_181A
                tst.w   ($FFFFF614).w
                beq     DemoTime_End            ; loc_E70
                subq.w  #$01, ($FFFFF614).w
DemoTime_End: ; loc_E70:
                rts                
loc_E72:
                move.w  #$0100, ($00A11100)
loc_E7A:                
                btst	#$00, ($00A11100)
                bne.s   loc_E7A
                bsr     ReadJoypads             ; loc_132C
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                lea     ($00C00004), A5 
                move.l  #$94019340, (A5)
                move.l  #$96FC9500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
                lea     ($00C00004), A5 
                move.l  #$940193C0, (A5)
                move.l  #$96F09500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7C00, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
                bsr     ProcessDMAQueue             ; loc_15CA
                jsr     loc_12AC
                move.w  #$0000, ($00A11100)
                bsr     S1_Pal_Cycle_Special_Stage ; loc_5584 
                tst.w   ($FFFFF614).w
                beq     loc_F16
                subq.w  #$01, ($FFFFF614).w
loc_F16: 
                rts               
loc_F18:
                move.w  #$0100, ($00A11100)
loc_F20:                
                btst	#$00, ($00A11100)
                bne.s   loc_F20
                bsr     ReadJoypads             ; loc_132C
                tst.b   (Water_fullscreen_flag).w
                bne.s   loc_F5A
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
                bra.s   loc_F7E
loc_F5A: 
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9540, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)                 
loc_F7E:     
                move.w  ($FFFFF624).w, (A5)
                lea     ($00C00004), A5 
                move.l  #$940193C0, (A5)
                move.l  #$96F09500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7C00, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                lea     ($00C00004), A5 
                move.l  #$94019340, (A5)
                move.l  #$96FC9500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                bsr     ProcessDMAQueue             ; loc_15CA
                jsr     loc_12AC
                move.w  #$0000, ($00A11100)
                movem.l ($FFFFEE00).w, D0-D7
                movem.l D0-D7, ($FFFFEE60).w
                movem.l ($FFFFEE50).w, D0-D1
                movem.l D0-D1, ($FFFFEEA0).w
                bsr     LoadTilesAsYouMove     ; loc_6E1A
                jsr     HudUpdate              ; loc_23012
                bsr     loc_17FE
                rts
loc_1004:
                bsr     loc_10BE
                addq.b  #$01, ($FFFFF628).w
                move.b  #$0E, ($FFFFF62A).w
                rts
loc_1014:
                bsr     loc_10BE 
                move.w  ($FFFFF624).w, (A5)
                bra     loc_17FE 
loc_1020:
                move.w  #$0100, ($00A11100)
loc_1028:                
                btst	#$00, ($00A11100)
                bne.s   loc_1028
                bsr     ReadJoypads             ; loc_132C
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                lea     ($00C00004), A5 
                move.l  #$94019340, (A5)
                move.l  #$96FC9500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                lea     ($00C00004), A5 
                move.l  #$940193C0, (A5)
                move.l  #$96F09500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7C00, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                jsr     loc_12AC
                move.w  #$0000, ($00A11100)
                tst.w   ($FFFFF614).w
                beq     loc_10BC
                subq.w  #$01, ($FFFFF614).w
loc_10BC:
                rts
loc_10BE:                 
                move.w	#$0100, ($00A11100)
loc_10C6:                
                btst	#$00, ($00A11100) 
                bne.s   loc_10C6 
                bsr     ReadJoypads             ; loc_132C 
                tst.b   (Water_fullscreen_flag).w
                bne.s   loc_1100
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5)
                bra.s   loc_1124 
loc_1100:   
                lea     ($00C00004), A5
                move.l  #$94009340, (A5)
                move.l  #$96FD9540, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5)
loc_1124: 
                lea     ($00C00004), A5
                move.l  #$94019340, (A5)
                move.l  #$96FC9500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)
                move.w  #$0083, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5)
                lea     ($00C00004), A5
                move.l  #$940193C0, (A5)
                move.l  #$96F09500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7C00, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
                jsr     loc_12AC
                move.w	#$0000, ($00A11100)
                rts
HBlank: ; loc_117C:                
                tst.w   ($FFFFF644).w
                beq     loc_1226
                tst.w   ($FFFFFFD8).w   
                beq     HBlank_Not2pMode        ; loc_1228
                move.w  #$0000, ($FFFFF644).w 
                move.l  A5, -(A7)
                move.l  D0, -(A7)
loc_1196                
                move.w  ($00C00004), D0
                andi.w  #$0004, D0
                beq.s   loc_1196
                move.w  ($FFFFF60C).w, D0
                andi.b  #$BF, D0
                move.w  D0, ($00C00004)
                move.w  #$8228, ($00C00004) 
                move.l  #$40000010, ($00C00004) 
                move.l  ($FFFFEEEC).w, ($00C00000)
                move.w	#$0100, ($00A11100) 
loc_11D2:
                btst    #$00, ($00A11100)
                bne.s   loc_11D2
                lea     ($00C00004), A5 
                move.l  #$94019340, (A5)
                move.l  #$96EE9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)
                move.w  #$0083, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5) 
                move.w	#$0000, ($00A11100) 
loc_1208:
                move.w  ($00C00004), D0
                andi.w  #$0004, D0
                beq.s   loc_1208
                move.w  ($FFFFF60C).w, D0
                ori.b   #$40, D0
                move.w  D0, ($00C00004)
                move.l  (A7)+, D0
                move.l  (A7)+, A5
loc_1226:
                rte
HBlank_Not2pMode: ; loc_1228:  
                move    #$2700, SR 
                move.w  #$0000, ($FFFFF644).w  
                movem.l A0-A1, -(A7)
                lea     ($00C00000), A1 
                lea     ($FFFFFA80).w, A0 
                move.l  #$C0000000, $0004(A1)  
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)                                                
                move.w  #$8ADF, $0004(A1)
                movem.l (A7)+, A0-A1
                tst.b   ($FFFFF64F).w
                bne.s   loc_129A
                rte
loc_129A: 
                clr.b   ($FFFFF64F).w 
                movem.l  D0-A6, -(A7)   
                bsr     DemoTime                ; loc_E56  
                movem.l (A7)+, D0-A6 
                rte    
loc_12AC:
                lea     ($00FFFFE0), A0
                lea	($00A01B80), A1
                cmpi.b  #$80, $0008(A1)
                bne.s   loc_12E0
                move.b	$0000(A0), D0
                beq.s   loc_12E0
                clr.b   $0000(A0)
                move.b	D0, D1
                subi.b	#$FE, D1
                bcs.s   loc_12DC
                addi.b  #$7F, D1
                move.b  D1, $0003(A1)
                bra.s   loc_12E0
loc_12DC: 
                move.b	D0, $0008(A1)               
loc_12E0:                
                moveq	#$03, D1
loc_12E2:                
                move.b  $01(A0, D1), D0
                beq.s   loc_12F6
                tst.b   $09(A1, D1)
                bne.s   loc_12F6
                clr.b   $01(A0, D1)                 
                move.b  D0, $09(A1, D1)  
loc_12F6:                
                dbra    D1, loc_12E2
                rts 
JoypadInit: ; loc_12FC:
                move.w  #$0100, ($00A11100)  
JoypadInit_Z80Wait: ; loc_1304:
                btst    #$00, ($00A11100)
                bne.s   JoypadInit_Z80Wait      ; loc_1304
                moveq   #$40, D0
                move.b  D0, ($00A10009)
                move.b  D0, ($00A1000B)
                move.b  D0, ($00A1000D)   
                move.w  #$0000, ($00A11100)                         
                rts
ReadJoypads: ; loc_132C:               
                lea     ($FFFFF604).w, A0
                lea     ($00A10003), A1
                bsr.s   Joypad_Read             ; loc_133A
                addq.w  #$02, A1
Joypad_Read: ; loc_133A:
                move.b  #$00, (A1) 
                nop
                nop
                move.b  (A1), D0
                lsl.b   #$02, D0  
                andi.b  #$C0, D0
                move.b  #$40, (A1) 
                nop
                nop  
                move.b  (A1), D1
                andi.b  #$3F, D1 
                or.b    D1, D0  
                not.b   D0   
                move.b  (A0), D1
                eor.b   D0, D1
                move.b  D0, (A0)+ 
                and.b   D0, D1
                move.b  D1, (A0)+ 
                rts                  
VDPRegSetup: ; loc_1368:                
                lea     ($00C00004), A0
                lea     ($00C00000), A1
                lea     (VDPRegSetup_Array), A2 ; loc_13F2
                moveq   #$12, D7 
VDPRegSetup_Loop: ; loc_137C:                 
                move.w  (A2)+, (A0)
                dbra    D7, VDPRegSetup_Loop    ; loc_137C
                move    (VDPReg_01), D0         ; loc_13F4
                move.w  D0, ($FFFFF60C).w 
                move.w  #$8ADF, ($FFFFF624).w
                moveq   #$00, D0
                move.l  #$40000010, ($00C00004)
                move.w  D0, (A1)
                move.w  D0, (A1)
                move.l  #$C0000000, ($00C00004)
                move.w  #$003F, D7
VDPRegSetup_ClearCRAM: ; loc_13B0:                 
                move.w  D0, (A1)
                dbra    D7, VDPRegSetup_ClearCRAM ; loc_13B0
                clr.l   ($FFFFF616).w
                clr.l   ($FFFFF61A).w
                move.l  D1, -(A7)
                lea     ($00C00004), A5
                move.w  #$8F01, (A5)
                move.l  #$94FF93FF, (A5)
                move.w  #$9780, (A5)
                move.l  #$40000080, (A5)
                move.w  #$0000, ($00C00000)
VDPRegSetup_DMAWait: ; loc_13E2:                
                move.w  (A5), D1
                btst    #$01, D1
                bne.s   VDPRegSetup_DMAWait     ; loc_13E2
                move.w  #$8F02, (A5)
                move.l  (A7)+, D1
                rts
VDPRegSetup_Array: ; loc_13F2:
                dc.w    $8004
VDPReg_01: ; loc_13F4:  
                dc.w    $8134, $8230, $8328, $8407, $857C, $8600, $8700, $8800
                dc.w    $8900, $8A00, $8B00, $8C81, $8D3F, $8E00, $8F02, $9001
                dc.w    $9100, $9200
ClearScreen: ; loc_1418:
                move.w  #$0100, ($00A11100)
loc_1420:     
                btst    #$00, ($00A11100)
                bne.s   loc_1420                    
                lea     ($00C00004), A5  
                move.w  #$8F01, (A5)  
                move.l  #$940F93FF, (A5)
                move.w  #$9780, (A5)
                move.l  #$40000083, (A5)
                move.w  #$0000, ($00C00000) 
ClearScreen_DMAWait: ; loc_144C:                   
                move.w  (A5), D1  
                btst    #$01, D1 
                bne.s   ClearScreen_DMAWait     ; loc_144C 
                move.w  #$8F02, (A5)  
                lea     ($00C00004), A5    
                move.w  #$8F01, (A5)  
                move.l  #$940F93FF, (A5)
                move.w  #$9780, (A5) 
                move.l  #$60000083, (A5) 
                move.w  #$0000, ($00C00000)
ClearScreen_DMA2Wait: ; loc_147A:                  
                move.w  (A5), D1   
                btst    #$01, D1 
                bne.s   ClearScreen_DMA2Wait    ; loc_147A 
                move.w  #$8F02, (A5)   
                clr.l   ($FFFFF616).w
                clr.l   ($FFFFF61A).w
                lea     ($FFFFF800).w, A1   
                moveq   #$00, D0
                move.w  #$00A0, D1
ClearScreen_ClearBuffer1: ; loc_1498:                
                move.l  D0, (A1)+
                dbra    D1, ClearScreen_ClearBuffer1 ; loc_1498  
                lea     ($FFFFE000).w, A1 
                moveq   #$00, D0
                move.w  #$0100, D1
ClearScreen_ClearBuffer2: ; loc_14A8:                
                move.l  D0, (A1)+
                dbra    D1, ClearScreen_ClearBuffer2 ; loc_14A8                 
                move.w  #$0000, ($00A11100)
                rts
; ===========================================================================
; loc_14B8:
JmpTo_SoundDriverLoad: ; JmpTo
		nop
		jmp	(SoundDriverLoad).l

; ---------------------------------------------------------------------------
; Sound queues; they're used interchangably, however symbol tables in
; the Nick Arcade build confirm they are specific to music and sfx
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_14C0:
PlayMusic:
		move.b	d0,($FFFFFFE0).w
		rts 
; End of function PlayMusic


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_14C6:
PlaySound:
                move.b	d0,($FFFFFFE1).w
		rts 
; End of function PlaySound


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
; Unreferenced sound queue, but is indeed functional unlike Sonic 1
; sub_14CC:
PlaySound2:
		move.b	d0,($FFFFFFE2).w
		rts 
; End of function PlaySound2


; ---------------------------------------------------------------------------
; Subroutine to pause the game
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_14D2:
Pause:
                nop 
                tst.b   ($FFFFFE12).w
                beq     Unpause                 ; loc_1536
                tst.w   ($FFFFF63A).w
                bne.s   Pause_AlreadyPaused     ; loc_14EA
                btst    #$07, ($FFFFF605).w
                beq.s   Pause_DoNothing         ; loc_153C
Pause_AlreadyPaused: ; loc_14EA:                 
                move.w  #$0001, ($FFFFF63A).w 
                move.b  #$FE, ($FFFFFFE0).w
Pause_Loop: ; loc_14F6:                
                move.b  #$10, ($FFFFF62A).w 
                bsr     DelayProgram            ; loc_31D8
                tst.b   ($FFFFFFD1).w
                beq.s   Pause_CheckStart        ; loc_1528
                btst    #$06, ($FFFFF605).w
                beq.s   Pause_CheckBC           ; loc_1518
                move.b  #$04, ($FFFFF600).w
                nop 
                bra.s   loc_1530
Pause_CheckBC: ; loc_1518: 
                btst    #$04, ($FFFFF604).w 
                bne.s   loc_153E  
                btst    #$05, ($FFFFF605).w  
                bne.s   loc_153E          
Pause_CheckStart: ; loc_1528:  
                btst    #$07, ($FFFFF605).w 
                beq.s   Pause_Loop              ; loc_14F6
loc_1530: 
                move.b  #$FF, ($FFFFFFE0).w  
Unpause: ; loc_1536:                
                move.w  #$0000, ($FFFFF63A).w 
Pause_DoNothing: ; loc_153C:                 
                rts       
loc_153E:   
                move.w  #$0001, ($FFFFF63A).w 
                move.b  #$FF, ($FFFFFFE0).w 
                rts 
ShowVDPGraphics: ; loc_154C: 
                lea     ($00C00000), A6 
                move.l  #$00800000, D4
ShowVDPGraphics_LineLoop: ; loc_1558:                  
                move.l  D0, $0004(A6) 
                move.w  D1, D3   
ShowVDPGraphics_TileLoop: ; loc_155E:                
                move.w  (A1)+, (A6)                                                             
                dbra    D3, ShowVDPGraphics_TileLoop ; loc_155E
                add.l   D4, D0
                dbra    D2, ShowVDPGraphics_LineLoop ; loc_1558
                rts

; ---------------------------------------------------------------------------
; Subroutine for queueing VDP commands (seems to only queue transfers to VRAM),
; to be issued the next time ProcessDMAQueue is called.
; Can be called a maximum of 18 times before the buffer needs to be cleared
; by issuing the commands (this subroutine DOES check for overflow)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_154C: DMA_68KtoVRAM: QueueCopyToVRAM: QueueVDPCommand: Add_To_DMA_Queue:
QueueDMATransfer:
		movea.l	($FFFFDCFC).w,a1
		cmpa.w	#$FFFFDCFC,a1
		beq.s	QueueDMATransfer_Done	; return if there's no more room in the buffer

		; piece together some VDP commands and store them for later...
		move.w	#$9300,d0	; command to specify DMA transfer length & $00FF
		move.b	d3,d0
		move.w	d0,(a1)+	; store command

		move.w	#$9400,d0	; command to specify DMA transfer length & $FF00
		lsr.w	#8,d3
		move.b	d3,d0
		move.w	d0,(a1)+	; store command

		move.w	#$9500,d0	; command to specify source address & $0001FE
		lsr.l	#1,d1
		move.b	d1,d0
		move.w	d0,(a1)+	; store command

		move.w	#$9600,d0	; command to specify source address & $01FE00
		lsr.l	#8,d1
		move.b	d1,d0
		move.w	d0,(a1)+	; store command

		move.w	#$9700,d0	; command to specify source address & $FE0000
		lsr.l	#8,d1
		move.b	d1,d0
		move.w	d0,(a1)+	; store command

		andi.l	#$FFFF,d2	; command to specify destination address and begin DMA
		lsl.l	#2,d2
		lsr.w	#2,d2
		swap	d2
		ori.l	#$40000080,d2	; set bits to specify VRAM transfer
		move.l	d2,(a1)+	; store command

		move.l	a1,($FFFFDCFC).w	; set the next free slot address
		cmpa.w	#$FFFFDCFC,a1
		beq.s	QueueDMATransfer_Done	; return if there's no more room in the buffer
		move.w	#0,(a1)			; put a stop token at the end of the used part of the buffer
; loc_15C8:
QueueDMATransfer_Done:
		rts
; End of function QueueDMATransfer

; ---------------------------------------------------------------------------
; Subroutine for issuing all VDP commands that were queued
; (by earlier calls to QueueDMATransfer)
; Resets the queue when it's done
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_15CA: CopyToVRAM: IssueVDPCommands: Process_DMA: Process_DMA_Queue:
ProcessDMAQueue:
		lea	($C00004).l,a5
		lea	($FFFFDC00).w,a1
; loc_15D4:	
ProcessDMAQueue_Loop:
		move.w	(a1)+,d0
		beq.s	ProcessDMAQueue_Done	; branch if we reached a stop token
		; issue a set of VDP commands
		move.w	d0,(a5)			; transfer length
		move.w	(a1)+,(a5)		; transfer length
		move.w	(a1)+,(a5)		; source address
		move.w	(a1)+,(a5)		; source address
		move.w	(a1)+,(a5)		; source address
		move.w	(a1)+,(a5)		; destination
		move.w	(a1)+,(a5)		; destination
		cmpa.w	#$DCFC,a1
		bne.s	ProcessDMAQueue_Loop	; loop if we haven't reached end of buffer
; loc_15EC:
ProcessDMAQueue_Done:
		move.w	#0,($FFFFDC00).w
		move.l	#$FFFFDC00,($FFFFDCFC).w
		rts
; End of function ProcessDMAQueue

NemDec: ; loc_15FC: ; Decompress Sprites to VRam                 
                movem.l D0-D7/A0/A1/A3-A5, -(A7) 
                lea     (NemDec_Output), A3 ; loc_16BE
                lea     ($00C00000), A4
                bra.s   loc_1618
NemDec_ToRAM: ;loc_160E: ; Decompress Sprites to Ram
                movem.l D0-D7/A0/A1/A3-A5, -(A7)
                lea     (NemDec_OutputRAM), A3 ; loc_16D4
loc_1618:                
                lea     ($FFFFAA00).w, A1
                move.w  (A0)+, D2
                lsl.w   #$01, D2
                bcc.s   loc_1626
                adda.w  #$000A, A3
loc_1626:         
                lsl.w   #$02, D2
                move.w  D2, A5
                moveq   #$08, D3 
                moveq   #$00, D2
                moveq   #$00, D4  
                bsr     NemDec4             ; loc_16EA
                move.b  (A0)+, D5
                asl.w   #$08, D5
                move.b  (A0)+, D5
                move.w  #$0010, D6 
                bsr.s   loc_1646
                movem.l (A7)+, D0-D7/A0/A1/A3-A5
                rts 
loc_1646:  
                move.w  D6, D7
                subq.w  #$08, D7
                move.w  D5, D1
                lsr.w   D7, D1
                cmpi.b  #$FC, D1
                bcc.s   loc_1692
                andi.w  #$00FF, D1
                add.w   D1, D1
                move.b  $00(A1, D1), D0
                ext.w   D0
                sub.w   D0, D6
                cmpi.w  #$0009, D6
                bcc.s   loc_166E
                addq.w  #$08, D6
                asl.w   #$08, D5
                move.b  (A0)+, D5
loc_166E:                
                move.b  $01(A1, D1), D1
                move.w  D1, D0
                andi.w  #$000F, D1
                andi.w  #$00F0, D0
loc_167C:                  
                lsr.w   #$04, D0
loc_167E:                 
                lsl.l   #$04, D4
                or.b    D1, D4
                subq.w  #$01, D3
                bne.s   loc_168C
                jmp     (A3) 
NemDec3: ; loc_1688:                
                moveq   #$00, D4
                moveq   #$08, D3 
loc_168C:                
                dbra    D0, loc_167E
                bra.s   loc_1646   
loc_1692: 
                subq.w  #$06, D6  
                cmpi.w  #$0009, D6 
                bcc.s   loc_16A0
                addq.w  #$08, D6
                asl.w   #$08, D5
                move.b  (A0)+, D5
loc_16A0:        
                subq.w  #$07, D6 
                move.w  D5, D1  
                lsr.w   D6, D1
                move.w  D1, D0
                andi.w  #$000F, D1
                andi.w  #$0070, D0
                cmpi.w  #$0009, D6  
                bcc.s   loc_167C  
                addq.w  #$08, D6   
                asl.w   #$08, D5   
                move.b  (A0)+, D5  
                bra.s   loc_167C 
NemDec_Output: ; loc_16BE:
                move.l  D4, (A4) 
                subq.w  #$01, A5
                move.w  A5, D4 
                bne.s   NemDec3             ; loc_1688
                rts 
;NemDec_Output_XOR: ; loc_16C8:
                eor.l   D4, D2
                move.l  D2, (A4)  
                subq.w  #$01, A5  
                move.w  A5, D4  
                bne.s   NemDec3             ; loc_1688
                rts 
NemDec_OutputRAM: ; loc_16D4:
                move.l  D4, (A4)+
                subq.w  #$01, A5    
                move.w  A5, D4   
                bne.s   NemDec3             ; loc_1688
                rts  
;NemDec_OutputRAM_XOR: ; loc_16DE:
                eor.l   D4, D2
                move.l  D2, (A4)+   
                subq.w  #$01, A5   
                move.w  A5, D4 
                bne.s   NemDec3             ; loc_1688
                rts                      
NemDec4: ; loc_16EA: 
                move.b  (A0)+, D0 
loc_16EC:                
                cmpi.b  #$FF, D0
                bne.s   loc_16F4
                rts
loc_16F4:                
                move.w  D0, D7
loc_16F6:                
                move.b  (A0)+, D0  
                cmpi.b  #$80, D0
                bcc.s   loc_16EC 
                move.b  D0, D1                 
                andi.w  #$000F, D7
                andi.w  #$0070, D1
                or.w    D1, D7
                andi.w  #$000F, D0
                move.b  D0, D1     
                lsl.w   #$08, D1
                or.w    D1, D7
                moveq   #$08, D1
                sub.w   D0, D1
                bne.s   loc_1724
                move.b  (A0)+, D0 
                add.w   D0, D0
                move.w  D7, $00(A1, D0)
                bra.s   loc_16F6                 
loc_1724:   
                move.b  (A0)+, D0  
                lsl.w   D1, D0
                add.w   D0, D0
                moveq   #$01, D5
                lsl.w   D1, D5
                subq.w  #$01, D5 
loc_1730:                
                move.w  D7, $00(A1, D0) 
                addq.w  #$02, D0
                dbra    D5, loc_1730
                bra.s   loc_16F6
LoadPLC: ; loc_173C:
                movem.l A1/A2, -(A7)
                lea     (ArtLoadCues), A1       ; loc_24420
                add.w   D0, D0 
                move.w  $00(A1, D0), D0  
                lea     $00(A1, D0), A1
                lea     ($FFFFF680).w, A2 
loc_1754:                
                tst.l   (A2)
                beq.s   loc_175C
                addq.w  #$06, A2
                bra.s   loc_1754
loc_175C:                
                move.w  (A1)+, D0
                bmi.s   loc_1768
loc_1760:                
                move.l  (A1)+, (A2)+
                move.w  (A1)+, (A2)+
                dbra    D0, loc_1760
loc_1768:                 
                movem.l (A7)+, A1/A2
                rts   
LoadPLC2: ; loc_176E:                  
                movem.l A1/A2, -(A7)  
                lea     (ArtLoadCues), A1       ; loc_24420
                add.w   D0, D0  
                move.w  $00(A1, D0), D0 
                lea     $00(A1, D0), A1
                bsr.s   ClearPLC                ; loc_179A
                lea     ($FFFFF680).w, A2 
                move.w  (A1)+, D0
                bmi.s   loc_1794
loc_178C:                 
                move.l  (A1)+, (A2)+
                move.w  (A1)+, (A2)+
                dbra    D0, loc_178C 
loc_1794:   
                movem.l (A7)+, A1/A2 
                rts            
ClearPLC: ; loc_179A:
                lea     ($FFFFF680).w, A2
                moveq   #$1F, D0
loc_17A0:                
                clr.l   (A2)+
                dbra    D0, loc_17A0
                rts
RunPLC: ; loc_17A8:                
                tst.l   ($FFFFF680).w
                beq.s   loc_17FC
                tst.w   ($FFFFF6F8).w
                bne.s   loc_17FC
                move.l  ($FFFFF680).w, A0
                lea     NemDec_Output(PC), A3 ; loc_16BE              
                nop
                lea     ($FFFFAA00).w, A1
                move.w  (A0)+, D2
                bpl.s   loc_17CA
                adda.w  #$000A, A3 
loc_17CA: 
                andi.w  #$7FFF, D2
                move.w  D2, ($FFFFF6F8).w
                bsr     NemDec4             ; loc_16EA
                move.b  (A0)+, D5
                asl.w   #$08, D5
                move.b  (A0)+, D5  
                moveq   #$10, D6
                moveq   #$00, D0
                move.l  A0, ($FFFFF680).w
                move.l  A3, ($FFFFF6E0).w
                move.l  D0, ($FFFFF6E4).w
                move.l  D0, ($FFFFF6E8).w
                move.l  D0, ($FFFFF6EC).w
                move.l  D5, ($FFFFF6F0).w 
                move.l  D6, ($FFFFF6F4).w           
loc_17FC:    
                rts                           
loc_17FE:
                tst.w   ($FFFFF6F8).w 
                beq     loc_1896
                move.w  #$0009, ($FFFFF6FA).w                    
                moveq   #$00, D0
                move.w  ($FFFFF684).w, D0 
                addi.w  #$0120, ($FFFFF684).w
                bra.s   loc_1832                   
loc_181A:
                tst.w   ($FFFFF6F8).w 
                beq.s   loc_1896
                move.w  #$0003, ($FFFFF6FA).w 
                moveq   #$00, D0
                move.w  ($FFFFF684).w, D0 
                addi.w  #$0060, ($FFFFF684).w
loc_1832:                
                lea     ($00C00004), A4
                lsl.l   #$02, D0
                lsr.w   #$02, D0
                ori.w   #$4000, D0
                swap.w  D0
                move.l  D0, (A4)
                subq.w  #$04, A4
                move.l  ($FFFFF680).w, A0
                move.l  ($FFFFF6E0).w, A3
                move.l  ($FFFFF6E4).w, D0
                move.l  ($FFFFF6E8).w, D1
                move.l  ($FFFFF6EC).w, D2 
                move.l  ($FFFFF6F0).w, D5
                move.l  ($FFFFF6F4).w, D6
                lea     ($FFFFAA00).w, A1
loc_1866:                
                move.w  #$0008, A5
                bsr     NemDec3             ; loc_1688
                subq.w  #$01, ($FFFFF6F8).w
                beq.s   loc_1898
                subq.w  #$01, ($FFFFF6FA).w
                bne.s   loc_1866
                move.l  A0, ($FFFFF680).w
                move.l  A3, ($FFFFF6E0).w
                move.l  D0, ($FFFFF6E4).w
                move.l  D1, ($FFFFF6E8).w
                move.l  D2, ($FFFFF6EC).w
                move.l  D5, ($FFFFF6F0).w
                move.l  D6, ($FFFFF6F4).w
loc_1896:                 
                rts               
loc_1898:                 
                lea     ($FFFFF680).w, A0
                moveq   #$15, D0
loc_189E:                
                move.l  $0006(A0), (A0)+
                dbra    D0, loc_189E
                rts
RunPLC_ROM: ; loc_18A8:
                lea     (ArtLoadCues), A1       ; loc_24420
                add.w   D0, D0
                move.w  $00(A1, D0), D0
                lea     $00(A1, D0), A1
                move.w  (A1)+, D1
loc_18BA:                
                move.l  (A1)+, A0
                moveq   #$00, D0
                move.w  (A1)+, D0
                lsl.l   #$02, D0
                lsr.w   #$02, D0
                ori.w   #$4000, D0
                swap.w  D0
                move.l  D0, ($00C00004)
                bsr     NemDec              ; loc_15FC
                dbra    D1, loc_18BA
                rts
EniDec: ; loc_18DA:
                movem.l D0-D7/A1-A5, -(A7)                 
                move.w  D0, A3
                move.b  (A0)+, D0
                ext.w   D0
                move.w  D0, A5
                move.b  (A0)+, D4
                lsl.b   #$03, D4
                move.w  (A0)+, A2
                adda.w  A3, A2
                move.w  (A0)+, A4
                adda.w  A3, A4
                move.b  (A0)+, D5 
                asl.w   #$08, D5
                move.b  (A0)+, D5 
                moveq   #$10, D6
loc_18FA:                
                moveq   #$07, D0
                move.w  D6, D7
                sub.w   D0, D7
                move.w  D5, D1
                lsr.w   D7, D1
                andi.w  #$007F, D1
                move.w  D1, D2
                cmpi.w  #$0040, D1
                bcc.s   loc_1914
                moveq   #$06, D0
                lsr.w   #$01, D2
loc_1914:                
                bsr     loc_1A48
                andi.w  #$000F, D2
                lsr.w   #$04, D1
                add.w   D1, D1
                jmp     loc_1970(PC, D1)
loc_1924:                 
                move.w  A2, (A1)+
                addq.w  #$01, A2
                dbra    D2, loc_1924
                bra.s   loc_18FA
loc_192E:
                move.w  A4, (A1)+
                dbra    D2, loc_192E
                bra.s   loc_18FA
loc_1936:                 
                bsr     loc_1998 
loc_193A: 
                move.w  D1, (A1)+ 
                dbra    D2, loc_193A  
                bra.s   loc_18FA 
loc_1942:                
                bsr     loc_1998 
loc_1946:  
                move.w  D1, (A1)+ 
                addq.w  #$01, D1
                dbra    D2, loc_1946 
                bra.s   loc_18FA 
loc_1950:                 
                bsr     loc_1998  
loc_1954:  
                move.w  D1, (A1)+ 
                subq.w  #$01, D1 
                dbra    D2, loc_1954  
                bra.s   loc_18FA 
loc_195E:
                cmpi.w  #$000F, D2
                beq.s   loc_1980
loc_1964:                
                bsr     loc_1998  
                move.w  D1, (A1)+  
                dbra    D2, loc_1964  
                bra.s   loc_18FA             
loc_1970: 
                bra.s   loc_1924
                bra.s   loc_1924
                bra.s   loc_192E
                bra.s   loc_192E
                bra.s   loc_1936
                bra.s   loc_1942
                bra.s   loc_1950
                bra.s   loc_195E                  
loc_1980:  
                subq.w  #$01, A0
                cmpi.w  #$0010, D6
                bne.s   loc_198A
                subq.w  #$01, A0
loc_198A:  
                move.w  A0, D0  
                lsr.w   #$01, D0
                bcc.s   loc_1992
                addq.w  #$01, A0
loc_1992:  
                movem.l (A7)+, D0-D7/A1-A5
                rts             
loc_1998:                
                move.w  A3, D3
                move.b  D4, D1
                add.b   D1, D1
                bcc.s   loc_19AA
                subq.w  #$01, D6
                btst    D6, D5
                beq.s   loc_19AA
                ori.w   #$8000, D3
loc_19AA:                 
                add.b   D1, D1
                bcc.s   loc_19B8
                subq.w  #$01, D6
                btst    D6, D5
                beq.s   loc_19B8
                addi.w  #$4000, D3
loc_19B8:        
                add.b   D1, D1
                bcc.s   loc_19C6
                subq.w  #$01, D6
                btst    D6, D5
                beq.s   loc_19C6
                addi.w  #$2000, D3
loc_19C6:  
                add.b   D1, D1
                bcc.s   loc_19D4
                subq.w  #$01, D6
                btst    D6, D5
                beq.s   loc_19D4
                ori.w   #$1000, D3
loc_19D4:    
                add.b   D1, D1
                bcc.s   loc_19E2
                subq.w  #$01, D6
                btst    D6, D5
                beq.s   loc_19E2
                ori.w   #$0800, D3
loc_19E2:   
                move.w  D5, D1   
                move.w  D6, D7 
                sub.w   A5, D7 
                bcc.s   loc_1A12
                move.w  D7, D6 
                addi.w  #$0010, D6
                neg.w   D7
                lsl.w   D7, D1
                move.b  (A0), D5
                rol.b   D7, D5
                add.w   D7, D7
                and.w   loc_1A28-$02(PC, D7), D5
                add.w   D5, D1
loc_1A00:                
                move.w  A5, D0
                add.w   D0, D0  
                and.w   loc_1A28-$02(PC, D0), D1 
                add.w   D3, D1
                move.b  (A0)+, D5
                lsl.w   #$08, D5
                move.b  (A0)+, D5
                rts
loc_1A12:
                beq.s   loc_1A24
                lsr.w   D7, D1
                move.w  A5, D0
                add.w   D0, D0 
                and.w   loc_1A28-$02(PC, D0), D1
                add.w   D3, D1
                move.w  A5, D0
                bra.s   loc_1A48
loc_1A24: 
                moveq   #$10, D6
                bra.s   loc_1A00
loc_1A28:  
                dc.w    $0001, $0003, $0007, $000F, $001F, $003F, $007F, $00FF
                dc.w    $01FF, $03FF, $07FF, $0FFF, $1FFF, $3FFF, $7FFF, $FFFF     
loc_1A48:    
                sub.w   D0, D6
                cmpi.w  #$0009, D6
                bcc.s   loc_1A56
                addq.w  #$08, D6
                asl.w   #$08, D5
                move.b  (A0)+, D5
loc_1A56:                
                rts
KosDec: ; loc_1A58:                
                subq.l  #$02, A7
                move.b  (A0)+, $0001(A7)
                move.b  (A0)+, (A7)
                move.w  (A7), D5
                moveq   #$0F, D4
loc_1A64:                 
                lsr.w   #$01, D5
                move    SR, D6
                dbra    D4, loc_1A76
                move.b  (A0)+, $0001(A7)
                move.b  (A0)+, (A7)
                move.w  (A7), D5
                moveq   #$0F, D4
loc_1A76: 
                move    D6, CCR  
                bcc.s   loc_1A7E
                move.b  (A0)+, (A1)+
                bra.s   loc_1A64
loc_1A7E: 
                moveq   #$00, D3  
                lsr.w   #$01, D5 
                move    SR, D6 
                dbra    D4, loc_1A92   
                move.b  (A0)+, $0001(A7)  
                move.b  (A0)+, (A7) 
                move.w  (A7), D5 
                moveq   #$0F, D4                                 
loc_1A92:                  
                move    D6, CCR 
                bcs.s   loc_1AC2
                lsr.w   #$01, D5
                dbra    D4, loc_1AA6
                move.b  (A0)+, $0001(A7)
                move.b  (A0)+, (A7) 
                move.w  (A7), D5
                moveq   #$0F, D4
loc_1AA6:  
                roxl.w  #$01, D3 
                lsr.w   #$01, D5 
                dbra    D4, loc_1AB8
                move.b  (A0)+, $0001(A7)
                move.b  (A0)+, (A7) 
                move.w  (A7), D5
                moveq   #$0F, D4 
loc_1AB8: 
                roxl.w  #$01, D3 
                addq.w  #$01, D3
                moveq   #-1, D2
                move.b  (A0)+, D2
                bra.s   loc_1AD8
loc_1AC2: 
                move.b  (A0)+, D0 
                move.b  (A0)+, D1 
                moveq   #-1, D2
                move.b  D1, D2 
                lsl.w   #$05, D2
                move.b  D0, D2
                andi.w  #$0007, D1
                beq.s   loc_1AE4
                move.b  D1, D3 
                addq.w  #$01, D3 
loc_1AD8:
                move.b  $00(A1, D2), D0
                move.b  D0, (A1)+
                dbra    D3, loc_1AD8 
                bra.s   loc_1A64                 
loc_1AE4:   
                move.b  (A0)+, D1
                beq.s   loc_1AF4
                cmpi.b  #$01, D1
                beq     loc_1A64
                move.b  D1, D3 
                bra.s   loc_1AD8
loc_1AF4:
                addq.l  #$02, A7
                rts
UnknownDec: ; loc_1AF8:                
                moveq   #$00, D0
                move.w  #$07FF, D4
                moveq   #$00, D5
                moveq   #$00, D6
                move.w  A3, D7
                subq.w  #$01, D2
                beq     loc_1E98
                subq.w  #$01, D2
                beq     loc_1E1A
                subq.w  #$01, D2
                beq     loc_1D9C
                subq.w  #$01, D2
                beq     loc_1D1E
                subq.w  #$01, D2
                beq     loc_1CA2
                subq.w  #$01, D2
                beq     loc_1C24
                subq.w  #$01, D2
                beq     loc_1BAA
loc_1B2E:                
                move.b  (A0)+, D1
                add.b   D1, D1
                bcs.s   loc_1BA8
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   loc_1B50
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   loc_1B44
                move.b  (A6)+, (A2)+
loc_1B44: 
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1B98
                bra     loc_1CA2                
loc_1B50: 
                lsl.w   #$03, D1
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   loc_1B64
                add.b   D1, D1
                bcs.s   loc_1B7A
                bra.s   loc_1B7C
loc_1B64:
                add.b   D1, D1
                bcc.s   loc_1B78
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   loc_1B8A
                subq.w  #$06, D0
                bmi.s   loc_1B90
loc_1B72:                
                move.b  (A6)+, (A2)+
                dbra    D0, loc_1B72
loc_1B78:         
                move.b  (A6)+, (A2)+
loc_1B7A: 
                move.b  (A6)+, (A2)+
loc_1B7C:  
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+ 
                cmp.w   A2, D7
                bls.s   loc_1BA0
                bra     loc_1E98
loc_1B8A: 
                move.w  #$0000, D0
                rts
loc_1B90:  
                move.w  #$FFFF, D0
                moveq   #$01, D2
                rts
loc_1B98: 
                move.w  #$0001, D0
                moveq   #$05, D2
                rts
loc_1BA0:   
                move.w  #$0001, D0
                moveq   #$01, D2
                rts
loc_1BA8:     
                move.b  (A1)+, (A2)+ 
loc_1BAA:                
                add.b   D1, D1
                bcs.s   loc_1C22
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   loc_1BCA
                move.b  (A1)+, D5 
                sub.l   D5, A6
                add.b   D1, D1
                bcc.s   loc_1BBE
                move.b  (A6)+, (A2)+ 
loc_1BBE:   
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1C12
                bra     loc_1D1E
loc_1BCA:
                lsl.w   #$03, D1
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6 
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   loc_1BDE
                add.b   D1, D1
                bcs.s   loc_1BF4
                bra.s   loc_1BF6
loc_1BDE: 
                add.b   D1, D1
                bcc.s   loc_1BF2
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   loc_1C04
                subq.w  #$06, D0
                bmi.s   loc_1C0A
loc_1BEC:                
                move.b  (A6)+, (A2)+
                dbra    D0, loc_1BEC
loc_1BF2: 
                move.b  (A6)+, (A2)+                 
loc_1BF4:
                move.b  (A6)+, (A2)+ 
loc_1BF6:
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1C1A
                bra     loc_1B2E
loc_1C04: 
                move.w  #$0000, D0
                rts
loc_1C0A:   
                move.w  #$FFFF, D0
                moveq   #$00, D2
                rts
loc_1C12:
                move.w  #$0001, D0
                moveq   #$04, D2
                rts
loc_1C1A: 
                move.w  #$0001, D0
                moveq   #$00, D2
                rts
loc_1C22: 
                move.b  (A1)+, (A2)+
loc_1C24:    
                add.b   D1, D1 
                bcs.s   loc_1CA0
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   loc_1C44
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   loc_1C38
                move.b  (A6)+, (A2)+
loc_1C38:    
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1C90
                bra     loc_1D9C
loc_1C44: 
                lsl.w   #$03, D1
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   loc_1C5A
                move.b  (A0)+, D1
                add.b   D1, D1
                bcs.s   loc_1C72
                bra.s   loc_1C74
loc_1C5A: 
                move.b  (A0)+, D1
                add.b   D1, D1
                bcc.s   loc_1C70
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   loc_1C82
                subq.w  #$06, D0
                bmi.s   loc_1C88
loc_1C6A:  
                move.b  (A6)+, (A2)+
                dbra    D0, loc_1C6A
loc_1C70:  
                move.b  (A6)+, (A2)+
loc_1C72:
                move.b  (A6)+, (A2)+
loc_1C74: 
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1C98
                bra     loc_1BAA
loc_1C82:
                move.w  #$0000, D0
                rts
loc_1C88:  
                move.w  #$FFFF, D0
                moveq   #$07, D2
                rts
loc_1C90:  
                move.w  #$0001, D0
                moveq   #$03, D2
                rts
loc_1C98:    
                move.w  #$0001, D0
                moveq   #$07, D2
                rts
loc_1CA0:  
                move.b  (A1)+, (A2)+  
loc_1CA2:                  
                add.b   D1, D1
                bcs.s   loc_1D1C 
                move.l  A2, A6   
                add.b   D1, D1 
                bcs.s   loc_1CC2
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   loc_1CB6
                move.b  (A6)+, (A2)+ 
loc_1CB6:   
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7 
                bls.s   loc_1D0C
                bra     loc_1E1A
loc_1CC2:  
                lsl.w   #$03, D1
                move.b  (A0)+, D1
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   loc_1CD8
                add.b   D1, D1
                bcs.s   loc_1CEE
                bra.s   loc_1CF0
loc_1CD8: 
                add.b   D1, D1
                bcc.s   loc_1CEC
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   loc_1CFE
                subq.w  #$06, D0
                bmi.s   loc_1D04
loc_1CE6:
                move.b  (A6)+, (A2)+
                dbra    D0, loc_1CE6              
loc_1CEC:      
                move.b  (A6)+, (A2)+
loc_1CEE:
                move.b  (A6)+, (A2)+
loc_1CF0: 
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+  
                cmp.w   A2, D7   
                bls.s   loc_1D14    
                bra     loc_1C24      
loc_1CFE: 
                move.w  #$0000, D0
                rts
loc_1D04:    
                move.w  #$FFFF, D0
                moveq   #$06, D2
                rts
loc_1D0C:
                move.w  #$0001, D0
                moveq   #$02, D2
                rts
loc_1D14:   
                move.w  #$0001, D0
                moveq   #$06, D2
                rts
loc_1D1C:               
                move.b  (A1)+, (A2)+  
loc_1D1E: 
                add.b   D1, D1 
                bcs.s   loc_1D9A
                move.l  A2, A6
                add.b   D1, D1 
                bcs.s   loc_1D3E
                move.b  (A1)+, D5 
                suba.l  D5, A6
                add.b   D1, D1 
                bcc.s   loc_1D32
                move.b  (A6)+, (A2)+  
loc_1D32:    
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1D8A
                bra     loc_1E98
loc_1D3E:
                lsl.w   #$02, D1
                move.b  (A0)+, D1
                add.w   D1, D1
                move.w  D1, D6
                and.w   D4, D6 
                move.b  (A1)+, D6 
                suba.l  D6, A6
                add.b   D1, D1 
                bcs.s   loc_1D56
                add.b   D1, D1 
                bcs.s   loc_1D6C
                bra.s   loc_1D6E
loc_1D56:  
                add.b   D1, D1
                bcc.s   loc_1D6A
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   loc_1D7C
                subq.w  #$06, D0
                bmi.s   loc_1D82
loc_1D64:   
                move.b  (A6)+, (A2)+
                dbra    D0, loc_1D64
loc_1D6A:     
                move.b  (A6)+, (A2)+
loc_1D6C: 
                move.b  (A6)+, (A2)+
loc_1D6E: 
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1D92
                bra     loc_1CA2
loc_1D7C:  
                move.w  #$0000, D0
                rts
loc_1D82:   
                move.w  #$FFFF, D0
                moveq   #$05, D2
                rts           
loc_1D8A:
                move.w  #$0001, D0
                moveq   #$01, D2
                rts  
loc_1D92:  
                move.w  #$0001, D0
                moveq   #$05, D2
                rts 
loc_1D9A:
                move.b  (A1)+, (A2)+ 
loc_1D9C:                 
                add.b   D1, D1
                bcs.s   loc_1E18
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   loc_1DBC
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   loc_1DB0
                move.b  (A6)+, (A2)+
loc_1DB0:  
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1E08
                bra     loc_1B2E
loc_1DBC:
                add.w   D1, D1
                move.b  (A0)+, D1
                lsl.w   #$02, D1  
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   loc_1DD4
                add.b   D1, D1
                bcs.s   loc_1DEA
                bra.s   loc_1DEC
loc_1DD4:  
                add.b   D1, D1
                bcc.s   loc_1DE8
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   loc_1DFA
                subq.w  #$06, D0
                bmi.s   loc_1E00
loc_1DE2:                
                move.b  (A6)+, (A2)+
                dbra    D0, loc_1DE2
loc_1DE8:  
                move.b  (A6)+, (A2)+
loc_1DEA:
                move.b  (A6)+, (A2)+
loc_1DEC:
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1E10
                bra     loc_1D1E
loc_1DFA: 
                move.w  #$0000, D0
                rts 
loc_1E00:   
                move.w  #$FFFF, D0
                moveq   #$04, D2                
                rts
loc_1E08:
                move.w  #$0001, D0
                moveq   #$08, D2                
                rts
loc_1E10:  
                move.w  #$0001, D0
                moveq   #$04, D2                
                rts
loc_1E18:
                move.b  (A1)+, (A2)+
loc_1E1A:                  
                add.b   D1, D1
                bcs.s   loc_1E96
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   loc_1E3C
                move.b  (A0)+, D1
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   loc_1E30
                move.b  (A6)+, (A2)+
loc_1E30:   
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1E86
                bra     loc_1BAA
loc_1E3C:
                move.b  (A0)+, D1
                lsl.w   #$03, D1
                move.w  D1, D6 
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   loc_1E52
                add.b   D1, D1
                bcs.s   loc_1E68
                bra.s   loc_1E6A
loc_1E52:
                add.b   D1, D1
                bcc.s   loc_1E66
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   loc_1E78
                subq.w  #$06, D0
                bmi.s   loc_1E7E
loc_1E60:                 
                move.b  (A6)+, (A2)+
                dbra    D0, loc_1E60                
loc_1E66:       
                move.b  (A6)+, (A2)+
loc_1E68:   
                move.b  (A6)+, (A2)+
loc_1E6A:
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1E8E
                bra     loc_1D9C
loc_1E78:  
                move.w  #$0000, D0
                rts
loc_1E7E:    
                move.w  #$FFFF, D0
                moveq   #$03, D2
                rts
loc_1E86:
                move.w  #$0001, D0
                moveq   #$07, D2
                rts       
loc_1E8E:          
                move.w  #$0001, D0
                moveq   #$03, D2
                rts 
loc_1E96:
                move.b  (A1)+, (A2)+                  
loc_1E98:
                add.b   D1, D1
                bcs.s   loc_1F12
                move.b  (A0)+, D1
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   loc_1EBA
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   loc_1EAE
                move.b  (A6)+, (A2)+ 
loc_1EAE:  
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+ 
                cmp.w   A2, D7
                bls.s   loc_1F02
                bra     loc_1C24
loc_1EBA:  
                lsl.w   #$03, D1
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   loc_1ECE
                add.b   D1, D1
                bcs.s   loc_1EE4
                bra.s   loc_1EE6
loc_1ECE: 
                add.b   D1, D1
                bcc.s   loc_1EE2
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   loc_1EF4
                subq.w  #$06, D0
                bmi.s   loc_1EFA
loc_1EDC:                
                move.b  (A6)+, (A2)+ 
                dbra    D0, loc_1EDC
loc_1EE2: 
                move.b  (A6)+, (A2)+ 
loc_1EE4: 
                move.b  (A6)+, (A2)+ 
loc_1EE6: 
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   loc_1F0A
                bra     loc_1E1A
loc_1EF4: 
                move.w  #$0000, D0
                rts
loc_1EFA:  
                move.w  #$FFFF, D0
                moveq   #$02, D2
                rts
loc_1F02: 
                move.w  #$0001, D0
                moveq   #$06, D2
                rts
loc_1F0A:   
                move.w  #$0001, D0
                moveq   #$02, D2
                rts
loc_1F12:                
                move.b  (A1)+, (A2)+ 
                bra     loc_1B2E
PalCycle_Load: ; loc_1F18: ; Rotating Palette routine
                bsr     loc_24A2
                moveq   #$00, D2
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                move.w  PalCycle(PC, D0), D0    ; loc_1F30
                jmp     PalCycle(PC, D0)        ; loc_1F30
                rts
PalCycle: ; loc_1F30:                
                dc.w    PalCycle_GHz-PalCycle ; $00 - Green Hill 
                dc.w    PalCycle_Null-PalCycle ; $01
                dc.w    PalCycle_Wz-PalCycle ; $02 - Wood
                dc.w    PalCycle_Null-PalCycle ; $03
                dc.w    PalCycle_Mz-PalCycle ; $04 - Metropolis
                dc.w    PalCycle_Mz-PalCycle ; $05 - Metropolis
                dc.w    PalCycle_Null-PalCycle ; $06
                dc.w    PalCycle_HTz-PalCycle ; $07 - Hill Top
                dc.w    PalCycle_HPz-PalCycle ; $08 - Hidden Palace
                dc.w    PalCycle_Null-PalCycle ; $09
                dc.w    PalCycle_OOz-PalCycle ; $0A - Oil Ocean
                dc.w    PalCycle_DHz-PalCycle ; $0B - Dust Hill
                dc.w    PalCycle_CNz-PalCycle ; $0C - Casino Night
                dc.w    PalCycle_CPz-PalCycle ; $0D - Chemical Plant
                dc.w    PalCycle_Null-PalCycle ; $0E - Genocide City
                dc.w    PalCycle_NGHz-PalCycle ; $0F - Neo Green Hill
                dc.w    PalCycle_Null-PalCycle ; $10 - Death Egg
PalCycle_Null: ; loc_1F52:
                rts                     
PalCycle_GHz: ; loc_1F54: ; $00 - Green Hill Rotating Palette routine
                lea     (Pal_GHzCyc), A0        ; loc_2284
                subq.w  #$01, ($FFFFF634).w
                bpl.s   loc_1F80
                move.w  #$0007, ($FFFFF634).w
                move.w  ($FFFFF632).w, D0
                addq.w  #$01, ($FFFFF632).w
                andi.w  #$0003, D0
                lsl.w   #$03, D0
                move.l  $00(A0, D0), ($FFFFFB26).w
                move.l  $04(A0, D0), ($FFFFFB3C).w
loc_1F80:
                rts  
PalCycle_Wz: ; loc_1F82: ; $02 - Wood Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl.s   loc_1FB0
                move.w  #$0002, ($FFFFF634).w
                lea     (Pal_WzCyc), A0         ; loc_2324
                move.w  ($FFFFF632).w, D0
                subq.w  #$02, ($FFFFF632).w
                bcc.s   loc_1FA4
                move.w  #$0006, ($FFFFF632).w                 
loc_1FA4:
                lea     ($FFFFFB66).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
loc_1FB0:                
                rts  
PalCycle_Mz: ; loc_1FB2: ; $04/$05 - Metropolis Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w    
                bpl.s   loc_1FE2
                move.w  #$0011, ($FFFFF634).w
                lea     (Pal_MzCyc1), A0        ; loc_2334
                move.w  ($FFFFF632).w, D0
                addq.w  #$02, ($FFFFF632).w
                cmpi.w  #$000C, ($FFFFF632).w
                bcs.s   loc_1FDA
                move.w  #$0000, ($FFFFF632).w
loc_1FDA:
                lea     ($FFFFFB4A).w, A1
                move.w  $00(A0, D0), (A1)
loc_1FE2:
                subq.w  #$01, ($FFFFF666).w
                bpl.s   loc_2016
                move.w  #$0002, ($FFFFF666).w
                lea     (Pal_MzCyc2), A0        ; loc_2340
                move.w  ($FFFFF652).w, D0
                addq.w  #$02, ($FFFFF652).w
                cmpi.w  #$0006, ($FFFFF652).w
                bcs.s   loc_200A
                move.w  #$0000, ($FFFFF652).w
loc_200A:
                lea     ($FFFFFB42).w, A1
                move.l  $00(A0, D0), (A1)+
                move.w  $04(A0, D0), (A1)
loc_2016:
                subq.w  #$01, ($FFFFF668).w
                bpl.s   loc_2046
                move.w  #$0009, ($FFFFF668).w
                lea     (Pal_MzCyc3), A0        ; loc_234C
                move.w  ($FFFFF654).w, D0
                addq.w  #$02, ($FFFFF654).w
                cmpi.w  #$0014, ($FFFFF654).w
                bcs.s   loc_203E
                move.w  #$0000, ($FFFFF654).w
loc_203E:
                lea     ($FFFFFB5E).w, A1
                move.w  $00(A0, D0), (A1)
loc_2046:
                rts                
PalCycle_HTz: ; loc_2048: ; $07 - Hill Top Rotating Palette routine
                lea     (Pal_HTzCyc1), A0       ; loc_22A4
                subq.w  #$01, ($FFFFF634).w
                bpl.s   loc_207A
                move.w  #$0000, ($FFFFF634).w
                move.w  ($FFFFF632).w, D0
                addq.w  #$01, ($FFFFF632).w
                andi.w  #$000F, D0
                move.b  Pal_HTzCyc2(PC, D0), ($FFFFF635).w  ; loc_207C
                lsl.w   #$03, D0
                move.l  $00(A0, D0), ($FFFFFB26).w
                move.l  $04(A0, D0), ($FFFFFB3C).w 
loc_207A:
                rts                  
Pal_HTzCyc2: ; loc_207C:
                dc.w    $0B0B, $0B0A, $080A, $0B0B, $0B0B, $0D0F, $0D0B, $0B0B
PalCycle_HPz: ; loc_208C: ; $08 - Hidden Palace Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl.s   loc_20CC
                move.w  #$0004, ($FFFFF634).w
                lea     (Pal_HPzCyc1), A0       ; loc_2360
                move.w  ($FFFFF632).w, D0
                subq.w  #$02, ($FFFFF632).w
                bcc.s   loc_20AE
                move.w  #$0006, ($FFFFF632).w
loc_20AE:
                lea     ($FFFFFB72).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
                lea     (Pal_HPzCyc2), A0       ; loc_2370
                lea     ($FFFFFAF2).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
loc_20CC:
                rts             
PalCycle_OOz: ; loc_20CE: ; $0A - Oil Ocean Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl.s   loc_20FA
                move.w  #$0007, ($FFFFF634).w
                lea     (Pal_OOzCyc), A0        ; loc_2380
                move.w  ($FFFFF632).w, D0
                addq.w  #$02, ($FFFFF632).w
                andi.w  #$0006, ($FFFFF632).w
                lea     ($FFFFFB54).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
loc_20FA:
                rts    
PalCycle_DHz: ; loc_20FC: ; $0B - Dust Hill Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl.s   loc_2122
                move.w  #$0001, ($FFFFF634).w
                lea     (Pal_DHzCyc), A0        ; loc_2390
                move.w  ($FFFFF632).w, D0
                addq.w  #$02, ($FFFFF632).w
                andi.w  #$0006, ($FFFFF632).w
                move.w  $00(A0, D0), ($FFFFFB36).w
loc_2122:
                rts
PalCycle_CNz: ; loc_2124: ; $0C - Casino Night Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl     loc_21C2
                move.w  #$0007, ($FFFFF634).w
                lea     (Pal_CNzCyc1), A0       ; loc_2398
                move.w  ($FFFFF632).w, D0
                addq.w  #$02, ($FFFFF632).w
                cmpi.w  #$0006, ($FFFFF632).w
                bcs.s   loc_214E
                move.w  #$0000, ($FFFFF632).w
loc_214E:
                lea     $00(A0, D0), A0
                lea     ($FFFFFB00).w, A1
                move.w  $0000(A0), $004A(A1)
                move.w  $0006(A0), $004C(A1)
                move.w  $000C(A0), $004E(A1)
                move.w  $0012(A0), $0056(A1)
                move.w  $0018(A0), $0058(A1)
                move.w  $001E(A0), $005A(A1)
                lea     (Pal_CNzCyc2), A0       ; loc_23BC
                lea     $00(A0, D0), A0
                move.w  $0000(A0), $0064(A1)
                move.w  $0006(A0), $0066(A1)
                move.w  $000C(A0), $0068(A1)
                lea     (Pal_CNzCyc3), A0       ; loc_23CE
                move.w  ($FFFFF652).w, D0
                addq.w  #$02, ($FFFFF652).w
                cmpi.w  #$001C, ($FFFFF652).w
                bcs.s   loc_21B2
                move.w  #$0000, ($FFFFF652).w
loc_21B2:
                lea     ($FFFFFB72).w, A1
                move.w  $00(A0, D0), (A1)+
                move.w  $1C(A0, D0), (A1)+
                move.w  $38(A0, D0), (A1)+
loc_21C2:
                rts                
PalCycle_CPz: ; loc_21C4: ; $0D - Chemical Plant Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl.s   loc_2234
                move.w  #$0007, ($FFFFF634).w
                lea     (Pal_CPzCyc1), A0       ; loc_2422
                move.w  ($FFFFF632).w, D0
                addq.w  #$06, ($FFFFF632).w
                cmpi.w  #$0036, ($FFFFF632).w
                bcs.s   loc_21EC
                move.w  #$0000, ($FFFFF632).w
loc_21EC:
                lea     ($FFFFFB78).w, A1
                move.l  $00(A0, D0), (A1)+
                move.w  $04(A0, D0), (A1)
                lea     (Pal_CPzCyc2), A0       ; loc_2458
                move.w  ($FFFFF652).w, D0
                addq.w  #$02, ($FFFFF652).w
                cmpi.w  #$002A, ($FFFFF652).w
                bcs.s   loc_2214
                move.w  #$0000, ($FFFFF652).w
loc_2214:
                move.w  $00(A0, D0), ($FFFFFB7E).w
                lea     (Pal_CPzCyc3), A0       ; loc_2482
                move.w  ($FFFFF654).w, D0
                addq.w  #$02, ($FFFFF654).w
                andi.w  #$001E, ($FFFFF654).w
                move.w  $00(A0, D0), ($FFFFFB5E).w
loc_2234:
                rts                
PalCycle_NGHz: ; loc_2236: ; $0F - Neo Green Hill Rotating Palette routine
                lea     (Pal_GHzCyc), A0        ; loc_2284
                subq.w  #$01, ($FFFFF634).w
                bpl.s   loc_2262
                move.w  #$0005, ($FFFFF634).w
                move.w  ($FFFFF632).w, D0
                addq.w  #$01, ($FFFFF632).w
                andi.w  #$0003, D0
                lsl.w   #$03, D0
                lea     ($FFFFFB44).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
loc_2262:
                rts  
;Pal_S1TitleCyc: ;loc_2264: ; Left Over - Unused Rotating Palette
                dc.w    $0C42, $0E86, $0ECA, $0EEC, $0EEC, $0C42, $0E86, $0ECA
                dc.w    $0ECA, $0EEC, $0C42, $0E86, $0E86, $0ECA, $0EEC, $0C42                        
Pal_GHzCyc: ; loc_2284: ; $00 - Green Hill Rotating Palette               
                dc.w    $0A86, $0E86, $0EA8, $0ECA, $0ECA, $0A86, $0E86, $0EA8
                dc.w    $0EA8, $0ECA, $0A86, $0E86, $0E86, $0EA8, $0ECA, $0A86
Pal_HTzCyc1: ; loc_22A4: ; $07 - Hill Top Rotating Palette                 
                dc.w    $000E, $006E, $00AE, $00EE, $00EE, $000E, $006E, $00AE
                dc.w    $02CE, $00EE, $000E, $006E, $006E, $04EE, $08EE, $002E
                dc.w    $004E, $008E, $06EE, $0AEE, $08EE, $002E, $006E, $04EE
                dc.w    $02CE, $00EE, $000E, $006E, $006E, $02CE, $00EE, $000E
                dc.w    $000E, $006E, $00AE, $00EE, $00CE, $000C, $004E, $008E
                dc.w    $006E, $00AC, $000A, $002E, $000C, $004C, $008E, $0008
                dc.w    $000A, $002E, $006E, $00AC, $00CE, $000C, $004E, $008E
                dc.w    $00AE, $00EE, $000E, $006E, $006E, $00AE, $00EE, $000E
Pal_WzCyc: ; loc_2324: ; $02 - Wood Rotating Palette 
                dc.w    $0248, $046A, $048C, $06CE, $0248, $046A, $048C, $06CE
Pal_MzCyc1: ; loc_2334: ; $04/$05 - Metropolis Rotating Palette 
                dc.w    $0006, $0008, $000A, $000C, $000A, $0008                 
Pal_MzCyc2: ; loc_2340: ; $04/$05 - Metropolis Rotating Palette 
                dc.w    $0422, $0866, $0ECC, $0422, $0866, $0ECC 
Pal_MzCyc3: ;loc_234C: ; $04/$05 - Metropolis Rotating Palette 
                dc.w    $00A0, $0000, $00EE, $0000, $002E, $0000, $0E2E, $0000
                dc.w    $0E80, $0000
Pal_HPzCyc1: ; loc_2360: ; $08 - Hidden Palace Rotating Palette 
                dc.w    $0E44, $0E82, $0EA8, $0EEE, $0E44, $0E82, $0EA8, $0EEE
Pal_HPzCyc2: ; loc_2370: ; $08 - Hidden Palace Rotating Palette 
                dc.w    $0E84, $0EA6, $0EC6, $0EE6, $0E84, $0EA6, $0EC6, $0EE6
Pal_OOzCyc: ; loc_2380: ; $0A - Oil Ocean Rotating Palette 
                dc.w    $0400, $0602, $0804, $0806, $0400, $0602, $0804, $0806
Pal_DHzCyc: ; loc_2390: ; $0B - Dust Hill Rotating Palette 
                dc.w    $000C, $006E, $00CE, $08EE
Pal_CNzCyc1: ; loc_2398: ; $0C - Casino Night Rotating Palette 
                dc.w    $000C, $00CC, $004C, $004C, $000C, $00CC, $00CC, $004C
                dc.w    $000C, $00EC, $0080, $00C4, $00C4, $00EC, $0080, $0080
                dc.w    $00C4, $00EC
Pal_CNzCyc2: ; loc_23BC: ; $0C - Casino Night Rotating Palette 
                dc.w    $0044, $0088, $00EE, $0088, $00EE, $0044, $00EE, $0044
                dc.w    $0088
Pal_CNzCyc3: ; loc_23CE: ; $0C - Casino Night Rotating Palette  
                dc.w    $00EC, $0EEE, $00EA, $00E4, $06C0, $0CC4, $0E80, $0E40
                dc.w    $0E04, $0C08, $0C2E, $000E, $006E, $00AE, $00AE, $00EC
                dc.w    $0EEE, $00EA, $00E4, $06C0, $0CC4, $0E80, $0E40, $0E04
                dc.w    $0C08, $0C2E, $000E, $006E, $00EE, $00AE, $00EC, $0EEE
                dc.w    $00EA, $00E4, $06C0, $0CC4, $0E80, $0E40, $0E04, $0C08
                dc.w    $0C2E, $000E
Pal_CPzCyc1: ; loc_2422: ; $0D - Chemical Plant Rotating Palette 
                dc.w    $0E40, $0C00, $0C00, $0E60, $0C20, $0C00, $0E40, $0E40
                dc.w    $0C00, $0C20, $0E60, $0C20, $0C00, $0E40, $0C40, $0C00
                dc.w    $0C20, $0E40, $0C00, $0C00, $0E60, $0C20, $0C00, $0E40
                dc.w    $0E20, $0C00, $0C20
Pal_CPzCyc2: ; loc_2458: ; $0D - Chemical Plant Rotating Palette 
                dc.w    $00E0, $00C2, $00A4, $0086, $0068, $004A, $002C, $000E
                dc.w    $020C, $040A, $0608, $0806, $0A04, $0C02, $0E00, $0C20
                dc.w    $0A40, $0860, $0680, $04A0, $02C0
Pal_CPzCyc3: ; loc_2482: ; $0D - Chemical Plant Rotating Palette   
                dc.w    $000E, $000C, $000A, $0008, $0006, $0004, $0002, $0004
                dc.w    $0006, $0008, $000A, $000C, $000E, $002E, $004E, $002E     
loc_24A2:
                tst.b   ($FFFFF65F).w
                beq.s   loc_24DE
                bmi.s   loc_24E0
                subq.b  #$01, ($FFFFF65E).w 
                bpl.s   loc_24DE
                move.b  #$03, ($FFFFF65E).w
                lea     (loc_2516), A0
                move.w  ($FFFFF65C).w, D0
                addq.w  #$08, ($FFFFF65C).w
                cmpi.w  #$0030, ($FFFFF65C).w
                bcs.s   loc_24D2
                move.b  #$FF, ($FFFFF65F).w
loc_24D2:
                lea     ($FFFFFB04).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
loc_24DE:
                rts
loc_24E0:
                subq.b  #$01, ($FFFFF65E).w
                bpl.s   loc_24DE
                move.b  #$07, ($FFFFF65E).w
                lea     (loc_2516), A0
                move.w  ($FFFFF65C).w, D0
                addq.w  #$08, ($FFFFF65C).w
                cmpi.w  #$0078, ($FFFFF65C).w
                bcs.s   loc_2508
                move.w  #$0030, ($FFFFF65C).w
loc_2508:
                lea     ($FFFFFB04).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
                rts
loc_2516:              
                dc.w    $0A22, $0C42, $0E44, $0E66, $0844, $0A64, $0E66, $0E88
                dc.w    $0666, $0A86, $0E88, $0EAA, $0488, $0AA8, $0EAA, $0ECC
                dc.w    $04AA, $0ACA, $0ECC, $0EEE, $04CC, $0AEC, $0EEE, $0EEE
                dc.w    $04EE, $0AEE, $0EEE, $0EEE, $06EE, $0EEE, $0EEE, $0EEE
                dc.w    $08EE, $0EEE, $0EEE, $0EEE, $06EE, $0CEE, $0EEE, $0EEE
                dc.w    $04EE, $0AEE, $0EEE, $0EEE, $02EE, $08EE, $0CEE, $0EEE
                dc.w    $00EE, $06EE, $0AEE, $0EEE, $00EE, $04EE, $08EE, $0CEE
                dc.w    $00EE, $06EE, $0AEE, $0EEE, $00EE, $08EE, $0CEE, $0EEE
Pal_FadeTo: ; loc_2596:
                move.w  #$003F, ($FFFFF626).w
Pal_FadeTo2: ; loc_259C:                
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                moveq   #$00, D1
                move.b  ($FFFFF627).w, D0
loc_25AE:                
                move.w  D1, (A0)+
                dbra    D0, loc_25AE
                move.w  #$0015, D4
loc_25B8:                
                move.b  #$12, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                bsr.s   Pal_FadeIn              ; loc_25CE
                bsr     RunPLC                  ; loc_17A8
                dbra    D4, loc_25B8
                rts
Pal_FadeIn: ; loc_25CE:                
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                lea     ($FFFFFB80).w, A1
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                adda.w  D0, A1
                move.b  ($FFFFF627).w, D0
loc_25E4:                
                bsr.s   Pal_AddColor            ; loc_260E
                dbra    D0, loc_25E4
                tst.b   (Water_flag).w
                beq.s   loc_260C
                moveq   #$00, D0
                lea     ($FFFFFA80).w, A0
                lea     ($FFFFFA00).w, A1
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                adda.w  D0, A1
                move.b  ($FFFFF627).w, D0
loc_2606:                 
                bsr.s   Pal_AddColor            ; loc_260E                 
                dbra    D0, loc_2606
loc_260C:                
                rts
Pal_AddColor: ; loc_260E:  
                move.w  (A1)+, D2
                move.w  (A0), D3
                cmp.w   D2, D3
                beq.s   Pal_NoAdd               ; loc_2636
                move.w  D3, D1
                addi.w  #$0200, D1                 
                cmp.w   D2, D1
                bhi.s   Pal_AddGreen            ; loc_2624
                move.w  D1, (A0)+
                rts 
Pal_AddGreen: ; loc_2624:
                move.w  D3, D1
                addi.w  #$0020, D1
                cmp.w   D2, D1
                bhi.s   Pal_AddRed              ; loc_2632
                move.w  D1, (A0)+ 
                rts
Pal_AddRed: ; loc_2632:               
                addq.w  #$02, (A0)+
                rts 
Pal_NoAdd: ; loc_2636:
                addq.w  #$02, A0
                rts
Pal_FadeFrom: ; loc_263A:
                move.w  #$003F, ($FFFFF626).w
                move.w  #$0015, D4
loc_2644:
                move.b  #$12, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                bsr.s   Pal_FadeOut             ; loc_265A
                bsr     RunPLC                  ; loc_17A8
                dbra    D4, loc_2644
                rts
Pal_FadeOut: ; loc_265A:                
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                move.b  ($FFFFF627).w, D0
loc_266A:
                bsr.s   Pal_DecColor            ; loc_2688
                dbra    D0, loc_266A
                moveq   #$00, D0
                lea     ($FFFFFA80).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                move.b  ($FFFFF627).w, D0
loc_2680:                
                bsr.s   Pal_DecColor            ; loc_2688  
                dbra    D0, loc_2680
                rts
Pal_DecColor: ; loc_2688:
                move.w  (A0), D2
                beq.s   Pal_NoDec               ; loc_26B4
                move.w  D2, D1
                andi.w  #$000E, D1
                beq.s   Pal_DecGreen            ; loc_2698
                subq.w  #$02, (A0)+
                rts
Pal_DecGreen: ; loc_2698:
                move.w  D2, D1
                andi.w  #$00E0, D1
                beq.s   Pal_DecBlue             ; loc_26A6
                subi.w  #$0020, (A0)+
                rts
Pal_DecBlue: ; loc_26A6:
                move.w  D2, D1
                andi.w  #$0E00, D1
                beq.s   Pal_NoDec               ; loc_26B4
                subi.w  #$0200, (A0)+
                rts
Pal_NoDec: ; loc_26B4:
                addq.w  #2, A0
                rts 
Pal_MakeWhite: ; loc_26B8:               ; Special Stage Blank Screen
                move.w  #$003F, ($FFFFF626).w
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                move.w  #$0EEE, D1
                move.b  ($FFFFF627).w, D0
loc_26D2:                
                move.w  D1, (A0)+
                dbra    D0, loc_26D2
                move.w  #$0015, D4
loc_26DC:                
                move.b  #$12, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                bsr.s   Pal_WhiteToBlack        ; loc_26F2
                bsr     RunPLC                  ; loc_17A8
                dbra    D4, loc_26DC
                rts
Pal_WhiteToBlack: ; loc_26F2:
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                lea     ($FFFFFB80).w, A1
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                adda.w  D0, A1
                move.b  ($FFFFF627).w, D0
loc_2708:               
                bsr.s   Pal_DecColor2           ; loc_2732
                dbra    D0, loc_2708
                tst.b   (Water_flag).w
                beq.s   loc_2730
                moveq   #$00, D0
                lea     ($FFFFFA80).w, A0
                lea     ($FFFFFA00).w, A1
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                adda.w  D0, A1
                move.b  ($FFFFF627).w, D0
loc_272A:                
                bsr.s   Pal_DecColor2           ; loc_2732
                dbra    D0, loc_272A
loc_2730:
                rts
Pal_DecColor2: ; loc_2732:
                move.w  (A1)+, D2
                move.w  (A0), D3
                cmp.w   D2, D3
                beq.s   loc_275E
                move.w  D3, D1
                subi.w  #$0200, D1
                bcs.s   loc_274A
                cmp.w   D2, D1
                bcs.s   loc_274A
                move.w  D1, (A0)+
                rts
loc_274A:
                move.w  D3, D1
                subi.w  #$0020, D1
                bcs.s   loc_275A
                cmp.w   D2, D1
                bcs.s   loc_275A
                move.w  D1, (A0)+
                rts
loc_275A:
                subq.w  #$02, (A0)+
                rts
loc_275E:
                addq.w  #$02, A0
                rts                        ; Special Stage Blank Screen End...
Pal_MakeFlash: ; loc_2762:          ; Called by Special Stage Routine   
                move.w  #$003F, ($FFFFF626).w
                move.w  #$0015, D4
loc_276C:                
                move.b  #$12, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                bsr.s   Pal_ToWhite             ; loc_2782
                bsr     RunPLC                  ; loc_17A8
                dbra    D4, loc_276C
                rts
Pal_ToWhite: ; loc_2782:
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                move.b  ($FFFFF627).w, D0
loc_2792:                
                bsr.s   Pal_AddColor2           ; loc_27B0
                dbra    D0, loc_2792
                moveq   #$00, D0
                lea     ($FFFFFA80).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                move.b  ($FFFFF627).w, D0
loc_27A8:                
                bsr.s   Pal_AddColor2           ; loc_27B0
                dbra    D0, loc_27A8
                rts
Pal_AddColor2: ; loc_27B0:
                move.w  (A0), D2
                cmpi.w  #$0EEE, D2
                beq.s   loc_27EC
                move.w  D2, D1
                andi.w  #$000E, D1
                cmpi.w  #$000E, D1
                beq.s   loc_27C8
                addq.w  #$02, (A0)+
                rts
loc_27C8:
                move.w  D2, D1
                andi.w  #$00E0, D1
                cmpi.w  #$00E0, D1
                beq.s   loc_27DA
                addi.w  #$0020, (A0)+
                rts
loc_27DA:
                move.w  D2, D1
                andi.w  #$0E00, D1
                cmpi.w  #$0E00, D1
                beq.s   loc_27EC
                addi.w  #$0200, (A0)+
                rts
loc_27EC:
                addq.w  #$02, A0
                rts                 
PalCycle_Sega: ; loc_27F0: ; "Sega" Logo rotating Palette
                tst.b   ($FFFFF635).w
                bne.s   loc_2850
                lea     ($FFFFFB20).w, A1
                lea     (Pal_Sega1), A0  ; loc_28A6 ; Load "Sega" Logo Palette
                moveq   #$05, D1
                move.w  ($FFFFF632).w, D0
loc_2806:                
                bpl.s   loc_2810
                addq.w  #$02, A0
                subq.w  #$01, D1
                addq.w  #$02, D0
                bra.s   loc_2806
loc_2810:  
                move.w  D0, D2
                andi.w  #$001E, D2
                bne.s   loc_281A
                addq.w  #$02, D0
loc_281A:
                cmpi.w  #$0060, D0
                bcc.s   loc_2824
                move.w  (A0)+, $00(A1, D0)
loc_2824:
                addq.w  #$02, D0
                dbra    D1, loc_2810
                move.w  ($FFFFF632).w, D0
                addq.w  #$02, D0
                move.w  D0, D2
                andi.w  #$001E, D2
                bne.s   loc_283A
                addq.w  #$02, D0
loc_283A:
                cmpi.w  #$0064, D0
                blt.s   loc_2848
                move.w  #$0401, ($FFFFF634).w
                moveq   #-$C, D0
loc_2848:
                move.w  D0, ($FFFFF632).w
                moveq   #$01, D0
                rts                  
loc_2850:
                subq.b  #$01, ($FFFFF634).w
                bpl.s   loc_28A2
                move.b  #$04, ($FFFFF634).w
                move.w  ($FFFFF632).w, D0
                addi.w  #$000C, D0
                cmpi.w  #$0030, D0
                bcs.s   loc_286E
                moveq   #$00, D0
                rts
loc_286E:
                move.w  D0, ($FFFFF632).w
                lea     (Pal_Sega2), A0 ; loc_28B2 ; Load "Sega" Logo Palette
                lea     $00(A0, D0), A0
                lea     ($FFFFFB04).w, A1
                move.l  (A0)+, (A1)+
                move.l  (A0)+, (A1)+
                move.w  (A0)+, (A1)
                lea     ($FFFFFB20).w, A1
                moveq   #$00, D0
                moveq   #$2C, D1
loc_288E:                
                move.w  D0, D2
                andi.w  #$001E, D2
                bne.s   loc_2898
                addq.w  #$02, D0
loc_2898:
                move.w  (A0), $00(A1, D0)
                addq.w  #$02, D0
                dbra    D1, loc_288E
loc_28A2:
                moveq   #$01, D0
                rts
Pal_Sega1: ; loc_28A6: ; "Sega" Logo Palette              
                dc.w    $0EEE, $0EEA, $0EE4, $0EC0, $0EE4, $0EEA
Pal_Sega2: ; loc_28B2: ; "Sega" Logo Palette              
                dc.w    $0EEC, $0EEA, $0EEA, $0EEA, $0EEA, $0EEA, $0EEC, $0EEA
                dc.w    $0EE4, $0EC0, $0EC0, $0EC0, $0EEC, $0EEA, $0EE4, $0EC0
                dc.w    $0EA0, $0E60, $0EEA, $0EE4, $0EC0, $0EA0, $0E80, $0E00
PalLoad1: ; loc_28E2:
                lea     (PalPointers), A1       ; loc_294E
                lsl.w   #3, D0
                adda.w  D0, A1
                move.l  (A1)+, A2
                move.w  (A1)+, A3
                adda.w  #$0080, A3
                move.w  (A1)+, D7
loc_28F6:
                move.l  (A2)+, (A3)+
                dbra    D7, loc_28F6
                rts
PalLoad2: ;loc_28FE:
                lea     (PalPointers), A1       ; loc_294E
                lsl.w   #3, D0
                adda.w  D0, A1
                move.l  (A1)+, A2
                move.w  (A1)+, A3
                move.w  (A1)+, D7  
loc_290E:
                move.l  (A2)+, (A3)+
                dbra    D7, loc_290E
                rts   
PalLoad3_Water: ; loc_2916: ; Load Underwater palette routine
                lea     (PalPointers), A1       ; loc_294E
                lsl.w   #$03, D0
                adda.w  D0, A1
                move.l  (A1)+, A2
                move.w  (A1)+, A3
                suba.w  #$0080, A3
                move.w  (A1)+, D7
loc_292A:
                move.l  (A2)+, (A3)+
                dbra    D7, loc_292A
                rts
PalLoad4_Water: ;loc_2932:
                lea     (PalPointers), A1       ; loc_294E
                lsl.w   #$03, D0
                adda.w  D0, A1
                move.l  (A1)+, A2
                move.w  (A1)+, A3
                suba.w  #$0100, A3
                move.w  (A1)+, D7
loc_2946:
                move.l  (A2)+, (A3)+
                dbra    D7, loc_2946
                rts
PalPointers: ; loc_294E: ; Palette List                
                dc.l    Pal_SegaBg, $FB00001F ; Sega Logo
                dc.l    Pal_TitleScreen, $FB00001F ; Title Screen
                dc.l    Pal_LevelSelectMenu, $FB00001F ; Level Select Menu
                dc.l    Pal_SonicAndTails, $FB000007 ; Sonic & Tails
                dc.l    Pal_GHz, $FB200017 ; Green Hill
                dc.l    Pal_GHz, $FB200017 ; Level $01 
                dc.l    Pal_Wz, $FB200017 ; Wood
                dc.l    Pal_GHz, $FB200017 ; Level $03
                dc.l    Pal_Mz, $FB200017 ; Metropolis
                dc.l    Pal_Mz, $FB200017 ; Metropolis
                dc.l    Pal_CNz2, $FB200017 ; Level $06 / Casino Night Act 2
                dc.l    Pal_HTz, $FB200017 ; Hill Top
                dc.l    Pal_HPz, $FB200017 ; Hidden Palace
                dc.l    Pal_GHz, $FB200017 ; Level $09
                dc.l    Pal_OOz, $FB200017 ; Oil Ocean
                dc.l    Pal_DHz, $FB200017 ; Dust Hill
                dc.l    Pal_CNz1, $FB200017 ; Casino Night
                dc.l    Pal_CPz, $FB200017 ; Chemical Plant
                dc.l    Pal_GHz, $FB200017 ; Genocide City
                dc.l    Pal_NGHz, $FB200017 ; Neo Green Hill
                dc.l    Pal_GHz, $FB200017 ; Death Egg
                dc.l    Pal_HPzWater, $FB00001F ; Hidden Palace Underwater 
                dc.l    Pal_CPzWater, $FB00001F ; Chemical Plant Underwater  
                dc.l    Pal_NGHzWater, $FB00001F ; Neo Green Hill Underwater
                dc.l    Pal_SpecialStage, $FB00001F
Pal_SegaBg: ; loc_2A16: ; Sega Logo
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
Pal_TitleScreen: ; loc_2A96: ; Title Screen
                dc.w    $0C00, $0002, $0800, $0026, $0048, $006C, $008E, $00AE
                dc.w    $04A0, $0040, $0060, $0080, $00A0, $06A4, $0000, $0000
                dc.w    $0C8C, $0800, $0000, $0A66, $0EA8, $0ECA, $0EEE, $00AE
                dc.w    $008E, $006C, $08CE, $0EEC, $004A, $0006, $0000, $0000
                dc.w    $0C00, $0C00, $0E22, $0E44, $0E66, $0E88, $0EEE, $0AAA
                dc.w    $0888, $0666, $0024, $0248, $08AE, $068C, $0000, $0ECA
                dc.w    $0C00, $0600, $0C00, $0E44, $0E66, $0E88, $0EEE, $00AE
                dc.w    $006A, $0026, $00EE, $0EAA, $000C, $0006, $0002, $0000
Pal_LevelSelectMenu: ; loc_2B16: ; Level Select Menu
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0EEE
                dc.w    $0C00, $0024, $0246, $0468, $068A, $08AC, $0ACE, $08AC
                dc.w    $068A, $0468, $0ACE, $0ACE, $0246, $0024, $0000, $0000
                dc.w    $0C00, $0024, $0246, $0468, $068A, $08AC, $0ACE, $08AC
                dc.w    $068A, $0468, $0024, $0246, $08AC, $068A, $0000, $00EE
                dc.w    $0C00, $0024, $0246, $0468, $068A, $08AC, $0ACE, $08AC
                dc.w    $068A, $0468, $0ACE, $0ACE, $0468, $0246, $0002, $0000 
Pal_SonicAndTails: ; loc_2B96: ; Sonic & Tails
                dc.w    $0000, $0000, $0A22, $0C42, $0E44, $0E66, $0EEE, $0AAA
                dc.w    $0888, $0444, $08AE, $046A, $000E, $0008, $00AE, $008E 
Pal_GHz: ; loc_2BB6: ; Green Hill
                dc.w    $0C20, $0000, $0E62, $0A86, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0E86, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0C20, $0002, $0800, $0026, $0048, $006C, $008E, $00AE
                dc.w    $04A0, $0040, $0060, $0080, $00A0, $06A4, $00C6, $00E8
                dc.w    $0C20, $0800, $0000, $0E86, $0ECA, $020A, $0EEE, $0E6E
                dc.w    $0C4C, $0A2A, $0EEC, $0080, $064E, $042C, $00A0, $00E8                  
Pal_Wz: ; loc_2C16: ; Wood              
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0000, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0E88, $0204, $0026, $0248, $046A, $048C, $06CE, $0002
                dc.w    $0000, $0220, $0040, $0060, $0080, $02A0, $06E0, $0A0C
                dc.w    $0E88, $0222, $0424, $0248, $046A, $048C, $06CE, $0402
                dc.w    $0200, $0646, $0060, $0040, $0000, $0220, $0240, $0460
Pal_Mz: ; loc_2C76: ; Metropolis
                dc.w    $0A00, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0222, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0000, $0422, $0866, $0ECC, $0048, $0008, $0ACE, $0004
                dc.w    $0008, $0862, $0642, $0420, $0006, $006E, $000E, $00A0
                dc.w    $0000, $0000, $0CE2, $08C0, $0480, $0260, $0EEE, $04AC
                dc.w    $006A, $0026, $0048, $0004, $0040, $0020, $0008, $000E
Pal_HTz: ; loc_2CD6: ; Hill Top
                dc.w    $0C20, $0000, $0200, $000E, $006E, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0E86, $00EE, $0088, $00AE, $00EE
                dc.w    $0E42, $0200, $0E86, $0640, $0860, $0A82, $0CA4, $0EC6
                dc.w    $0024, $0040, $0062, $0082, $00A4, $006C, $00C4, $00E8
                dc.w    $0E42, $0004, $0E64, $0E86, $0EA8, $0028, $0EEC, $0E6E
                dc.w    $0C4C, $0A2A, $0ECA, $0080, $026E, $004C, $00A4, $00E8   
Pal_HPz: ; loc_2D36: ; Hidden Palace
                dc.w    $0800, $0000, $0242, $0464, $0686, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $08EA, $046A, $00EE, $0088, $0044, $000E
                dc.w    $0200, $0402, $0604, $0806, $0808, $0602, $0620, $0202
                dc.w    $0640, $0026, $0068, $028A, $06CE, $0024, $0046, $04AC
                dc.w    $0200, $0020, $0040, $0060, $0080, $00C0, $04E6, $0EEE
                dc.w    $0602, $0E44, $0E82, $0EA8, $0EEE, $0024, $0046, $04AC
Pal_HPzWater: ; loc_2D96: ; Hidden Palace Underwater   
                dc.w    $0000, $0402, $0A20, $0B40, $0B60, $0B80, $0ECA, $0CA8
                dc.w    $0A84, $0860, $0AA8, $0884, $0428, $0424, $08AA, $088A
                dc.w    $0000, $0202, $0242, $0464, $0686, $0442, $0EAA, $0D88
                dc.w    $0D66, $0A22, $0666, $046A, $06CA, $0484, $0EEE, $000E
                dc.w    $0400, $0A20, $0C22, $0E26, $0E28, $0A22, $0A40, $0C22
                dc.w    $0A60, $0E28, $0E4A, $0E6A, $0CAA, $0E24, $0E26, $0E8A
                dc.w    $0400, $0440, $0660, $0880, $08A0, $08C0, $0AE4, $0EEA
                dc.w    $0A60, $0E84, $0EA6, $0EC6, $0EE6, $0E6A, $0E8A, $0CAA
Pal_OOz: ; loc_2E16: ; Oil Ocean
                dc.w    $006E, $0000, $040A, $082E, $0C8E, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $048E, $00EE, $0088, $06AE, $08CE
                dc.w    $006E, $0200, $0402, $0602, $0804, $0824, $0846, $0A68
                dc.w    $0C8A, $0EEE, $0400, $0602, $0804, $0806, $0400, $00EE
                dc.w    $006E, $0202, $0024, $0026, $0046, $0068, $028A, $04AC
                dc.w    $06CE, $0CEE, $0020, $0040, $0060, $00A0, $06E6, $0E0E
Pal_DHz: ;loc_2E76: ; Dust Hill
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $000E, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0000, $0020, $006C, $004A, $0026, $0200, $0CE6, $06C4
                dc.w    $0482, $0A60, $0060, $06EE, $04CE, $00AA, $0C8E, $0A6C
                dc.w    $0000, $008E, $006C, $004A, $0026, $0402, $00C0, $0060
                dc.w    $0200, $0604, $0826, $0A48, $0EE0, $0A60, $0000, $0000
Pal_CNz1: ; loc_2ED6: ; Casino Night
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0000, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0000, $0000, $0C42, $0E86, $0EC8, $000C, $004C, $00CC
                dc.w    $0800, $084E, $0EEE, $00EC, $00C4, $0080, $0C8E, $000E
                dc.w    $0000, $0000, $0044, $0088, $00EE, $0040, $0060, $0280
                dc.w    $04C0, $00EC, $00AE, $006E, $0EEE, $0000, $0800, $0000
Pal_CNz2: ; loc_2F36: ; Level $06 / Casino Night Act 2
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0000, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0000, $0000, $0C42, $0E86, $0EC8, $000C, $004C, $00CC
                dc.w    $0800, $084E, $0EEE, $00EC, $00C4, $0080, $0C8E, $000E
                dc.w    $0000, $0000, $0044, $0088, $00EE, $0040, $0060, $0280
                dc.w    $04C0, $00EC, $00AE, $006E, $0EEE, $0000, $0800, $0000
Pal_CPz: ; loc_2F96: ; Chemical Plant
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0000, $00EE, $0088, $0EA8, $0000
                dc.w    $0002, $0000, $0006, $0044, $0086, $00AA, $00CC, $00CE
                dc.w    $008E, $004E, $002C, $002A, $0008, $0004, $0EEE, $000E
                dc.w    $0002, $0000, $0222, $0444, $0888, $0AAA, $0EEE, $0E40
                dc.w    $0C00, $0800, $00CE, $028E, $0E40, $0C00, $0C00, $00E0
Pal_CPzWater: ; loc_2FF6: ; Chemical Plant Underwater  
                dc.w    $0C42, $0806, $0E08, $0E28, $0E2A, $0E4C, $0ECE, $0E8E
                dc.w    $0E6E, $0C2A, $0E8E, $0C4E, $080E, $080E, $088E, $086E
                dc.w    $0A06, $0A06, $0E2C, $0E2C, $0E4E, $0A0A, $0E8E, $0E4E
                dc.w    $0E2E, $0E0A, $0E0C, $0C08, $0A8E, $0A2E, $0A06, $0A06
                dc.w    $0802, $0802, $0804, $0802, $0804, $0808, $082A, $082C
                dc.w    $080C, $080C, $080A, $0808, $0806, $0802, $0C4C, $080C
                dc.w    $0A06, $0A06, $0C08, $0E0A, $0E2E, $0E4E, $0E8E, $0E4E
                dc.w    $0E0C, $0C08, $0A6E, $0C2E, $0E06, $0E06, $0E06, $0A86
Pal_NGHz: ;loc_3076: ; Neo Green Hill
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0000, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0020, $0022, $0A86, $0E86, $0EA8, $0ECA, $06EE, $06CC
                dc.w    $02AA, $0044, $0066, $00E8, $00C4, $0080, $0040, $0000
                dc.w    $0020, $0002, $06E2, $02C0, $000E, $0008, $02AE, $008C
                dc.w    $006A, $0024, $0048, $00E8, $00C4, $0080, $0040, $0800
Pal_NGHzWater: ; loc_30D6: ; Neo Green Hill Underwater
                dc.w    $0020, $0000, $0A24, $0C44, $0E46, $0E68, $0ECC, $0CA8
                dc.w    $0A86, $0642, $0CAE, $086A, $060E, $0408, $068C, $046A
                dc.w    $0020, $0202, $0242, $0464, $0686, $0442, $0EAA, $0C88
                dc.w    $0A66, $0622, $0844, $046A, $06CA, $0484, $0EEE, $000E
                dc.w    $0020, $0022, $0CC8, $0884, $0A84, $0CA6, $0CE8, $0AC8
                dc.w    $08A4, $0240, $0662, $04E8, $02C4, $0080, $0040, $0060
                dc.w    $0020, $0002, $06E8, $02C0, $060E, $0408, $086C, $064A
                dc.w    $0428, $0004, $0206, $04E8, $02C4, $0080, $0040, $0800
Pal_SpecialStage: ; loc_3156:              
                dc.w    $0400, $0000, $0822, $0A44, $0C66, $0E88, $0EEE, $0AAA
                dc.w    $0888, $0444, $08AE, $046A, $000E, $0008, $0004, $00EE
                dc.w    $0400, $0000, $0024, $0068, $00AC, $02EE, $0EEE, $0AAA
                dc.w    $0888, $0444, $0AE4, $06A2, $00EE, $0088, $0044, $0000
                dc.w    $0400, $0000, $0204, $0628, $0A4C, $0C6E, $0ECE, $0800
                dc.w    $0C42, $0E86, $0ECA, $0EEC, $0000, $0EE0, $0AA0, $0440
                dc.w    $0400, $0000, $0060, $00A0, $00C6, $00EA, $0AEC, $0EEA
                dc.w    $0EE0, $0AA0, $0880, $0660, $0440, $0EE0, $0AA0, $0440
                nop    
DelayProgram: ; loc_31D8: 
                move.w  #$2300, SR
loc_31DC:                 
                tst.b   ($FFFFF62A).w
                bne.s   loc_31DC
                rts
PseudoRandomNumber: ; loc_31E4:
                move.l  ($FFFFF636).w, D1 
                bne.s   loc_31F0
                move.l  #$2A6D365A, D1
loc_31F0:                
                move.l  D1, D0
                asl.l   #$02, D1
                add.l   D0, D1
                asl.l   #$03, D1
                add.l   D0, D1                
                move.w  D1, D0
                swap.w  D1
                add.w   D1, D0
                move.w  D0, D1
                swap.w  D1
                move.l  D1, ($FFFFF636).w
                rts
CalcSine: ; loc_320A:                
                andi.w  #$00FF, D0
                add.w   D0, D0
                addi.w  #$0080, D0
                move.w  Sine_Data(PC, D0), D1   ; loc_3222
                subi.w  #$0080, D0 
                move.w  Sine_Data(PC, D0), D0   ; loc_3222
                rts
Sine_Data: ; loc_3222:                 
                dc.w    $0000, $0006, $000C, $0012, $0019, $001F, $0025, $002B
                dc.w    $0031, $0038, $003E, $0044, $004A, $0050, $0056, $005C
                dc.w    $0061, $0067, $006D, $0073, $0078, $007E, $0083, $0088
                dc.w    $008E, $0093, $0098, $009D, $00A2, $00A7, $00AB, $00B0
                dc.w    $00B5, $00B9, $00BD, $00C1, $00C5, $00C9, $00CD, $00D1
                dc.w    $00D4, $00D8, $00DB, $00DE, $00E1, $00E4, $00E7, $00EA
                dc.w    $00EC, $00EE, $00F1, $00F3, $00F4, $00F6, $00F8, $00F9
                dc.w    $00FB, $00FC, $00FD, $00FE, $00FE, $00FF, $00FF, $00FF
                dc.w    $0100, $00FF, $00FF, $00FF, $00FE, $00FE, $00FD, $00FC
                dc.w    $00FB, $00F9, $00F8, $00F6, $00F4, $00F3, $00F1, $00EE
                dc.w    $00EC, $00EA, $00E7, $00E4, $00E1, $00DE, $00DB, $00D8
                dc.w    $00D4, $00D1, $00CD, $00C9, $00C5, $00C1, $00BD, $00B9
                dc.w    $00B5, $00B0, $00AB, $00A7, $00A2, $009D, $0098, $0093
                dc.w    $008E, $0088, $0083, $007E, $0078, $0073, $006D, $0067
                dc.w    $0061, $005C, $0056, $0050, $004A, $0044, $003E, $0038
                dc.w    $0031, $002B, $0025, $001F, $0019, $0012, $000C, $0006
                dc.w    $0000, $FFFA, $FFF4, $FFEE, $FFE7, $FFE1, $FFDB, $FFD5
                dc.w    $FFCF, $FFC8, $FFC2, $FFBC, $FFB6, $FFB0, $FFAA, $FFA4
                dc.w    $FF9F, $FF99, $FF93, $FF8B, $FF88, $FF82, $FF7D, $FF78
                dc.w    $FF72, $FF6D, $FF68, $FF63, $FF5E, $FF59, $FF55, $FF50
                dc.w    $FF4B, $FF47, $FF43, $FF3F, $FF3B, $FF37, $FF33, $FF2F
                dc.w    $FF2C, $FF28, $FF25, $FF22, $FF1F, $FF1C, $FF19, $FF16
                dc.w    $FF14, $FF12, $FF0F, $FF0D, $FF0C, $FF0A, $FF08, $FF07
                dc.w    $FF05, $FF04, $FF03, $FF02, $FF02, $FF01, $FF01, $FF01
                dc.w    $FF00, $FF01, $FF01, $FF01, $FF02, $FF02, $FF03, $FF04
                dc.w    $FF05, $FF07, $FF08, $FF0A, $FF0C, $FF0D, $FF0F, $FF12
                dc.w    $FF14, $FF16, $FF19, $FF1C, $FF1F, $FF22, $FF25, $FF28
                dc.w    $FF2C, $FF2F, $FF33, $FF37, $FF3B, $FF3F, $FF43, $FF47
                dc.w    $FF4B, $FF50, $FF55, $FF59, $FF5E, $FF63, $FF68, $FF6D
                dc.w    $FF72, $FF78, $FF7D, $FF82, $FF88, $FF8B, $FF93, $FF99
                dc.w    $FF9F, $FFA4, $FFAA, $FFB0, $FFB6, $FFBC, $FFC2, $FFC8
                dc.w    $FFCF, $FFD5, $FFDB, $FFE1, $FFE7, $FFEE, $FFF4, $FFFA
                dc.w    $0000, $0006, $000C, $0012, $0019, $001F, $0025, $002B
                dc.w    $0031, $0038, $003E, $0044, $004A, $0050, $0056, $005C
                dc.w    $0061, $0067, $006D, $0073, $0078, $007E, $0083, $0088
                dc.w    $008E, $0093, $0098, $009D, $00A2, $00A7, $00AB, $00B0
                dc.w    $00B5, $00B9, $00BD, $00C1, $00C5, $00C9, $00CD, $00D1
                dc.w    $00D4, $00D8, $00DB, $00DE, $00E1, $00E4, $00E7, $00EA
                dc.w    $00EC, $00EE, $00F1, $00F3, $00F4, $00F6, $00F8, $00F9
                dc.w    $00FB, $00FC, $00FD, $00FE, $00FE, $00FF, $00FF, $00FF
CalcAngle: ; loc_34A2:                
                movem.l D3-D4, -(A7)
                moveq   #$00, D3
                moveq   #$00, D4
                move.w  D1, D3
                move.w  D2, D4
                or.w    D3, D4
                beq.s   loc_34FE
                move.w  D2, D4
                tst.w   D3
                bpl     loc_34BC
                neg.w   D3 
loc_34BC:                
                tst.w   D4
                bpl     loc_34C4
                neg.w   D4 
loc_34C4:                
                cmp.w   D3, D4
                bcc     loc_34D6
                lsl.l   #$08, D4
                divu.w  D3, D4
                moveq   #$00, D0
                move.b  AngleData(PC, D4), D0   ; loc_3508
                bra.s   loc_34E0
loc_34D6:
                lsl.l   #$08, D3
                divu.w  D4, D3
                moveq   #$40, D0
                sub.b   AngleData(PC, D3), D0   ; loc_3508
loc_34E0: 
                tst.w   D1
                bpl     loc_34EC
                neg.w   D0
                addi.w  #$0080, D0
loc_34EC:   
                tst.w   D2
                bpl     loc_34F8
                neg.w   D0
                addi.w  #$0100, D0
loc_34F8:   
                movem.l (A7)+, D3-D4
                rts              
loc_34FE:  
                move.w  #$0040, D0
                movem.l (A7)+, D3-D4
                rts
AngleData: ; loc_3508:  
                dc.b    $00, $00, $00, $00, $01, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02, $02
                dc.b    $03, $03, $03, $03, $03, $03, $03, $04, $04, $04, $04, $04, $04, $05, $05, $05
                dc.b    $05, $05, $05, $06, $06, $06, $06, $06, $06, $06, $07, $07, $07, $07, $07, $07
                dc.b    $08, $08, $08, $08, $08, $08, $08, $09, $09, $09, $09, $09, $09, $0A, $0A, $0A
                dc.b    $0A, $0A, $0A, $0A, $0B, $0B, $0B, $0B, $0B, $0B, $0B, $0C, $0C, $0C, $0C, $0C
                dc.b    $0C, $0C, $0D, $0D, $0D, $0D, $0D, $0D, $0D, $0E, $0E, $0E, $0E, $0E, $0E, $0E
                dc.b    $0F, $0F, $0F, $0F, $0F, $0F, $0F, $10, $10, $10, $10, $10, $10, $10, $11, $11
                dc.b    $11, $11, $11, $11, $11, $11, $12, $12, $12, $12, $12, $12, $12, $13, $13, $13
                dc.b    $13, $13, $13, $13, $13, $14, $14, $14, $14, $14, $14, $14, $14, $15, $15, $15
                dc.b    $15, $15, $15, $15, $15, $15, $16, $16, $16, $16, $16, $16, $16, $16, $17, $17
                dc.b    $17, $17, $17, $17, $17, $17, $17, $18, $18, $18, $18, $18, $18, $18, $18, $18
                dc.b    $19, $19, $19, $19, $19, $19, $19, $19, $19, $19, $1A, $1A, $1A, $1A, $1A, $1A
                dc.b    $1A, $1A, $1A, $1B, $1B, $1B, $1B, $1B, $1B, $1B, $1B, $1B, $1B, $1C, $1C, $1C
                dc.b    $1C, $1C, $1C, $1C, $1C, $1C, $1C, $1C, $1D, $1D, $1D, $1D, $1D, $1D, $1D, $1D
                dc.b    $1D, $1D, $1D, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1F, $1F
                dc.b    $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $20, $20, $20, $20, $20, $20
                dc.b    $20, $00 
                nop 
;===============================================================================
; Sega Logo
; [ Begin ]              
;===============================================================================                 
SegaScreen: ; loc_360C: ; SEGA Logo
                move.b  #$FD, D0
                bsr     PlayMusic              ; loc_14C0
                bsr     ClearPLC                ; loc_179A
                bsr     Pal_FadeFrom            ; loc_263A 
                lea     ($00C00004), A6
                move.w  #$8004, (A6)
                move.w  #$8230, (A6)
                move.w  #$8407, (A6)
                move.w  #$8700, (A6)
                move.w  #$8B00, (A6)
                move.w  #$8C81, (A6)
                clr.b   (Water_fullscreen_flag).w
                move    #$2700, SR
                move.w  ($FFFFF60C).w, D0
                andi.b  #$BF, D0
                move.w  D0, ($00C00004)
                bsr     ClearScreen             ; loc_1418
                move.l  #$40000000, ($00C00004)
                lea     (SegaLogo), A0          ; Load Sega Sprites ; loc_70960  
                bsr     NemDec              ; loc_15FC
                lea     ($FFFF0000), A1
                lea     (SegaLogo_Mappings), A0 ; Load Sega Mappings ; loc_70DD0
                move.w  #$0000, D0
                bsr     EniDec               ; loc_18DA
                lea     ($FFFF0000), A1
                move.l  #$65100003, D0
                moveq   #$17, D1
                moveq   #$07, D2
                bsr     ShowVDPGraphics         ; loc_154C
                lea     ($FFFF0180), A1
                move.l  #$40000003, D0
                moveq   #$27, D1
                moveq   #$1B, D2
                bsr     ShowVDPGraphics         ; loc_154C
                tst.b   ($FFFFFFF8).w
                bmi.s   loc_36BE
                lea     ($FFFF0A40), A1
                move.l  #$453A0003, D0
                moveq   #$02, D1
                moveq   #$01, D2
                bsr     ShowVDPGraphics         ; loc_154C
loc_36BE:
                moveq   #$00, D0
                bsr     PalLoad2                ; loc_28FE
                move.w  #$FFF6, ($FFFFF632).w
                move.w  #$0000, ($FFFFF634).w
                move.w  #$0000, ($FFFFF662).w
                move.w  #$0000, ($FFFFF660).w
                move.w  #$00B4, ($FFFFF614).w
                move.w  ($FFFFF60C).w, D0
                ori.b   #$40, D0
                move.w  D0, ($00C00004)
Sega_WaitPalette: ; loc_36F0:                   
                move.b  #$02, ($FFFFF62A).w               
                bsr     DelayProgram            ; loc_31D8
                bsr     PalCycle_Sega           ; loc_27F0 ; Load "Sega" rotating palette
                bne.s   Sega_WaitPalette        ; loc_36F0 
                move.b  #$FA, D0                ; Load "Sega" sound
                bsr     PlaySound                ; loc_14C6
                move.b  #$02, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                move.w  #$00B4, ($FFFFF614).w
Sega_WaitEnd: ; loc_3718:                
                move.b  #$14, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                tst.w   ($FFFFF614).w
                beq.s   Sega_GoToTitleScreen    ; loc_3730
                andi.b  #$80, ($FFFFF605).w
                beq.s   Sega_WaitEnd            ; loc_3718   
Sega_GoToTitleScreen: ; loc_3730:                
                move.b  #$04, ($FFFFF600).w
                rts
;===============================================================================
; Sega Logo
; [ End ]              
;=============================================================================== 
;===============================================================================
; Title Screen
; [ Begin ]              
;===============================================================================                   
; loc_3738:
TitleScreen:
		move.b	#$FD,d0
		bsr.w	PlayMusic
		bsr.w	ClearPLC
		bsr.w	Pal_FadeFrom
		move	#$2700,sr
		lea	($C00004),a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$9001,(a6)
		move.w	#$9200,(a6)
		move.w	#$8B03,(a6)
		move.w	#$8720,(a6)
		clr.b	(Water_fullscreen_flag).w
		move.w	#$8C81,(a6)
		bsr.w	ClearScreen
		lea	($FFFFAC00).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_3784:
		move.l	d0,(a1)+
		dbf	d1,loc_3784
		lea	($FFFFB000).w,a1
		moveq	#0,d0
		move.w	#$7FF,d1

loc_3794:
		move.l	d0,(a1)+
		dbf	d1,loc_3794
		lea	($FFFFF700).w,a1
		moveq	#0,d0
		move.w	#$3F,d1

loc_37A4:
		move.l	d0,(a1)+
		dbf	d1,loc_37A4
		lea	($FFFFEE00).w,a1
		moveq	#0,d0
		move.w	#$3F,d1

loc_37B4:
		move.l	d0,(a1)+
		dbf	d1,loc_37B4
		lea	($FFFFFB80).w,a1
		moveq	#0,d0
		move.w	#$1F,d1

loc_37C4:
		move.l	d0,(a1)+
		dbf	d1,loc_37C4

		; leftover from Sonic 1, which had a "SONIC TEAM PRESENTS"
		; screen load Sonic's palette for the font
		moveq	#3,d0
		bsr.w	PalLoad1
		bsr.w	Pal_FadeTo

		move	#$2700,sr
		move.l	#$40000000,($C00004)
		lea	(Title_Screen_Bg_Wings),a0
		bsr.w	NemDec
		move.l	#$40000001,($C00004)
		lea	(Title_Screen_Sonic_Tails),a0
		bsr.w	NemDec
		lea	($C00000),a6
		move.l	#$50000003,4(a6)
		lea	(Art_Text),a5
		move.w	#$28F,d1

loc_3818:
		move.w	(a5)+,(a6)
		dbf	d1,loc_3818
		nop
		move.b	#0,($FFFFFE30).w
		move.w	#0,(Debug_placement_mode).w
		move.w	#0,($FFFFFFF0).w
		move.w	#0,($FFFFFFDA).w
		move.w	#$F00,($FFFFFE10).w
		move.w	#0,($FFFFF634).w
		bsr.w	Pal_FadeFrom

		move	#$2700,sr
		lea	($FFFF0000).l,a1
		lea	(TS_Wings_MapUnc_Sonic).l,a0
		move.w	#0,d0
		bsr.w	EniDec
                lea     ($FFFF0000), A1
                move.l  #$40000003, D0
                moveq   #$27, D1
                moveq   #$1B, D2
                bsr     ShowVDPGraphics         ; loc_154C
                lea     ($FFFF0000), A1
                lea     (Title_Screen_Bg_Mappings), A0 ; loc_71024 Load Title Screen Background mappings
                move.w  #$0000, D0
                bsr     EniDec               ; loc_18DA
                lea     ($FFFF0000), A1
                move.l  #$60000003, D0
                moveq   #$1F, D1
                moveq   #$1B, D2
                bsr     ShowVDPGraphics         ; loc_154C
                lea     ($FFFF0000), A1
                lea     (Title_Screen_R_Bg_Mappings), A0 ; loc_712D8 Load Title Screen Background mappings (Right Side) 
                move.w  #$0000, D0
                bsr     EniDec               ; loc_18DA
                lea     ($FFFF0000), A1
                move.l  #$60400003, D0
                moveq   #$1F, D1
                moveq   #$1B, D2
                bsr     ShowVDPGraphics         ; loc_154C
                moveq   #$01, D0                ; Load Title Screen Palette
                bsr     PalLoad1                ; loc_28E2      
                move.b  #$99, D0                ; Load Title Screen Music
                bsr     PlayMusic              ; loc_14C0
                move.b  #$00, (Debug_mode_flag).w
                move.w  #$0000, ($FFFFFFD8).w
                move.w  #$0178, ($FFFFF614).w
                lea     ($FFFFB080).w, A1
                moveq   #$00, D0
                move.w  #$000F, D1
loc_38EE:                
                move.l  D0, (A1)+
                dbra    D1, loc_38EE   
                
                move.b  #$0E, ($FFFFB040).w
                move.b  #$0E, ($FFFFB080).w
                move.b  #$01, ($FFFFB09A).w
                jsr     (RunObjects)          ; loc_CFD0
                jsr     (Build_Sprites)         ; loc_D4DA
                moveq   #$00, D0
                bsr     LoadPLC2                ; loc_176E
                move.w  #$0000, ($FFFFFFD4).w
                move.w  #$0000, ($FFFFFFD6).w
                move.b  #$01, ($FFFFFFD0).w
                move.w  #$0004, ($FFFFEED2).w
                move.w  #$0000, ($FFFFE500).w
                move.w  ($FFFFF60C).w, D0
                ori.b   #$40, D0
                move.w  D0, ($00C00004)
                bsr     Pal_FadeTo              ; loc_2596
TitleScreen_Loop: ; loc_3948:                
                move.b  #$04, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                jsr     (RunObjects)          ; loc_CFD0
                bsr     loc_5E38         ; Load Title Screen Background Scroll 
                jsr     (Build_Sprites)         ; loc_D4DA
                bsr     RunPLC                  ; loc_17A8
                tst.b   ($FFFFFFF8).w
                bpl.s   Code_Sequence_J         ; loc_3974
                lea     (Level_Select_Code_J), A0 ; loc_3B5A
                bra.s   Level_Select_Cheat_Test ; loc_397A
Code_Sequence_J: ; loc_3974:
                lea     (Level_Select_Code_US), A0 ; loc_3B52
Level_Select_Cheat_Test: ;  loc_397A:                
                move.w  ($FFFFFFD4).w, D0
                adda.w  D0, A0
                move.b  ($FFFFF605).w, D0
                andi.b  #$0F, D0
                cmp.b   (A0), D0
                bne.s   Title_Cheat_NoMatch     ; loc_39C0
                addq.w  #1, ($FFFFFFD4).w
                tst.b   D0
                bne.s   Title_Cheat_CountC      ; loc_39D2
                lea     ($FFFFFFD0).w, A0
                move.w  ($FFFFFFD6).w, D1
                lsr.w   #1, D1
                andi.w  #$0003, D1
                beq.s   Title_Cheat_PlayRing    ; loc_39B0
                tst.b   ($FFFFFFF8).w
                bpl.s   Title_Cheat_PlayRing    ; loc_39B0
                moveq   #$01, D1
                move.b  D1, $01(A0, D1)                   
Title_Cheat_PlayRing: ; loc_39B0:
                move.b  #$01, $00(A0, D1)
                move.b  #$B5, D0
                bsr     PlaySound                ; loc_14C6
                bra.s   Title_Cheat_CountC      ; loc_39D2
Title_Cheat_NoMatch: ; loc_39C0:                
                tst.b   D0
                beq.s   Title_Cheat_CountC      ; loc_39D2
                cmpi.w  #$0009, ($FFFFFFD4).w
                beq.s   Title_Cheat_CountC      ; loc_39D2
                move.w  #$0000, ($FFFFFFD4).w
Title_Cheat_CountC: ; loc_39D2:
                move.b  ($FFFFF605).w, D0
                andi.b  #$20, D0
                beq.s   Title_Cheat_NoC         ; loc_39E0
                addq.w  #$01, ($FFFFFFD6).w
Title_Cheat_NoC: ; loc_39E0:
                tst.w   ($FFFFF614).w
                beq     Demo_Mode               ; loc_3B62
                andi.b  #$80, ($FFFFF605).w
                beq     TitleScreen_Loop        ; loc_3948
loc_39F2:                
                tst.b   ($FFFFFFD0).w
                beq     PlayLevel               ; loc_3B12
                btst    #6, ($FFFFF604).w
                beq     PlayLevel               ; loc_3B12
                move.b  #$8A, D0                ; Load Level Select Menu Music
                bsr     PlayMusic              ; loc_14C0
                moveq   #$02, D0
                bsr     PalLoad2                ; loc_28FE
                lea     ($FFFFE000).w, A1
                moveq   #$00, D0
                move.w  #$00DF, D1
LevelSelect_ClearScroll: ; loc_3A1C:                
                move.l  D0, (A1)+
                dbra    D1, LevelSelect_ClearScroll ; loc_3A1C 
                move.l  D0, ($FFFFF616).w
                move    #$2700, SR
                lea     ($00C00000), A6
                move.l  #$60000003, ($00C00004)
                move.w  #$03FF, D1
LevelSelect_ClearVRAM: ; loc_3A3E:                
                move.l  D0, (A6) 
                dbra    D1, LevelSelect_ClearVRAM ; loc_3A3E
                bsr     LevelSelect_TextLoad ; loc_3CC4
LevelSelect_Loop: ; loc_3A48:                
                move.b  #$04, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                bsr     LevelSelect_Controls    ; loc_3C2E
                bsr     RunPLC                  ; loc_17A8
                tst.l   ($FFFFF680).w
                bne.s   LevelSelect_Loop        ; loc_3A48   
                andi.b  #$F0, ($FFFFF605).w
                beq.s   LevelSelect_Loop        ; loc_3A48
                move.w  #$0000, ($FFFFFFD8).w
                btst    #4, ($FFFFF604).w
                beq.s   loc_3A7C
                move.w  #$0001, ($FFFFFFD8).w
loc_3A7C:
                move.w  ($FFFFFF82).w, D0
                cmpi.w  #$001A, D0
                bne.s   loc_3A9C
                btst    #6, ($FFFFF605).w
                bne.s   LevelSelect_Loop        ; loc_3A48
                move.w  ($FFFFFF84).w, D0
                addi.w  #$0080, D0
                bsr     PlaySound                ; loc_14C6
                bra.s   LevelSelect_Loop        ; loc_3A48
loc_3A9C:
                add.w   D0, D0               
                move.w  Level_Select_Array(PC, D0), D0 ; loc_3AD4 Load Level Select Array
                bmi     LevelSelect_Loop        ; loc_3A48
                cmpi.w  #$8000, D0
                bne.s   Level_Select_Level      ; loc_3B0A
                move.b  #$10, ($FFFFF600).w
                clr.w   ($FFFFFE10).w
                move.b  #$03, ($FFFFFE12).w
                moveq   #$00, D0
                move.w  D0, ($FFFFFE20).w
                move.l  D0, ($FFFFFE22).w
                move.l  D0, ($FFFFFE26).w
                move.l  #$00001388, ($FFFFFFC0).w
                rts
Level_Select_Array: ; loc_3AD4: ; Level Select Array
                dc.w    $0000, $0001         ; GHz
                dc.w    $0200, $0201         ; Wz
                dc.w    $0400, $0401, $0500  ; Mz
                dc.w    $0700, $0701         ; HTz
                dc.w    $0800, $0801         ; HPz
                dc.w    $0A00, $0A01         ; OOz
                dc.w    $0B00, $0B01         ; DHz
                dc.w    $0C00, $0C01         ; CNz
                dc.w    $0D00, $0D01         ; CPz
                dc.w    $0E00, $0E01         ; GCz
                dc.w    $0F00, $0F01         ; NGHz
                dc.w    $1000, $1001         ; Dez
                dc.w    $8000                ; SS 
                dc.w    $0000                ; Sound Test
Level_Select_Level: ; loc_3B0A:
                andi.w  #$3FFF, D0
                move.w  D0, ($FFFFFE10).w
PlayLevel: ; loc_3B12:                
                move.b  #$0C, ($FFFFF600).w
                move.b  #$03, ($FFFFFE12).w
                moveq   #$00, D0
                move.w  D0, ($FFFFFE20).w
                move.l  D0, ($FFFFFE22).w
                move.l  D0, ($FFFFFE26).w
                move.b  D0, ($FFFFFE16).w
                move.b  D0, ($FFFFFE57).w
                move.l  D0, ($FFFFFE58).w
                move.l  D0, ($FFFFFE5C).w
                move.b  D0, ($FFFFFE18).w
                move.l  #$00001388, ($FFFFFFC0).w
                move.b  #$E0, D0
                bsr     PlaySound                ; loc_14C6
                rts  
Level_Select_Code_US: ; loc_3B52:
                dc.b    $01, $02, $02, $02, $02, $01, $00, $FF  ; Code sequence  
Level_Select_Code_J:  ; loc_3B5A:
                dc.b    $01, $02, $02, $02, $02, $01, $00, $FF  ; Code sequence      
Demo_Mode: ; loc_3B62:
                move.w  #$001E, ($FFFFF614).w
loc_3B68:                
                move.b  #$04, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                bsr     RunPLC                  ; loc_17A8
                move.w  ($FFFFB008).w, D0
                addq.w  #2, D0
                move.w  D0, ($FFFFB008).w
                cmpi.w  #$1C00, D0
                bcs.s   Run_Demo_Mode           ; loc_3B8E
                move.b  #$00, ($FFFFF600).w
                rts
Run_Demo_Mode: ; loc_3B8E:
                andi.b  #$80, ($FFFFF605).w 
                bne     loc_39F2
                tst.w   ($FFFFF614).w
                bne     loc_3B68
                move.b  #$E0, D0
                bsr     PlaySound                ; loc_14C6
                move.w  ($FFFFFFF2).w, D0
                andi.w  #$0007, D0
                add.w   D0, D0
                move.w  Demo_Mode_Level_Array(PC, D0), D0 ; loc_3C16 Load Demo sequence array
                move.w  D0, ($FFFFFE10).w
                addq.w  #1, ($FFFFFFF2).w
                cmpi.w  #$0004, ($FFFFFFF2).w
                bcs.s   loc_3BCC
                move.w  #$0000, ($FFFFFFF2).w
loc_3BCC:
                move.w  #$0001, ($FFFFFFF0).w
                move.b  #$08, ($FFFFF600).w
                cmpi.w  #$0000, D0
                bne.s   loc_3BE4
                move.w  #$0001, ($FFFFFFD8).w
loc_3BE4:
                cmpi.w  #$0600, D0
                bne.s   loc_3BF8
                move.b  #$10, ($FFFFF600).w
                clr.w   ($FFFFFE10).w
                clr.b   ($FFFFFE16).w
loc_3BF8:
                move.b  #$03, ($FFFFFE12).w
                moveq   #$00, D0
                move.w  D0, ($FFFFFE20).w
                move.l  D0, ($FFFFFE22).w
                move.l  D0, ($FFFFFE26).w
                move.l  #$00001388, ($FFFFFFC0).w
                rts
Demo_Mode_Level_Array: ; loc_3C16: ; Demo sequence array
                dc.w    $0D00, $0000, $0800, $0700, $0500, $0500, $0500, $0500
                dc.w    $0400, $0400, $0400, $0400
LevelSelect_Controls: ; loc_3C2E:
                move.b  ($FFFFF605).w, D1
                andi.b  #$03, D1
                bne.s   loc_3C3E
                subq.w  #$01, ($FFFFFF80).w
                bpl.s   loc_3C78
loc_3C3E:
                move.w  #$000B, ($FFFFFF80).w
                move.b  ($FFFFF604).w, D1
                andi.b  #$03, D1
                beq.s   loc_3C78
                move.w  ($FFFFFF82).w, D0
                btst    #$00, D1
                beq.s   loc_3C5E
                subq.w  #$01, D0
                bcc.s   loc_3C5E
                moveq   #$1A, D0
loc_3C5E:
                btst    #$01, D1
                beq.s   loc_3C6E
                addq.w  #$01, D0
                cmpi.w  #$001B, D0
                bcs.s   loc_3C6E
                moveq   #$00, D0
loc_3C6E:
                move.w  D0, ($FFFFFF82).w
                bsr     LevelSelect_TextLoad    ; loc_3CC4
                rts
loc_3C78:
                cmpi.w  #$001A, ($FFFFFF82).w
                bne.s   loc_3CC2
                move.w  ($FFFFFF84).w, D0
                move.b  ($FFFFF605).w, D1
                andi.b  #$0C, D1
                beq.s   loc_3CAA
                btst    #$02, D1
                beq.s   loc_3C9A
                subq.b  #$01, D0
                bcc.s   loc_3C9A
                moveq   #$7F, D0
loc_3C9A:
                btst    #$03, D1
                beq.s   loc_3CAA
                addq.b  #$01, D0
                cmpi.w  #$0080, D0
                bcs.s   loc_3CAA
                moveq   #$00, D0
loc_3CAA:
                btst    #$06, ($FFFFF605).w
                beq.s   loc_3CBA
                addi.b  #$10, D0
                andi.b  #$7F, D0
loc_3CBA:
                move.w  D0, ($FFFFFF84).w
                bsr     LevelSelect_TextLoad    ; loc_3CC4
loc_3CC2:                
                rts
LevelSelect_TextLoad: ;loc_3CC4:
                lea     (Level_Select_Text), A1 ; loc_3D7C Load Level Select Menu - Text
                lea     ($00C00000), A6
                move.l  #$608C0003, D4
                move.w  #$8680, D3
                moveq   #$1A, D1
loc_3CDC:                
                move.l  D4, $0004(A6)
                bsr     loc_3D60
                addi.l  #$00800000, D4
                dbra    D1, loc_3CDC 
                moveq   #$00, D0
                move.w  ($FFFFFF82).w, D0
                move.w  D0, D1
                move.l  #$608C0003, D4
                lsl.w   #$07, D0
                swap.w  D0
                add.l   D0, D4
                lea     (Level_Select_Text), A1 ; loc_3D7C Load Level Select Menu - Text
                mulu.w  #$001B, D1
                adda.w  D1, A1
                move.w  #$C680, D3
                move.l  D4, $0004(A6)
                bsr     loc_3D60
                move.w  #$8680, D3
                cmpi.w  #$001A, ($FFFFFF82).w
                bne.s   loc_3D2A
                move.w  #$C680, D3
loc_3D2A:
                move.l  #$6DB00003, ($00C00004)
                move.w  ($FFFFFF84).w, D0
                addi.w  #$0080, D0
                move.b  D0, D2
                lsr.b   #$04, D0
                bsr     loc_3D4C
                move.b  D2, D0
                bsr     loc_3D4C
                rts
loc_3D4C:
                andi.w  #$000F, D0
                cmpi.b  #$0A, D0
                bcs.s   loc_3D5A
                addi.b  #$07, D0
loc_3D5A:
                add.w   D3, D0
                move.w  D0, (A6)
                rts
loc_3D60:
                moveq   #$1A, D2
loc_3D62:                
                moveq   #$00, D0
                move.b  (A1)+, D0
                bpl.s   loc_3D72
                move.w  #$0000, (A6)
                dbra    D2, loc_3D62 
                rts
loc_3D72:
                add.w   D3, D0
                move.w  D0, (A6)
                dbra    D2, loc_3D62
                rts

_0 = $00
_1 = $01
_2 = $02                
_A = $11
_B = $12
_C = $13
_D = $14                
_E = $15
_F = $16
_G = $17
_H = $18
_I = $19
_J = $1A
_K = $1B
_L = $1C
_M = $1D
_N = $1E
_O = $1F
_P = $20
_Q = $21
_R = $22
_S = $23
_T = $24
_U = $25
_V = $26
_W = $27
_X = $28
_Y = $0F
_Z = $10
__ = $FF                
Level_Select_Text: ; loc_3D7C: ; Level Select Menu Text                 
                dc.b    _G,_R,_E,_E,_N,__,_H,_I,_L,_L,__,_Z,_O,_N,_E,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1  
                dc.b    _W,_O,_O,_D,__,_Z,_O,_N,_E,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1 
                dc.b    _M,_E,_T,_R,_O,_P,_O,_L,_I,_S,__,_Z,_O,_N,_E,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_2     
                dc.b    _H,_I,_L,_L,__,_T,_O,_P,__,_Z,_O,_N,_E,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
                dc.b    _H,_I,_D,_D,_E,_N,__,_P,_A,_L,_A,_C,_E,__,_Z,_O,_N,_E,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
                dc.b    _O,_I,_L,__,_O,_C,_E,_A,_N,__,_Z,_O,_N,_E,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1 
                dc.b    _D,_U,_S,_T,__,_H,_I,_L,_L,__,_Z,_O,_N,_E,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1                  
                dc.b    _C,_A,_S,_I,_N,_O,__,_N,_I,_G,_H,_T,__,_Z,_O,_N,_E,__,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1 
                dc.b    _C,_H,_E,_M,_I,_C,_A,_L,__,_P,_L,_A,_N,_T,__,_Z,_O,_N,_E,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1 
                dc.b    _G,_E,_N,_O,_C,_I,_D,_E,__,_C,_I,_T,_Y,__,_Z,_O,_N,_E,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1 
                dc.b    _N,_E,_O,__,_G,_R,_E,_E,_N,__,_H,_I,_L,_L,__,_Z,_O,_N,_E,__,_S,_T,_A,_G,_E,__,_0  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1  
                dc.b    _D,_E,_A,_T,_H,__,_E,_G,_G,__,_Z,_O,_N,_E,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1  
                dc.b    _S,_P,_E,_C,_I,_A,_L,__,_S,_T,_A,_G,_E,__,__,__,__,__,__,__,__,__,__,__,__,__,__
                dc.b    _S,_O,_U,_N,_D,__,_S,_E,_L,_E,_C,_T,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__
                dc.b    $00 ; Filler
Unused_Code1: ; loc_4056:                 
                lea     ($FFFF0000), A1
                move.w  #$02EB, D2
Unused_Code1_Loop: ; loc_4060:                
                move.w  (A1), D0
                move.w  D0, D1
                andi.w  #$F800, D1
                andi.w  #$07FF, D0
                lsr.w   #$01, D0
                or.w    D0, D1
                move.w  D1, (A1)+
                dbra    D2, Unused_Code1_Loop   ; loc_4060
                rts
Unused_Code2: ; loc_4078:                
                lea     ($00FE0000), A1
                lea     ($00FE0080), A2
                lea     ($FFFF0000), A3
                move.w  #$003F, D1
Unused_Code2_Loop: ; loc_408E:                
                bsr     Unused_Code4            ; loc_4120
                bsr     Unused_Code4            ; loc_4120
                dbra    D1, Unused_Code2_Loop   ; loc_408E
                lea     ($00FE0000), A1
                lea     ($00FF0000), A2
                move.w  #$003F, D1
Unused_Code2_Loop2: ; loc_40AA:                
                move.w  #$0000, (A2)+
                dbra    D1, Unused_Code2_Loop2  ; loc_40AA
                move.w  #$3FBF, D1
Unused_Code2_Loop3: ; loc_40B6:                
                move.w  (A1)+, (A2)+
                dbra    D1, Unused_Code2_Loop3  ; loc_40B6
                rts
Unused_Code3: ; loc_40BE:              
                lea     ($00FE0000), A1
                lea     ($FFFF0000), A3
                moveq   #$1F, D0
Unused_Code3_Loop: ; loc_40CC:                
                move.l  (A1)+, (A3)+
                dbra    D0, Unused_Code3_Loop   ; loc_40CC
                moveq   #$00, D7
                lea     ($00FE0000), A1
                move.w  #$00FF, D5
Unused_Code3_Loop2: ; loc_40DE:                
                lea     ($FFFF0000), A3
                move.w  D7, D6
Unused_Code3_Loop3: ; loc_40E6:                
                movem.l A1-A3, -(A7)
                move.w  #$003F, D0
Unused_Code3_Loop4: ; loc_40EE:                
                cmpm.w  (A1)+, (A3)+
                bne.s   Unused_Code3_loc_4104
                dbra    D0, Unused_Code3_Loop4  ; loc_40EE
                movem.l (A7)+, A1-A3
                adda.w  #$0080, A1
                dbra    D5, Unused_Code3_Loop2  ; loc_40DE
                bra.s   Unused_Code3_loc_411E
Unused_Code3_loc_4104:
                movem.l (A7)+, A1-A3
                adda.w  #$0080, A3
                dbra    D6, Unused_Code3_Loop3  ; loc_40E6
                moveq   #$1F, D0
Unused_Code3_Loop5: ; loc_4112:                
                move.l  (A1)+, (A3)+
                dbra    D0, Unused_Code3_Loop5  ; loc_4112
                addq.l  #$01, D7
                dbra    D5, Unused_Code3_Loop2  ; loc_40DE
Unused_Code3_loc_411E:
                bra.s   Unused_Code3_loc_411E                   
Unused_Code4: ; loc_4120:
                moveq   #$07, D0
Unused_Code4_Loop: ; loc_4122:                
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                dbra    D0, Unused_Code4_Loop   ; loc_4122
                adda.w  #$0080, A1
                adda.w  #$0080, A2
                rts                                                
PlayList: ; loc_4140:               
                dc.b    $82, $82, $83, $90, $83, $83, $93, $96, $86, $8F, $81, $85, $84, $8D, $8D, $87 
Level: ; loc_4150: ; Demo Mode / Normal Game Play
                bset    #$07, ($FFFFF600).w
                tst.w   ($FFFFFFF0).w
                bmi.s   Level_Init              ; loc_4164
                move.b  #$F9, D0
                bsr     PlaySound                ; loc_14C6
Level_Init: ; loc_4164:                
                bsr     ClearPLC                ; loc_179A
                bsr     Pal_FadeFrom            ; loc_263A 
                tst.w   ($FFFFFFF0).w
                bmi.s   loc_41C0
                move    #$2700, SR
                move.l  #$70000002, ($00C00004)
                lea     (Title_Cards), A0 ; loc_7EA04  / Load Title Cards sprites
                bsr     NemDec              ; loc_15FC
                bsr     ClearScreen             ; loc_1418
                move    #$2300, SR
                moveq   #$00, D0
                move.w  D0, ($FFFFFE04).w
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                lea     (TilesMainTable), A2    ; loc_24354
                lea     $00(A2, D0), A2
                moveq   #$00, D0
                move.b  (A2), D0
                beq.s   loc_41BA
                bsr     LoadPLC                 ; loc_173C
loc_41BA:
                moveq   #$01, D0
                bsr     LoadPLC                 ; loc_173C
loc_41C0:
                lea     ($FFFFAC00).w, A1
                moveq   #$00, D0
                move.w  #$00FF, D1
loc_41CA:
                move.l  D0, (A1)+
                dbra    D1, loc_41CA
                lea     ($FFFFB000).w, A1
                moveq   #$00, D0
                move.w  #$07FF, D1
loc_41DA:
                move.l  D0, (A1)+
                dbra    D1, loc_41DA
                lea     ($FFFFF628).w, A1
                moveq   #$00, D0
                move.w  #$0015, D1
loc_41EA:
                move.l  D0, (A1)+
                dbra    D1, loc_41EA
                lea     ($FFFFF700).w, A1
                moveq   #$00, D0
                move.w  #$003F, D1
loc_41FA:
                move.l  D0, (A1)+
                dbra    D1, loc_41FA
                lea     ($FFFFFE60).w, A1
                moveq   #$00, D0
                move.w  #$0047, D1
loc_420A:
                move.l  D0, (A1)+
                dbra    D1, loc_420A
                cmpi.w  #$0D01, ($FFFFFE10).w  ; If Chemical Plant
                beq.s   Init_Water             ; loc_4228
                cmpi.b  #$0F, ($FFFFFE10).w    ; If Neo Green Hill
                beq.s   Init_Water             ; loc_4228
                cmpi.b  #$08, ($FFFFFE10).w    ; If Not Hidden Palace
                bne.s   Init_No_Water          ; loc_4234
Init_Water: ; loc_4228:
                move.b  #$01, (Water_flag).w
                move.w  #$0000, ($FFFFFFD8).w  ; If Water Level Clear Two Player Flag
Init_No_Water: ; loc_4234:
                lea     ($00C00004), A6
                move.w  #$8B03, (A6)
                move.w  #$8230, (A6)
                move.w  #$8407, (A6)
                move.w  #$857C, (A6)
                move.w  #$9001, (A6)
                move.w  #$8004, (A6)
                move.w  #$8720, (A6)
                btst    #$05, ($FFFFF604).w
                beq.s   loc_4262
                move.w  #$8C89, (A6)
loc_4262:
                move.w  #$8ADF, ($FFFFF624).w
                tst.w   ($FFFFFFD8).w
                beq.s   loc_427C
                move.w  #$8A6B, ($FFFFF624).w
                move.w  #$8014, (A6)
                move.w  #$8C87, (A6)

loc_427C:
		move.w	($FFFFF624).w,(a6)
		move.l	#$FFFFDC00,($FFFFDCFC).w
		tst.b	(Water_flag).w
		beq.s	Level_LoadPal
		move.w	#$8014,(a6)
		moveq	#0,d0
		move.w	($FFFFFE10).w,d0
		; this limits the water table to stages after HPZ
		subi.w	#$800,d0
		ror.b	#1,d0
		lsr.w	#6,d0
		andi.w	#$FFFE,d0
		lea	(WaterHeight),a1	; load water height array
		move.w	(a1,d0.w),d0
		move.w	d0,(Water_Level_1).w	; set water heights
		move.w	d0,(Water_Level_2).w
		move.w	d0,(Water_Level_2).w
		clr.b	(Water_routine).w	; clear water routine counter
		clr.b	(Water_fullscreen_flag).w	; clear water movement
		move.b	#1,(Water_on).w		; enable water
; loc_42C8: LevelInit_NoWater:
Level_LoadPal:
		move.w	#$1E,($FFFFFE14).w

		moveq	#3,d0
                bsr.w	PalLoad2	; load Sonic's (and Tails') palette

		tst.b	(Water_flag).w	; is this a water level?
		beq.s	Level_GetBgm	; if not, branch

		moveq	#$15,d0			; use HPZ underwater palette
		cmpi.b	#8,($FFFFFE10).w	; is this Hidden Palace Zone?
		beq.s	Level_WaterPal		; if yes, branch
		moveq	#$16,d0			; use CPZ underwater palette
		cmpi.b	#$D,($FFFFFE10).w	; if this Chemical Plant Zone?
		beq.s	Level_WaterPal		; if yes, branch
		moveq	#$17,d0			; use NGHZ underwater palette
; loc_42F0: LevelInit_UnderwaterPalette:
Level_WaterPal:
		bsr.w	PalLoad3_Water		; ACTUALLY load the underwater palette
		tst.b	($FFFFFE30).w		; is this the start of a level?
		beq.s	Level_GetBgm		; if not, branch
		move.b	($FFFFFE53).w, (Water_fullscreen_flag).w
; loc_4300: LevelInit_NoUnderwaterPalette:
Level_GetBgm:
                tst.w   ($FFFFFFF0).w
                bmi.s   loc_434E
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                lea     PlayList(PC), A1        ; loc_4140
                move.b  $00(A1, D0), D0
                bsr     PlayMusic              ; loc_14C0
                move.b  #$34, ($FFFFB080).w     ; Load Title Cards Object
LevelInit_TitleCard: ; loc_431E:                
                move.b  #$0C, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                jsr     RunObjects            ; loc_CFD0
                jsr     Build_Sprites           ; loc_D4DA
                bsr     RunPLC                  ; loc_17A8
                move.w  ($FFFFB108).w, D0
                cmp.w   ($FFFFB130).w, D0
                bne.s   LevelInit_TitleCard     ; loc_431E 
                tst.l   ($FFFFF680).w
                bne.s   LevelInit_TitleCard     ; loc_431E
                jsr     Head_Up_Display_Base    ; loc_23184 Call HUD routine
loc_434E:
                moveq   #$03, D0
                bsr     PalLoad1                ; loc_28E2
                bsr     Level_Size_Load         ; loc_5904
                bsr     Background_Scroll_Layer ; loc_5D5C
                bset    #$02, ($FFFFEE50).w
                bsr     Main_Level_Load_16_128_Blocks ; loc_779A
                jsr     Load_16x16_Mappings_For_Dyn_Sprites ; loc_2293A
                bsr     Load_Tiles_From_Start   ; loc_76BE
                jsr     loc_135DA
                bsr     Load_Colision_Index     ; loc_4AAA
                bsr     WaterEffects           ; loc_465A
                move.b  #$01, ($FFFFB000).w  ; Load Sonic Object
                tst.w   ($FFFFFFF0).w
                bmi.s   Skip_Head_Up_Display ; loc_4390                 
                move.b  #$21, ($FFFFB380).w  ; Load HUD Object
Skip_Head_Up_Display: ; loc_4390:                
                move.b  #$02, ($FFFFB040).w  ; Load Tails Object
                move.w  ($FFFFB008).w, ($FFFFB048).w
                move.w  ($FFFFB00C).w, ($FFFFB04C).w
                subi.w  #$0020, ($FFFFB048).w
                tst.b   ($FFFFFFD2).w
                beq.s   loc_43BC
                btst    #$06, ($FFFFF604).w
                beq.s   loc_43BC
                move.b  #$01, (Debug_mode_flag).w
loc_43BC:
                move.w  #$0000, ($FFFFF602).w
                move.w  #$0000, ($FFFFF604).w
                tst.b   (Water_flag).w
                beq.s   loc_43E6
                move.b  #$04, ($FFFFB780).w
                move.w  #$0060, ($FFFFB788).w
                move.b  #$04, ($FFFFB7C0).w
                move.w  #$0120, ($FFFFB7C8).w
loc_43E6:
                cmpi.b  #$0A, ($FFFFFE10).w
                bne.s   loc_43F4
                move.b  #$07, ($FFFFB780).w
loc_43F4:
                jsr     Load_Object_Pos         ; loc_E250
                jsr     Load_Ring_Pos           ; loc_DE34
                jsr     RunObjects            ; loc_CFD0
                jsr     Build_Sprites           ; loc_D4DA
                bsr     JumpToDynamic_Art_Cues  ; loc_51F8
                moveq   #$00, D0
                tst.b   ($FFFFFE30).w
                bne.s   loc_4424
                move.w  D0, ($FFFFFE20).w
                move.l  D0, ($FFFFFE22).w
                move.b  D0, ($FFFFFE1B).w
loc_4424:                
                move.b  D0, ($FFFFFE1A).w
                move.b  D0, ($FFFFFE2C).w
                move.b  D0, ($FFFFFE2D).w
                move.b  D0, ($FFFFFE2E).w
                move.b  D0, ($FFFFFE2F).w
                move.w  D0, (Debug_placement_mode).w
                move.w  D0, ($FFFFFE02).w
                bsr     Oscillate_Num_Init      ; loc_4B64
                move.b  #$01, ($FFFFFE1F).w
                move.b  #$01, ($FFFFFE1D).w
                move.b  #$01, ($FFFFFE1E).w
                move.w  #$0004, ($FFFFEED2).w
                move.w  #$0000, ($FFFFE500).w
                move.w  #$0000, ($FFFFF790).w
                move.w  #$0000, ($FFFFF740).w
                lea     (Demo_Index), A1        ; loc_49F2
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                lsl.w   #$02, D0
                move.l  $00(A1, D0), A1
                tst.w   ($FFFFFFF0).w
                bpl.s   loc_4498
                lea     (Demo_End_Index), A1    ; loc_4A7A
                move.w  ($FFFFFFF4).w, D0
                subq.w  #$01, D0
                lsl.w   #$02, D0
                move.l  $00(A1, D0), A1
loc_4498:
                move.b  $0001(A1), ($FFFFF792).w
                subq.b  #$01, ($FFFFF792).w
                lea     (Demo_Tails_Ghz), A1   ; loc_4DF8 Green Hill - Tails Demo control
                move.b  $0001(A1), ($FFFFF742).w
                subq.b  #$01, ($FFFFF742).w
                move.w  #$0668, ($FFFFF614).w
                tst.w   ($FFFFFFF0).w
                bpl.s   loc_44D2
                move.w  #$021C, ($FFFFF614).w
                cmpi.w  #$0004, ($FFFFFFF4).w
                bne.s   loc_44D2
                move.w  #$01FE, ($FFFFF614).w
loc_44D2:
                tst.b   (Water_flag).w
                beq.s   loc_44F2
                moveq   #$15, D0
                cmpi.b  #$08, ($FFFFFE10).w
                beq.s   loc_44EE
                moveq   #$16, D0
                cmpi.b  #$0D, ($FFFFFE10).w
                beq.s   loc_44EE
                moveq   #$17, D0
loc_44EE:
                bsr     PalLoad4_Water          ; loc_2932
loc_44F2:
                move.w  #$0003, D1
loc_44F6:                
                move.b  #$08, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                dbra    D1, loc_44F6 
                move.w  #$202F, ($FFFFF626).w
                bsr     Pal_FadeTo2             ; loc_259C
                tst.w   ($FFFFFFF0).w
                bmi.s   Level_ClrTitleCard      ; loc_4526
                addq.b  #$02, ($FFFFB0A4).w 
                addq.b  #$04, ($FFFFB0E4).w
                addq.b  #$04, ($FFFFB124).w
                addq.b  #$04, ($FFFFB164).w   
                bra.s   loc_452E
Level_ClrTitleCard: ; loc_4526:
                moveq   #$02, D0
                jsr     LoadPLC                 ; loc_173C
loc_452E:                
                bclr    #$07, ($FFFFF600).w
Level_Main_Loop: ; loc_4534:                
                bsr     Pause                   ; loc_14D2
                move.b  #$08, ($FFFFF62A).w   
                bsr     DelayProgram            ; loc_31D8
                addq.w  #$01, ($FFFFFE04).w
                bsr     Move_Sonic_In_Demo      ; loc_48DE
                bsr     WaterEffects           ; loc_465A
                jsr     RunObjects            ; loc_CFD0
                tst.w   ($FFFFFE02).w
                bne     Level                   ; loc_4150
                tst.w   (Debug_placement_mode).w
                bne.s   loc_456A
                cmpi.b  #$06, ($FFFFB024).w
                bcc.s   loc_456E
loc_456A:
                bsr     Background_Scroll_Layer ; loc_5D5C                 
loc_456E:
                bsr     UpdateWaterSurface ; loc_4630
                jsr     Load_Ring_Pos           ; loc_DE34
                bsr     JumpToDynamic_Art_Cues  ; loc_51F8
                bsr     PalCycle_Load           ; loc_1F18
                bsr     RunPLC                  ; loc_17A8
                bsr     Oscillate_Num_Do        ; loc_4BBA
                bsr     Change_Ring_Frame       ; loc_4C52
                bsr     End_Level_Art_Load      ; loc_4CC0
                jsr     Build_Sprites           ; loc_D4DA
                jsr     Load_Object_Pos         ; loc_E250
                cmpi.b  #$08, ($FFFFF600).w
                beq.s   loc_45B0
                cmpi.b  #$0C, ($FFFFF600).w
                beq     Level_Main_Loop         ; loc_4534
                rts
loc_45B0:
                tst.w   ($FFFFFE02).w
                bne.s   loc_45CE
                tst.w   ($FFFFF614).w
                beq.s   loc_45CE
                cmpi.b  #$08, ($FFFFF600).w
                beq     Level_Main_Loop         ; loc_4534
                move.b  #$00, ($FFFFF600).w
                rts
loc_45CE:
                cmpi.b  #$08, ($FFFFF600).w
                bne.s   loc_45E8
                move.b  #$00, ($FFFFF600).w
                tst.w   ($FFFFFFF0).w
                bpl.s   loc_45E8
                move.b  #$1C, ($FFFFF600).w
loc_45E8:
                move.w  #$003C, ($FFFFF614).w
                move.w  #$003F, ($FFFFF626).w
                clr.w   ($FFFFF794).w
loc_45F8:                
                move.b  #$08, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                bsr     Move_Sonic_In_Demo      ; loc_48DE
                jsr     RunObjects            ; loc_CFD0
                jsr     Build_Sprites           ; loc_D4DA
                jsr     Load_Object_Pos         ; loc_E250
                subq.w  #$01, ($FFFFF794).w
                bpl.s   loc_4628
                move.w  #$0002, ($FFFFF794).w
                bsr     Pal_FadeOut             ; loc_265A
loc_4628:
                tst.w   ($FFFFF614).w
                bne.s   loc_45F8
                rts           

; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to move the water or oil surface sprites to where the screen is at
; (the closest match to this subroutine in Sonic 1 is Obj1B_Action)
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_4630:  Change_Water_Surface_Pos:
UpdateWaterSurface:
		tst.b	(Water_flag).w
		beq.s	loc_4658
		move.w	($FFFFEE00).w,d1
		btst	#0,($FFFFFE05).w
		beq.s	loc_4646
		addi.w	#$20,d1

loc_4646:
		move.w	d1,d0
		addi.w	#$60,d0
		move.w	d0,($FFFFB788).w
		addi.w	#$120,d1
		move.w	d1,($FFFFB7C8).w

loc_4658:
		rts
; End of function UpdateWaterSurface

; ---------------------------------------------------------------------------
; Subroutine to do special water effects
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_465A:
WaterEffects:
		tst.b	(Water_flag).w		; does the level have water?
		beq.s	return_46B6		; if not, branch
		tst.b	($FFFFEEDC).w
		bne.s	MoveWater
		cmpi.b	#6,($FFFFB024).w	; is Sonic dead?
		bcc.s	MoveWater		; if yes, branch
		bsr.w	DynamicWater
; loc_4672:
MoveWater:
		clr.b	(Water_fullscreen_flag).w
		moveq	#0, D0
		cmpi.b	#$F,($FFFFFE10).w	; is this NGHZ?
		beq.s	loc_4686		; if yes, branch
		move.b	($FFFFFE60).w,0
		lsr.w	#1,d0

loc_4686:
		add.w	(Water_Level_2).w,d0
		move.w	D0, (Water_Level_1).w
		; calculate distance between water surface and top of screen
		move.w	(Water_Level_1).w,d0
		sub.w	($FFFFEE04).w,d0
		bcc.s	loc_46A8
		tst.w	d0
		bpl.s	loc_46A8
		move.b	#224-1,($FFFFF625).w	; H-INT every 224th scanline
                move.b	#1,(Water_fullscreen_flag).w

loc_46A8:
		cmpi.w	#224-1,d0
		bcs.s	loc_46B2
		move.w	#224-1,d0

loc_46B2:
		move.b	d0,($FFFFF625).w	; H-INT every d0 scanlines

return_46B6:
		rts
; ===========================================================================
; The code that handles initializing the water tables effectively makes
; it start at $08 instead of $00 to save space
; word_46B8: Water_Height_Array:
WaterHeight:	dc.w	$600, $600	; HPZ
		dc.w	$600, $600	; Zone 9
		dc.w	$600, $600	; OOZ
		dc.w	$600, $600	; MCZ
		dc.w	$600, $600	; CNZ
		dc.w	$600, $710	; CPZ
		dc.w	$600, $600	; GCZ
		dc.w	$410, $510	; ARZ
		; no entry for DEZ...
; ===========================================================================
; sub_46D8: Dynamic_Water_Height:
DynamicWater:
		moveq	#0,d0
		move.w	($FFFFFE10).w,d0
		subi.w	#$800,d0
		ror.b	#1,d0
		lsr.w	#6,d0
		andi.w	#$FFFE,d0
		move.w	DynamicWater_Index(pc,d0.w),d0
		jsr	DynamicWater_Index(pc,d0.w)
		moveq	#0,d1
		move.b	(Water_on).w,d1
		move.w	(Water_Level_2).w,d0
		sub.w	(Water_Level_2).w,d0
		beq.s	loc_470A
		bcc.s	loc_4706
		neg.w	d1

loc_4706:
		add.w	d1,(Water_Level_2).w

loc_470A:
		rts
; End of function DynamicWater

; ===========================================================================
; Like with the water height table, the index starts at $08, rather than $00
; off_470C:
DynamicWater_Index:
		dc.w    DynamicWater_Null-DynamicWater_Index	; HPZ 1
		dc.w    DynamicWater_Null-DynamicWater_Index	; HPZ 2
		dc.w    DynamicWater_Null-DynamicWater_Index	; Zone 9-1
		dc.w    DynamicWater_Null-DynamicWater_Index	; Zone 9-2
		dc.w    DynamicWater_Null-DynamicWater_Index	; OOZ 1
		dc.w    DynamicWater_Null-DynamicWater_Index	; OOZ 2
		dc.w    DynamicWater_Null-DynamicWater_Index	; MCZ 1
		dc.w    DynamicWater_Null-DynamicWater_Index	; MCZ 2
		dc.w    DynamicWater_Null-DynamicWater_Index	; CNZ 1
		dc.w    DynamicWater_Null-DynamicWater_Index	; CNZ 2
		dc.w    DynamicWater_Null-DynamicWater_Index	; CPZ 1
		dc.w    DynamicWater_CPZ2-DynamicWater_Index	; CPZ 2
		dc.w    DynamicWater_Null-DynamicWater_Index	; GCZ 1
		dc.w    DynamicWater_Null-DynamicWater_Index	; GCZ 2
		dc.w    DynamicWater_Null-DynamicWater_Index	; NGHZ 1
		dc.w    DynamicWater_Null-DynamicWater_Index	; NGHZ 2
		; no entry for DEZ...
; ===========================================================================
; return_472C:
DynamicWater_Null:
		rts
; ===========================================================================
; loc_472E:
DynamicWater_CPZ2:
		cmpi.w	#$1DE0,($FFFFEE00).w
		bcs.s	return_473C
		move.w	#$510,(Water_Level_2).w

return_473C:    
		rts
; ===========================================================================

S1_LZ_Wind_Tunnels:; loc_473E: leftover from Sonic 1's LZ                             
                tst.w   (Debug_placement_mode).w
                bne     loc_481A
                lea     (S1_LZ_Wind_Data), A2   ; loc_4824
                moveq   #$00, D0
                move.b  ($FFFFFE11).w, D0
                lsl.w   #$03, D0
                adda.w  D0, A2
                moveq   #$00, D1
                tst.b   ($FFFFFE11).w
                bne.s   loc_4762
                moveq   #$01, D1
                subq.w  #$08, A2
loc_4762:
                lea     ($FFFFB000).w, A1
loc_4766:                
                move.w  $0008(A1), D0
                cmp.w   (A2), D0
                bcs     loc_4804
                cmp.w   $0004(A2), D0
                bcc     loc_4804
                move.w  $000C(A1), D2
                cmp.w   $0002(A2), D2
                bcs     loc_4804
                cmp.w   $0006(A2), D2
                bcc.s   loc_4804
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$3F, D0
                bne.s   loc_479E
                move.w  #$00D0, D0
                jsr     (PlaySound)              ; loc_14C6
loc_479E:
                tst.b   ($FFFFF7C9).w
                bne     loc_481A
                cmpi.b  #$04, $0024(A1)
                bcc.s   loc_4816
                move.b  #$01, (WindTunnel_flag).w
                subi.w  #$0080, D0
                cmp.w   (A2), D0
                bcc.s   loc_47CC
                moveq   #$02, D0
                cmpi.b  #$01, ($FFFFFE11).w
                bne.s   loc_47C8
                neg.w   D0
loc_47C8:
                add.w   D0, $000C(A1)
loc_47CC:
                addi.w  #$0004, $0008(A1)
                move.w  #$0400, $0010(A1)
                move.w  #$0000, $0012(A1)
                move.b  #$0F, $001C(A1)
                bset    #$01, $0022(A1)
                btst    #$00, ($FFFFF604).w
                beq.s   loc_47F6
                subq.w  #$01, $000C(A1)
loc_47F6:
                btst    #$01, ($FFFFF604).w
                beq.s   loc_4802
                addq.w  #$01, $000C(A1)
loc_4802:
                rts
loc_4804:
                addq.w  #$08, A2
                dbra    D1, loc_4766
                tst.b   (WindTunnel_flag).w
                beq.s   loc_481A
                move.b  #$00, $001C(A1)
loc_4816:
                clr.b   (WindTunnel_flag).w
loc_481A:
                rts                
;loc_481C:
                dc.w    $0A80, $0300, $0C10, $0380
S1_LZ_Wind_Data: ; loc_4824:
                dc.w    $0F80, $0100, $1410, $0180, $0460, $0400, $0710, $0480
                dc.w    $0A20, $0600, $1610, $06E0, $0C80, $0600, $13D0, $0680                
S1_LZ_Water_Slides: ; loc_4844:
                lea     ($FFFFB000).w, A1
                btst    #$01, $0022(A1)
                bne.s   loc_4878
                move.w  $000C(A1), D0
                andi.w  #$0700, D0
                move.b  $0008(A1), D1
                andi.w  #$007F, D1
                add.w   D1, D0
                lea     ($FFFF8000).w, A2
                move.b  $00(A2, D0), D0
                lea     loc_48DD(PC), A2
                moveq   #$06, D1
loc_4870:                
                cmp.b   -(A2), D0
                dbeq    D1, loc_4870
                beq.s   loc_488A
loc_4878:
                tst.b   ($FFFFF7CA).w
                beq.s   loc_4888
                move.w  #$0005, $002E(A1)
                clr.b   ($FFFFF7CA).w
loc_4888:
                rts
loc_488A:
                cmpi.w  #$0003, D1
                bcc.s   loc_4892
                nop
loc_4892:
                bclr    #$00, $0022(A1)
                move.b  loc_48CE(PC, D1), D0
                move.b  D0, $0014(A1)
                bpl.s   loc_48A8
                bset    #$00, $0022(A1)
loc_48A8:
                clr.b   $0015(A1)
                move.b  #$1B, $001C(A1)
                move.b  #$01, ($FFFFF7CA).w
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$1F, D0
                bne.s   loc_48CC
                move.w  #$00D0, D0
                jsr     (PlaySound)              ; loc_14C6
loc_48CC:
                rts  
loc_48CE:
                dc.b    $0A, $F5, $0A, $F6, $F5, $F4, $0B, $00, $02, $07, $03, $4C, $4B, $08, $04 
loc_48DD:
                dc.b    $00                                                                           
Move_Sonic_In_Demo: ; loc_48DE:
                tst.w   ($FFFFFFF0).w
                bne.s   Move_Demo_On            ; loc_495C
                rts
Move_Sonic_Demo_Record: ; unused subroutine for	recording demos                
                lea     ($00FE8000), A1
                move.w  ($FFFFF790).w, D0
                adda.w  D0, A1
                move.b  ($FFFFF604).w, D0
                cmp.b   (A1), D0
                bne.s   loc_4908
                addq.b  #$01, $0001(A1)
                cmpi.b  #$FF, $0001(A1)
                beq.s   loc_4908
                bra.s   loc_491C
loc_4908:
                move.b  D0, $0002(A1)
                move.b  #$00, $0003(A1)
                addq.w  #$02, ($FFFFF790).w
                andi.w  #$03FF, ($FFFFF790).w 
loc_491C:
                cmpi.b  #$00, ($FFFFFE10).w
                bne.s   loc_495A
                lea     ($00FEC000), A1
                move.w  ($FFFFF740).w, D0
                adda.w  D0, A1
                move.b  ($FFFFF606).w, D0
                cmp.b   (A1), D0
                bne.s   loc_4946
                addq.b  #$01, $0001(A1)
                cmpi.b  #$FF, $0001(A1)
                beq.s   loc_4946
                bra.s   loc_495A
loc_4946:
                move.b  D0, $0002(A1)
                move.b  #$00, $0003(A1)
                addq.w  #$02, ($FFFFF740).w
                andi.w  #$03FF, ($FFFFF740).w
loc_495A:
                rts
Move_Demo_On: ; loc_495C:
                tst.b   ($FFFFF604).w
                bpl.s   loc_496E
                tst.w   ($FFFFFFF0).w
                bmi.s   loc_496E
                move.b  #$04, ($FFFFF600).w
loc_496E:
                lea     (Demo_Index), A1        ; loc_49F2
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                cmpi.b  #$10, ($FFFFF600).w
                bne.s   loc_4984
                moveq   #$06, D0
loc_4984:
                lsl.w   #$02, D0
                move.l  $00(A1, D0), A1
                move.w  ($FFFFF790).w, D0
                adda.w  D0, A1
                move.b  (A1), D0
                lea     ($FFFFF604).w, A0
                move.b  D0, D1
                moveq   #$00, D2
                eor.b   D2, D0
                move.b  D1, (A0)+
                and.b   D1, D0
                move.b  D0, (A0)+
                subq.b  #$01, ($FFFFF792).w
                bcc.s   loc_49B2
                move.b  $0003(A1), ($FFFFF792).w
                addq.w  #$02, ($FFFFF790).w
loc_49B2:
                cmpi.b  #$00, ($FFFFFE10).w
                bne.s   loc_49EA
                lea     (Demo_Tails_Ghz), A1    ; loc_4DF8
                move.w  ($FFFFF740).w, D0
                adda.w  D0, A1
                move.b  (A1), D0
                lea     ($FFFFF606).w, A0
                move.b  D0, D1
                moveq   #$00, D2
                eor.b   D2, D0
                move.b  D1, (A0)+
                and.b   D1, D0
                move.b  D0, (A0)+
                subq.b  #$01, ($FFFFF742).w
                bcc.s   loc_49E8
                move.b  $0003(A1), ($FFFFF742).w
                addq.w  #$02, ($FFFFF740).w
loc_49E8:
                rts
loc_49EA:
                move.w  #$0000, ($FFFFF606).w
                rts
Demo_Index: ; loc_49F2: ; Demo sequence array
                dc.l    Demo_Green_Hill     ; $00 - Green Hill
                dc.l    Demo_Green_Hill     ; $01 
                dc.l    Demo_Green_Hill     ; $02 - Wood
                dc.l    Demo_Green_Hill     ; $03 
                dc.l    Demo_Green_Hill     ; $04 - Metropolis 
                dc.l    Demo_Green_Hill     ; $05 - Metropolis 
                dc.l    Demo_Green_Hill     ; $06
                dc.l    Demo_Hill_Top       ; $07 - Hill Top
                dc.l    Demo_Hidden_Palace  ; $08 - Hidden Palace
                dc.l    Demo_Green_Hill     ; $09
                dc.l    Demo_Green_Hill     ; $0A - Oil Ocean
                dc.l    Demo_Green_Hill     ; $0B - Dust Hill
                dc.l    Demo_Green_Hill     ; $0C - Casino Night
                dc.l    Demo_Chemical_Plant ; $0D - Chemical Plant
                dc.l    Demo_Green_Hill     ; $0E - Genocide City
                dc.l    Demo_Green_Hill     ; $0F - Neo Green Hill
                dc.l    Demo_Green_Hill     ; $10 - Death Egg
;loc_4A36:
                dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
                dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
                dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
                dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
                dc.l    $00FE8000                                
Demo_End_Index: ; loc_4A7A:                
                dc.w    $008B, $0837, $0042, $085C, $006A, $085F, $002F, $082C
                dc.w    $0021, $0803, $2830, $0808, $002E, $0815, $000F, $0846
                dc.w    $001A, $08FF, $08CA, $0000, $0000, $0000, $0000, $0000
Load_Colision_Index: ; loc_4AAA:
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                lsl.w   #$02, D0
                move.l  #$FFFFD000, (Collision_addr).w
                move.l  Primary_Colision_Index(PC, D0), A1 ; loc_4ADC
                lea     ($FFFFD000).w, A2
                bsr.s   Load_Colision           ; loc_4ACC
                move.l  Secundary_Colision_Index(PC, D0), A1 ; loc_4B20
                lea     ($FFFFD600).w, A2
Load_Colision: ; loc_4ACC:
                move.w  #$02FF, D1
                moveq   #$00, D2
Load_Colision_Loop: ; loc_4AD2:
                move.b  (A1)+, D2
                move.w  D2, (A2)+
                dbra    D1, Load_Colision_Loop    ; loc_4AD2
                rts  
Primary_Colision_Index: ; loc_4ADC: 
                dc.l    Green_Hill_Colision_1     ; loc_2F2EA
                dc.l    Special_Stage_1           ; loc_31CEA
                dc.l    Wood_Colision             ; loc_2F8EA
                dc.l    Special_Stage_1           ; loc_31CEA
                dc.l    Metropolis_Colision       ; loc_2FBEA
                dc.l    Metropolis_Colision       ; loc_2FBEA
                dc.l    Special_Stage_1           ; loc_31CEA
                dc.l    Green_Hill_Colision_1     ; loc_2F2EA
                dc.l    Hidden_Palace_Colision_1  ; loc_2FEEA
                dc.l    Special_Stage_1           ; loc_31CEA
                dc.l    Oil_Ocean_Colision        ; loc_304EA
                dc.l    Dust_Hill_Colision        ; loc_307EA
                dc.l    Casino_Night_Colision_1   ; loc_30AEA
                dc.l    Chemical_Plant_Colision_1 ; loc_310EA
                dc.l    Special_Stage_1           ; loc_31CEA
                dc.l    Neo_Green_Hill_Colision_1 ; loc_316EA
                dc.l    Special_Stage_1           ; loc_31CEA 
Secundary_Colision_Index: ; loc_4B20:                
                dc.l    Green_Hill_Colision_2     ; loc_2F5EA
                dc.l    Special_Stage_1           ; loc_31CEA
                dc.l    Wood_Colision             ; loc_2F8EA
                dc.l    Special_Stage_1           ; loc_31CEA
                dc.l    Metropolis_Colision       ; loc_2FBEA
                dc.l    Metropolis_Colision       ; loc_2FBEA
                dc.l    Special_Stage_1           ; loc_31CEA
                dc.l    Green_Hill_Colision_2     ; loc_2F5EA
                dc.l    Hidden_Palace_Colision_2  ; loc_301EA
                dc.l    Special_Stage_1           ; loc_31CEA
                dc.l    Oil_Ocean_Colision        ; loc_304EA
                dc.l    Dust_Hill_Colision        ; loc_307EA
                dc.l    Casino_Night_Colision_2   ; loc_30DEA
                dc.l    Chemical_Plant_Colision_2 ; loc_313EA
                dc.l    Special_Stage_1           ; loc_31CEA
                dc.l    Neo_Green_Hill_Colision_2 ; loc_319EA
                dc.l    Special_Stage_1           ; loc_31CEA                  
Oscillate_Num_Init: ; loc_4B64:
                lea     ($FFFFFE5E).w, A1
                lea     (Oscillate_Data), A2    ; loc_4B78
                moveq   #$20, D1
loc_4B70:
                move.w  (A2)+, (A1)+
                dbra    D1, loc_4B70
                rts
Oscillate_Data: ; loc_4B78:
                dc.w    $007D, $0080, $0000, $0080, $0000, $0080, $0000, $0080
                dc.w    $0000, $0080, $0000, $0080, $0000, $0080, $0000, $0080
                dc.w    $0000, $0080, $0000, $3848, $00EE, $2080, $00B4, $3080
                dc.w    $010E, $5080, $01C2, $7080, $0276, $0080, $0000, $4000
                dc.w    $00FE                  
Oscillate_Num_Do: ; loc_4BBA:
                cmpi.b  #$06, ($FFFFB024).w
                bcc.s   loc_4C10
                lea     ($FFFFFE5E).w, A1
                lea     (Oscillate_Data2), A2   ; loc_4C12
                move.w  (A1)+, D3
                moveq   #$0F, D1 
loc_4BD0:                
                move.w  (A2)+, D2
                move.w  (A2)+, D4
                btst    D1, D3
                bne.s   loc_4BF0
                move.w  $0002(A1), D0
                add.w   D2, D0
                move.w  D0, $0002(A1)
                add.w   D0, $0000(A1)
                cmp.b   $0000(A1), D4
                bhi.s   loc_4C06
                bset    D1, D3
                bra.s   loc_4C06
loc_4BF0:
                move.w  $0002(A1), D0
                sub.w   D2, D0
                move.w  D0, $0002(A1)
                add.w   D0, $0000(A1)
                cmp.b   $0000(A1), D4
                bls.s   loc_4C06
                bclr    D1, D3
loc_4C06:
                addq.w  #$04, A1
                dbra    D1, loc_4BD0   
                move.w  D3, ($FFFFFE5E).w
loc_4C10:
                rts                
Oscillate_Data2: ; loc_4C12:
                dc.w    $0002, $0010, $0002, $0018, $0002, $0020, $0002, $0030
                dc.w    $0004, $0020, $0008, $0008, $0008, $0040, $0004, $0040
                dc.w    $0002, $0038, $0002, $0038, $0002, $0020, $0003, $0030
                dc.w    $0005, $0050, $0007, $0070, $0002, $0040, $0002, $0040
Change_Ring_Frame: ; loc_4C52:
                subq.b  #$01, ($FFFFFEC0).w
                bpl.s   loc_4C68
                move.b  #$0B, ($FFFFFEC0).w
                subq.b  #$01, ($FFFFFEC1).w
                andi.b  #$07, ($FFFFFEC1).w                 
loc_4C68:
                subq.b  #$01, ($FFFFFEC2).w
                bpl.s   loc_4C7E
                move.b  #$07, ($FFFFFEC2).w
                addq.b  #$01, ($FFFFFEC3).w
                andi.b  #$03, ($FFFFFEC3).w
loc_4C7E:
                subq.b  #$01, ($FFFFFEC4).w
                bpl.s   loc_4C9C
                move.b  #$07, ($FFFFFEC4).w
                addq.b  #$01, ($FFFFFEC5).w
                cmpi.b  #$06, ($FFFFFEC5).w
                bcs.s   loc_4C9C
                move.b  #$00, ($FFFFFEC5).w
loc_4C9C:
                tst.b   ($FFFFFEC6).w
                beq.s   loc_4CBE
                moveq   #$00, D0
                move.b  ($FFFFFEC6).w, D0
                add.w   ($FFFFFEC8).w, D0   
                move.w  D0, ($FFFFFEC8).w
                rol.w   #$07, D0
                andi.w  #$0003, D0
                move.b  D0, ($FFFFFEC7).w
                subq.b  #$01, ($FFFFFEC6).w
loc_4CBE:
                rts
End_Level_Art_Load: ; loc_4CC0: ; Test for load end level sprites...
                tst.w   (Debug_placement_mode).w
                bne     Skip_End_Level_Art_Load ; loc_4CF6
                cmpi.w  #$0001, ($FFFFFE10).w
                beq.s   Skip_End_Level_Art_Load ; loc_4CF6
                move.w  ($FFFFEE00).w, D0
                move.w  ($FFFFEECA).w, D1
                subi.w  #$0100, D1
                cmp.w   D1, D0
                blt.s   Skip_End_Level_Art_Load ; loc_4CF6
                tst.b   ($FFFFFE1E).w
                beq.s   Skip_End_Level_Art_Load ; loc_4CF6
                cmp.w   ($FFFFEEC8).w, D1
                beq.s   Skip_End_Level_Art_Load ; loc_4CF6
                move.w  D1, ($FFFFEEC8).w
                moveq   #$27, D0
                bra     LoadPLC2                ; loc_176E
Skip_End_Level_Art_Load: ; loc_4CF6:
                rts                
Demo_Green_Hill: ; loc_4CF8: ; $00 - Green Hill Sonic Demo control
                dc.w    $0044, $0800, $2805, $0859, $2804, $0835, $2806, $0842
                dc.w    $2804, $0819, $000F, $080A, $2809, $084A, $2809, $0810
                dc.w    $0005, $041B, $0200, $084B, $282D, $0855, $2809, $0826
                dc.w    $281C, $0819, $2808, $08FF, $0896, $2813, $081D, $2819
                dc.w    $082A, $2807, $0900, $0100, $0520, $0402, $0501, $0000
                dc.w    $083A, $0025, $040A, $2409, $041C, $0003, $083A, $2806
                dc.w    $080C, $0016, $0800, $280F, $0833, $2807, $0804, $0046
                dc.w    $086A, $0029, $8000, $C000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000              
Demo_Tails_Ghz: ; loc_4DF8: ; $00 - Green Hill Tails Demo control
                dc.w    $0046, $081E, $280A, $085E, $2830, $0866, $000F, $080F
                dc.w    $282E, $0800, $001F, $0812, $0013, $080A, $0016, $040D
                dc.w    $0008, $0410, $0030, $086B, $2814, $0880, $0A02, $0223
                dc.w    $0007, $0813, $2817, $0800, $0003, $0403, $0500, $0100
                dc.w    $0901, $083C, $2807, $0018, $084D, $2812, $0801, $0004
                dc.w    $080B, $0007, $081B, $0009, $2005, $2813, $0804, $0021
                dc.w    $0811, $0020, $0851, $000B, $0457, $000D, $0227, $0A00
                dc.w    $0002, $0901, $082A, $2815, $0803, $2819, $080A, $000A
                dc.w    $0802, $281B, $0833, $0027, $083A, $0912, $0107, $0013
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000   
Demo_Hill_Top: ; loc_4EF8: ; $07 - Hill Top Sonic Demo control
                dc.w    $0005, $011D, $0903, $2905, $0910, $0100, $0013, $0400
                dc.w    $050A, $2507, $0510, $0401, $000C, $0804, $090C, $290A
                dc.w    $0910, $0803, $001C, $2007, $000B, $0406, $0025, $2006
                dc.w    $0022, $0805, $0025, $040E, $0033, $0807, $0039, $080A
                dc.w    $2808, $0816, $0024, $0874, $2802, $2907, $0903, $000F
                dc.w    $080D, $0005, $040C, $0001, $2002, $2800, $2A08, $2802
                dc.w    $081E, $0004, $0413, $0012, $0818, $280B, $0811, $002C
                dc.w    $080C, $000D, $2004, $2803, $0805, $0022, $0412, $0004
                dc.w    $081A, $000D, $0406, $0037, $080C, $0019, $080D, $000C
                dc.w    $0409, $0003, $0820, $001A, $0406, $0022, $0809, $0009
                dc.w    $0816, $002F, $080E, $2804, $2002, $0008, $0419, $0005
                dc.w    $0806, $2808, $0808, $0024, $0872, $0A09, $020E, $0A6B
                dc.w    $8A00, $4000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
Demo_Hidden_Palace: ; loc_4FF8: ; $07 - Hidden Palace Sonic Demo control
                dc.w    $0040, $0833, $2806, $0839, $2805, $080D, $0025, $0810
                dc.w    $282A, $081C, $0200, $2603, $2200, $2A00, $2806, $0822
                dc.w    $0200, $060F, $0408, $0600, $020E, $062F, $0279, $0601
                dc.w    $0443, $240F, $0417, $0009, $081C, $2803, $0845, $0005
                dc.w    $081A, $2833, $0872, $000F, $0415, $2410, $040B, $0024
                dc.w    $0401, $2408, $0407, $0006, $0404, $001E, $240E, $0415
                dc.w    $001E, $2003, $240F, $0400, $0007, $0812, $0409, $240F
                dc.w    $0406, $000A, $0462, $2412, $2004, $0021, $280E, $0816
                dc.w    $0019, $0829, $0063, $0415, $2409, $0439, $0031, $0825
                dc.w    $2802, $0812, $0093, $8000, $C000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000 
Demo_Chemical_Plant: ; loc_50F8: ; $07 - Chemical Plant Sonic Demo control
                dc.w    $001B, $0130, $0019, $0829, $2813, $0803, $001D, $2003
                dc.w    $281E, $0802, $0009, $0405, $002E, $081E, $2805, $2003
                dc.w    $000B, $0401, $0507, $0400, $002F, $2803, $2A04, $0A00
                dc.w    $0806, $0024, $0802, $2806, $0801, $0026, $08FF, $0814
                dc.w    $280A, $0803, $0060, $080E, $2807, $080C, $0008, $040B
                dc.w    $0023, $0805, $0093, $0819, $2811, $0878, $280F, $08FF
                dc.w    $0883, $280D, $0882, $001F, $8000, $4000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000 
JumpToDynamic_Art_Cues: ;  loc_51F8:
                jmp     Dynamic_Art_Cues ; loc_223EC 
                dc.w    $0000 ; Filler  
;===============================================================================
; Special Stage
; [ Begin ]               
;===============================================================================                                 
SpecialStage: ; loc_5200:       
                move.w  #$00CA, D0
                bsr     PlaySound                ; loc_14C6
                bsr     Pal_MakeFlash           ; loc_2762
                move    #$2700, SR
                lea     ($00C00004), A6
                move.w  #$8B03, (A6)
                move.w  #$8004, (A6)
                move.w  #$8AAF, ($FFFFF624).w
                move.w  #$9011, (A6)
                move.w  ($FFFFF60C).w, D0
                andi.b  #$BF, D0
                move.w  D0, ($00C00004)
                bsr     ClearScreen             ; loc_1418
                move    #$2300, SR
                lea     ($00C00004), A5
                move.w  #$8F01, (A5)
                move.l  #$946F93FF, (A5)
                move.w  #$9780, (A5)
                move.l  #$50000081, (A5)
                move.w  #$0000, ($00C00000)
loc_5260:                
                move.w  (A5), D1
                btst    #$01, D1
                bne.s   loc_5260
                move.w  #$8F02, (A5)
                bsr     SS_Background_Load      ; loc_54CA
                moveq   #$14, D0
                bsr     RunPLC_ROM              ; loc_18A8
                lea     ($FFFFD000).w, A1
                moveq   #$00, D0
                move.w  #$07FF, D1
loc_5280:                
                move.l  D0, (A1)+
                dbra    D1, loc_5280
                lea     ($FFFFF700).w, A1
                moveq   #$00, D0
                move.w  #$003F, D1
loc_5290:                
                move.l  D0, (A1)+
                dbra    D1, loc_5290
                lea     ($FFFFFE60).w, A1
                moveq   #$00, D0
                move.w  #$0027, D1
loc_52A0:                
                move.l  D0, (A1)+
                dbra    D1, loc_52A0
                lea     ($FFFFAA00).w, A1
                moveq   #$00, D0
                move.w  #$007F, D1
loc_52B0:                
                move.l  D0, (A1)+
                dbra    D1, loc_52B0
                clr.b   (Water_fullscreen_flag).w
                clr.w   ($FFFFFE02).w
                moveq   #$16, D0
                bsr     PalLoad1                ; loc_28E2
                jsr     (S1_Special_Stage_Load) ; loc_21A36
                move.l  #$00000000, ($FFFFEE00).w
                move.l  #$00000000, ($FFFFEE04).w
                move.b  #$09, ($FFFFB000).w
                bsr     S1_Pal_Cycle_Special_Stage ; loc_5584
                clr.w   ($FFFFF750).w
                move.w  #$0040, ($FFFFF752).w
                move.w  #$0089, D0
                bsr     PlayMusic              ; loc_14C0
                move.w  #$0000, ($FFFFF790).w
                lea     (Demo_Index), A1        ; loc_49F2
                moveq   #$06, D0
                lsl.w   #$02, D0
                move.l  $00(A1, D0), A1
                move.b  $0001(A1), ($FFFFF792).w
                subq.b  #$01, ($FFFFF792).w
                clr.w   ($FFFFFE20).w
                clr.b   ($FFFFFE1B).w
                move.w  #$0000, (Debug_placement_mode).w
                move.w  #$0708, ($FFFFF614).w
                tst.b   ($FFFFFFD2).w
                beq.s   loc_533C
                btst    #$06, ($FFFFF604).w
                beq.s   loc_533C
                move.b  #$01, (Debug_mode_flag).w
loc_533C:
                move.w  ($FFFFF60C).w, D0
                ori.b   #$40, D0
                move.w  D0, ($00C00004)
                bsr     Pal_MakeWhite           ; loc_26B8
loc_534E:                
                bsr     Pause                   ; loc_14D2
                move.b  #$0A, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                bsr     Move_Sonic_In_Demo      ; loc_48DE
                move.w  ($FFFFF604).w, ($FFFFF602).w
                jsr     (RunObjects)          ; loc_CFD0
                jsr     (Build_Sprites)         ; loc_D4DA
                jsr     (S1_SS_Show_Layout)     ; loc_21508
                bsr     S1_SS_Bg_Animate        ; loc_5806
                tst.w   ($FFFFFFF0).w
                beq.s   loc_538A
                tst.w   ($FFFFF614).w
                beq     loc_54B8
loc_538A:
                cmpi.b  #$10, ($FFFFF600).w
                beq     loc_534E
                tst.w   ($FFFFFFF0).w
                bne     loc_54C0
                move.b  #$0C, ($FFFFF600).w
                cmpi.w  #$0503, ($FFFFFE10).w
                bcs.s   loc_53AE
                clr.w   ($FFFFFE10).w
loc_53AE:
                move.w  #$003C, ($FFFFF614).w
                move.w  #$003F, ($FFFFF626).w
                clr.w   ($FFFFF794).w
loc_53BE:                
                move.b  #$16, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                bsr     Move_Sonic_In_Demo      ; loc_48DE
                move.w  ($FFFFF604).w, ($FFFFF602).w
                jsr     (RunObjects)          ; loc_CFD0
                jsr     (Build_Sprites)         ; loc_D4DA
                jsr     (S1_SS_Show_Layout)     ; loc_21508
                bsr     S1_SS_Bg_Animate        ; loc_5806
                subq.w  #$01, ($FFFFF794).w
                bpl.s   loc_53F8
                move.w  #$0002, ($FFFFF794).w
                bsr     Pal_ToWhite             ; loc_2782
loc_53F8:
                tst.w   ($FFFFF614).w
                bne.s   loc_53BE
                move    #$2700, SR
                lea     ($00C00004), A6
                move.w  #$8230, (A6)
                move.w  #$8407, (A6)
                move.w  #$9001, (A6)
                bsr     ClearScreen             ; loc_1418
                move.l  #$70000002, ($00C00004)
                lea     (Title_Cards), A0 ; loc_7EA04
                bsr     NemDec              ; loc_15FC
                jsr     (Head_Up_Display_Base)  ; loc_23184
                move    #$2300, SR
                moveq   #$16, D0
                bsr     PalLoad2                ; loc_28FE
                moveq   #$00, D0
                bsr     LoadPLC2                ; loc_176E
                moveq   #$1B, D0
                bsr     LoadPLC                 ; loc_173C
                move.b  #$01, ($FFFFFE1F).w
                move.b  #$01, ($FFFFF7D6).w
                move.w  ($FFFFFE20).w, D0
                mulu.w  #$000A, D0
                move.w  D0, ($FFFFF7D4).w
                move.w  #$008E, D0
                jsr     (PlaySound)              ; loc_14C6
                lea     ($FFFFB000).w, A1
                moveq   #$00, D0
                move.w  #$07FF, D1
loc_5474:                
                move.l  D0, (A1)+
                dbra    D1, loc_5474
                move.b  #$7E, ($FFFFB5C0).w
loc_5480:                
                bsr     Pause                   ; loc_14D2
                move.b  #$0C, ($FFFFF62A).w
                bsr     DelayProgram            ; loc_31D8
                jsr     (RunObjects)          ; loc_CFD0
                jsr     (Build_Sprites)         ; loc_D4DA
                bsr     RunPLC                  ; loc_17A8
                tst.w   ($FFFFFE02).w
                beq.s   loc_5480
                tst.l   ($FFFFF680).w
                bne.s   loc_5480
                move.w  #$00CA, D0
                bsr     PlaySound                ; loc_14C6
                bsr     Pal_MakeFlash           ; loc_2762
                rts
loc_54B8:
                move.b  #$00, ($FFFFF600).w
                rts
loc_54C0:
                cmpi.b  #$0C, ($FFFFF600).w
                beq.s   loc_54B8
                rts
SS_Background_Load: ; loc_54CA:
                lea     ($FFFF0000), A1
                move.w  #$4051, D0
                bsr     EniDec               ; loc_18DA
                move.l  #$50000001, D3
                lea     ($FFFF0080), A2
                moveq   #$06, D7
loc_54E6:                
                move.l  D3, D0
                moveq   #$03, D6
                moveq   #$00, D4
                cmpi.w  #$0003, D7
                bcc.s   loc_54F4
                moveq   #$01, D4
loc_54F4:
                moveq   #$07, D5
loc_54F6:                
                move.l  A2, A1
                eori.b  #$01, D4
                bne.s   loc_550A
                cmpi.w  #$0006, D7
                bne.s   loc_551A
                lea     ($FFFF0000), A1
loc_550A:
                movem.l D0-D4, -(A7)
                moveq   #$07, D1
                moveq   #$07, D2
                bsr     ShowVDPGraphics         ; loc_154C
                movem.l (A7)+, D0-D4
loc_551A:
                addi.l  #$00100000, D0
                dbra    D5, loc_54F6
                addi.l  #$03800000, D0
                eori.b  #$01, D4
                dbra    D6, loc_54F4
                addi.l  #$10000000, D3
                bpl.s   loc_5544
                swap.w  D3
                addi.l  #$0000C000, D3
                swap.w  D3
loc_5544:
                adda.w  #$0080, A2
                dbra    D7, loc_54E6
                lea     ($FFFF0000), A1
                move.w  #$4000, D0
                bsr     EniDec               ; loc_18DA
                lea     ($FFFF0000), A1
                move.l  #$40000003, D0
                moveq   #$3F, D1
                moveq   #$1F, D2
                bsr     ShowVDPGraphics         ; loc_154C
                lea     ($FFFF0000), A1
                move.l  #$50000003, D0
                moveq   #$3F, D1
                moveq   #$3F, D2
                bsr     ShowVDPGraphics         ; loc_154C
                rts                             
S1_Pal_Cycle_Special_Stage: ; loc_5584:
                tst.w   ($FFFFF63A).w
                bne.s   loc_5608
                subq.w  #$01, ($FFFFF79C).w
                bpl.s   loc_5608
                lea     ($00C00004), A6
                move.w  ($FFFFF79A).w, D0
                addq.w  #$01, ($FFFFF79A).w
                andi.w  #$001F, D0
                lsl.w   #$02, D0
                lea     (loc_565E), A0
                adda.w  D0, A0 
                move.b  (A0)+, D0
                bpl.s   loc_55B4
                move.w  #$01FF, D0
loc_55B4:  
                move.w  D0, ($FFFFF79C).w
                moveq   #$00, D0
                move.b  (A0)+, D0
                move.w  D0, ($FFFFF7A0).w 
                lea     (loc_56DE), A1
                lea     $00(A1, D0), A1
                move.w  #$8200, D0
                move.b  (A1)+, D0
                move.w  D0, (A6)
                move.b  (A1), ($FFFFF616).w
                move.w  #$8400, D0
                move.b  (A0)+, D0
                move.w  D0, (A6) 
                move.l  #$40000010, ($00C00004) 
                move.l  ($FFFFF616).w, ($00C00000)
                moveq   #$00, D0
                move.b  (A0)+, D0
                bmi.s   loc_560A
                lea     (Pal_S1_SS_Cycle1), A1  ; loc_56EC
                adda.w  D0, A1
                lea     ($FFFFFB4E).w, A2
                move.l  (A1)+, (A2)+
                move.l  (A1)+, (A2)+
                move.l  (A1)+, (A2)+
loc_5608: 
                rts 
loc_560A:
                move.w  ($FFFFF79E).w, D1
                cmpi.w  #$008A, D0 
                bcs.s   loc_5616
                addq.w  #$01, D1
loc_5616:  
                mulu.w  #$002A, D1
                lea     (Pal_S1_SS_Cycle2), A1  ; loc_5734
                adda.w  D1, A1
                andi.w  #$007F, D0
                bclr    #$00, D0
                beq.s   loc_563A
                lea     ($FFFFFB6E).w, A2
                move.l  (A1), (A2)+
                move.l  $0004(A1), (A2)+
                move.l  $0008(A1), (A2)+
loc_563A:                
                adda.w  #$000C, A1
                lea     ($FFFFFB5A).w, A2
                cmpi.w  #$000A, D0
                bcs.s   loc_5650
                subi.w  #$000A, D0
                lea     ($FFFFFB7A).w, A2
loc_5650:      
                move.w  D0, D1   
                add.w   D0, D0  
                add.w   D1, D0  
                adda.w  D0, A1 
                move.l  (A1)+, (A2)+    
                move.w  (A1)+, (A2)+ 
                rts                                     
loc_565E:  
                dc.w    $0300, $0792, $0300, $0790, $0300, $078E, $0300, $078C
                dc.w    $0300, $078B, $0300, $0780, $0300, $0782, $0300, $0784
                dc.w    $0300, $0786, $0300, $0788, $0708, $0700, $070A, $070C
                dc.w    $FF0C, $0718, $FF0C, $0718, $070A, $070C, $0708, $0700
                dc.w    $0300, $0688, $0300, $0686, $0300, $0684, $0300, $0682
                dc.w    $0300, $0681, $0300, $068A, $0300, $068C, $0300, $068E
                dc.w    $0300, $0690, $0300, $0692, $0702, $0624, $0704, $0630
                dc.w    $FF06, $063C, $FF06, $063C, $0704, $0630, $0702, $0624
loc_56DE:  
                dc.w    $1001, $1800, $1801, $2000, $2001, $2800, $2801            
Pal_S1_SS_Cycle1: ; loc_56EC: 
                dc.w    $0400, $0600, $0620, $0624, $0664, $0666, $0600, $0820
                dc.w    $0A64, $0A68, $0AA6, $0AAA, $0800, $0C42, $0E86, $0ECA
                dc.w    $0EEC, $0EEE, $0400, $0420, $0620, $0620, $0864, $0666
                dc.w    $0420, $0620, $0842, $0842, $0A86, $0AAA, $0620, $0842
                dc.w    $0A64, $0C86, $0EA8, $0EEE
Pal_S1_SS_Cycle2: ; loc_5734: 
                dc.w    $0EEA, $0EE0, $0AA0, $0880, $0660, $0440, $0EE0, $0AA0
                dc.w    $0440, $0AA0, $0AA0, $0AA0, $0860, $0860, $0860, $0640
                dc.w    $0640, $0640, $0400, $0400, $0400, $0AEC, $06EA, $04C6
                dc.w    $02A4, $0082, $0060, $06EA, $04C6, $0060, $04C6, $04C6
                dc.w    $04C6, $0484, $0484, $0484, $0442, $0442, $0442, $0400
                dc.w    $0400, $0400, $0ECC, $0E8A, $0C68, $0A46, $0824, $0602
                dc.w    $0E8A, $0C68, $0602, $0C68, $0C68, $0C68, $0846, $0846
                dc.w    $0846, $0624, $0624, $0624, $0400, $0400, $0400, $0AEC
                dc.w    $08CA, $06A8, $0486, $0264, $0042, $08CA, $06A8, $0042
                dc.w    $06A8, $06A8, $06A8, $0684, $0684, $0684, $0442, $0442
                dc.w    $0442, $0400, $0400, $0400, $0EEC, $0CCA, $0AA8, $0886
                dc.w    $0664, $0442, $0CCA, $0AA8, $0442, $0AA8, $0AA8, $0AA8
                dc.w    $0864, $0864, $0864, $0642, $0642, $0642, $0400, $0400
                dc.w    $0400  
S1_SS_Bg_Animate: ; loc_5806:
                move.w  ($FFFFF7A0).w, D0
                bne.s   loc_5818
                move.w  #$0000, ($FFFFEE0C).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
loc_5818:
                cmpi.w  #$0008, D0
                bcc.s   loc_5870
                cmpi.w  #$0006, D0
                bne.s   loc_5832
                addq.w  #$01, ($FFFFEE18).w
                addq.w  #$01, ($FFFFEE0C).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
loc_5832:
                moveq   #$00, D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
                swap.w  D0
                lea     (loc_58ED), A1
                lea     ($FFFFAA00).w, A3
                moveq   #$09, D3
loc_5848:                
                move.w  $0002(A3), D0
                bsr     CalcSine                ; loc_320A
                moveq   #$00, D2
                move.b  (A1)+, D2
                muls.w  D2, D0
                asr.l   #$08, D0
                move.w  D0, (A3)+
                move.b  (A1)+, D2
                ext.w   D2
                add.w   D2, (A3)+
                dbra    D3, loc_5848
                lea     ($FFFFAA00).w, A3
                lea     (loc_58DA), A2
                bra.s   loc_58A0
loc_5870:
                cmpi.w  #$000C, D0
                bne.s   loc_5896
                subq.w  #$01, ($FFFFEE18).w
                lea     ($FFFFAB00).w, A3
                move.l  #$00018000, D2
                moveq   #$06, D1
loc_5886:                
                move.l  (A3), D0
                sub.l   D2, D0
                move.l  D0, (A3)+
                subi.l  #$00002000, D2
                dbra    D1, loc_5886
loc_5896:
                lea     ($FFFFAB00).w, A3
                lea     (loc_58E5), A2
loc_58A0:
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE18).w, D0
                neg.w   D0
                swap.w  D0
                moveq   #$00, D3
                move.b  (A2)+, D3
                move.w  ($FFFFEE0C).w, D2
                neg.w   D2
                andi.w  #$00FF, D2
                lsl.w   #$02, D2
loc_58BC:                
                move.w  (A3)+, D0
                addq.w  #$02, A3
                moveq   #$00, D1
                move.b  (A2)+, D1
                subq.w  #$01, D1
loc_58C6:                
                move.l  D0, $00(A1, D2)
                addq.w  #$04, D2
                andi.w  #$03FC, D2
                dbra    D1, loc_58C6
                dbra    D3, loc_58BC
                rts   
loc_58DA:
                dc.b    $09, $28, $18, $10, $28, $18, $10, $30, $18, $08, $10
loc_58E5:
                dc.b    $06, $30, $30, $30, $28, $18, $18, $18
loc_58ED:
                dc.b    $08, $02, $04, $FF, $02, $03, $08, $FF, $04, $02, $02, $03, $08, $FD, $04, $02
                dc.b    $02, $03, $02, $FF, $00                            
;===============================================================================
; Special Stage
; [ End ]              
;===============================================================================                  
                nop                             ; Filler   
Level_Size_Load: ; loc_5904: ; Level Size routine
                clr.w   ($FFFFEE50).w
                clr.w   ($FFFFEE52).w
                clr.w   ($FFFFEE54).w
                clr.w   ($FFFFEE56).w
                clr.w   ($FFFFEE58).w
                clr.w   ($FFFFEE5A).w
                clr.w   ($FFFFEE5C).w
                clr.w   ($FFFFEE5E).w
                clr.w   ($FFFFEEA0).w
                clr.w   ($FFFFEEA2).w
                clr.w   ($FFFFEEA4).w
                clr.w   ($FFFFEEA6).w
                clr.w   ($FFFFEEA8).w
                clr.w   ($FFFFEEAA).w
                clr.w   ($FFFFEEAC).w
                clr.w   ($FFFFEEAE).w
                clr.b   ($FFFFEEDC).w
                clr.b   ($FFFFEEBC).w
                clr.b   ($FFFFEEBD).w
                moveq   #$00, D0
                move.b  D0, ($FFFFEEDF).w
                move.w  ($FFFFFE10).w, D0
                ror.b   #$01, D0
                lsr.w   #$04, D0
                lea     Level_Size_Array(PC, D0), A0 ; loc_5986
                move.l  (A0)+, D0
                move.l  D0, ($FFFFEEC8).w
                move.l  D0, ($FFFFEEC0).w
                move.l  (A0)+, D0
                move.l  D0, ($FFFFEECC).w
                move.l  D0, ($FFFFEEC4).w
                move.w  #$1010, ($FFFFEE40).w
                move.w  #$0060, ($FFFFEED8).w
                bra     Level_Size_Check_Lamp_Post ; loc_5A96
Level_Size_Array: ; loc_5986: ; Level Size Array               
                dc.l    $000029A0, $00000320, $00002940, $00000420 ; $00 - Green Hill
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $01
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $02 - Wood
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $03 
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $04 - Metropolis
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $05 - Metropolis
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $06
                dc.l    $00002800, $00000720, $00002880, $00000720 ; $07 - Hill Top
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $08 - Hidden Palace
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $09
                dc.l    $00002F80, $00000680, $00002580, $00000680 ; $0A - Oil Ocean
                dc.l    $00002380, $03C00720, $00002180, $00600720 ; $0B - Dust Hill
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $0C - Casino Night
                dc.l    $00002780, $00000720, $00002880, $00000720 ; $0D - Chemical Plant
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $0E - Genocide City
                dc.l    $000028C0, $020003A0, $000026C0, $018005A0 ; $0F - Neo Green Hill
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $10 - Death Egg
Level_Size_Check_Lamp_Post: ; loc_5A96: ; Player Start Position routine
                tst.b   ($FFFFFE30).w 
                beq.s   Level_Size_Start_Loc    ; loc_5AAC
                jsr     Lamp_Post_Load_Info ; loc_13CE4
                move.w  ($FFFFB008).w, D1
                move.w  ($FFFFB00C).w, D0                 
                bra.s   Level_Size_Start_Loc_Loaded ; loc_5AC8
Level_Size_Start_Loc: ; loc_5AAC:                
                move.w  ($FFFFFE10).w, D0
                ror.b   #$01, D0
                lsr.w   #$05, D0
                lea     Player_Start_Position_Array(PC, D0), A1 ; loc_5B02
                moveq   #$00, D1
                move.w  (A1)+, D1
                move.w  D1, ($FFFFB008).w
                moveq   #$00, D0
                move.w  (A1), D0
                move.w  D0, ($FFFFB00C).w
Level_Size_Start_Loc_Loaded: ; loc_5AC8:                
                subi.w  #$00A0, D1
                bcc.s   loc_5AD0    
                moveq   #$00, D1
loc_5AD0:
                move.w  ($FFFFEECA).w, D2
                cmp.w   D2, D1
                bcs.s   loc_5ADA
                move.w  D2, D1
loc_5ADA:
                move.w  D1, ($FFFFEE00).w
                move.w  D1, ($FFFFEE20).w
                subi.w  #$0060, D0
                bcc.s   loc_5AEA
                moveq   #$00, D0
loc_5AEA:
                cmp.w   ($FFFFEECE).w, D0
                blt.s   loc_5AF4
                move.w  ($FFFFEECE).w, D0
loc_5AF4:
                move.w  D0, ($FFFFEE04).w
                move.w  D0, ($FFFFEE24).w
                bsr     Background_Scroll_Speed ; loc_5B8A
                rts
Player_Start_Position_Array: ; loc_5B02: ; Player Start Position Array              
                dc.l    $0060028F, $004002AF ; $00 - Green Hill
                dc.l    $0060028F, $004002AF ; $01
                dc.l    $006001AC, $004001AC ; $02 - Wood
                dc.l    $0060028F, $004002AF ; $03
                dc.l    $0060028C, $004005EC ; $04 - Metropolis
                dc.l    $006001EC, $004002AF ; $05 - Metropolis
                dc.l    $0060028F, $004002AF ; $06
                dc.l    $004003AF, $0060068F ; $07 - Hill Top
                dc.l    $023001AC, $003001BD ; $08 - Hidden Palace
                dc.l    $0060028F, $004002AF ; $09
                dc.l    $006006AC, $0050056C ; $0A - Oil Ocean
                dc.l    $006006AC, $006005AC ; $0B - Dust Hill
                dc.l    $0060028F, $004002AF ; $0C - Casino Night
                dc.l    $003001EC, $0030012C ; $0D - Chemical Plant
                dc.l    $0060028F, $004002AF ; $0E - Genocide City
                dc.l    $0050037C, $0050037C ; $0F - Neo Green Hill
                dc.l    $0060028F, $004002AF ; $10 - Death Egg
Background_Scroll_Speed: ; loc_5B8A: ; Background Position
                tst.b   ($FFFFFE30).w
                bne.s   loc_5BB8
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFEE14).w
                move.w  D1, ($FFFFEE08).w
                move.w  D1, ($FFFFEE10).w
                move.w  D1, ($FFFFEE18).w
                move.w  D0, ($FFFFEE2C).w
                move.w  D0, ($FFFFEE34).w
                move.w  D1, ($FFFFEE28).w
                move.w  D1, ($FFFFEE30).w
                move.w  D1, ($FFFFEE38).w   
loc_5BB8:                
                moveq   #$00, D2
                move.b  ($FFFFFE10).w, D2
                add.w   D2, D2
                move.w  Bg_Scroll_Speed_Index(PC, D2), D2 ; loc_5BC8
                jmp     Bg_Scroll_Speed_Index(PC, D2) ; loc_5BC8
Bg_Scroll_Speed_Index: ; loc_5BC8: 
                dc.w    Bg_Scroll_Speed_GHz-Bg_Scroll_Speed_Index ; $00 - Green Background Position
                dc.w    Bg_Scroll_Speed_Null-Bg_Scroll_Speed_Index ; $01 - Null Background Position
                dc.w    Bg_Scroll_Speed_Wz-Bg_Scroll_Speed_Index ; $02 - Wood Background Position
                dc.w    Bg_Scroll_Speed_Null-Bg_Scroll_Speed_Index ; $03 - Null Background Position
                dc.w    Bg_Scroll_Speed_Mz-Bg_Scroll_Speed_Index ; $04 - Metropolis Background Position 
                dc.w    Bg_Scroll_Speed_Mz-Bg_Scroll_Speed_Index ; $05 - Metropolis Background Position 
                dc.w    Bg_Scroll_Speed_Null-Bg_Scroll_Speed_Index ; $06 - Null Background Position
                dc.w    Bg_Scroll_Speed_HTz-Bg_Scroll_Speed_Index ; $07 - Hill Top Background Position 
                dc.w    Bg_Scroll_Speed_HPz-Bg_Scroll_Speed_Index ; $08 - Hidden Palace Background Position 
                dc.w    Bg_Scroll_Speed_Null2-Bg_Scroll_Speed_Index ; $09 - Null Background Position
                dc.w    Bg_Scroll_Speed_OOz-Bg_Scroll_Speed_Index ; $0A - Oil Ocean Background Position 
                dc.w    Bg_Scroll_Speed_DHz-Bg_Scroll_Speed_Index ; $0B - Dust Hill Background Position 
                dc.w    Bg_Scroll_Speed_CNz-Bg_Scroll_Speed_Index ; $0C - Casino Night Background Position
                dc.w    Bg_Scroll_Speed_CPz-Bg_Scroll_Speed_Index ; $0D - Chemical Plant Background Position 
                dc.w    Bg_Scroll_Speed_Null3-Bg_Scroll_Speed_Index ; $0E - Genocide City Background Position (Null)
                dc.w    Bg_Scroll_Speed_NGHz-Bg_Scroll_Speed_Index ; $0F - Neo Green Hill Background Position 
                dc.w    Bg_Scroll_Speed_Null4-Bg_Scroll_Speed_Index ; $10 - Death Egg Background Position (Null)
Bg_Scroll_Speed_GHz: ; loc_5BEA: ; Green Hill Background Position
                clr.l   ($FFFFEE08).w
                clr.l   ($FFFFEE0C).w
                clr.l   ($FFFFEE14).w
                clr.l   ($FFFFEE1C).w
                lea     ($FFFFA800).w, A2
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   ($FFFFEE28).w
                clr.l   ($FFFFEE2C).w
                clr.l   ($FFFFEE34).w
                clr.l   ($FFFFEE3C).w
                rts               
Bg_Scroll_Speed_Null: ; loc_5C16: ; Null
                rts   
Bg_Scroll_Speed_Wz: ; loc_5C18: ; Wood Background Position               
                asr.w   #$02, D0
                addi.w  #$0400, D0
                move.w  D0, ($FFFFEE0C).w
                asr.w   #$03, D1
                move.w  D1, ($FFFFEE08).w
                rts
Bg_Scroll_Speed_Mz: ; loc_5C2A: ; Metropolis Background Position                 
                asr.w   #$02, D0
                move.w  D0, ($FFFFEE0C).w
                asr.w   #$03, D1
                move.w  D1, ($FFFFEE08).w
                rts
Bg_Scroll_Speed_HTz: ; loc_5C38: ; Hill Top Background Position  
                clr.l   ($FFFFEE08).w
                clr.l   ($FFFFEE0C).w
                clr.l   ($FFFFEE14).w
                clr.l   ($FFFFEE1C).w
                lea     ($FFFFA800).w, A2
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   ($FFFFEE28).w
                clr.l   ($FFFFEE2C).w
                clr.l   ($FFFFEE34).w
                clr.l   ($FFFFEE3C).w
                rts
Bg_Scroll_Speed_HPz: ; loc_5C64: ; Hidden Palace Background Position  
                asr.w   #$01, D0
                move.w  D0, ($FFFFEE0C).w
                clr.l   ($FFFFEE08).w
                rts 
Bg_Scroll_Speed_S1_Spring_Yard: ; loc_5C70:  
                asl.l   #$04, D0
                move.l  D0, D2
                asl.l   #$01, D0
                add.l   D2, D0
                asr.l   #$08, D0
                addq.w  #$01, D0
                move.w  D0, ($FFFFEE0C).w
                clr.l   ($FFFFEE08).w
                rts
Bg_Scroll_Speed_Null2: ; loc_5C86:
                rts  
Bg_Scroll_Speed_OOz: ; loc_5C88: ; Oil Ocean Background Position 
                lsr.w   #$03, D0
                addi.w  #$0050, D0
                move.w  D0, ($FFFFEE0C).w
                clr.l   ($FFFFEE08).w
                rts    
Bg_Scroll_Speed_S1_Spring_Yard2: ; loc_5C98: 
                asl.l   #$04, D0
                move.l  D0, D2
                asl.l   #$01, D0
                add.l   D2, D0
                asr.l   #$08, D0
                addq.w  #$01, D0
                move.w  D0, ($FFFFEE0C).w
                clr.l   ($FFFFEE08).w
                rts                
;loc_5CAE: 
                asr.w   #$03, D0
                move.w  D0, ($FFFFEE0C).w
                rts                
Bg_Scroll_Speed_DHz: ; loc_5CB6: ; Dust Hill Background Position
                clr.l   ($FFFFEE08).w
                clr.l   ($FFFFEE28).w
                tst.b   ($FFFFFE11).w
                bne.s   loc_5CD6
                divu.w  #$0003, D0
                subi.w  #$0140, D0
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFEE2C).w
                rts
loc_5CD6: 
                divu.w  #$0006, D0
                subi.w  #$0010, D0
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFEE2C).w
                rts   
Bg_Scroll_Speed_CNz: ; loc_5CE8: ; Casino Night Background Position 
                lsr.w   #$06, D0
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFEE2C).w
                clr.l   ($FFFFEE08).w
                lea     ($FFFFA800).w, A2
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   ($FFFFEE28).w
                clr.l   ($FFFFEE2C).w
                clr.l   ($FFFFEE34).w
                clr.l   ($FFFFEE3C).w
                rts                                                                      
Bg_Scroll_Speed_CPz: ; loc_5D12: ; Chemical Plant Background Position 
                lsr.w   #$02, D0
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFEE2C).w
                clr.l   ($FFFFEE08).w
                clr.l   ($FFFFEE10).w
                rts
Bg_Scroll_Speed_Null3: ; loc_5D26: ; Genocide City Background Position (Null)
                rts    
Bg_Scroll_Speed_NGHz: ; loc_5D28: ; Neo Green Hill Background Position 
                tst.b   ($FFFFFE11).w
                beq.s   loc_5D3A
                subi.w  #$00E0, D0
                lsr.w   #$01, D0
                move.w  D0, ($FFFFEE0C).w
                bra.s   loc_5D42
loc_5D3A:
                subi.w  #$0180, D0
                move.w  D0, ($FFFFEE0C).w
loc_5D42:
                clr.l   ($FFFFEE08).w
                clr.l   ($FFFFEE14).w
                clr.l   ($FFFFEE1C).w
                lea     ($FFFFA800).w, A2
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   (A2)+
                rts                
Bg_Scroll_Speed_Null4: ; loc_5D5A: ; Death Egg Background Position (Null)
                rts              
Background_Scroll_Layer: ; loc_5D5C:
                tst.b   ($FFFFEEDC).w
                beq.s   loc_5D64
                rts   
loc_5D64:  
                clr.w   ($FFFFEE50).w
                clr.w   ($FFFFEE52).w
                clr.w   ($FFFFEE54).w
                clr.w   ($FFFFEE56).w
                clr.w   ($FFFFEE58).w
                clr.w   ($FFFFEE5A).w
                clr.w   ($FFFFEE5C).w
                clr.w   ($FFFFEE5E).w
                lea     ($FFFFB000).w, A0
                lea     ($FFFFEE00).w, A1
                lea     ($FFFFEE40).w, A2
                lea     ($FFFFEE50).w, A3
                lea     ($FFFFEEB0).w, A4
                lea     ($FFFFEED0).w, A5
                lea     ($FFFFE500).w, A6
                bsr     Scroll_Horizontal       ; loc_6AEC
                lea     ($FFFFEE04).w, A1
                lea     ($FFFFEE41).w, A2
                lea     ($FFFFEEB2).w, A4
                bsr     Scroll_Vertical         ; loc_6B84
                tst.w   ($FFFFFFD8).w
                beq.s   loc_5DEA
                lea     ($FFFFB040).w, A0
                lea     ($FFFFEE20).w, A1
                lea     ($FFFFEE48).w, A2
                lea     ($FFFFEE58).w, A3
                lea     ($FFFFEEB8).w, A4
                lea     ($FFFFEED4).w, A5
                lea     ($FFFFE700).w, A6
                bsr     Scroll_Horizontal       ; loc_6AEC
                lea     ($FFFFEE24).w, A1
                lea     ($FFFFEE49).w, A2
                lea     ($FFFFEEBA).w, A4
                bsr     Scroll_Vertical         ; loc_6B84
loc_5DEA:                
                bsr     Dyn_Screen_Boss_Loader  ; loc_79C0
                move.w  ($FFFFEE04).w, ($FFFFF616).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                move.l  ($FFFFEE00).w, ($FFFFEEF0).w
                move.l  ($FFFFEE04).w, ($FFFFEEF4).w
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                move.w  Bg_Scroll_Index(PC, D0), D0 ; loc_5E16
                jmp     Bg_Scroll_Index(PC, D0) ; loc_5E16
Bg_Scroll_Index: ; loc_5E16:
                dc.w    Bg_Scroll_GHz-Bg_Scroll_Index; $00 - Green Hill Background Scroll   
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $01 - Null Background Scroll 
                dc.w    Bg_Scroll_Wz-Bg_Scroll_Index; $02 - Wood Background Scroll  
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $03 - Null Background Scroll  
                dc.w    Bg_Scroll_Mz-Bg_Scroll_Index; $04 - Metropolis Background Scroll 
                dc.w    Bg_Scroll_Mz-Bg_Scroll_Index; $05 - Metropolis Background Scroll 
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $06 - Null Background Scroll 
                dc.w    Bg_Scroll_HTz-Bg_Scroll_Index; $07 - Hill Top Background Scroll 
                dc.w    Bg_Scroll_HPz-Bg_Scroll_Index; $08 - Hidden Palace Background Scroll 
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $09 - Null Background Scroll 
                dc.w    Bg_Scroll_OOz-Bg_Scroll_Index; $0A - Oil Ocean Background Scroll 
                dc.w    Bg_Scroll_DHz-Bg_Scroll_Index; $0B - Dust Hill Background Scroll 
                dc.w    Bg_Scroll_CNz-Bg_Scroll_Index; $0C - Casino Night Background Scroll 
                dc.w    Bg_Scroll_CPz-Bg_Scroll_Index; $0D - Chemical Plant Background Scroll               
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $0E - Genocide City (Null) Background Scroll 
                dc.w    Bg_Scroll_NGHz-Bg_Scroll_Index; $0F - Neo Green Hill Background Scroll 
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $10 - Death Egg (Null) Background Scroll    
loc_5E38: ; Title Screen Background Scroll
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                move.w  ($FFFFEE00).w, D0
                cmpi.w  #$1C00, D0
                bcc.s   loc_5E4A
                addq.w  #$08, D0
loc_5E4A:
                move.w  D0, ($FFFFEE00).w
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE00).w, D2
                neg.w   D2
                moveq   #$00, D0
                bra.s   loc_5E78
Bg_Scroll_GHz: ; loc_5E5C: ; $00 - Green Hill Background Scroll                
                tst.w   ($FFFFFFD8).w
                bne     loc_5FA2
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                move.w  D0, D2
                swap.w  D0
loc_5E78:                
                move.w  #$0000, D0
                move.w  #$0015, D1
loc_5E80:
                move.l  D0, (A1)+
                dbra    D1, loc_5E80
                move.w  D2, D0
                asr.w   #$06, D0
                move.w  #$0039, D1  
loc_5E8E:
                move.l  D0, (A1)+
                dbra    D1, loc_5E8E
                move.w  D0, D3
                move.b  ($FFFFFE0F).w, D1
                andi.w  #$0007, D1
                bne.s   loc_5EA4
                subq.w  #$01, ($FFFFA800).w
loc_5EA4:
                move.w  ($FFFFA800).w, D1
                andi.w  #$001F, D1
                lea     (loc_5F60), A2
                lea     $00(A2, D1), A2
                move.w  #$0014, D1
loc_5EBA:
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D3, D0
                move.l  D0, (A1)+
                dbra    D1, loc_5EBA
                
                move.w  #$0000, D0
                move.w  #$000A, D1     
loc_5ECE:
                move.l  D0, (A1)+
                dbra    D1, loc_5ECE
                move.w  D2, D0
                asr.w   #$04, D0
                move.w  #$000F, D1
loc_5EDC:
                move.l  D0, (A1)+
                dbra    D1, loc_5EDC
                move.w  D2, D0
                asr.w   #$04, D0
                move.w  D0, D1
                asr.w   #$01, D1
                add.w   D1, D0
                move.w  #$000F, D1
loc_5EF0:
                move.l  D0, (A1)+
                dbra    D1, loc_5EF0
                move.l  D0, D4
                swap.w  D4
                move.w  D2, D0
                asr.w   #$01, D0
                move.w  D2, D1
                asr.w   #$03, D1
                sub.w   D1, D0
                ext.l   D0
                asl.l   #$08, D0
                divs.w  #$0030, D0
                ext.l   D0
                asl.l   #$08, D0
                moveq   #$00, D3
                move.w  D2, D3
                asr.w   #$03, D3
                move.w  #$000E, D1
loc_5F1A:                
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                dbra    D1, loc_5F1A
                move.w  #$0008, D1               
loc_5F2C:
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                dbra    D1, loc_5F2C
                move.w  #$000E, D1
loc_5F44:                
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                dbra    D1, loc_5F44               
                rts   
loc_5F60:                 
                dc.b    $01, $02, $01, $03, $01, $02, $02, $01, $02, $03, $01, $02, $01, $02, $00, $00
                dc.b    $02, $00, $03, $02, $02, $03, $02, $02, $01, $03, $00, $00, $01, $00, $01, $03
                dc.b    $01, $02, $01, $03, $01, $02, $02, $01, $02, $03, $01, $02, $01, $02, $00, $00
                dc.b    $02, $00, $03, $02, $02, $03, $02, $02, $01, $03, $00, $00, $01, $00, $01, $03
                dc.b    $01, $02               
loc_5FA2:
                move.b  ($FFFFFE0F).w, D1
                andi.w  #$0007, D1
                bne.s   loc_5FB0
                subq.w  #$01, ($FFFFA800).w
loc_5FB0:                
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                andi.l  #$FFFEFFFE, ($FFFFF616).w
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE00).w, D0
                move.w  #$000A, D1 
                bsr.s   loc_5FF8
                moveq   #$00, D0
                move.w  D0, ($FFFFF620).w
                subi.w  #$00E0, ($FFFFF620).w
                move.w  ($FFFFEE24).w, ($FFFFF61E).w
                subi.w  #$00E0, ($FFFFF61E).w
                andi.l  #$FFFEFFFE, ($FFFFF61E).w
                lea     ($FFFFE1B0).w, A1
                move.w  ($FFFFEE20).w, D0
                move.w  #$000E, D1
loc_5FF8:
                neg.w   D0
                move.w  D0, D2
                swap.w  D0
                move.w  #$0000, D0
loc_6002:
                move.l  D0, (A1)+
                dbra    D1, loc_6002
                move.w  D2, D0
                asr.w   #$06, D0
                move.w  #$001C, D1
loc_6010:
                move.l  D0, (A1)+
                dbra    D1, loc_6010
                move.w  D0, D3
                move.w  ($FFFFA800).w, D1
                andi.w  #$001F, D1
                lea     loc_5F60(PC), A2
                lea     $00(A2, D1), A2
                move.w  #$000A, D1
loc_602C:                
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D3, D0
                move.l  D0, (A1)+
                dbra    D1, loc_602C    
                move.w  #$0000, D0
                move.w  #$0004, D1
loc_6040:
                move.l  D0, (A1)+
                dbra    D1, loc_6040
                move.w  D2, D0
                asr.w   #$04, D0
                move.w  #$0007, D1
loc_604E:
                move.l  D0, (A1)+
                dbra    D1, loc_604E
                move.w  D2, D0
                asr.w   #$04, D0
                move.w  D0, D1
                asr.w   #$01, D1
                add.w   D1, D0
                move.w  #$0007, D1
loc_6062:
                move.l  D0, (A1)+
                dbra    D1, loc_6062
                move.w  D2, D0
                asr.w   #$01, D0
                move.w  D2, D1
                asr.w   #$03, D1
                sub.w   D1, D0
                ext.l   D0
                asl.l   #$08, D0
                divs.w  #$0030, D0
                ext.l   D0
                asl.l   #$08, D0
                moveq   #$00, D3
                move.w  D2, D3
                asr.w   #$03, D3
                move.w  #$0027, D1
loc_6088:                
                move.w  D2, (A1)+
                move.w  D3, (A1)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                dbra    D1, loc_6088    
                rts                  
Bg_Scroll_Wz: ; loc_6098: ; Wood Background Scroll
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$05, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$06, D5
                bsr     Scroll_Block1           ; loc_6CB4
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
loc_60C8:
                move.l  D0, (A1)+
                dbra    D1, loc_60C8
                rts               
Bg_Scroll_Mz: ; loc_60D0: ; Metropolis Background Scroll 
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$05, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$06, D5
                bsr     Scroll_Block1           ; loc_6CB4
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
loc_6100:
                move.l  D0, (A1)+
                dbra    D1, loc_6100
                rts                     
Bg_Scroll_HTz: ; loc_6108: ; Hill Top Background Scroll 
                tst.w   ($FFFFFFD8).w
                bne     loc_62B4
                tst.b   ($FFFFEEBC).w
                bne     loc_6236
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                move.w  D0, D2
                swap.w  D0
                move.w  D2, D0
                asr.w   #$03, D0
                move.w  #$007F, D1
loc_6134:
                move.l  D0, (A1)+
                dbra    D1, loc_6134
                move.l  D0, D4
                move.w  ($FFFFA822).w, D0
                addq.w  #$04, ($FFFFA822).w
                sub.w   D0, D2
                move.w  D2, D0
                move.w  D0, D1
                asr.w   #$01, D0
                asr.w   #$04, D1
                sub.w   D1, D0
                ext.l   D0
                asl.l   #$08, D0
                divs.w  #$0070, D0
                ext.l   D0
                asl.l   #$08, D0
                lea     ($FFFFA800).w, A2
                moveq   #$00, D3
                move.w  D1, D3
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A2)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A2)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A2)+
                move.w  D3, (A2)+
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                moveq   #$03, D1
loc_6188:
                move.w  D3, (A2)+
                move.w  D3, (A2)+
                move.w  D3, (A2)+
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                dbra    D1, loc_6188
                add.l   D0, D0
                add.l   D0, D0
                move.w  D3, D4
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, D4
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, D4
                move.w  #$0006, D1
loc_61C6:
                move.l  D4, (A1)+
                dbra    D1, loc_61C6
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, D4
                move.w  #$0007, D1
loc_61DA:
                move.l  D4, (A1)+
                dbra    D1, loc_61DA
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, D4
                move.w  #$0009, D1
loc_61EE:
                move.l  D4, (A1)+
                dbra    D1, loc_61EE
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, D4
                move.w  #$000E, D1
loc_6204:
                move.l  D4, (A1)+
                dbra    D1, loc_6204
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                move.w  #$0002, D2
loc_6218:
                move.w  D3, D4
                move.w  #$000F, D1
loc_621E:
                move.l  D4, (A1)+
                dbra    D1, loc_621E
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                dbra    D2, loc_6218 
                rts
loc_6236:
                move.w  ($FFFFEEB4).w, D4
                ext.l   D4
                lsl.l   #$08, D4
                moveq   #$02, D6
                bsr     Scroll_Block2           ; loc_6D1E
                move.w  ($FFFFEEB6).w, D5
                ext.l   D5
                lsl.l   #$08, D5
                moveq   #$00, D6
                bsr     Scroll_Block3           ; loc_6D52
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                move.w  ($FFFFEE04).w, ($FFFFF616).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                moveq   #$00, D2
                tst.b   ($FFFFEEBD).w
                beq.s   loc_6292
                move.w  ($FFFFFE04).w, D0
                andi.w  #$003F, D0
                lea     loc_5F60(PC), A1
                lea     $00(A1, D0), A1
                moveq   #$00, D0
                move.b  (A1)+, D0
                add.w   D0, ($FFFFF616).w
                add.w   D0, ($FFFFF618).w
                add.w   D0, ($FFFFEEF4).w
                move.b  (A1)+, D2
                add.w   D2, ($FFFFEEF0).w
loc_6292:
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                add.w   D2, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                add.w   D2, D0
                neg.w   D0
loc_62AC:
                move.l  D0, (A1)+
                dbra    D1, loc_62AC
                rts
loc_62B4:
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$06, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$02, D5
                moveq   #$00, D5
                bsr     Scroll_Block1           ; loc_6CB4
                move.b  #$00, ($FFFFEE52).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                andi.l  #$FFFEFFFE, ($FFFFF616).w
                lea     ($FFFFE000).w, A1
                move.w  #$006F, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
loc_62F4:
                move.l  D0, (A1)+
                dbra    D1, loc_62F4
                move.w  ($FFFFEEB8).w, D4
                ext.l   D4
                asl.l   #$06, D4
                add.l   D4, ($FFFFEE28).w
                moveq   #$00, D0
                move.w  D0, ($FFFFF620).w
                subi.w  #$00E0, ($FFFFF620).w
                move.w  ($FFFFEE24).w, ($FFFFF61E).w
                subi.w  #$00E0, ($FFFFF61E).w
                andi.l  #$FFFEFFFE, ($FFFFF61E).w
                lea     ($FFFFE1B0).w, A1
                move.w  #$0073, D1
                move.w  ($FFFFEE20).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE28).w, D0
                neg.w   D0
loc_633C:
                move.l  D0, (A1)+
                dbra    D1, loc_633C
                rts                 
Bg_Scroll_HPz: ; loc_6344: ; Hidden Palace Background Scroll 
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$06, D4
                moveq   #$02, D6
                bsr     Scroll_Block2           ; loc_6D1E
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$07, D5
                moveq   #$06, D6
                bsr     Scroll_Block3           ; loc_6D52
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFA800).w, A1
                move.w  ($FFFFEE00).w, D2
                neg.w   D2
                move.w  D2, D0
                asr.w   #$01, D0
                move.w  #$0007, D1
loc_6378:
                move.w  D0, (A1)+
                dbra    D1, loc_6378
                move.w  D2, D0
                asr.w   #$03, D0
                sub.w   D2, D0
                ext.l   D0
                asl.l   #$03, D0
                divs.w  #$0008, D0
                ext.l   D0
                asl.l   #$04, D0
                asl.l   #$08, D0
                moveq   #$00, D3
                move.w  D2, D3
                asr.w   #$01, D3
                lea     ($FFFFA860).w, A2
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D3, (A1)+
                move.w  D3, (A1)+
                move.w  D3, -(A2)
                move.w  D3, -(A2)
                move.w  D3, -(A2)
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D3, (A1)+
                move.w  D3, -(A2)
                move.w  D3, -(A2)
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D3, -(A2)
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D3, -(A2)
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
                move.w  #$0019, D1
loc_63DA:
                move.w  D0, (A1)+
                dbra    D1, loc_63DA
                adda.w  #$000E, A1
                move.w  D2, D0
                asr.w   #$01, D0
                move.w  #$0017, D1
loc_63EC:
                move.w  D0, (A1)+
                dbra    D1, loc_63EC
                lea     ($FFFFA800).w, A2
                move.w  ($FFFFEE0C).w, D0
                move.w  D0, D2
                andi.w  #$03F0, D0
                lsr.w   #$03, D0
                lea     $00(A2, D0), A2
                bra     loc_6AA8
Bg_Scroll_OOz: ; loc_640A: ; Oil Ocean Background Scroll               
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$05, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$05, D5
                bsr     Scroll_Block1           ; loc_6CB4
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
loc_643A:
                move.l  D0, (A1)+
                dbra    D1, loc_643A
                rts
Bg_Scroll_DHz: ; loc_6442: ; Dust Hill Background Scroll                
                tst.w   ($FFFFFFD8).w
                bne     loc_656C
                move.w  ($FFFFEE04).w, D0
                move.l  ($FFFFEE0C).w, D3
                tst.b   ($FFFFFE11).w
                bne.s   loc_6462
                divu.w  #$0003, D0
                subi.w  #$0140, D0
                bra.s   loc_646A
loc_6462:  
                divu.w  #$0006, D0
                subi.w  #$0010, D0
loc_646A:   
                swap.w  D0
                moveq   #$06, D6
                bsr     loc_6D5A
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFA800).w, A2
                lea     $001E(A2), A3
                move.w  ($FFFFEE00).w, D0
                ext.l   D0
                asl.l   #$04, D0
                divs.w  #$000A, D0
                ext.l   D0
                asl.l   #$04, D0
                asl.l   #$08, D0
                move.l  D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000E(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0008(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0006(A2)
                move.w  D1, $0010(A2)
                move.w  D1, $001C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0004(A2)
                move.w  D1, $0012(A2)
                move.w  D1, $001A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0002(A2)
                move.w  D1, $0014(A2)
                move.w  D1, $0018(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, (A2)
                move.w  D1, $0016(A2)
                lea     (loc_6554), A3
                lea     ($FFFFA800).w, A2
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE0C).w, D1
                moveq   #$00, D0
loc_6526:                
                move.b  (A3)+, D0
                addq.w  #$02, A2
                sub.w   D0, D1
                bcc.s   loc_6526      
                neg.w   D1
                subq.w  #$02, A2
                move.w  #$00DF, D2
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  (A2)+, D0
                neg.w   D0
loc_6542:
                move.l  D0, (A1)+
                subq.w  #$01, D1
                bne.s   loc_654E
                move.b  (A3)+, D1
                move.w  (A2)+, D0
                neg.w   D0
loc_654E:
                dbra    D2, loc_6542
                rts
loc_6554:
                dc.b    $25, $17, $12, $07, $07, $02, $02, $30, $0D, $13, $20, $40, $20, $13, $0D, $30
                dc.b    $02, $02, $07, $07, $20, $12, $17, $25
loc_656C:
                moveq   #$00, D0
                move.w  ($FFFFEE04).w, D0
                tst.b   ($FFFFFE11).w
                bne.s   loc_6582
                divu.w  #$0003, D0
                subi.w  #$0140, D0
                bra.s   loc_658A
loc_6582:
                divu.w  #$0006, D0
                subi.w  #$0010, D0
loc_658A:
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFF618).w
                andi.l  #$FFFEFFFE, ($FFFFF616).w
                lea     ($FFFFA800).w, A2
                lea     $001E(A2), A3
                move.w  ($FFFFEE00).w, D0
                ext.l   D0
                asl.l   #$04, D0
                divs.w  #$000A, D0
                ext.l   D0
                asl.l   #$04, D0
                asl.l   #$08, D0
                move.l  D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000E(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0008(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0006(A2)
                move.w  D1, $0010(A2)
                move.w  D1, $001C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0004(A2)
                move.w  D1, $0012(A2)
                move.w  D1, $001A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0002(A2)
                move.w  D1, $0014(A2)
                move.w  D1, $0018(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, (A2)
                move.w  D1, $0016(A2)
                lea     (loc_6678), A3
                lea     ($FFFFA800).w, A2
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE0C).w, D1
                lsr.w   #$01, D1
                moveq   #$00, D0
loc_664A:
                move.b  (A3)+, D0
                addq.w  #$02, A2
                sub.w   D0, D1
                bcc.s   loc_664A        
                neg.w   D1
                subq.w  #$02, A2
                move.w  #$006F, D2
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  (A2)+, D0
                neg.w   D0
loc_6666:
                move.l  D0, (A1)+
                subq.w  #$01, D1
                bne.s   loc_6672
                move.b  (A3)+, D1
                move.w  (A2)+, D0
                neg.w   D0
loc_6672:
                dbra    D2, loc_6666   
                bra.s   loc_6690
loc_6678:
                dc.b    $13
loc_6679:
                dc.b    $0B, $09, $04, $03, $01, $01, $18, $06, $0A, $10, $20, $10, $0A, $06, $18, $01
                dc.b    $01, $03, $04, $10, $09, $0B, $13
loc_6690:
                moveq   #$00, D0
                move.w  ($FFFFEE24).w, D0
                tst.b   ($FFFFFE11).w
                bne.s   loc_66A6
                divu.w  #$0003, D0
                subi.w  #$0140, D0
                bra.s   loc_66AE
loc_66A6:
                divu.w  #$0006, D0
                subi.w  #$0010, D0
loc_66AE:
                move.w  D0, ($FFFFEE2C).w
                move.w  D0, ($FFFFF620).w
                subi.w  #$00E0, ($FFFFF620).w
                move.w  ($FFFFEE24).w, ($FFFFF61E).w
                subi.w  #$00E0, ($FFFFF61E).w
                andi.l  #$FFFEFFFE, ($FFFFF61E).w
                lea     ($FFFFA800).w, A2
                lea     $001E(A2), A3
                move.w  ($FFFFEE20).w, D0
                ext.l   D0
                asl.l   #$04, D0
                divs.w  #$000A, D0
                ext.l   D0
                asl.l   #$04, D0
                asl.l   #$08, D0
                move.l  D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000E(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0008(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0006(A2)
                move.w  D1, $0010(A2)
                move.w  D1, $001C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0004(A2)
                move.w  D1, $0012(A2)
                move.w  D1, $001A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0002(A2)
                move.w  D1, $0014(A2)
                move.w  D1, $0018(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, (A2)
                move.w  D1, $0016(A2)
                lea     loc_6679(PC), A3
                lea     ($FFFFA800).w, A2
                lea     ($FFFFE1B0).w, A1
                move.w  ($FFFFEE2C).w, D1
                lsr.w   #$01, D1
                moveq   #$17, D0
                bra.s   loc_6782
loc_6780:
                move.b  (A3)+, D0
loc_6782:                
                addq.w  #$02, A2
                sub.w   D0, D1
                bcc.s   loc_6780
                neg.w   D1
                subq.w  #$02, A2
                move.w  #$0073, D2
                move.w  ($FFFFEE20).w, D0
                neg.w   D0
                swap.w  D0
                move.w  (A2)+, D0
                neg.w   D0
loc_679C:
                move.l  D0, (A1)+
                subq.w  #$01, D1  
                bne.s   loc_67A8
                move.b  (A3)+, D1
                move.w  (A2)+, D0
                neg.w   D0
loc_67A8:                
                dbra    D2, loc_679C
                rts                 
Bg_Scroll_CNz: ; loc_67AE: ; Casino Night Background Scroll 
                tst.w   ($FFFFFFD8).w
                bne     loc_67F2
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$06, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$02, D5
                bsr     Scroll_Block1           ; loc_6CB4
                clr.b   ($FFFFEE52).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
loc_67EA:
                move.l  D0, (A1)+
                dbra    D1, loc_67EA
                rts
loc_67F2:
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$06, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$02, D5
                moveq   #$00, D5
                bsr     Scroll_Block1           ; loc_6CB4
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                andi.l  #$FFFEFFFE, ($FFFFF616).w
                lea     ($FFFFE000).w, A1
                move.w  #$006F, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
loc_682C:
                move.l  D0, (A1)+
                dbra    D1, loc_682C
                move.w  ($FFFFEEB8).w, D4
                ext.l   D4
                asl.l   #$06, D4
                add.l   D4, ($FFFFEE28).w
                moveq   #$00, D0
                move.w  D0, ($FFFFF620).w
                subi.w  #$00E0, ($FFFFF620).w
                move.w  ($FFFFEE24).w, ($FFFFF61E).w
                subi.w  #$00E0, ($FFFFF61E).w
                andi.l  #$FFFEFFFE, ($FFFFF61E).w
                lea     ($FFFFE1B0).w, A1
                move.w  #$0073, D1
                move.w  ($FFFFEE20).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE28).w, D0
                neg.w   D0
loc_6874:
                move.l  D0, (A1)+
                dbra    D1, loc_6874
                rts                 
Bg_Scroll_CPz: ; loc_687C: ; Chemical Plant Background Scroll
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$05, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$06, D5
                bsr     Scroll_Block1           ; loc_6CB4
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$07, D4
                moveq   #$04, D6
                bsr     Scroll_Block4           ; loc_6D86
                move.w  ($FFFFEE0C).w, D0
                move.w  D0, ($FFFFEE14).w
                move.w  D0, ($FFFFF618).w
                move.b  ($FFFFEE52).w, D0
                or.b    ($FFFFEE54).w, D0
                move.b  D0, ($FFFFEE56).w
                clr.b   ($FFFFEE52).w
                clr.b   ($FFFFEE54).w
                move.b  ($FFFFFE0F).w, D1
                andi.w  #$0007, D1
                bne.s   loc_68CC
                subq.w  #$01, ($FFFFA800).w
loc_68CC:
                lea     (loc_718F), A0
                move.w  ($FFFFEE0C).w, D0
                move.w  D0, D2
                andi.w  #$03F0, D0
                lsr.w   #$04, D0
                lea     $00(A0, D0), A0
                move.w  D0, D4
                lea     ($FFFFE000).w, A1
                move.w  #$000E, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                andi.w  #$000F, D2
                move.w  ($FFFFEE08).w, D0
                cmpi.b  #$12, D4
                beq.s   loc_694A
                bcs.s   loc_6908
                move.w  ($FFFFEE10).w, D0
loc_6908:
                neg.w   D0
                add.w   D2, D2
                jmp     loc_6922(PC, D2)
loc_6910:                
                move.w  ($FFFFEE08).w, D0
                cmpi.b  #$12, D4
                beq.s   loc_6954
                bcs.s   loc_6920
                move.w  ($FFFFEE10).w, D0
loc_6920:
                neg.w   D0
loc_6922:
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                addq.b  #$01, D4
                dbra    D1, loc_6910 
                rts
loc_694A:
                move.w  #$000F, D0
                sub.w   D2, D0
                move.w  D0, D2
                bra.s   loc_6958
loc_6954:
                move.w  #$000F, D2
loc_6958:
                move.w  ($FFFFEE08).w, D3
                neg.w   D3
                move.w  ($FFFFA800).w, D0
                andi.w  #$001F, D0
                lea     loc_5F60(PC), A2
                lea     $00(A2, D0), A2
loc_696E:
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D3, D0
                move.l  D0, (A1)+
                dbra    D2, loc_696E   
                addq.b  #$01, D4
                dbra    D1, loc_6910
                rts                                 
Bg_Scroll_NGHz: ; loc_6982: ; Neo Green Hill Background Scroll  
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                muls.w  #$0119, D4
                moveq   #$02, D6
                bsr     Scroll_Block2           ; loc_6D1E
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$07, D5
                tst.b   ($FFFFFE11).w
                bne.s   loc_69A2
                asl.l   #$01, D5
loc_69A2:
                moveq   #$06, D6
                bsr     Scroll_Block3           ; loc_6D52
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFA800).w, A2
                lea     $0006(A2), A3
                move.w  ($FFFFEE00).w, D0
                ext.l   D0
                asl.l   #$04, D0
                divs.w  #$000A, D0
                ext.l   D0
                asl.l   #$04, D0
                asl.l   #$08, D0
                move.l  D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D1, D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, (A2)
                move.w  D1, $0004(A2)
                move.w  ($FFFFEE08).w, D0
                move.w  D0, $0002(A2)
                move.w  D0, $0016(A2)
                move.w  D0, $0000(A2)
                move.w  D0, $0004(A2)
                lea     (loc_6A64), A3
                lea     ($FFFFA800).w, A2
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE0C).w, D1
                moveq   #$00, D0
loc_6A36:                
                move.b  (A3)+, D0
                addq.w  #$02, A2
                sub.w   D0, D1
                bcc.s   loc_6A36 
                neg.w   D1
                subq.w  #$02, A2
                move.w  #$00DF, D2
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  (A2)+, D0
                neg.w   D0
loc_6A52:
                move.l  D0, (A1)+
                subq.w  #$01, D1
                bne.s   loc_6A5E
                move.b  (A3)+, D1
                move.w  (A2)+, D0
                neg.w   D0
loc_6A5E:
                dbra    D2, loc_6A52
                rts
loc_6A64:
                dc.b    $B0, $70, $30, $60, $15, $0C, $0E, $06, $0C, $1F, $30, $C0
Bg_Scroll_Null: ; loc_6A70: ; Null Background Scroll
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$05, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$06, D5
                bsr     Scroll_Block1           ; loc_6CB4
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
loc_6AA0:             
                move.l  D0, (A1)+
                dbra    D1, loc_6AA0
                rts                
loc_6AA8:
                lea     ($FFFFE000).w, A1
                move.w  #$000E, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                andi.w  #$000F, D2
                add.w   D2, D2
                move.w  (A2)+, D0
                jmp     loc_6AC6(PC, D2)
loc_6AC4:
                move.w  (A2)+, D0
loc_6AC6:
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                dbra    D1, loc_6AC4
                rts                                
Scroll_Horizontal: ; loc_6AEC:
                move.w  (A1), D4
                bsr.s   loc_6B12
                move.w  (A1), D0
                andi.w  #$0010, D0
                move.b  (A2), D1
                eor.b   D1, D0
                bne.s   loc_6B10
                eori.b  #$10, (A2)
                move.w  (A1), D0
                sub.w   D4, D0
                bpl.s   loc_6B0C
                bset    #$02, (A3)
                rts
loc_6B0C:
                bset    #$03, (A3)
loc_6B10:
                rts
loc_6B12:
                move.w  (A5), D1
                beq.s   loc_6B34
                subi.w  #$0100, D1
                move.w  D1, (A5)
                moveq   #$00, D1
                move.b  (A5), D1
                lsl.b   #$02, D1
                addq.b  #$04, D1
                move.w  $0002(A5), D0
                sub.b   D1, D0
                move.w  $00(A6, D0), D0
                andi.w  #$3FFF, D0
                bra.s   loc_6B38
loc_6B34:
                move.w  $0008(A0), D0
loc_6B38:
                sub.w   (A1), D0
                subi.w  #$0090, D0
                blt.s   loc_6B4A
                subi.w  #$0010, D0
                bge.s   loc_6B62
                clr.w   (A4)
                rts
loc_6B4A:
                cmpi.w  #$FFF0, D0
                bgt.s   loc_6B54
                move.w  #$FFF0, D0
loc_6B54:
                add.w   (A1), D0
                cmp.w   ($FFFFEEC8).w, D0
                bgt.s   loc_6B78
                move.w  ($FFFFEEC8).w, D0
                bra.s   loc_6B78
loc_6B62:                
                cmpi.w  #$0010, D0
                bcs.s   loc_6B6C
                move.w  #$0010, D0
loc_6B6C:
                add.w   (A1), D0
                cmp.w   ($FFFFEECA).w, D0
                blt.s   loc_6B78
                move.w  ($FFFFEECA).w, D0
loc_6B78:
                move.w  D0, D1
                sub.w   (A1), D1
                asl.w   #$08, D1
                move.w  D0, (A1)
                move.w  D1, (A4)
                rts
Scroll_Vertical: ; loc_6B84:
                moveq   #$00, D1
                move.w  $000C(A0), D0
                sub.w   (A1), D0
                btst    #$02, $0022(A0)
                beq.s   loc_6B96
                subq.w  #$05, D0
loc_6B96:
                btst    #$01, $0022(A0)
                beq.s   loc_6BB6
                addi.w  #$0020, D0
                sub.w   ($FFFFEED8).w, D0
                bcs.s   loc_6C00
                subi.w  #$0040, D0
                bcc.s   loc_6C00
                tst.b   ($FFFFEEDE).w
                bne.s   loc_6C12
                bra.s   loc_6BC2
loc_6BB6:
                sub.w   ($FFFFEED8).w, D0
                bne.s   loc_6BC6
                tst.b   ($FFFFEEDE).w
                bne.s   loc_6C12
loc_6BC2:                
                clr.w   (A4)
                rts
loc_6BC6:
                cmpi.w  #$0060, ($FFFFEED8).w
                bne.s   loc_6BEE 
                move.w  $0014(A0), D1
                bpl.s   loc_6BD6
                neg.w   D1
loc_6BD6:
                cmpi.w  #$0800, D1
                bcc.s   loc_6C00
                move.w  #$0600, D1
                cmpi.w  #$0006, D0
                bgt.s   loc_6C5A
                cmpi.w  #$FFFA, D0
                blt.s   loc_6C28
                bra.s   loc_6C18
loc_6BEE:
                move.w  #$0200, D1
                cmpi.w  #$0002, D0
                bgt.s   loc_6C5A
                cmpi.w  #$FFFE, D0
                blt.s   loc_6C28
                bra.s   loc_6C18    
loc_6C00:
                move.w  #$1000, D1
                cmpi.w  #$0010, D0
                bgt.s   loc_6C5A
                cmpi.w  #$FFF0, D0
                blt.s   loc_6C28
                bra.s   loc_6C18
loc_6C12:
                moveq   #$00, D0
                move.b  D0, ($FFFFEEDE).w
loc_6C18:                
                moveq   #$00, D1
                move.w  D0, D1
                add.w   (A1), D1  
                tst.w   D0
                bpl     loc_6C62
                bra     loc_6C32
loc_6C28:                
                neg.w   D1
                ext.l   D1    
                asl.l   #$08, D1
                add.l   (A1), D1
                swap.w  D1
loc_6C32:                
                cmp.w   ($FFFFEECC).w, D1
                bgt.s   loc_6C84
loc_6C38:
                cmpi.w  #$FF00, D1
                bgt.s   loc_6C54
                andi.w  #$07FF, D1
                andi.w  #$07FF, $000C(A0)
                andi.w  #$07FF, (A1)
                andi.w  #$03FF, $0008(A1)
                bra.s   loc_6C84
loc_6C54:   
                move.w  ($FFFFEECC).w, D1
                bra.s   loc_6C84             
loc_6C5A:
                ext.l   D1
                asl.l   #$08, D1
                add.l   (A1), D1
                swap.w  D1
loc_6C62:                
                cmp.w   ($FFFFEECE).w, D1
                blt.s   loc_6C84
                subi.w  #$0800, D1
                bcs.s   loc_6C80
                andi.w  #$07FF, $000C(A0)
                subi.w  #$0800, (A1)
                andi.w  #$03FF, $0008(A1)
                bra.s   loc_6C84
loc_6C80:
                move.w  ($FFFFEECE).w, D1
loc_6C84:
                move.w  (A1), D4
                swap.w  D1
                move.l  D1, D3
                sub.l   (A1), D3
                ror.l   #$08, D3
                move.w  D3, (A4)
                move.l  D1, (A1)
                move.w  (A1), D0
                andi.w  #$0010, D0
                move.b  (A2), D1
                eor.b   D1, D0
                bne.s   loc_6CB2
                eori.b  #$10, (A2)
                move.w  (A1), D0
                sub.w   D4, D0
                bpl.s   loc_6CAE
                bset    #$00, (A3)
                rts
loc_6CAE:
                bset    #$01, (A3)
loc_6CB2:
                rts  
Scroll_Block1: ; loc_6CB4:
                move.l  ($FFFFEE08).w, D2
                move.l  D2, D0
                add.l   D4, D0
                move.l  D0, ($FFFFEE08).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE42).w, D3
                eor.b   D3, D1
                bne.s   loc_6CE8
                eori.b  #$10, ($FFFFEE42).w
                sub.l   D2, D0
                bpl.s   loc_6CE2
                bset    #$02, ($FFFFEE52).w
                bra.s   loc_6CE8
loc_6CE2:
                bset    #$03, ($FFFFEE52).w
loc_6CE8:
                move.l  ($FFFFEE0C).w, D3
                move.l  D3, D0
                add.l   D5, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE43).w, D2
                eor.b   D2, D1
                bne.s   loc_6D1C
                eori.b  #$10, ($FFFFEE43).w
                sub.l   D3, D0
                bpl.s   loc_6D16
                bset    #$00, ($FFFFEE52).w
                rts
loc_6D16:
                bset    #$01, ($FFFFEE52).w
loc_6D1C:
                rts  
Scroll_Block2: ;  loc_6D1E:
                move.l  ($FFFFEE08).w, D2
                move.l  D2, D0
                add.l   D4, D0
                move.l  D0, ($FFFFEE08).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE42).w, D3
                eor.b   D3, D1
                bne.s   loc_6D50
                eori.b  #$10, ($FFFFEE42).w
                sub.l   D2, D0
                bpl.s   loc_6D4A
                bset    D6, ($FFFFEE52).w
                bra.s   loc_6D50
loc_6D4A:
                addq.b  #$01, D6
                bset    D6, ($FFFFEE52).w
loc_6D50:
                rts
Scroll_Block3: ; loc_6D52:
                move.l  ($FFFFEE0C).w, D3
                move.l  D3, D0
                add.l   D5, D0
loc_6D5A:                
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE43).w, D2
                eor.b   D2, D1
                bne.s   loc_6D84
                eori.b  #$10, ($FFFFEE43).w
                sub.l   D3, D0
                bpl.s   loc_6D7E
                bset    D6, ($FFFFEE52).w
                rts
loc_6D7E:
                addq.b  #$01, D6
                bset    D6, ($FFFFEE52).w
loc_6D84:
                rts
Scroll_Block4: ; loc_6D86:
                move.l  ($FFFFEE10).w, D2
                move.l  D2, D0
                add.l   D4, D0
                move.l  D0, ($FFFFEE10).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE44).w, D3
                eor.b   D3, D1
                bne.s   loc_6DB8
                eori.b  #$10, ($FFFFEE44).w
                sub.l   D2, D0
                bpl.s   loc_6DB2
                bset    D6, ($FFFFEE54).w
                bra.s   loc_6DB8
loc_6DB2:
                addq.b  #$01, D6
                bset    D6, ($FFFFEE54).w
loc_6DB8:
                rts                  
; Scroll_Block5: ;loc_6DBA:  Left Over GHz S1 Scroll
                move.l  ($FFFFEE18).w, D2
                move.l  D2, D0
                add.l   D4, D0
                move.l  D0, ($FFFFEE18).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE46).w, D3
                eor.b   D3, D1
                bne.s   loc_6DEC
                eori.b  #$10, ($FFFFEE46).w
                sub.l   D2, D0
                bpl.s   loc_6DE6
                bset    D6, ($FFFFEE56).w
                bra.s   loc_6DEC
loc_6DE6:
                addq.b  #$01, D6
                bset    D6, ($FFFFEE56).w
loc_6DEC:
                rts
                lea     ($00C00004), A5
                lea     ($00C00000), A6
                lea     ($FFFFEE52).w, A2
                lea     ($FFFFEE08).w, A3
                lea     ($FFFF8080).w, A4
                move.w  #$6000, D2
                bsr     loc_6F80
                lea     ($FFFFEE54).w, A2
                lea     ($FFFFEE10).w, A3
                bra     loc_7050                                                                     
LoadTilesAsYouMove: ; loc_6E1A:
                lea     ($00C00004), A5
                lea     ($00C00000), A6
                lea     ($FFFFEEA2).w, A2
                lea     ($FFFFEE68).w, A3   
                lea     ($FFFF8080).w, A4
                move.w  #$6000, D2 
                bsr     loc_6F80
                lea     ($FFFFEEA4).w, A2
                lea     ($FFFFEE70).w, A3 
                bsr     loc_7050
                lea     ($FFFFEEA6).w, A2
                lea     ($FFFFEE78).w, A3 
                bsr     loc_7140
                tst.w   ($FFFFFFD8).w
                beq.s   loc_6E6C
                lea     ($FFFFEEA8).w, A2
                lea     ($FFFFEE80).w, A3 
                lea     ($FFFF8000).w, A4
                move.w  #$6000, D2 
                bsr     loc_6F1A
loc_6E6C:                
                lea     ($FFFFEEA0).w, A2
                lea     ($FFFFEE60).w, A3 
                lea     ($FFFF8000).w, A4
                move.w  #$4000, D2 
                tst.b   ($FFFFF720).w
                beq.s   loc_6EB4
                move.b  #$00, ($FFFFF720).w
                moveq   #-$10, D4
                moveq   #$0F, D6
loc_6E8C                
                movem.l D4-D6, -(A7)
                moveq   #-$10, D5
                move.w  D4, D1
                bsr     loc_7644
                move.w  D1, D4 
                moveq   #-$10, D5
                bsr     loc_7350
                movem.l (A7)+, D4-D6 
                addi.w  #$0010, D4
                dbra    D6, loc_6E8C
                move.b  #$00, ($FFFFEEA0).w
                rts
loc_6EB4:
                tst.b   (A2)
                beq.s   loc_6F18
                bclr    #$00, (A2)
                beq.s   loc_6ECE
                moveq   #-$10, D4
                moveq   #-$10, D5  
                bsr     loc_7644
                moveq   #-$10, D4
                moveq   #-$10, D5 
                bsr     loc_7350
loc_6ECE:                 
                bclr    #$01, (A2)
                beq.s   loc_6EE8
                move.w  #$00E0, D4
                moveq   #-$10, D5 
                bsr     loc_7644
                move.w  #$00E0, D4
                moveq   #-$10, D5 
                bsr     loc_7350
loc_6EE8:    
                bclr    #$02, (A2)
                beq.s   loc_6EFE
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_7644
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_72C2
loc_6EFE: 
                bclr    #$03, (A2)
                beq.s   loc_6F18
                moveq   #-$10, D4
                move.w  #$0140, D5
                bsr     loc_7644
                moveq   #-$10, D4
                move.w  #$0140, D5
                bsr     loc_72C2
loc_6F18: 
                rts                
loc_6F1A: 
                tst.b   (A2)
                beq.s   loc_6F7E
                bclr    #$00, (A2)
                beq.s   loc_6F34
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_7680
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_7350
loc_6F34:  
                bclr    #$01, (A2)
                beq.s   loc_6F4E
                move.w  #$00E0, D4
                moveq   #-$10, D5
                bsr     loc_7680
                move.w  #$00E0, D4
                moveq   #-$10, D5
                bsr     loc_7350
loc_6F4E: 
                bclr    #$02, (A2)
                beq.s   loc_6F64
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_7680
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_72C2
loc_6F64:   
                bclr    #$03, (A2)
                beq.s   loc_6F7E
                moveq   #-$10, D4
                move.w  #$0140, D5
                bsr     loc_7680
                moveq   #-$10, D4
                move.w  #$0140, D5
                bsr     loc_72C2
loc_6F7E:   
                rts                            
loc_6F80: 
                tst.b   (A2)
                beq     loc_704E
                bclr    #$00, (A2)
                beq.s   loc_6F9C 
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_7644
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_7350
loc_6F9C:      
                bclr    #$01, (A2)
                beq.s   loc_6FB6
                move.w  #$00E0, D4
                moveq   #-$10, D5
                bsr     loc_7644
                move.w  #$00E0, D4
                moveq   #-$10, D5
                bsr     loc_7350
loc_6FB6:    
                bclr    #$02, (A2)
                beq.s   loc_6FCC
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_7644
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_72C2                   
loc_6FCC:    
                bclr    #$03, (A2)
                beq.s   loc_6FE6
                moveq   #-$10, D4
                move.w  #$0140, D5
                bsr     loc_7644
                moveq   #-$10, D4
                move.w  #$0140, D5
                bsr     loc_72C2
loc_6FE6:     
                bclr    #$04, (A2)
                beq.s   loc_6FFE
                moveq   #-$10, D4
                moveq   #$00, D5
                bsr     loc_7646
                moveq   #-$10, D4
                moveq   #$00, D5
                moveq   #$1F, D6
                bsr     loc_7354                  
loc_6FFE:     
                bclr    #$05, (A2)
                beq.s   loc_701A
                move.w  #$00E0, D4
                moveq   #$00, D5
                bsr     loc_7646
                move.w  #$00E0, D4
                moveq   #$00, D5
                moveq   #$1F, D6
                bsr     loc_7354 
loc_701A:    
                bclr    #$06, (A2)
                beq.s   loc_7032
                moveq   #-$10, D4
                moveq   #-$10, D5
                bsr     loc_7644
                moveq   #-$10, D4
                moveq   #-$10, D5
                moveq   #$1F, D6
                bsr     loc_7348
loc_7032:    
                bclr    #$07, (A2)
                beq.s   loc_704E
                move.w  #$00E0, D4
                moveq   #-$10, D5
                bsr     loc_7644  
                move.w  #$00E0, D4
                moveq   #-$10, D5
                moveq   #$1F, D6
                bsr     loc_7348
loc_704E:
                rts                 
loc_7050:  
                tst.b   (A2)
                beq     loc_7092
                bclr    #$00, (A2)
                beq.s   loc_7072
                move.w  #$0070, D4
                moveq   #-$10, D5
                bsr     loc_7644 
                move.w  #$0070, D4
                moveq   #-$10, D5
                moveq   #$02, D6
                bsr     loc_72C4                   
loc_7072:  
                bclr    #$01, (A2)
                beq.s   loc_7092
                move.w  #$0070, D4
                move.w  #$0140, D5
                bsr     loc_7644 
                move.w  #$0070, D4
                move.w  #$0140, D5
                moveq   #$02, D6
                bsr     loc_72C4
loc_7092:     
                rts

loc_7094:
                dc.b    $00
loc_7095:
                dc.b    $00, $00, $00, $00, $06, $06, $06, $06, $06, $06, $06, $06, $06, $06, $04, $04
                dc.b    $04, $04, $04, $04, $04, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02
                dc.b    $00                
;loc_70B6:
                moveq   #-$10, D4
                bclr    #$00, (A2)
                bne.s   loc_70C8
                bclr    #$01, (A2)
                beq.s   loc_7110
                move.w  #$00E0, D4
loc_70C8:
                lea     loc_7095(PC), A0
                move.w  ($FFFFEE0C).w, D0
                add.w   D4, D0
                andi.w  #$01F0, D0
                lsr.w   #$04, D0
                move.b  $00(A0, D0), D0
                lea     (loc_723C), A3
                move.w  $00(A3, D0), A3
                beq.s   loc_70FC
                moveq   #-$10, D5
                movem.l D4/D5, -(A7)
                bsr     loc_7644
                movem.l (A7)+, D4/D5
                bsr     loc_7350
                bra.s   loc_7110
loc_70FC:
                moveq   #$00, D5
                movem.l D4/D5, -(A7)
                bsr     loc_7646
                movem.l (A7)+, D4/D5
                moveq   #$1F, D6
                bsr     loc_7354
loc_7110:
                tst.b   (A2)
                bne.s   loc_7116
                rts
loc_7116:
                moveq   #-$10, D4
                moveq   #-$10, D5
                move.b  (A2), D0
                andi.b  #$A8, D0
                beq.s   loc_712A
                lsr.b   #$01, D0
                move.b  D0, (A2)
                move.w  #$0140, D5
loc_712A:
                lea     loc_7094(PC), A0
                move.w  ($FFFFEE0C).w, D0
                andi.w  #$01F0, D0
                lsr.w   #$04, D0
                lea     $00(A0, D0), A0
                bra     loc_7244                
loc_7140:
                tst.b   (A2)
                beq     loc_718C
                cmpi.b  #$0D, ($FFFFFE10).w
                beq     loc_71D0
                bclr    #$00, (A2)
                beq.s   loc_716C
                move.w  #$0040, D4
                moveq   #-$10, D5
                bsr     loc_7644 
                move.w  #$0040, D4
                moveq   #-$10, D5
                moveq   #$02, D6
                bsr     loc_72C4
loc_716C: 
                bclr    #$01, (A2)
                beq.s   loc_718C
                move.w  #$0040, D4
                move.w  #$0140, D5
                bsr     loc_7644 
                move.w  #$0040, D4
                move.w  #$0140, D5
                moveq   #$02, D6
                bsr     loc_72C4
loc_718C:
                rts
loc_718E:                 
                dc.b    $02 
loc_718F:  
                dc.b    $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02
                dc.b    $02, $02, $02, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $00    ; filler           
loc_71D0:    
                moveq   #-$10, D4
                bclr    #$00, (A2)
                bne.s   loc_71E2
                bclr    #$01, (A2) 
                beq.s   loc_720C
                move.w  #$00E0, D4
loc_71E2:                 
                lea     loc_718F(PC), A0
                move.w  ($FFFFEE0C).w, D0
                add.w   D4, D0
                andi.w  #$03F0, D0 
                lsr.w   #$04, D0
                move.b  $00(A0, D0), D0
                move.w  loc_723C(PC, D0), A3
                moveq   #-$10, D5
                movem.l D4-D5, -(A7)                 
                bsr     loc_7644
                movem.l (A7)+, D4-D5
                bsr     loc_7350
loc_720C: 
                tst.b   (A2)
                bne.s   loc_7212
                rts 
loc_7212:
                moveq   #-$10, D4
                moveq   #-$10, D5
                move.b  (A2), D0
                andi.b  #$A8, D0
                beq.s   loc_7226
                lsr.b   #$01, D0
                move.b  D0, (A2)
                move.w  #$0140, D5
loc_7226:                
                lea     loc_718E(PC), A0
                move.w  ($FFFFEE0C).w, D0
                andi.w  #$07F0, D0
                lsr.w   #$04, D0
                lea     $00(A0, D0), A0
                bra     loc_7244
loc_723C: 
                dc.w    $EE68, $EE68, $EE70, $EE78
loc_7244:
                tst.w   ($FFFFFFD8).w   
                bne.s   loc_7286
                moveq   #$0F, D6
                move.l  #$00800000, D7
loc_7252:                
                moveq   #$00, D0
                move.b  (A0)+, D0
                btst    D0, (A2)
                beq.s   loc_727A
                move.w  loc_723C(PC, D0), A3
                movem.l D4-D5/A0, -(A7) 
                movem.l D4-D5, -(A7) 
                bsr     loc_7602
                movem.l (A7)+, D4-D5
                bsr     loc_7644
                bsr     loc_7532
                movem.l (A7)+, D4-D5/A0
loc_727A:   
                addi.w  #$0010, D4
                dbra    D6,  loc_7252  
                clr.b   (A2)
                rts          
loc_7286:      
                moveq   #$0F, D6
                move.l  #$00800000, D7 
loc_728E:
                moveq   #$00, D0
                move.b  (A0)+, D0
                btst    D0, (A2)
                beq.s   loc_72B6
                move.w  loc_723C(PC, D0), A3
                movem.l D4-D5/A0, -(A7) 
                movem.l D4-D5, -(A7) 
                bsr     loc_7602
                movem.l (A7)+, D4-D5
                bsr     loc_7644
                bsr     loc_75B8
                movem.l (A7)+, D4-D5/A0
loc_72B6:  
                addi.w  #$0010, D4
                dbra    D6,  loc_728E  
                clr.b   (A2)
                rts                             
loc_72C2:
                moveq   #$0F, D6
loc_72C4:
                add.w   (A3), D5
                add.w   $0004(A3), D4
                move.l  #$00800000, D7 
                move.l  D0, D1
                bsr     loc_745C
                tst.w   ($FFFFFFD8).w
                bne.s   loc_7312
loc_72DC:                
                move.w  (A0), D3
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                lea     ($FFFF9000).w, A1
                adda.w  D3, A1
                move.l  D1, D0
                bsr     loc_7532
                adda.w  #$0010, A0
                addi.w  #$0100, D1
                andi.w  #$0FFF, D1
                addi.w  #$0010, D4
                move.w  D4, D0
                andi.w  #$0070, D0
                bne.s   loc_730C
                bsr     loc_745C
loc_730C:                 
                dbra    D6, loc_72DC
                rts                
loc_7312:     
                move.w  (A0), D3
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                lea     ($FFFF9000).w, A1
                adda.w  D3, A1
                move.l  D1, D0
                bsr     loc_75B8
                adda.w  #$0010, A0
                addi.w  #$0080, D1
                andi.w  #$0FFF, D1
                addi.w  #$0010, D4
                move.w  D4, D0
                andi.w  #$0070, D0
loc_733C:                
                bne.s   loc_7342
                bsr     loc_745C
loc_7342:
                dbra    D6, loc_7312
                rts
loc_7348:
                add.w   (A3), D5
                add.w   $0004(A3), D4
                bra.s   loc_7358
loc_7350:
                moveq   #$15, D6
                add.w   (A3), D5
loc_7354:                
                add.w   $0004(A3), D4  
loc_7358:                 
                tst.w   ($FFFFFFD8).w
                bne.s   loc_73D6
                move.l  A2, -(A7)
                move.w  D6, -(A7)
                lea     ($FFFFEF00).w, A2
                move.l  D0, D1
                or.w    D2, D1
                swap.w  D1
                move.l  D1, -(A7)
                move.l  D1, (A5)
                swap.w  D1
                bsr     loc_745C
loc_7376:                    
                move.w  (A0), D3              
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                lea     ($FFFF9000).w, A1
                adda.w  D3, A1
                bsr     loc_7492
                addq.w  #$02, A0
                addq.b  #$04, D1
                bpl.s   loc_7398
                andi.b  #$7F, D1
                swap.w  D1
                move.l  D1, (A5)
                swap.w  D1
loc_7398:
                addi.w  #$0010, D5
                move.w  D5, D0
                andi.w  #$0070, D0
                bne.s   loc_73A8
                bsr     loc_745C  
loc_73A8:
                dbra    D6, loc_7376   
                move.l  (A7)+, D1
                addi.l  #$00800000, D1
                lea     ($FFFFEF00).w, A2   
                move.l  D1, (A5)
                swap.w  D1
                move.w  (A7)+, D6  
loc_73BE:
                move.l  (A2)+, (A6)
                addq.b  #4, D1
                bmi.s   loc_73CE
                ori.b   #$80, D1
                swap.w  D1
                move.l  D1, (A5)
                swap.w  D1
loc_73CE:
                dbra    D6, loc_73BE
                move.l  (A7)+, A2
                rts
loc_73D6:
                move.l  D0, D1
                or.w    D2, D1
                swap.w  D1
                move.l  D1, (A5)
                swap.w  D1
                tst.b   D1
                bmi.s   loc_7420
                bsr     loc_745C
loc_73E8:                
                move.w  (A0), D3
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                lea     ($FFFF9000).w, A1
                adda.w  D3, A1
                bsr     loc_74F4
                addq.w  #$02, A0
                addq.b  #$04, D1
                bpl.s   loc_740A
                andi.b  #$7F, D1
                swap.w  D1
                move.l  D1, (A5)
                swap.w  D1
loc_740A:
                addi.w  #$0010, D5
                move.w  D5, D0
                andi.w  #$0070, D0
                bne.s   loc_741A
                bsr     loc_745C
loc_741A:
                dbra    D6, loc_73E8
                rts 
loc_7420:
                bsr     loc_745C
loc_7424:                
                move.w  (A0), D3
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                lea     ($FFFF9000).w, A1
                adda.w  D3, A1
                bsr     loc_74F4
                addq.w  #$02, A0
                addq.b  #$04, D1
                bmi.s   loc_7446
                ori.b   #$80, D1
                swap.w  D1
                move.l  D1, (A5)
                swap.w  D1
loc_7446:
                addi.w  #$0010, D5
                move.w  D5, D0
                andi.w  #$0070, D0
                bne.s   loc_7456
                bsr     loc_745C
loc_7456:
                dbra    D6, loc_7424
                rts                
loc_745C:               
                movem.l D4-D5, -(A7)
                move.w  D4, D3
                add.w   D3, D3
                andi.w  #$0F00, D3
                lsr.w   #3, D5
                move.w  D5, D0
                lsr.w   #4, D0
                andi.w  #$007F, D0
                add.w   D3, D0
                moveq   #-1, D3
                clr.w   D3
                move.b  $00(A4, D0), D3
                lsl.w   #7, D3
                andi.w  #$0070, D4
                andi.w  #$000E, D5
                add.w   D4, D3
                add.w   D5, D3
                move.l  D3, A0
                movem.l (A7)+, D4-D5
                rts  
loc_7492:
                btst    #$03, (A0)
                bne.s   loc_74BE
                btst    #$02, (A0)
                bne.s   loc_74A4
                move.l  (A1)+, (A6)
                move.l  (A1)+, (A2)+
                rts
loc_74A4:
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A6)
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A2)+
                rts
loc_74BE:
                btst    #$02, (A0)
                bne.s   loc_74DA
                move.l  (A1)+, D0
                move.l  (A1)+, D3
                eori.l  #$10001000, D3
                move.l  D3, (A6)
                eori.l  #$10001000, D0
                move.l  D0, (A2)+
                rts
loc_74DA:
                move.l  (A1)+, D0
                move.l  (A1)+, D3
                eori.l  #$18001800, D3
                swap.w  D3
                move.l  D3, (A6)
                eori.l  #$18001800, D0
                swap.w  D0
                move.l  D0, (A2)+
                rts  
loc_74F4:
                btst    #$03, (A0)
                bne.s   loc_7512
                btst    #$02, (A0)
                bne.s   loc_7504
                move.l  (A1)+, (A6)
                rts
loc_7504:
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A6)
                rts
loc_7512:
                btst    #$02, (A0)
                bne.s   loc_7524
                move.l  (A1)+, D3
                eori.l  #$10001000, D3
                move.l  D3, (A6)
                rts
loc_7524:
                move.l  (A1)+, D3
                eori.l  #$18001800, D3
                swap.w  D3
                move.l  D3, (A6)
                rts
loc_7532:
                or.w    D2, D0
                swap.w  D0
                btst    #$03, (A0)
                bne.s   loc_756E
                btst    #$02, (A0)
                bne.s   loc_754E
                move.l  D0, (A5)
                move.l  (A1)+, (A6)
                add.l   D7, D0
                move.l  D0, (A5)
                move.l  (A1)+, (A6)
                rts
loc_754E:
                move.l  D0, (A5)
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A6)
                add.l   D7, D0
                move.l  D0, (A5)
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A6)
                rts
loc_756E:
                btst    #$02, (A0)
                bne.s   loc_7594
                move.l  D5, -(A7)
                move.l  D0, (A5)
                move.l  (A1)+, D5
                move.l  (A1)+, D3
                eori.l  #$10001000, D3
                move.l  D3, (A6)
                add.l   D7, D0
                move.l  D0, (A5)
                eori.l  #$10001000, D5
                move.l  D5, (A6)
                move.l  (A7)+, D5
                rts
loc_7594:
                move.l  D5, -(A7)
                move.l  D0, (A5)
                move.l  (A1)+, D5
                move.l  (A1)+, D3
                eori.l  #$18001800, D3
                swap.w  D3
                move.l  D3, (A6)
                add.l   D7, D0
                move.l  D0, (A5)
                eori.l  #$18001800, D5
                swap.w  D5
                move.l  D5, (A6)
                move.l  (A7)+, D5
                rts
loc_75B8:
                or.w    D2, D0
                swap.w  D0
                btst    #$03, (A0)
                bne.s   loc_75DE
                btst    #$02, (A0)
                bne.s   loc_75CE
                move.l  D0, (A5)
                move.l  (A1)+, (A6)
                rts
loc_75CE:
                move.l  D0, (A5)
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A6)
                rts
loc_75DE:
                btst    #$02, (A0)
                bne.s   loc_75F2
                move.l  D0, (A5)
                move.l  (A1)+, D3
                eori.l  #$10001000, D3
                move.l  D3, (A6)
                rts
loc_75F2:
                move.l  D0, (A5)
                move.l  (A1)+, D3
                eori.l  #$18001800, D3
                swap.w  D3
                move.l  D3, (A6)
                rts
loc_7602:
                add.w   (A3), D5
                add.w   $0004(A3), D4
                lea     ($FFFF9000).w, A1
                move.w  D4, D3
                add.w   D3, D3
                andi.w  #$0F00, D3
                lsr.w   #$03, D5
                move.w  D5, D0
                lsr.w   #$04, D0
                andi.w  #$007F, D0
                add.w   D3, D0
                moveq   #-1, D3
                clr.w   D3
                move.b  $00(A4, D0), D3
                lsl.w   #$07, D3
                andi.w  #$0070, D4
                andi.w  #$000E, D5
                add.w   D4, D3
                add.w   D5, D3
                move.l  D3, A0
                move.w  (A0), D3
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                adda.w  D3, A1
                rts
loc_7644:
                add.w   (A3), D5   
loc_7646:
                tst.w   ($FFFFFFD8).w
                bne.s   loc_7666
                add.w   $0004(A3), D4
                andi.w  #$00F0, D4
                andi.w  #$01F0, D5
                lsl.w   #$04, D4
                lsr.w   #$02, D5
                add.w   D5, D4
                moveq   #$03, D0
                swap.w  D0
                move.w  D4, D0
                rts
loc_7666:
                add.w   $0004(A3), D4
loc_766A:                
                andi.w  #$01F0, D4
                andi.w  #$01F0, D5  
                lsl.w   #3, D4
                lsr.w   #2, D5
                add.w   D5, D4
                moveq   #$03, D0
                swap.w  D0
                move.w  D4, D0
                rts
loc_7680:
                tst.w   ($FFFFFFD8).w
                bne.s   loc_76A2
                add.w   $0004(A3), D4
                add.w   (A3), D5
                andi.w  #$00F0, D4
                andi.w  #$01F0, D5
                lsl.w   #4, D4
                lsr.w   #2, D5
                add.w   D5, D4
                moveq   #$02, D0
                swap.w  D0
                move.w  D4, D0
                rts
loc_76A2:
                add.w   $0004(A3), D4
                add.w   (A3), D5
                andi.w  #$01F0, D4
                andi.w  #$01F0, D5
                lsl.w   #3, D4
                lsr.w   #2, D5
                add.w   D5, D4
                moveq   #$02, D0
                swap.w  D0
                move.w  D4, D0
                rts  
Load_Tiles_From_Start: ; loc_76BE:
                lea     ($00C00004), A5
                lea     ($00C00000), A6
                tst.w   ($FFFFFFD8).w
                beq.s   loc_76DE
                lea     ($FFFFEE20).w, A3
                lea     ($FFFF8000).w, A4
                move.w  #$6000, D2
                bsr.s   loc_773A
loc_76DE:
                lea     ($FFFFEE00).w, A3
                lea     ($FFFF8000).w, A4
                move.w  #$4000, D2
                bsr.s   loc_770A
                lea     ($FFFFEE08).w, A3
                lea     ($FFFF8080).w, A4
                move.w  #$6000, D2
                tst.w   ($FFFFFFD8).w
                beq     loc_770A
                cmpi.b  #$0B, ($FFFFFE10).w
                beq     loc_776A
loc_770A:
                moveq   #-$10, D4
                moveq   #$0F, D6
loc_770E                
                movem.l D4-D6, -(A7)
                moveq   #$00, D5
                move.w  D4, D1
                bsr     loc_7644
                move.w  D1, D4
                moveq   #$00, D5
                moveq   #$1F, D6
                move    #$2700, SR
                bsr     loc_7348
                move    #$2300, SR
                movem.l (A7)+, D4-D6
                addi.w  #$0010, D4
                dbra    D6, loc_770E
                rts                  
loc_773A:
                moveq   #-$10, D4
                moveq   #$0F, D6
loc_773E                
                movem.l D4-D6, -(A7)
                moveq   #$00, D5
                move.w  D4, D1
                bsr     loc_7680
                move.w  D1, D4
                moveq   #$00, D5
                moveq   #$1F, D6
                move    #$2700, SR
                bsr     loc_7348
                move    #$2300, SR
                movem.l (A7)+, D4-D6
                addi.w  #$0010, D4
                dbra    D6, loc_773E
                rts     
loc_776A:
                moveq   #$00, D4
                moveq   #$1F, D6
loc_776E:
                movem.l D4-D6, -(A7)
                moveq   #$00, D5
                move.w  D4, D1
                bsr     loc_766A
                move.w  D1, D4
                moveq   #$00, D5
                moveq   #$1F, D6
                move    #$2700, SR
                bsr     loc_7358
                move    #$2300, SR
                movem.l (A7)+, D4-D6
                addi.w  #$0010, D4
                dbra    D6, loc_776E
                rts  
                
;=============================================================================== 
; Sub Routine Main_Level_Load_16_128_Blocks
; [ Begin ]                         
;===============================================================================                    
Main_Level_Load_16_128_Blocks: ; loc_779A: Load 16x16/128x128 Tiles
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                lea     (TilesMainTable), A2    ; loc_24354
                lea     $00(A2, D0), A2
                move.l  A2, -(A7)
                addq.w  #$04, A2
                move.l  (A2)+, A0
                bra.s   Main_Level_Load_Blocks_Convert16 ; loc_77CA
;===============================================================================
; loc_77BC:                
                lea     ($FFFF9000).w, A1       ; 16x16 Tiles
                move.w  #$0000, D0
                bsr     EniDec               ; loc_18DA
                bra.s   loc_77EE
;===============================================================================                
Main_Level_Load_Blocks_Convert16: ; loc_77CA:
                lea     ($FFFF9000).w, A1
                move.w  #$0BFF, D2
Main_Level_Load_16_Blocks_Loop: ; loc_77D2:
                move.w  (A0)+, D0
                tst.w   ($FFFFFFD8).w
                beq.s   Main_Level_Load_16_Blocks_Not2p ; loc_77E8
                move.w  D0, D1
                andi.w  #$F800, D0
                andi.w  #$07FF, D1
                lsr.w   #$01, D1
                or.w    D1, D0
Main_Level_Load_16_Blocks_Not2p: ; loc_77E8:                
                move.w  D0, (A1)+
                dbra    D2, Main_Level_Load_16_Blocks_Loop ; loc_77D2    
loc_77EE:    
                cmpi.b  #$07, ($FFFFFE10).w
                bne.s   loc_7820
                lea     ($FFFF9980).w, A1
                lea     (Hill_Top_16x16_Map), A0 ; loc_84A50
                move.w  #$03FF, D2
loc_7804:           
                move.w  (A0)+, D0
                tst.w   ($FFFFFFD8).w
                beq.s   loc_781A
                move.w  D0, D1
                andi.w  #$F800, D0
                andi.w  #$07FF, D1
                lsr.w   #$01, D1
                or.w    D1, D0
loc_781A:
                move.w  D0, (A1)+
                dbra    D2, loc_7804 
loc_7820:                
                move.l  (A2)+, A0
                lea     ($FFFF0000), A1         ; 128x128 Tiles
                bsr     KosDec             ; loc_1A58
                bra.s   Load_Level_Sprites      ; loc_785E 
;=============================================================================== 
; Sub Routine Main_Level_Load_16_128_Blocks
; [ End ]                         
;===============================================================================                 
                
;=============================================================================== 
; Sub Routine Unused #1
; [ Begin ]                         
;===============================================================================                  
;loc_782E:
z                bra.s   loc_784E                
;loc_7830:
                moveq   #$00, D1
                moveq   #$00, D2
                move.w  (A0)+, D0
                lea     $00(A0, D0), A1
                lea     ($FFFF0000), A2
                lea     ($FFFF8000).w, A3
loc_7844:
                bsr     UnknownDec              ; loc_1AF8
                tst.w   D0
                bmi.s   loc_7844
                bra.s   Load_Level_Sprites      ; loc_785E
loc_784E:
                lea     ($FFFF0000), A1
                move.w  #$3FFF, D0
loc_7858:                
                move.w  (A0)+, (A1)+
                dbra    D0, loc_7858
;=============================================================================== 
; Sub Routine Unused #1
; [ End ]                         
;===============================================================================                    

;=============================================================================== 
; Sub Routine Load_Level_Sprites
; [ Begin ]                         
;===============================================================================                  
Load_Level_Sprites: ; loc_785E: ; Load Palette for Levels
                bsr     Load_Level_Layout ; loc_7886
                move.l  (A7)+, A2
                addq.w  #$04, A2
                moveq   #$00, D0
                move.b  (A2), D0
                beq.s   Load_Level_Palete       ; loc_7870
                bsr     LoadPLC                 ; loc_173C
;=============================================================================== 
; Sub Routine Load_Level_Sprites
; [ End ]                         
;=============================================================================== 
                   
;=============================================================================== 
; Sub Routine Load_Level_Palete
; [ Begin ]                         
;===============================================================================                
Load_Level_Palete: ; loc_7870:                
                addq.w  #$04, A2
                moveq   #$00, D0
                move.b  (A2), D0
                cmpi.w  #$0C01, ($FFFFFE10).w
                bne.s   loc_7880         
                moveq   #$0A, D0                
loc_7880:
                bsr     PalLoad1                ; loc_28E2
                rts  
;=============================================================================== 
; Sub Routine Load_Level_Palete
; [ End ]                         
;===============================================================================
                              
;=============================================================================== 
; Sub Routine Load_Level_Layout
; [ Begin ]                         
;===============================================================================
Load_Level_Layout: ; loc_7886: ; Load Level Layout
                lea     ($FFFF8000).w, A3 ; Level Layout
                move.w  #$03FF, D1
                moveq   #$00, D0 
loc_7890:
                move.l  D0, (A3)+
                dbra    D1, loc_7890
                lea     ($FFFF8000).w, A3 ; Foreground
                moveq   #$00, D1
                bsr     Interleave_Level_Layout ; loc_78A6
                lea     ($FFFF8080).w, A3 ; Background
                moveq   #$02, D1
Interleave_Level_Layout: ; loc_78A6:                
                moveq   #$00, D0
                move.w  ($FFFFFE10).w, D0
                ror.b   #$01, D0
                lsr.w   #$05, D0
                add.w   D1, D0
                lea     (Level_Layout), A1   ; loc_3334E
                move.w  $00(A1, D0), D0
                lea     $00(A1, D0.l), A1
                moveq   #$00, D1
                move.w  D1, D2
                move.b  (A1)+, D1
                move.b  (A1)+, D2
                move.l  D1, D5
                addq.l  #$01, D5
                moveq   #$00, D3
                move.w  #$0080, D3
                divu.w  D5, D3
                subq.w  #$01, D3
loc_78D6:                
                move.l  A3, A0
                move.w  D3, D4
loc_78DA:                
                move.l  A1, -(A7)
                move.w  D1, D0
loc_78DE:                
                move.b  (A1)+, (A0)+  
                dbra    D0, loc_78DE
                move.l  (A7)+, A1
                dbra    D4, loc_78DA 
                lea     $00(A1, D5), A1
                lea     $0100(A3), A3
                dbra    D2, loc_78D6
                rts
;=============================================================================== 
; Sub Routine Load_Level_Layout
; [ End ]                         
;===============================================================================

;=============================================================================== 
; Sub Routine Unused #2
; [ Begin ]                         
;===============================================================================                 
;loc_78F8:
                lea     ($00FE0000), A1
                lea     ($00FE0080), A2
                lea     ($FFFF0000), A3
                move.w  #$003F, D1
loc_790E:                
                bsr     loc_79A0
                bsr     loc_79A0
                dbra    D1, loc_790E
                lea     ($00FE0000), A1
                lea     ($00FF0000), A2
                move.w  #$003F, D1
loc_792A:                
                move.w  #$0000, (A2)+
                dbra    D1, loc_792A
                move.w  #$3FBF, D1
loc_7936:                  
                move.w  (A1)+, (A2)+
                dbra    D1, loc_7936
                rts
                lea     ($00FE0000), A1
                lea     ($FFFF0000), A3
                moveq   #$1F, D0
loc_794C:              
                move.l  (A1)+, (A3)+
                dbra    D0, loc_794C
                moveq   #$00, D7
                lea     ($00FE0000), A1
                move.w  #$00FF, D5
loc_795E:                
                lea     ($FFFF0000), A3
                move.w  D7, D6
loc_7966:                
                movem.l A1-A3, -(A7)
                move.w  #$003F, D0
loc_796E:                
                cmpm.w  (A1)+, (A3)+
                bne.s   loc_7984
                dbra    D0, loc_796E
                movem.l (A7)+, A1-A3
                adda.w  #$0080, A1
                dbra    D5, loc_795E
                bra.s   loc_799E
loc_7984:
                movem.l (A7)+, A1-A3
                adda.w  #$0080, A3
                dbra    D6, loc_7966
                moveq   #$1F, D0
loc_7992:                
                move.l  (A1)+, (A3)+
                dbra    D0, loc_7992
                addq.l  #$01, D7
                dbra    D5, loc_795E
loc_799E:
                bra.s   loc_799E
loc_79A0:
                moveq   #$07, D0
loc_79A2:                
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                dbra    D0, loc_79A2
                adda.w  #$0080, A1
                adda.w  #$0080, A2
                rts            
;=============================================================================== 
; Sub Routine Unused #2
; [ Begin ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine Dyn_Screen_Boss_Loader
; [ Begin ]                         
;===============================================================================                    
Dyn_Screen_Boss_Loader: ; loc_79C0: ; Boss Loader / Level Dynamic Resize
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                move.w  DynResize_Index(PC, D0), D0 ; loc_7A26
                jsr     DynResize_Index(PC, D0)     ; loc_7A26
                moveq   #$02, D1
                move.w  ($FFFFEEC6).w, D0
                sub.w   ($FFFFEECE).w, D0
                beq.s   loc_79FE
                bcc.s   loc_7A00
                neg.w   D1
                move.w  ($FFFFEE04).w, D0
                cmp.w   ($FFFFEEC6).w, D0
                bls.s   loc_79F4
                move.w  D0, ($FFFFEECE).w
                andi.w  #$FFFE, ($FFFFEECE).w
loc_79F4:
                add.w   D1, ($FFFFEECE).w
                move.b  #$01, ($FFFFEEDE).w
loc_79FE:
                rts
loc_7A00:
                move.w  ($FFFFEE04).w, D0
                addi.w  #$0008, D0
                cmp.w   ($FFFFEECE).w, D0
                bcs.s   loc_7A1A
                btst    #$01, ($FFFFB022).w
                beq.s   loc_7A1A
                add.w   D1, D1
                add.w   D1, D1
loc_7A1A:
                add.w   D1, ($FFFFEECE).w
                move.b  #$01, ($FFFFEEDE).w
                rts
DynResize_Index: ; loc_7A26:
                dc.w    loc_7A48-DynResize_Index
                dc.w    loc_7AD8-DynResize_Index
                dc.w    loc_7ADA-DynResize_Index
                dc.w    loc_7ADC-DynResize_Index
                dc.w    loc_7ADE-DynResize_Index
                dc.w    loc_7AE0-DynResize_Index
                dc.w    loc_7AE2-DynResize_Index
                dc.w    loc_7AE4-DynResize_Index
                dc.w    loc_7FC8-DynResize_Index
                dc.w    loc_7FCA-DynResize_Index
                dc.w    loc_7FCC-DynResize_Index
                dc.w    loc_7FCE-DynResize_Index
                dc.w    DynResize_CNz-DynResize_Index  ; loc_7FD0
                dc.w    DynResize_CPz-DynResize_Index  ; loc_7FD2
                dc.w    DynResize_GCz-DynResize_Index  ; loc_7FD4
                dc.w    DynResize_NGHz-DynResize_Index ; loc_7FD6
                dc.w    DynResize_DEz-DynResize_Index  ; loc_7FD8
loc_7A48:
                tst.b   ($FFFFFE11).w
                bne.s   loc_7A50
                rts
loc_7A50:
                moveq   #$00, D0
                move.b  ($FFFFEEDF).w, D0
                move.w  loc_7A5E(PC, D0), D0
                jmp     loc_7A5E(PC, D0)
loc_7A5E:
                dc.w    loc_7A64-loc_7A5E
                dc.w    loc_7AB4-loc_7A5E
                dc.w    loc_7AC8-loc_7A5E
loc_7A64:
                cmpi.w  #$26E0, ($FFFFEE00).w
                bcs.s   loc_7AB2
                move.w  ($FFFFEE00).w, ($FFFFEEC8).w
                move.w  #$0390, ($FFFFEEC6).w
                move.w  #$0390, ($FFFFEECE).w
                addq.b  #$02, ($FFFFEEDF).w
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_7A9E
                move.b  #$55, (A1)
                move.b  #$81, $0028(A1)
                move.w  #$29D0, $0008(A1)
                move.w  #$0426, $000C(A1)
loc_7A9E:
                move.w  #$008E, D0
                bsr     PlayMusic              ; loc_14C0
                move.b  #$01, ($FFFFF7AA).w
                moveq   #$28, D0
                bra     LoadPLC                 ; loc_173C
loc_7AB2:
                rts
loc_7AB4:
                cmpi.w  #$2880, ($FFFFEE00).w
                bcs.s   loc_7AC6
                move.w  #$2880, ($FFFFEEC8).w
                addq.b  #$02, ($FFFFEEDF).w
loc_7AC6:
                rts
loc_7AC8:
                tst.b   ($FFFFF7A7).w
                beq.s   loc_7AD4
                move.b  #$00, ($FFFFF600).w
loc_7AD4:
                rts
                rts
loc_7AD8:
                rts
loc_7ADA:
                rts
loc_7ADC:
                rts
loc_7ADE:
                rts
loc_7AE0:
                rts
loc_7AE2:
                rts
loc_7AE4:
                tst.b   ($FFFFFE11).w
                bne     loc_7CF6
                moveq   #$00, D0
                move.b  ($FFFFEEDF).w, D0
                move.w  loc_7AFA(PC, D0), D0
                jmp     loc_7AFA(PC, D0)
loc_7AFA:
                dc.w    loc_7B00-loc_7AFA
                dc.w    loc_7B6C-loc_7AFA
                dc.w    loc_7C20-loc_7AFA
loc_7B00:
                cmpi.w  #$0400, ($FFFFEE04).w
                bcs.s   loc_7B48
                cmpi.w  #$1800, ($FFFFEE00).w
                bcs.s   loc_7B48
                move.b  #$01, ($FFFFEEBC).w
                move.l  ($FFFFEE00).w, ($FFFFEE08).w
                move.l  ($FFFFEE04).w, ($FFFFEE0C).w
                moveq   #$00, D0
                move.w  D0, ($FFFFEEB4).w
                move.w  D0, ($FFFFEEB6).w
                move.w  D0, ($FFFFEEE2).w
                move.w  #$0140, ($FFFFEEE4).w
                subi.w  #$0100, ($FFFFEE0C).w
                move.w  #$0000, ($FFFFEEE6).w
                addq.b  #$02, ($FFFFEEDF).w
loc_7B46:                
                rts
loc_7B48:
                tst.b   ($FFFFEEBC).w
                beq.s   loc_7B46
                move.w  #$0200, D0
                moveq   #$00, D1
                move.w  D1, ($FFFFEEB4).w
                move.w  D1, ($FFFFEEB6).w
                bsr     loc_7C84
                or.w    D0, D1
                bne.s   loc_7B46
                move.b  #$00, ($FFFFEEBC).w
                rts
loc_7B6C:
                tst.b   ($FFFFEEE8).w
                bne.s   loc_7B8A
                cmpi.w  #$0140, ($FFFFEEE4).w
                beq.s   loc_7BA2
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   loc_7BC0
                addq.w  #$01, ($FFFFEEE4).w
                bra.s   loc_7BC0
loc_7B8A:
                cmpi.w  #$00E0, ($FFFFEEE4).w
                beq.s   loc_7BA2
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   loc_7BC0
                subq.w  #$01, ($FFFFEEE4).w
                bra.s   loc_7BC0
loc_7BA2:
                move.b  #$00, ($FFFFEEBD).w
                subq.w  #$01, ($FFFFEEE6).w
                bpl.s   loc_7BC0
                move.w  #$0078, ($FFFFEEE6).w
                eori.b  #$01, ($FFFFEEE8).w
                move.b  #$01, ($FFFFEEBD).w
loc_7BC0:
                cmpi.w  #$1800, ($FFFFEE00).w
                bcs.s   loc_7BE8
                cmpi.w  #$1F00, ($FFFFEE00).w
                bcc.s   loc_7C04
                move.w  ($FFFFEEB0).w, ($FFFFEEB4).w
                move.w  ($FFFFEEB2).w, ($FFFFEEB6).w
                move.w  ($FFFFEE00).w, D0
                move.w  ($FFFFEE04).w, D1
                bra     loc_7C84
loc_7BE8:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                subq.b  #$02, ($FFFFEEDF).w
                rts
loc_7C04:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                addq.b  #$02, ($FFFFEEDF).w
                rts
loc_7C20:
                cmpi.w  #$1F00, ($FFFFEE00).w
                bcc.s   loc_7C60
                move.b  #$01, ($FFFFEEBC).w
                move.l  ($FFFFEE00).w, ($FFFFEE08).w
                move.l  ($FFFFEE04).w, ($FFFFEE0C).w
                moveq   #$00, D0
                move.w  D0, ($FFFFEEB4).w
                move.w  D0, ($FFFFEEB6).w
                move.w  D0, ($FFFFEEE2).w
                move.w  #$0140, ($FFFFEEE4).w
                subi.w  #$0100, ($FFFFEE0C).w
                move.w  #$0000, ($FFFFEEE6).w
                subq.b  #$02, ($FFFFEEDF).w
loc_7C5E:                
                rts
loc_7C60:
                tst.b   ($FFFFEEBC).w
                beq.s   loc_7C5E
                move.w  #$0200, D0
                moveq   #$00, D1
                move.w  D1, ($FFFFEEB4).w
                move.w  D1, ($FFFFEEB6).w
                bsr     loc_7C84
                or.w    D0, D1
                bne.s   loc_7C5E
                move.b  #$00, ($FFFFEEBC).w
                rts
loc_7C84:
                sub.w   ($FFFFEE08).w, D0
                sub.w   ($FFFFEEE2).w, D0
                bpl.s   loc_7C9A
                cmpi.w  #$FFF0, D0
                bgt.s   loc_7C98
                move.w  #$FFF0, D0
loc_7C98:
                bra.s   loc_7CA4
loc_7C9A:
                cmpi.w  #$0010, D0
                bcs.s   loc_7CA4
                move.w  #$0010, D0
loc_7CA4:
                move.b  D0, ($FFFFEEB4).w
                sub.w   ($FFFFEE0C).w, D1
                sub.w   ($FFFFEEE4).w, D1
                bpl.s   loc_7CBE
                cmpi.w  #$FFF0, D1
                bgt.s   loc_7CBC
                move.w  #$FFF0, D1
loc_7CBC:
                bra.s   loc_7CC8
loc_7CBE:
                cmpi.w  #$0010, D1
                bcs.s   loc_7CC8
                move.w  #$0010, D1
loc_7CC8:
                move.b  D1, ($FFFFEEB6).w
                rts
                btst    #$00, ($FFFFF606).w
                beq.s   loc_7CE0
                tst.w   ($FFFFEEE4).w
                beq.s   loc_7CE0
                subq.w  #$01, ($FFFFEEE4).w
loc_7CE0:
                btst    #$01, ($FFFFF606).w
                beq.s   loc_7CF4
                cmpi.w  #$0700, ($FFFFEEE4).w
                beq.s   loc_7CF4
                addq.w  #$01, ($FFFFEEE4).w
loc_7CF4:
                rts
loc_7CF6:
                moveq   #$00, D0
                move.b  ($FFFFEEDF).w, D0
                move.w  loc_7D04(PC, D0), D0
                jmp     loc_7D04(PC, D0)
loc_7D04:
                dc.w    loc_7D0E-loc_7D04
                dc.w    loc_7D90-loc_7D04
                dc.w    loc_7E44-loc_7D04
                dc.w    loc_7EA8-loc_7D04
                dc.w    loc_7F5C-loc_7D04
loc_7D0E:
                cmpi.w  #$14C0, ($FFFFEE00).w
                bcs.s   loc_7D6C
                move.b  #$01, ($FFFFEEBC).w
                move.l  ($FFFFEE00).w, ($FFFFEE08).w
                move.l  ($FFFFEE04).w, ($FFFFEE0C).w
                moveq   #$00, D0
                move.w  D0, ($FFFFEEB4).w
                move.w  D0, ($FFFFEEB6).w
                move.w  D0, ($FFFFEEE2).w
                move.w  #$02C0, ($FFFFEEE4).w
                subi.w  #$0100, ($FFFFEE0C).w
                move.w  #$0000, ($FFFFEEE6).w
                addq.b  #$02, ($FFFFEEDF).w
                cmpi.w  #$0380, ($FFFFEE04).w
                bcs.s   loc_7D6A
                move.w  #$F980, ($FFFFEEE2).w
                addi.w  #$0480, ($FFFFEE08).w
                move.w  #$0300, ($FFFFEEE4).w
                addq.b  #$06, ($FFFFEEDF).w
loc_7D6A:
                rts
loc_7D6C:
                tst.b   ($FFFFEEBC).w
                beq.s   loc_7D6A
                move.w  #$0200, D0
                moveq   #$00, D1
                move.w  D1, ($FFFFEEB4).w
                move.w  D1, ($FFFFEEB6).w
                bsr     loc_7C84
                or.w    D0, D1
                bne.s   loc_7D6A
                move.b  #$00, ($FFFFEEBC).w
                rts
loc_7D90:
                tst.b   ($FFFFEEE8).w
                bne.s   loc_7DAE
                cmpi.w  #$02C0, ($FFFFEEE4).w
                beq.s   loc_7DC6
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   loc_7DE4
                addq.w  #$01, ($FFFFEEE4).w
                bra.s   loc_7DE4
loc_7DAE:
                cmpi.w  #$0000, ($FFFFEEE4).w
                beq.s   loc_7DC6
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   loc_7DE4
                subq.w  #$01, ($FFFFEEE4).w
                bra.s   loc_7DE4
loc_7DC6:
                move.b  #$00, ($FFFFEEBD).w
                subq.w  #$01, ($FFFFEEE6).w
                bpl.s   loc_7DE4
                move.w  #$0078, ($FFFFEEE6).w
                eori.b  #$01, ($FFFFEEE8).w
                move.b  #$01, ($FFFFEEBD).w
loc_7DE4:
                cmpi.w  #$14C0, ($FFFFEE00).w
                bcs.s   loc_7E0C
                cmpi.w  #$1B00, ($FFFFEE00).w
                bcc.s   loc_7E28
                move.w  ($FFFFEEB0).w, ($FFFFEEB4).w
                move.w  ($FFFFEEB2).w, ($FFFFEEB6).w
                move.w  ($FFFFEE00).w, D0
                move.w  ($FFFFEE04).w, D1
                bra     loc_7C84
loc_7E0C:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                subq.b  #$02, ($FFFFEEDF).w
                rts
loc_7E28:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                addq.b  #$02, ($FFFFEEDF).w
                rts
loc_7E44:
                cmpi.w  #$1B00, ($FFFFEE00).w
                bcc.s   loc_7E84
                move.b  #$01, ($FFFFEEBC).w
                move.l  ($FFFFEE00).w, ($FFFFEE08).w
                move.l  ($FFFFEE04).w, ($FFFFEE0C).w
                moveq   #$00, D0
                move.w  D0, ($FFFFEEB4).w
                move.w  D0, ($FFFFEEB6).w
                move.w  D0, ($FFFFEEE2).w
                move.w  #$02C0, ($FFFFEEE4).w
                subi.w  #$0100, ($FFFFEE0C).w
                move.w  #$0000, ($FFFFEEE6).w
                subq.b  #$02, ($FFFFEEDF).w
loc_7E82:                
                rts
loc_7E84:
                tst.b   ($FFFFEEBC).w
                beq.s   loc_7E82
                move.w  #$0200, D0
                moveq   #$00, D1
                move.w  D1, ($FFFFEEB4).w
                move.w  D1, ($FFFFEEB6).w
                bsr     loc_7C84
                or.w    D0, D1
                bne.s   loc_7E82
                move.b  #$00, ($FFFFEEBC).w
                rts
loc_7EA8:
                tst.b   ($FFFFEEE8).w
                bne.s   loc_7EC6
                cmpi.w  #$0300, ($FFFFEEE4).w
                beq.s   loc_7EDE
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   loc_7EFC
                addq.w  #$01, ($FFFFEEE4).w
                bra.s   loc_7EFC
loc_7EC6:
                cmpi.w  #$0000, ($FFFFEEE4).w
                beq.s   loc_7EDE
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   loc_7EFC
                subq.w  #$01, ($FFFFEEE4).w
                bra.s   loc_7EFC
loc_7EDE:
                move.b  #$00, ($FFFFEEBD).w
                subq.w  #$01, ($FFFFEEE6).w
                bpl.s   loc_7EFC
                move.w  #$0078, ($FFFFEEE6).w
                eori.b  #$01, ($FFFFEEE8).w
                move.b  #$01, ($FFFFEEBD).w
loc_7EFC:
                cmpi.w  #$14C0, ($FFFFEE00).w
                bcs.s   loc_7F24
                cmpi.w  #$1B00, ($FFFFEE00).w
                bcc.s   loc_7F40
                move.w  ($FFFFEEB0).w, ($FFFFEEB4).w
                move.w  ($FFFFEEB2).w, ($FFFFEEB6).w
                move.w  ($FFFFEE00).w, D0
                move.w  ($FFFFEE04).w, D1
                bra     loc_7C84
loc_7F24:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                subq.b  #$06, ($FFFFEEDF).w
                rts
loc_7F40:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                addq.b  #$02, ($FFFFEEDF).w
                rts
loc_7F5C:
                cmpi.w  #$1B00, ($FFFFEE00).w
                bcc.s   loc_7FA4
                move.b  #$01, ($FFFFEEBC).w
                move.l  ($FFFFEE00).w, ($FFFFEE08).w
                move.l  ($FFFFEE04).w, ($FFFFEE0C).w
                moveq   #$00, D0
                move.w  D0, ($FFFFEEB4).w
                move.w  D0, ($FFFFEEB6).w
                move.w  #$F980, ($FFFFEEE2).w
                addi.w  #$0480, ($FFFFEE08).w
                move.w  #$0300, ($FFFFEEE4).w
                subi.w  #$0100, ($FFFFEE0C).w
                move.w  #$0000, ($FFFFEEE6).w
                subq.b  #$02, ($FFFFEEDF).w
loc_7FA2:                
                rts
loc_7FA4:
                tst.b   ($FFFFEEBC).w
                beq.s   loc_7FA2
                move.w  #$0200, D0
                moveq   #$00, D1
                move.w  D1, ($FFFFEEB4).w
                move.w  D1, ($FFFFEEB6).w
                bsr     loc_7C84
                or.w    D0, D1
                bne.s   loc_7FA2
                move.b  #$00, ($FFFFEEBC).w
                rts
loc_7FC8:
                rts
loc_7FCA:
                rts
loc_7FCC:
                rts
loc_7FCE:
                rts
DynResize_CNz: ; loc_7FD0:
                rts
DynResize_CPz: ;loc_7FD2:
                rts
DynResize_GCz: ;loc_7FD4:
                rts
DynResize_NGHz: ;loc_7FD6:
                rts
DynResize_DEz: ;loc_7FD8:
                rts   
                nop                             ; Filler    
;===============================================================================                 
; Object 0x11 - Bridge
; [ Begin ] 
;===============================================================================                
Obj_0x11_Bridge:  ; loc_7FDC:
                btst    #$06, $0001(A0)
                bne     loc_7FF4
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_7FFC(PC, D0), D1
                jmp     loc_7FFC(PC, D1)
loc_7FF4:
                move.w  #$0180, D0
                bra     DisplaySprite_Param     ; loc_D3FE
loc_7FFC:                
                dc.w    loc_8004-loc_7FFC
                dc.w    loc_80EA-loc_7FFC
                dc.w    loc_817C-loc_7FFC
                dc.w    loc_8180-loc_7FFC
loc_8004:                
                addq.b  #$02, $0024(A0)
                move.l  #Bridge_Mappings, $0004(A0) ; loc_85E0
                move.w  #$43C6, $0002(A0)
                move.b  #$03, $0018(A0)
                cmpi.b  #$08, ($FFFFFE10).w
                bne.s   loc_8036
                addq.b  #$04, $0024(A0)
                move.l  #Hpz_Bridge_Mappings, $0004(A0) ; loc_8598
                move.w  #$6300, $0002(A0)
loc_8036:
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$80, $0019(A0)
                move.w  $000C(A0), D2
                move.w  D2, $003C(A0)
                move.w  $0008(A0), D3
                lea     $0028(A0), A2
                moveq   #$00, D1
                move.b  (A2), D1
                move.w  D1, D0
                lsr.w   #$01, D0
                lsl.w   #$04, D0
                sub.w   D0, D3
                swap.w  D1
                move.w  #$0008, D1
                bsr.s   loc_8098
                move.w  $0028(A1), D0
                subq.w  #$08, D0
                move.w  D0, $0008(A1)
                move.l  A1, $0030(A0)
                swap.w  D1
                subq.w  #$08, D1
                bls.s   loc_8096
                move.w  D1, D4
                bsr.s   loc_8098
                move.l  A1, $0034(A0)
                move.w  D4, D0
                add.w   D0, D0
                add.w   D4, D0
                move.w  $10(A1, D0), D0
                subq.w  #$08, D0
                move.w  D0, $0008(A1)
loc_8096:
                bra.s   loc_80EA
loc_8098:                
                bsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_80E8
                move.b  $0000(A0), $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  $0001(A0), $0001(A1)
                bset    #$06, $0001(A1)
                move.b  #$40, $000E(A1)
                move.b  D1, $000F(A1)
                subq.b  #$01, D1
                lea     $0010(A1), A2
loc_80D8:                
                move.w  D3, (A2)+
                move.w  D2, (A2)+
                move.w  #$0000, (A2)+
                addi.w  #$0010, D3
                dbra    D1, loc_80D8
loc_80E8:
                rts  
loc_80EA:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   loc_8100
                tst.b   $003E(A0)
                beq.s   loc_812C
                subq.b  #$04, $003E(A0)
                bra.s   loc_8128
loc_8100:
                andi.b  #$10, D0
                beq.s   loc_811C
                move.b  $003F(A0), D0
                sub.b   $003B(A0), D0
                beq.s   loc_811C
                bcc.s   loc_8118
                addq.b  #$01, $003F(A0)
                bra.s   loc_811C
loc_8118:
                subq.b  #$01, $003F(A0)
loc_811C:
                cmpi.b  #$40, $003E(A0)
                beq.s   loc_8128
                addq.b  #$04, $003E(A0)
loc_8128:
                bsr     loc_8358
loc_812C:
                moveq   #$00, D1
                move.b  $0028(A0), D1
                lsl.w   #$03, D1
                move.w  D1, D2
                addq.w  #$08, D1
                add.w   D2, D2
                moveq   #$08, D3
                move.w  $0008(A0), D4
                bsr     loc_81E2
loc_8144:                
                tst.w   ($FFFFFFD8).w
                beq.s   loc_814C
                rts
loc_814C:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_8160
                rts
loc_8160:
                move.l  $0030(A0), A1
                bsr     loc_D3B6
                cmpi.b  #$08, $0028(A0)
                bls.s   loc_8178
                move.l  $0034(A0), A1
                bsr     loc_D3B6
loc_8178:                
                bra     DeleteObject            ; loc_D3B4
loc_817C:
                bra     DisplaySprite           ; loc_D3C2
loc_8180:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   loc_8196
                tst.b   $003E(A0)
                beq.s   loc_81C2
                subq.b  #$04, $003E(A0)
                bra.s   loc_81BE
loc_8196:
                andi.b  #$10, D0
                beq.s   loc_81B2
                move.b  $003F(A0), D0
                sub.b   $003B(A0), D0
                beq.s   loc_81B2
                bcc.s   loc_81AE
                addq.b  #$01, $003F(A0)
                bra.s   loc_81B2
loc_81AE:
                subq.b  #$01, $003F(A0)
loc_81B2:
                cmpi.b  #$40, $003E(A0)
                beq.s   loc_81BE
                addq.b  #$04, $003E(A0)
loc_81BE:
                bsr     loc_8358
loc_81C2:                
                moveq   #$00, D1
                move.b  $0028(A0), D1
                lsl.w   #$03, D1
                move.w  D1, D2
                addq.w  #$08, D1
                add.w   D2, D2
                moveq   #$08, D3
                move.w  $0008(A0), D4                
                bsr     loc_81E2
                bsr     loc_8282
                bra     loc_8144
loc_81E2:
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                moveq   #$3B, D5
                movem.l D1-D4, -(A7)                
                bsr.s   loc_81FC
                movem.l (A7)+, D1-D4
                lea     ($FFFFB000).w, A1
                subq.b  #$01, D6
                moveq   #$3F, D5
loc_81FC:
                btst    D6, $0022(A0)
                beq.s   loc_8260
                btst    #$01, $0022(A1)
                bne.s   loc_821C
                moveq   #$00, D0
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_821C
                cmp.w   D2, D0
                bcs.s   loc_822A
loc_821C:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
loc_822A:
                lsr.w   #$04, D0
                move.b  D0, $00(A0, D5)
                move.l  $0030(A0), A2
                cmpi.w  #$0008, D0
                bcs.s   loc_8242
                move.l  $0034(A0), A2
                subi.w  #$0008, D0
loc_8242:
                add.w   D0, D0
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                move.w  $12(A2, D0), D0
                subq.w  #$08, D0
                moveq   #$00, D1
                move.b  $0016(A1), D1
                sub.w   D1, D0
                move.w  D0, $000C(A1)
                moveq   #$00, D4
                rts
loc_8260:
                move.w  D1, -(A7)
                bsr     loc_FA7A
                move.w  (A7)+, D1
                btst    D6, $0022(A0)
                beq.s   loc_8280
                moveq   #$00, D0
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                lsr.w   #$04, D0
                move.b  D0, $00(A0, D5)
loc_8280:
                rts          

loc_8282:
                moveq   #$00, D0
                tst.w   ($FFFFB010).w
                bne.s   loc_8294
                move.b  ($FFFFFE0F).w, D0
                andi.w  #$001C, D0
                lsr.w   #$01, D0
loc_8294:                
                moveq   #$00, D2
                move.b  loc_82C1(PC, D0), D2
                swap.w  D2
                move.b  loc_82C0(PC, D0), D2
                moveq   #$00, D0
                tst.w   ($FFFFB050).w
                bne.s   loc_82B2
                move.b  ($FFFFFE0F).w, D0
                andi.w  #$001C, D0
                lsr.w   #$01, D0
loc_82B2:                
                moveq   #$00, D6
                move.b  loc_82C1(PC, D0), D6
                swap.w  D6
                move.b  loc_82C0(PC, D0), D6
                bra.s   loc_82D0
loc_82C0:
                dc.b    $01
loc_82C1:
                dc.b    $02, $01, $02, $01, $02, $01, $02, $00, $01, $00, $00, $00, $00, $00, $01
loc_82D0:
                moveq   #-2, D3
                moveq   #-2, D4
                move.b  $0022(A0), D0
                andi.b  #$08, D0
                beq.s   loc_82E2
                move.b  $003F(A0), D3
loc_82E2:                
                move.b  $0022(A0), D0
                andi.b  #$10, D0
                beq.s   loc_82F0
                move.b  $003B(A0), D4
loc_82F0:                
                move.l  $0030(A0), A1
                lea     $0045(A1), A2
                lea     $0015(A1), A1
                moveq   #$00, D1
                move.b  $0028(A0), D1
                subq.b  #$01, D1
                moveq   #$00, D5
loc_8306:
                moveq   #$00, D0
                subq.w  #$01, D3
                cmp.b   D3, D5
                bne.s   loc_8310
                move.w  D2, D0
loc_8310:
                addq.w  #$02, D3
                cmp.b   D3, D5
                bne.s   loc_8318
                move.w  D2, D0
loc_8318:
                subq.w  #$01, D3
                subq.w  #$01, D4
                cmp.b   D4, D5
                bne.s   loc_8322
                move.w  D6, D0
loc_8322:
                addq.w  #$02, D4
                cmp.b   D4, D5
                bne.s   loc_832A
                move.w  D6, D0
loc_832A:
                subq.w  #$01, D4
                cmp.b   D3, D5
                bne.s   loc_8336
                swap.w  D2
                move.w  D2, D0
                swap.w  D2
loc_8336:
                cmp.b   D4, D5
                bne.s   loc_8340
                swap.w  D6
                move.w  D6, D0
                swap.w  D6
loc_8340:
                move.b  D0, (A1)
                addq.w  #$01, D5
                addq.w  #$06, A1
                cmpa.w  A2, A1
                bne.s   loc_8352
                move.l  $0034(A0), A1
                lea     $0015(A1), A1
loc_8352:
                dbra    D1, loc_8306
                rts

loc_8358:
                move.b  $003E(A0), D0
                bsr     CalcSine                ; loc_320A
                move.w  D0, D4
                lea     (loc_8498), A4
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsl.w   #$04, D0
                moveq   #$00, D3
                move.b  $003F(A0), D3
                move.w  D3, D2
                add.w   D0, D3
                moveq   #$00, D5
                lea     (loc_8408-$80), A5
                move.b  $00(A5, D3), D5
                andi.w  #$000F, D3
                lsl.w   #$04, D3
                lea     $00(A4, D3), A3
                move.l  $0030(A0), A1
                lea     $0042(A1), A2
                lea     $0012(A1), A1
loc_839C:
                moveq   #$00, D0
                move.b  (A3)+, D0
                addq.w  #$01, D0
                mulu.w  D5, D0
                mulu.w  D4, D0
                swap.w  D0
                add.w   $003C(A0), D0
                move.w  D0, (A1)
                addq.w  #$06, A1
                cmpa.w  A2, A1
                bne.s   loc_83BC
                move.l  $0034(A0), A1
                lea     $0012(A1), A1
loc_83BC:
                dbra    D2, loc_839C
                moveq   #$00, D0
                move.b  $0028(A0), D0
                moveq   #$00, D3
                move.b  $003F(A0), D3
                addq.b  #$01, D3
                sub.b   D0, D3
                neg.b   D3
                bmi.s   loc_8406
                move.w  D3, D2
                lsl.w   #$04, D3
                lea     $00(A4, D3), A3
                adda.w  D2, A3
                subq.w  #$01, D2
                bcs.s   loc_8406
loc_83E2:
                moveq   #$00, D0
                move.b  -(A3), D0
                addq.w  #$01, D0
                mulu.w  D5, D0
                mulu.w  D4, D0
                swap.w  D0
                add.w   $003C(A0), D0
                move.w  D0, (A1)
                addq.w  #$06, A1
                cmpa.w  A2, A1
                bne.s   loc_8402
                move.l  $0034(A0), A1
                lea     $0012(A1), A1
loc_8402:
                dbra    D2, loc_83E2
loc_8406:
                rts
loc_8408:   
                dc.b    $02, $04, $06, $08, $08, $06, $04, $02, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $08, $06, $04, $02, $00, $00, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0A, $08, $06, $04, $02, $00, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0A, $08, $06, $04, $02, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0C, $0A, $08, $06, $04, $02, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $0C, $0A, $08, $06, $04, $02, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $0E, $0C, $0A, $08, $06, $04, $02, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $10, $0E, $0C, $0A, $08, $06, $04, $02, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $10, $10, $0E, $0C, $0A, $08, $06, $04, $02              
loc_8498:
                dc.b    $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $B5, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $7E, $DB, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $61, $B5, $EC, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $4A, $93, $CD, $F3, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $3E, $7E, $B0, $DB, $F6, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $38, $6D, $9D, $C5, $E4, $F8, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $31, $61, $8E, $B5, $D4, $EC, $FB, $FF, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $2B, $56, $7E, $A2, $C1, $DB, $EE, $FB, $FF, $00, $00, $00, $00, $00, $00, $00
                dc.b    $25, $4A, $73, $93, $B0, $CD, $E1, $F3, $FC, $FF, $00, $00, $00, $00, $00, $00
                dc.b    $1F, $44, $67, $88, $A7, $BD, $D4, $E7, $F4, $FD, $FF, $00, $00, $00, $00, $00
                dc.b    $1F, $3E, $5C, $7E, $98, $B0, $C9, $DB, $EA, $F6, $FD, $FF, $00, $00, $00, $00
                dc.b    $19, $38, $56, $73, $8E, $A7, $BD, $D1, $E1, $EE, $F8, $FE, $FF, $00, $00, $00
                dc.b    $19, $38, $50, $6D, $83, $9D, $B0, $C5, $D8, $E4, $F1, $F8, $FE, $FF, $00, $00
                dc.b    $19, $31, $4A, $67, $7E, $93, $A7, $BD, $CD, $DB, $E7, $F3, $F9, $FE, $FF, $00
                dc.b    $19, $31, $4A, $61, $78, $8E, $A2, $B5, $C5, $D4, $E1, $EC, $F4, $FB, $FE, $FF
Hpz_Bridge_Mappings: ; loc_8598:
                dc.w    Hpz_Bridge_Map_01-Hpz_Bridge_Mappings
                dc.w    Hpz_Bridge_Map_02-Hpz_Bridge_Mappings
                dc.w    Hpz_Bridge_Map_03-Hpz_Bridge_Mappings
                dc.w    Hpz_Bridge_Map_04-Hpz_Bridge_Mappings
                dc.w    Hpz_Bridge_Map_05-Hpz_Bridge_Mappings
                dc.w    Hpz_Bridge_Map_06-Hpz_Bridge_Mappings
Hpz_Bridge_Map_01: ; loc_85A4:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Hpz_Bridge_Map_02: ; loc_85AE:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
Hpz_Bridge_Map_03: ; loc_85B8:
                dc.w    $0001
                dc.l    $F8050008, $0004FFF8
Hpz_Bridge_Map_04: ; loc_85C2:
                dc.w    $0001
                dc.l    $F402000C, $0006FFFC
Hpz_Bridge_Map_05: ; loc_85CC:
                dc.w    $0001
                dc.l    $F402000F, $0007FFFC
Hpz_Bridge_Map_06: ; loc_85D6:
                dc.w    $0001
                dc.l    $F4020012, $0009FFFC             
Bridge_Mappings: ; loc_85E0:
                dc.w    Bridge_Map_01-Bridge_Mappings
                dc.w    Bridge_Map_02-Bridge_Mappings
Bridge_Map_01: ; loc_85E4:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
Bridge_Map_02: ;loc_85EE:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8                
;===============================================================================           
; Object 0x11 - Bridge 
; [ End ]
;=============================================================================== 

;=============================================================================== 
; Object 0x15 - Swing Platforms - Dust Hill / Oil Ocean
; [ Begin ]
;===============================================================================   
Obj_0x15_Swing_Platform: ; loc_85F8:
                btst    #$06, $0001(A0)
                bne     loc_8610
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_8618(PC, D0), D1
                jmp     loc_8618(PC, D1)
loc_8610:
                move.w  #$0200, D0
                bra     DisplaySprite_Param     ; loc_D3FE
loc_8618:
                dc.w    loc_8626-loc_8618
                dc.w    loc_8764-loc_8618
                dc.w    loc_892A-loc_8618
                dc.w    loc_892E-loc_8618
                dc.w    loc_89E8-loc_8618
                dc.w    loc_89F0-loc_8618
                dc.w    loc_8A56-loc_8618
loc_8626:
                addq.b  #$02, $0024(A0)
                move.l  #Swing_Platforms_Mappings, $0004(A0) ; loc_8AD8
                move.w  #$43E3, $0002(A0)
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$20, $0019(A0)
                move.b  #$10, $0016(A0)
                move.w  $000C(A0), $0038(A0)
                move.w  $0008(A0), $003A(A0)
                cmpi.b  #$0B, ($FFFFFE10).w
                bne.s   loc_867E
                move.l  #Dhz_Swing_Platforms_Mappings, $0004(A0) ; loc_8B46 
                move.w  #$0000, $0002(A0)                       
                move.b  #$18, $0019(A0)
                move.b  #$08, $0016(A0)
loc_867E:
                cmpi.b  #$0F, ($FFFFFE10).w
                bne.s   loc_86A0
                move.l  #Nghz_Swing_Platforms_Mappings, $0004(A0) ; loc_8B0E
                move.w  #$0000, $0002(A0)
                move.b  #$20, $0019(A0)
                move.b  #$08, $0016(A0)
loc_86A0:
                bsr     Adjust2PArtPointer     ; loc_DC30
                moveq   #$00, D1
                move.b  $0028(A0), D1
                bpl.s   loc_86B0
                addq.b  #$04, $0024(A0)
loc_86B0:
                andi.w  #$000F, D1
                move.w  D1, D2
                lsl.w   #$04, D2
                addi.b  #$08, D2
                move.b  D2, $003C(A0)
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                bsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_8738
                move.b  $0000(A0), $0000(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  #$04, $0001(A1)
                bset    #$06, $0001(A1)
                move.b  #$48, $000E(A1)
                move.b  D1, $000F(A1)
                subq.b  #$01, D1
                lea     $0010(A1), A2
loc_86FC:                
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                move.w  #$0001, (A2)+
                addi.w  #$0010, D3
                dbra    D1, loc_86FC
                move.b  #$02, $0015(A1)
                move.w  D2, $0008(A1)
                move.w  D3, $000C(A1)
                move.b  #$01, $000B(A1)
                move.l  A1, $0030(A0)
                addi.w  #$0008, D3
                move.w  D3, $000C(A0)
                move.b  #$50, $0014(A1)
                bset    #$04, $0001(A1)
loc_8738:
                move.w  #$8000, $0026(A0)
                move.w  #$0000, $003E(A0)
                move.b  $0028(A0), D1
                andi.w  #$0070, D1
                move.b  D1, $0028(A0)
                cmpi.b  #$40, D1
                bne.s   loc_8764
                move.l  #Dhz_Swing_Platforms_Mappings_2, $0004(A0) ; loc_8B7A
                move.b  #$A7, $0020(A0)
loc_8764:
                move.w  $0008(A0), -(A7)
                bsr     loc_8784
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$00, D3
                move.b  $0016(A0), D3
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     loc_FA28
                bra     loc_88FC
loc_8784:
                move.b  ($FFFFFE78).w, D0
                move.b  $0028(A0), D1
                beq.s   loc_87C4
                cmpi.b  #$10, D1
                bne.s   loc_879E
                cmpi.b  #$40, D0
                bcc.s   loc_87C4
                moveq   #$40, D0
                bra.s   loc_87C4
loc_879E:
                cmpi.b  #$20, D1
                bne.s   loc_87AA
                moveq   #$40, D0
                bra     loc_885C
loc_87AA:
                cmpi.b  #$30, D1
                bne.s   loc_87BA
                cmpi.b  #$40, D0
                bcs.s   loc_87C4
                moveq   #$40, D0
                bra.s   loc_87C4
loc_87BA:
                cmpi.b  #$40, D1
                bne.s   loc_87C4
                bsr     loc_885E
loc_87C4:
                move.w  #$0080, D1
                btst    #$00, $0022(A0)
                beq.s   loc_87D4
                neg.w   D0
                add.w   D1, D0
loc_87D4:
                bsr     CalcSine                ; loc_320A
                move.w  $0038(A0), D2
                move.w  $003A(A0), D3
                moveq   #$00, D4
                move.b  $003C(A0), D4
                move.l  D4, D5
                muls.w  D0, D4
                asr.l   #$08, D4
                muls.w  D1, D5
                asr.l   #$08, D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D4, $000C(A0)
                move.w  D5, $0008(A0)
                moveq   #$00, D6
                move.l  $0030(A0), A1
                move.b  $000F(A1), D6
                subq.w  #$01, D6
                bcs.s   loc_885C
                asl.w   #$04, D0
                ext.l   D0
                asl.l   #$08, D0
                asl.w   #$04, D1
                ext.l   D1
                asl.l   #$08, D1
                moveq   #$00, D4
                moveq   #$00, D5
                lea     $0010(A1), A2
loc_881E:                
                movem.l D4/D5, -(A7)
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, (A2)+
                move.w  D4, (A2)+
                movem.l (A7)+, D4/D5
                add.l   D0, D4
                add.l   D1, D5
                addq.w  #$02, A2
                dbra    D6, loc_881E
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  $0028(A1), D0
                move.w  $002A(A1), D1
                move.w  D5, $0028(A1)
                move.w  D4, $002A(A1)
                move.w  D0, $0008(A1)
                move.w  D1, $000C(A1)
loc_885C:
                rts
loc_885E:
                tst.w   $0036(A0)
                beq.s   loc_886C
                subq.w  #$01, $0036(A0)
                bra     loc_88F6
loc_886C:
                tst.b   $0034(A0)
                bne.s   loc_8892
                move.w  ($FFFFB008).w, D0
                sub.w   $003A(A0), D0
                addi.w  #$0020, D0
                cmpi.w  #$0040, D0
                bcc.s   loc_88F6
                tst.w   (Debug_placement_mode).w
                bne     loc_88F6
                move.b  #$01, $0034(A0)
loc_8892:
                tst.b   $003D(A0)
                beq.s   loc_88C8
                move.w  $003E(A0), D0
                addi.w  #$0008, D0
                move.w  D0, $003E(A0)
                add.w   D0, $0026(A0)
                cmpi.w  #$0200, D0
                bne.s   loc_88F6
                move.w  #$0000, $003E(A0)
                move.w  #$8000, $0026(A0)
                move.b  #$00, $003D(A0)
                move.w  #$003C, $0036(A0)
                bra.s   loc_88F6
loc_88C8:
                move.w  $003E(A0), D0
                subi.w  #$0008, D0
                move.w  D0, $003E(A0)
                add.w   D0, $0026(A0)
                cmpi.w  #$FE00, D0
                bne.s   loc_88F6
                move.w  #$0000, $003E(A0)
                move.w  #$4000, $0026(A0)
                move.b  #$01, $003D(A0)
                move.w  #$003C, $0036(A0)
loc_88F6:
                move.b  $0026(A0), D0
                rts
loc_88FC:
                tst.w   ($FFFFFFD8).w
                beq.s   loc_8906
                bra     DisplaySprite           ; loc_D3C2
loc_8906:
                move.w  $003A(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_891E
                bra     DisplaySprite           ; loc_D3C2
loc_891E:
                move.l  $0030(A0), A1
                bsr     loc_D3B6
                bra     DeleteObject            ; loc_D3B4
loc_892A:
                bra     DisplaySprite           ; loc_D3C2
loc_892E:
                move.w  $0008(A0), -(A7)
                bsr     loc_8784
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$00, D3
                move.b  $0016(A0), D3
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     loc_FA28
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq     loc_89E4
                tst.b   ($FFFFFE78).w
                bne     loc_89E4
                bsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_89D4
                moveq   #$00, D0
                move.w  #$000F, D1
loc_896A:                
                move.l  $00(A0, D0), $00(A1, D0)
                addq.w  #$04, D0
                dbra    D1, loc_896A
                move.b  #$0A, $0024(A1)
                cmpi.b  #$0F, ($FFFFFE10).w
                bne.s   loc_8988
                addq.b  #$02, $0024(A1)
loc_8988:
                move.w  #$0200, $0010(A1)
                btst    #$00, $0022(A0)
                beq.s   loc_899A
                neg.w   $0010(A1)
loc_899A:
                bset    #$01, $0022(A1)
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.w  A1, D1
                subi.w  #$B000, D1
                lsr.w   #$06, D1
                andi.w  #$007F, D1
                lea     ($FFFFB000).w, A1
                cmp.b   $003D(A1), D0
                bne.s   loc_89C6
                move.b  D1, $003D(A1)
loc_89C6:
                lea     ($FFFFB040).w, A1
                cmp.b   $003D(A1), D0
                bne.s   loc_89D4
                move.b  D1, $003D(A1)
loc_89D4:
                move.b  #$03, $001A(A0)
                addq.b  #$02, $0024(A0)
                andi.b  #$E7, $0022(A0)
loc_89E4:
                bra     loc_88FC
loc_89E8:
                bsr     loc_8784
                bra     loc_88FC
loc_89F0:
                move.w  $0008(A0), -(A7)
                btst    #$01, $0022(A0)
                beq.s   loc_8A2E
                bsr     SpeedToPos              ; loc_D27A
                addi.w  #$0018, $0012(A0)
                cmpi.w  #$0720, $000C(A0)
                bcs.s   loc_8A3E
                move.w  #$0720, $000C(A0)
                bclr    #$01, $0022(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0012(A0)
                move.w  $000C(A0), $0038(A0)
                bra.s   loc_8A3E
loc_8A2E:
                moveq   #$00, D0
                move.b  ($FFFFFE74).w, D0
                lsr.w   #$01, D0
                add.w   $0038(A0), D0
                move.w  D0, $000C(A0)
loc_8A3E:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$00, D3
                move.b  $0016(A0), D3
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     loc_FA28
                bra     MarkObjGone             ; loc_D2A0
loc_8A56:
                move.w  $0008(A0), -(A7)
                bsr     SpeedToPos              ; loc_D27A
                btst    #$01, $0022(A0)
                beq.s   loc_8A92
                addi.w  #$0018, $0012(A0)
                move.w  (Water_Level_2).w, D0
                cmp.w   $000C(A0), D0
                bhi.s   loc_8AC0
                move.w  D0, $000C(A0)
                move.w  D0, $0038(A0)
                bclr    #$01, $0022(A0)
                move.w  #$0100, $0010(A0)
                move.w  #$0000, $0012(A0)
                bra.s   loc_8AC0
loc_8A92:
                moveq   #$00, D0
                move.b  ($FFFFFE74).w, D0
                lsr.w   #$01, D0
                add.w   $0038(A0), D0
                move.w  D0, $000C(A0)
                tst.w   $0010(A0)
                beq.s   loc_8AC0
                moveq   #$00, D3
                move.b  $0019(A0), D3
                bsr     loc_8B94
                tst.w   D1
                bpl.s   loc_8AC0
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
loc_8AC0:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$00, D3
                move.b  $0016(A0), D3
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     loc_FA28
                bra     MarkObjGone             ; loc_D2A0
Swing_Platforms_Mappings: ; loc_8AD8:
                dc.w    Swing_Platforms_Map_01-Swing_Platforms_Mappings
                dc.w    Swing_Platforms_Map_02-Swing_Platforms_Mappings
                dc.w    Swing_Platforms_Map_02-Swing_Platforms_Mappings
                dc.w    Swing_Platforms_Map_Null-Swing_Platforms_Mappings
Swing_Platforms_Map_01: ; loc_8AE0:
                dc.w    $0004
                dc.l    $F00D2004, $2002FFE0, $F00D200C, $20060000
                dc.l    $000D2014, $200AFFE0, $000D2814, $280A0000
Swing_Platforms_Map_02: ; loc_8B02:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Swing_Platforms_Map_Null: ; loc_8B0C:
                dc.w    $0000
Nghz_Swing_Platforms_Mappings: ; loc_8B0E:
                dc.w    Nghz_Swing_Platforms_Map_01-Nghz_Swing_Platforms_Mappings
                dc.w    Nghz_Swing_Platforms_Map_02-Nghz_Swing_Platforms_Mappings
                dc.w    Nghz_Swing_Platforms_Map_03-Nghz_Swing_Platforms_Mappings
                dc.w    Nghz_Swing_Platforms_Map_Null-Nghz_Swing_Platforms_Mappings
Nghz_Swing_Platforms_Map_01: ; loc_8B16:
                dc.w    $0002
                dc.l    $F80D6055, $602AFFE0, $F80D6055, $602A0000
Nghz_Swing_Platforms_Map_02: ; loc_8B28:
                dc.w    $0001
                dc.l    $F8052051, $2028FFF8
Nghz_Swing_Platforms_Map_03: ; loc_8B32:
                dc.w    $0002
                dc.l    $F00E4045, $4022FFF0, $F8052051, $2028FFF8
Nghz_Swing_Platforms_Map_Null: ; loc_8B44:
                dc.w    $0000 
Dhz_Swing_Platforms_Mappings: ; loc_8B46:
                dc.w    Dhz_Swing_Platforms_Map_01-Dhz_Swing_Platforms_Mappings
                dc.w    Dhz_Swing_Platforms_Map_02-Dhz_Swing_Platforms_Mappings
                dc.w    Dhz_Swing_Platforms_Map_03-Dhz_Swing_Platforms_Mappings
Dhz_Swing_Platforms_Map_01: ; loc_8B4C:
                dc.w    $0002
                dc.l    $F8096060, $6030FFE8, $F8096860, $68300000
Dhz_Swing_Platforms_Map_02: ; loc_8B5E:
                dc.w    $0001
                dc.l    $F8056066, $6033FFF8
Dhz_Swing_Platforms_Map_03: ; loc_8B68:
                dc.w    $0002
                dc.l    $E805406A, $4035FFF4, $F80B406E, $4037FFF4   
Dhz_Swing_Platforms_Mappings_2: ; loc_8B7A:
                dc.w    Dhz_Swing_Platforms_Map_04-Dhz_Swing_Platforms_Mappings_2
                dc.w    Dhz_Swing_Platforms_Map_02-Dhz_Swing_Platforms_Mappings_2
                dc.w    Dhz_Swing_Platforms_Map_03-Dhz_Swing_Platforms_Mappings_2
Dhz_Swing_Platforms_Map_04: ; loc_8B80:
                dc.w    $0002
                dc.l    $F80D6058, $602CFFE0, $F80D6858, $682C0000                                          
;=============================================================================== 
; Object 0x15 - Swing Platforms - Dust Hill / Oil Ocean
; [ End ]
;===============================================================================   
                nop                             ; Filler  
loc_8B94:
                jmp     ObjHitWallRight         ; (loc_1399E)    
                dc.w    $0000                   ; Filler 
;=============================================================================== 
; Object 0x17
; [ Begin ]
;===============================================================================                  
Obj_0x17: ; loc_8B9C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_8BAA(PC, D0), D1
                jmp     loc_8BAA(PC, D1)
loc_8BAA:                
                dc.w    loc_8BB0-loc_8BAA
                dc.w    loc_8C74-loc_8BAA
                dc.w    loc_8CD6-loc_8BAA
loc_8BB0:
                addq.b  #$02, $0024(A0)
                move.l  #loc_8CDE, $0004(A0)
                move.w  #$4398, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$08, $0019(A0)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                move.b  $0000(A0), D4
                lea     $0028(A0), A2
                moveq   #$00, D1
                move.b  (A2), D1
                move.b  #$00, (A2)+
                move.w  D1, D0
                lsr.w   #$01, D0
                lsl.w   #$04, D0
                sub.w   D0, D3
                subq.b  #$02, D1
                bcs.s   loc_8C74
                moveq   #$00, D6
loc_8BFE:                
                bsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_8C74
                addq.b  #$01, $0028(A0)
                move.w  A1, D5
                subi.w  #$B000, D5
                lsr.w   #$06, D5
                andi.w  #$007F, D5
                move.b  D5, (A2)+
                move.b  #$04, $0024(A1)
                move.b  D4, $0000(A1)
                move.w  D2, $000C(A1)
                move.w  D3, $0008(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  #$4398, $0002(A1)
                bsr     Adjust2PArtPointer2   ; loc_DC4C
                move.b  #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$08, $0019(A1)
                move.b  D6, $003E(A1)
                addq.b  #$01, D6
                andi.b  #$07, D6
                addi.w  #$0010, D3
                cmp.w   $0008(A0), D3
                bne.s   loc_8C70
                move.b  D6, $003E(A0)
                addq.b  #$01, D6
                andi.b  #$07, D6
                addi.w  #$0010, D3
                addq.b  #$01, $0028(A0)
loc_8C70:
                dbra    D1, loc_8BFE
loc_8C74:
                bsr     loc_8CB6
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_8C90
                bra     DisplaySprite           ; loc_D3C2
loc_8C90:
                moveq   #$00, D2
                lea     $0028(A0), A2
                move.b  (A2)+, D2
                subq.b  #$02, D2
                bcs.s   loc_8CB2
loc_8C9C:                
                moveq   #$00, D0             
                move.b  (A2)+, D0
                lsl.w   #$06, D0
                addi.l  #$FFFFB000, D0
                move.l  D0, A1
                bsr     loc_D3B6
                dbra    D2, loc_8C9C
loc_8CB2:
                bra     DeleteObject            ; loc_D3B4
loc_8CB6:
                move.b  ($FFFFFEC1).w, D0
                move.b  #$00, $0020(A0)
                add.b   $003E(A0), D0
                andi.b  #$07, D0
                move.b  D0, $001A(A0)
                bne.s   loc_8CD4
                move.b  #$84, $0020(A0)
loc_8CD4:
                rts
loc_8CD6:
                bsr     loc_8CB6
                bra     DisplaySprite           ; loc_D3C2
loc_8CDE:
                dc.w    loc_8CEE-loc_8CDE
                dc.w    loc_8CF8-loc_8CDE
                dc.w    loc_8D02-loc_8CDE
                dc.w    loc_8D0C-loc_8CDE
                dc.w    loc_8D16-loc_8CDE
                dc.w    loc_8D20-loc_8CDE
                dc.w    loc_8D34-loc_8CDE
                dc.w    loc_8D2A-loc_8CDE
loc_8CEE:
                dc.w    $0001
                dc.l    $F0010000, $0000FFFC
loc_8CF8:
                dc.w    $0001
                dc.l    $F5050002, $0001FFF8
loc_8D02:
                dc.w    $0001
                dc.l    $F8050006, $0003FFF8
loc_8D0C:
                dc.w    $0001
                dc.l    $FB05000A, $0005FFF8
loc_8D16:
                dc.w    $0001
                dc.l    $0001000E, $0007FFFC
loc_8D20:
                dc.w    $0001
                dc.l    $04000010, $0008FFFD
loc_8D2A:
                dc.w    $0001
                dc.l    $F4000011, $0008FFFD
loc_8D34:
                dc.w    $0000           
;=============================================================================== 
; Object 0x17
; [ End ]
;===============================================================================                
                nop                             ; Filler
;=============================================================================== 
; Object 0x18 - Platforms 
; [ Begin ]
;===============================================================================   
Obj_0x18_Platforms: ; loc_8D38:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_8D46(PC, D0), D1
                jmp     loc_8D46(PC, D1)                 
loc_8D46:
                dc.w    loc_8D5A-loc_8D46
                dc.w    loc_8DF6-loc_8D46
                dc.w    loc_8E5C-loc_8D46
                dc.w    loc_8E34-loc_8D46
                dc.w    loc_8E60-loc_8D46
loc_8D50:
                dc.w    $2000, $2001, $2002, $4003, $3004   
loc_8D5A: 
                addq.b  #$02, $0024(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                lea     loc_8D50(PC, D0), A2
                move.b  (A2)+, $0019(A0)
                move.b  (A2)+, $001A(A0)
                move.l  #Ghz_Platform_Mappings, $0004(A0) ; loc_9078
                move.w  #$4000, $0002(A0)
                cmpi.b  #$0F, ($FFFFFE10).w
                bne.s   loc_8D9A
                move.l  #Nghz_Platform_Mappings, $0004(A0) ; loc_90D0
                move.w  #$4000, $0002(A0)
loc_8D9A:
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.w  $000C(A0), $002C(A0)
                move.w  $000C(A0), $0034(A0)
                move.w  $0008(A0), $0032(A0)
                move.w  #$0080, $0026(A0)
                tst.b   $0028(A0)
                bpl.s   loc_8DF0
                addq.b  #$06, $0024(A0)
                andi.b  #$0F, $0028(A0)
                move.b  #$30, $0016(A0)
                cmpi.b  #$0F, ($FFFFFE10).w
                bne.s   loc_8DE6
                move.b  #$28, $0016(A0)
loc_8DE6:
                bset    #$04, $0001(A0)
                bra     loc_8E60                 
loc_8DF0:
                andi.b  #$0F, $0028(A0)
loc_8DF6:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   loc_8E0C
                tst.b   $0038(A0)
                beq.s   loc_8E18
                subq.b  #$04, $0038(A0)
                bra.s   loc_8E18
loc_8E0C:
                cmpi.b  #$40, $0038(A0)
                beq.s   loc_8E18
                addq.b  #$04, $0038(A0)
loc_8E18:
                move.w  $0008(A0), -(A7)
                bsr     loc_8EC4
                bsr     loc_8EAA
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$08, D3
                move.w  (A7)+, D4
                bsr     loc_F984
                bra.s   loc_8E3C
loc_8E34:
                bsr     loc_8EC4
                bsr     loc_8EAA
loc_8E3C:
                tst.w   ($FFFFFFD8).w
                beq.s   loc_8E46
                bra     DisplaySprite           ; loc_D3C2
loc_8E46:
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_8E5C
                bra     DisplaySprite           ; loc_D3C2
loc_8E5C:
                bra     DeleteObject            ; loc_D3B4
loc_8E60:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   loc_8E76
                tst.b   $0038(A0)
                beq.s   loc_8E82
                subq.b  #$04, $0038(A0)
                bra.s   loc_8E82
loc_8E76:
                cmpi.b  #$40, $0038(A0)
                beq.s   loc_8E82
                addq.b  #$04, $0038(A0)
loc_8E82:
                move.w  $0008(A0), -(A7)
                bsr     loc_8EC4
                bsr     loc_8EAA
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     SolidObject             ; loc_F4A0
                bra.s   loc_8E3C
loc_8EAA:
                move.b  $0038(A0), D0
                bsr     CalcSine                ; loc_320A
                move.w  #$0400, D1
                muls.w  D1, D0
                swap.w  D0
                add.w   $002C(A0), D0
                move.w  D0, $000C(A0)
                rts
loc_8EC4:
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                add.w   D0, D0
                move.w  loc_8ED8(PC, D0), D1
                jmp     loc_8ED8(PC, D1)
loc_8ED8:
                dc.w    loc_8EF4-loc_8ED8
                dc.w    loc_8F06-loc_8ED8
                dc.w    loc_8F4C-loc_8ED8
                dc.w    loc_8F64-loc_8ED8
                dc.w    loc_8F8C-loc_8ED8
                dc.w    loc_8EF6-loc_8ED8
                dc.w    loc_8F3C-loc_8ED8
                dc.w    loc_8FFA-loc_8ED8
                dc.w    loc_9026-loc_8ED8
                dc.w    loc_8EF4-loc_8ED8
                dc.w    loc_903E-loc_8ED8
                dc.w    loc_9058-loc_8ED8
                dc.w    loc_8F2E-loc_8ED8
                dc.w    loc_8F1E-loc_8ED8
loc_8EF4:               
                rts
loc_8EF6:   
                move.w  $0032(A0), D0
                move.b  $0026(A0), D1
                neg.b   D1
                addi.b  #$40, D1
                bra.s   loc_8F12
loc_8F06:
                move.w  $0032(A0), D0
                move.b  $0026(A0), D1
                subi.b  #$40, D1
loc_8F12:
                ext.w   D1
                add.w   D1, D0
                move.w  D0, $0008(A0)
                bra     loc_9070
loc_8F1E:
                move.w  $0034(A0), D0
                move.b  ($FFFFFE6C).w, D1
                neg.b   D1
                addi.b  #$30, D1
                bra.s   loc_8F58
loc_8F2E:
                move.w  $0034(A0), D0
                move.b  ($FFFFFE6C).w, D1
                subi.b  #$30, D1
                bra.s   loc_8F58
loc_8F3C:
                move.w  $0034(A0), D0
                move.b  $0026(A0), D1
                neg.b   D1
                addi.b  #$40, D1
                bra.s   loc_8F58
loc_8F4C:
                move.w  $0034(A0), D0
                move.b  $0026(A0), D1
                subi.b  #$40, D1
loc_8F58:
                ext.w   D1
                add.w   D1, D0
                move.w  D0, $002C(A0)
                bra     loc_9070
loc_8F64:
                tst.w   $003A(A0)
                bne.s   loc_8F7A
                btst    #$03, $0022(A0)
                beq.s   loc_8F78
                move.w  #$001E, $003A(A0)
loc_8F78:
                rts
loc_8F7A:
                subq.w  #$01, $003A(A0)
                bne.s   loc_8F78
                move.w  #$0020, $003A(A0)
                addq.b  #$01, $0028(A0)
                rts
loc_8F8C:
                tst.w   $003A(A0)
                beq.s   loc_8FCC
                subq.w  #$01, $003A(A0)
                bne.s   loc_8FCC
                btst    #$03, $0022(A0)
                beq.s   loc_8FC6
                lea     ($FFFFB000).w, A1
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                bclr    #$03, $0022(A0)
                clr.b   $0025(A0)
                move.w  $0012(A0), $0012(A1)
loc_8FC6:
                move.b  #$06, $0024(A0)
loc_8FCC:
                move.l  $002C(A0), D3
                move.w  $0012(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D3, $002C(A0)
                addi.w  #$0038, $0012(A0)
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $002C(A0), D0
                bcc.s   loc_8FF8
                move.b  #$04, $0024(A0)
loc_8FF8:
                rts
loc_8FFA:
                tst.w   $003A(A0)
                bne.s   loc_901A
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$04, D0
                tst.b   $00(A2, D0)
                beq.s   loc_9018
                move.w  #$003C, $003A(A0)
loc_9018:
                rts
loc_901A:
                subq.w  #$01, $003A(A0)
                bne.s   loc_9018
                addq.b  #$01, $0028(A0)
                rts
loc_9026:
                subq.w  #$02, $002C(A0)
                move.w  $0034(A0), D0
                subi.w  #$0200, D0
                cmp.w   $002C(A0), D0
                bne.s   loc_903C
                clr.b   $0028(A0)
loc_903C:
                rts
loc_903E:
                move.w  $0034(A0), D0
                move.b  $0026(A0), D1
                subi.b  #$40, D1
                ext.w   D1
                asr.w   #$01, D1
                add.w   D1, D0
                move.w  D0, $002C(A0)
                bra     loc_9070
loc_9058:
                move.w  $0034(A0), D0
                move.b  $0026(A0), D1
                neg.b   D1
                addi.b  #$40, D1
                ext.w   D1
                asr.w   #$01, D1
                add.w   D1, D0
                move.w  D0, $002C(A0)
loc_9070:
                move.b  ($FFFFFE78).w, $0026(A0)
                rts
Ghz_Platform_Mappings: ; loc_9078:
                dc.w    Ghz_Platform_Map_01-Ghz_Platform_Mappings
                dc.w    Ghz_Platform_Map_02-Ghz_Platform_Mappings
Ghz_Platform_Map_01: ; loc_907C:
                dc.w    $0002
                dc.l    $F40F0056, $002BFFE0, $F40F0856, $082B0000
Ghz_Platform_Map_02: ; loc_908E:
                dc.w    $0008
                dc.l    $CC07000A, $0005FFE0, $CC0D0012, $0009FFF0
                dc.l    $DC0D001A, $000DFFF0, $CC070022, $00110010
                dc.l    $EC0F002A, $0015FFE0, $EC0F082A, $08150000
                dc.l    $0C0F003A, $001DFFE0, $0C0F083A, $081D0000
Nghz_Platform_Mappings: ; loc_90D0:
                dc.w    Nghz_Platform_Map_01-Nghz_Platform_Mappings
                dc.w    Nghz_Platform_Map_02-Nghz_Platform_Mappings
Nghz_Platform_Map_01: ; loc_90D4:
                dc.w    $0004
                dc.l    $F00E0001, $0000FFE0, $F00E0801, $08000000
                dc.l    $080E002D, $0016FFE0, $080E0039, $001C0000
Nghz_Platform_Map_02: ; loc_90F6:
                dc.w    $0006
                dc.l    $D00E0001, $0000FFE0, $D00E0801, $08000000
                dc.l    $E80F000D, $0006FFE0, $E80F001D, $000E0000
                dc.l    $080F000D, $0006FFE0, $080F001D, $000E0000                        
;=============================================================================== 
; Object 0x18 - Platforms 
; [ End ]
;===============================================================================   
 
;=============================================================================== 
; Object 0x1A - Collapsing Platforms - Hidden Palace / Oil Ocean ...
; [ Begin ]
;===============================================================================                   
Obj_0x1A_Collapsing_Platforms: ; loc_9128:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_9136(PC, D0), D1
                jmp     loc_9136(PC, D1)
loc_9136:
                dc.w    loc_913C-loc_9136
                dc.w    loc_91E8-loc_9136
                dc.w    loc_9220-loc_9136
loc_913C:               
                addq.b  #$02, $0024(A0)
                move.l  #Collapsing_Platforms_Mappings, $0004(A0) ; loc_94A8
                move.w  #$4000, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$07, $0038(A0)
                move.b  $0028(A0), $001A(A0)
                move.l  #loc_9436, $0034(A0)
                cmpi.b  #$08, ($FFFFFE10).w
                bne.s   loc_91A4
                move.l  #HPz_Collapsing_Platforms_Mappings, $0004(A0) ; loc_9858
                move.w  #$434A, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$30, $0019(A0)
                move.l  #loc_9828, $003C(A0)
                move.l  #loc_944F, $0034(A0)
                bra.s   loc_91E8
loc_91A4:
                cmpi.b  #$0A, ($FFFFFE10).w
                bne.s   loc_91CE
                move.l  #OOz_Collapsing_Platforms_Mappings, $0004(A0) ; loc_9902
                move.w  #$639D, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$40, $0019(A0)
                move.l  #loc_9818, $003C(A0)
                bra.s   loc_91E8
loc_91CE:                
                move.l  #loc_9478, $003C(A0)
                move.b  #$34, $0019(A0)
                move.b  #$38, $0016(A0)
                bset    #$04, $0001(A0)
loc_91E8:
                tst.b   $003A(A0)
                beq.s   loc_91FA
                tst.b   $0038(A0)
                beq     loc_93AC
                subq.b  #$01, $0038(A0)
loc_91FA:                
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   loc_920A
                move.b  #$01, $003A(A0)
loc_920A:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.l  $003C(A0), A2
                move.w  $0008(A0), D4
                bsr     loc_F9D6
                bra     MarkObjGone             ; loc_D2A0 
loc_9220:
                tst.b   $0038(A0)
                beq.s   loc_9264
                tst.b   $003A(A0)
                bne.s   loc_9234
                subq.b  #$01, $0038(A0)
                bra     DisplaySprite           ; loc_D3C2
loc_9234:
                bsr     loc_920A
                subq.b  #$01, $0038(A0)
                bne.s   loc_9262
                lea     ($FFFFB000).w, A1
                bsr.s   loc_9248
                lea     ($FFFFB040).w, A1
loc_9248:
                btst    #$03, $0022(A1)
                beq.s   loc_9262
                bclr    #$03, $0022(A1)
                bclr    #$05, $0022(A1)
                move.b  #$01, $001D(A1)
loc_9262:
                rts
loc_9264:
                bsr     ObjectFall              ; loc_D24E
                tst.b   $0001(A0)
                bpl     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2                    
;=============================================================================== 
; Object 0x1A - Collapsing Platforms - Hidden Palace / Oil Ocean ...
; [ End ]
;===============================================================================   
                
;=============================================================================== 
; Object 0x1F - Collapsing Platforms - Dust Hill / Oil Ocean ...
; [ Begin ]
;===============================================================================                   
Obj_0x1F_Collapsing_Platforms: ; loc_9274:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_9282(PC, D0), D1
                jmp     loc_9282(PC, D1)  
loc_9282:
                dc.w    loc_9288-loc_9282
                dc.w    loc_931A-loc_9282
                dc.w    loc_9352-loc_9282
loc_9288:
                addq.b  #$02, $0024(A0)
                move.l  #loc_9748, $0004(A0)
                move.w  #$42B8, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$07, $0038(A0)
                move.b  #$44, $0019(A0)
                lea     (loc_945B), A4
                btst    #$00, $0028(A0)
                beq.s   loc_92C6
                lea     (loc_9463), A4
loc_92C6:
                move.l  A4, $0034(A0)
                cmpi.b  #$0A, ($FFFFFE10).w
                bne.s   loc_92F2
                move.l  #OOz_Collapsing_Platforms_Mappings, $0004(A0) ; loc_9902
                move.w  #$639D, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$40, $0019(A0)
                move.l  #loc_946B, $0034(A0)
loc_92F2:
                cmpi.b  #$0B, ($FFFFFE10).w
                bne.s   loc_931A
                move.l  #Dhz_Collapsing_Platforms_Mappings, $0004(A0) ; loc_9942
                move.w  #$63F4, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$20, $0019(A0)
                move.l  #loc_9472, $0034(A0)
loc_931A:
                tst.b   $003A(A0)
                beq.s   loc_932C
                tst.b   $0038(A0)
                beq     loc_93A6
                subq.b  #$01, $0038(A0)
loc_932C:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   loc_933C
                move.b  #$01, $003A(A0)
loc_933C:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                bsr     loc_F984
                bra     MarkObjGone             ; loc_D2A0
loc_9352:
                tst.b   $0038(A0)
                beq.s   loc_9396
                tst.b   $003A(A0)
                bne.s   loc_9366
                subq.b  #$01, $0038(A0)
                bra     DisplaySprite           ; loc_D3C2
loc_9366:
                bsr     loc_933C
                subq.b  #$01, $0038(A0)
                bne.s   loc_9394
                lea     ($FFFFB000).w, A1
                bsr.s   loc_937A
                lea     ($FFFFB040).w, A1
loc_937A:
                btst    #$03, $0022(A1)
                beq.s   loc_9394
                bclr    #$03, $0022(A1)
                bclr    #$05, $0022(A1)
                move.b  #$01, $001D(A1)
loc_9394:
                rts
loc_9396:
                bsr     ObjectFall              ; loc_D24E
                tst.b   $0001(A0)
                bpl     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2
loc_93A6:
                addq.b  #$01, $001A(A0)
                bra.s   loc_93B0              
loc_93AC:
                addq.b  #$02, $001A(A0)
loc_93B0:                
                move.l  $0034(A0), A4                  
                moveq   #$00, D0
                move.b  $001A(A0), D0
                add.w   D0, D0
                move.l  $0004(A0), A3
                adda.w  $00(A3, D0), A3
                move.w  (A3)+, D1
                subq.w  #$01, D1
                bset    #$05, $0001(A0)
                move.b  $0000(A0), D4
                move.b  $0001(A0), D5
                move.l  A0, A1
                bra.s   loc_93E2
loc_93DA:
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_9428
                addq.w  #$08,  A3
loc_93E2:
                move.b  #$04, $0024(A1)
                move.b  D4, $0000(A1)
                move.l  A3, $0004(A1)
                move.b  D5, $0001(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  $0018(A0), $0018(A1)
                move.b  $0019(A0), $0019(A1)
                move.b  $0016(A0), $0016(A1)
                move.b  (A4)+, $0038(A1)
                cmpa.l  A0, A1
                bcc.s   loc_9424
                bsr     DisplayA1Sprite         ; loc_D3E0
loc_9424:
                dbra    D1, loc_93DA
loc_9428:                
                bsr     DisplaySprite           ; loc_D3C2
                move.w  #$00B9, D0
                jmp     (PlaySound)              ; loc_14C6
loc_9436:                
                dc.b    $1C, $18, $14, $10, $1A, $16, $12, $0E, $0A, $06, $18, $14, $10, $0C, $08, $04
                dc.b    $16, $12, $0E, $0A, $06, $02, $14, $10, $0C                    
loc_944F:
                dc.b    $18, $1C, $20, $1E, $1A, $16, $06, $0E, $14, $12, $0A, $02
loc_945B:              
                dc.b    $1E, $16, $0E, $06, $1A, $12, $0A, $02
loc_9463:
                dc.b    $16, $1E, $1A, $12, $06, $0E, $0A, $02
loc_946B:
                dc.b    $1A, $12, $0A, $02, $16, $0E, $06              
loc_9472:                
                dc.b    $1A, $16, $12, $0E, $0A, $02                                         
loc_9478:
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20, $21, $21, $22, $22, $23, $23, $24, $24
                dc.b    $25, $25, $26, $26, $27, $27, $28, $28, $29, $29, $2A, $2A, $2B, $2B, $2C, $2C
                dc.b    $2D, $2D, $2E, $2E, $2F, $2F, $30, $30, $30, $30, $30, $30, $30, $30, $30, $30                  
Collapsing_Platforms_Mappings: ; loc_94A8:
                dc.w    Collapsing_Platforms_Map_01-Collapsing_Platforms_Mappings
                dc.w    Collapsing_Platforms_Map_02-Collapsing_Platforms_Mappings
                dc.w    Collapsing_Platforms_Map_03-Collapsing_Platforms_Mappings
                dc.w    Collapsing_Platforms_Map_04-Collapsing_Platforms_Mappings
Collapsing_Platforms_Map_01: ; loc_94B0:
                dc.w    $0010
                dc.l    $C80E0057, $002B0010, $D00D0063, $0031FFF0
                dc.l    $E00D006B, $00350010, $E00D0073, $0039FFF0
                dc.l    $D806007B, $003DFFE0, $D8060081, $0040FFD0
                dc.l    $F00D0087, $00430010, $F00D008F, $0047FFF0
                dc.l    $F0050097, $004BFFE0, $F005009B, $004DFFD0
                dc.l    $000D009F, $004F0010, $000500A7, $00530000
                dc.l    $000D00AB, $0055FFE0, $000500B3, $0059FFD0
                dc.l    $100D00AB, $00550010, $100500B7, $005B0000
Collapsing_Platforms_Map_02: ; loc_9532:
                dc.w    $0010
                dc.l    $C80E0057, $002B0010, $D00D0063, $0031FFF0
                dc.l    $E00D006B, $00350010, $E00D0073, $0039FFF0
                dc.l    $D806007B, $003DFFE0, $D80600BB, $005DFFD0
                dc.l    $F00D0087, $00430010, $F00D008F, $0047FFF0
                dc.l    $F0050097, $004BFFE0, $F00500C1, $0060FFD0
                dc.l    $000D009F, $004F0010, $000500A7, $00530000
                dc.l    $000D00AB, $0055FFE0, $000500B7, $005BFFD0
                dc.l    $100D00AB, $00550010, $100500B7, $005B0000
Collapsing_Platforms_Map_03: ; loc_95B4:
                dc.w    $0019
                dc.l    $C806005D, $002E0020, $C8060057, $002B0010
                dc.l    $D0050067, $00330000, $D0050063, $0031FFF0
                dc.l    $E005006F, $00370020, $E005006B, $00350010
                dc.l    $E0050077, $003B0000, $E0050073, $0039FFF0
                dc.l    $D806007B, $003DFFE0, $D8060081, $0040FFD0
                dc.l    $F005008B, $00450020, $F0050087, $00430010
                dc.l    $F0050093, $00490000, $F005008F, $0047FFF0
                dc.l    $F0050097, $004BFFE0, $F005009B, $004DFFD0
                dc.l    $0005008B, $00450020, $0005008B, $00450010
                dc.l    $000500A7, $00530000, $000500AB, $0055FFF0
                dc.l    $000500AB, $0055FFE0, $000500B3, $0059FFD0
                dc.l    $100500AB, $00550020, $100500AB, $00550010
                dc.l    $100500B7, $005B0000
Collapsing_Platforms_Map_04: ; loc_967E:
                dc.w    $0019
                dc.l    $C806005D, $002E0020, $C8060057, $002B0010
                dc.l    $D0050067, $00330000, $D0050063, $0031FFF0
                dc.l    $E005006F, $00370020, $E005006B, $00350010
                dc.l    $E0050077, $003B0000, $E0050073, $0039FFF0
                dc.l    $D806007B, $003DFFE0, $D80600BB, $005DFFD0
                dc.l    $F005008B, $00450020, $F0050087, $00430010
                dc.l    $F0050093, $00490000, $F005008F, $0047FFF0
                dc.l    $F0050097, $004BFFE0, $F00500C1, $0060FFD0
                dc.l    $0005008B, $00450020, $0005008B, $00450010
                dc.l    $000500A7, $00530000, $000500AB, $0055FFF0
                dc.l    $000500AB, $0055FFE0, $000500B7, $005BFFD0
                dc.l    $100500AB, $00550020, $100500AB, $00550010
                dc.l    $100500B7, $005B0000              
loc_9748:
                dc.w    loc_9750-loc_9748
                dc.w    loc_9772-loc_9748
                dc.w    loc_97B4-loc_9748
                dc.w    loc_97D6-loc_9748
loc_9750:
                dc.w    $0004
                dc.l    $F80D0000, $0000FFE0, $080D0000, $0000FFE0
                dc.l    $F80D0000, $00000000, $080D0000, $00000000
loc_9772:
                dc.w    $0008
                dc.l    $F8050000, $0000FFE0, $F8050000, $0000FFF0
                dc.l    $F8050000, $00000000, $F8050000, $00000010
                dc.l    $08050000, $0000FFE0, $08050000, $0000FFF0
                dc.l    $08050000, $00000000, $08050000, $00000010
loc_97B4:
                dc.w    $0004
                dc.l    $F80D0000, $0000FFE0, $080D0008, $0004FFE0
                dc.l    $F80D0000, $00000000, $080D0008, $00040000
loc_97D6:
                dc.w    $0008
                dc.l    $F8050000, $0000FFE0, $F8050004, $0002FFF0
                dc.l    $F8050000, $00000000, $F8050004, $00020010
                dc.l    $08050008, $0004FFE0, $0805000C, $0006FFF0
                dc.l    $08050008, $00040000, $0805000C, $00060010
loc_9818:         
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10                    
loc_9828:
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10                   
HPz_Collapsing_Platforms_Mappings: ; loc_9858:
                dc.w    HPz_Collapsing_Platforms_Map_01-HPz_Collapsing_Platforms_Mappings
                dc.w    HPz_Collapsing_Platforms_Map_02-HPz_Collapsing_Platforms_Mappings
                dc.w    HPz_Collapsing_Platforms_Map_02-HPz_Collapsing_Platforms_Mappings
HPz_Collapsing_Platforms_Map_01: ; loc_985E:
                dc.w    $0008
                dc.l    $F00D0000, $0000FFD0, $000D0008, $0004FFD0
                dc.l    $F0050004, $0002FFF0, $F0050804, $08020000
                dc.l    $0005000C, $0006FFF0, $0005080C, $08060000
                dc.l    $F00D0800, $08000010, $000D0808, $08040010
HPz_Collapsing_Platforms_Map_02: ; loc_98A0:
                dc.w    $000C
                dc.l    $F0050000, $0000FFD0, $F0050004, $0002FFE0
                dc.l    $F0050004, $0002FFF0, $F0050804, $08020000
                dc.l    $F0050804, $08020010, $F0050800, $08000020
                dc.l    $00050008, $0004FFD0, $0005000C, $0006FFE0
                dc.l    $0005000C, $0006FFF0, $0005080C, $08060000
                dc.l    $0005080C, $08060010, $00050808, $08040020                                
OOz_Collapsing_Platforms_Mappings: ; loc_9902:
                dc.w    OOz_Collapsing_Platforms_Map_01-OOz_Collapsing_Platforms_Mappings
                dc.w    OOz_Collapsing_Platforms_Map_01-OOz_Collapsing_Platforms_Mappings
                dc.w    OOz_Collapsing_Platforms_Map_01-OOz_Collapsing_Platforms_Mappings
OOz_Collapsing_Platforms_Map_01: ; loc_9908:
                dc.w    $0007
                dc.l    $F00F0810, $0808FFC0, $F00F0810, $0808FFE0
                dc.l    $F00F0810, $08080000, $F00F0800, $08000020
                dc.l    $100D0820, $0810FFC0, $100D0820, $0810FFE0
                dc.l    $100D0820, $08100000
Dhz_Collapsing_Platforms_Mappings: ; loc_9942:
                dc.w    Dhz_Collapsing_Platforms_Map_01-Dhz_Collapsing_Platforms_Mappings
                dc.w    Dhz_Collapsing_Platforms_Map_02-Dhz_Collapsing_Platforms_Mappings
Dhz_Collapsing_Platforms_Map_01: ; loc_9946:
                dc.w    $0004
                dc.l    $F00D0000, $0000FFE0, $F00D0800, $08000000
                dc.l    $00090008, $0004FFF0, $000B000E, $00070008
Dhz_Collapsing_Platforms_Map_02: ; loc_9968:
                dc.w    $0006
                dc.l    $F0050000, $0000FFE0, $F0050004, $0002FFF0
                dc.l    $F0050804, $08020000, $F0050800, $08000010
                dc.l    $00090008, $0004FFF0, $000B000E, $00070008                            
;=============================================================================== 
; Object 0x1F - Collapsing Platforms - Dust Hill / Oil Ocean ...
; [ End ]
;===============================================================================                     
                nop                             ; Filler    
;=============================================================================== 
; Object 0x1C - Bridge, Support, Hill Top Posts... 
; [ Begin ]
;===============================================================================        
Obj_0x1C_Misc: ; loc_999C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_99AA(PC, D0), D1
                jmp     loc_99AA(PC, D1)   
loc_99AA:                             
                dc.w    loc_9A1E-loc_99AA
                dc.w    loc_9A50-loc_99AA
loc_99AE:
                dc.l    loc_9B9A
                dc.w    $43FD
                dc.b    $04, $06
                
                dc.l    ($01<<$18)|loc_9B9A
                dc.w    $43FD
                dc.b    $04, $06
                
                dc.l    ($01<<$18)|Bridge_Mappings ; loc_85E0 
                dc.w    $43C6
                dc.b    $04, $01
                
                dc.l    ($02<<$18)|loc_9B9A
                dc.w    $23FD
                dc.b    $10, $06
                
                dc.l    ($03<<$18)|Teleferics_Mappings ; loc_1611E 
                dc.w    $43E6
                dc.b    $08, $04
                
                dc.l    ($04<<$18)|Teleferics_Mappings ; loc_1611E 
                dc.w    $43E6
                dc.b    $08, $04
                
                dc.l    ($01<<$18)|Teleferics_Mappings ; loc_1611E 
                dc.w    $43E6
                dc.b    $20, $01
                
                dc.l    loc_9B3A 
                dc.w    $4000
                dc.b    $08, $01
                
                dc.l    ($01<<$18)|loc_9B3A 
                dc.w    $4000
                dc.b    $08, $01
                
                dc.l    loc_9B52 
                dc.w    $4428
                dc.b    $04, $04
                
                dc.l    loc_9B6A 
                dc.w    $4346
                dc.b    $08, $04
                
                dc.l    ($01<<$18)|loc_9B6A 
                dc.w    $4346
                dc.b    $08, $04
                
                dc.l    ($02<<$18)|loc_9B6A 
                dc.w    $4346
                dc.b    $08, $04
                
                dc.l    ($03<<$18)|loc_9B6A 
                dc.w    $4346
                dc.b    $08, $04                  
loc_9A1E:                      
                addq.b  #$02, $0024(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsl.w   #$03, D0
                lea     loc_99AE(PC), A1  
                lea     $00(A1, D0), A1
                move.b  (A1), $001A(A0)
                move.l  (A1)+, $0004(A0)
                move.w  (A1)+, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  (A1)+, $0019(A0)
                move.b  (A1)+, $0018(A0)
loc_9A50:
                bra     MarkObjGone             ; loc_D2A0
;=============================================================================== 
; Object 0x1C - Bridge, Support, Hill Top Posts... 
; [ End ]
;=============================================================================== 
 
;=============================================================================== 
; Object 0x71 - Bridge, Support, Hidden Palace Orbs, Metropolis Lava Bubbles... 
; [ Begin ]
;===============================================================================    
Obj_0x71_Hpz_Misc: ; loc_9A54: 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_9A62(PC, D0), D1
                jmp     loc_9A62(PC, D1)
loc_9A62:
                dc.w    loc_9A7E-loc_9A62
                dc.w    loc_9AC0-loc_9A62
loc_9A66:
                dc.l    ($03<<$18)|Hpz_Bridge_Mappings ; loc_8598
                dc.w    $6300
                dc.b    $04, 01 
                dc.l    Hpz_Orbs_Mappings              ; loc_9AFA
                dc.w    $E35A
                dc.b    $10, $01   
                dc.l    Lava_Bubble_Mappings           ; loc_9BBE 
                dc.w    $4536
                dc.b    $10, $01                
loc_9A7E:
                addq.b  #$02, $0024(A0)
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                lsl.w   #$03, D0
                lea     loc_9A66(PC), A1
                lea     $00(A1, D0), A1
                move.b  (A1), $001A(A0)
                move.l  (A1)+, $0004(A0)
                move.w  (A1)+, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  (A1)+, $0019(A0)
                move.b  (A1)+, $0018(A0)
                move.b  $0028(A0), D0
                andi.w  #$00F0, D0
                lsr.b   #$04, D0
                move.b  D0, $001C(A0)
loc_9AC0:                
                lea     (loc_9ACE), A1
                bsr     AnimateSprite           ; loc_D412
                bra     MarkObjGone             ; loc_D2A0
loc_9ACE:
                dc.w    loc_9AD6-loc_9ACE
                dc.w    loc_9ADE-loc_9ACE
                dc.w    loc_9AED-loc_9ACE
                dc.w    loc_9AF6-loc_9ACE
loc_9AD6:
                dc.b    $08, $03, $03, $04, $05, $05, $04, $FF
loc_9ADE:
                dc.b    $05, $00, $00, $00, $01, $02, $03, $03, $02, $01, $02, $03, $03, $01, $FF
loc_9AED:
                dc.b    $0B, $00, $01, $02, $03, $04, $05, $FD, $03
loc_9AF6:
                dc.b    $7F, $06, $FD, $02               
Hpz_Orbs_Mappings: ; loc_9AFA:
                dc.w    loc_9B02-Hpz_Orbs_Mappings
                dc.w    loc_9B0C-Hpz_Orbs_Mappings
                dc.w    loc_9B16-Hpz_Orbs_Mappings
                dc.w    loc_9B28-Hpz_Orbs_Mappings
loc_9B02:
                dc.w    $0001
                dc.l    $F40A0000, $0000FFF4
loc_9B0C:
                dc.w    $0001
                dc.l    $F40A0009, $0004FFF4
loc_9B16:
                dc.w    $0002
                dc.l    $F00D0012, $0009FFF0, $000D1812, $1809FFF0
loc_9B28:
                dc.w    $0002
                dc.l    $F00D001A, $000DFFF0, $000D181A, $180DFFF0                
;=============================================================================== 
; Object 0x71 - Bridge, Support, Hidden Palace Orbs, Metropolis Lava Bubbles... 
; [ End ]
;===============================================================================               
loc_9B3A:
                dc.w    loc_9B3E-loc_9B3A
                dc.w    loc_9B48-loc_9B3A
loc_9B3E:
                dc.w    $0001
                dc.l    $F8050002, $0001FFF8
loc_9B48:
                dc.w    $0001
                dc.l    $F8050006, $0003FFF8
loc_9B52:
                dc.w    loc_9B56-loc_9B52
                dc.w    loc_9B60-loc_9B52
loc_9B56:
                dc.w    $0001
                dc.l    $F8010000, $0000FFFC
loc_9B60:
                dc.w    $0001
                dc.l    $F8010002, $0001FFFC
loc_9B6A:
                dc.w    loc_9B72-loc_9B6A
                dc.w    loc_9B7C-loc_9B6A
                dc.w    loc_9B86-loc_9B6A
                dc.w    loc_9B90-loc_9B6A
loc_9B72:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
loc_9B7C:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
loc_9B86:
                dc.w    $0001
                dc.l    $F8052008, $2004FFF8
loc_9B90:
                dc.w    $0001
                dc.l    $F801000C, $0006FFFC                  
loc_9B9A:
                dc.w    loc_9BA0-loc_9B9A
                dc.w    loc_9BAA-loc_9B9A
                dc.w    loc_9BB4-loc_9B9A
loc_9BA0:
                dc.w    $0001
                dc.l    $F8010004, $0002FFFC
loc_9BAA:
                dc.w    $0001
                dc.l    $F8010006, $0003FFFC
loc_9BB4:
                dc.w    $0001
                dc.l    $FC0C0000, $0000FFF0  
Lava_Bubble_Mappings:                                  
loc_9BBE:
                dc.w    loc_9BCC-loc_9BBE
                dc.w    loc_9BD6-loc_9BBE
                dc.w    loc_9BE0-loc_9BBE
                dc.w    loc_9BEA-loc_9BBE
                dc.w    loc_9BF4-loc_9BBE
                dc.w    loc_9BFE-loc_9BBE
                dc.w    loc_9C08-loc_9BBE
loc_9BCC:
                dc.w    $0001
                dc.l    $02040000, $0000FFF8
loc_9BD6:
                dc.w    $0001
                dc.l    $00040000, $0000FFF8
loc_9BE0:
                dc.w    $0001
                dc.l    $FE040000, $0000FFF8
loc_9BEA:
                dc.w    $0001
                dc.l    $FC040000, $0000FFF8
loc_9BF4:
                dc.w    $0001
                dc.l    $FC080002, $0001FFF4
loc_9BFE:
                dc.w    $0001
                dc.l    $FC0C0005, $0002FFF0
loc_9C08:
                dc.w    $0000  
                nop                             ; Filler
;=============================================================================== 
; Object 0x2A - Dust Hill - Up and Down Pillar
; [ Begin ]
;===============================================================================                    
Obj_0x2A_Up_Down_Pillar: ; loc_9C0C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_9C1A(PC, D0), D1
                jmp     loc_9C1A(PC, D1)
loc_9C1A:
                dc.w    loc_9C1E-loc_9C1A
                dc.w    loc_9C58-loc_9C1A
loc_9C1E:
                addq.b  #$02, $0024(A0)
                move.l  #Up_Down_Pillar_Mappings, $0004(A0) ; loc_9CAE
                move.w  #$4000, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  #$50, $0016(A0)
                bset    #$04, $0001(A0)
loc_9C58:
                tst.b   $0025(A0)
                bne.s   loc_9C72
                addq.w  #$01, $0030(A0)
                cmpi.w  #$0060, $0030(A0)
                bne.s   loc_9C84
                move.b  #$02, $0025(A0)
                bra.s   loc_9C84
loc_9C72:
                subq.w  #$08, $0030(A0)
                bhi.s   loc_9C84
                move.w  #$0000, $0030(A0)
                move.b  #$00, $0025(A0)
loc_9C84:
                move.w  $0032(A0), D0
                sub.w   $0030(A0), D0
                move.w  D0, $000C(A0)
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0040, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; loc_F4A0
                bra     MarkObjGone             ; loc_D2A0
Up_Down_Pillar_Mappings:                
loc_9CAE:
                dc.w    loc_9CB0-loc_9CAE
loc_9CB0:
                dc.w    $0006
                dc.l    $B009001A, $000DFFF0, $C00F0020, $0010FFF0
                dc.l    $E00F0030, $0018FFF0, $000F1030, $1018FFF0
                dc.l    $200F1020, $1010FFF0, $4009101A, $100DFFF0                
;=============================================================================== 
; Object 0x2A - Dust Hill - Up and Down Pillar
; [ End ]
;===============================================================================                   

;=============================================================================== 
; Object 0x2D - Hill Top / Chemical Plant - Automatic Door. 
; [ Begin ]
;===============================================================================                  
Obj_0x2D_Automatic_Door: ; loc_9CE2:                
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_9CF0(PC, D0), D1
                jmp     loc_9CF0(PC, D1)
loc_9CF0:
                dc.w    loc_9CF4-loc_9CF0
                dc.w    loc_9D76-loc_9CF0
loc_9CF4:
                addq.b  #$02, $0024(A0)
                move.l  #Automatic_Door_Mappings, $0004(A0) ; loc_9E1E
                move.w  #$2426, $0002(A0)
                move.b  #$08, $0019(A0)
                cmpi.b  #$04, ($FFFFFE10).w
                bne.s   loc_9D20
                move.w  #$6000, $0002(A0)
                move.b  #$0C, $0019(A0)
loc_9D20:
                cmpi.b  #$0D, ($FFFFFE10).w
                bne.s   loc_9D34
                move.w  #$2394, $0002(A0)
                move.b  #$0C, $0019(A0)
loc_9D34:
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  $0028(A0), $001A(A0)
                move.w  $0008(A0), D2
                move.w  D2, D3
                subi.w  #$0200, D2
                addi.w  #$0018, D3
                btst    #$00, $0022(A0)
                beq.s   loc_9D6E
                subi.w  #$FE18, D2
                addi.w  #$01E8, D3
loc_9D6E:
                move.w  D2, $0038(A0)
                move.w  D3, $003A(A0)
loc_9D76:
                btst    #$00, $0022(A0)
                bne.s   loc_9D92
                move.w  $0038(A0), D2
                move.w  $0008(A0), D3
                tst.b   $0025(A0)
                beq.s   loc_9DA4
                move.w  $003A(A0), D3
                bra.s   loc_9DA4
loc_9D92:
                move.w  $0008(A0), D2
                move.w  $003A(A0), D3
                tst.b   $0025(A0)
                beq.s   loc_9DA4
                move.w  $0038(A0), D2
loc_9DA4:
                move.b  #$00, $0025(A0)
                move.w  ($FFFFB008).w, D0
                cmp.w   D2, D0
                bcs     loc_9DC0
                cmp.w   D3, D0
                bcc     loc_9DC0
                move.b  #$02, $0025(A0)
loc_9DC0:
                move.w  ($FFFFB048).w, D0
                cmp.w   D2, D0
                bcs     loc_9DD6
                cmp.w   D3, D0
                bcc     loc_9DD6
                move.b  #$02, $0025(A0)
loc_9DD6:
                tst.b   $0025(A0)
                beq.s   loc_9DEA
                cmpi.w  #$0040, $0030(A0)
                beq.s   loc_9E00
                addq.w  #$08,  $0030(A0)
                bra.s   loc_9DF4
loc_9DEA:
                tst.w   $0030(A0)
                beq.s   loc_9E00
                subq.w  #$08, $0030(A0)
loc_9DF4:
                move.w  $0032(A0), D0
                sub.w   $0030(A0), D0
                move.w  D0, $000C(A0)
loc_9E00:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0020, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; loc_F4A0
                bra     MarkObjGone             ; loc_D2A0
Automatic_Door_Mappings:                
loc_9E1E:
                dc.w    loc_9E24-loc_9E1E
                dc.w    loc_9E46-loc_9E1E
                dc.w    loc_9E58-loc_9E1E
loc_9E24:
                dc.w    $0004
                dc.l    $E0050000, $0000FFF8, $F0050000, $0000FFF8
                dc.l    $00050000, $0000FFF8, $10050000, $0000FFF8
loc_9E46:
                dc.w    $0002
                dc.l    $E00B005F, $002FFFF4, $000B005F, $002FFFF4
loc_9E58:
                dc.w    $0002
                dc.l    $E0070000, $0000FFF8, $00070000, $0000FFF8
;=============================================================================== 
; Object 0x2D - Hill Top / Chemical Plant - Automatic Door. 
; [ End ]
;===============================================================================
                nop                             ; Filler
;=============================================================================== 
; Object ??? - Unknow Object 0x009E6C
; [ Begin ]    Sonic 1 Object 1E - leftover Ballhog object
;===============================================================================                
S1_Ballhog: ; Unknow_Obj_0x009E6C: ; loc_9E6C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_9E7A(PC, D0), D1
                jmp     loc_9E7A(PC, D1)
loc_9E7A:
                dc.w    loc_9E7E-loc_9E7A
                dc.w    loc_9ED2-loc_9E7A
loc_9E7E:
                move.b  #$13, $0016(A0)
                move.b  #$08, $0017(A0)
                move.l  #S1_Ballhog_Mappings, $0004(A0) ;  loc_A18E
                move.w  #$2302, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$05, $0020(A0)
                move.b  #$0C, $0019(A0)
                bsr     ObjectFall              ; loc_D24E
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_9ED0
                add.w   D1, $000C(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
loc_9ED0:
                rts
loc_9ED2:
                lea     (Ani_S1_Ballhog), A1    ; loc_A174
                bsr     AnimateSprite           ; loc_D412
                cmpi.b  #$01, $001A(A0)
                bne.s   loc_9EEC
                tst.b   $0032(A0)
                beq.s   loc_9EF4
                bra.s   loc_9EF0
loc_9EEC:
                clr.b   $0032(A0)
loc_9EF0:
                bra     MarkObjGone             ; loc_D2A0
loc_9EF4:
                move.b  #$01, $0032(A0)
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_9F38
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$FF00, $0010(A1)
                move.w  #$0000, $0012(A1)
                moveq   #-4, D0
                btst    #$00, $0022(A0)
                beq.s   loc_9F28
                neg.w   D0
                neg.w   $0010(A1)
loc_9F28:
                add.w   D0, $0008(A1)
                addi.w  #$000C, $000C(A1)
                move.b  $0028(A0), $0028(A1)
loc_9F38:
                bra.s   loc_9EF0                                
;=============================================================================== 
; Object ??? - Unknow Object 0x009E6C
; [ End ]
;===============================================================================                   
;=============================================================================== 
; Object ??? - Unknow Object 0x009F3A    
; [ Begin ]  Sonic1 Object 20 - leftover object for the ball that Ballhog throws
;===============================================================================  
S1_BallHog_Ball: ; Unknow_Obj_0x009F3A: ; loc_9F3A:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_9F48(PC, D0), D1
                jmp     loc_9F48(PC, D1)
loc_9F48:
                dc.w    loc_9F4C-loc_9F48
                dc.w    loc_9F94-loc_9F48
loc_9F4C:
                addq.b  #$02, $0024(A0)
                move.b  #$07, $0016(A0)
                move.l  #S1_Ballhog_Mappings, $0004(A0) ; loc_A18E
                move.w  #$2302, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$87, $0020(A0)
                move.b  #$08, $0019(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                mulu.w  #$003C, D0
                move.w  D0, $0030(A0)
                move.b  #$04, $001A(A0)
loc_9F94:
                jsr     ObjectFall              ; (loc_D24E)
                tst.w   $0012(A0)
                bmi.s   loc_9FD0
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_9FD0
                add.w   D1, $000C(A0)
                move.w  #$FD00, $0012(A0)
                tst.b   D3
                beq.s   loc_9FD0
                bmi.s   loc_9FC6
                tst.w   $0010(A0)
                bpl.s   loc_9FD0
                neg.w   $0010(A0)
                bra.s   loc_9FD0
loc_9FC6:
                tst.w   $0010(A0)
                bmi.s   loc_9FD0
                neg.w   $0010(A0)
loc_9FD0:
                subq.w  #$01, $0030(A0)
                bpl.s   loc_9FEC
                move.b  #$24, $0000(A0)
                move.b  #$3F, $0000(A0)
                move.b  #$00, $0024(A0)
                bra     Obj_0x3F                ; loc_A11E
loc_9FEC:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_9FFE
                move.b  #$05, $001E(A0)
                bchg    #0, $001A(A0)
loc_9FFE:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2
;=============================================================================== 
; Object ??? - Unknow Object 0x009F3A
; [ End ]
;===============================================================================  

;=============================================================================== 
; Object 0x24 
; [ Begin ]
;===============================================================================                    
Obj_0x24: ; loc_A012:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_A020(PC, D0), D1
                jmp     loc_A020(PC, D1)
loc_A020:
                dc.w    loc_A024-loc_A020
                dc.w    loc_A068-loc_A020
loc_A024:
                addq.b  #$02, $0024(A0)
                move.l  #loc_A1F6, $0004(A0)
                move.w  #$041C, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$00, $0020(A0)
                move.b  #$0C, $0019(A0)
                move.b  #$09, $001E(A0)
                move.b  #$00, $001A(A0)
                move.w  #$00A5, D0
                jsr     (PlaySound)              ; loc_14C6
loc_A068:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_A082
                move.b  #$09, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$04, $001A(A0)
                beq     DeleteObject            ; loc_D3B4
loc_A082:
                bra     DisplaySprite           ; loc_D3C2
;=============================================================================== 
; Object 0x24 
; [ End ]
;=============================================================================== 
                     
;=============================================================================== 
; Object 0x27 - Object Hit - Enemies / Monitors 
; [ Begin ]
;===============================================================================                 
Obj_0x27_Object_Hit: ; loc_A086:             
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Object_Hit_Index(PC, D0), D1 ; loc_A094
                jmp     Object_Hit_Index(PC, D1)     ; loc_A094
Object_Hit_Index: ; loc_A094:
                dc.w    loc_A09A-Object_Hit_Index
                dc.w    loc_A0BC-Object_Hit_Index
                dc.w    loc_A100-Object_Hit_Index
loc_A09A:
                addq.b  #$02, $0024(A0)
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_A0BC
                move.b  #$28, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $003E(A0), $003E(A1)
loc_A0BC:
                addq.b  #$02, $0024(A0)
                move.l  #Object_Hit_Mappings, $0004(A0) ;  loc_A226
                move.w  #$05A0, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$00, $0020(A0)
                move.b  #$0C, $0019(A0)
                move.b  #$07, $001E(A0)
                move.b  #$00, $001A(A0)
                move.w  #$00C1, D0
                jsr     (PlaySound)              ; loc_14C6
loc_A100:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_A11A
                move.b  #$07, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$05, $001A(A0)
                beq     DeleteObject            ; loc_D3B4
loc_A11A:
                bra     DisplaySprite           ; loc_D3C2  
;=============================================================================== 
; Object 0x27 - Object Hit - Enemies / Monitors 
; [ End ]
;===============================================================================   
;=============================================================================== 
; Object 0x3F 
; [ Begin ]
;===============================================================================  
Obj_0x3F: ; loc_A11E:               
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_A12C(PC, D0), D1
                jmp     loc_A12C(PC, D1)
loc_A12C:
                dc.w    loc_A130-loc_A12C
                dc.w    loc_A100-loc_A12C
loc_A130:
                addq.b  #$02, $0024(A0)
                move.l  #loc_A292, $0004(A0)
                move.w  #$05A0, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$00, $0020(A0)
                move.b  #$0C, $0019(A0)
                move.b  #$07, $001E(A0)
                move.b  #$00, $001A(A0)
                move.w  #$00C4, D0
                jmp     (PlaySound)              ; loc_14C6                   
;=============================================================================== 
; Object 0x3F
; [ End ]
;===============================================================================                
Ani_S1_Ballhog: ; Unknow_Obj_0x009E6C_Data: ; loc_A174:
                dc.w    loc_A176-Ani_S1_Ballhog
loc_A176:
                dc.b    $09, $00, $00, $02, $02, $03, $02, $00, $00, $02, $02, $03, $02, $00, $00, $02
                dc.b    $02, $03, $02, $00, $00, $01, $FF, $00    
S1_Ballhog_Mappings: ; Unknow_Obj_0x009E6C_Mappings:  loc_A18E:
                dc.w    loc_A19A-S1_Ballhog_Mappings
                dc.w    loc_A1AC-S1_Ballhog_Mappings
                dc.w    loc_A1BE-S1_Ballhog_Mappings
                dc.w    loc_A1D0-S1_Ballhog_Mappings
                dc.w    loc_A1E2-S1_Ballhog_Mappings
                dc.w    loc_A1EC-S1_Ballhog_Mappings
loc_A19A:
                dc.w    $0002
                dc.l    $EF090000, $0000FFF4, $FF0A0006, $0003FFF4
loc_A1AC:
                dc.w    $0002
                dc.l    $EF090000, $0000FFF4, $FF0A000F, $0007FFF4
loc_A1BE:
                dc.w    $0002
                dc.l    $F4090000, $0000FFF4, $04090018, $000CFFF4
loc_A1D0:
                dc.w    $0002
                dc.l    $E4090000, $0000FFF4, $F40A001E, $000FFFF4
loc_A1E2:
                dc.w    $0001
                dc.l    $F8050027, $0013FFF8
loc_A1EC:
                dc.w    $0001
                dc.l    $F805002B, $0015FFF8              
loc_A1F6:
                dc.w    loc_A1FE-loc_A1F6
                dc.w    loc_A208-loc_A1F6
                dc.w    loc_A212-loc_A1F6
                dc.w    loc_A21C-loc_A1F6
loc_A1FE:
                dc.w    $0001
                dc.l    $F40A0000, $0000FFF4
loc_A208:
                dc.w    $0001
                dc.l    $F40A0009, $0004FFF4
loc_A212:
                dc.w    $0001
                dc.l    $F40A0012, $0009FFF4
loc_A21C:
                dc.w    $0001
                dc.l    $F40A001B, $000DFFF4
Object_Hit_Mappings: ; loc_A226:
                dc.w    Object_Hit_Map_01-Object_Hit_Mappings
                dc.w    Object_Hit_Map_02-Object_Hit_Mappings
                dc.w    Object_Hit_Map_03-Object_Hit_Mappings
                dc.w    Object_Hit_Map_04-Object_Hit_Mappings
                dc.w    Object_Hit_Map_05-Object_Hit_Mappings
Object_Hit_Map_01: ; loc_A230:
                dc.w    $0001
                dc.l    $F8090000, $0000FFF4
Object_Hit_Map_02: ;loc_A23A:
                dc.w    $0001
                dc.l    $F00F0006, $0003FFF0
Object_Hit_Map_03: ;loc_A244:
                dc.w    $0001
                dc.l    $F00F0016, $000BFFF0
Object_Hit_Map_04: ;loc_A24E:
                dc.w    $0004
                dc.l    $EC0A0026, $0013FFEC, $EC05002F, $00170004
                dc.l    $0405182F, $1817FFEC, $FC0A1826, $1813FFFC
Object_Hit_Map_05: ;loc_A270:
                dc.w    $0004
                dc.l    $EC0A0033, $0019FFEC, $EC05003C, $001E0004
                dc.l    $0405183C, $181EFFEC, $FC0A1833, $1819FFFC
loc_A292:
                dc.w    Object_Hit_Map_01-loc_A292
                dc.w    loc_A29C-loc_A292
                dc.w    loc_A2A6-loc_A292
                dc.w    Object_Hit_Map_04-loc_A292
                dc.w    Object_Hit_Map_05-loc_A292
loc_A29C:
                dc.w    $0001
                dc.l    $F00F0040, $0020FFF0
loc_A2A6:
                dc.w    $0001
                dc.l    $F00F0050, $0028FFF0  
;=============================================================================== 
; Object 0x28 - Flickies
; [ Begin ]
;===============================================================================                                                 
Obj_0x28_Flickies: ; loc_A2B0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Flickies_Index(PC, D0), D1 ; loc_A2BE
                jmp     Flickies_Index(PC, D1)     ; loc_A2BE
Flickies_Index: ; loc_A2BE:
                dc.w    loc_A3B2-Flickies_Index
                dc.w    loc_A4D8-Flickies_Index
                dc.w    loc_A532-Flickies_Index
                dc.w    loc_A56E-Flickies_Index
                dc.w    loc_A532-Flickies_Index
                dc.w    loc_A532-Flickies_Index
                dc.w    loc_A532-Flickies_Index
                dc.w    loc_A56E-Flickies_Index
                dc.w    loc_A532-Flickies_Index
                dc.w    loc_A5EE-Flickies_Index
                dc.w    loc_A60E-Flickies_Index
                dc.w    loc_A60E-Flickies_Index
                dc.w    loc_A62E-Flickies_Index
                dc.w    loc_A668-Flickies_Index
                dc.w    loc_A6C2-Flickies_Index
                dc.w    loc_A6E0-Flickies_Index
                dc.w    loc_A6C2-Flickies_Index
                dc.w    loc_A6E0-Flickies_Index
                dc.w    loc_A6C2-Flickies_Index
                dc.w    loc_A71E-Flickies_Index
                dc.w    loc_A684-Flickies_Index
loc_A2E8:
                dc.b    $00, $05, $02, $03, $06, $03, $04, $05, $04, $01, $00, $01, $00, $05, $02, $03
                dc.b    $06, $03, $04, $05, $04, $01, $00, $01, $00, $05, $02, $03, $06, $03, $04, $05
                dc.b    $04, $01, $00, $01
loc_A30C:
                dc.w    $FE00, $FC00
                dc.l    loc_A816
                dc.w    $FE00, $FD00
                dc.l    loc_A83A
                dc.w    $FE80, $FD00
                dc.l    loc_A816
                dc.w    $FEC0, $FE80
                dc.l    loc_A83A
                dc.w    $FE40, $FD00
                dc.l    loc_A85E
                dc.w    $FD00, $FC00
                dc.l    loc_A83A
                dc.w    $FD80, $FC80
                dc.l    loc_A85E
loc_A344:
                dc.w    $FBC0, $FC00, $FBC0, $FC00, $FBC0, $FC00, $FD00, $FC00
                dc.w    $FD00, $FC00, $FE80, $FD00, $FE80, $FD00, $FEC0, $FE80
                dc.w    $FE40, $FD00, $FE00, $FD00, $FD80, $FC80
loc_A370:
                dc.l    loc_A83A
                dc.l    loc_A83A
                dc.l    loc_A83A
                dc.l    loc_A816
                dc.l    loc_A816
                dc.l    loc_A816
                dc.l    loc_A816
                dc.l    loc_A83A
                dc.l    loc_A85E
                dc.l    loc_A83A
                dc.l    loc_A85E                
loc_A39C:
                dc.w    $05A5, $05A5, $05A5, $0553, $0553, $0573, $0573, $0585
                dc.w    $0593, $0565, $05B3
loc_A3B2:
                tst.b   $0028(A0)
                beq     loc_A420
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.b  D0, $0024(A0)
                subi.w  #$0014, D0
                move.w  loc_A39C(PC, D0), $0002(A0)
                add.w   D0, D0
                move.l  loc_A370(PC, D0), $0004(A0)
                lea     loc_A344(PC), A1
                move.w  $00(A1, D0), $0032(A0)
                move.w  $00(A1, D0), $0010(A0)
                move.w  $02(A1, D0), $0034(A0)
                move.w  $02(A1, D0), $0012(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$0C, $0016(A0)
                move.b  #$04, $0001(A0)
                bset    #$00, $0001(A0)
                move.b  #$06, $0018(A0)
                move.b  #$08, $0019(A0)
                move.b  #$07, $001E(A0)
                bra     DisplaySprite           ; loc_D3C2
loc_A420:
                addq.b  #$02, $0024(A0)
                bsr     PseudoRandomNumber      ; loc_31E4
                andi.w  #$0001, D0
                moveq   #$00, D1
                move.b  ($FFFFFE10).w, D1
                add.w   D1, D1
                add.w   D0, D1
                lea     loc_A2E8(PC), A1
                move.b  $00(A1, D1), D0
                move.b  D0, $0030(A0)
                lsl.w   #$03, D0
                lea     loc_A30C(PC), A1
                adda.w  D0, A1
                move.w  (A1)+, $0032(A0)
                move.w  (A1)+, $0034(A0)
                move.l  (A1)+, $0004(A0)
                move.w  #$0580, $0002(A0)
                btst    #$00, $0030(A0)
                beq.s   loc_A46A
                move.w  #$0592, $0002(A0)
loc_A46A:
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$0C, $0016(A0)
                move.b  #$04, $0001(A0)
                bset    #$00, $0001(A0)
                move.b  #$06, $0018(A0)
                move.b  #$08, $0019(A0)
                move.b  #$07, $001E(A0)
                move.b  #$02, $001A(A0)
                move.w  #$FC00, $0012(A0)
                tst.b   ($FFFFF7A7).w
                bne.s   loc_A4CA
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_A4C6
                move.b  #$29, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $003E(A0), D0
                lsr.w   #$01, D0
                move.b  D0, $001A(A1)
loc_A4C6:
                bra     DisplaySprite           ; loc_D3C2
loc_A4CA:
                move.b  #$12, $0024(A0)
                clr.w   $0010(A0)
                bra     DisplaySprite           ; loc_D3C2
loc_A4D8:
                tst.b   $0001(A0)
                bpl     DeleteObject            ; loc_D3B4
                bsr     ObjectFall              ; loc_D24E
                tst.w   $0012(A0)
                bmi.s   loc_A52E
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_A52E
                add.w   D1, $000C(A0)
                move.w  $0032(A0), $0010(A0)
                move.w  $0034(A0), $0012(A0)
                move.b  #$01, $001A(A0)
                move.b  $0030(A0), D0
                add.b   D0, D0
                addq.b  #$04, D0
                move.b  D0, $0024(A0)
                tst.b   ($FFFFF7A7).w
                beq.s   loc_A52E
                btst    #$04, ($FFFFFE0F).w
                beq.s   loc_A52E
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
loc_A52E:
                bra     DisplaySprite           ; loc_D3C2
loc_A532:
                bsr     ObjectFall              ; loc_D24E
                move.b  #$01, $001A(A0)
                tst.w   $0012(A0)
                bmi.s   loc_A55C
                move.b  #$00, $001A(A0)
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_A55C
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
loc_A55C:
                tst.b   $0028(A0)
                bne.s   loc_A5D2
                tst.b   $0001(A0)
                bpl     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2
loc_A56E:
                bsr     SpeedToPos              ; loc_D27A
                addi.w  #$0018, $0012(A0)
                tst.w   $0012(A0)
                bmi.s   loc_A5AA
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_A5AA
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
                tst.b   $0028(A0)
                beq.s   loc_A5AA
                cmpi.b  #$0A, $0028(A0)
                beq.s   loc_A5AA
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
loc_A5AA:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_A5C0
                move.b  #$01, $001E(A0)
                addq.b  #$01, $001A(A0)
                andi.b  #$01, $001A(A0)
loc_A5C0:
                tst.b   $0028(A0)
                bne.s   loc_A5D2
                tst.b   $0001(A0)
                bpl     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2
loc_A5D2:
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bcs.s   loc_A5EA
                subi.w  #$0180, D0
                bpl.s   loc_A5EA
                tst.b   $0001(A0)
                bpl     DeleteObject            ; loc_D3B4
loc_A5EA:
                bra     DisplaySprite           ; loc_D3C2
loc_A5EE:
                tst.b   $0001(A0)
                bpl     DeleteObject            ; loc_D3B4
                subq.w  #$01, $0036(A0)
                bne     loc_A60A
                move.b  #$02, $0024(A0)
                move.b  #$03, $0018(A0)
loc_A60A:
                bra     DisplaySprite           ; loc_D3C2
loc_A60E:
                bsr     loc_A7B2
                bcc.s   loc_A62A
                move.w  $0032(A0), $0010(A0)
                move.w  $0034(A0), $0012(A0)
                move.b  #$0E, $0024(A0)
                bra     loc_A56E
loc_A62A:
                bra     loc_A5D2
loc_A62E:
                bsr     loc_A7B2
                bpl.s   loc_A664
                clr.w   $0010(A0)
                clr.w   $0032(A0)
                bsr     SpeedToPos              ; loc_D27A
                addi.w  #$0018, $0012(A0)
                bsr     loc_A772
                bsr     loc_A79A
                subq.b  #$01, $001E(A0)
                bpl.s   loc_A664
                move.b  #$01, $001E(A0)
                addq.b  #$01, $001A(A0)
                andi.b  #$01, $001A(A0)
loc_A664:
                bra     loc_A5D2
loc_A668:
                bsr     loc_A7B2
                bpl.s   loc_A6BE
                move.w  $0032(A0), $0010(A0)
                move.w  $0034(A0), $0012(A0)
                move.b  #$04, $0024(A0)
                bra     loc_A532
loc_A684:
                bsr     ObjectFall              ; loc_D24E
                move.b  #$01, $001A(A0)
                tst.w   $0012(A0)
                bmi.s   loc_A6BE
                move.b  #$00, $001A(A0)
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_A6BE
                not.b  $0029(A0)
                bne.s   loc_A6B4
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
loc_A6B4:
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
loc_A6BE:
                bra     loc_A5D2
loc_A6C2:
                bsr     loc_A7B2
                bpl.s   loc_A6DC
                clr.w   $0010(A0)
                clr.w   $0032(A0)
                bsr     ObjectFall              ; loc_D24E
                bsr     loc_A772
                bsr     loc_A79A
loc_A6DC:
                bra     loc_A5D2
loc_A6E0:
                bsr     loc_A7B2
                bpl.s   loc_A71A
                bsr     ObjectFall              ; loc_D24E
                move.b  #$01, $001A(A0)
                tst.w   $0012(A0)
                bmi.s   loc_A71A
                move.b  #$00, $001A(A0)
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_A71A
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
loc_A71A:
                bra     loc_A5D2
loc_A71E:
                bsr     loc_A7B2
                bpl.s   loc_A76E
                bsr     SpeedToPos              ; loc_D27A
                addi.w  #$0018, $0012(A0)
                tst.w   $0012(A0)
                bmi.s   loc_A758
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_A758
                not.b  $0029(A0)
                bne.s   loc_A74E
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
loc_A74E:
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
loc_A758:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_A76E
                move.b  #$01, $001E(A0)
                addq.b  #$01, $001A(A0)
                andi.b  #$01, $001A(A0)
loc_A76E:
                bra     loc_A5D2
loc_A772:
                move.b  #$01, $001A(A0)
                tst.w   $0012(A0)
                bmi.s   loc_A798
                move.b  #$00, $001A(A0)
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_A798
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
loc_A798:
                rts
loc_A79A:
                bset    #$00, $0001(A0)
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bcc.s   loc_A7B0
                bclr    #$00, $0001(A0)
loc_A7B0:
                rts
loc_A7B2:
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                subi.w  #$00B8, D0
                rts   
;=============================================================================== 
; Object 0x28 - Flickies
; [ End ]
;===============================================================================  
;=============================================================================== 
; Object 0x29 - Enemy Points
; [ Begin ]
;===============================================================================                    
Obj_0x29_Enemy_Points: ; loc_A7C0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Enemy_Points_Index(PC, D0), D1  ; loc_A7CE
                jmp     Enemy_Points_Index(PC, D1)      ; loc_A7CE
Enemy_Points_Index: ; loc_A7CE:
                dc.w    loc_A7D2-Enemy_Points_Index
                dc.w    loc_A800-Enemy_Points_Index
loc_A7D2:
                addq.b  #$02, $0024(A0)
                move.l  #Enemy_Points_Mappings, $0004(A0) ; loc_A882
                move.w  #$04AC, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$08, $0019(A0)
                move.w  #$FD00, $0012(A0)
loc_A800:
                tst.w   $0012(A0)
                bpl     DeleteObject            ; loc_D3B4
                bsr     SpeedToPos              ; loc_D27A
                addi.w  #$0018, $0012(A0)
                bra     DisplaySprite           ; loc_D3C2
;=============================================================================== 
; Object 0x29 - Enemy Points
; [ End ]
;===============================================================================                 
loc_A816:
                dc.w    loc_A826-loc_A816
                dc.w    loc_A830-loc_A816
                dc.w    loc_A81C-loc_A816
loc_A81C:
                dc.w    $0001
                dc.l    $F4060000, $0000FFF8
loc_A826:
                dc.w    $0001
                dc.l    $F4060006, $0003FFF8
loc_A830:
                dc.w    $0001
                dc.l    $F406000C, $0006FFF8                             
loc_A83A:
                dc.w    loc_A84A-loc_A83A
                dc.w    loc_A854-loc_A83A
                dc.w    loc_A840-loc_A83A
loc_A840:
                dc.w    $0001
                dc.l    $F4060000, $0000FFF8
loc_A84A:
                dc.w    $0001
                dc.l    $FC050006, $0003FFF8
loc_A854:
                dc.w    $0001
                dc.l    $FC05000A, $0005FFF8
loc_A85E:
                dc.w    loc_A86E-loc_A85E
                dc.w    loc_A878-loc_A85E
                dc.w    loc_A864-loc_A85E
loc_A864:
                dc.w    $0001
                dc.l    $F4060000, $0000FFF8
loc_A86E:
                dc.w    $0001
                dc.l    $FC090006, $0003FFF4
loc_A878:
                dc.w    $0001
                dc.l    $FC09000C, $0006FFF4                            
Enemy_Points_Mappings:
loc_A882:
                dc.w    loc_A890-loc_A882
                dc.w    loc_A89A-loc_A882
                dc.w    loc_A8A4-loc_A882
                dc.w    loc_A8AE-loc_A882
                dc.w    loc_A8C0-loc_A882
                dc.w    loc_A8CA-loc_A882
                dc.w    loc_A8DC-loc_A882
loc_A890:
                dc.w    $0001
                dc.l    $F8050002, $0001FFF8
loc_A89A:
                dc.w    $0001
                dc.l    $F8050006, $0003FFF8
loc_A8A4:
                dc.w    $0001
                dc.l    $F805000A, $0005FFF8
loc_A8AE:
                dc.w    $0002
                dc.l    $F8010000, $0000FFF8, $F805000E, $00070000
loc_A8C0:
                dc.w    $0001
                dc.l    $F8010000, $0000FFFC
loc_A8CA:
                dc.w    $0002
                dc.l    $F8050002, $0001FFF0, $F805000E, $00070000
loc_A8DC:
                dc.w    $0002
                dc.l    $F805000A, $0005FFF0, $F805000E, $00070000                          
               
                nop                             ; Filler                                                
;=============================================================================== 
; Object ??? - Unknow Object 0x00A8F0  (Sonic 1 Object 1F - GHZ Crabmeat)
; [ Begin ]
;===============================================================================                  
S1_Crabmeat: ; Unknow_Obj_0x00A8F0: ; loc_A8F0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_A8FE(PC, D0), D1
                jmp     loc_A8FE(PC, D1)
loc_A8FE:
                dc.w    loc_A908-loc_A8FE
                dc.w    loc_A960-loc_A8FE
                dc.w    loc_AABC-loc_A8FE
                dc.w    loc_AAC0-loc_A8FE
                dc.w    loc_AAFA-loc_A8FE
loc_A908:
                move.b  #$10, $0016(A0)
                move.b  #$08, $0017(A0)
                move.l  #Crabmeat_Mappings, $0004(A0) ; loc_AB4C
                move.w  #$0400, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$06, $0020(A0)
                move.b  #$15, $0019(A0)
                bsr     ObjectFall              ; loc_D24E
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_A95E
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
loc_A95E:
                rts
loc_A960:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_A97C(PC, D0), D1
                jsr     loc_A97C(PC, D1)
                lea     (loc_AB1C), A1
                bsr     AnimateSprite           ; loc_D412
                bra     MarkObjGone             ; loc_D2A0
loc_A97C:
                dc.w    loc_A980-loc_A97C
                dc.w    loc_AA1E-loc_A97C
loc_A980:
                subq.w  #$01, $0030(A0)
                bpl.s   loc_A9BA
                tst.b   $0001(A0)
                bpl.s   loc_A994
                bchg    #1, $0032(A0)
                bne.s   loc_A9BC
loc_A994:
                addq.b  #$02, $0025(A0)
                move.w  #$007F, $0030(A0)
                move.w  #$0080, $0010(A0)
                bsr     loc_AA8C
                addq.b  #$03, D0
                move.b  D0, $001C(A0)
                bchg    #0, $0022(A0)
                bne.s   loc_A9BA
                neg.w   $0010(A0)
loc_A9BA:
                rts
loc_A9BC:
                move.w  #$003B, $0030(A0)
                move.b  #$06, $001C(A0)
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_A9F2
                move.b  #$1F, $0000(A1)
                move.b  #$06, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                subi.w  #$0010, $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$FF00, $0010(A1)
loc_A9F2:
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_AA1C
                move.b  #$1F, $0000(A1)
                move.b  #$06, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                addi.w  #$0010, $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$0100, $0010(A1)
loc_AA1C:
                rts
loc_AA1E:
                subq.w  #$01, $0030(A0)
                bmi.s   loc_AA72
                bsr     SpeedToPos              ; loc_D27A
                bchg    #0, $0032(A0)
                bne.s   loc_AA58
                move.w  $0008(A0), D3
                addi.w  #$0010, D3
                btst    #$00, $0022(A0)
                beq.s   loc_AA44
                subi.w  #$0020, D3
loc_AA44:
                jsr     ObjHitFloor2            ; (loc_1389C)
                cmpi.w  #$FFF8, D1
                blt.s   loc_AA72
                cmpi.w  #$000C, D1
                bge.s   loc_AA72
                rts
loc_AA58:
                jsr     ObjHitFloor             ; (loc_13898)
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     loc_AA8C
                addq.b  #$03, D0
                move.b  D0, $001C(A0)
                rts
loc_AA72:
                subq.b  #$02, $0025(A0)
                move.w  #$003B, $0030(A0)
                move.w  #$0000, $0010(A0)
                bsr     loc_AA8C
                move.b  D0, $001C(A0)
                rts
loc_AA8C:
                moveq   #$00, D0
                move.b  $0026(A0), D3
                bmi.s   loc_AAA8
                cmpi.b  #$06, D3
                bcs.s   loc_AAA6
                moveq   #$01, D0
                btst    #$00, $0022(A0)
                bne.s   loc_AAA6
                moveq   #$02, D0
loc_AAA6:
                rts
loc_AAA8:
                cmpi.b  #$FA, D3
                bhi.s   loc_AABA
                moveq   #$02, D0
                btst    #$00, $0022(A0)
                bne.s   loc_AABA
                moveq   #$01, D0
loc_AABA:
                rts
loc_AABC:
                bra     DeleteObject            ; loc_D3B4
loc_AAC0:
                addq.b  #$02, $0024(A0)
                move.l  #Crabmeat_Mappings, $0004(A0) ; loc_AB4C
                move.w  #$0400, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$87, $0020(A0)
                move.b  #$08, $0019(A0)
                move.w  #$FC00, $0012(A0)
                move.b  #$07, $001C(A0)
loc_AAFA:
                lea     (loc_AB1C), A1
                bsr     AnimateSprite           ; loc_D412
                bsr     ObjectFall              ; loc_D24E
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2  
loc_AB1C:
                dc.w    loc_AB2C-loc_AB1C
                dc.w    loc_AB2F-loc_AB1C
                dc.w    loc_AB32-loc_AB1C
                dc.w    loc_AB35-loc_AB1C
                dc.w    loc_AB3A-loc_AB1C
                dc.w    loc_AB3F-loc_AB1C
                dc.w    loc_AB44-loc_AB1C
                dc.w    loc_AB47-loc_AB1C
loc_AB2C:
                dc.b    $0F, $00, $FF
loc_AB2F:
                dc.b    $0F, $02, $FF
loc_AB32:
                dc.b    $0F, $22, $FF
loc_AB35:
                dc.b    $0F, $01, $21, $00, $FF
loc_AB3A:
                dc.b    $0F, $21, $03, $02, $FF
loc_AB3F:
                dc.b    $0F, $01, $23, $22, $FF
loc_AB44:
                dc.b    $0F, $04, $FF
loc_AB47:
                dc.b    $01, $05, $06, $FF, $00     
Crabmeat_Mappings: ; loc_AB4C:
                dc.w    loc_AB5A-Crabmeat_Mappings
                dc.w    loc_AB7C-Crabmeat_Mappings
                dc.w    loc_AB9E-Crabmeat_Mappings
                dc.w    loc_ABC0-Crabmeat_Mappings
                dc.w    loc_ABE2-Crabmeat_Mappings
                dc.w    loc_AC14-Crabmeat_Mappings
                dc.w    loc_AC1E-Crabmeat_Mappings
loc_AB5A:
                dc.w    $0004
                dc.l    $F0090000, $0000FFE8, $F0090800, $08000000
                dc.l    $00050006, $0003FFF0, $00050806, $08030000
loc_AB7C:
                dc.w    $0004
                dc.l    $F009000A, $0005FFE8, $F0090010, $00080000
                dc.l    $00050016, $000BFFF0, $0009001A, $000D0000
loc_AB9E:
                dc.w    $0004
                dc.l    $EC090000, $0000FFE8, $EC090800, $08000000
                dc.l    $FC050806, $08030000, $FC060020, $0010FFF0
loc_ABC0:
                dc.w    $0004
                dc.l    $EC09000A, $0005FFE8, $EC090010, $00080000
                dc.l    $FC090026, $00130000, $FC06002C, $0016FFF0
loc_ABE2:
                dc.w    $0006
                dc.l    $F0040032, $0019FFF0, $F0040832, $08190000
                dc.l    $F8090034, $001AFFE8, $F8090834, $081A0000
                dc.l    $0804003A, $001DFFF0, $0804083A, $081D0000
loc_AC14:
                dc.w    $0001
                dc.l    $F805003C, $001EFFF8
loc_AC1E:
                dc.w    $0001
                dc.l    $F8050040, $0020FFF8                           
;=============================================================================== 
; Object ??? - Unknow Object 0x00A8F0
; [ End ]
;===============================================================================                  
                          
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 25 - A ring (usually only placed through placement mode)
; ---------------------------------------------------------------------------
; Sprite_AC28: Obj_0x25_Rings:
Obj25:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	Obj25_Index(pc,d0.w),d1
		jmp	Obj25_Index(pc,d1.w)
; ===========================================================================
; off_AC36: Rings_Index
Obj25_Index:	dc.w    Obj25_MakeRings-Obj25_Index
		dc.w    Obj25_Animate-Obj25_Index
		dc.w    Obj25_Collect-Obj25_Index
		dc.w    Obj25_Sparkle-Obj25_Index
		dc.w    Obj25_Delete-Obj25_Index
; ===========================================================================
; This was used in Sonic 1, which didn't have a separate ring manager
; byte_AC40: Obj25_PosData:
		;     x distance, y distance
                dc.b	$10, 0		; horizontal tight
		dc.b	$18, 0
		dc.b	$20, 0
		dc.b	0, $10		; vertical
		dc.b	0, $18
		dc.b	0, $20
		dc.b	$10, $10	; diagonal
		dc.b	$18, $18
                dc.b    $20, $20
		dc.b	$F0, $10
		dc.b	$E8, $18
		dc.b	$E0, $20
		dc.b	$10, 8
		dc.b	$18, $10
		dc.b	$F0, 8
		dc.b	$E8, $10
; ===========================================================================
; Evidently, there are still leftovers in the code itself relating to spawning
; and positioning the ring objects, even though it's unneeded now
; loc_AC60:
Obj25_MakeRings:
		move.l	a0,a1
		moveq	#0,d1
		move.w	8(a0),d2
		move.w	$C(a0),d3
		bra.s	loc_AC76

loc_AC6E:
		swap.w	d1
		bsr.w	SingleObjLoad
		bne.s	Obj25_Animate

loc_AC76:
		move.b	#$25,0(a1)	; load obj25
		addq.b	#2,$24(a1)
		move.w	d2,8(a1)
		move.w	8(a0),$32(a1)
		move.w	d3,$C(a1)
		move.l	#Rings_Mappings,4(a1)
		move.w	#$26BC,2(a1)
		bsr.w	Adjust2PArtPointer2
		move.b	#4,1(a1)
		move.b	#2,$18(a1)
		move.b	#$47,$20(a1)
		move.b	#8,$19(a1)
		move.b	$23(a0),$23(a1)
		move.b	d1,$34(a1)
		addq.w	#1,d1
		add.w	d5,d2
		add.w	d6,d3
		swap.w	d1
		dbf	d1,loc_AC6E
; loc_ACCE:
Obj25_Animate:
		move.b	($FFFFFEC3).w,$1A(a0)
		move.w	$32(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.s	Obj25_Delete
		bra.w	DisplaySprite
; ===========================================================================
; loc_ACEA:
Obj25_Collect:
		addq.b	#2,$24(a0)
		move.b	#0,$20(a0)
		move.b	#1,$18(a0)
		bsr.w	CollectRing
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		move.b	$34(a0),d1
		bset	d1,2(a2,d0.w)
; loc_AD10:
Obj25_Sparkle:
		lea	(loc_B02E).l,a1
		bsr.w	AnimateSprite
		bra.w	DisplaySprite
; ===========================================================================
; loc_AD1E:
Obj25_Delete:
		bra.w	DeleteObject

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_AD22:
CollectRing:
		addq.w	#1,($FFFFFE20).w
		ori.b	#1,($FFFFFE1D).w
		move.w	#$B5,d0
		cmpi.w	#$64,($FFFFFE20).w
		bcs.s	loc_AD5C
		bset	#1,($FFFFFE1B).w
		beq.s	loc_AD50
		cmpi.w	#$C8,($FFFFFE20).w
		bcs.s	loc_AD5C
		bset	#2,($FFFFFE1B).w
		bne.s	loc_AD5C

loc_AD50:
		addq.b	#1,($FFFFFE12).w
		addq.b	#1,($FFFFFE1C).w
		; leftover from Sonic 1, which had the extra life music in slot
		; $88 instead if $98 (which is now the Death Egg music slot)
		move.w	#$88,d0

loc_AD5C:
		jmp	(PlaySound).l
; End of function CollectRing

;=============================================================================== 
; Object 0x37 - Rings flying out of you when you get hit 
; [ End ]
;=============================================================================== 
Obj_0x37_Rings_Out: ; loc_AD62:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Rings_Out_Index(PC, D0), D1 ; loc_AD70
                jmp     Rings_Out_Index(PC, D1)     ; loc_AD70
Rings_Out_Index: ; loc_AD70:
                dc.w    loc_AD7A-Rings_Out_Index
                dc.w    loc_AE3E-Rings_Out_Index
                dc.w    loc_AE90-Rings_Out_Index
                dc.w    loc_AEA4-Rings_Out_Index
                dc.w    loc_AEB2-Rings_Out_Index
loc_AD7A:
                move.l  A0, A1
                moveq   #$00, D5
                move.w  ($FFFFFE20).w, D5
                moveq   #$20, D0
                cmp.w   D0, D5
                bcs.s   loc_AD8A
                move.w  D0, D5
loc_AD8A:
                subq.w  #$01, D5
                move.w  #$0288, D4
                bra.s   loc_AD9A
loc_AD92:  
                bsr     SingleObjLoad        ; loc_E772
                bne     loc_AE22
loc_AD9A:
                move.b  #$37, $0000(A1)
                addq.b  #$02, $0024(A1)
                move.b  #$08, $0016(A1)
                move.b  #$08, $0017(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  #Rings_Mappings, $0004(A1)  ; loc_B036
                move.w  #$26BC, $0002(A1)
                bsr     Adjust2PArtPointer2   ; loc_DC4C
                move.b  #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$47, $0020(A1)
                move.b  #$08, $0019(A1)
                move.b  #$FF, ($FFFFFEC6).w
                tst.w   D4
                bmi.s   loc_AE12
                move.w  D4, D0
                bsr     CalcSine                ; loc_320A
                move.w  D4, D2
                lsr.w   #$08, D2
                asl.w   D2, D0
                asl.w   D2, D1
                move.w  D0, D2
                move.w  D1, D3
                addi.b  #$10, D4
                bcc.s   loc_AE12
                subi.w  #$0080, D4
                bcc.s   loc_AE12
                move.w  #$0288, D4
loc_AE12:
                move.w  D2, $0010(A1)
                move.w  D3, $0012(A1)
                neg.w   D2
                neg.w   D4
                dbra    D5, loc_AD92 
loc_AE22:                 
                move.w  #$0000, ($FFFFFE20).w
                move.b  #$80, ($FFFFFE1D).w
                move.b  #$00, ($FFFFFE1B).w
                move.w  #$00C6, D0
                jsr     (PlaySound)              ; loc_14C6
loc_AE3E:
                move.b  ($FFFFFEC7).w, $001A(A0)
                bsr     SpeedToPos              ; loc_D27A
                addi.w  #$0018, $0012(A0)
                bmi.s   loc_AE78
                move.b  ($FFFFFE0F).w, D0
                add.b   D7, D0
                andi.b  #$03, D0
                bne.s   loc_AE78
                jsr     loc_138F4
                tst.w   D1
                bpl.s   loc_AE78
                add.w   D1, $000C(A0)
                move.w  $0012(A0), D0
                asr.w   #$02, D0
                sub.w   D0, $0012(A0)
                neg.w   $0012(A0)
loc_AE78:
                tst.b   ($FFFFFEC6).w
                beq.s   loc_AEB2
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs.s   loc_AEB2
                bra     DisplaySprite           ; loc_D3C2
loc_AE90:
                addq.b  #$02, $0024(A0)
                move.b  #$00, $0020(A0)
                move.b  #$01, $0018(A0)
                bsr     CollectRing
loc_AEA4:
                lea     (loc_B02E), A1
                bsr     AnimateSprite           ; loc_D412
                bra     DisplaySprite           ; loc_D3C2
loc_AEB2:
                bra     DeleteObject            ; loc_D3B4
;=============================================================================== 
; Object 0x37 - Rings flying out of you when you get hit   
; [ End ]
;===============================================================================                 
                
;=============================================================================== 
; Object 0x4B - Big Ring (Special Stage Access)   
;               Unused - Sonic 1 LeftOver
; [ Begin ]
;===============================================================================                     
Obj_0x4B_Big_Ring: ; loc_AEB6:  
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Big_Ring_Index(PC, D0), D1  ; loc_AEC4
                jmp     Big_Ring_Index(PC, D1)      ; loc_AEC4
Big_Ring_Index: ; loc_AEC4:
                dc.w    loc_AECC-Big_Ring_Index
                dc.w    loc_AF1A-Big_Ring_Index
                dc.w    loc_AF38-Big_Ring_Index
                dc.w    loc_AF7C-Big_Ring_Index
loc_AECC:                
                move.l  #Big_Ring_Mappings, $0004(A0) ; loc_B09A
                move.w  #$2400, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  #$40, $0019(A0)
                tst.b   $0001(A0)
                bpl.s   loc_AF1A
                cmpi.b  #$06, ($FFFFFE57).w
                beq     loc_AF7C
                cmpi.w  #$0032, ($FFFFFE20).w
                bcc.s   loc_AF04
                rts
loc_AF04:
                addq.b  #$02, $0024(A0)
                move.b  #$02, $0018(A0)
                move.b  #$52, $0020(A0)
                move.w  #$0C40, ($FFFFF7BE).w
loc_AF1A:
                move.b  ($FFFFFEC3).w, $001A(A0)
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2
loc_AF38:
                subq.b  #$02, $0024(A0)
                move.b  #$00, $0020(A0)
                bsr     SingleObjLoad        ; loc_E772
                bne     loc_AF70
                move.b  #$7C, $0000(A1)     ; Call Object 0x7C - Big Ring Flash
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  A0, $003C(A1)
                move.w  ($FFFFB008).w, D0
                cmp.w   $0008(A0), D0
                bcs.s   loc_AF70
                bset    #$00, $0001(A1)
loc_AF70:
                move.w  #$00C3, D0
                jsr     (PlaySound)              ; loc_14C6
                bra.s   loc_AF1A
loc_AF7C:
                bra     DeleteObject            ; loc_D3B4
;=============================================================================== 
; Object 0x4B - Big Ring (Special Stage Access)   
;               Unused - Sonic 1 LeftOver
; [ End ]
;===============================================================================  

;=============================================================================== 
; Object 0x7C - Big Ring Flash (Special Stage Access)   
;               Unused - Sonic 1 LeftOver
; [ Begin ]
;===============================================================================   
Obj_0x7C_Big_Ring_Flash: ; loc_AF80: 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Big_Ring_Flash_Index(PC, D0), D1   ; loc_AF8E
                jmp     Big_Ring_Flash_Index(PC, D1)       ; loc_AF8E
Big_Ring_Flash_Index: ; loc_AF8E:
                dc.w    loc_AF94-Big_Ring_Flash_Index
                dc.w    loc_AFC2-Big_Ring_Flash_Index
                dc.w    loc_B02A-Big_Ring_Flash_Index
loc_AF94:                
                addq.b  #$02, $0024(A0)
                move.l  #Big_Ring_Flash_Mappings, $0004(A0) ; loc_B19A
                move.w  #$2462, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  #$00, $0018(A0)
                move.b  #$20, $0019(A0)
                move.b  #$FF, $001A(A0)
loc_AFC2:  
                bsr.s   loc_AFDC
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2 
loc_AFDC:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_B01A
                move.b  #$01, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$08, $001A(A0)
                bcc.s   loc_B01C
                cmpi.b  #$03, $001A(A0)
                bne.s   loc_B01A
                move.l  $003C(A0), A1
                move.b  #$06, $0024(A1)
                move.b  #$1C, ($FFFFB01C).w
                move.b  #$01, ($FFFFF7CD).w
                clr.b   ($FFFFFE2D).w
                clr.b   ($FFFFFE2C).w
loc_B01A:
                rts
loc_B01C:
                addq.b  #$02, $0024(A0)
                move.w  #$0000, ($FFFFB000).w
                addq.l  #$04, A7
                rts
loc_B02A:
                bra     DeleteObject            ; loc_D3B4
;=============================================================================== 
; Object 0x7C - Big Ring Flash (Special Stage Access)   
;               Unused - Sonic 1 LeftOver
; [ End ]
;===============================================================================  
loc_B02E:
                dc.w    $0002, $0504, $0506, $07FC  
Rings_Mappings: ; loc_B036:
                dc.w    Rings_Map_01-Rings_Mappings
                dc.w    Rings_Map_02-Rings_Mappings
                dc.w    Rings_Map_03-Rings_Mappings
                dc.w    Rings_Map_04-Rings_Mappings
                dc.w    Rings_Map_05-Rings_Mappings
                dc.w    Rings_Map_06-Rings_Mappings
                dc.w    Rings_Map_07-Rings_Mappings
                dc.w    Rings_Map_08-Rings_Mappings
                dc.w    Rings_Map_Null-Rings_Mappings
Rings_Map_01: ; loc_B048:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Rings_Map_02: ; loc_B052:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
Rings_Map_03: ; loc_B05C:
                dc.w    $0001
                dc.l    $F8010008, $0004FFFC
Rings_Map_04: ; loc_B066:
                dc.w    $0001
                dc.l    $F8050804, $0802FFF8
Rings_Map_05: ; loc_B070:
                dc.w    $0001
                dc.l    $F805000A, $0005FFF8
Rings_Map_06: ; loc_B07A:
                dc.w    $0001
                dc.l    $F805180A, $1805FFF8
Rings_Map_07: ; loc_B084:
                dc.w    $0001
                dc.l    $F805080A, $0805FFF8
Rings_Map_08: ; loc_B08E:
                dc.w    $0001
                dc.l    $F805100A, $1005FFF8
Rings_Map_Null: ; loc_B098:
                dc.w    $0000                  
Big_Ring_Mappings: ; loc_B09A:
                dc.w    Big_Ring_Map_01-Big_Ring_Mappings
                dc.w    Big_Ring_Map_02-Big_Ring_Mappings
                dc.w    Big_Ring_Map_03-Big_Ring_Mappings
                dc.w    Big_Ring_Map_04-Big_Ring_Mappings
Big_Ring_Map_01: ; loc_B0A2:
                dc.w    $000A
                dc.l    $E0080000, $0000FFE8, $E0080003, $00010000
                dc.l    $E80C0006, $0003FFE0, $E80C000A, $00050000
                dc.l    $F007000E, $0007FFE0, $F0070016, $000B0010
                dc.l    $100C001E, $000FFFE0, $100C0022, $00110000
                dc.l    $18080026, $0013FFE8, $18080029, $00140000
Big_Ring_Map_02: ; loc_B0F4:
                dc.w    $0008
                dc.l    $E00C002C, $0016FFF0, $E8080030, $0018FFE8
                dc.l    $E8090033, $00190000, $F0070039, $001CFFE8
                dc.l    $F8050041, $00200008, $08090045, $00220000
                dc.l    $1008004B, $0025FFE8, $180C004E, $0027FFF0
Big_Ring_Map_03: ; loc_B136:
                dc.w    $0004
                dc.l    $E0070052, $0029FFF4, $E0030852, $08290004
                dc.l    $0007005A, $002DFFF4, $0003085A, $082D0004
Big_Ring_Map_04: ; loc_B158:
                dc.w    $0008
                dc.l    $E00C082C, $0816FFF0, $E8080830, $08180000
                dc.l    $E8090833, $0819FFE8, $F0070839, $081C0008
                dc.l    $F8050841, $0820FFE8, $08090845, $0822FFE8
                dc.l    $1008084B, $08250000, $180C084E, $0827FFF0 
Big_Ring_Flash_Mappings: ; loc_B19A:
                dc.w    Big_Ring_Flash_Map_01-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_02-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_03-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_04-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_05-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_06-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_07-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_08-Big_Ring_Flash_Mappings
Big_Ring_Flash_Map_01: ; loc_B1AA:
                dc.w    $0002
                dc.l    $E00F0000, $00000000, $000F1000, $10000000
Big_Ring_Flash_Map_02: ; loc_B1BC:
                dc.w    $0004
                dc.l    $E00F0010, $0008FFF0, $E0070020, $00100010
                dc.l    $000F1010, $1008FFF0, $00071020, $10100010
Big_Ring_Flash_Map_03: ; loc_B1DE:
                dc.w    $0004
                dc.l    $E00F0028, $0014FFE8, $E00B0038, $001C0008
                dc.l    $000F1028, $1014FFE8, $000B1038, $101C0008
Big_Ring_Flash_Map_04: ; loc_B200:
                dc.w    $0004
                dc.l    $E00F0834, $081AFFE0, $E00F0034, $001A0000
                dc.l    $000F1834, $181AFFE0, $000F1034, $101A0000
Big_Ring_Flash_Map_05: ; loc_B222:
                dc.w    $0004
                dc.l    $E00B0838, $081CFFE0, $E00F0828, $0814FFF8
                dc.l    $000B1838, $181CFFE0, $000F1828, $1814FFF8
Big_Ring_Flash_Map_06: ; loc_B244:
                dc.w    $0004
                dc.l    $E0070820, $0810FFE0, $E00F0810, $0808FFF0
                dc.l    $00071820, $1810FFE0, $000F1810, $1808FFF0
Big_Ring_Flash_Map_07: ; loc_B266:
                dc.w    $0002
                dc.l    $E00F0800, $0800FFE0, $000F1800, $1800FFE0
Big_Ring_Flash_Map_08: ; loc_B278:
                dc.w    $0004
                dc.l    $E00F0044, $0022FFE0, $E00F0844, $08220000
                dc.l    $000F1044, $1022FFE0, $000F1844, $18220000
                nop                             ; Filler
;=============================================================================== 
; Object 0x26 - Monitors 
; [ Begin ]
;===============================================================================                  
Obj_0x26_Monitors: ; loc_B29C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Monitors_Index(PC, D0), D1 ; loc_B2AA
                jmp     Monitors_Index(PC, D1)     ; loc_B2AA
Monitors_Index: ; loc_B2AA:
                dc.w    loc_B2B4-Monitors_Index
                dc.w    loc_B31A-Monitors_Index
                dc.w    loc_B40C-Monitors_Index
                dc.w    loc_B3FE-Monitors_Index
                dc.w    loc_B408-Monitors_Index
loc_B2B4:
                addq.b  #$02, $0024(A0)
                move.b  #$0E, $0016(A0)
                move.b  #$0E, $0017(A0)
                move.l  #Monitors_Mappings, $0004(A0) ; loc_B6D2
                move.w  #$0680, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$0F, $0019(A0)
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                bclr    #$07, $02(A2, D0)
                btst    #$00, $02(A2, D0)
                beq.s   loc_B30E
                move.b  #$08, $0024(A0)
                move.b  #$0B, $001A(A0)
                rts
loc_B30E:
                move.b  #$46, $0020(A0)
                move.b  $0028(A0), $001C(A0)
loc_B31A:
                move.b  $0025(A0), D0
                beq.s   loc_B374
                subq.b  #$02, D0
                bne.s   loc_B354
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                bsr     loc_FBC0
                btst    #$03, $0022(A1)
                bne     loc_B344
                clr.b   $0025(A0)
                bra     loc_B3FE
loc_B344:
                move.w  #$0010, D3
                move.w  $0008(A0), D2
                bsr     loc_F8E4
                bra     loc_B3FE
loc_B354:
                bsr     ObjectFall              ; loc_D24E
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl     loc_B3FE
                add.w   D1, $000C(A0)
                clr.w   $0012(A0)
                clr.b   $0025(A0)
                bra     loc_B3FE
loc_B374:
                move.w  #$001A, D1
                move.w  #$000F, D2
                bsr     loc_B5F0
                beq     loc_B3E4
                tst.w   $0012(A1)
                bmi.s   loc_B392
                cmpi.b  #$02, $001C(A1)
                beq.s   loc_B3E4
loc_B392:
                tst.w   D1
                bpl.s   loc_B3A8
                sub.w   D3, $000C(A1)
                bsr     loc_FAF2
                move.b  #$02, $0025(A0)
                bra     loc_B3FE
loc_B3A8:
                tst.w   D0
                beq     loc_B3CE
                bmi.s   loc_B3B8
                tst.w   $0010(A1)
                bmi.s   loc_B3CE
                bra.s   loc_B3BE
loc_B3B8:
                tst.w   $0010(A1)
                bpl.s   loc_B3CE
loc_B3BE:
                sub.w   D0, $0008(A1)
                move.w  #$0000, $0014(A1)
                move.w  #$0000, $0010(A1)
loc_B3CE:
                btst    #$01, $0022(A1)
                bne.s   loc_B3F2
                bset    #$05, $0022(A1)
                bset    #$05, $0022(A0)
                bra.s   loc_B3FE
loc_B3E4:
                btst    #$05, $0022(A0)
                beq.s   loc_B3FE
                move.w  #$0001, $001C(A1)
loc_B3F2:
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
loc_B3FE:
                lea     (loc_B66A), A1
                bsr     AnimateSprite           ; loc_D412
loc_B408:
                bra     MarkObjGone             ; loc_D2A0
loc_B40C:
                addq.b  #$02, $0024(A0)
                move.b  #$00, $0020(A0)
                bsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_B434
                move.b  #$2E, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $001C(A0), $001C(A1)
loc_B434:
                bsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_B450
                move.b  #$27, $0000(A1)
                addq.b  #$02, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
loc_B450:
                lea     ($FFFFFC00).w, A2                   
                moveq   #$00, D0
                move.b  $0023(A0), D0
                bset    #$00, $02(A2, D0)
                move.b  #$0A, $001C(A0)
                bra     DisplaySprite           ; loc_D3C2
;=============================================================================== 
; Object 0x26 - Monitors 
; [ End ]
;===============================================================================   
;=============================================================================== 
; Object 0x2E - Monitors Contents
; [ Begin ]
;===============================================================================                   
Obj_0x2E_Monitors_Contents: ; loc_B46A:                
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_B478(PC, D0), D1
                jmp     loc_B478(PC, D1)
loc_B478:
                dc.w    loc_B47E-loc_B478
                dc.w    loc_B4C2-loc_B478
                dc.w    loc_B5E4-loc_B478
loc_B47E:
                addq.b  #$02, $0024(A0)
                move.w  #$0680, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$24, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$08, $0019(A0)
                move.w  #$FD00, $0012(A0)
                moveq   #$00, D0
                move.b  $001C(A0), D0
                addq.b  #$01, D0
                move.b  D0, $001A(A0)
                move.l  #Monitors_Mappings, A1  ; loc_B6D2
                add.b   D0, D0
                adda.w  $00(A1, D0), A1
                addq.w  #$02, A1
                move.l  A1, $0004(A0)
loc_B4C2:
                bsr.s   loc_B4C8
                bra     DisplaySprite           ; loc_D3C2
loc_B4C8:
                tst.w   $0012(A0)
                bpl     loc_B4DC
                bsr     SpeedToPos              ; loc_D27A
                addi.w  #$0018, $0012(A0)
                rts
loc_B4DC:
                addq.b  #$02, $0024(A0)
                move.w  #$001D, $001E(A0)
                moveq   #$00, D0
                move.b  $001C(A0), D0
                add.w   D0, D0
                move.w  Monitor_Subroutines(PC, D0), D0 ; loc_B4F6
                jmp     Monitor_Subroutines(PC, D0)     ; loc_B4F6
Monitor_Subroutines: ; loc_B4F6:
                dc.w    Monitor_Null-Monitor_Subroutines          ; loc_B50A
                dc.w    Monitor_SonicLife-Monitor_Subroutines     ; loc_B50C
                dc.w    Monitor_TailsLife-Monitor_Subroutines     ; loc_B51E
                dc.w    Monitor_Null-Monitor_Subroutines          ; loc_B50A
                dc.w    Monitor_Rings-Monitor_Subroutines         ; loc_B530
                dc.w    Monitor_Shoes-Monitor_Subroutines         ; loc_B56A
                dc.w    Monitor_Shield-Monitor_Subroutines        ; loc_B592
                dc.w    Monitor_Invincibility-Monitor_Subroutines ; loc_B5A8
                dc.w    Monitor_SuperSonic-Monitor_Subroutines    ; loc_B5D4
                dc.w    Monitor_Null-Monitor_Subroutines          ; loc_B50A
Monitor_Null: ; loc_B50A:
                rts
Monitor_SonicLife: ; loc_B50C:
                addq.b  #$01, ($FFFFFE12).w
                addq.b  #$01, ($FFFFFE1C).w
                move.w  #$0098, D0
                jmp     (PlayMusic)            ; loc_14C0
Monitor_TailsLife: ; loc_B51E:
                addq.b  #$01, ($FFFFFE12).w
                addq.b  #$01, ($FFFFFE1C).w
                move.w  #$0098, D0
                jmp     (PlayMusic)            ; loc_14C0
Monitor_Rings: ; loc_B530:
                addi.w  #$000A, ($FFFFFE20).w
                ori.b   #$01, ($FFFFFE1D).w
                cmpi.w  #$0064, ($FFFFFE20).w
                bcs.s   loc_B560
                bset    #$01, ($FFFFFE1B).w
                beq     Monitor_SonicLife       ; loc_B50C
                cmpi.w  #$00C8, ($FFFFFE20).w
                bcs.s   loc_B560
                bset    #$02, ($FFFFFE1B).w
                beq     Monitor_SonicLife       ; loc_B50C
loc_B560:
                move.w  #$00B5, D0
                jmp     (PlayMusic)            ; loc_14C0
Monitor_Shoes: ; loc_B56A:
                move.b  #$01, ($FFFFFE2E).w
                move.w  #$04B0, ($FFFFB034).w
                move.w  #$0C00, (Sonic_top_speed).w
                move.w  #$0018, (Sonic_acceleration).w
                move.w  #$0080, (Sonic_deceleration).w
                move.w  #$00FB, D0
                jmp     (PlayMusic)            ; loc_14C0
Monitor_Shield: ; loc_B592:
                move.b  #$01, ($FFFFFE2C).w
                move.b  #$38, ($FFFFB180).w
                move.w  #$00AF, D0
                jmp     (PlayMusic)            ; loc_14C0
Monitor_Invincibility: ; loc_B5A8:
                move.b  #$01, ($FFFFFE2D).w
                move.w  #$04B0, ($FFFFB032).w
                move.b  #$35, ($FFFFB200).w
                tst.b   ($FFFFF7AA).w
                bne.s   loc_B5D2
                cmpi.w  #$000C, ($FFFFFE14).w
                bls.s   loc_B5D2
                move.w  #$0095, D0
                jmp     (PlayMusic)            ; loc_14C0
loc_B5D2:
                rts
Monitor_SuperSonic: ; loc_B5D4:
                move.b  #$01, ($FFFFF65F).w
                move.w  #$00AF, D0
                jmp     (PlayMusic)            ; loc_14C0
loc_B5E4:
                subq.w  #$01, $001E(A0)
                bmi     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2
loc_B5F0:
                lea     ($FFFFB000).w, A1
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_B648
                move.w  D1, D3
                add.w   D3, D3
                cmp.w   D3, D0
                bhi.s   loc_B648
                move.b  $0016(A1), D3
                ext.w   D3
                add.w   D3, D2
                move.w  $000C(A1), D3
                sub.w   $000C(A0), D3
                add.w   D2, D3
                bmi.s   loc_B648
                add.w   D2, D2
                cmp.w   D2, D3
                bcc.s   loc_B648
                tst.b   $002A(A1)
                bmi.s   loc_B648
                cmpi.b  #$06, ($FFFFB024).w
                bcc.s   loc_B648
                tst.w   (Debug_placement_mode).w
                bne.s   loc_B648
                cmp.w   D0, D1
                bcc.s   loc_B63E
                add.w   D1, D1
                sub.w   D1, D0
loc_B63E:
                cmpi.w  #$0010, D3
                bcs.s   loc_B64C
loc_B644:                
                moveq   #$01, D1
                rts
loc_B648:
                moveq   #$00, D1
                rts
loc_B64C:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addq.w  #$04, D1
                move.w  D1, D2
                add.w   D2, D2
                add.w   $0008(A1), D1
                sub.w   $0008(A0), D1
                bmi.s   loc_B644
                cmp.w   D2, D1
                bcc.s   loc_B644
                moveq   #-1, D1
                rts    
loc_B66A:
                dc.w    loc_B680-loc_B66A
                dc.w    loc_B684-loc_B66A
                dc.w    loc_B68C-loc_B66A
                dc.w    loc_B694-loc_B66A
                dc.w    loc_B69C-loc_B66A
                dc.w    loc_B6A4-loc_B66A
                dc.w    loc_B6AC-loc_B66A
                dc.w    loc_B6B4-loc_B66A
                dc.w    loc_B6BC-loc_B66A
                dc.w    loc_B6C4-loc_B66A
                dc.w    loc_B6CC-loc_B66A
loc_B680:
                dc.b    $01, $00, $01, $FF
loc_B684:
                dc.b    $01, $00, $02, $02, $01, $02, $02, $FF
loc_B68C:
                dc.b    $01, $00, $03, $03, $01, $03, $03, $FF
loc_B694:
                dc.b    $01, $00, $04, $04, $01, $04, $04, $FF
loc_B69C:
                dc.b    $01, $00, $05, $05, $01, $05, $05, $FF
loc_B6A4:
                dc.b    $01, $00, $06, $06, $01, $06, $06, $FF
loc_B6AC:
                dc.b    $01, $00, $07, $07, $01, $07, $07, $FF
loc_B6B4:
                dc.b    $01, $00, $08, $08, $01, $08, $08, $FF
loc_B6BC:
                dc.b    $01, $00, $09, $09, $01, $09, $09, $FF
loc_B6C4:
                dc.b    $01, $00, $0A, $0A, $01, $0A, $0A, $FF
loc_B6CC:
                dc.b    $02, $00, $01, $0B, $FE, $01
Monitors_Mappings: ; loc_B6D2:
                dc.w    loc_B6EA-Monitors_Mappings
                dc.w    loc_B6F4-Monitors_Mappings
                dc.w    loc_B706-Monitors_Mappings
                dc.w    loc_B718-Monitors_Mappings
                dc.w    loc_B72A-Monitors_Mappings
                dc.w    loc_B73C-Monitors_Mappings
                dc.w    loc_B74E-Monitors_Mappings
                dc.w    loc_B760-Monitors_Mappings
                dc.w    loc_B772-Monitors_Mappings
                dc.w    loc_B784-Monitors_Mappings
                dc.w    loc_B796-Monitors_Mappings
                dc.w    loc_B7A8-Monitors_Mappings
loc_B6EA:
                dc.w    $0001
                dc.l    $EF0F0000, $0000FFF0
loc_B6F4:
                dc.w    $0002
                dc.l    $F5050018, $000CFFF8, $EF0F0000, $0000FFF0
loc_B706:
                dc.w    $0002
                dc.l    $F5050154, $00AAFFF8, $EF0F0000, $0000FFF0
loc_B718:
                dc.w    $0002
                dc.l    $F505001C, $000EFFF8, $EF0F0000, $0000FFF0
loc_B72A:
                dc.w    $0002
                dc.l    $F5050020, $0010FFF8, $EF0F0000, $0000FFF0
loc_B73C:
                dc.w    $0002
                dc.l    $F5052024, $2012FFF8, $EF0F0000, $0000FFF0
loc_B74E:
                dc.w    $0002
                dc.l    $F5050028, $0014FFF8, $EF0F0000, $0000FFF0
loc_B760:
                dc.w    $0002
                dc.l    $F505002C, $0016FFF8, $EF0F0000, $0000FFF0
loc_B772:
                dc.w    $0002
                dc.l    $F5050030, $0018FFF8, $EF0F0000, $0000FFF0
loc_B784:
                dc.w    $0002
                dc.l    $F5050034, $001AFFF8, $EF0F0000, $0000FFF0
loc_B796:
                dc.w    $0002
                dc.l    $F5050038, $001CFFF8, $EF0F0000, $0000FFF0
loc_B7A8:
                dc.w    $0001
                dc.l    $FF0D0010, $0008FFF0                
;=============================================================================== 
; Object 0x2E - Monitors Contents
; [ End ]
;===============================================================================          
                nop                             ; Filler                
;=============================================================================== 
; Object 0x0E - Sonic & Tails in Title Screen   
; [ Begin ]
;===============================================================================                              
Obj_0x0E_Sonic_Tails: ; loc_B7B4:                
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Sonic_Tails_Index(PC, D0), D1  ; loc_B7C2
                jmp     Sonic_Tails_Index(PC, D1)      ; loc_B7C2
Sonic_Tails_Index: ; loc_B7C2:
                dc.w    loc_B7CA-Sonic_Tails_Index
                dc.w    loc_B80C-Sonic_Tails_Index
                dc.w    loc_B820-Sonic_Tails_Index
                dc.w    loc_B836-Sonic_Tails_Index             
loc_B7CA:
                addq.b  #$02, $0024(A0)
                move.w  #$0148, $0008(A0)
                move.w  #$00C4, $000A(A0)
                move.l  #Sonic_Tails_Mappings, $0004(A0) ; loc_BAA2
                move.w  #$4200, $0002(A0)
                move.b  #$01, $0018(A0)
                move.b  #$1D, $001F(A0)
                tst.b   $001A(A0)
                beq.s   loc_B80C
                move.w  #$00FC, $0008(A0)
                move.w  #$00CC, $000A(A0)
                move.w  #$2200, $0002(A0) 
loc_B80C:
                bra     DisplaySprite           ; loc_D3C2                   
loc_B810:
                subq.b  #$01, $001F(A0)
                bpl.s   loc_B81E
                addq.b  #$02, $0024(A0)
                bra     DisplaySprite           ; loc_D3C2
loc_B81E:
                rts
loc_B820:
                subi.w  #$0008, $000A(A0)
                cmpi.w  #$0096, $000A(A0)
                bne.s   loc_B832
                addq.b  #$02, $0024(A0)
loc_B832:
                bra     DisplaySprite           ; loc_D3C2
loc_B836:
                bra     DisplaySprite           ; loc_D3C2
;=============================================================================== 
; Object 0x0E - Object 0x0E - Sonic & Tails in Title Screen   
; [ End ]
;===============================================================================                  
                
;=============================================================================== 
; Object 0x0F 
; [ Begin ]
;===============================================================================    
Obj_0x0F: ; loc_B83A:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_B84C(PC, D0), D1
                jsr     loc_B84C(PC, D1)
                bra     DisplaySprite           ; loc_D3C2
loc_B84C:
                dc.w    loc_B852-loc_B84C
                dc.w    loc_B874-loc_B84C
                dc.w    loc_B874-loc_B84C
loc_B852:
                addq.b  #$02, $0024(A0)
                move.w  #$0090, $0008(A0)
                move.w  #$0090, $000A(A0)
                move.l  #loc_B896, $0004(A0)
                move.w  #$0680, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
loc_B874:
                move.b  ($FFFFF605).w, D0
                btst    #$05, D0
                beq.s   loc_B888
                addq.b  #$01, $001A(A0)
                andi.b  #$0F, $001A(A0)
loc_B888:
                btst    #$04, D0
                beq.s   loc_B894
                bchg    #0, ($FFFFFFD9).w
loc_B894:
                rts
loc_B896:
                dc.w    loc_B8B6-loc_B896
                dc.w    loc_B8C0-loc_B896
                dc.w    loc_B8CA-loc_B896
                dc.w    loc_B8D4-loc_B896
                dc.w    loc_B8DE-loc_B896
                dc.w    loc_B8E8-loc_B896
                dc.w    loc_B8F2-loc_B896
                dc.w    loc_B8FC-loc_B896
                dc.w    loc_B906-loc_B896
                dc.w    loc_B910-loc_B896
                dc.w    loc_B91A-loc_B896
                dc.w    loc_B924-loc_B896
                dc.w    loc_B92E-loc_B896
                dc.w    loc_B938-loc_B896
                dc.w    loc_B942-loc_B896
                dc.w    loc_B94C-loc_B896
loc_B8B6:
                dc.w    $0001
                dc.l    $00000000, $00000000
loc_B8C0:
                dc.w    $0001
                dc.l    $00010000, $00000000
loc_B8CA:
                dc.w    $0001
                dc.l    $00020000, $00000000
loc_B8D4:
                dc.w    $0001
                dc.l    $00030000, $00000000
loc_B8DE:
                dc.w    $0001
                dc.l    $00040000, $00000000
loc_B8E8:
                dc.w    $0001
                dc.l    $00050000, $00000000
loc_B8F2:
                dc.w    $0001
                dc.l    $00060000, $00000000
loc_B8FC:
                dc.w    $0001
                dc.l    $00070000, $00000000
loc_B906:
                dc.w    $0001
                dc.l    $00080000, $00000000
loc_B910:
                dc.w    $0001
                dc.l    $00090000, $00000000
loc_B91A:
                dc.w    $0001
                dc.l    $000A0000, $00000000
loc_B924:
                dc.w    $0001
                dc.l    $000B0000, $00000000
loc_B92E:
                dc.w    $0001
                dc.l    $000C0000, $00000000
loc_B938:
                dc.w    $0001
                dc.l    $000D0000, $00000000
loc_B942:
                dc.w    $0001
                dc.l    $000E0000, $00000000
loc_B94C:
                dc.w    $0001
                dc.l    $000F0000, $00000000
;=============================================================================== 
; Object 0x0F 
; [ End ]
;===============================================================================  
loc_B956:  ; Unknow Object Data
                dc.w    loc_B958-loc_B956
loc_B958:
                dc.b    $07, $00, $01, $02, $03, $04, $05, $06, $07, $FE, $02, $00, $00, $02, $1F, $00
                dc.b    $01, $FF
S1_Obj_0x0F_Mappings: ; loc_B96A:  ; Unknow Mappings
                dc.w    loc_B972-S1_Obj_0x0F_Mappings
                dc.w    loc_B974-S1_Obj_0x0F_Mappings
                dc.w    loc_B9A6-S1_Obj_0x0F_Mappings
                dc.w    loc_BA98-S1_Obj_0x0F_Mappings
loc_B972:
                dc.w    $0000
loc_B974:
                dc.w    $0006
                dc.l    $000C00F0, $00780000, $000000F3, $00790020
                dc.l    $000000F3, $00790030, $000C00F4, $007A0038
                dc.l    $000800F8, $007C0060, $000800FB, $007D0078
loc_B9A6:
                dc.w    $001E
                dc.l    $B80F0000, $0000FF80, $B80F0000, $0000FF80
                dc.l    $B80F0000, $0000FF80, $B80F0000, $0000FF80
                dc.l    $B80F0000, $0000FF80, $B80F0000, $0000FF80
                dc.l    $B80F0000, $0000FF80, $B80F0000, $0000FF80
                dc.l    $B80F0000, $0000FF80, $B80F0000, $0000FF80
                dc.l    $D80F0000, $0000FF80, $D80F0000, $0000FF80
                dc.l    $D80F0000, $0000FF80, $D80F0000, $0000FF80
                dc.l    $D80F0000, $0000FF80, $D80F0000, $0000FF80
                dc.l    $D80F0000, $0000FF80, $D80F0000, $0000FF80
                dc.l    $D80F0000, $0000FF80, $D80F0000, $0000FF80
                dc.l    $F80F0000, $0000FF80, $F80F0000, $0000FF80
                dc.l    $F80F0000, $0000FF80, $F80F0000, $0000FF80
                dc.l    $F80F0000, $0000FF80, $F80F0000, $0000FF80
                dc.l    $F80F0000, $0000FF80, $F80F0000, $0000FF80
                dc.l    $F80F0000, $0000FF80, $F80F0000, $0000FF80
loc_BA98:
                dc.w    $0001
                dc.l    $FC040000, $0000FFF8                                
Sonic_Tails_Mappings:                
loc_BAA2:                                          
                dc.w    loc_BAA6-loc_BAA2
                dc.w    loc_BB00-loc_BAA2 
loc_BAA6: ; Object $0E - Mappings
                dc.w    $000B ; Sonic in Title Screen
                dc.l    $D40D0000, $0000FFD8, $CC0E0008, $0004FFF8
                dc.l    $CC070014, $000A0018, $E40F001C, $000EFFE0
                dc.l    $E40B002C, $00160000, $EC070038, $001C0018
                dc.l    $040F0040, $0020FFD8, $040F0050, $0028FFF8
                dc.l    $0C060060, $00300018, $24040066, $0033FFE8
                dc.l    $240D0068, $0034FFF8
loc_BB00:
                dc.w    $000A ; Tails in Title Screen
                dc.l    $DC060070, $0038FFEC, $F40F0076, $003BFFD4
                dc.l    $F40F0086, $0043FFF4, $E4090096, $004BFFFC
                dc.l    $DC0B009C, $004E0014, $FC0800A8, $00540014
                dc.l    $040500AB, $00550014, $140400AF, $0057FFD4
                dc.l    $140D00B1, $0058FFE4, $140D00B9, $005C0004
                nop

               
;=============================================================================== 
; Object 0x34 - Title Cards / Splash Screen
; [ Begin ]
;===============================================================================   
Obj_0x34_Title_Cards: ; loc_BB54: 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Title_Cards_Index(PC, D0), D1 ; loc_BB62
                jmp     Title_Cards_Index(PC, D1)     ; loc_BB62
Title_Cards_Index: ; loc_BB62:                
                dc.w    loc_BB6A-Title_Cards_Index
                dc.w    loc_BBDC-Title_Cards_Index
                dc.w    loc_BC04-Title_Cards_Index
                dc.w    loc_BC04-Title_Cards_Index
loc_BB6A:
                move.l  A0, A1
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                move.w  D0, D2
                lea     (Title_Cards_Config), A3 ; loc_BC66
                lsl.w   #$04, D0
                adda.w  D0, A3
                lea     (Title_Cards_Main_Position), A2 ; loc_BC56
                moveq   #$03, D1
Title_Card_Loop: ; loc_BB86:                
                move.b  #$34, $0000(A1)
                move.w  (A3), $0008(A1)
                move.w  (A3)+, $0032(A1)
                move.w  (A3)+, $0030(A1)
                move.w  (A2)+, $000A(A1)
                move.b  (A2)+, $0024(A1)
                move.b  (A2)+, D0
                bne.s   Title_Cards_MakeSprite  ; loc_BBA6
                move.b  D2, D0
Title_Cards_MakeSprite: ; loc_BBA6:
                move.b  D0, $001A(A1)
                move.l  #Title_Cards_Mappings, $0004(A1) ; loc_C2A0
                move.w  #$8580, $0002(A1)
                bsr     Adjust2PArtPointer2   ; loc_DC4C
                move.b  #$78, $0019(A1)
                move.b  #$00, $0001(A1)
                move.b  #$00, $0018(A1)
                move.w  #$003C, $001E(A1)
                lea     $0040(A1), A1
                dbra    D1, Title_Card_Loop     ; loc_BB86
loc_BBDC:
                moveq   #$10, D1
                move.w  $0030(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   loc_BBF0
                bge.s   loc_BBEC
                neg.w   D1
loc_BBEC:
                add.w   D1, $0008(A0)
loc_BBF0:                
                move.w  $0008(A0), D0
                bmi.s   loc_BC02
                cmpi.w  #$0200, D0
                bcc.s   loc_BC02
                rts
                bra     DisplaySprite           ; loc_D3C2
loc_BC02:
                rts
loc_BC04:
                tst.w   $001E(A0)
                beq.s   loc_BC14
                subq.w  #$01, $001E(A0)
                rts
                bra     DisplaySprite           ; loc_D3C2
loc_BC14:
                tst.b   $0001(A0)
                bpl.s   loc_BC42
                moveq   #$20, D1
                move.w  $0032(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   loc_BC42
                bge.s   loc_BC2A
                neg.w   D1
loc_BC2A:
                add.w   D1, $0008(A0)
                move.w  $0008(A0), D0
                bmi.s   loc_BC40
                cmpi.w  #$0200, D0
                bcc.s   loc_BC40
                rts
                bra     DisplaySprite           ; loc_D3C2
loc_BC40:
                rts
loc_BC42:
                cmpi.b  #$04, $0024(A0)
                bne.s   loc_BC52
                moveq   #$02, D0
                jsr     LoadPLC                 ; loc_173C
loc_BC52:                
                bra     DeleteObject            ; loc_D3B4
Title_Cards_Main_Position: ; loc_BC56:
                dc.w    $00D0, $0200 ; Level Name Position X / Y
                dc.w    $00E4, $0206 ; "Zone" word Position X / Y
                dc.w    $00EA, $0207 ; "Act x" word Position X / Y
                dc.w    $00E0, $020A ; Oval Position X / Y
Title_Cards_Config: ; loc_BC66:                
                dc.w    $0000, $0120, $FEFC, $013C, $0414, $0154, $0214, $0154
                dc.w    $0000, $0120, $FEF4, $0134, $040C, $014C, $020C, $014C
                dc.w    $0000, $0120, $FEE0, $0120, $03F8, $0138, $01F8, $0138
                dc.w    $0000, $0120, $FEFC, $013C, $0414, $0154, $0214, $0154
                dc.w    $0000, $0120, $FF04, $0144, $041C, $015C, $021C, $015C
                dc.w    $0000, $0120, $FF04, $0144, $041C, $015C, $021C, $015C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
;=============================================================================== 
; Object 0x34 - Title Cards / Splash Screen
; [ End ]
;===============================================================================  
;=============================================================================== 
; Object 0x39 - Time Over / Game Over
; [ Begin ]
;=============================================================================== 
Obj_0x39_Time_Game_Over: ; loc_BD76:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Time_Game_Over_Index(PC, D0), D1 ; loc_BD84
                jmp     Time_Game_Over_Index(PC, D1)     ; loc_BD84
Time_Game_Over_Index: ; loc_BD84:
                dc.w    loc_BD8A-Time_Game_Over_Index
                dc.w    loc_BDCE-Time_Game_Over_Index
                dc.w    loc_BDF0-Time_Game_Over_Index
loc_BD8A:
                tst.l   ($FFFFF680).w
                beq.s   loc_BD92
                rts
loc_BD92:
                addq.b  #$02, $0024(A0)
                move.w  #$0050, $0008(A0)
                btst    #$00, $001A(A0)
                beq.s   loc_BDAA
                move.w  #$01F0, $0008(A0)
loc_BDAA:
                move.w  #$00F0, $000A(A0)
                move.l  #Time_Game_Over_Mappings, $0004(A0) ; loc_C558
                move.w  #$855E, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$00, $0001(A0)
                move.b  #$00, $0018(A0)
loc_BDCE:
                moveq   #$10, D1
                cmpi.w  #$0120, $0008(A0)
                beq.s   loc_BDE4
                bcs.s   loc_BDDC
                neg.w   D1
loc_BDDC:
                add.w   D1, $0008(A0)
                bra     DisplaySprite           ; loc_D3C2
loc_BDE4:
                move.w  #$02D0, $001E(A0)
                addq.b  #$02, $0024(A0)
                rts
loc_BDF0:
                move.b  ($FFFFF605).w, D0
                andi.b  #$70, D0
                bne.s   loc_BE10
                btst    #$00, $001A(A0)
                bne.s   loc_BE34
                tst.w   $001E(A0)
                beq.s   loc_BE10
                subq.w  #$01, $001E(A0)
                bra     DisplaySprite           ; loc_D3C2
loc_BE10:
                tst.b   ($FFFFFE1A).w
                bne.s   loc_BE2A
                move.b  #$14, ($FFFFF600).w
                tst.b   ($FFFFFE18).w
                bne.s   loc_BE34
                move.b  #$00, ($FFFFF600).w
                bra.s   loc_BE34
loc_BE2A:
                clr.l   ($FFFFFE38).w
                move.w  #$0001, ($FFFFFE02).w
loc_BE34:
                bra     DisplaySprite           ; loc_D3C2
;=============================================================================== 
; Object 0x39 - Time Over / Game Over
; [ End ]
;=============================================================================== 
;=============================================================================== 
; Object 0x3A - Level Results
; [ Begin ]
;=============================================================================== 
Obj_0x3A_Level_Results: ; loc_BE38:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Level_Results_Index(PC, D0), D1  ; loc_BE46
                jmp     Level_Results_Index(PC, D1)      ; loc_BE46
Level_Results_Index: ; loc_BE46:
                dc.w    loc_BE4E-Level_Results_Index
                dc.w    loc_BEAA-Level_Results_Index
                dc.w    loc_BEF6-Level_Results_Index
                dc.w    loc_BF66-Level_Results_Index
loc_BE4E:
                tst.l   ($FFFFF680).w
                beq.s   loc_BE56
                rts
loc_BE56:
                move.l  A0, A1
                lea     (loc_C030), A2
                moveq   #$06, D1
loc_BE60:                
                move.b  #$3A, $0000(A1)
                move.w  (A2), $0008(A1)
                move.w  (A2)+, $0032(A1)
                move.w  (A2)+, $0030(A1)
                move.w  (A2)+, $000A(A1)
                move.b  (A2)+, $0024(A1)
                move.b  (A2)+, D0
                cmpi.b  #$06, D0
                bne.s   loc_BE86
                add.b   ($FFFFFE11).w, D0
loc_BE86:
                move.b  D0, $001A(A1)
                move.l  #Level_Results_Mappings, $0004(A1) ; loc_C5A8
                move.w  #$8580, $0002(A1)
                bsr     Adjust2PArtPointer2   ; loc_DC4C
                move.b  #$00, $0001(A1)
                lea     $0040(A1), A1
                dbra    D1, loc_BE60
loc_BEAA:
                moveq   #$10, D1
                move.w  $0030(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   loc_BEDC
                bge.s   loc_BEBA
                neg.w   D1
loc_BEBA:
                add.w   D1, $0008(A0)
loc_BEBE:                
                move.w  $0008(A0), D0
                bmi.s   loc_BED0
                cmpi.w  #$0200, D0
                bcc.s   loc_BED0
                rts
                bra     DisplaySprite           ; loc_D3C2
loc_BED0:
                rts
loc_BED2:                
                move.b  #$0E, $0024(A0)
                bra     loc_BFDE
loc_BEDC:
                cmpi.b  #$0E, ($FFFFB724).w
                beq.s   loc_BED2
                cmpi.b  #$04, $001A(A0)
                bne.s   loc_BEBE
                addq.b  #$02, $0024(A0)
                move.w  #$00B4, $001E(A0)
loc_BEF6:
                subq.w  #$01, $001E(A0)
                bne.s   loc_BF00
                addq.b  #$02, $0024(A0)
loc_BF00:
                rts
                bra     DisplaySprite           ; loc_D3C2
                bsr     DisplaySprite           ; loc_D3C2
                move.b  #$01, ($FFFFF7D6).w
                moveq   #$00, D0
                tst.w   ($FFFFF7D2).w
                beq.s   loc_BF22
                addi.w  #$000A, D0
                subi.w  #$000A, ($FFFFF7D2).w
loc_BF22:
                tst.w   ($FFFFF7D4).w
                beq.s   loc_BF32
                addi.w  #$000A, D0
                subi.w  #$000A, ($FFFFF7D4).w
loc_BF32:
                tst.w   D0
                bne.s   loc_BF4C
                move.w  #$00C5, D0
                jsr     (PlaySound)              ; loc_14C6
                addq.b  #$02, $0024(A0)
                move.w  #$00B4, $001E(A0)
loc_BF4A:                
                rts
loc_BF4C:
                jsr     AddPoints               ; (loc_22FD0)      
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$03, D0
                bne.s   loc_BF4A
                move.w  #$00CD, D0
                jmp     (PlaySound)              ; loc_14C6
loc_BF66:
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                add.b   ($FFFFFE11).w, D0
                add.w   D0, D0
                move.w  loc_BF9A(PC, D0), D0
                move.w  D0, ($FFFFFE10).w
                clr.b   ($FFFFFE30).w
                tst.b   ($FFFFF7CD).w
                beq.s   loc_BF8E
                move.b  #$10, ($FFFFF600).w
                bra.s   loc_BF94
loc_BF8E:
                move.w  #$0001, ($FFFFFE02).w
loc_BF94:
                rts
                bra     DisplaySprite           ; loc_D3C2
loc_BF9A:
                dc.w    $0001, $0200, $0000, $0000, $0201, $0400, $0000, $0000
                dc.w    $0401, $0700, $0000, $0000, $0000, $0000, $0701, $0000
                dc.w    $0801, $0A00, $0000, $0000, $0A01, $0B00, $0B01, $0C00
                dc.w    $0C01, $0D00, $0D01, $0700, $0E01, $0F00, $0F01, $0D00
                dc.w    $1001, $0000
loc_BFDE:
                moveq   #$20, D1
                move.w  $0032(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   loc_C004
                bge.s   loc_BFEE
                neg.w   D1
loc_BFEE:
                add.w   D1, $0008(A0)
                move.w  $0008(A0), D0
                bmi.s   loc_C002
                cmpi.w  #$0200, D0
                bcc.s   loc_C002
                bra     DisplaySprite           ; loc_D3C2
loc_C002:
                rts
loc_C004:
                cmpi.b  #$04, $001A(A0)
                bne     DeleteObject            ; loc_D3B4
                addq.b  #$02, $0024(A0)
                clr.b   ($FFFFF7CC).w
                move.w  #$009A, D0
                jmp     (PlayMusic)            ; loc_14C0
                addq.w  #$02, ($FFFFEECA).w
                cmpi.w  #$2100, ($FFFFEECA).w
                beq     DeleteObject            ; loc_D3B4
                rts
loc_C030:
                dc.w    $0004, $0124, $00BC, $0200, $FEE0, $0120, $00D0, $0201
                dc.w    $040C, $014C, $00D6, $0206, $0520, $0120, $00EC, $0202
                dc.w    $0540, $0120, $00FC, $0203, $0560, $0120, $010C, $0204
                dc.w    $020C, $014C, $00CC, $0205                
;=============================================================================== 
; Object 0x3A - Level Results
; [ End ]
;=============================================================================== 

;=============================================================================== 
; Object 0x?? - Special Stage Results Screen
; [ Begin ]
;=============================================================================== 
Special_Stage_Results: ; loc_C068:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  SS_Results_Index(PC, D0), D1  ; loc_C076
                jmp     SS_Results_Index(PC, D1)      ; loc_C076
SS_Results_Index: ; loc_C076:
                dc.w    loc_C08C-SS_Results_Index
                dc.w    loc_C104-SS_Results_Index
                dc.w    loc_C13C-SS_Results_Index
                dc.w    loc_C14A-SS_Results_Index
                dc.w    loc_C13C-SS_Results_Index
                dc.w    loc_C1A4-SS_Results_Index
                dc.w    loc_C13C-SS_Results_Index
                dc.w    loc_C1AE-SS_Results_Index
                dc.w    loc_C13C-SS_Results_Index
                dc.w    loc_C1A4-SS_Results_Index
                dc.w    loc_C1D2-SS_Results_Index
loc_C08C:
                tst.l   ($FFFFF680).w
                beq.s   loc_C094
                rts
loc_C094:
                move.l  A0, A1
                lea     (loc_C1E6), A2
                moveq   #$03, D1
                cmpi.w  #$0032, ($FFFFFE20).w
                bcs.s   loc_C0A8
                addq.w  #$01, D1
loc_C0A8:
                move.b  $0000(A0), $0000(A1)
                move.w  (A2)+, $0008(A1)
                move.w  (A2)+, $0030(A1)
                move.w  (A2)+, $000A(A1)
                move.b  (A2)+, $0024(A1)
                move.b  (A2)+, $001A(A1)
                move.l  #Special_Stage_Results_Mappings, $0004(A1) ; loc_C6D4
                move.w  #$8580, $0002(A1)
                bsr     Adjust2PArtPointer2   ; loc_DC4C
                move.b  #$00, $0001(A1)
                lea     $0040(A1), A1
                dbra    D1, loc_C0A8
                moveq   #$07, D0
                move.b  ($FFFFFE57).w, D1
                beq.s   loc_C100
                moveq   #$00, D0
                cmpi.b  #$06, D1
                bne.s   loc_C100
                moveq   #$08, D0
                move.w  #$0018, $0008(A0)
                move.w  #$0118, $0030(A0)
loc_C100:
                move.b  D0, $001A(A0)
loc_C104:
                moveq   #$10, D1
                move.w  $0030(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   loc_C12A
                bge.s   loc_C114
                neg.w   D1
loc_C114:
                add.w   D1, $0008(A0)
loc_C118:                
                move.w  $0008(A0), D0
                bmi.s   loc_C128
                cmpi.w  #$0200, D0
                bcc.s   loc_C128
                bra     DisplaySprite           ; loc_D3C2
loc_C128:
                rts
loc_C12A:
                cmpi.b  #$02, $001A(A0)
                bne.s   loc_C118
                addq.b  #$02, $0024(A0)
                move.w  #$00B4, $001E(A0)
loc_C13C:
                subq.w  #$01, $001E(A0)
                bne.s   loc_C146
                addq.b  #$02, $0024(A0)
loc_C146:
                bra     DisplaySprite           ; loc_D3C2
loc_C14A:
                bsr     DisplaySprite           ; loc_D3C2
                move.b  #$01, ($FFFFF7D6).w
                tst.w   ($FFFFF7D4).w
                beq.s   loc_C17C
                subi.w  #$000A, ($FFFFF7D4).w
                moveq   #$0A, D0
                jsr     AddPoints               ; (loc_22FD0)
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$03, D0
                bne.s   loc_C1A2
                move.w  #$00CD, D0
                jmp     (PlaySound)              ; loc_14C6
loc_C17C:
                move.w  #$00C5, D0
                jsr     (PlaySound)              ; loc_14C6
                addq.b  #$02, $0024(A0)
                move.w  #$00B4, $001E(A0)
                cmpi.w  #$0032, ($FFFFFE20).w
                bcs.s   loc_C1A2
                move.w  #$003C, $001E(A0)
                addq.b  #$04, $0024(A0)
loc_C1A2:
                rts
loc_C1A4:
                move.w  #$0001, ($FFFFFE02).w
                bra     DisplaySprite           ; loc_D3C2
loc_C1AE:
                move.b  #$04, ($FFFFB6DA).w
                move.b  #$14, ($FFFFB6E4).w
                move.w  #$00BF, D0
                jsr     (PlaySound)              ; loc_14C6
                addq.b  #$02, $0024(A0)
                move.w  #$0168, $001E(A0)
                bra     DisplaySprite           ; loc_D3C2
loc_C1D2:
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$0F, D0
                bne.s   loc_C1E2
                bchg    #0, $001A(A0)
loc_C1E2:
                bra     DisplaySprite           ; loc_D3C2
loc_C1E6:
                dc.w    $0020, $0120, $00C4, $0200, $0320, $0120, $0118, $0201
                dc.w    $0360, $0120, $0128, $0202, $01EC, $011C, $00C4, $0203
                dc.w    $03A0, $0120, $0138, $0206                
;=============================================================================== 
; Object 0x?? - Special Stage Results Screen
; [ End ]
;===============================================================================                 
;=============================================================================== 
; Object 0x?? - Emeralds From Special Stage Results Screen
; [ Begin ]
;===============================================================================    
Emeralds: ; loc_C20E:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_C21C(PC, D0), D1
                jmp     loc_C21C(PC, D1)
loc_C21C:
                dc.w    loc_C22C-loc_C21C
                dc.w    loc_C286-loc_C21C
loc_C220:
                dc.w    $0110, $0128, $00F8, $0140, $00E0, $0158
loc_C22C:
                move.l  A0, A1
                lea     loc_C220(PC), A2
                moveq   #$00, D2
                moveq   #$00, D1
                move.b  ($FFFFFE57).w, D1
                subq.b  #$01, D1
                bcs     DeleteObject            ; loc_D3B4
loc_C240:                
                move.b  $0000(A0), $0000(A1)
                move.w  (A2)+, $0008(A1)
                move.w  #$00F0, $000A(A1)
                lea     ($FFFFFE58).w, A3
                move.b  $00(A3, D2), D3
                move.b  D3, $001A(A1)
                move.b  D3, $001C(A1)
                addq.b  #$01, D2
                addq.b  #$02, $0024(A1)
                move.l  #Emeralds_Mappings, $0004(A1) ; loc_C8F6
                move.w  #$8541, $0002(A1)
                bsr     Adjust2PArtPointer2   ; loc_DC4C
                move.b  #$00, $0001(A1)
                lea     $0040(A1), A1
                dbra    D1, loc_C240
loc_C286:
                move.b  $001A(A0), D0
                move.b  #$06, $001A(A0)
                cmpi.b  #$06, D0
                bne.s   loc_C29C
                move.b  $001C(A0), $001A(A0)
loc_C29C:
                bra     DisplaySprite           ; loc_D3C2
;=============================================================================== 
; Object 0x?? - Emeralds From Special Stage Results Screen
; [ End ]
;===============================================================================    
Title_Cards_Mappings: ; loc_C2A0: ; Object $34 - Mappings
                dc.w    TC_GHz_Map-Title_Cards_Mappings  ; Green Hill
                dc.w    TC_Lz_Map-Title_Cards_Mappings   ; Labyrinth
                dc.w    TC_Mz_Map-Title_Cards_Mappings   ; Marble  
                dc.w    TC_SLz_Map-Title_Cards_Mappings  ; Star Light
                dc.w    TC_SYz_Map-Title_Cards_Mappings  ; Spring Yard
                dc.w    TC_SBz_Map-Title_Cards_Mappings  ; Scrap Brain
                dc.w    TC_Zone_Map-Title_Cards_Mappings ; Zone
                dc.w    TC_Act1_Map-Title_Cards_Mappings ; Act 1
                dc.w    TC_Act2_Map-Title_Cards_Mappings ; Act 2
                dc.w    TC_Act3_Map-Title_Cards_Mappings ; Act 3
                dc.w    TC_Oval_Map-Title_Cards_Mappings ; Oval
                dc.w    TC_Fz_Map-Title_Cards_Mappings   ; Final  
TC_GHz_Map: ; loc_C2B8: ; Green Hill                 
                dc.w    $0009 
                dc.l    $F8050018, $000CFFB4, $F805003A, $001DFFC4
                dc.l    $F8050010, $0008FFD4, $F8050010, $0008FFE4
                dc.l    $F805002E, $0017FFF4, $F805001C, $000E0014
                dc.l    $F8010020, $00100024, $F8050026, $0013002C
                dc.l    $F8050026, $0013003C
TC_Lz_Map: ; loc_C302: ; Labyrinth
                dc.w    $0009
                dc.l    $F8050026, $0013FFBC, $F8050000, $0000FFCC
                dc.l    $F8050004, $0002FFDC, $F805004A, $0025FFEC
                dc.l    $F805003A, $001DFFFC, $F8010020, $0010000C
                dc.l    $F805002E, $00170014, $F8050042, $00210024
                dc.l    $F805001C, $000E0034
TC_Mz_Map: ; loc_C34C: ; Marble 
                dc.w    $0006
                dc.l    $F805002A, $0015FFCF, $F8050000, $0000FFE0
                dc.l    $F805003A, $001DFFF0, $F8050004, $00020000
                dc.l    $F8050026, $00130010, $F8050010, $00080020 
TC_SLz_Map: ; loc_C37E: ; Star Light
                dc.w    $0009
                dc.l    $F805003E, $001FFFB4, $F8050042, $0021FFC4
                dc.l    $F8050000, $0000FFD4, $F805003A, $001DFFE4
                dc.l    $F8050026, $00130004, $F8010020, $00100014
                dc.l    $F8050018, $000C001C, $F805001C, $000E002C
                dc.l    $F8050042, $0021003C
TC_SYz_Map: ; loc_C3C8: ; Spring Yard
                dc.w    $000A
                dc.w    $F805, $003E, $001F, $FFAC, $F805, $0036, $001B, $FFBC
                dc.w    $F805, $003A, $001D, $FFCC, $F801, $0020, $0010, $FFDC
                dc.w    $F805, $002E, $0017, $FFE4, $F805, $0018, $000C, $FFF4
                dc.w    $F805, $004A, $0025, $0014, $F805, $0000, $0000, $0024
                dc.w    $F805, $003A, $001D, $0034, $F805, $000C, $0006, $0044 
TC_SBz_Map: ; loc_C41A: ; Scrap Brain
                dc.w    $000A
                dc.l    $F805003E, $001FFFAC, $F8050008, $0004FFBC
                dc.l    $F805003A, $001DFFCC, $F8050000, $0000FFDC
                dc.l    $F8050036, $001BFFEC, $F8050004, $0002000C
                dc.l    $F805003A, $001D001C, $F8050000, $0000002C
                dc.l    $F8010020, $0010003C, $F805002E, $00170044
TC_Zone_Map: ; loc_C46C: ; Zone
                dc.w    $0004
                dc.l    $F805004E, $0027FFE0, $F8050032, $0019FFF0
                dc.l    $F805002E, $00170000, $F8050010, $00080010
TC_Act1_Map: ; loc_C48E: ; Act 1
                dc.w    $0002
                dc.l    $040C0053, $0029FFEC, $F4020057, $002B000C
TC_Act2_Map: ; loc_C4A0: ; Act 2
                dc.w    $0002
                dc.l    $040C0053, $0029FFEC, $F406005A, $002D0008
TC_Act3_Map: ; loc_C4B2: ; Act 3
                dc.w    $0002
                dc.l    $040C0053, $0029FFEC, $F4060060, $00300008
TC_Oval_Map: ; loc_C4C4: ; Oval
                dc.w    $000D
                dc.l    $E40C0070, $0038FFF4, $E4020074, $003A0014
                dc.l    $EC040077, $003BFFEC, $F4050079, $003CFFE4
                dc.l    $140C1870, $1838FFEC, $04021874, $183AFFE4
                dc.l    $0C041877, $183B0004, $FC051879, $183C000C
                dc.l    $EC08007D, $003EFFFC, $F40C007C, $003EFFF4
                dc.l    $FC08007C, $003EFFF4, $040C007C, $003EFFEC
                dc.l    $0C08007C, $003EFFEC
TC_Fz_Map: ; loc_C52E: ; Final
                dc.w    $0005
                dc.l    $F8050014, $000AFFDC, $F8010020, $0010FFEC
                dc.l    $F805002E, $0017FFF4, $F8050000, $00000004
                dc.l    $F8050026, $00130014
Time_Game_Over_Mappings: ; loc_C558:
                dc.w    loc_C560-Time_Game_Over_Mappings
                dc.w    loc_C572-Time_Game_Over_Mappings
                dc.w    loc_C584-Time_Game_Over_Mappings
                dc.w    loc_C596-Time_Game_Over_Mappings
loc_C560:
                dc.w    $0002
                dc.l    $F80D0000, $0000FFB8, $F80D0008, $0004FFD8
loc_C572:
                dc.w    $0002
                dc.l    $F80D0014, $000A0008, $F80D000C, $00060028
loc_C584:
                dc.w    $0002
                dc.l    $F809001C, $000EFFC4, $F80D0008, $0004FFDC
loc_C596:
                dc.w    $0002
                dc.l    $F80D0014, $000A000C, $F80D000C, $0006002C  
Level_Results_Mappings: ; loc_C5A8:
                dc.w    LR_Sonic_Has_Map-Level_Results_Mappings
                dc.w    LR_Passed_Map-Level_Results_Mappings
                dc.w    LR_Score_Map-Level_Results_Mappings
                dc.w    LR_Time_Bonus_Map-Level_Results_Mappings
                dc.w    LR_Ring_Bonus_Map-Level_Results_Mappings
                dc.w    TC_Oval_Map-Level_Results_Mappings
                dc.w    TC_Act1_Map-Level_Results_Mappings
                dc.w    TC_Act2_Map-Level_Results_Mappings
                dc.w    TC_Act3_Map-Level_Results_Mappings
LR_Sonic_Has_Map: ; loc_C5BA: ; Sonic Has
                dc.w    $0008
                dc.l    $F805003E, $001FFFB8, $F8050032, $0019FFC8
                dc.l    $F805002E, $0017FFD8, $F8010020, $0010FFE8
                dc.l    $F8050008, $0004FFF0, $F805001C, $000E0010
                dc.l    $F8050000, $00000020, $F805003E, $001F0030
LR_Passed_Map: ; loc_C5FC: ; Passed
                dc.w    $0006
                dc.l    $F8050036, $001BFFD0, $F8050000, $0000FFE0
                dc.l    $F805003E, $001FFFF0, $F805003E, $001F0000
                dc.l    $F8050010, $00080010, $F805000C, $00060020
LR_Score_Map: ; loc_C62E:
                dc.w    $0006
                dc.l    $F80D014A, $00A5FFB0, $F8010162, $00B1FFD0
                dc.l    $F8090164, $00B20018, $F80D016A, $00B50030
                dc.l    $F704006E, $0037FFCD, $FF04186E, $1837FFCD
LR_Time_Bonus_Map: ; loc_C660:
                dc.w    $0007
                dc.l    $F80D015A, $00ADFFB0, $F80D0066, $0033FFD9
                dc.l    $F801014A, $00A5FFF9, $F704006E, $0037FFF6
                dc.l    $FF04186E, $1837FFF6, $F80DFFF0, $FBF80028
                dc.l    $F8010170, $00B80048
LR_Ring_Bonus_Map: ; loc_C69A:
                dc.w    $0007
                dc.l    $F80D0152, $00A9FFB0, $F80D0066, $0033FFD9
                dc.l    $F801014A, $00A5FFF9, $F704006E, $0037FFF6
                dc.l    $FF04186E, $1837FFF6, $F80DFFF8, $FBFC0028
                dc.l    $F8010170, $00B80048    
Special_Stage_Results_Mappings: ; loc_C6D4:
                dc.w    loc_C6E6-Special_Stage_Results_Mappings
                dc.w    loc_C750-Special_Stage_Results_Mappings
                dc.w    loc_C782-Special_Stage_Results_Mappings
                dc.w    TC_Oval_Map-Special_Stage_Results_Mappings
                dc.w    loc_C7BC-Special_Stage_Results_Mappings
                dc.w    loc_C7DE-Special_Stage_Results_Mappings
                dc.w    loc_C800-Special_Stage_Results_Mappings
                dc.w    loc_C81A-Special_Stage_Results_Mappings
                dc.w    loc_C87C-Special_Stage_Results_Mappings
loc_C6E6:
                dc.w    $000D
                dc.l    $F8050008, $0004FF90, $F805001C, $000EFFA0
                dc.l    $F8050000, $0000FFB0, $F8050032, $0019FFC0
                dc.l    $F805003E, $001FFFD0, $F8050010, $0008FFF0
                dc.l    $F805002A, $00150000, $F8050010, $00080010
                dc.l    $F805003A, $001D0020, $F8050000, $00000030
                dc.l    $F8050026, $00130040, $F805000C, $00060050
                dc.l    $F805003E, $001F0060
loc_C750:
                dc.w    $0006
                dc.l    $F80D014A, $00A5FFB0, $F8010162, $00B1FFD0
                dc.l    $F8090164, $00B20018, $F80D016A, $00B50030
                dc.l    $F704006E, $0037FFCD, $FF04186E, $1837FFCD
loc_C782:
                dc.w    $0007
                dc.l    $F80D0152, $00A9FFB0, $F80D0066, $0033FFD9
                dc.l    $F801014A, $00A5FFF9, $F704006E, $0037FFF6
                dc.l    $FF04186E, $1837FFF6, $F80DFFF8, $FBFC0028
                dc.l    $F8010170, $00B80048
loc_C7BC:
                dc.w    $0004
                dc.l    $F80DFFD1, $7FC8FFB0, $F80DFFD9, $7FD4FFD0
                dc.l    $F801FFE1, $7FE0FFF0, $F8061FE3, $2FE30040
loc_C7DE:
                dc.w    $0004
                dc.l    $F80DFFD1, $7FC8FFB0, $F80DFFD9, $7FD4FFD0
                dc.l    $F801FFE1, $7FE0FFF0, $F8061FE9, $2FEC0040
loc_C800:
                dc.w    $0003
                dc.l    $F80DFFD1, $7FC8FFB0, $F80DFFD9, $7FD4FFD0
                dc.l    $F801FFE1, $7FE0FFF0
loc_C81A:
                dc.w    $000C
                dc.l    $F805003E, $001FFF9C, $F8050036, $001BFFAC
                dc.l    $F8050010, $0008FFBC, $F8050008, $0004FFCC
                dc.l    $F8010020, $0010FFDC, $F8050000, $0000FFE4
                dc.l    $F8050026, $0013FFF4, $F805003E, $001F0014
                dc.l    $F8050042, $00210024, $F8050000, $00000034
                dc.l    $F8050018, $000C0044, $F8050010, $00080054
loc_C87C:
                dc.w    $000F
                dc.l    $F805003E, $001FFF88, $F8050032, $0019FF98
                dc.l    $F805002E, $0017FFA8, $F8010020, $0010FFB8
                dc.l    $F8050008, $0004FFC0, $F8050018, $000CFFD8
                dc.l    $F8050032, $0019FFE8, $F8050042, $0021FFF8
                dc.l    $F8050042, $00210010, $F805001C, $000E0020
                dc.l    $F8050010, $00080030, $F805002A, $00150040
                dc.l    $F8050000, $00000058, $F8050026, $00130068
                dc.l    $F8050026, $00130078                
Emeralds_Mappings: ; loc_C8F6:
                dc.w    loc_C904-Emeralds_Mappings
                dc.w    loc_C90E-Emeralds_Mappings
                dc.w    loc_C918-Emeralds_Mappings
                dc.w    loc_C922-Emeralds_Mappings
                dc.w    loc_C92C-Emeralds_Mappings
                dc.w    loc_C936-Emeralds_Mappings
                dc.w    loc_C940-Emeralds_Mappings
loc_C904:
                dc.w    $0001
                dc.l    $F8052004, $2002FFF8
loc_C90E:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
loc_C918:
                dc.w    $0001
                dc.l    $F8054004, $4002FFF8
loc_C922:
                dc.w    $0001
                dc.l    $F8056004, $6002FFF8
loc_C92C:
                dc.w    $0001
                dc.l    $F8052008, $2004FFF8
loc_C936:
                dc.w    $0001
                dc.l    $F805200C, $2006FFF8
loc_C940:
                dc.w    $0000                   ; Filler                            
                nop                   
;=============================================================================== 
; Object 0x36 - Vertical Spikes 
; [ Begin ]                         
;===============================================================================                 
Obj_0x36_Spikes: ; loc_C944:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_C952(PC, D0), D1
                jmp     loc_C952(PC, D1)
loc_C952:
                dc.w    loc_C96A-loc_C952
                dc.w    loc_C9D6-loc_C952
                dc.w    loc_CA26-loc_C952
                dc.w    loc_CA82-loc_C952                
loc_C95A:
                dc.b    $10, $10, $20, $10, $30, $10, $40, $10, $10, $10, $10, $20, $10, $30, $10, $40                  
loc_C96A:
                addq.b  #$02, $0024(A0)
                move.l  #Spike_Mappings, $0004(A0) ; loc_CBA0
                move.w  #$2434, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), D0
                andi.b  #$0F, $0028(A0)
                andi.w  #$00F0, D0  
                lea     loc_C95A(PC), A1
                lsr.w   #$03, D0
                adda.w  D0, A1
                move.b  (A1)+, $0019(A0)
                move.b  (A1)+, $0016(A0)
                lsr.w   #$01, D0
                move.b  D0, $001A(A0)
                cmpi.b  #$04, D0
                bcs.s   loc_C9BA
                addq.b  #$02, $0024(A0)
loc_C9BA:
                btst    #$01, $0022(A0)
                beq.s   loc_C9C8
                move.b  #$06, $0024(A0)
loc_C9C8:
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0032(A0)
                rts
loc_C9D6:
                bsr     loc_CAFE
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; loc_F4A0
                move.b  $0022(A0), D6
                andi.b  #$18, D6
                beq.s   loc_CA1E
                move.b  D6, D0
                andi.b  #$08, D0
                beq.s   loc_CA10
                lea     ($FFFFB000).w, A1
                bsr     Touch_Spikes            ; loc_CAD0
loc_CA10:
                andi.b  #$10, D6
                beq.s   loc_CA1E
                lea     ($FFFFB040).w, A1
                bsr     Touch_Spikes            ; loc_CAD0
loc_CA1E:
                move.w  $0030(A0), D0
                bra     loc_D2D8
loc_CA26:                
                move.w  $0008(A0), -(A7)
                bsr     loc_CAFE
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     SolidObject             ; loc_F4A0
                swap.w  D6
                andi.w  #$0003, D6
                beq.s   loc_CA7A
                move.b  D6, D0
                andi.b  #$01, D0
                beq.s   loc_CA66
                lea     ($FFFFB000).w, A1
                bsr     Touch_Spikes            ; loc_CAD0
                bclr    #$05, $0022(A0)
loc_CA66:                
                andi.b  #$02, D6
                beq.s   loc_CA7A
                lea     ($FFFFB040).w, A1  
                bsr     Touch_Spikes            ; loc_CAD0
                bclr    #$06, $0022(A0)
loc_CA7A:
                move.w  $0030(A0), D0
                bra     loc_D2D8
loc_CA82:
                bsr     loc_CAFE
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; loc_F4A0
                swap.w  D6
                andi.w  #$000C, D6
                beq.s   loc_CAC8
                move.b  D6, D0
                andi.b  #$04, D0
                beq.s   loc_CABA
                lea     ($FFFFB000).w, A1
                bsr     Touch_Spikes            ; loc_CAD0
loc_CABA:
                andi.b  #$08, D6
                beq.s   loc_CAC8
                lea     ($FFFFB040).w, A1
                bsr     Touch_Spikes            ; loc_CAD0
loc_CAC8:
                move.w  $0030(A0), D0
                bra     loc_D2D8
;===============================================================================
; Sub Routine Touch_Spikes
;[ Begin ]
;===============================================================================                
Touch_Spikes: ; loc_CAD0:
                tst.b   ($FFFFFE2D).w           ; Invincibility Running ?
                bne.s   Touch_Spikes_No_Hurt    ; loc_CAFC
                cmpi.b  #$04, $0024(A1)
                bcc.s   Touch_Spikes_No_Hurt    ; loc_CAFC
                move.l  $000C(A1), D3
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                sub.l   D0, D3
                move.l  D3, $000C(A1)
                move.l  A0, A2
                move.l  A1, A0
                jsr     HurtSonic               ; loc_21384
                move.l  A2, A0
Touch_Spikes_No_Hurt: ; loc_CAFC:                
                rts
;===============================================================================
; Sub Routine Touch_Spikes
;[ End ]
;===============================================================================                    
loc_CAFE:
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.w  loc_CB0E(PC, D0), D1
                jmp     loc_CB0E(PC, D1)
loc_CB0E:
                dc.w    loc_CB14-loc_CB0E
                dc.w    loc_CB16-loc_CB0E
                dc.w    loc_CB2A-loc_CB0E
loc_CB14:                  
                rts
loc_CB16:
                bsr     loc_CB3E
                moveq   #$00, D0
                move.b  $0034(A0), D0
                add.w   $0032(A0), D0
                move.w  D0, $000C(A0)
                rts
loc_CB2A:
                bsr     loc_CB3E
                moveq   #$00, D0
                move.b  $0034(A0), D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                rts
loc_CB3E:
                tst.w   $0038(A0)
                beq.s   loc_CB5C
                subq.w  #$01, $0038(A0)
                bne.s   loc_CB9E
                tst.b   $0001(A0)
                bpl.s   loc_CB9E
                move.w  #$00B6, D0
                jsr     (PlaySound)              ; loc_14C6
                bra.s   loc_CB9E
loc_CB5C:
                tst.w   $0036(A0)
                beq.s   loc_CB7E
                subi.w  #$0800, $0034(A0)
                bcc.s   loc_CB9E
                move.w  #$0000, $0034(A0)
                move.w  #$0000, $0036(A0)
                move.w  #$003C, $0038(A0)
                bra.s   loc_CB9E
loc_CB7E:
                addi.w  #$0800, $0034(A0)
                cmpi.w  #$2000, $0034(A0)
                bcs.s   loc_CB9E
                move.w  #$2000, $0034(A0)
                move.w  #$0001, $0036(A0)
                move.w  #$003C, $0038(A0)
loc_CB9E:
                rts
Spike_Mappings:                
loc_CBA0:
                dc.w    loc_CBB0-loc_CBA0
                dc.w    loc_CBC2-loc_CBA0
                dc.w    loc_CBE4-loc_CBA0
                dc.w    loc_CC16-loc_CBA0
                dc.w    loc_CC58-loc_CBA0
                dc.w    loc_CC6A-loc_CBA0
                dc.w    loc_CC8C-loc_CBA0
                dc.w    loc_CCBE-loc_CBA0
loc_CBB0:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F0070000, $00000000
loc_CBC2:
                dc.w    $0004
                dc.l    $F0070000, $0000FFE0, $F0070000, $0000FFF0
                dc.l    $F0070000, $00000000, $F0070000, $00000010
loc_CBE4:
                dc.w    $0006
                dc.l    $F0070000, $0000FFD0, $F0070000, $0000FFE0
                dc.l    $F0070000, $0000FFF0, $F0070000, $00000000
                dc.l    $F0070000, $00000010, $F0070000, $00000020
loc_CC16:
                dc.w    $0008
                dc.l    $F0070000, $0000FFC0, $F0070000, $0000FFD0
                dc.l    $F0070000, $0000FFE0, $F0070000, $0000FFF0
                dc.l    $F0070000, $00000000, $F0070000, $00000010
                dc.l    $F0070000, $00000020, $F0070000, $00000030
loc_CC58:
                dc.w    $0002
                dc.l    $F00DFFF8, $FBFCFFF0, $000DFFF8, $FBFCFFF0
loc_CC6A:
                dc.w    $0004
                dc.l    $E00DFFF8, $FBFCFFF0, $F00DFFF8, $FBFCFFF0
                dc.l    $000DFFF8, $FBFCFFF0, $100DFFF8, $FBFCFFF0
loc_CC8C:
                dc.w    $0006
                dc.l    $D00DFFF8, $FBFCFFF0, $E00DFFF8, $FBFCFFF0
                dc.l    $F00DFFF8, $FBFCFFF0, $000DFFF8, $FBFCFFF0
                dc.l    $100DFFF8, $FBFCFFF0, $200DFFF8, $FBFCFFF0
loc_CCBE:
                dc.w    $0008
                dc.l    $C00DFFF8, $FBFCFFF0, $D00DFFF8, $FBFCFFF0
                dc.l    $E00DFFF8, $FBFCFFF0, $F00DFFF8, $FBFCFFF0
                dc.l    $000DFFF8, $FBFCFFF0, $100DFFF8, $FBFCFFF0
                dc.l    $200DFFF8, $FBFCFFF0, $300DFFF8, $FBFCFFF0                 
;=============================================================================== 
; Object 0x36 - Vertical Spikes 
; [ End ]                         
;===============================================================================   

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 3B - Purple rock (leftover from S1)
; ---------------------------------------------------------------------------
; Sprite_CD00: Obj_0x3B:
Obj3B:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	Obj3B_Index(pc,d0.w),d1
		jmp	Obj3B_Index(pc,d1.w)
; ===========================================================================
; off_CD0E:
Obj3B_Index:	dc.w	Obj3B_Init-Obj3B_Index
		dc.w	Obj3B_Main-Obj3B_Index
; ===========================================================================
; loc_CD12:
Obj3B_Init:
		addq.b	#2,$24(a0)
		move.l	#Obj3B_MapUnc_CD66,4(a0)
		move.w	#$66C0,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$13,$19(a0)
		move.b	#4,$18(a0)
; loc_CD3A:
Obj3B_Main:
		move.w	#$1B,d1
		move.w	#$10,d2
		move.w	#$10,d3
		move.w	8(a0),d4
		bsr.w	SolidObject
		move.w	8(a0),d0
		andi.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmpi.w	#$280,d0
		bhi.w	DeleteObject
		bra.w	DisplaySprite
; ===========================================================================
; ---------------------------------------------------------------------------
; Unused sprite mappings
; ---------------------------------------------------------------------------
Obj3B_MapUnc_CD66:	incbin	"mappings/sprite/obj3B.bin"
; ===========================================================================
		align 4

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 3C - Breakable wall (leftover from S1) (mostly unused)
; ---------------------------------------------------------------------------
; Sprite_CD7C: Obj_0x3C:
Obj3C:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	Obj3C_Index(pc,d0.w),d1
		jsr	Obj3C_Index(pc,d1.w)
		bra.w	MarkObjGone
; ===========================================================================
; off_CD8E:
Obj3C_Index:
                dc.w    Obj3C_Init-Obj3C_Index
                dc.w    Obj3C_Main-Obj3C_Index
                dc.w    Obj3C_Fragment-Obj3C_Index
; ===========================================================================
; loc_CD94:
Obj3C_Init:
		addq.b	#2,$24(a0)
		move.l	#Obj3C_MapUnc_CF04,4(a0)
		move.w	#$4590,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$10,$19(a0)
		move.b	#4,$18(a0)
		move.b	$28(a0),$1A(a0)
; loc_CDC2:
Obj3C_Main:
		move.w	($FFFFB010).w,$30(a0)
		move.w	#$1B,d1
		move.w	#$20,d2
		move.w	#$20,d3
		move.w	8(a0),d4
		bsr.w	SolidObject
		btst	#5,$22(a0)
		bne.s	loc_CDE6

return_CDE4:
		rts
; ===========================================================================

loc_CDE6:
		lea	($FFFFB000).w,a1	; a1=character
		cmpi.b	#2,$1C(a1)
		bne.s	return_CDE4
		move.w	$30(a0),d0
		bpl.s	loc_CDFA
		neg.w	d0

loc_CDFA:
		cmpi.w	#$480,d0
		bcs.s	return_CDE4
		move.w	$30(a0),$10(a1)
		addq.w	#4,8(a1)
		lea	(Obj3C_FragmentSpeeds_LeftToRight).l,a4
		move.w	8(a0),d0
		cmp.w	8(a1),d0
		bcs.s	loc_CE26
		subi.w	#8,8(a1)
		lea	(Obj3C_FragmentSpeeds_RightToLeft).l,a4

loc_CE26:
		move.w	$10(a1),$14(a1)
		bclr	#5,$22(a0)
		bclr	#5,$22(a1)
		bsr.s	BreakObjectToPieces
; loc_CE3A:
Obj3C_Fragment:
		bsr.w	SpeedToPos
		addi.w	#$70,$12(a0)
		tst.b	1(a0)
		bpl.w	DeleteObject
		bra.w	DisplaySprite

; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to break an object into its current sprite mappings
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_CE50:
BreakObjectToPieces:
		moveq	#0,d0
		move.b	$1A(A0),d0
		add.w	d0,d0
		move.l	4(a0),a3
		adda.w	(a3,d0.w),a3	; put address of appropriate frame to a3
		move.w	(a3)+,d1	; amount of pieces the frame consists of
		subq.w	#1,d1
		bset	#5,1(a0)
		move.b	0(a0),d4
		move.b	1(a0),d5
		move.l	a0,a1
		bra.s	BreakObjectToPieces_InitObject
; ===========================================================================
; loc_CE76:
BreakObjectToPieces_Loop:
		bsr.w	SingleObjLoad2
		bne.s	loc_CEBA
		addq.w	#8,a3
; loc_CE7E:
BreakObjectToPieces_InitObject:
		move.b	#4,$24(a1)
		move.b	d4,0(a1)	; load object with ID of parent object and routine 4
		move.l	a3,4(a1)
		move.b	d5,1(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.w	2(a0),2(a1)
		move.b	$18(a0),$18(a1)
		move.b	$19(a0),$19(a1)
		move.w	(a4)+,$10(a1)
		move.w	(a4)+,$12(a1)
		dbf	d1,BreakObjectToPieces_Loop

loc_CEBA:
		move.w	#$CB,d0
		jmp	(PlaySound).l
; End of function BreakObjectToPieces

; ===========================================================================
; word_CEC4:
Obj3C_FragmentSpeeds_LeftToRight:
		;    x velocity,y velocity
		dc.w  $400,-$500
		dc.w  $600,-$100
		dc.w  $600, $100
		dc.w  $400, $500
		dc.w  $600,-$600
		dc.w  $800,-$200
		dc.w  $800, $200
		dc.w  $600, $600
; word_CEE4:
Obj3C_FragmentSpeeds_RightToLeft:
		dc.w -$600,-$600
		dc.w -$800,-$200
		dc.w -$800, $200
		dc.w -$600, $600
		dc.w -$400,-$500
		dc.w -$600,-$100
		dc.w -$600, $100
		dc.w -$400, $500
; ---------------------------------------------------------------------------
; Unused sprite mappings
; ---------------------------------------------------------------------------
Obj3C_MapUnc_CF04:	incbin	"mappings/sprite/obj3C.bin"

; ===========================================================================
; ---------------------------------------------------------------------------
; This runs the code of all the objects that are in object RAM
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_CDD0: Load_Objects:
RunObjects:
		lea	($FFFFB000).w,a0	; a0=object
		moveq	#$7F,d7			; run the first $80 objects out of levels
		moveq	#0,d0
		cmpi.b	#6,($FFFFB024).w	; is Sonic dead?
		bcc.s	RunObjectsWhenPlayerIsDead	; if yes, branch
		; continue straight into RunObject

; ---------------------------------------------------------------------------
; This is THE place where each individual object's code gets called from
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_CFE0:
RunObject:
		move.b	(a0),d0		; get object ID
		beq.s	RunNextObject	; skip if invalid (e.g. Obj00)

		add.w	d0,d0
		add.w	d0,d0	; d0 = object ID *4
		move.l	Obj_Index-4(pc,d0.w),a1	; load the address of the object's code
		jsr	(a1)	; dynamic call! to one of the the entries in Obj_Index
		moveq	#0,d0
; loc_CFF0:
RunNextObject:
		lea	$40(a0),a0	; load Obj address
		dbf	d7,RunObject
		rts
; ---------------------------------------------------------------------------
; this skips certain objects to make enemies and things pause when Sonic dies
; loc_CFFA:
RunObjectsWhenPlayerIsDead:
		moveq	#$1F,d7
		bsr.s	RunObject	; run the first $10 objects normally
		moveq	#$5F,d7		; all objects in this range are paused

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; sub_D000:
RunObjectDisplayOnly:
		moveq	#0,d0
		move.b	(a0),d0		; get object ID
		beq.s	loc_D010	; skip if invalid (e.g. Obj00)
		tst.b	1(a0)		; has the object been fully initalized?
		bpl.s	loc_D010	; if not, branch
		bsr.w	DisplaySprite

loc_D010:
		lea	$40(a0),a0	; load Obj address
		dbf	d7,RunObjectDisplayOnly
		rts
; End of function RunObjects

; ===========================================================================
; ---------------------------------------------------------------------------
; OBJECT POINTER ARRAY ; object pointers ; sprite pointers ; object list ; sprite list
;
; This array contains the pointers to all the objects used in the game.
; ---------------------------------------------------------------------------
; loc_D01A:
Obj_Index:
		dc.l	Obj01			; Sonic
                dc.l    Obj_0x02_Tails                    ; loc_10E38
		dc.l	Obj03			; Collision plane/layer switcher
		dc.l	Obj04			; Surface of the water
                dc.l    Obj_0x05_Tails_Tail               ; loc_11F96 
                dc.l    Obj_0x06_Spiral_Attributes        ; loc_1572C 
                dc.l    Obj_0x07                          ; loc_180D0 
                dc.l    Obj_0x08_Water_Splash             ; loc_12B42 
                dc.l    Obj_0x09_Sonic_In_Special_Stage   ; loc_21D40
                dc.l    Obj_0x0A_Bubbles_And_Numbers      ; loc_1207C 
                dc.l    Obj_0x0B_Open_Close_Platform      ; loc_148AC 
                dc.l    Obj_0x0C                          ; loc_149FC
                dc.l    Obj_0x0D_End_Panel                ; loc_F1F4 
                dc.l    Obj_0x0E_Sonic_Tails              ; loc_B7B4 
                dc.l    Obj_0x0F                          ; loc_B83A 
                dc.l    Obj_0x10                          ; loc_223E2
                dc.l    Obj_0x11_Bridge                   ; loc_7FDC 
                dc.l    Obj_0x12_Emerald                  ; loc_14AFC 
                dc.l    Obj_0x13_Hpz_Waterfalls           ; loc_14B78  
                dc.l    Obj_0x14_See_Saw                  ; loc_15B8C 
                dc.l    Obj_0x15_Swing_Platform           ; loc_85F8
                dc.l    Obj_0x16_Teleferics               ; loc_1600C 
                dc.l    Obj_0x17                          ; loc_8B9C
                dc.l    Obj_0x18_Platforms                ; loc_8D38 
                dc.l    Obj_0x19_Elevator                 ; loc_1621C                 
                dc.l    Obj_0x1A_Collapsing_Platforms     ; loc_9128 
                dc.l    Obj_0x1B_Speed_Booster            ; loc_16468
                dc.l    Obj_0x1C_Misc                     ; loc_999C 
                dc.l    Obj_0x1D_Worms                    ; loc_165B0   
                dc.l    Obj_0x1E_Tube_Attributes          ; loc_16724 
                dc.l    Obj_0x1F_Collapsing_Platforms     ; loc_9274 
                dc.l    Obj_0x20_Fireball                 ; loc_17174
                dc.l    Obj_0x21_Head_Up_Display          ; loc_22DFC
                dc.l    Obj_0x22_Arrow_Shooter            ; loc_19660
                dc.l    Obj_0x23_Pillar                   ; loc_19850    
                dc.l    Obj_0x24                          ; loc_A012
		dc.l	Obj25			; A ring
                dc.l    Obj_0x26_Monitors                 ; loc_B29C
                dc.l    Obj_0x27_Object_Hit               ; loc_A086
                dc.l    Obj_0x28_Flickies                 ; loc_A2B0
                dc.l    Obj_0x29_Enemy_Points             ; loc_A7C0
                dc.l    Obj_0x2A_Up_Down_Pillar           ; loc_9C0C
                dc.l    Obj_0x2B_Breakable_Pillar         ; loc_19A1E
                dc.l    Obj_0x2C_Leaves                   ; loc_1A0C4
                dc.l    Obj_0x2D_Automatic_Door           ; loc_9CE2   
                dc.l    Obj_0x2E_Monitors_Contents        ; loc_B46A
                dc.l    Obj_0x2F_Breakable_Floor          ; loc_1747C
                dc.l    Obj_0x30                          ; loc_17A4C
                dc.l    Obj_0x31_Lava_Attributes          ; loc_155A0 
                dc.l    Obj_0x32_Breakable_Obstacule      ; loc_1768A
                dc.l    Obj_0x33_Touch_Booster            ; loc_17CA0   
                dc.l    Obj_0x34_Title_Cards              ; loc_BB54 
                dc.l    Obj_0x35_Invincibility            ; loc_1264E
                dc.l    Obj_0x36_Spikes                   ; loc_C944 
                dc.l    Obj_0x37_Rings_Out                ; loc_AD62 
                dc.l    Obj_0x38_Shield                   ; loc_125CE
                dc.l    Obj_0x39_Time_Game_Over           ; loc_BD76
                dc.l    Obj_0x3A_Level_Results            ; loc_BE38 
		dc.l	Obj3B			; Purple rock (leftover from S1)
		dc.l	Obj3C			; Breakable wall (leftover from S1) (mostly unused)
                dc.l    Obj_0x3D_Break_Boost              ; loc_18E78   
                dc.l    Obj_0x3E_Egg_Prison               ; loc_20E5C
                dc.l    Obj_0x3F                          ; loc_A11E
                dc.l    Obj_0x40_Diagonal_Springs         ; loc_1A30C
                dc.l    Obj_0x41_Springs                  ; loc_E7B8 
                dc.l    Obj_0x42_Steam_Vent               ; loc_1A5CC
                dc.l    Obj_0x43_Giant_Spikeball          ; loc_17F0C  
                dc.l    Obj_0x44                          ; loc_F10C
                dc.l    Obj_0x45_Spring_Push_Boost        ; loc_181A0
                dc.l    Obj_0x46_Spring_Ball              ; loc_18ABE 
                dc.l    Obj_0x47_Switch                   ; loc_18D9C
                dc.l    Obj_0x48_Cannon                   ; loc_19250
                dc.l    Obj_0x49_Waterfall                ; loc_15352 
                dc.l    Obj_0x4A_Octus                    ; loc_1EBB8
                dc.l    Obj_0x4B_Buzz_Bomber              ; loc_1E89C 
                dc.l    Obj_0x4C_Batbot                   ; loc_1EE68 
                dc.l    Obj_0x4D_Rhinobot                 ; loc_1D984 
                dc.l    Obj_0x4E_Crocobot                 ; loc_1F2F0
                dc.l    Obj_0x4F_Dinobot                  ; loc_1DEAC
                dc.l    Obj_0x50_Aquis                    ; loc_1E010
                dc.l    Obj_0x51_Aquis                    ; loc_1E62C
                dc.l    Obj_0x52_Piranha                  ; loc_1DC54
                dc.l    Obj_0x53_Chopper                  ; loc_1F5E8   
                dc.l    Obj_0x54_Motobug                  ; loc_1F6E8 
                dc.l    Obj_0x55_Ghz_Boss                 ; loc_2030C
                dc.l    Obj_0x56                          ; loc_205A6
                dc.l    Obj_0x57                          ; loc_1F99C
                dc.l    Obj_0x58                          ; loc_1FC0A
                dc.l    Obj_Null                          ; loc_D24A ; Object $59
                dc.l    Obj_Null                          ; loc_D24A ; Object $5A
                dc.l    Obj_Null                          ; loc_D24A ; Object $5B
                dc.l    Obj_Null                          ; loc_D24A ; Object $5C
                dc.l    Obj_Null                          ; loc_D24A ; Object $5D   
                dc.l    Obj_Null                          ; loc_D24A ; Object $5E
                dc.l    Obj_Null                          ; loc_D24A ; Object $5F
                dc.l    Obj_Null                          ; loc_D24A ; Object $60
                dc.l    Obj_Null                          ; loc_D24A ; Object $61
                dc.l    Obj_Null                          ; loc_D24A ; Object $62
                dc.l    Obj_Null                          ; loc_D24A ; Object $63   
                dc.l    Obj_0x64_Pistons                  ; loc_1A8B4
                dc.l    Obj_0x65_Platform                 ; loc_1AA74 
                dc.l    Obj_0x66_Spring_Wall              ; loc_1AEBC
                dc.l    Obj_0x67_Teleport_Attributes      ; loc_1B0C4
                dc.l    Obj_0x68_Block_Arrow              ; loc_1B520
                dc.l    Obj_0x69_Screw_Nut                ; loc_1B810
                dc.l    Obj_0x6A_Rotating_Boxes           ; loc_1BA30
                dc.l    Obj_0x6B_Mz_Platform              ; loc_1BCEC
                dc.l    Obj_0x6C_Mz_Moving_Platforms      ; loc_1BF6C
                dc.l    Obj_0x6D_Harpoon                  ; loc_1B720   
                dc.l    Obj_0x6E_Machine                  ; loc_1C2E4
                dc.l    Obj_Ox6F_Parallelogram_Elevator   ; loc_1C4F8
                dc.l    Obj_0x70_Rotating_Gears           ; loc_1C850
                dc.l    Obj_0x71_Hpz_Misc                 ; loc_9A54 
                dc.l    Obj_0x72_Conveyor_Belt_Attributes ; loc_1CBCC
                dc.l    Obj_0x73_Rotating_Rings           ; loc_1CC54   
                dc.l    Obj_0x74_Invisible_Block          ; loc_1561A
                dc.l    Obj_0x75_Spikeball_Chain          ; loc_1CE48
                dc.l    Obj_0x76_Platform_Spikes          ; loc_1D078
                dc.l    Obj_0x77_Bridge                   ; loc_1D208
                dc.l    Obj_0x78_Rotating_Platforms       ; loc_1D3C0
                dc.l    Obj_0x79_Lamp_Post                ; loc_13B54
                dc.l    Obj_0x7A_Platform_Horizontal      ; loc_1D594
                dc.l    Obj_0x7B_Spring_Tubes             ; loc_1D74C
                dc.l    Obj_Null                          ; loc_D24A ; Object $7C
                dc.l    Obj_0x7D_Hidden_Bonus             ; loc_13DFC 
                dc.l    Obj_Null                          ; loc_D24A ; Object $7E
                dc.l    Obj_Null                          ; loc_D24A ; Object $7F
                dc.l    Obj_Null                          ; loc_D24A ; Object $80
                dc.l    Obj_Null                          ; loc_D24A ; Object $81
                dc.l    Obj_Null                          ; loc_D24A ; Object $82
                dc.l    Obj_Null                          ; loc_D24A ; Object $83   
                dc.l    Obj_Null                          ; loc_D24A ; Object $84
                dc.l    Obj_Null                          ; loc_D24A ; Object $85
                dc.l    Obj_Null                          ; loc_D24A ; Object $86
                dc.l    Obj_Null                          ; loc_D24A ; Object $87
                dc.l    Obj_Null                          ; loc_D24A ; Object $88
                dc.l    Obj_Null                          ; loc_D24A ; Object $89
                dc.l    Obj_0x8A_Credits                  ; loc_20740
                dc.l    Obj_Null                          ; loc_D24A ; Object $8B
                dc.l    Obj_Null                          ; loc_D24A ; Object $8C
; ===========================================================================
; ---------------------------------------------------------------------------
; Used for blank objects, dealocate its array to prevent memory leaks
; ---------------------------------------------------------------------------
; loc_D24A:
Obj_Null:
		bra.w	DeleteObject

;=============================================================================== 
; Sub Routine ObjectFall
; [ Begin ]                         
;===============================================================================                 
ObjectFall: ; loc_D24E:
                move.l  $0008(A0), D2
                move.l  $000C(A0), D3
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A0), D0
                addi.w  #$0038, $0012(A0)
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A0)
                move.l  D3, $000C(A0)
                rts
;=============================================================================== 
; Sub Routine ObjectFall
; [ End ]                         
;===============================================================================  
                
;=============================================================================== 
; Sub Routine SpeedToPos
; [ Begin ]                         
;===============================================================================               
SpeedToPos: ; loc_D27A:
                move.l  $0008(A0), D2
                move.l  $000C(A0), D3
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A0)
                move.l  D3, $000C(A0)
                rts     
;=============================================================================== 
; Sub Routine SpeedToPos
; [ End ]                         
;=============================================================================== 
 
;=============================================================================== 
; Sub Routine MarkObjGone
; [ Begin ]                         
;===============================================================================                           
MarkObjGone: ; loc_D2A0:
                tst.w   ($FFFFFFD8).w
                beq.s   loc_D2AA
                bra     DisplaySprite           ; loc_D3C2
loc_D2AA:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_D2C2
                bra     DisplaySprite           ; loc_D3C2
loc_D2C2:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_D2D4
                bclr    #$07, $02(A2, D0)
loc_D2D4:
                bra     DeleteObject            ; loc_D3B4
loc_D2D8:                
                tst.w   ($FFFFFFD8).w
                beq.s   loc_D2E2
                bra     DisplaySprite           ; loc_D3C2
loc_D2E2:
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_D2F6
                bra     DisplaySprite           ; loc_D3C2
loc_D2F6:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_D308
                bclr    #$07, $02(A2, D0)
loc_D308:
                bra     DeleteObject            ; loc_D3B4
loc_D30C:                 
                tst.w   ($FFFFFFD8).w
                beq.s   loc_D314
                rts
loc_D314:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_D32A
                rts
loc_D32A:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_D33C
                bclr    #$07, $02(A2, D0)
loc_D33C:
                bra     DeleteObject            ; loc_D3B4
loc_D340:                
                tst.w   ($FFFFFFD8).w
                bne.s   loc_D374
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_D35E
                bra     DisplaySprite           ; loc_D3C2
loc_D35E:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_D370
                bclr    #$07, $02(A2, D0)
loc_D370:
                bra     DeleteObject            ; loc_D3B4
loc_D374:
                move.w  $0008(A0), D0
                andi.w  #$FF00, D0
                move.w  D0, D1
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0300, D0
                bhi     loc_D38E
                bra     DisplaySprite           ; loc_D3C2
loc_D38E:
                sub.w   ($FFFFF7DC).w, D1
                cmpi.w  #$0300, D1
                bhi     loc_D39E
                bra     DisplaySprite           ; loc_D3C2
loc_D39E:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_D3B0
                bclr    #$07, $02(A2, D0)
loc_D3B0:
                bra     DeleteObject            ; loc_D3B4
;=============================================================================== 
; Sub Routine MarkObjGone
; [ End ]                         
;===============================================================================                 

;=============================================================================== 
; Sub Routine DeleteObject
; [ Begin ]                         
;===============================================================================                 
DeleteObject:  ; loc_D3B4: ; Delete Object / Null Object
                move.l  A0, A1
loc_D3B6:                
                moveq   #$00, D1
                moveq   #$0F, D0  
loc_D3BA:
                move.l  D1, (A1)+
                dbra    D0, loc_D3BA
                rts   
;=============================================================================== 
; Sub Routine DeleteObject
; [ End ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine DisplaySprite
; [ Begin ]                         
;===============================================================================                                   
DisplaySprite: ; loc_D3C2: ; Display Object
                lea     ($FFFFAC00).w, A1
                move.w  $0018(A0), D0
                lsr.w   #$01, D0
                andi.w  #$0380, D0
                adda.w  D0, A1
                cmpi.w  #$007E, (A1)
                bcc.s   loc_D3DE
                addq.w  #$02, (A1)
                adda.w  (A1), A1
                move.w  A0, (A1)
loc_D3DE:
                rts
;=============================================================================== 
; Sub Routine DisplaySprite
; [ End ]                         
;===============================================================================
 
;=============================================================================== 
; Sub Routine DisplaySprite
; [ Begin ]                         
;===============================================================================                   
DisplayA1Sprite: ; loc_D3E0:
                lea     ($FFFFAC00).w, A2
                move.w  $0018(A1), D0
                lsr.w   #$01, D0
                andi.w  #$0380, D0
                adda.w  D0, A2
                cmpi.w  #$007E, (A2)
                bcc.s   loc_D3FC
                addq.w  #$02, (A2)
                adda.w  (A2), A2
                move.w  A1, (A2)
loc_D3FC:
                rts
;=============================================================================== 
; Sub Routine DisplaySprite
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine DisplaySprite_Param
; [ Begin ]                         
;===============================================================================   
DisplaySprite_Param: ;  loc_D3FE:
                lea     ($FFFFAC00).w, A1
                adda.w  D0, A1
                cmpi.w  #$007E, (A1)
                bcc.s   loc_D410
                addq.w  #$02, (A1)
                adda.w  (A1), A1
                move.w  A0, (A1)
loc_D410:
                rts   
;=============================================================================== 
; Sub Routine DisplaySprite_Param
; [ End ]                         
;=============================================================================== 
                  
;=============================================================================== 
; Sub Routine AnimateSprite
; [ Begin ]                         
;===============================================================================                   
AnimateSprite: ; loc_D412:
                moveq   #$00, D0
                move.b  $001C(A0), D0
                cmp.b   $001D(A0), D0
                beq.s   loc_D42E
                move.b  D0, $001D(A0)
                move.b  #$00, $001B(A0)
                move.b  #$00, $001E(A0)
loc_D42E:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_D468
                add.w   D0, D0
                adda.w  $00(A1, D0), A1
                move.b  (A1), $001E(A0)
                moveq   #$00, D1
                move.b  $001B(A0), D1
                move.b  $01(A1, D1), D0
                bmi.s   loc_D46A
loc_D44A: 
                andi.b  #$7F, D0
                move.b  D0, $001A(A0)
                move.b  $0022(A0), D1
                andi.b  #$03, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                addq.b  #$01, $001B(A0)
loc_D468:
                rts
loc_D46A:
                addq.b  #$01, D0
                bne.s   loc_D47A
                move.b  #$00, $001B(A0)
                move.b  $0001(A1), D0
                bra.s   loc_D44A
loc_D47A:
                addq.b  #$01, D0 
                bne.s   loc_D48E
                move.b  $02(A1, D1), D0
                sub.b   D0, $001B(A0)
                sub.b   D0, D1
                move.b  $01(A1, D1), D0
                bra.s   loc_D44A
loc_D48E:
                addq.b  #$01, D0
                bne.s   loc_D49A
                move.b  $02(A1, D1), $001C(A0)
                rts
loc_D49A:
                addq.b  #$01, D0
                bne.s   loc_D4AE
                addq.b  #$02, $0024(A0)
                move.b  #$00, $001E(A0)
                addq.b  #$01, $001B(A0)
                rts
loc_D4AE:
                addq.b  #$01, D0
                bne.s   loc_D4BE
                move.b  #$00, $001B(A0)
                clr.b   $0025(A0)
                rts
loc_D4BE:
                addq.b  #$01, D0
                bne.s   loc_D4C8
                addq.b  #$02, $0025(A0)
                rts
loc_D4C8:
                rts
;=============================================================================== 
; Sub Routine AnimateSprite
; [ End ]                         
;===============================================================================   
               
;=============================================================================== 
; Sub Routine Build_Sprites
; [ Begin ]                         
;===============================================================================               
BldSpr_ScrPos: ; loc_D4CA:
                dc.l    $00000000, $FFFFEEF0, $FFFFEE08, $FFFFEE18                                  
Build_Sprites: ; loc_D4DA:
                tst.w   ($FFFFFFD8).w
                bne     Build_Sprites_2p        ; loc_D824
                lea     ($FFFFF800).w, A2
                moveq   #$00, D5
                moveq   #$00, D4
                tst.b   ($FFFFF711).w
                beq.s   loc_D4F4
                bsr     loc_E01C
loc_D4F4:
                lea     ($FFFFAC00).w, A4
                moveq   #$07, D7
loc_D4FA:                
                tst.w   (A4)
                beq     loc_D5D0
                moveq   #$02, D6
loc_D502:                
                move.w  $00(A4, D6), A0
                tst.b   (A0)
                beq     loc_D5F2 
                tst.l   $0004(A0)
                beq     loc_D5F2
                andi.b  #$7F, $0001(A0)
                move.b  $0001(A0), D0
                move.b  D0, D4
                btst    #$06, D0
                bne     loc_D5F4
                andi.w  #$000C, D0
                beq.s   loc_D580
                move.l  BldSpr_ScrPos(PC, D0), A1  ; loc_D4CA
                moveq   #$00, D0
                move.b  $0019(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A1), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     loc_D5C8
                move.w  D3, D1                   
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge     loc_D5C8
                addi.w  #$0080, D3
                btst    #$04, D4
                beq.s   loc_D58A
                moveq   #$00, D0
                move.b  $0016(A0), D0
                move.w  $000C(A0), D2                 
                sub.w   $0004(A1), D2
                move.w  D2, D1
                add.w   D0, D1
                bmi.s   loc_D5C8
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge.s   loc_D5C8
                addi.w  #$0080, D2
                bra.s   loc_D5A2
loc_D580:                 
                move.w  $000A(A0), D2
                move.w  $0008(A0), D3
                bra.s   loc_D5A2
loc_D58A:
                move.w  $000C(A0), D2
                sub.w   $0004(A1), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   loc_D5C8
                cmpi.w  #$0180, D2
                bcc.s   loc_D5C8
loc_D5A2:
                move.l  $0004(A0), A1
                moveq   #$00, D1
                btst    #$05, D4
                bne.s   loc_D5BE
                move.b  $001A(A0), D1
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   loc_D5C2
loc_D5BE:
                bsr     loc_D6D8
loc_D5C2:                
                ori.b   #$80, $0001(A0)
loc_D5C8:                
                addq.w  #$02, D6                
                subq.w  #$02, (A4)
                bne     loc_D502    
loc_D5D0:
                lea     $0080(A4), A4
                dbra    D7, loc_D4FA  
                move.b  D5, ($FFFFF62C).w
                cmpi.b  #$50, D5
                beq.s   loc_D5EA
                move.l  #$00000000, (A2)
                rts
loc_D5EA:
                move.b  #$00, -5(A2)
                rts
loc_D5F2:
                bra.s   loc_D5C8             
loc_D5F4:
                move.l  A4, -(A7)
                lea     ($FFFFEE00).w, A4
                move.w  $0002(A0), A3
                move.l  $0004(A0), A5
                moveq   #$00, D0
                move.b  $000E(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A4), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     loc_D6CA
                move.w  D3, D1
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge     loc_D6CA
                addi.w  #$0080, D3
                btst    #$04, D4
                beq.s   loc_D652
                moveq   #$00, D0
                move.b  $0014(A0), D0
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                move.w  D2, D1
                add.w   D0, D1
                bmi     loc_D6CA
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge.s   loc_D6CA
                addi.w  #$0080, D2           
                bra.s   loc_D66A
loc_D652:                
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   loc_D6CA
                cmpi.w  #$0180, D2
                bcc.s   loc_D6CA
loc_D66A:                
                moveq   #$00, D1
                move.b  $000B(A0), D1
                beq.s   loc_D684
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   loc_D684
                bsr     loc_D6D0
loc_D684:
                ori.b   #$80, $0001(A0)
                lea     $0010(A0), A6
                moveq   #$00, D0
                move.b  $000F(A0), D0
                subq.w  #$01, D0
                bcs.s   loc_D6CA
loc_D698:                
                swap.w  D0
                move.w  (A6)+, D3
                sub.w   (A4), D3
                addi.w  #$0080, D3
                move.w  (A6)+, D2
                sub.w   $0004(A4), D2
                addi.w  #$0080, D2
                addq.w  #$01, A6
                moveq   #$00, D1
                move.b  (A6)+, D1
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   loc_D6C4
                bsr     loc_D6D0
loc_D6C4:
                swap.w  D0
                dbra    D0, loc_D698                 
loc_D6CA:
                move.l  (A7)+, A4
                bra     loc_D5C8
loc_D6D0:
                cmpi.b  #$50, D5
                bcs.s   loc_D6F0
                rts
loc_D6D8:
                move.w  $0002(A0), A3
                cmpi.b  #$50, D5
                bcc.s   loc_D718
                btst    #$00, D4
                bne.s   loc_D71A
                btst    #$01, D4
                bne     loc_D77A
loc_D6F0:
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                move.w  (A1)+, D0
                add.w   A3, D0
                move.w  D0, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   loc_D712
                addq.w  #$01, D0
loc_D712:
                move.w  D0, (A2)+
                dbra    D1, loc_D6F0
loc_D718:
                rts   
loc_D71A:
                btst    #$01, D4
                bne     loc_D7C2
loc_D722:                
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  D4, (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$0800, D0
                move.w  D0, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                neg.w   D0
                move.b  loc_D75A(PC, D4), D4
                sub.w   D4, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   loc_D752
                addq.w  #$01, D0
loc_D752:
                move.w  D0, (A2)+
                dbra    D1, loc_D722
                rts
loc_D75A:
                dc.b    $08, $08, $08, $08, $10, $10, $10, $10, $18, $18, $18, $18, $20, $20, $20, $20
loc_D76A:                
                dc.b    $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20
loc_D77A:
                move.b  (A1)+, D0
                move.b  (A1), D4
                ext.w   D0
                neg.w   D0
                move.b  loc_D76A(PC, D4), D4
                sub.w   D4, D0
                add.w   D2, D0                
                move.w  D0, (A2)+
                move.b  (A1)+, (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$1000, D0
                move.w  D0, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   loc_D7AA
                addq.w  #$01, D0
loc_D7AA:
                move.w  D0, (A2)+  
                dbra    D1, loc_D77A                                    
                rts 
loc_D7B2:                
                dc.b    $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20
loc_D7C2:
                move.b  (A1)+, D0
                move.b  (A1), D4
                ext.w   D0
                neg.w   D0
                move.b  loc_D7B2(PC, D4), D4
                sub.w   D4, D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  D4, (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$1800, D0
                move.w  D0, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                neg.w   D0
                move.b  loc_D804(PC, D4), D4
                sub.w   D4, D0    
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   loc_D7FC
                addq.w  #$01, D0
loc_D7FC:
                move.w  D0, (A2)+
                dbra    D1, loc_D7C2
                rts
loc_D804:
                dc.b    $08, $08, $08, $08, $10, $10, $10, $10, $18, $18, $18, $18, $20, $20, $20, $20
;=============================================================================== 
; Sub Routine Build_Sprites
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine Build_Sprites_2p
; [ Begin ]                         
;===============================================================================  
BldSpr_ScrPos_2p: ; loc_D814:                
                dc.l    $00000000, $FFFFEE00, $FFFFEE08, $FFFFEE18
Build_Sprites_2p: ; loc_D824:
                tst.w   ($FFFFF644).w
                bne.s   Build_Sprites_2p        ; loc_D824
                lea     ($FFFFF800).w, A2
                moveq   #$02, D5
                moveq   #$00, D4
                move.l  #$01D80F01, (A2)+
                move.l  #$00000001, (A2)+
                move.l  #$01D80F02, (A2)+
                move.l  #$00000000, (A2)+
                tst.b   ($FFFFF711).w
                beq.s   loc_D854
                bsr     loc_E098
loc_D854:
                lea     ($FFFFAC00).w, A4
                moveq   #$07, D7
loc_D85A:                
                move.w  (A4), D0
                beq     loc_D932
                move.w  D0, -(A7)
                moveq   #$02, D6
loc_D864:                
                move.w  $00(A4, D6), A0
                tst.b   (A0)
                beq     loc_D928
                andi.b  #$7F, $0001(A0)
                move.b  $0001(A0), D0
                move.b  D0, D4
                btst    #$06, D0
                bne     loc_DA6C
                andi.w  #$000C, D0
                beq.s   loc_D8D8
                move.l  BldSpr_ScrPos_2p(PC, D0), A1  ; loc_D814
                moveq   #$00, D0
                move.b  $0019(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A1), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     loc_D928
                move.w  D3, D1
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge.s   loc_D928
                addi.w  #$0080, D3
                btst    #$04, D4  
                beq.s   loc_D8E6
                moveq   #$00, D0
                move.b  $0016(A0), D0
                move.w  $000C(A0), D2
                sub.w   $0004(A1), D2
                move.w  D2, D1
                add.w   D0, D1
                bmi.s   loc_D928
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge.s   loc_D928
                addi.w  #$0100, D2
                bra.s   loc_D902
loc_D8D8:                
                move.w  $000A(A0), D2
                move.w  $0008(A0), D3
                addi.w  #$0080, D2
                bra.s   loc_D902
loc_D8E6:                
                move.w  $000C(A0), D2
                sub.w   $0004(A1), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   loc_D928
                cmpi.w  #$0180, D2
                bcc.s   loc_D928
                addi.w  #$0080, D2
loc_D902:
                move.l  $0004(A0), A1
                moveq   #$00, D1
                btst    #$05, D4
                bne.s   loc_D91E
                move.b  $001A(A0), D1
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #1, D1
                bmi.s   loc_D922
loc_D91E:
                bsr     loc_DC70
loc_D922:
                ori.b   #$80, $0001(A0)
loc_D928:                
                addq.w  #$02, D6
                subq.w  #$02, (A7)
                bne     loc_D864
                addq.w  #$02, A7
loc_D932:                
                lea     $0080(A4), A4
                dbra    D7, loc_D85A
                move.b  D5, ($FFFFF62C).w
                cmpi.b  #$50, D5
                bcc.s   loc_D94C
                move.l  #$00000000, (A2)
                bra.s   loc_D964
loc_D94C:
                move.b  #$00, -5(A2)
                bra.s   loc_D964
loc_D954:
                dc.b    $00, $00, $00, $00, $FF, $FF, $EE, $20, $FF, $FF, $EE, $28, $FF, $FF, $EE, $38                           
loc_D964:
                lea     ($FFFFDD00).w, A2
                moveq   #$00, D5
                moveq   #$00, D4
                tst.b   ($FFFFF711).w
                beq.s   loc_D976
                bsr     loc_E0AE
loc_D976:
                lea     ($FFFFAC00).w, A4
                moveq   #$07, D7
loc_D97C:                
                tst.w   (A4)
                beq     loc_DA4A
                moveq   #$02, D6
loc_D984:                
                move.w  $00(A4, D6), A0
                tst.b   (A0)
                beq     loc_DA42
                move.b  $0001(A0), D0
                move.b  D0, D4
                btst    #$06, D0
                bne     loc_DB4E
                andi.w  #$000C, D0
                beq.s   loc_D9F2
                move.l  loc_D954(PC, D0), A1
                moveq   #$00, D0
                move.b  $0019(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A1), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     loc_DA42
                move.w  D3, D1
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge.s   loc_DA42
                addi.w  #$0080, D3
                btst    #$04, D4
                beq.s   loc_DA00
                moveq   #$00, D0
                move.b  $0016(A0), D0
                move.w  $000C(A0), D2
                sub.w   $0004(A1), D2
                move.w  D2, D1 
                add.w   D0, D1
                bmi.s   loc_DA42
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge.s   loc_DA42
                addi.w  #$01E0, D2
                bra.s   loc_DA1C
loc_D9F2:
                move.w  $000A(A0), D2
                move.w  $0008(A0), D3
                addi.w  #$0160, D2
                bra.s   loc_DA1C
loc_DA00:
                move.w  $000C(A0), D2
                sub.w   $0004(A1), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   loc_DA42
                cmpi.w  #$0180, D2
                bcc.s   loc_DA42
                addi.w  #$0160, D2
loc_DA1C:
                move.l  $0004(A0), A1
                moveq   #$00, D1
                btst    #$05, D4
                bne.s   loc_DA38
                move.b  $001A(A0), D1
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   loc_DA3C
loc_DA38:
                bsr     loc_DC70
loc_DA3C:
                ori.b   #$80, $0001(A0)
loc_DA42:                
                addq.w  #$02, D6
                subq.w  #$02, (A4)
                bne     loc_D984
loc_DA4A:                
                lea     $0080(A4), A4
                dbra    D7, loc_D97C                 
                move.b  D5, ($FFFFF62C).w
                cmpi.b  #$50, D5
                beq.s   loc_DA64
                move.l  #$00000000, (A2)
                rts
loc_DA64:
                move.b  #$00, -5(A2)
                rts
loc_DA6C:
                move.l  A4, -(A7)
                lea     ($FFFFEE00).w, A4
                move.w  $0002(A0), A3
                move.l  $0004(A0), A5
                moveq   #$00, D0
                move.b  $000E(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A4), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     loc_DB48
                move.w  D3, D1
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge     loc_DB48
                addi.w  #$0080, D3
                btst    #$04, D4
                beq.s   loc_DACC
                moveq   #$00, D0
                move.b  $0014(A0), D0
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                move.w  D2, D1
                add.w   D0, D1
                bmi     loc_DB48
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge     loc_DB48
                addi.w  #$0100, D2
                bra.s   loc_DAE8
loc_DACC:
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   loc_DB48
                cmpi.w  #$0180, D2
                bcc.s   loc_DB48
                addi.w  #$0080, D2
loc_DAE8:                
                moveq   #$00, D1
                move.b  $000B(A0), D1
                beq.s   loc_DB02
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   loc_DB02
                bsr     loc_DC68
loc_DB02:
                ori.b   #$80, $0001(A0)
                lea     $0010(A0), A6
                moveq   #$00, D0
                move.b  $000F(A0), D0
                subq.w  #$01, D0
                bcs.s   loc_DB48
loc_DB16:                
                swap.w  D0
                move.w  (A6)+, D3
                sub.w   (A4), D3
                addi.w  #$0080, D3
                move.w  (A6)+, D2
                sub.w   $0004(A4), D2
                addi.w  #$0100, D2
                addq.w  #$01, A6
                moveq   #$00, D1
                move.b  (A6)+, D1
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   loc_DB42
                bsr     loc_DC68
loc_DB42:
                swap.w  D0
                dbra    D0, loc_DB16
loc_DB48:
                move.l  (A7)+, A4
loc_DB4A:                
                bra     loc_D928                     
loc_DB4E:
                move.l  A4, -(A7)
                lea     ($FFFFEE20).w, A4
                move.w  $0002(A0), A3
                move.l  $0004(A0), A5
                moveq   #$00, D0
                move.b  $000E(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A4), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     loc_DC2A
                move.w  D3, D1
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge     loc_DC2A
                addi.w  #$0080, D3
                btst    #$04, D4
                beq.s   loc_DBAE
                moveq   #$00, D0
                move.b  $0014(A0), D0
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                move.w  D2, D1
                add.w   D0, D1
                bmi     loc_DC2A
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge     loc_DC2A
                addi.w  #$01E0, D2
                bra.s   loc_DBCA
loc_DBAE:                
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   loc_DC2A
                cmpi.w  #$0180, D2
                bcc.s   loc_DC2A
                addi.w  #$0160, D2
loc_DBCA:
                moveq   #$00, D1
                move.b  $000B(A0), D1
                beq.s   loc_DBE4
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #1, D1
                bmi.s   loc_DBE4
                bsr     loc_DC68
loc_DBE4: 
                ori.b   #$80, $0001(A0)
                lea     $0010(A0), A6
                moveq   #$00, D0
                move.b  $000F(A0), D0
                subq.w  #$01, D0
                bcs.s   loc_DC2A
loc_DBF8:                
                swap.w  D0
                move.w  (A6)+, D3
                sub.w   (A4), D3
                addi.w  #$0080, D3
                move.w  (A6)+, D2
                sub.w   $0004(A4), D2
                addi.w  #$01E0, D2
                addq.w  #$01, A6
                moveq   #$00, D1
                move.b  (A6)+, D1
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   loc_DC24
                bsr     loc_DC68
loc_DC24:
                swap.w  D0
                dbra    D0, loc_DBF8    
loc_DC2A:
                move.l  (A7)+, A4
                bra     loc_DA42
;=============================================================================== 
; Sub Routine Build_Sprites_2p
; [ End ]                         
;===============================================================================                  

;=============================================================================== 
; Sub Routine Adjust2PArtPointer         
; [ Begin ]                               2P Mode Objects Attributes #1
;===============================================================================        
; ModifySpriteAttr_2P:          
Adjust2PArtPointer: ; loc_DC30: 
                tst.w   ($FFFFFFD8).w
                beq.s   loc_DC4A
                move.w  $0002(A0), D0
                andi.w  #$07FF, D0
                lsr.w   #$01, D0
                andi.w  #$F800, $0002(A0)
                add.w   D0, $0002(A0)
loc_DC4A:
                rts  
;=============================================================================== 
; Sub Routine Adjust2PArtPointer         
; [ End ]                                 2P Mode Objects Attributes #1
;===============================================================================                 

;=============================================================================== 
; Sub Routine Adjust2PArtPointer         
; [ Begin ]                               2P Mode Objects Attributes #2
;===============================================================================                  
; ModifyA1SpriteAttr_2P:
Adjust2PArtPointer2: ; loc_DC4C: 
                tst.w   ($FFFFFFD8).w
                beq.s   ModifySpriteAttr_Not2pmode ; loc_DC66
                move.w  $0002(A1), D0
                andi.w  #$07FF, D0
                lsr.w   #$01, D0
                andi.w  #$F800, $0002(A1)
                add.w   D0, $0002(A1)
ModifySpriteAttr_Not2pmode ; loc_DC66:
                rts 
;=============================================================================== 
; Sub Routine Adjust2PArtPointer         
; [ End ]                               2P Mode Objects Attributes #2
;===============================================================================
                                                  
loc_DC68:
                cmpi.b  #$50, D5
                bcs.s   loc_DC88
                rts
loc_DC70:
                move.w  $0002(A0), A3
                cmpi.b  #$50, D5
                bcc.s   loc_DCB4
                btst    #$00, D4
                bne.s   loc_DCC6
                btst    #$01, D4
                bne     loc_DD28
loc_DC88:                
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4    
                move.b  loc_DCB6(PC, D4), (A2)+             
                addq.b  #$01, D5
                move.b  D5, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   A3, D0
                move.w  D0, (A2)+
                move.w  (A1)+, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   loc_DCAE
                addq.w  #$01, D0
loc_DCAE:
                move.w  D0, (A2)+
                dbra    D1, loc_DC88
loc_DCB4:                
                rts                
loc_DCB6:               
                dc.b    $00, $00, $01, $01, $04, $04, $05, $05, $08, $08, $09, $09, $0C, $0C, $0D, $0D
loc_DCC6:
                btst    #$01, D4
                bne     loc_DD84
loc_DCCE:                
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  loc_DCB6(PC, D4), (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$0800, D0
                move.w  D0, (A2)+
                move.w  (A1)+, D0
                neg.w   D0
                move.b  loc_DD08(PC, D4), D4
                sub.w   D4, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   loc_DD00
                addq.w  #1, D0
loc_DD00:
                move.w  D0, (A2)+
                dbra    D1, loc_DCCE
                rts      
loc_DD08:
                dc.b    $08, $08, $08, $08, $10, $10, $10, $10, $18, $18, $18, $18, $20, $20, $20, $20  
loc_DD18: 
                dc.b    $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20
loc_DD28:
                move.b  (A1)+, D0
                move.b  (A1), D4
                ext.w   D0
                neg.w   D0
                move.b  loc_DD18(PC, D4), D4
                sub.w   D4, D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  loc_DD64(PC, D4), (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$1000, D0
                move.w  D0, (A2)+
                move.w  (A1)+, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   loc_DD5C
                addq.w  #$01, D0   
loc_DD5C:
                move.w  D0, (A2)+
                dbra    D1, loc_DD28
                rts           
loc_DD64:
                dc.b    $00, $00, $01, $01, $04, $04, $05, $05, $08, $08, $09, $09, $0C, $0C, $0D, $0D 
loc_DD74:  
                dc.b    $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20
loc_DD84:
                move.b  (A1)+, D0
                move.b  (A1), D4
                ext.w   D0
                neg.w   D0
                move.b  loc_DD74(PC, D4), D4
                sub.w   D4, D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  loc_DD64(PC, D4), (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$1800, D0
                move.w  D0, (A2)+
                move.w  (A1)+, D0
                neg.w   D0
                move.b  loc_DDC8(PC, D4), D4
                sub.w   D4, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   loc_DDC0
                addq.w  #$01, D0
loc_DDC0:
                move.w  D0, (A2)+
                dbra    D1, loc_DD84
                rts               
loc_DDC8:
                dc.b    $08, $08, $08, $08, $10, $10, $10, $10, $18, $18, $18, $18, $20, $20, $20, $20
loc_DDD8:
                move.w  $0008(A0), D0
                sub.w   ($FFFFEE00).w, D0
                bmi.s   loc_DDFC
                cmpi.w  #$0140, D0
                bge.s   loc_DDFC
                move.w  $000C(A0), D1
                sub.w   ($FFFFEE04).w, D1
                bmi.s   loc_DDFC
                cmpi.w  #$00E0, D1
                bge.s   loc_DDFC
                moveq   #$00, D0
                rts
loc_DDFC:
                moveq   #$01, D0
                rts   
;loc_DE00:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  $0008(A0), D0
                sub.w   ($FFFFEE00).w, D0
                add.w   D1, D0
                bmi.s   loc_DE30
                add.w   D1, D1
                sub.w   D1, D0
                cmpi.w  #$0140, D0
                bge.s   loc_DE30
                move.w  $000C(A0), D1
                sub.w   ($FFFFEE04).w, D1
                bmi.s   loc_DE30
                cmpi.w  #$00E0, D1
                bge.s   loc_DE30
                moveq   #$00, D0
                rts
loc_DE30:
                moveq   #$01, D0
                rts
;========================= Load Ring List - [ Start ] ==========================                 
Load_Ring_Pos: ; loc_DE34:
                moveq   #$00, D0
                move.b  ($FFFFF710).w, D0
                move.w  loc_DE42(PC, D0), D0
                jmp     loc_DE42(PC, D0)
loc_DE42:  
                dc.w    loc_DE46-loc_DE42
                dc.w    loc_DE90-loc_DE42
loc_DE46: 
                addq.b  #$02, ($FFFFF710).w
                bsr     loc_E140
                lea     ($FFFFE800).w, A1
                move.w  ($FFFFEE00).w, D4
                subq.w  #$08, D4
                bhi.s   loc_DE62
                moveq   #$01, D4
                bra.s   loc_DE62
loc_DE5E:                
                lea     $0006(A1), A1
loc_DE62:
                cmp.w   $0002(A1), D4
                bhi.s   loc_DE5E
                move.w  A1, ($FFFFF712).w
                move.w  A1, ($FFFFF716).w
                addi.w  #$0150, D4
                bra.s   loc_DE7A
loc_DE76:                
                lea     $0006(A1), A1
loc_DE7A:
                cmp.w   $0002(A1), D4
                bhi.s   loc_DE76   
                move.w  A1, ($FFFFF714).w
                move.w  A1, ($FFFFF718).w
                move.b  #$01, ($FFFFF711).w
                rts
loc_DE90:
                lea     ($FFFFEF80).w, A2
                move.w  (A2)+, D1
                subq.w  #$01, D1
                bcs.s   loc_DEC6
loc_DE9A:                
                move.w  (A2)+, D0
                beq.s   loc_DE9A
                move.w  D0, A1
                subq.b  #$01, (A1)
                bne.s   loc_DEC2
                move.b  #$06, (A1)
                addq.b  #$01, $0001(A1)
                cmpi.b  #$08, $0001(A1)
                bne.s   loc_DEC2
                move.w  #$FFFF, (A1)
                move.w  #$0000, -2(A2)
                subq.w  #$01, ($FFFFEF80).w
loc_DEC2:
                dbra    D1, loc_DE9A
loc_DEC6:                
                move.w  ($FFFFF712).w, A1
                move.w  ($FFFFEE00).w, D4
                subq.w  #$08, D4
                bhi.s   loc_DEDA
                moveq   #$01, D4
                bra.s   loc_DEDA
loc_DED6:                
                lea     $0006(A1), A1
loc_DEDA:
                cmp.w   $0002(A1), D4
                bhi.s   loc_DED6
                bra.s   loc_DEE4
loc_DEE2:                
                subq.w  #$06, A1
loc_DEE4:
                cmp.w   -4(A1), D4
                bls.s   loc_DEE2
                move.w  A1, ($FFFFF712).w
                move.w  ($FFFFF714).w, A2
                addi.w  #$0150, D4
                bra.s   loc_DEFC
loc_DEF8:                
                lea     $0006(A2), A2
loc_DEFC:
                cmp.w   $0002(A2), D4
                bhi.s   loc_DEF8
                bra.s   loc_DF06
loc_DF04:                
                subq.w  #$06, A2
loc_DF06:
                cmp.w   -4(A2), D4
                bls.s   loc_DF04
                move.w  A2, ($FFFFF714).w
                tst.w   ($FFFFFFD8).w
                bne.s   loc_DF20
                move.w  A1, ($FFFFF716).w
                move.w  A2, ($FFFFF718).w
                rts
loc_DF20:
                move.w  ($FFFFF716).w, A1
                move.w  ($FFFFEE20).w, D4
                subq.w  #$08, D4
                bhi.s   loc_DF34
                moveq   #$01, D4
                bra.s   loc_DF34
loc_DF30:                
                lea     $0006(A1), A1
loc_DF34:
                cmp.w   $0002(A1), D4
                bhi.s   loc_DF30
                bra.s   loc_DF3E
loc_DF3C:                
                subq.w  #$06, A1 
loc_DF3E:
                cmp.w   -4(A1), D4
                bls.s   loc_DF3C
                move.w  A1, ($FFFFF716).w
                move.w  ($FFFFF718).w, A2
                addi.w  #$0150, D4
                bra.s   loc_DF56
loc_DF52:
                lea     $0006(A2), A2
loc_DF56:
                cmp.w   $0002(A2), D4
                bhi.s   loc_DF52
                bra.s   loc_DF60
loc_DF5E:
                subq.w  #$06, A2   
loc_DF60:
                cmp.w   -4(A2), D4
                bls.s   loc_DF5E
                move.w  A2, ($FFFFF718).w
                rts
                
;===============================================================================                
TouchRings: ; loc_DF6C:
                move.w  ($FFFFF712).w, A1
                move.w  ($FFFFF714).w, A2
                cmpa.w  #$B000, A0
                beq.s   loc_DF82
                move.w  ($FFFFF716).w, A1
                move.w  ($FFFFF718).w, A2
loc_DF82:
                cmpa.l  A1, A2
                beq     loc_E01A
                cmpi.w  #$005A, $0030(A0)
                bcc     loc_E01A
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                subi.w  #$0008, D2
                moveq   #$00, D5
                move.b  $0016(A0), D5
                subq.b  #$03, D5
                sub.w   D5, D3
                cmpi.b  #$39, $001A(A0)
                bne.s   loc_DFB6
                addi.w  #$000C, D3
                moveq   #$0A, D5
loc_DFB6:
                move.w  #$0006, D1
                move.w  #$000C, D6
                move.w  #$0010, D4
                add.w   D5, D5
loc_DFC4:                
                tst.w   (A1)
                bne     loc_E010
                move.w  $0002(A1), D0
                sub.w   D1, D0
                sub.w   D2, D0
                bcc.s   loc_DFDC
                add.w   D6, D0
                bcs.s   loc_DFE2
                bra     loc_E010
loc_DFDC:
                cmp.w   D4, D0
                bhi     loc_E010
loc_DFE2:                
                move.w  $0004(A1), D0
                sub.w   D1, D0
                sub.w   D3, D0
                bcc.s   loc_DFF4
                add.w   D6, D0
                bcs.s   loc_DFFA
                bra     loc_E010
loc_DFF4:
                cmp.w   D5, D0
                bhi     loc_E010
loc_DFFA:
                move.w  #$0604, (A1)
                bsr     CollectRing
                lea     ($FFFFEF82).w, A3
loc_E006:
                tst.w   (A3)+
                bne.s   loc_E006
                move.w  A1, -(A3)
                addq.w  #$01, ($FFFFEF80).w
loc_E010:
                lea     $0006(A1), A1
                cmpa.l  A1, A2
                bne     loc_DFC4
loc_E01A:
                rts                                  
loc_E01C:
                move.w  ($FFFFF712).w, A0
                move.w  ($FFFFF714).w, A4
                cmpa.l  A0, A4
                bne.s   loc_E02A
                rts
loc_E02A:
                lea     ($FFFFEE00).w, A3
loc_E02E:                
                tst.w   (A0)
                bmi     loc_E08C
                move.w  $0002(A0), D3
                sub.w   (A3), D3
                addi.w  #$0080, D3
                move.w  $0004(A0), D2
                sub.w   $0004(A3), D2
                addi.w  #$0008, D2
                bmi.s   loc_E08C
                cmpi.w  #$00F0, D2
                bge.s   loc_E08C
                addi.w  #$0078, D2
                lea     (loc_E200), A1
                moveq   #$00, D1
                move.b  $0001(A0), D1
                bne.s   loc_E068
                move.b  ($FFFFFEC3).w, D1
loc_E068:
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                move.w  (A1)+, D0
                addi.w  #$26BC, D0
                move.w  D0, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   D3, D0
                move.w  D0, (A2)+
loc_E08C:
                lea     $0006(A0), A0
                cmpa.l  A0, A4
                bne     loc_E02E  
                rts
loc_E098:
                lea     ($FFFFEE00).w, A3
                move.w  #$0078, D6
                move.w  ($FFFFF712).w, A0
                move.w  ($FFFFF714).w, A4
                cmpa.l  A0, A4
                bne.s   loc_E0C4
                rts
loc_E0AE:
                lea     ($FFFFEE20).w, A3
                move.w  #$0158, D6
                move.w  ($FFFFF716).w, A0
                move.w  ($FFFFF718).w, A4
                cmpa.l  A0, A4                
                bne.s   loc_E0C4
                rts
loc_E0C4:
                tst.w   (A0)
                bmi     loc_E124
                move.w  $0002(A0), D3
                sub.w   (A3), D3
                addi.w  #$0080, D3
                move.w  $0004(A0), D2
                sub.w   $0004(A3), D2
                addi.w  #$0088, D2
                bmi.s   loc_E124
                cmpi.w  #$0170, D2
                bge.s   loc_E124
                add.w   D6, D2
                lea     (loc_E200), A1
                moveq   #$00, D1
                move.b  $0001(A0), D1
                bne.s   loc_E0FC
                move.b  ($FFFFFEC3).w, D1
loc_E0FC:
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  loc_E130(PC, D4), (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                addi.w  #$235E, D0
                move.w  D0, (A2)+
                move.w  (A1)+, D0
                add.w   D3, D0
                move.w  D0, (A2)+
loc_E124:                
                lea     $0006(A0), A0
                cmpa.l  A0, A4
                bne     loc_E0C4
                rts     
loc_E130:
                dc.b    $00, $00, $01, $01, $04, $04, $05, $05, $08, $08, $09, $09, $0C, $0C, $0D, $0D  
loc_E140: ; Load Rings routine
                lea     ($FFFFE800).w, A1
                moveq   #$00, D0
                move.w  #$017F, D1
loc_E14A:
                move.l  D0, (A1)+
                dbra    D1, loc_E14A
                lea     ($FFFFEF80).w, A1
                move.w  #$000F, D1
loc_E158:
                move.l  D0, (A1)+
                dbra    D1, loc_E158
                moveq   #$00, D5
                moveq   #$00, D0
                move.w  ($FFFFFE10).w, D0
                ror.b   #$01, D0
                lsr.w   #$06, D0
                lea     (Rings_Layout), A1      ; loc_48000
                move.w  $00(A1, D0), D0
                lea     $00(A1, D0), A1
                lea     ($FFFFE806).w, A2
loc_E17C:                
                move.w  (A1)+, D2
                bmi.s   loc_E1C4
                move.w  (A1)+, D3
                bmi.s   loc_E1A4
                move.w  D3, D0
                rol.w   #$04, D0
                andi.w  #$0007, D0
                andi.w  #$0FFF, D3
loc_E190:                
                move.w  #$0000, (A2)+
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                addi.w  #$0018, D2
                addq.w  #$01, D5
                dbra    D0, loc_E190
                bra.s   loc_E17C
loc_E1A4:
                move.w  D3, D0
                rol.w   #$04, D0
                andi.w  #$0007, D0
                andi.w  #$0FFF, D3
loc_E1B0:                
                move.w  #$0000, (A2)+
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                addi.w  #$0018, D3
                addq.w  #$01, D5
                dbra    D0, loc_E1B0
                bra.s   loc_E17C
loc_E1C4:
                move.w  D5, ($FFFFFF40).w
                moveq   #-1, D0
                move.l  D0, (A2)+
                lea     ($FFFFE802).w, A1
                move.w  #$00FE, D3
loc_E1D4:
                move.w  D3, D4
                lea     $0006(A1), A2
                move.w  (A1), D0
loc_E1DC:
                tst.w   (A2)
                beq.s   loc_E1EE
                cmp.w   (A2), D0
                bls.s   loc_E1EE
                move.l  (A1), D1
                move.l  (A2), D0
                move.l  D0, (A1)
                move.l  D1, (A2)
                swap.w  D0
loc_E1EE:
                lea     $0006(A2), A2
                dbra    D4, loc_E1DC
                lea     $0006(A1), A1
                dbra    D3, loc_E1D4
                rts
loc_E200:    
                dc.w    loc_E210-loc_E200
                dc.w    loc_E218-loc_E200
                dc.w    loc_E220-loc_E200
                dc.w    loc_E228-loc_E200
                dc.w    loc_E230-loc_E200
                dc.w    loc_E238-loc_E200
                dc.w    loc_E240-loc_E200
                dc.w    loc_E248-loc_E200
loc_E210:
                dc.l    $F8050000, $0000FFF8
loc_E218:
                dc.l    $F8050004, $0002FFF8
loc_E220:
                dc.l    $F8010008, $0004FFFC
loc_E228:
                dc.l    $F8050804, $0802FFF8
loc_E230:
                dc.l    $F805000A, $0005FFF8
loc_E238:
                dc.l    $F805180A, $1805FFF8
loc_E240:
                dc.l    $F805080A, $0805FFF8
loc_E248: 
                dc.l    $F805100A, $1005FFF8
                
;======================== Load Object List - [ Start ] ========================                 
Load_Object_Pos: ; loc_E250:                 
                moveq   #$00, D0
                move.b  ($FFFFF76C).w, D0
                move.w  Load_Object_Pos_Index(PC, D0), D0 ; loc_E25E
                jmp     Load_Object_Pos_Index(PC, D0)     ; loc_E25E
Load_Object_Pos_Index: ; loc_E25E:                                
                dc.w    Load_Object_Pos_Sub_01-Load_Object_Pos_Index ; loc_E264
                dc.w    Load_Object_Pos_Sub_02-Load_Object_Pos_Index ; loc_E310
                dc.w    Load_Object_Pos_Sub_03-Load_Object_Pos_Index ; loc_E458
Load_Object_Pos_Sub_01: ; loc_E264:   
                addq.b  #$02, ($FFFFF76C).w
                move.w  ($FFFFFE10).w, D0
                ror.b   #$01, D0
                lsr.w   #$06, D0
                lea     (Objects_Layout), A0    ; loc_44000
                move.l  A0, A1
                adda.w  $00(A0, D0), A0
                move.l  A0, ($FFFFF770).w
                move.l  A0, ($FFFFF774).w
                move.l  A0, ($FFFFF778).w
                move.l  A0, ($FFFFF77C).w
                lea     ($FFFFFC00).w, A2
                move.w  #$0101, (A2)+
                move.w  #$005E, D0
loc_E298:
                clr.l   (A2)+
                dbra    D0, loc_E298
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D2
                move.w  ($FFFFEE00).w, D6
                subi.w  #$0080, D6
                bcc.s   loc_E2B0
                moveq   #$00, D6
loc_E2B0:
                andi.w  #$FF80, D6
                move.l  ($FFFFF770).w, A0
loc_E2B8:
                cmp.w   (A0), D6
                bls.s   loc_E2CA
                tst.b   $0004(A0)
                bpl.s   loc_E2C6
                move.b  (A2), D2
                addq.b  #$01, (A2)
loc_E2C6:
                addq.w  #$06, A0
                bra.s   loc_E2B8
loc_E2CA:
                move.l  A0, ($FFFFF770).w   
                move.l  A0, ($FFFFF778).w
                move.l  ($FFFFF774).w, A0
                subi.w  #$0080, D6
                bcs.s   loc_E2EE
loc_E2DC:
                cmp.w   (A0), D6
                bls.s   loc_E2EE
                tst.b   $0004(A0)
                bpl.s   loc_E2EA
                addq.b  #$01, $0001(A2)
loc_E2EA:
                addq.w  #$06, A0
                bra.s   loc_E2DC
loc_E2EE:
                move.l  A0, ($FFFFF774).w
                move.l  A0, ($FFFFF77C).w
                move.w  #$FFFF, ($FFFFF76E).w
                move.w  #$FFFF, ($FFFFF78C).w
                tst.w   ($FFFFFFD8).w
                beq.s   Load_Object_Pos_Sub_02  ; loc_E310
                addq.b  #$02, ($FFFFF76C).w
                bra     loc_E3DC
Load_Object_Pos_Sub_02: ;loc_E310:
                move.w  ($FFFFEE00).w, D1
                subi.w  #$0080, D1
                andi.w  #$FF80, D1
                move.w  D1, ($FFFFF7DA).w
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D2
                move.w  ($FFFFEE00).w, D6
                andi.w  #$FF80, D6
                cmp.w   ($FFFFF76E).w, D6
                beq     loc_E3DA
                bge.s   loc_E396
                move.w  D6, ($FFFFF76E).w
                move.l  ($FFFFF774).w, A0
                subi.w  #$0080, D6
                bcs.s   loc_E372
loc_E346:
                cmp.w   -6(A0), D6
                bge.s   loc_E372
                subq.w  #$06, A0
                tst.b   $0004(A0)
                bpl.s   loc_E35C
                subq.b  #$01, $0001(A2)
                move.b  $0001(A2), D2
loc_E35C:
                bsr     loc_E6C2
                bne.s   loc_E366
                subq.w  #$06, A0
                bra.s   loc_E346
loc_E366:
                tst.b   $0004(A0)
                bpl.s   loc_E370
                addq.b  #$01, $0001(A2)
loc_E370:
                addq.w  #$06, A0
loc_E372:                
                move.l  A0, ($FFFFF774).w
                move.l  ($FFFFF770).w, A0
                addi.w  #$0300, D6 
loc_E37E:
                cmp.w   -6(A0), D6
                bgt.s   loc_E390
                tst.b   -2(A0)
                bpl.s   loc_E38C
                subq.b  #$01, (A2)
loc_E38C:
                subq.w  #$06, A0
                bra.s   loc_E37E
loc_E390:
                move.l  A0, ($FFFFF770).w
                rts
loc_E396:
                move.w  D6, ($FFFFF76E).w
                move.l  ($FFFFF770).w, A0
                addi.w  #$0280, D6
loc_E3A2:
                cmp.w   (A0), D6
                bls.s   loc_E3B6
                tst.b   $0004(A0)
                bpl.s   loc_E3B0
                move.b  (A2), D2
                addq.b  #$01, (A2)
loc_E3B0:
                bsr     loc_E6C2
                beq.s   loc_E3A2
loc_E3B6:
                move.l  A0, ($FFFFF770).w
                move.l  ($FFFFF774).w, A0
                subi.w  #$0300, D6
                bcs.s   loc_E3D6
loc_E3C4:
                cmp.w   (A0), D6
                bls.s   loc_E3D6
                tst.b   $0004(A0)
                bpl.s   loc_E3D2
                addq.b  #$01, $0001(A2)
loc_E3D2:
                addq.w  #$06, A0
                bra.s   loc_E3C4
loc_E3D6:
                move.l  A0, ($FFFFF774).w
loc_E3DA:
                rts
loc_E3DC:
                moveq   #-1, D0
                move.l  D0, ($FFFFF780).w
                move.l  D0, ($FFFFF784).w
                move.l  D0, ($FFFFF788).w
                move.l  D0, ($FFFFF78C).w
                move.w  #$0000, ($FFFFF76E).w
                move.w  #$0000, ($FFFFF78C).w
                lea     ($FFFFFC00).w, A2
                move.w  (A2), ($FFFFF78E).w
                moveq   #$00, D2
                lea     ($FFFFFC00).w, A5
                lea     ($FFFFF770).w, A4
                lea     ($FFFFF786).w, A1
                lea     ($FFFFF789).w, A6
                moveq   #-2, D6
                bsr     loc_E570
                lea     ($FFFFF786).w, A1
                moveq   #-1, D6
                bsr     loc_E570
                lea     ($FFFFF786).w, A1
                moveq   #$00, D6
                bsr     loc_E570
                lea     ($FFFFF78E).w, A5
                lea     ($FFFFF778).w, A4
                lea     ($FFFFF789).w, A1
                lea     ($FFFFF786).w, A6
                moveq   #-2, D6
                bsr     loc_E570
                lea     ($FFFFF789).w, A1
                moveq   #-1, D6
                bsr     loc_E570
                lea     ($FFFFF789).w, A1
                moveq   #$00, D6
                bsr     loc_E570
Load_Object_Pos_Sub_03: ; loc_E458:
                move.w  ($FFFFEE00).w, D1
                andi.w  #$FF00, D1
                move.w  D1, ($FFFFF7DA).w
                move.w  ($FFFFEE20).w, D1
                andi.w  #$FF00, D1
                move.w  D1, ($FFFFF7DC).w
                move.b  ($FFFFEE00).w, D6
                andi.w  #$00FF, D6
                move.w  ($FFFFF76E).w, D0
                cmp.w   ($FFFFF76E).w, D6
                beq.s   loc_E498
                move.w  D6, ($FFFFF76E).w
                lea     ($FFFFFC00).w, A5
                lea     ($FFFFF770).w, A4
                lea     ($FFFFF786).w, A1
                lea     ($FFFFF789).w, A6
                bsr.s   loc_E4C2
loc_E498:
                move.b  ($FFFFEE20).w, D6
                andi.w  #$00FF, D6
                move.w  ($FFFFF78C).w, D0
                cmp.w   ($FFFFF78C).w, D6
                beq.s   loc_E4C0
                move.w  D6, ($FFFFF78C).w
                lea     ($FFFFF78E).w, A5
                lea     ($FFFFF778).w, A4
                lea     ($FFFFF789).w, A1
                lea     ($FFFFF786).w, A6
                bsr.s   loc_E4C2
loc_E4C0:
                rts
loc_E4C2:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D2
                cmp.w   D0, D6
                beq     loc_E3DA
                bge     loc_E570
                move.b  $0002(A1), D2
                move.b  $0001(A1), $0002(A1)
                move.b  (A1), $0001(A1)
                move.b  D6, (A1)
                cmp.b   (A6), D2
                beq.s   loc_E4F8
                cmp.b   $0001(A6), D2
                beq.s   loc_E4F8
                cmp.b   $0002(A6), D2
                beq.s   loc_E4F8
                bsr     loc_E652
                bra.s   loc_E4FC
loc_E4F8:                
                bsr     loc_E616
loc_E4FC:
                bsr     loc_E5F2 
                bne.s   loc_E520
                move.l  $0004(A4), A0
loc_E506:
                cmp.b   -6(A0), D6
                bne.s   loc_E51A
                tst.b   -2(A0)
                bpl.s   loc_E516
                subq.b  #$01, $0001(A5)
loc_E516:
                subq.w  #$06, A0
                bra.s   loc_E506
loc_E51A:
                move.l  A0, $0004(A4)
                bra.s   loc_E556
loc_E520:
                move.l  $0004(A4), A0
                move.b  D6, (A1)
loc_E526:
                cmp.b   -6(A0), D6
                bne.s   loc_E552
                subq.w  #$06, A0
                tst.b   $0004(A0)
                bpl.s   loc_E53C
                subq.b  #$01, $0001(A5)
                move.b  $0001(A5), D2
loc_E53C:
                bsr     loc_E712
                bne.s   loc_E546
                subq.w  #$06, A0
                bra.s   loc_E526
loc_E546:
                tst.b   $0004(A0)
                bpl.s   loc_E550
                addq.b  #$01, $0001(A5)
loc_E550:
                addq.w  #$06, A0
loc_E552:
                move.l  A0, $0004(A4)
loc_E556:
                move.l  (A4), A0
                addq.w  #$03, D6
loc_E55A:
                cmp.b   -6(A0), D6
                bne.s   loc_E56C
                tst.b   -2(A0)
                bpl.s   loc_E568
                subq.b  #$01, (A5)
loc_E568:
                subq.w  #$06, A0
                bra.s   loc_E55A
loc_E56C:
                move.l  A0, (A4)
                rts              
loc_E570:
                addq.w  #$02, D6
                move.b  (A1), D2
                move.b  $0001(A1), (A1)
                move.b  $0002(A1), $0001(A1)
                move.b  D6, $0002(A1)
                cmp.b   (A6), D2
                beq.s   loc_E598
                cmp.b   $0001(A6), D2
                beq.s   loc_E598
                cmp.b   $0002(A6), D2
                beq.s   loc_E598
                bsr     loc_E652
                bra.s   loc_E59C
loc_E598:
                bsr     loc_E616
loc_E59C:
                bsr     loc_E5F2
                bne.s   loc_E5B8
                move.l  (A4), A0
loc_E5A4:
                cmp.b   (A0), D6
                bne.s   loc_E5B4
                tst.b   $0004(A0)
                bpl.s   loc_E5B0
                addq.b  #$01, (A5)
loc_E5B0:
                addq.w  #$06, A0
                bra.s   loc_E5A4
loc_E5B4:
                move.l  A0, (A4)
                bra.s   loc_E5D2
loc_E5B8:
                move.l  (A4), A0
                move.b  D6, (A1)
loc_E5BC:
                cmp.b   (A0), D6
                bne.s   loc_E5D0
                tst.b   $0004(A0)
                bpl.s   loc_E5CA
                move.b  (A5), D2
                addq.b  #$01, (A5)
loc_E5CA:
                bsr     loc_E712
                beq.s   loc_E5BC
loc_E5D0:
                move.l  A0, (A4)    
loc_E5D2:
                move.l  $0004(A4), A0
                subq.w  #$03, D6
                bcs.s   loc_E5EC
loc_E5DA:
                cmp.b   (A0), D6
                bne.s   loc_E5EC
                tst.b   $0004(A0)
                bpl.s   loc_E5E8
                addq.b  #$01, $0001(A5)
loc_E5E8:
                addq.w  #$06, A0
                bra.s   loc_E5DA
loc_E5EC:
                move.l  A0, $0004(A4)   
                rts  
loc_E5F2:
                move.l  A1, -(A7)
                lea     ($FFFFF780).w, A1
                cmp.b   (A1)+, D6
                beq.s   loc_E612
                cmp.b   (A1)+, D6
                beq.s   loc_E612
                cmp.b   (A1)+, D6
                beq.s   loc_E612
                cmp.b   (A1)+, D6
                beq.s   loc_E612
                cmp.b   (A1)+, D6
                beq.s   loc_E612
                cmp.b   (A1)+, D6
                beq.s   loc_E612
                moveq   #$01, D0
loc_E612:
                move.l  (A7)+, A1
                rts
loc_E616:                
                lea     ($FFFFF780).w, A1
                lea     ($FFFFBE00).w, A3
                tst.b   (A1)+
                bmi.s   loc_E64E
                lea     ($FFFFC100).w, A3
                tst.b   (A1)+
                bmi.s   loc_E64E
                lea     ($FFFFC400).w, A3
                tst.b   (A1)+
                bmi.s   loc_E64E
                lea     ($FFFFC700).w, A3
                tst.b   (A1)+
                bmi.s   loc_E64E
                lea     ($FFFFCA00).w, A3
                tst.b   (A1)+
                bmi.s   loc_E64E
                lea     ($FFFFCD00).w, A3
                tst.b   (A1)+
                bmi.s   loc_E64E                 
                nop
                nop
loc_E64E:
                subq.w  #$01, A1
                rts    
loc_E652:
                lea     ($FFFFF780).w, A1
                lea     ($FFFFBE00).w, A3
                cmp.b   (A1)+, D2
                beq.s   loc_E68A
                lea     ($FFFFC100).w, A3
                cmp.b   (A1)+, D2
                beq.s   loc_E68A
                lea     ($FFFFC400).w, A3
                cmp.b   (A1)+, D2
                beq.s   loc_E68A
                lea     ($FFFFC700).w, A3
                cmp.b   (A1)+, D2
                beq.s   loc_E68A
                lea     ($FFFFCA00).w, A3
                cmp.b   (A1)+, D2
                beq.s   loc_E68A
                lea     ($FFFFCD00).w, A3
                cmp.b   (A1)+, D2
                beq.s   loc_E68A
                nop
                nop
loc_E68A:
                move.b  #$FF, -(A1)
                movem.l A1/A3, -(A7)
                moveq   #$00, D1
                moveq   #$0B, D2
loc_E696:
                tst.b   (A3)
                beq.s   loc_E6B2
                move.l  A3, A1
                moveq   #$00, D0
                move.b  $0023(A1), D0
                beq.s   loc_E6AA
                bclr    #$07, $02(A2, D0)
loc_E6AA:
                moveq   #$0F, D0
loc_E6AC:
                move.l  D1, (A1)+
                dbra    D0, loc_E6AC
loc_E6B2:    
                lea     $0040(A3), A3
                dbra    D2, loc_E696 
                moveq   #$00, D2
                movem.l (A7)+, A1/A3
                rts       
loc_E6C2:
                tst.b   $0004(A0)
                bpl.s   loc_E6D6
                bset    #$07, $02(A2, D2)
                beq.s   loc_E6D6
                addq.w  #$06, A0
                moveq   #$00, D0
                rts
loc_E6D6:
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_E710
                move.w  (A0)+, $0008(A1)
                move.w  (A0)+, D0
                move.w  D0, D1
                andi.w  #$0FFF, D0
                move.w  D0, $000C(A1)
                rol.w   #$02, D1
                andi.b  #$03, D1
                move.b  D1, $0001(A1)
                move.b  D1, $0022(A1)
                move.b  (A0)+, D0
                bpl.s   loc_E706
                andi.b  #$7F, D0
                move.b  D2, $0023(A1)
loc_E706:
                move.b  D0, $0000(A1)
                move.b  (A0)+, $0028(A1)
                moveq   #$00, D0
loc_E710:
                rts    
loc_E712:
                tst.b   $0004(A0)
                bpl.s   loc_E726
                bset    #$07, $02(A2, D2)
                beq.s   loc_E726
                addq.w  #$06, A0
                moveq   #$00, D0
                rts
loc_E726:
                btst    #$05, $0002(A0)
                beq.s   loc_E736
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_E770
                bra.s   loc_E73C
loc_E736:
                bsr     loc_E7A4
                bne.s   loc_E770
loc_E73C:
                move.w  (A0)+, $0008(A1) 
                move.w  (A0)+, D0
                move.w  D0, D1
                andi.w  #$0FFF, D0
                move.w  D0, $000C(A1)
                rol.w   #$02, D1
                andi.b  #$03, D1
                move.b  D1, $0001(A1)
                move.b  D1, $0022(A1)
                move.b  (A0)+, D0
                bpl.s   loc_E766
                andi.b  #$7F, D0
                move.b  D2, $0023(A1)
loc_E766:
                move.b  D0, $0000(A1)
                move.b  (A0)+, $0028(A1)
                moveq   #$00, D0
loc_E770:
                rts
;========================= Load Object List - [ End ] =========================   
               
;=============================================================================== 
; Sub Routine SingleObjLoad
; [ Begin ]                         
;===============================================================================                
SingleObjLoad: ; loc_E772:                
                lea     ($FFFFB800).w, A1
                move.w  #$005F, D0
loc_E77A:
                tst.b   (A1)
                beq.s   loc_E786
                lea     $0040(A1), A1
                dbra    D0, loc_E77A
loc_E786:
                rts     
;=============================================================================== 
; Sub Routine SingleObjLoad
; [ End ]                         
;===============================================================================                  
                                                                            
;=============================================================================== 
; Sub Routine SingleObjLoad2
; [ Begin ]                         
;===============================================================================                 
SingleObjLoad2: ;loc_E788:
                move.l  A0, A1
                move.w  #$D000, D0
                sub.w   A0, D0
                lsr.w   #$06, D0
                subq.w  #$01, D0
                bcs.s   loc_E7A2
loc_E796:
                tst.b   (A1)
                beq.s   loc_E7A2
                lea     $0040(A1), A1
                dbra    D0, loc_E796
loc_E7A2:
                rts   
;=============================================================================== 
; Sub Routine SingleObjLoad2
; [ End ]                         
;===============================================================================    
             
loc_E7A4: ; Load Object List Subroutine - Start 
                move.l  A3, A1
                move.w  #$000B, D0
loc_E7AA: 
                tst.b   (A1)
                beq.s   loc_E7B6
                lea     $0040(A1), A1
                dbra    D0, loc_E7AA
loc_E7B6:
                rts ; Load Object List Subroutine - End 
                
;=============================================================================== 
; Object 0x41 - Springs 
; [ Begin ]
;===============================================================================                     
Obj_0x41_Springs: ; loc_E7B8:     
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_E7E8(PC, D0), D1
                jsr     loc_E7E8(PC, D1)
                tst.w   ($FFFFFFD8).w
                beq.s   loc_E7D0
                bra     DisplaySprite           ; loc_D3C2
loc_E7D0:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2
loc_E7E8:
                dc.w    loc_E7F4-loc_E7E8
                dc.w    loc_E8CC-loc_E7E8
                dc.w    loc_E9BE-loc_E7E8
                dc.w    loc_EBD0-loc_E7E8
                dc.w    loc_ECBC-loc_E7E8
                dc.w    loc_EDF2-loc_E7E8
loc_E7F4:
                addq.b  #$02, $0024(A0)
                move.l  #Spring_Mappings, $0004(A0) ; loc_EF70
                move.w  #$045C, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                move.w  loc_E82A(PC, D0), D0
                jmp     loc_E82A(PC, D0)
loc_E82A:
                dc.w    loc_E8A0-loc_E82A
                dc.w    loc_E834-loc_E82A
                dc.w    loc_E854-loc_E82A
                dc.w    loc_E868-loc_E82A
                dc.w    loc_E882-loc_E82A                    
loc_E834:
                move.b  #$04, $0024(A0)
                move.b  #$02, $001C(A0)
                move.b  #$03, $001A(A0)
                move.w  #$0470, $0002(A0)
                move.b  #$08, $0019(A0)
                bra.s   loc_E8A0
loc_E854:                
                move.b  #$06, $0024(A0)
                move.b  #$06, $001A(A0)
                bset    #$01, $0022(A0)
                bra.s   loc_E8A0
loc_E868:                
                move.b  #$08, $0024(A0)
                move.b  #$04, $001C(A0)
                move.b  #$07, $001A(A0)
                move.w  #$043C, $0002(A0)                  
                bra.s   loc_E8A0
loc_E882:                
                move.b  #$0A, $0024(A0)
                move.b  #$04, $001C(A0)
                move.b  #$0A, $001A(A0)
                move.w  #$043C, $0002(A0)
                bset    #$01, $0022(A0)
loc_E8A0:
                move.b  $0028(A0), D0
                andi.w  #$0002, D0
                move.w  loc_E8C8(PC, D0), $0030(A0)
                btst    #$01, D0
                beq.s   loc_E8C2
                bset    #$05, $0002(A0)
                move.l  #loc_EF86, $0004(A0)
loc_E8C2:
                bsr     Adjust2PArtPointer     ; loc_DC30
                rts
loc_E8C8:
                dc.w    $F000, $F600                   
loc_E8CC:
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     loc_F510
                btst    #$03, $0022(A0)
                beq.s   loc_E8F4
                bsr.s   loc_E918
loc_E8F4:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     loc_F510
                btst    #$04, $0022(A0)
                beq.s   loc_E90C
                bsr.s   loc_E918
loc_E90C:
                lea     (loc_EF36), A1
                bra     AnimateSprite           ; loc_D412
                rts
loc_E918:
                move.w  #$0100, $001C(A0)
                addq.w  #$08,  $000C(A1)
                move.w  $0030(A0), $0012(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                bpl.s   loc_E94C
                move.w  #$0000, $0010(A1)
loc_E94C:
                btst    #$00, D0
                beq.s   loc_E98C
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                btst    #$01, D0
                bne.s   loc_E97C
                move.b  #$01, $002C(A1)
loc_E97C:
                btst    #$00, $0022(A1)
                beq.s   loc_E98C
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_E98C:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_E9A2
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_E9A2:
                cmpi.b  #$08, D0
                bne.s   loc_E9B4
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
loc_E9B4:
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6    
loc_E9BE:
                move.w  #$0013, D1
                move.w  #$000E, D2
                move.w  #$000F, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     loc_F510
                btst    #$05, $0022(A0)
                beq.s   loc_E9FE
                move.b  $0022(A0), D1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcs.s   loc_E9F6
                eori.b  #$01, D1
loc_E9F6:
                andi.b  #$01, D1
                bne.s   loc_E9FE
                bsr.s   loc_EA3E
loc_E9FE:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     loc_F510
                btst    #$06, $0022(A0)
                beq.s   loc_EA2E
                move.b  $0022(A0), D1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcs.s   loc_EA26
                eori.b  #$01, D1
loc_EA26:
                andi.b  #$01, D1
                bne.s   loc_EA2E
                bsr.s   loc_EA3E
loc_EA2E:
                bsr     loc_EB16
                lea     (loc_EF36), A1
                bra     AnimateSprite           ; loc_D412
                rts
loc_EA3E:
                move.w  #$0300, $001C(A0)
                move.w  $0030(A0), $0010(A1)
                addq.w  #$08,  $0008(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   loc_EA6C
                bclr    #$00, $0022(A1)
                subi.w  #$0010, $0008(A1)
                neg.w   $0010(A1)
loc_EA6C:
                move.w  #$000F, $002E(A1)
                move.w  $0010(A1), $0014(A1)
                btst    #$02, $0022(A1)
                bne.s   loc_EA86
                move.b  #$00, $001C(A1)
loc_EA86:
                move.b  $0028(A0), D0
                bpl.s   loc_EA92
                move.w  #$0000, $0012(A1)
loc_EA92:
                btst    #$00, D0
                beq.s   loc_EAD2
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0
                bne.s   loc_EAC2
                move.b  #$03, $002C(A1)
loc_EAC2:
                btst    #$00, $0022(A1)
                beq.s   loc_EAD2
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_EAD2:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_EAE8
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_EAE8:
                cmpi.b  #$08, D0
                bne.s   loc_EAFA
                move.b  #$0E, $003E(A1)   
                move.b  #$0F, $003F(A1)
loc_EAFA:
                bclr    #$05, $0022(A0)
                bclr    #$06, $0022(A0)
                bclr    #$05, $0022(A1)
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6  
loc_EB16:
                cmpi.b  #$03, $001C(A0)
                beq     loc_EBCE
                move.w  $0008(A0), D0
                move.w  D0, D1
                addi.w  #$0028, D1
                btst    #$00, $0022(A0)
                beq.s   loc_EB38
                move.w  D0, D1
                subi.w  #$0028, D0
loc_EB38:
                move.w  $000C(A0), D2
                move.w  D2, D3
                subi.w  #$0018, D2
                addi.w  #$0018, D3
                lea     ($FFFFB000).w, A1
                btst    #$01, $0022(A1)
                bne.s   loc_EB8C
                move.w  $0014(A1), D4
                btst    #$00, $0022(A0)
                beq.s   loc_EB60
                neg.w   D4
loc_EB60:
                tst.w   D4
                bmi.s   loc_EB8C
                move.w  $0008(A1), D4
                cmp.w   D0, D4
                bcs     loc_EB8C
                cmp.w   D1, D4
                bcc     loc_EB8C
                move.w  $000C(A1), D4
                cmp.w   D2, D4
                bcs     loc_EB8C
                cmp.w   D3, D4
                bcc     loc_EB8C
                move.w  D0, -(A7)
                bsr     loc_EA3E
                move.w  (A7)+, D0
loc_EB8C:
                lea     ($FFFFB040).w, A1
                btst    #$01, $0022(A1)
                bne.s   loc_EBCE
                move.w  $0014(A1), D4
                btst    #$00, $0022(A0)
                beq.s   loc_EBA6
                neg.w   D4
loc_EBA6:
                tst.w   D4
                bmi.s   loc_EBCE
                move.w  $0008(A1), D4
                cmp.w   D0, D4
                bcs     loc_EBCE
                cmp.w   D1, D4
                bcc     loc_EBCE
                move.w  $000C(A1), D4
                cmp.w   D2, D4
                bcs     loc_EBCE
                cmp.w   D3, D4
                bcc     loc_EBCE
                bsr     loc_EA3E
loc_EBCE:
                rts    
loc_EBD0:
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     loc_F510
                cmpi.w  #$FFFE, D4
                bne.s   loc_EBF6
                bsr.s   loc_EC18
loc_EBF6:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     loc_F510
                cmpi.w  #$FFFE, D4
                bne.s   loc_EC0C
                bsr.s   loc_EC18
loc_EC0C:
                lea     (loc_EF36), A1
                bra     AnimateSprite           ; loc_D412
                rts
loc_EC18:
                move.w  #$0100, $001C(A0)
                subq.w  #$08, $000C(A1)
                move.w  $0030(A0), $0012(A1)
                neg.w   $0012(A1)
                move.b  $0028(A0), D0
                bpl.s   loc_EC38
                move.w  #$0000, $0010(A1)
loc_EC38:
                btst    #$00, D0
                beq.s   loc_EC78
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                btst    #$01, D0
                bne.s   loc_EC68
                move.b  #$01, $002C(A1)
loc_EC68:
                btst    #$00, $0022(A1)
                beq.s   loc_EC78
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_EC78:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_EC8E
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_EC8E:
                cmpi.b  #$08, D0
                bne.s   loc_ECA0
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
loc_ECA0:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6   
loc_ECBC:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  $0008(A0), D4
                lea     loc_EEFE(PC), A2
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     loc_F562
                btst    #$03, $0022(A0)
                beq.s   loc_ECE4
                bsr.s   loc_ED08
loc_ECE4:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     loc_F562
                btst    #$04, $0022(A0)
                beq.s   loc_ECFC
                bsr.s   loc_ED08
loc_ECFC:
                lea     (loc_EF36), A1
                bra     AnimateSprite           ; loc_D412
                rts
loc_ED08:
                btst    #$00, $0022(A0)
                bne.s   loc_ED1E                   
                move.w  $0008(A0), D0
                subq.w  #$04, D0
                cmp.w   $0008(A1), D0
                bcs.s   loc_ED2C
                rts
loc_ED1E:
                move.w  $0008(A0), D0
                addq.w  #$04, D0
                cmp.w   $0008(A1), D0
                bcc.s   loc_ED2C
                rts
loc_ED2C:
                move.w  #$0500, $001C(A0)
                move.w  $0030(A0), $0012(A1)
                move.w  $0030(A0), $0010(A1)
                addq.w  #$06, $000C(A1)
                addq.w  #$06, $0008(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   loc_ED64
                bclr    #$00, $0022(A1)
                subi.w  #$000C, $0008(A1)
                neg.w   $0010(A1)
loc_ED64:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                btst    #$00, D0
                beq.s   loc_EDC0
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0
                bne.s   loc_EDB0
                move.b  #$03, $002C(A1)
loc_EDB0:
                btst    #$00, $0022(A1)
                beq.s   loc_EDC0
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_EDC0:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_EDD6
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_EDD6:
                cmpi.b  #$08, D0
                bne.s   loc_EDE8
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
loc_EDE8:
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6     
loc_EDF2:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  $0008(A0), D4
                lea     loc_EF1A(PC), A2
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     loc_F562
                cmpi.w  #$FFFE, D4
                bne.s   loc_EE18
                bsr.s   loc_EE3A
loc_EE18:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     loc_F562
                cmpi.w  #$FFFE, D4
                bne.s   loc_EE2E
                bsr.s   loc_EE3A
loc_EE2E:
                lea     (loc_EF36), A1
                bra     AnimateSprite           ; loc_D412
                rts
loc_EE3A:
                move.w  #$0500, $001C(A0)
                move.w  $0030(A0), $0012(A1)
                neg.w   $0012(A1)
                move.w  $0030(A0), $0010(A1)
                subq.w  #$06, $000C(A1)
                addq.w  #$06, $0008(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   loc_EE76
                bclr    #$00, $0022(A1)
                subi.w  #$000C, $0008(A1)
                neg.w   $0010(A1)
loc_EE76:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                btst    #$00, D0
                beq.s   loc_EECC
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0 
                bne.s   loc_EEBC
                move.b  #$03, $002C(A1)
loc_EEBC:
                btst    #$00, $0022(A1)
                beq.s   loc_EECC
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_EECC:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_EEE2
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_EEE2:
                cmpi.b  #$08, D0
                bne.s   loc_EEF4
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
loc_EEF4:
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6 
loc_EEFE:   
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $0E, $0C, $0A, $08
                dc.b    $06, $04, $02, $00, $FE, $FC, $FC, $FC, $FC, $FC, $FC, $FC
loc_EF1A:                
                dc.b    $F4, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F2, $F4, $F6, $F8
                dc.b    $FA, $FC, $FE, $00, $02, $04, $04, $04, $04, $04, $04, $04
loc_EF36:
                dc.b    $00, $0C, $00, $0F, $00, $1B, $00, $1E, $00, $2A, $00, $2D, $0F, $00, $FF, $00
                dc.b    $01, $00, $00, $02, $02, $02, $02, $02, $02, $FD, $00, $0F, $03, $FF, $00, $04
                dc.b    $03, $03, $05, $05, $05, $05, $05, $05, $FD, $02, $0F, $07, $FF, $00, $08, $07
                dc.b    $07, $09, $09, $09, $09, $09, $09, $FD, $04, $00
Spring_Mappings:
loc_EF70:
                dc.w    loc_EF9C-loc_EF70
                dc.w    loc_EFAE-loc_EF70
                dc.w    loc_EFB8-loc_EF70
                dc.w    loc_EFCA-loc_EF70
                dc.w    loc_EFDC-loc_EF70
                dc.w    loc_EFE6-loc_EF70
                dc.w    loc_EFF8-loc_EF70
                dc.w    loc_F00A-loc_EF70
                dc.w    loc_F02C-loc_EF70
                dc.w    loc_F046-loc_EF70
                dc.w    loc_F068-loc_EF70
loc_EF86:
                dc.w    loc_EF9C-loc_EF86
                dc.w    loc_EFAE-loc_EF86
                dc.w    loc_EFB8-loc_EF86
                dc.w    loc_EFCA-loc_EF86
                dc.w    loc_EFDC-loc_EF86
                dc.w    loc_EFE6-loc_EF86
                dc.w    loc_EFF8-loc_EF86
                dc.w    loc_F08A-loc_EF86
                dc.w    loc_F0AC-loc_EF86
                dc.w    loc_F0C6-loc_EF86
                dc.w    loc_F0E8-loc_EF86                 
loc_EF9C:
                dc.w    $0002
                dc.l    $F00D0000, $0000FFF0, $00050008, $0004FFF8
loc_EFAE:
                dc.w    $0001
                dc.l    $F80D0000, $0000FFF0
loc_EFB8:
                dc.w    $0002
                dc.l    $E00D0000, $0000FFF0, $F007000C, $0006FFF8
loc_EFCA:
                dc.w    $0002
                dc.l    $F0030000, $00000000, $F8010004, $0002FFF8
loc_EFDC:
                dc.w    $0001
                dc.l    $F0030000, $0000FFF8
loc_EFE6:
                dc.w    $0002
                dc.l    $F0030000, $00000010, $F8090006, $0003FFF8
loc_EFF8:
                dc.w    $0002
                dc.l    $000D1000, $1000FFF0, $F0051008, $1004FFF8
loc_F00A:
                dc.w    $0004
                dc.l    $F00D0000, $0000FFF0, $00050008, $00040000
                dc.l    $FB05000C, $0006FFF6, $0005201C, $200EFFF0
loc_F02C:
                dc.w    $0003
                dc.l    $F60D0000, $0000FFEA, $06050008, $0004FFFA
                dc.l    $0005201C, $200EFFF0
loc_F046:
                dc.w    $0004
                dc.l    $E60D0000, $0000FFFB, $F6050008, $0004000B
                dc.l    $F30B0010, $0008FFF6, $0005201C, $200EFFF0
loc_F068:
                dc.w    $0004
                dc.l    $000D1000, $1000FFF0, $F0051008, $10040000
                dc.l    $F505100C, $1006FFF6, $F005301C, $300EFFF0  
loc_F08A:
                dc.w    $0004
                dc.l    $F00D0000, $0000FFF0, $00050008, $00040000
                dc.l    $FB05000C, $0006FFF6, $0005001C, $000EFFF0
loc_F0AC:
                dc.w    $0003
                dc.l    $F60D0000, $0000FFEA, $06050008, $0004FFFA
                dc.l    $0005001C, $000EFFF0
loc_F0C6:
                dc.w    $0004
                dc.l    $E60D0000, $0000FFFB, $F6050008, $0004000B
                dc.l    $F30B0010, $0008FFF6, $0005001C, $000EFFF0
loc_F0E8:
                dc.w    $0004
                dc.l    $000D1000, $1000FFF0, $F0051008, $10040000
                dc.l    $F505100C, $1006FFF6, $F005101C, $100EFFF0   
;=============================================================================== 
; Object 0x41 - Springs 
; [ End ]
;===============================================================================   
                nop                             ; Filler  
;=============================================================================== 
; Object 0x44
; [ Begin ]
;===============================================================================                  
Obj_0x44: ; loc_F10C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_F11A(PC, D0), D1
                jmp     loc_F11A(PC, D1)
loc_F11A:
                dc.w    loc_F120-loc_F11A
                dc.w    loc_F15C-loc_F11A
                dc.w    loc_F170-loc_F11A
loc_F120:
                addq.b  #$02, $0024(A0)
                move.l  #loc_F188, $0004(A0)
                move.w  #$434C, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  #$08, $0019(A0)
                move.b  #$06, $0018(A0)
                move.b  $0028(A0), $001A(A0)
                bclr    #$04, $001A(A0)
                beq.s   loc_F15C
                addq.b  #$02, $0024(A0)
                bra.s   loc_F170
loc_F15C:
                move.w  #$0013, D1
                move.w  #$0028, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; loc_F4A0
loc_F170:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2
loc_F188:
                dc.w    loc_F18E-loc_F188
                dc.w    loc_F1B0-loc_F188
                dc.w    loc_F1D2-loc_F188
loc_F18E:
                dc.w    $0004
                dc.l    $E0050004, $0002FFF8, $F0050008, $0004FFF8
                dc.l    $00050008, $0004FFF8, $10050008, $0004FFF8
loc_F1B0:
                dc.w    $0004
                dc.l    $E0050008, $0004FFF8, $F0050008, $0004FFF8
                dc.l    $00050008, $0004FFF8, $10050008, $0004FFF8
loc_F1D2:
                dc.w    $0004
                dc.l    $E0050000, $0000FFF8, $F0050000, $0000FFF8
                dc.l    $00050000, $0000FFF8, $10050000, $0000FFF8            
;=============================================================================== 
; Object 0x44
; [ End ]
;===============================================================================                  
                
;=============================================================================== 
; Object 0x0D - End Panel 
; [ Begin ]
;===============================================================================                     
Obj_0x0D_End_Panel: ; loc_F1F4:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_F224(PC, D0), D1
                jsr     loc_F224(PC, D1)
                lea     (loc_F3E4), A1
                bsr     AnimateSprite           ; loc_D412
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2
loc_F224:
                dc.w    End_Panel_Sub_01-loc_F224 ; loc_F22E
                dc.w    End_Panel_Sub_02-loc_F224 ; loc_F256
                dc.w    End_Panel_Sub_03-loc_F224 ; loc_F280
                dc.w    End_Panel_Sub_04-loc_F224 ; loc_F31C
                dc.w    End_Panel_Sub_05-loc_F224 ; loc_F3E2
End_Panel_Sub_01: ; loc_F22E:
                addq.b  #$02, $0024(A0)
                move.l  #End_Panel_Mappings, $0004(A0) ; loc_F40E
                move.w  #$0434, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$18, $0019(A0)
                move.b  #$04, $0018(A0)
End_Panel_Sub_02: ; loc_F256:
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                bcs.s   loc_F27E
                cmpi.w  #$0020, D0
                bcc.s   loc_F27E
                move.w  #$00CF, D0
                jsr     (PlayMusic)            ; loc_14C0
                clr.b   ($FFFFFE1E).w
                move.w  ($FFFFEECA).w, ($FFFFEEC8).w
                addq.b  #$02, $0024(A0)
loc_F27E:
                rts
End_Panel_Sub_03: ; loc_F280:
                subq.w  #$01, $0030(A0)
                bpl.s   loc_F29C
                move.w  #$003C, $0030(A0)
                addq.b  #$01, $001C(A0)
                cmpi.b  #$03, $001C(A0)
                bne.s   loc_F29C
                addq.b  #$02, $0024(A0)
loc_F29C:
                subq.w  #$01, $0032(A0)
                bpl.s   loc_F30A
                move.w  #$000B, $0032(A0)
                moveq   #$00, D0
                move.b  $0034(A0), D0
                addq.b  #$02, $0034(A0)
                andi.b  #$0E, $0034(A0)
                lea     loc_F30C(PC, D0), A2
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_F30A
                move.b  #$25, $0000(A1)
                move.b  #$06, $0024(A1)
                move.b  (A2)+, D0
                ext.w   D0
                add.w   $0008(A0), D0
                move.w  D0, $0008(A1)
                move.b  (A2)+, D0
                ext.w   D0
                add.w   $000C(A0), D0
                move.w  D0, $000C(A1)
                move.l  #Rings_Mappings, $0004(A1) ; loc_B036
                move.w  #$27B2, $0002(A1)
                bsr     Adjust2PArtPointer2   ; loc_DC4C
                move.b  #$04, $0001(A1)
                move.b  #$02, $0018(A1)
                move.b  #$08, $0019(A1)
loc_F30A:
                rts
loc_F30C: 
                dc.b    $E8, $F0, $08, $08, $F0, $00, $18, $F8, $00, $F8, $10, $00, $E8, $08, $18, $10
End_Panel_Sub_04: ; loc_F31C:
                tst.w   (Debug_placement_mode).w  
                bne     loc_F3B6
                btst    #$01, ($FFFFB022).w
                bne.s   loc_F338
                move.b  #$01, ($FFFFF7CC).w
                move.w  #$0800, ($FFFFF602).w
loc_F338:
                tst.b   ($FFFFB000).w
                beq.s   loc_F34E
                move.w  ($FFFFB008).w, D0
                move.w  ($FFFFEECA).w, D1
                addi.w  #$0128, D1
                cmp.w   D1, D0
                bcs.s   loc_F3B6
loc_F34E:
                addq.b  #$02, $0024(A0)
loc_F352:                
                tst.b   ($FFFFB5C0).w
                bne.s   loc_F3B6
                move.w  ($FFFFEECA).w, ($FFFFEEC8).w
                clr.b   ($FFFFFE2D).w
                clr.b   ($FFFFFE1E).w
                move.b  #$3A, ($FFFFB5C0).w
                moveq   #$26, D0
                jsr     LoadPLC2                ; loc_176E
                move.b  #$01, ($FFFFF7D6).w
                moveq   #$00, D0
                move.b  ($FFFFFE23).w, D0
                mulu.w  #$003C, D0
                moveq   #$00, D1
                move.b  ($FFFFFE24).w, D1
                add.w   D1, D0
                divu.w  #$000F, D0
                moveq   #$14, D1
                cmp.w   D1, D0
                bcs.s   loc_F398
                move.w  D1, D0
loc_F398:
                add.w   D0, D0
                move.w  loc_F3B8(PC, D0), ($FFFFF7D2).w
                move.w  ($FFFFFE20).w, D0
                mulu.w  #$000A, D0
                move.w  D0, ($FFFFF7D4).w
                move.w  #$009A, D0
                jsr     (PlaySound)              ; loc_14C6
loc_F3B6:
                rts
loc_F3B8:
                dc.w    $1388, $1388, $03E8, $01F4, $0190, $0190, $012C, $012C
                dc.w    $00C8, $00C8, $00C8, $00C8, $0064, $0064, $0064, $0064
                dc.w    $0032, $0032, $0032, $0032, $0000
End_Panel_Sub_05: ; loc_F3E2:
                rts
loc_F3E4:
                dc.w    loc_F3EC-loc_F3E4
                dc.w    loc_F3EF-loc_F3E4
                dc.w    loc_F3FD-loc_F3E4
                dc.w    loc_F40B-loc_F3E4
loc_F3EC:
                dc.b    $0F, $02, $FF
loc_F3EF:
                dc.b    $01, $02, $03, $04, $05, $01, $03, $04, $05, $00, $03, $04, $05, $FF
loc_F3FD:
                dc.b    $01, $02, $03, $04, $05, $01, $03, $04, $05, $00, $03, $04, $05, $FF
loc_F40B:
                dc.b    $0F, $00, $FF
End_Panel_Mappings:               
loc_F40E:                
                dc.w    loc_F41A-loc_F40E
                dc.w    loc_F434-loc_F40E
                dc.w    loc_F44E-loc_F40E
                dc.w    loc_F468-loc_F40E
                dc.w    loc_F47A-loc_F40E
                dc.w    loc_F48C-loc_F40E
loc_F41A:
                dc.w    $0003
                dc.l    $F00B0000, $0000FFE8, $F00B000C, $00060000
                dc.l    $10010050, $0028FFFC
loc_F434:
                dc.w    $0003
                dc.l    $F00B0018, $000CFFE8, $F00B0024, $00120000
                dc.l    $10010050, $0028FFFC
loc_F44E:
                dc.w    $0003
                dc.l    $F00B0030, $0018FFE8, $F00B0830, $08180000
                dc.l    $10010050, $0028FFFC
loc_F468:
                dc.w    $0002
                dc.l    $F00F003C, $001EFFF0, $10010050, $0028FFFC
loc_F47A:
                dc.w    $0002
                dc.l    $F003004C, $0026FFFC, $10010050, $0028FFFC
loc_F48C:
                dc.w    $0002
                dc.l    $F00F083C, $081EFFF0, $10010050, $0028FFFC                                  
;=============================================================================== 
; Object 0x0D - End Panel 
; [ End ]
;===============================================================================   
                nop                             ; Filler
;=============================================================================== 
; Sub Routine SolidObject
; [ Begin ]                         
;===============================================================================                
SolidObject: ; loc_F4A0:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   loc_F4BE
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                tst.b   $0001(A1)
                bpl     loc_F4F8
                addq.b  #$01, D6
loc_F4BE:
                btst    D6, $0022(A0)
                beq     loc_F752
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   loc_F4E2
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_F4E2
                cmp.w   D2, D0
                bcs.s   loc_F4F0
loc_F4E2:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
loc_F4F0:
                move.w  D4, D2
                bsr     loc_F8E4
                moveq   #$00, D4
loc_F4F8:                
                rts                
loc_F4FA:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   loc_F510
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
loc_F510:    
                btst    D6, $0022(A0)
                beq     loc_F75A
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   loc_F534
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_F534
                cmp.w   D2, D0                
                bcs.s   loc_F542
loc_F534:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0) 
                moveq   #$00, D4
                rts
loc_F542:
                move.w  D4, D2
                bsr     loc_F8E4
                moveq   #$00, D4
                rts
loc_F54C:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   loc_F562
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
loc_F562:
                btst    D6, $0022(A0)
                beq     loc_F698
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   loc_F586
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_F586
                cmp.w   D2, D0
                bcs.s   loc_F594
loc_F586:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
loc_F594:
                move.w  D4, D2
                bsr     loc_F91E
                moveq   #$00, D4
                rts

loc_F59E:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   loc_F5B4
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
loc_F5B4:
                btst    D6, $0022(A0)
                beq     loc_F6F2
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   loc_F5D8
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_F5D8
                cmp.w   D2, D0
                bcs.s   loc_F5E6
loc_F5D8:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
loc_F5E6:
                move.w  D4, D2
                bsr     loc_F960
                moveq   #$00, D4
                rts     
loc_F5F0:                 
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   loc_F606
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
loc_F606:
                btst    D6, $0022(A0)
                beq     loc_F656
                btst    #$01, $0022(A1)
                bne.s   loc_F628
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_F628
                add.w   D1, D1
                cmp.w   D1, D0
                bcs.s   loc_F636
loc_F628:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
loc_F636:
                move.w  $000C(A0), D0
                sub.w   D2, D0
                add.w   D3, D0
                moveq   #$00, D1
                move.b  $0016(A1), D1
                sub.w   D1, D0
                move.w  D0, $000C(A1)
                sub.w   $0008(A0), D4
                sub.w   D4, $0008(A1)
                moveq   #$00, D4
                rts
loc_F656:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     loc_F82A
                move.w  D1, D4
                add.w   D4, D4
                cmp.w   D4, D0
                bhi     loc_F82A
                move.w  $000C(A0), D5
                add.w   D3, D5
                move.b  $0016(A1), D3
                ext.w   D3
                add.w   D3, D2
                move.w  $000C(A1), D3
                sub.w   D5, D3
                addq.w  #$04, D3
                add.w   D2, D3
                bmi     loc_F82A
                move.w  D2, D4
                add.w   D4, D4
                cmp.w   D4, D3
                bcc     loc_F82A
                bra     loc_F794                
loc_F698:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     loc_F82A
                move.w  D1, D3
                add.w   D3, D3
                cmp.w   D3, D0
                bhi     loc_F82A
                move.w  D0, D5
                btst    #$00, $0001(A0)
                beq.s   loc_F6BE
                not.w   D5
                add.w   D3, D5
loc_F6BE:
                lsr.w   #$01, D5
                move.b  $00(A2, D5), D3
                sub.b   (A2), D3
                ext.w   D3
                move.w  $000C(A0), D5
                sub.w   D3, D5
                move.b  $0016(A1), D3
                ext.w   D3
                add.w   D3, D2
                move.w  $000C(A1), D3
                sub.w   D5, D3
                addq.w  #$04, D3
                add.w   D2, D3
                bmi     loc_F82A
                move.w  D2, D4
                add.w   D4, D4
                cmp.w   D4, D3
                bcc     loc_F82A
                bra     loc_F794   
loc_F6F2:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     loc_F82A
                move.w  D1, D3
                add.w   D3, D3
                cmp.w   D3, D0
                bhi     loc_F82A
                move.w  D0, D5
                btst    #$00, $0001(A0)
                beq.s   loc_F718
                not.w  D5
                add.w   D3, D5
loc_F718:
                andi.w  #$FFFE, D5
                move.b  $00(A2, D5), D3
                move.b  $01(A2, D5), D2
                ext.w   D2
                ext.w   D3
                move.w  $000C(A0), D5
                sub.w   D3, D5
                move.w  $000C(A1), D3
                sub.w   D5, D3
                move.b  $0016(A1), D5
                ext.w   D5
                add.w   D5, D3
                addq.w  #$04, D3
                bmi     loc_F82A
                add.w   D5, D2
                move.w  D2, D4
                add.w   D5, D4
                cmp.w   D4, D3
                bcc     loc_F82A
                bra     loc_F794                
loc_F752:
                tst.b   $0001(A0)
                bpl     loc_F82A
loc_F75A:                
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     loc_F82A
                move.w  D1, D3
                add.w   D3, D3
                cmp.w   D3, D0
                bhi     loc_F82A
                move.b  $0016(A1), D3
                ext.w   D3
                add.w   D3, D2
                move.w  $000C(A1), D3
                sub.w   $000C(A0), D3
                addq.w  #$04, D3
                add.w   D2, D3
                bmi     loc_F82A
                move.w  D2, D4
                add.w   D4, D4
                cmp.w   D4, D3
                bcc     loc_F82A
loc_F794:                
                tst.b   $002A(A1)
                bmi     loc_F82A
                cmpi.b  #$06, $0024(A1)
                bcc     loc_F848
                tst.w   (Debug_placement_mode).w
                bne     loc_F848
                move.w  D0, D5
                cmp.w   D0, D1
                bcc.s   loc_F7BC
                add.w   D1, D1
                sub.w   D1, D0
                move.w  D0, D5
                neg.w   D5
loc_F7BC:
                move.w  D3, D1
                cmp.w   D3, D2
                bcc.s   loc_F7CA
                subq.w  #$04, D3
                sub.w   D4, D3
                move.w  D3, D1
                neg.w   D1
loc_F7CA:
                cmp.w   D1, D5
                bhi     loc_F84C
loc_F7D0:
                cmpi.w  #$0004, D1
                bls.s   loc_F81C
                tst.w   D0
                beq.s   loc_F7F6
                bmi.s   loc_F7E4
                tst.w   $0010(A1)
                bmi.s   loc_F7F6
                bra.s   loc_F7EA
loc_F7E4:
                tst.w   $0010(A1)
                bpl.s   loc_F7F6
loc_F7EA:
                move.w  #$0000, $0014(A1)
                move.w  #$0000, $0010(A1)
loc_F7F6:
                sub.w   D0, $0008(A1)
                btst    #$01, $0022(A1)
                bne.s   loc_F81C
                move.l  D6, D4
                addq.b  #$02, D4
                bset    D4, $0022(A0)
                bset    #$05, $0022(A1)
                move.w  D6, D4
                addi.b  #$0D, D4
                bset    D4, D6
                moveq   #$01, D4
                rts
loc_F81C:
                bsr.s   loc_F83A
                move.w  D6, D4
                addi.b  #$0D, D4
                bset    D4, D6
                moveq   #$01, D4
                rts
loc_F82A:
                move.l  D6, D4
                addq.b  #$02, D4
                btst    D4, $0022(A0)
                beq.s   loc_F848
                move.w  #$0001, $001C(A1)
loc_F83A:
                move.l  D6, D4
                addq.b  #$02, D4
                bclr    D4, $0022(A0)
                bclr    #$05, $0022(A1)
loc_F848:
                moveq   #$00, D4
                rts   
loc_F84C:
                tst.w   D3
                bmi.s   loc_F858
                cmpi.w  #$0010, D3
                bcs.s   loc_F8A8
                bra.s   loc_F82A
loc_F858:
                tst.w   $0012(A1)
                beq.s   loc_F87A
                bpl.s   loc_F86E
                tst.w   D3
                bpl.s   loc_F86E
                sub.w   D3, $000C(A1)
                move.w  #$0000, $0012(A1)
loc_F86E:
                move.w  D6, D4
                addi.b  #$0F, D4
                bset    D4, D6
                moveq   #-2, D4
                rts
loc_F87A:
                btst    #$01, $0022(A1)
                bne.s   loc_F86E
                move.w  D0, D4
                bpl.s   loc_F888
                neg.w   D4
loc_F888:
                cmpi.w  #$0010, D4
                bcs     loc_F7D0
                move.l  A0, -(A7)
                move.l  A1, A0
                jsr     KillSonic               ; loc_21422
                move.l  (A7)+, A0
                move.w  D6, D4
                addi.b  #$0F, D4
                bset    D4, D6
                moveq   #-2, D4
                rts
loc_F8A8:
                subq.w  #$04, D3
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  D1, D2
                add.w   D2, D2
                add.w   $0008(A1), D1
                sub.w   $0008(A0), D1
                bmi.s   loc_F8E0
                cmp.w   D2, D1
                bcc.s   loc_F8E0
                tst.w   $0012(A1)
                bmi.s   loc_F8E0
                sub.w   D3, $000C(A1)
                subq.w  #$01, $000C(A1)
                bsr     loc_FAF2
                move.w  D6, D4
                addi.b  #$11, D4
                bset    D4, D6
                moveq   #-1, D4
                rts
loc_F8E0:
                moveq   #$00, D4
                rts
loc_F8E4:
                move.w  $000C(A0), D0
                sub.w   D3, D0
                bra.s   loc_F8F4
                move.w  $000C(A0), D0
                subi.w  #$0009, D0
loc_F8F4:
                tst.b   $002A(A1)
                bmi.s   loc_F91C
                cmpi.b  #$06, $0024(A1)
                bcc.s   loc_F91C
                tst.w   (Debug_placement_mode).w
                bne.s   loc_F91C
                moveq   #$00, D1
                move.b  $0016(A1), D1
                sub.w   D1, D0
                move.w  D0, $000C(A1)
                sub.w   $0008(A0), D2
                sub.w   D2, $0008(A1)
loc_F91C:
                rts                
loc_F91E:
                btst    #$03, $0022(A1)
                beq.s   loc_F95E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                lsr.w   #$01, D0
                btst    #$00, $0001(A0)
                beq.s   loc_F93E
                not.w  d0
                add.w   D1, D0
loc_F93E:
                move.b  $00(A2, D0), D1
                ext.w   D1
                move.w  $000C(A0), D0
                sub.w   D1, D0
                moveq   #$00, D1
                move.b  $0016(A1), D1
                sub.w   D1, D0
                move.w  D0, $000C(A1)
                sub.w   $0008(A0), D2
                sub.w   D2, $0008(A1)
loc_F95E:
                rts
loc_F960:

                btst    #$03, $0022(A1)
                beq.s   loc_F95E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                btst    #$00, $0001(A0)
                beq.s   loc_F97E
                not.w  D0
                add.w   D1, D0
loc_F97E:
                andi.w  #$FFFE, D0
                bra.s   loc_F93E
loc_F984:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   loc_F99A
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
loc_F99A:
                btst    D6, $0022(A0)
                beq     loc_FA98
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   loc_F9BE
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_F9BE
                cmp.w   D2, D0
                bcs.s   loc_F9CC
loc_F9BE:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
loc_F9CC:
                move.w  D4, D2
                bsr     loc_F8E4
                moveq   #$00, D4
                rts
loc_F9D6:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   loc_F9EC
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
loc_F9EC:                
                btst    D6, $0022(A0)
                beq     loc_FB60
                move.w  D1, D2
                add.w   D2, D2  
                btst    #$01, $0022(A1)
                bne.s   loc_FA10
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_FA10
                cmp.w   D2, D0
                bcs.s   loc_FA1E
loc_FA10:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
loc_FA1E:
                move.w  D4, D2
                bsr     loc_F91E
                moveq   #$00, D4
                rts

loc_FA28:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   loc_FA3E
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
loc_FA3E:
                btst    D6, $0022(A0)
                beq     loc_FB98
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   loc_FA62
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_FA62
                cmp.w   D2, D0
                bcs.s   loc_FA70
loc_FA62:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
loc_FA70:
                move.w  D4, D2
                bsr     loc_F8E4
                moveq   #$00, D4
                rts        
loc_FA7A:
                tst.w   $0012(A1)
                bmi     loc_FB5E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     loc_FB5E
                cmp.w   D2, D0
                bcc     loc_FB5E
                bra.s   loc_FAB6
loc_FA98:                
                tst.w   $0012(A1)
                bmi     loc_FB5E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     loc_FB5E
                add.w   D1, D1
                cmp.w   D1, D0
                bcc     loc_FB5E
loc_FAB6:
                move.w  $000C(A0), D0
                sub.w   D3, D0
loc_FABC:
                move.w  $000C(A1), D2
                move.b  $0016(A1), D1
                ext.w   D1
                add.w   D2, D1
                addq.w  #$04, D1
                sub.w   D1, D0
                bhi     loc_FB5E
                cmpi.w  #$FFF0, D0
                bcs     loc_FB5E
                tst.b   $002A(A1)
                bmi     loc_FB5E
                cmpi.b  #$06, $0024(A1)
                bcc     loc_FB5E
                add.w   D0, D2
                addq.w  #$03, D2
                move.w  D2, $000C(A1)
loc_FAF2:                
                btst    #$03, $0022(A1)
                beq.s   loc_FB0E
                moveq   #$00, D0
                move.b  $003D(A1), D0
                lsl.w   #$06, D0
                addi.l  #$FFFFB000, D0
                move.l  D0, A3
                bclr    D6, $0022(A3)
loc_FB0E:
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.b  D0, $003D(A1)
                move.b  #$00, $0026(A1)
                move.w  #$0000, $0012(A1)
                move.w  $0010(A1), $0014(A1)
                btst    #$01, $0022(A1)
                beq.s   loc_FB54
                move.l  A0, -(A7)
                move.l  A1, A0
                move.w  A0, D1
                subi.w  #$B000, D1
                bne.s   loc_FB4C
                jsr     Sonic_ResetOnFloor      ; loc_1090C
                bra.s   loc_FB52
loc_FB4C:
                jsr     Tails_ResetTailsOnFloor ; loc_11A66 
loc_FB52:
                move.l  (A7)+, A0
loc_FB54:
                bset    #$03, $0022(A1)
                bset    D6, $0022(A0)
loc_FB5E:
                rts                      
loc_FB60:
                tst.w   $0012(A1)
                bmi     loc_FB5E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_FB5E
                add.w   D1, D1
                cmp.w   D1, D0
                bcc.s   loc_FB5E
                btst    #$00, $0001(A0)
                beq.s   loc_FB86
                not.w   D0
                add.w   D1, D0
loc_FB86:
                lsr.w   #$01, D0
                move.b  $00(A2, D0), D3
                ext.w   D3
                move.w  $000C(A0), D0
                sub.w   D3, D0
                bra     loc_FABC
loc_FB98:                
                tst.w   $0012(A1)
                bmi     loc_FB5E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     loc_FB5E
                add.w   D1, D1
                cmp.w   D1, D0
                bcc     loc_FB5E
                move.w  $000C(A0), D0
                sub.w   D3, D0
                bra     loc_FABC
loc_FBC0:                
                move.w  D1, D2
                add.w   D2, D2
                lea     ($FFFFB000).w, A1
                btst    #$01, $0022(A1)
                bne.s   loc_FBE0
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   loc_FBE0
                cmp.w   D2, D0
                bcs.s   loc_FBF2
loc_FBE0:
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A0)
                bclr    #$03, $0022(A0)
loc_FBF2:
                rts                
loc_FBF4:
                lea     ($FFFFB000).w, A1
                btst    #$03, $0022(A0)
                beq.s   loc_FC1C
                jsr     Sonic_HitFloor2         ; (loc_13846)
                tst.w   D1
                beq.s   loc_FC0C
                bpl.s   loc_FC1C
loc_FC0C:
                lea     ($FFFFB000).w, A1
                bclr    #$03, $0022(A1)
                bclr    #$03, $0022(A0)
loc_FC1C:
                lea     ($FFFFB040).w, A1
                btst    #$04, $0022(A0)
                beq.s   loc_FC44
                jsr     Sonic_HitFloor2         ; (loc_13846)
                tst.w   D1
                beq.s   loc_FC34
                bpl.s   loc_FC44
loc_FC34:
                lea     ($FFFFB040).w, A1
                bclr    #$03, $0022(A1)
                bclr    #$04, $0022(A0)
loc_FC44:
                moveq   #$00, D4
                rts

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 01 - Sonic
; ---------------------------------------------------------------------------            
; Sprite_FC48: Obj_0x01_Sonic:
Obj01:
		tst.w	(Debug_placement_mode).w; is Debug Mode being used?
		beq.s	Obj01_Normal		; if not, branch
		jmp	(DebugMode).l
; ---------------------------------------------------------------------------
; loc_FC54: Sonic_Normal:
Obj01_Normal:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	Obj01_Index(pc,d0.w),d1
		jmp	Obj01_Index(pc,d1)
; ===========================================================================
; loc_FC62: Sonic_Index:
Obj01_Index:	dc.w	Obj01_Init-Obj01_Index
		dc.w	Obj01_Control-Obj01_Index
		dc.w	Sonic_Hurt-Obj01_Index
		dc.w	Sonic_Death-Obj01_Index
		dc.w	Sonic_ResetLevel-Obj01_Index
; ===========================================================================
; loc_FC6C: Sonic_Main:
Obj01_Init:
		addq.b	#2,$24(a0)	; => Obj01_Control
		move.b	#$13,$16(a0)	; this sets Sonic's collision height (2*pixels)
		move.b	#9,$17(a0)
		move.l	#MapUnc_Sonic,4(a0)
		move.w	#$780,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#2,$18(a0)
		move.b	#$18,$19(a0)
		move.b	#4,1(a0)
		move.w	#$600,(Sonic_top_speed).w	; set Sonic's top speed
		move.w	#$C,(Sonic_acceleration).w	; set Sonic's acceleration
		move.w	#$80,(Sonic_deceleration).w	; set Sonic's deceleration
		move.b	#$C,$3E(a0)
		move.b	#$D,$3F(a0)
		move.b	#0,$2C(a0)
		move.b	#4,$2D(a0)
		move.w	#0,($FFFFEED2).w
		move.w	#$3F,d2

loc_FCD4:
		bsr.w	Sonic_RecordPos
		move.w	#0,(a1,d0.w)
		dbf	d2,loc_FCD4

; ---------------------------------------------------------------------------
; Normal state for Sonic
; ---------------------------------------------------------------------------
; loc_FCE2: Sonic_Control:
Obj01_Control:
		tst.w	(Debug_mode_flag).w		; is Debug Mode enabled?
		beq.s	loc_FCFC			; if not, branch
		btst	#4,($FFFFF605).w		; is button B pressed?
		beq.s	loc_FCFC			; if not, branch
		move.w	#1,(Debug_placement_mode).w	; change Sonic into a ring/item
		clr.b	($FFFFF7CC).w			; unlock control
		rts
; -----------------------------------------------------------------------

loc_FCFC:
		tst.b	($FFFFF7CC).w		; are controls locked?
		bne.s	loc_FD08		; if yes, branch
		move.w	($FFFFF604).w,($FFFFF602).w	; copy new held buttons to enable joypad control

loc_FD08:
		btst	#0,$2A(a0)		; is Sonic interacting with another object that holds him in place or controls his movement somehow?
		bne.s	Obj01_ControlsLock	; if yes, branch
		moveq	#0,d0
		move.b	$22(a0),d0
		andi.w	#6,d0
		move.w	Obj01_Modes(pc,d0.w),d1
		jsr	Obj01_Modes(pc,d1)	; run Sonic's movement code
; loc_FD22: Sonic_ControlsLock:
Obj01_ControlsLock:
		bsr.s	Sonic_Display
		bsr.w	Sonic_RecordPos
		bsr.w	Sonic_Water
		move.b	(Primary_Angle).w,$36(a0)
		move.b	(Secondary_Angle).w,$37(a0)
		tst.b	(WindTunnel_flag).w
		beq.s	loc_FD4A
		tst.b	$1C(a0)
		bne.s	loc_FD4A
		move.b	$1D(a0),$1C(a0)

loc_FD4A:
		bsr.w	Sonic_Animate
		tst.b	$2A(a0)
		bmi.s	loc_FD5A
		jsr	(TouchResponse).l

loc_FD5A:
		bra.w	LoadSonicDynPLC
; ===========================================================================
; loc_FD5E:
Obj01_Modes:	dc.w	Obj01_MdNormal-Obj01_Modes	; 0 - not airborne or rolling
		dc.w	Obj01_MdAir-Obj01_Modes		; 2 - airborne
		dc.w	Obj01_MdRoll-Obj01_Modes	; 4 - rolling
		dc.w	Sonic_MdJump-Obj01_Modes	; 6 - jumping
; byte_FD66:
Sonic_MusicList:dc.b	$82
		dc.b	$82
		dc.b	$83
		dc.b	$90
		dc.b	$83
		dc.b	$83
		dc.b	$93
		dc.b	$96
		dc.b	$86
		dc.b	$8F
		dc.b	$81
		dc.b	$85
		dc.b	$84
		dc.b	$8D
		dc.b	$8D
		dc.b	$87
		even
; ===========================================================================

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_FD76:
Sonic_Display:
		move.w	$30(a0),d0
		beq.s	Obj01_Display
		subq.w	#1,$30(a0)
		lsr.w	#3,d0
		bcc.s	Obj01_ChkInvin
; loc_FD84:
Obj01_Display:
		jsr	(DisplaySprite).l
; loc_FD8A:
Obj01_ChkInvin:	; Checks if Sonic has run out of invincibility frames
		tst.b	($FFFFFE2D).w
		beq.s	Obj01_ChkShoes
		tst.w	$32(a0)
		beq.s	Obj01_ChkShoes
		subq.w	#1,$32(a0)
		bne.s	Obj01_ChkShoes
		tst.b	($FFFFF7AA).w
		bne.s	Obj01_RmvInvin
		cmpi.w	#$C,($FFFFFE14).w
		bcs.s	Obj01_RmvInvin
		moveq	#0,d0
		move.b	($FFFFFE10).w,d0
		lea	Sonic_MusicList(pc),a1
		move.b	(a1,d0.w),d0
		jsr	(PlayMusic).l
; loc_FDBE:
Obj01_RmvInvin:
		move.b	#0,($FFFFFE2D).w
; loc_FDC4:
Obj01_ChkShoes:	; Checks if Sonic should still have the speed shoes
		tst.b	($FFFFFE2E).w
		beq.s	Obj01_ExitChk
		tst.w	$34(a0)
		beq.s	Obj01_ExitChk
		subq.w	#1,$34(a0)
		bne.s	Obj01_ExitChk
		move.w	#$600,(Sonic_top_speed).w
		move.w	#$C,(Sonic_acceleration).w
		move.w	#$80,(Sonic_deceleration).w
		move.b	#0,($FFFFFE2E).w
		move.w	#$FC,d0		; restore music tempo
		jmp	(PlayMusic).l
; return_FDF8:
Obj01_ExitChk:
		rts
; End of subroutine Sonic_Display
                  
; ---------------------------------------------------------------------------
; Subroutine to record Sonic's previous positions for invincibility stars
; and input/status flags for Tails' AI to follow
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_FDFA: CopySonicMovesForTails:
Sonic_RecordPos:
		move.w	($FFFFEED2).w,d0
		lea	($FFFFE500).w,a1
		lea	(a1,d0.w),a1
		move.w	8(a0),(a1)+
		move.w	$C(a0),(a1)+
		addq.b	#4,($FFFFEED3).w
		lea	($FFFFE400).w,a1
		move.w	($FFFFF604).w,(a1,d0.w)
		rts
; End of function Sonic_RecordPos

; ---------------------------------------------------------------------------
; Seemingly an earlier subroutine to copy Sonic's status flags for Tails' AI,
; also presnet in the Nick Arcade prototype
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_FE1E: Unused_RecordPos:
		move.w	($FFFFEEE0).w,d0
		subq.b	#4,d0
		lea	($FFFFE600).w,a1
		lea	(a1,d0.w),a2
		move.w	8(a0),d1
		swap.w	d1
		move.w	$C(a0),d1
		cmp.l	(a2),d1
		beq.s	return_FE4C
		addq.b	#4,d0
		lea	(a1,d0.w),a2
		move.w	8(a0),(a2)+
		move.w	$C(a0),(a2)
		addq.b	#4,($FFFFEEE1).w

return_FE4C:
		rts
; End of function Unused_RecordPos

; ---------------------------------------------------------------------------
; Subroutine for Sonic when he's underwater
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_FE4E:
Sonic_Water:
		tst.b	(Water_flag).w		; is this a water level?
		bne.s	Obj01_InWater		; if not, branch

return_FE54:
		rts
; ---------------------------------------------------------------------------
; loc_FE56: Sonic_InLevelWithWater:
Obj01_InWater:
		move.w	(Water_Level_1).w,d0
		cmp.w	$C(a0),d0		; is Sonic underwater?
		bge.s	Obj01_OutWater		; if not, branch

		bset	#6,$22(a0)		; set underwater flag
		bne.s	return_FE54		; if already underwater, branch

		bsr.w	ResumeMusic
		move.b	#$A,($FFFFB340).w	; load Obj0A (Sonic's breathing bubbles) at $FFFFB340
		move.b	#$81,($FFFFB368).w
		move.w	#$300,(Sonic_top_speed).w
		move.w	#6,(Sonic_acceleration).w
		move.w	#$40,(Sonic_deceleration).w
		asr.w	$10(a0)
		asr.w	$12(a0)			; memory operands can only be shifted one bit at a time
		asr.w	$12(a0)
		beq.s	return_FE54
		move.b	#8,($FFFFB300).w	; load Obj08 (splash animation) at $FFFFB300
		move.w	#$AA,d0			; splash sound
		jmp	(PlaySound).l
; ---------------------------------------------------------------------------
; loc_FEA8: Sonic_NotInWater:
Obj01_OutWater:
		bclr	#6,$22(a0)	; clear underwater flag
		beq.s	return_FE54	; if already cleared, branch
		bsr.w	ResumeMusic
		move.w	#$600,(Sonic_top_speed).w
		move.w	#$C,(Sonic_acceleration).w
		move.w	#$80,(Sonic_deceleration).w
		asl.w	$12(a0)
		beq.w	return_FE54
		move.b	#8,($FFFFB300).w	; load Obj08 (splash animation) at $FFFFB300
		cmpi.w	#$F000,$12(a0)
		bgt.s	loc_FEE2
		move.w	#$F000,$12(a0)		; limit upwards y-velocity when exiting out of water

loc_FEE2:
		move.w	#$AA,d0			; splash sound
		jmp	(PlaySound).l
; End of subroutine Sonic_Water

; ===========================================================================
; ---------------------------------------------------------------------------
; Start of subroutine Obj01_MdNormal
; Called if Sonic is neither airborne nor rolling this frame
; ---------------------------------------------------------------------------
; loc_FEEC: Sonic_MdNormal:
Obj01_MdNormal:
		bsr.w	Sonic_CheckSpindash
		bsr.w	Sonic_Jump
		bsr.w	Sonic_SlopeResist
		bsr.w	Sonic_Move
		bsr.w	Sonic_Roll
		bsr.w	Sonic_LevelBound
		jsr	(SpeedToPos).l
		bsr.w	AnglePos
		bsr.w	Sonic_SlopeRepel
		rts
; End of subroutine Obj01_MdNormal

; ===========================================================================
; Start of subroutine Obj01_MdAir
; Called if Sonic is airborne, but not in a ball (thus, probably not jumping)
; loc_FF14: Sonic_MdJump
Obj01_MdAir:
		bsr.w	Sonic_JumpHeight
		bsr.w	Sonic_ChgJumpDir
		bsr.w	Sonic_LevelBound
		jsr	(ObjectFall).l
		btst	#6,$22(a0)	; is Sonic underwater?
		beq.s	loc_FF34	; if not, branch
		subi.w	#$28,$12(a0)	; reduce gravity by $28 ($38-$28=$10)

loc_FF34:
		bsr.w	Sonic_JumpAngle
		bsr.w	Sonic_Floor
		rts
; End of subroutine Obj01_MdAir

; ===========================================================================
; Start of subroutine Obj01_MdRoll
; Called if Sonic is in a ball, but not airborne (thus, probably rolling)
; loc_FF3E: Sonic_MdRoll:
Obj01_MdRoll:
		bsr.w	Sonic_Jump
		bsr.w	Sonic_RollRepel
		bsr.w	Sonic_RollSpeed
		bsr.w	Sonic_LevelBound
		jsr	(SpeedToPos).l
		bsr.w	AnglePos
		bsr.w	Sonic_SlopeRepel
		rts
; End of subroutine Obj01_MdRoll

; ===========================================================================
; Start of subroutine Obj01_MdJump (an Obj01_MdAir clone)
; Called if Sonic is in a ball and airborne (he could be jumping but not necessarily)
; loc_FF5E: Sonic_MdJump2:
Sonic_MdJump:
		bsr.w	Sonic_JumpHeight
		bsr.w	Sonic_ChgJumpDir
		bsr.w	Sonic_LevelBound
		jsr	(ObjectFall).l
		btst	#6,$22(a0)	; is Sonic underwater?
		beq.s	loc_FF7E	; if not, branch
		subi.w	#$28,$12(a0)	; reduce gravity by $28 ($38-$28=$10)

loc_FF7E:
		bsr.w	Sonic_JumpAngle
		bsr.w	Sonic_Floor
		rts
; End of subroutine Obj01_MdJump

; ---------------------------------------------------------------------------
; Subroutine to make Sonic walk/run
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_FF88:
Sonic_Move:
		move.w	(Sonic_top_speed).w,d6
		move.w	(Sonic_acceleration).w,d5
		move.w	(Sonic_deceleration).w,d4

		tst.b	($FFFFF7CA).w			; is Sonic sliding?
		bne.w	Obj01_Traction			; if yes, branch
		tst.w	$2E(a0)				; is Sonic's controls locked?
		bne.w	Obj01_UpdateSpeedOnGround	; if yes, branch
		btst	#2,($FFFFF602).w		; is left being pressed?
		beq.s	Obj01_NotLeft			; if not, branch
		bsr.w	Sonic_MoveLeft
; loc_FFB0:
Obj01_NotLeft:
		btst	#3,($FFFFF602).w	; is right being pressed?
		beq.s	Obj01_NotRight		; if not, branch
		bsr.w	Sonic_MoveRight
; loc_FFBC:
Obj01_NotRight:
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#$C0,d0				; is Sonic on a slope?
		bne.w	Obj01_UpdateSpeedOnGround	; if yes, branch
		tst.w	$14(a0)				; is Sonic moving?
		bne.w	Obj01_UpdateSpeedOnGround	; if yes, branch
		bclr	#5,$22(a0)
		move.b	#5,$1C(a0)	; use "standing" animation
		; check how close/far Sonic is from the edge
		btst	#3,$22(a0)	; is Sonic on the edge?
		beq.s	Sonic_Balance	; if yes, branch
		moveq	#0,d0
		move.b	$3D(a0),d0
		lsl.w	#6,d0
		lea	($FFFFB000).w,a1
		lea	(a1,d0.w),a1
		tst.b	$22(a1)
		bmi.s	Sonic_LookUp
		moveq	#0,d1
		move.b	$19(a1),d1
		move.w	d1,d2
		add.w	d2,d2
		subq.w	#4,d2
		add.w	8(a0),d1
		sub.w	8(a1),d1
		cmpi.w	#4,d1
		blt.s	Sonic_BalanceOnObjLeft
		cmp.w	d2,d1
		bge.s	Sonic_BalanceOnObjRight
		bra.s	Sonic_LookUp
; ===========================================================================
; loc_1001E:
Sonic_Balance:
		jsr	(Sonic_HitFloor).l
		cmpi.w	#$C,d1
		blt.s	Sonic_LookUp
		cmpi.b	#3,$36(a0)
		bne.s	loc_1003A
; loc_10032:
Sonic_BalanceOnObjRight:
		bclr	#0,$22(a0)
		bra.s	loc_10048

loc_1003A:
		cmpi.b	#3,$37(a0)
		bne.s	Sonic_LookUp
; loc_10042:
Sonic_BalanceOnObjLeft:                
		bset	#0,$22(a0)

loc_10048:                
		move.b	#6,$1C(a0)
		bra.s	Obj01_UpdateSpeedOnGround
; ===========================================================================
; loc_10050:
Sonic_LookUp:
		btst	#0,($FFFFF602).w	; is up being pressed?
		beq.s	Sonic_Duck		; if not, branch
		move.b	#7,$1C(a0)		; use "looking up" animation
		bra.s	Obj01_UpdateSpeedOnGround
; ===========================================================================
; loc_10060:
Sonic_Duck:
		btst	#1,($FFFFF602).w	; is down being pressed?
		beq.s	Obj01_UpdateSpeedOnGround	; if not, branch
		move.b	#8,$1C(a0)		; use "ducking" animation
; ===========================================================================
; ---------------------------------------------------------------------------
; updates Sonic's speed on the ground
; ---------------------------------------------------------------------------
; sub_1006E:
Obj01_UpdateSpeedOnGround:
		move.b	($FFFFF602).w,d0
		andi.b	#$C,d0
		bne.s	Obj01_Traction
		move.w	$14(a0),d0
		beq.s	Obj01_Traction
		bmi.s	Obj01_SettleLeft

; slow down when facing right and not pressing a direction
; Obj01_SettleRight:
		sub.w	d5,d0
		bcc.s	loc_10088
		move.w	#0,d0

loc_10088:
		move.w	d0,$14(a0)
		bra.s	Obj01_Traction
; ---------------------------------------------------------------------------
; slow down when facing left and not pressing a direction
; loc_1008E:
Obj01_SettleLeft:
		add.w	d5,d0
		bcc.s	loc_10096
		move.w	#0,d0

loc_10096:
		move.w	d0,$14(a0)

; increase or decrease speed on the ground
; loc_1009A:
Obj01_Traction:
		move.b	$26(a0),d0
		jsr	(CalcSine).l
		muls.w	$14(a0),d1
		asr.l	#8,d1
		move.w	d1,$10(a0)
		muls.w	$14(a0),d0
		asr.l	#8,d0
		move.w	d0,$12(a0)

; stops Sonic from running through walls that meet the ground
; loc_100B8:
Obj01_CheckWallsOnGround:
		move.b	$26(a0),d0
		addi.b	#$40,d0
		bmi.s	loc_10128
		move.b	#$40,d1		; rotate 90 degress clockwise
		tst.w	$14(a0)		; is Sonic moving?
		beq.s	loc_10128	; if not, branch
		bmi.s	loc_100D0	; if negative, branch
		neg.w	d1		; rotate COUNTER-clockwise

loc_100D0:
		move.b	$26(a0),d0
		add.b	d1,d0
		move.w	d0,-(sp)
		bsr.w	Sonic_WalkSpeed
		move.w	(sp)+,d0
		tst.w	d1
		bpl.s	loc_10128
		asl.w	#8,d1
		addi.b	#$20,d0
		andi.b	#$C0,d0
		beq.s	loc_10124
		cmpi.b	#$40,d0
		beq.s	loc_10112
		cmpi.b	#$80,d0
		beq.s	loc_1010C
		add.w	d1,$10(a0)
		bset	#5,$22(a0)
		move.w	#0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_1010C:
		sub.w	d1,$12(a0)
		rts
; ---------------------------------------------------------------------------

loc_10112:
		sub.w	d1,$10(a0)
		bset	#5,$22(a0)
		move.w	#0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_10124:
		add.w	d1,$12(a0)
; ---------------------------------------------------------------------------

loc_10128:
		rts
; End of subroutine Sonic_Move    


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_1012A:
Sonic_MoveLeft:
		move.w	$14(a0),d0
		beq.s	loc_10132	; is Sonic starting to move to the right?
		bpl.s	loc_10164	; if not, branch

loc_10132:
		bset	#0,$22(a0)
		bne.s	loc_10146
		bclr	#5,$22(a0)
		move.b	#1,$1D(a0)	; force walking animation to restart if it's already in-progress

loc_10146:
		sub.w	d5,d0		; add acceleration to the left
		move.w	d6,d1
		neg.w	d1
		cmp.w	d1,d0		; compare new speed with top speed
		bgt.s	loc_10158	; if new speed is less than the maximum, branch
		add.w	d5,d0		; remove this frame's acceleration change
		cmp.w	d1,d0		; compare speed with top speed
		ble.s	loc_10158	; if speed was already greater than the maximum, branch
		move.w	d1,d0		; limit speed on ground going left

loc_10158:
		move.w	d0,$14(a0)
		move.b	#0,$1C(a0)	; use walking animation
		rts
; ---------------------------------------------------------------------------

loc_10164:
		sub.w	d4,d0
		bcc.s	loc_1016C
		move.w	#-$80,d0

loc_1016C:
		move.w	d0,$14(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#$C0,d0
		bne.s	return_1019A
		cmpi.w	#$400,d0             
		blt.s	return_1019A
		move.b	#$D,$1C(a0)	; use "stopping" animation
		bclr	#0,$22(a0)
		move.w	#$A4,d0
		jsr	(PlaySound).l

return_1019A:
		rts
; End of subroutine Sonic_MoveLeft


;=============================================================================== 
; Sub Routine Sonic_MoveRight
; [ Begin ]                         
;===============================================================================                  
Sonic_MoveRight: ; loc_1019C:
                move.w  $0014(A0), D0
                bmi.s   loc_101D0
                bclr    #$00, $0022(A0)
                beq.s   loc_101B6
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
loc_101B6:
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   loc_101C4
                sub.w   D5, D0
                cmp.w   D6, D0
                bge.s   loc_101C4
                move.w  D6, D0
loc_101C4:
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                rts 
loc_101D0:
                add.w   D4, D0
                bcc.s   loc_101D8
                move.w  #$0080, D0
loc_101D8:
                move.w  D0, $0014(A0)
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   loc_10206
                cmpi.w  #$FC00, D0
                bgt.s   loc_10206
                move.b  #$0D, $001C(A0)
                bset    #$00, $0022(A0)
                move.w  #$00A4, D0
                jsr     (PlaySound)              ; loc_14C6
loc_10206:
                rts
;=============================================================================== 
; Sub Routine Sonic_MoveRight
; [ End ]                         
;===============================================================================    
                   
;=============================================================================== 
; Sub Routine Sonic_RollSpeed
; [ Begin ]                         
;===============================================================================                           
Sonic_RollSpeed: ; loc_10208:
                move.w  (Sonic_top_speed).w, D6
                asl.w   #$01, D6
                move.w  (Sonic_acceleration).w, D5
                asr.w   #$01, D5
                move.w  (Sonic_deceleration).w, D4
                asr.w   #$02, D4
                tst.b   ($FFFFF7CA).w
                bne     loc_10284
                tst.w   $002E(A0)
                bne.s   loc_10240
                btst    #$02, ($FFFFF602).w
                beq.s   loc_10234
                bsr     Sonic_RollLeft          ; loc_102BA
loc_10234:                
                btst    #$03, ($FFFFF602).w
                beq.s   loc_10240
                bsr     Sonic_RollRight         ; loc_102DE
loc_10240:                
                move.w  $0014(A0), D0                
                beq.s   loc_10262
                bmi.s   loc_10256
                sub.w   D5, D0
                bcc.s   loc_10250
                move.w  #$0000, D0
loc_10250:
                move.w  D0, $0014(A0)
                bra.s   loc_10262
loc_10256:
                add.w   D5, D0
                bcc.s   loc_1025E
                move.w  #$0000, D0
loc_1025E:                
                move.w  D0, $0014(A0) 
loc_10262:                
                tst.w   $0014(A0)
                bne.s   loc_10284
                bclr    #$02, $0022(A0)
                move.b  #$13, $0016(A0)
                move.b  #$09, $0017(A0)
                move.b  #$05, $001C(A0)
                subq.w  #$05, $000C(A0)
loc_10284:                
                move.b  $0026(A0), D0
                jsr     CalcSine                ; loc_320A
                muls.w  $0014(A0), D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
                muls.w  $0014(A0), D1
                asr.l   #$08, D1
                cmpi.w  #$1000, D1
                ble.s   loc_102A8
                move.w  #$1000, D1
loc_102A8:
                cmpi.w  #$F000, D1
                bge.s   loc_102B2
                move.w  #$F000, D1
loc_102B2:
                move.w  D1, $0010(A0)
                bra     Obj01_CheckWallsOnGround   
;=============================================================================== 
; Sub Routine Sonic_RollSpeed
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine Sonic_RollLeft
; [ Begin ]                         
;===============================================================================  
Sonic_RollLeft: ; loc_102BA:
                move.w  $0014(A0), D0
                beq.s   loc_102C2
                bpl.s   loc_102D0
loc_102C2:
                bset    #$00, $0022(A0)
                move.b  #$02, $001C(A0)
                rts
loc_102D0:
                sub.w   D4, D0
                bcc.s   loc_102D8
                move.w  #$FF80, D0
loc_102D8:
                move.w  D0, $0014(A0)
                rts 
;=============================================================================== 
; Sub Routine Sonic_RollLeft
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine Sonic_RollRight
; [ Begin ]                         
;===============================================================================  
Sonic_RollRight: ; loc_102DE:
                move.w  $0014(A0), D0
                bmi.s   loc_102F2
                bclr    #$00, $0022(A0)
                move.b  #$02, $001C(A0)
                rts
loc_102F2:
                add.w   D4, D0
                bcc.s   loc_102FA
                move.w  #$0080, D0
loc_102FA:
                move.w  D0, $0014(A0)
                rts   
;=============================================================================== 
; Sub Routine Sonic_RollRight
; [ End ]                         
;===============================================================================
                  
;=============================================================================== 
; Sub Routine Sonic_ChgJumpDir
; [ Begin ]                         
;===============================================================================             
Sonic_ChgJumpDir: ; loc_10300:
                move.w  (Sonic_top_speed).w, D6
                move.w  (Sonic_acceleration).w, D5
                asl.w   #$01, D5
                btst    #$04, $0022(A0)
                bne.s   loc_1034A
                move.w  $0010(A0), D0
                btst    #$02, ($FFFFF602).w
                beq.s   loc_10330
                bset    #$00, $0022(A0)
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   loc_10330
                move.w  D1, D0
loc_10330:
                btst    #$03, ($FFFFF602).w
                beq.s   loc_10346
                bclr    #$00, $0022(A0)
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   loc_10346
                move.w  D6, D0
loc_10346:
                move.w  D0, $0010(A0)
loc_1034A:
                cmpi.w  #$0060, ($FFFFEED8).w
                beq.s   loc_1035C
                bcc.s   loc_10358
                addq.w  #$04, ($FFFFEED8).w
loc_10358:
                subq.w  #$02, ($FFFFEED8).w
loc_1035C:
                cmpi.w  #$FC00, $0012(A0)
                bcs.s   loc_1038A                 
                move.w  $0010(A0), D0
                move.w  D0, D1
                asr.w   #$05, D1
                beq.s   loc_1038A
                bmi.s   loc_1037E
                sub.w   D1, D0
                bcc.s   loc_10378
                move.w  #$0000, D0
loc_10378:
                move.w  D0, $0010(A0)
                rts
loc_1037E:
                sub.w   D1, D0
                bcs.s   loc_10386
                move.w  #$0000, D0
loc_10386:
                move.w  D0, $0010(A0)
loc_1038A:                
                rts    
;=============================================================================== 
; Sub Routine Sonic_ChgJumpDir
; [ End ]                         
;===============================================================================
                      
;=============================================================================== 
; Sub Routine Sonic_LevelBound
; [ Begin ]                         
;===============================================================================                               
; loc_1038C: Sonic_LevelBoundaries:
Sonic_LevelBound:
                move.l  $0008(A0), D1
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D1
                swap.w  D1
                move.w  ($FFFFEEC8).w, D0
                addi.w  #$0010, D0
                cmp.w   D1, D0
                bhi.s   loc_103F8
                move.w  ($FFFFEECA).w, D0
                addi.w  #$0128, D0
                tst.b   ($FFFFF7AA).w
                bne.s   loc_103BA
                addi.w  #$0040, D0
loc_103BA:
                cmp.w   D1, D0
                bls.s   loc_103F8
loc_103BE:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                blt.s   loc_103CE
                rts
loc_103CE:
                bra     JmpTo_KillSonic          ; loc_10E30
                cmpi.w  #$1001, ($FFFFFE10).w
                bne     JmpTo_KillSonic          ; loc_10E30
                cmpi.w  #$2000, ($FFFFB008).w
                bcs     JmpTo_KillSonic          ; loc_10E30
                clr.b   ($FFFFFE30).w
                move.w  #$0001, ($FFFFFE02).w
                move.w  #$0103, ($FFFFFE10).w
                rts
loc_103F8:
                move.w  D0, $0008(A0)
                move.w  #$0000, $000A(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0014(A0)
                bra.s   loc_103BE
;=============================================================================== 
; Sub Routine Sonic_LevelBound
; [ End ]                         
;===============================================================================                  
                
;=============================================================================== 
; Sub Routine Sonic_Roll
; [ Begin ]                         
;===============================================================================                   
Sonic_Roll: ; loc_10410:
                tst.b   ($FFFFF7CA).w
                bne.s   Sonic_NoRoll            ; loc_10436
                move.w  $0014(A0), D0
                bpl.s   loc_1041E
                neg.w   D0
loc_1041E:
                cmpi.w  #$0080, D0
                bcs.s   Sonic_NoRoll            ; loc_10436
                move.b  ($FFFFF602).w, D0
                andi.b  #$0C, D0
                bne.s   Sonic_NoRoll            ; loc_10436
                btst    #$01, ($FFFFF602).w
                bne.s   loc_10438
Sonic_NoRoll: ; loc_10436:
                rts
loc_10438:
                btst    #$02, $0022(A0)
                beq.s   Sonic_DoRoll            ; loc_10442
                rts
;===============================================================================                  
Sonic_DoRoll: ; loc_10442:
                bset    #$02, $0022(A0)
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                addq.w  #$05, $000C(A0)
                move.w  #$00BE, D0
                jsr     (PlaySound)              ; loc_14C6
                tst.w   $0014(A0)
                bne.s   loc_10474
                move.w  #$0200, $0014(A0)
loc_10474:
                rts
;=============================================================================== 
; Sub Routine Sonic_Roll
; [ End ]                         
;===============================================================================    
              
;=============================================================================== 
; Sub Routine Sonic_Jump
; [ Begin ]                         
;===============================================================================                
Sonic_Jump: ; loc_10476:
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq     loc_1051A
                moveq   #$00, D0
                move.b  $0026(A0), D0
                addi.b  #$80, D0
                bsr     loc_136F2
                cmpi.w  #$0006, D1
                blt     loc_1051A
                move.w  #$0680, D2
                btst    #$06, $0022(A0)
                beq.s   loc_104A8
                move.w  #$0380, D2
loc_104A8:
                moveq   #$00, D0
                move.b  $0026(A0), D0
                subi.b  #$40, D0
                jsr     CalcSine                ; loc_320A
                muls.w  D2, D1
                asr.l   #$08, D1
                add.w   D1, $0010(A0)
                muls.w  D2, D0
                asr.l   #$08, D0
                add.w   D0, $0012(A0)
                bset    #$01, $0022(A0)
                bclr    #$05, $0022(A0)
                addq.l  #$04, A7
                move.b  #$01, $003C(A0)
                clr.b   $0038(A0)
                move.w  #$00A0, D0
                jsr     (PlaySound)              ; loc_14C6
                move.b  #$13, $0016(A0)
                move.b  #$09, $0017(A0)
                btst    #$02, $0022(A0)
                bne.s   loc_1051C
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                bset    #$02, $0022(A0)
                addq.w  #$05, $000C(A0)
loc_1051A:                
                rts
loc_1051C:
                bset    #$04, $0022(A0)
                rts   
;=============================================================================== 
; Sub Routine Sonic_Jump
; [ End ]                         
;===============================================================================   

; ---------------------------------------------------------------------------
; Subroutine letting Sonic control the height of the jump
; when the jump button is released
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_10524:
Sonic_JumpHeight:
		tst.b	$3C(A0)		; is Sonic jumping?
		beq.s	Sonic_UpVelCap	; if not, branch

		move.w	#-$400,d1
		btst	#6,$22(a0)	; is Sonic underwater?
		beq.s	loc_1053A	; if not, branch
		move.w	#-$200,d1

loc_1053A:
		cmp.w	$12(a0),d1	; is Sonic going up faster than d1?
		ble.s	return_1054E	; if not, branch
		move.b	($FFFFF602).w,d0
		andi.b	#$70,d0		; is A/B/C pressed?
		bne.s	return_1054E	; if yes, branch
		move.w	d1,$12(a0)	; immediately reduce Sonic's upward speed to d1

return_1054E:
		rts  
; ---------------------------------------------------------------------------
; loc_10550:
Sonic_UpVelCap:
		cmpi.w	#-$FC0,$12(a0)	; is Sonic moving up really fast?
		bge.s	return_1055E	; if not, branch
		move.w	#-$FC0,$12(a0)	; cap upward speed

return_1055E:
		rts
; End of subroutine Sonic_JumpHeight
                  
; ---------------------------------------------------------------------------
; Subroutine to check for starting to charge a spindash
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_10560: Sonic_Spindash:
Sonic_CheckSpindash:
		tst.b	$39(a0)
		bne.s	Sonic_UpdateSpindash
		cmpi.b	#8,$1C(a0)
		bne.s	return_10592
		move.b	($FFFFF603).w,d0
		andi.b	#$70,d0
		beq.w	return_10592
		move.b	#9,$1C(a0)
		move.w	#$BE,d0
		jsr	(PlaySound).l
		addq.l	#4,sp
		move.b	#1,$39(a0)

return_10592:
		rts
; ===========================================================================
; loc_10594:
Sonic_UpdateSpindash:
		move.b	($FFFFF602).w,d0
		btst	#1,d0
		bne.s	Sonic_ChargingSpindash

		move.b	#$E,$16(a0)
		move.b	#7,$17(a0)
		move.b	#2,$1C(a0)
		addq.w	#5,$C(a0)
		move.b	#0,$39(a0)
		move.w	#$2000,($FFFFEED0).w
		move.w	#$800,$14(a0)
		btst	#0,$22(a0)
		beq.s	loc_105D2
		neg.w	$14(a0)

loc_105D2:
		bset	#2,$22(a0)
		rts
; ===========================================================================
; loc_105DA:
Sonic_ChargingSpindash:
		move.b	($FFFFF603).w,d0
		andi.b	#$70,d0
		beq.w	loc_105E8
		nop

loc_105E8:
		addq.l  #4,sp
		rts
; End of function Sonic_CheckSpindash

;=============================================================================== 
; Sub Routine Sonic_SlopeResist
; [ Begin ]                         
;===============================================================================                      
Sonic_SlopeResist: ; loc_105EC:
                move.b  $0026(A0), D0
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   loc_10620
                move.b  $0026(A0), D0
                jsr     CalcSine                ; loc_320A
                muls.w  #$0020, D0
                asr.l   #$08, D0
                tst.w   $0014(A0)
                beq.s   loc_10620
                bmi.s   loc_1061C
                tst.w   D0
                beq.s   loc_1061A
                add.w   D0, $0014(A0)
loc_1061A:
                rts
loc_1061C:
                add.w   D0, $0014(A0)
loc_10620:
                rts
;=============================================================================== 
; Sub Routine Sonic_SlopeResist
; [ End ]                         
;=============================================================================== 
 
;=============================================================================== 
; Sub Routine Sonic_RollRepel
; [ Begin ]                         
;===============================================================================  
Sonic_RollRepel: ; loc_10622:
                move.b  $0026(A0), D0
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   loc_1065C
                move.b  $0026(A0), D0
                jsr     CalcSine                ; loc_320A
                muls.w  #$0050, D0
                asr.l   #$08, D0
                tst.w   $0014(A0)
                bmi.s   loc_10652
                tst.w   D0
                bpl.s   loc_1064C
                asr.l   #$02, D0
loc_1064C:
                add.w   D0, $0014(A0)
                rts
loc_10652:
                tst.w   D0
                bmi.s   loc_10658
                asr.l   #$02, D0
loc_10658:
                add.w   D0, $0014(A0)
loc_1065C:
                rts  
;=============================================================================== 
; Sub Routine Sonic_RollRepel
; [ End ]                         
;===============================================================================   
               
;=============================================================================== 
; Sub Routine Sonic_SlopeRepel
; [ Begin ]                         
;===============================================================================  
Sonic_SlopeRepel: ; loc_1065E:
                nop
                tst.b   $0038(A0)
                bne.s   loc_10698
                tst.w   $002E(A0)
                bne.s   loc_1069A
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   loc_10698
                move.w  $0014(A0), D0
                bpl.s   loc_10682
                neg.w   D0
loc_10682:
                cmpi.w  #$0280, D0
                bcc.s   loc_10698
                clr.w   $0014(A0)
                bset    #$01, $0022(A0)
                move.w  #$001E, $002E(A0)
loc_10698:
                rts
loc_1069A:
                subq.w  #$01, $002E(A0)
                rts 
;=============================================================================== 
; Sub Routine Sonic_SlopeRepel
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine Sonic_JumpAngle
; [ Begin ]                         
;=============================================================================== 
Sonic_JumpAngle: ; loc_106A0:
                move.b  $0026(A0), D0
                beq.s   loc_106BA
                bpl.s   loc_106B0
                addq.b  #$02, D0
                bcc.s   loc_106AE
                moveq   #$00, D0
loc_106AE:
                bra.s   loc_106B6
loc_106B0:                
                subq.b  #$02, D0
                bcc.s   loc_106B6
                moveq   #$00, D0
loc_106B6:
                move.b  D0, $0026(A0)
loc_106BA:
                move.b  $0027(A0), D0
                beq.s   loc_106FE
                tst.w   $0014(A0)
                bmi.s   loc_106DE
loc_106C6:
                move.b  $002D(A0), D1
                add.b   D1, D0
                bcc.s   loc_106DC
                subq.b  #$01, $002C(A0)
                bcc.s   loc_106DC
                move.b  #$00, $002C(A0)
                moveq   #$00, D0
loc_106DC:
                bra.s   loc_106FA
loc_106DE:
                tst.b   $0029(A0)
                bne.s   loc_106C6
                move.b  $002D(A0), D1
                sub.b   D1, D0
                bcc.s   loc_106FA
                subq.b  #$01, $002C(A0)
                bcc.s   loc_106FA
                move.b  #$00, $002C(A0)
                moveq   #$00, D0
loc_106FA:
                move.b  D0, $0027(A0)
loc_106FE:                
                rts
;=============================================================================== 
; Sub Routine Sonic_JumpAngle
; [ End ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine Sonic_Floor
; [ Begin ]                         
;=============================================================================== 
Sonic_Floor: ; loc_10700:
                move.l  #$FFFFD000, (Collision_addr).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   loc_10718
                move.l  #$FFFFD600, (Collision_addr).w
loc_10718:
                move.b  $003F(A0), D5
                move.w  $0010(A0), D1
                move.w  $0012(A0), D2
                jsr     CalcAngle               ; loc_34A2
                move.b  D0, $002B(A0)
                subi.b  #$20, D0
                andi.b  #$C0, D0
                cmpi.b  #$40, D0
                beq     loc_107EC
                cmpi.b  #$80, D0
                beq     loc_1084E
                cmpi.b  #$C0, D0
                beq     loc_108AA
                bsr     Sonic_HitWall           ; loc_13AFC
                tst.w   D1
                bpl.s   loc_10760
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
loc_10760:
                bsr     loc_1397A
                tst.w   D1
                bpl.s   loc_10772
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
loc_10772:
                bsr     loc_13736
                tst.w   D1
                bpl.s   loc_107EA
                move.b  $0012(A0), D2
                addq.b  #$08, D2
                neg.b   D2
                cmp.b   D2, D1
                bge.s   loc_1078A
                cmp.b   D2, D0
                blt.s   loc_107EA
loc_1078A:
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Sonic_ResetOnFloor      ; loc_1090C
                move.b  #$00, $001C(A0)
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   loc_107C8
                move.b  D3, D0
                addi.b  #$10, D0
                andi.b  #$20, D0
                beq.s   loc_107BA
                asr.w   $0012(A0)
                bra.s   loc_107DC
loc_107BA:
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
                rts
loc_107C8:
                move.w  #$0000, $0010(A0)
                cmpi.w  #$0FC0, $0012(A0)
                ble.s   loc_107DC
                move.w  #$0FC0, $0012(A0)
loc_107DC:
                move.w  $0012(A0), $0014(A0)
                tst.b   D3
                bpl.s   loc_107EA
                neg.w   $0014(A0)
loc_107EA:
                rts 
loc_107EC:
                bsr     Sonic_HitWall           ; loc_13AFC
                tst.w   D1
                bpl.s   loc_10806
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
                move.w  $0012(A0), $0014(A0)
                rts
loc_10806:
                bsr     Sonic_DontRunOnWalls    ; loc_139CC
                tst.w   D1
                bpl.s   loc_10820
                sub.w   D1, $000C(A0)
                tst.w   $0012(A0)
                bpl.s   loc_1081E
                move.w  #$0000, $0012(A0)
loc_1081E:
                rts
loc_10820:
                tst.w   $0012(A0)
                bmi.s   loc_1084C
                bsr     loc_13736
                tst.w   D1
                bpl.s   loc_1084C
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Sonic_ResetOnFloor      ; loc_1090C
                move.b  #$00, $001C(A0)
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
loc_1084C:  
                rts
loc_1084E:
                bsr     Sonic_HitWall           ; loc_13AFC
                tst.w   D1
                bpl.s   loc_10860
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
loc_10860:
                bsr     loc_1397A
                tst.w   D1
                bpl.s   loc_10872
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
loc_10872:
                bsr     Sonic_DontRunOnWalls    ; loc_139CC
                tst.w   D1
                bpl.s   loc_108A8
                sub.w   D1, $000C(A0)
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   loc_10892
                move.w  #$0000, $0012(A0)
                rts
loc_10892:
                move.b  D3, $0026(A0)
                bsr     Sonic_ResetOnFloor      ; loc_1090C
                move.w  $0012(A0), $0014(A0)
                tst.b   D3
                bpl.s   loc_108A8
                neg.w   $0014(A0)
loc_108A8:
                rts
loc_108AA:
                bsr     loc_1397A
                tst.w   D1
                bpl.s   loc_108C4
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
                move.w  $0012(A0), $0014(A0)
                rts
loc_108C4:
                bsr     Sonic_DontRunOnWalls    ; loc_139CC
                tst.w   D1
                bpl.s   loc_108DE
                sub.w   D1, $000C(A0)
                tst.w   $0012(A0)
                bpl.s   loc_108DC
                move.w  #$0000, $0012(A0)
loc_108DC:
                rts
loc_108DE:
                tst.w   $0012(A0)
                bmi.s   loc_1090A
                bsr     loc_13736
                tst.w   D1
                bpl.s   loc_1090A
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Sonic_ResetOnFloor      ; loc_1090C
                move.b  #$00, $001C(A0)
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
loc_1090A:
                rts
;=============================================================================== 
; Sub Routine Sonic_Floor
; [ End ]                         
;===============================================================================     
            
;=============================================================================== 
; Sub Routine Sonic_ResetOnFloor
; [ Begin ]                         
;===============================================================================                  
Sonic_ResetOnFloor: ; loc_1090C:
                btst    #$04, $0022(A0)
                beq.s   loc_1091A
                nop
                nop
                nop
loc_1091A:
                bclr    #$05, $0022(A0)
                bclr    #$01, $0022(A0)
                bclr    #$04, $0022(A0)
                btst    #$02, $0022(A0)
                beq.s   loc_10950
                bclr    #$02, $0022(A0)
                move.b  #$13, $0016(A0)
                move.b  #$09, $0017(A0)
                move.b  #$00, $001C(A0)
                subq.w  #$05, $000C(A0)
loc_10950:
                move.b  #$00, $003C(A0)
                move.w  #$0000, ($FFFFF7D0).w
                move.b  #$00, $0027(A0)
                move.b  #$00, $0029(A0)
                rts 
;=============================================================================== 
; Sub Routine Sonic_ResetOnFloor
; [ End ]                         
;===============================================================================                  
                
Sonic_Hurt: ; loc_1096A:
                tst.b   $0025(A0)
                bmi     loc_109E2
                jsr     SpeedToPos              ; loc_D27A
                addi.w  #$0030, $0012(A0)
                btst    #$06, $0022(A0)
                beq.s   loc_1098C
                subi.w  #$0020, $0012(A0)
loc_1098C:                    
                bsr     Sonic_HurtStop          ; loc_109A6
                bsr     Sonic_LevelBound   ; loc_1038C
                bsr     Sonic_RecordPos  ; loc_FDFA
                bsr     Sonic_Animate           ; loc_10AB2
                bsr     LoadSonicDynPLC  ; loc_10DDC
                jmp     DisplaySprite           ; loc_D3C2
;=============================================================================== 
; Sub Routine Sonic_HurtStop
; [ Begin ]                         
;===============================================================================                   
Sonic_HurtStop: ; loc_109A6:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs     JmpTo_KillSonic          ; loc_10E30
                bsr     Sonic_Floor             ; loc_10700
                btst    #$01, $0022(A0)
                bne.s   loc_109E0
                moveq   #$00, D0
                move.w  D0, $0012(A0)
                move.w  D0, $0010(A0)
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                subq.b  #$02, $0024(A0)
                move.w  #$0078, $0030(A0)
loc_109E0:
                rts
;=============================================================================== 
; Sub Routine Sonic_HurtStop
; [ End ]                         
;===============================================================================  
                
loc_109E2:
                subq.b  #$02, $0024(A0)
                move.b  #$00, $0025(A0)
                bsr     Sonic_RecordPos  ; loc_FDFA
                bsr     Sonic_Animate           ; loc_10AB2
                bsr     LoadSonicDynPLC  ; loc_10DDC
                jmp     DisplaySprite           ; loc_D3C2
Sonic_Death: ; loc_109FE:                
                bsr     Sonic_GameOver          ; loc_10A1A
                jsr     ObjectFall              ; loc_D24E
                bsr     Sonic_RecordPos  ; loc_FDFA
                bsr     Sonic_Animate           ; loc_10AB2
                bsr     LoadSonicDynPLC  ; loc_10DDC
                jmp     DisplaySprite           ; loc_D3C2
                
;=============================================================================== 
; Sub Routine Sonic_GameOver
; [ Begin ]                         
;===============================================================================                   
Sonic_GameOver: ; loc_10A1A:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$0100, D0
                cmp.w   $000C(A0), D0
                bcc     loc_10A9C
                move.w  #$FFC8, $0012(A0)
                addq.b  #$02, $0024(A0)
                clr.b   ($FFFFFE1E).w
                addq.b  #$01, ($FFFFFE1C).w
                subq.b  #$01, ($FFFFFE12).w
                bne.s   loc_10A70
                move.w  #$0000, $003A(A0)
                move.b  #$39, ($FFFFB080).w
                move.b  #$39, ($FFFFB0C0).w                 
                move.b  #$01, ($FFFFB0DA).w
                clr.b   ($FFFFFE1A).w
loc_10A5E:                
                move.w  #$009B, D0
                jsr     (PlayMusic)            ; loc_14C0
                moveq   #$03, D0
                jmp     LoadPLC                 ; loc_173C   
loc_10A70:
                move.w  #$003C, $003A(A0)
                tst.b   ($FFFFFE1A).w
                beq.s   loc_10A9C
                move.w  #$0000, $003A(A0)
                move.b  #$39, ($FFFFB080).w
                move.b  #$39, ($FFFFB0C0).w
                move.b  #$02, ($FFFFB09A).w
                move.b  #$03, ($FFFFB0DA).w
                bra.s   loc_10A5E
loc_10A9C:
                rts
;=============================================================================== 
; Sub Routine Sonic_GameOver
; [ End ]                         
;===============================================================================                 
                
Sonic_ResetLevel: ; loc_10A9E:
                tst.w   $003A(A0)
                beq.s   loc_10AB0
                subq.w  #$01, $003A(A0)
                bne.s   loc_10AB0
                move.w  #$0001, ($FFFFFE02).w
loc_10AB0:
                rts
                
;=============================================================================== 
; Sub Routine Sonic_Animate
; [ Begin ]                         
;===============================================================================                  
Sonic_Animate: ; loc_10AB2:
                lea     (Sonic_AnimateData), A1 ; loc_10CB4
                moveq   #$00, D0
                move.b  $001C(A0), D0
                cmp.b   $001D(A0), D0
                beq.s   loc_10ADA
                move.b  D0, $001D(A0)
                move.b  #$00, $001B(A0)
                move.b  #$00, $001E(A0)
                bclr    #$05, $0022(A0)
loc_10ADA:
                add.w   D0, D0
                adda.w  $00(A1, D0), A1
                move.b  (A1), D0
                bmi.s   loc_10B4A
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                subq.b  #$01, $001E(A0) 
                bpl.s   loc_10B18
                move.b  D0, $001E(A0)             
loc_10B00:                
                moveq   #$00, D1
                move.b  $001B(A0), D1
                move.b  $01(A1, D1), D0
                cmpi.b  #$F0, D0
                bcc.s   loc_10B1A
loc_10B10:                
                move.b  D0, $001A(A0)
                addq.b  #$01, $001B(A0)
loc_10B18:                
                rts
loc_10B1A:
                addq.b  #$01, D0
                bne.s   loc_10B2A
                move.b  #$00, $001B(A0)
                move.b  $0001(A1), D0
                bra.s   loc_10B10
loc_10B2A:
                addq.b  #$01, D0
                bne.s   loc_10B3E
                move.b  $02(A1, D1), D0
                sub.b   D0, $001B(A0)
                sub.b   D0, D1
                move.b  $01(A1, D1), D0
                bra.s   loc_10B10
loc_10B3E:
                addq.b  #$01, D0
                bne.s   loc_10B48
                move.b  $02(A1, D1), $001C(A0)
loc_10B48: 
                rts            
loc_10B4A: 
                subq.b  #$01, $001E(A0)
                bpl.s   loc_10B18
                addq.b  #$01, D0
                bne     loc_10C3E
                moveq   #$00, D0
                move.b  $0027(A0), D0
                bne     loc_10BD8
                moveq   #$00, D1
                move.b  $0026(A0), D0
                move.b  $0022(A0), D2
                andi.b  #$01, D2
                bne.s   loc_10B72
                not.b  d0
loc_10B72:
                addi.b  #$10, D0
                bpl.s   loc_10B7A
                moveq   #$03, D1
loc_10B7A:
                andi.b  #$FC, $0001(A0)
                eor.b   D1, D2
                or.b    D2, $0001(A0)
                btst    #$05, $0022(A0)
                bne     loc_10C82
                lsr.b   #$04, D0
                andi.b  #$06, D0
                move.w  $0014(A0), D2
                bpl.s   loc_10B9E
                neg.w   D2
loc_10B9E:
                lea     (Sonic_Animate_Run), A1 ; loc_10D00
                cmpi.w  #$0600, D2
                bcc.s   loc_10BB0
                lea     (Sonic_Animate_Walk), A1 ; loc_10CF2
loc_10BB0:
                move.b  D0, D1
                lsr.b   #$01, D1
                add.b   D1, D0
                add.b   D0, D0
                add.b   D0, D0
                move.b  D0, D3
                neg.w   D2
                addi.w  #$0800, D2
                bpl.s   loc_10BC6
                moveq   #$00, D2
loc_10BC6:
                lsr.w   #$08, D2
                lsr.w   #$01, D2
                move.b  D2, $001E(A0)
                bsr     loc_10B00
                add.b   D3, $001A(A0)
                rts    
loc_10BD8:
                move.b  $0027(A0), D0
                moveq   #$00, D1
                move.b  $0022(A0), D2
                andi.b  #$01, D2
                bne.s   loc_10C06
                andi.b  #$FC, $0001(A0)
                addi.b  #$0B, D0
                divu.w  #$0016, D0
                addi.b  #$9B, D0
                move.b  D0, $001A(A0)
                move.b  #$00, $001E(A0)
                rts
loc_10C06:
                andi.b  #$FC, $0001(A0)
                tst.b   $0029(A0)
                beq.s   loc_10C1E
                ori.b   #$01, $0001(A0)
                addi.b  #$0B, D0
                bra.s   loc_10C2A
loc_10C1E:
                ori.b   #$03, $0001(A0)
                neg.b   D0
                addi.b  #$8F, D0
loc_10C2A:
                divu.w  #$0016, D0
                addi.b  #$9B, D0
                move.b  D0, $001A(A0)
                move.b  #$00, $001E(A0)
                rts 
loc_10C3E:
                addq.b  #$01, D0
                bne.s   loc_10C82
                move.w  $0014(A0), D2
                bpl.s   loc_10C4A
                neg.w   D2
loc_10C4A:
                lea     (Sonic_Animate_Roll2), A1 ; loc_10D18
                cmpi.w  #$0600, D2
                bcc.s   loc_10C5C
                lea     (Sonic_Animate_Roll), A1 ; loc_10D0E
loc_10C5C:
                neg.w   D2
                addi.w  #$0400, D2
                bpl.s   loc_10C66
                moveq   #$00, D2
loc_10C66:
                lsr.w   #$08, D2
                move.b  D2, $001E(A0)
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                bra     loc_10B00
loc_10C82:                
                move.w  $0014(A0), D2
                bmi.s   loc_10C8A
                neg.w   D2
loc_10C8A:
                addi.w  #$0800, D2
                bpl.s   loc_10C92
                moveq   #$00, D2
loc_10C92:
                lsr.w   #$06, D2
                move.b  D2, $001E(A0)
                lea     (Sonic_Animate_Push), A1 ; loc_10D22
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                bra     loc_10B00                                 
Sonic_AnimateData: ; loc_10CB4:
                dc.w    Sonic_Animate_Walk-Sonic_AnimateData        ; loc_10CF2
                dc.w    Sonic_Animate_Run-Sonic_AnimateData         ; loc_10D00
                dc.w    Sonic_Animate_Roll-Sonic_AnimateData        ; loc_10D0E
                dc.w    Sonic_Animate_Roll2-Sonic_AnimateData       ; loc_10D18 
                dc.w    Sonic_Animate_Push-Sonic_AnimateData        ; loc_10D22
                dc.w    Sonic_Animate_Wait-Sonic_AnimateData        ; loc_10D30
                dc.w    Sonic_Animate_Balance-Sonic_AnimateData     ; loc_10D59
                dc.w    Sonic_Animate_LookUp-Sonic_AnimateData      ; loc_10D5D
                dc.w    Sonic_Animate_Duck-Sonic_AnimateData        ; loc_10D62
                dc.w    Sonic_Animate_Spindash-Sonic_AnimateData    ; loc_10D67
                dc.w    Sonic_Animate_WallRecoil1-Sonic_AnimateData ; loc_10D74
                dc.w    Sonic_Animate_WallRecoil2-Sonic_AnimateData ; loc_10D77
                dc.w    Sonic_Animate_0x0C-Sonic_AnimateData        ; loc_10D7D
                dc.w    Sonic_Animate_Stop-Sonic_AnimateData        ; loc_10D81
                dc.w    Sonic_Animate_Float1-Sonic_AnimateData      ; loc_10D8C
                dc.w    Sonic_Animate_Float2-Sonic_AnimateData      ; loc_10D90
                dc.w    Sonic_Animate_0x10-Sonic_AnimateData        ; loc_10D97
                dc.w    Sonic_Animate_S1LzHang-Sonic_AnimateData    ; loc_10D9B
                dc.w    Sonic_Animate_Unused_0x12-Sonic_AnimateData ; loc_10D9F
                dc.w    Sonic_Animate_Unused_0x13-Sonic_AnimateData ; loc_10DA5
                dc.w    Sonic_Animate_Unused_0x14-Sonic_AnimateData ; loc_10DAA
                dc.w    Sonic_Animate_Bubble-Sonic_AnimateData      ; loc_10DAD
                dc.w    Sonic_Animate_Death1-Sonic_AnimateData      ; loc_10DB4
                dc.w    Sonic_Animate_Drown-Sonic_AnimateData       ; loc_10DB7
                dc.w    Sonic_Animate_Death2-Sonic_AnimateData      ; loc_10DBA
                dc.w    Sonic_Animate_Unused_0x19-Sonic_AnimateData ; loc_10DBD
                dc.w    Sonic_Animate_Hurt-Sonic_AnimateData        ; loc_10DC6
                dc.w    Sonic_Animate_S1LzSlide-Sonic_AnimateData   ; loc_10DC9
                dc.w    Sonic_Animate_0x1C-Sonic_AnimateData        ; loc_10DCD
                dc.w    Sonic_Animate_Float3-Sonic_AnimateData      ; loc_10DD1
                dc.w    Sonic_Animate_0x1E-Sonic_AnimateData        ; loc_10DD8
Sonic_Animate_Walk: ; loc_10CF2:
                dc.b    $FF, $10, $11, $12, $13, $14, $15, $16, $17, $0C, $0D, $0E, $0F, $FF
Sonic_Animate_Run: ; loc_10D00:
                dc.b    $FF, $3C, $3D, $3E, $3F, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
Sonic_Animate_Roll: ; loc_10D0E:
                dc.b    $FE, $6C, $70, $6D, $70, $6E, $70, $6F, $70, $FF
Sonic_Animate_Roll2: ; loc_10D18:
                dc.b    $FE, $6C, $70, $6D, $70, $6E, $70, $6F, $70, $FF
Sonic_Animate_Push: ; loc_10D22:
                dc.b    $FD, $77, $78, $79, $7A, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
Sonic_Animate_Wait: ; loc_10D30:                
                dc.b    $07, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $02
                dc.b    $03, $03, $03, $04, $04, $05, $05, $FE, $04
Sonic_Animate_Balance: ; loc_10D59:                 
                dc.b    $07, $89, $8A, $FF
Sonic_Animate_LookUp: ; loc_10D5D:                
                dc.b    $05, $06, $07, $FE, $01
Sonic_Animate_Duck: ; loc_10D62:                  
                dc.b    $05, $7F, $80, $FE, $01
Sonic_Animate_Spindash: ; loc_10D67:                
                dc.b    $00, $71, $72, $71, $73, $71, $74, $71, $75, $71, $76, $71, $FF 
Sonic_Animate_WallRecoil1: ; loc_10D74:                
                dc.b    $3F, $82, $FF
Sonic_Animate_WallRecoil2: ; loc_10D77:
                dc.b    $07, $08, $08, $09, $FD, $05
Sonic_Animate_0x0C: ; loc_10D7D:                
                dc.b    $07, $09, $FD, $05
Sonic_Animate_Stop: ; loc_10D81:                 
                dc.b    $03, $81, $82, $83, $84, $85, $86, $87, $88, $FE, $02
Sonic_Animate_Float1: ; loc_10D8C:                 
                dc.b    $07, $94, $96, $FF
Sonic_Animate_Float2: ; loc_10D90:                
                dc.b    $07, $91, $92, $93, $94, $95, $FF
Sonic_Animate_0x10: ; loc_10D97:                
                dc.b    $2F, $7E, $FD, $00
Sonic_Animate_S1LzHang: ; loc_10D9B:                
                dc.b    $05, $8F, $90, $FF
Sonic_Animate_Unused_0x12: ; loc_10D9F:                
                dc.b    $0F, $43, $43, $43, $FE, $01
Sonic_Animate_Unused_0x13: ; loc_10DA5:                
                dc.b    $0F, $43, $44, $FE, $01
Sonic_Animate_Unused_0x14: ; loc_10DAA:                
                dc.b    $3F, $49, $FF
Sonic_Animate_Bubble: ; loc_10DAD:                 
                dc.b    $0B, $97, $97, $12, $13, $FD, $00
Sonic_Animate_Death1: ; loc_10DB4:                 
                dc.b    $20, $9A, $FF
Sonic_Animate_Drown: ; loc_10DB7:                
                dc.b    $20, $99, $FF
Sonic_Animate_Death2: ; loc_10DBA:                 
                dc.b    $20, $98, $FF
Sonic_Animate_Unused_0x19: ; loc_10DBD: 
                dc.b    $03, $4E, $4F, $50, $51, $52, $00, $FE, $01
Sonic_Animate_Hurt: ; loc_10DC6:                
                dc.b    $40, $8D, $FF
Sonic_Animate_S1LzSlide: ; loc_10DC9:                  
                dc.b    $09, $8D, $8E, $FF
Sonic_Animate_0x1C: ; loc_10DCD:                
                dc.b    $77, $00, $FD, $00
Sonic_Animate_Float3: ; loc_10DD1:                
                dc.b    $03, $91, $92, $93, $94, $95, $FF
Sonic_Animate_0x1E: ; loc_10DD8:                
                dc.b    $03, $3C, $FD, $00
;=============================================================================== 
; Sub Routine Sonic_Animate
; [ End ]                         
;===============================================================================
                   
; ---------------------------------------------------------------------------
; Sonic pattern loading subroutine
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_10DDC: Load_Sonic_Dynamic_PLC:
LoadSonicDynPLC:
		moveq	#0,d0
		move.b	$1A(a0),d0
		cmp.b	($FFFFF766).w,d0
		beq.s	return_10E2E
		move.b	d0,($FFFFF766).w
		lea	(MapRUnc_Sonic),a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	return_10E2E
		move.w	#$F000,d4
; loc_10E02:
SPLC_ReadEntry:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		addi.l	#ArtUnc_Sonic,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(QueueDMATransfer).l
		dbf	d5,SPLC_ReadEntry

return_10E2E:
		rts
; End of function LoadSonicDynPLC

; ===========================================================================
; loc_10E30:
JmpTo_KillSonic:	; JmpTo
		jmp	(KillSonic).l          
		dc.w	0
;=============================================================================== 
; Object 0x02 - Tails
; [ Begin ]
;===============================================================================  
Obj_0x02_Tails: ; loc_10E38:                 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Tails_Index(PC, D0), D1      ; loc_10E46
                jmp     Tails_Index(PC, D1)          ; loc_10E46
Tails_Index: ; loc_10E46:
                dc.w    Tails_Main-Tails_Index       ; loc_10E50
                dc.w    Tails_Control-Tails_Index    ; loc_10EB4
                dc.w    Tails_Hurt-Tails_Index       ; loc_11AC4
                dc.w    Tails_Death-Tails_Index      ; loc_11B32
                dc.w    Tails_ResetLevel-Tails_Index ; loc_11B8E
Tails_Main: ; loc_10E50:
                addq.b  #$02, $0024(A0)
                move.b  #$0F, $0016(A0)
                move.b  #$09, $0017(A0)
                move.l  #Tails_Mappings, $0004(A0) ; loc_6FB3C
                move.w  #$07A0, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$02, $0018(A0)
                move.b  #$18, $0019(A0)
                move.b  #$84, $0001(A0)
                move.w  #$0600, (Sonic_top_speed).w
                move.w  #$000C, (Sonic_acceleration).w
                move.w  #$0080, (Sonic_deceleration).w
                move.b  #$0C, $003E(A0)
                move.b  #$0D, $003F(A0)
                move.b  #$00, $002C(A0)
                move.b  #$04, $002D(A0)
                move.b  #$05, ($FFFFB1C0).w
Tails_Control: ; loc_10EB4:
                bsr     Tails_Control2          ; loc_10F96
                btst    #$00, $002A(A0)
                bne.s   Tails_ControlsLock      ; loc_10ED2
                moveq   #$00, D0
                move.b  $0022(A0), D0
                andi.w  #$0006, D0
                move.w  Tails_Modes(PC, D0), D1 ; loc_10EFA
                jsr     Tails_Modes(PC, D1)     ; loc_10EFA
Tails_ControlsLock: ; loc_10ED2:
                bsr.s   Tails_Display           ; loc_10F12
                bsr     Tails_RecordMoves       ; loc_11056
                move.b  (Primary_Angle).w, $0036(A0)
                move.b  (Secondary_Angle).w, $0037(A0)
                bsr     Tails_Animate           ; loc_11BA2
                tst.b   $002A(A0)
                bmi.s   loc_10EF4
                jsr     TouchResponse           ; loc_21160
loc_10EF4:
                bsr     Load_Tails_Dynamic_PLC  ; loc_11F42
                rts
Tails_Modes: ; loc_10EFA:
                dc.w    Tails_MdNormal-Tails_Modes  ; loc_11070
                dc.w    Tails_MdJump-Tails_Modes    ; loc_11098
                dc.w    Tails_MdRoll-Tails_Modes    ; loc_110C2
                dc.w    Tails_MdJump2-Tails_Modes   ; loc_110E2
Tails_PlayList: ; loc_10F02:
                dc.b    $82, $82, $83, $90, $83, $83, $93, $96, $86, $8F, $81, $85, $84, $8D, $8D, $87 

;=============================================================================== 
; Sub Routine Tails_Display
; [ Begin ]                         
;===============================================================================                                  
Tails_Display: ; loc_10F12:
                move.w  $0030(A0), D0
                beq.s   loc_10F20
                subq.w  #$01, $0030(A0)
                lsr.w   #$03, D0
                bcc.s   loc_10F26
loc_10F20:
                jsr     DisplaySprite           ; loc_D3C2
loc_10F26:
                tst.b   ($FFFFFE2D).w
                beq.s   loc_10F60
                tst.w   $0032(A0)
                beq.s   loc_10F60
                subq.w  #$01, $0032(A0)
                bne.s   loc_10F60
                tst.b   ($FFFFF7AA).w
                bne.s   loc_10F5A
                cmpi.w  #$000C, ($FFFFFE14).w
                bcs.s   loc_10F5A
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                lea     Tails_PlayList(PC), A1  ; loc_10F02
                move.b  $00(A1, D0), D0
                jsr     (PlayMusic)            ; loc_14C0
loc_10F5A:
                move.b  #$00, ($FFFFFE2D).w
loc_10F60:
                tst.b   ($FFFFFE2E).w
                beq.s   loc_10F94
                tst.w   $0034(A0)
                beq.s   loc_10F94
                subq.w  #$01, $0034(A0)
                bne.s   loc_10F94
                move.w  #$0600, (Sonic_top_speed).w
                move.w  #$000C, (Sonic_acceleration).w
                move.w  #$0080, (Sonic_deceleration).w
                move.b  #$00, ($FFFFFE2E).w
                move.w  #$00FC, D0
                jmp     (PlayMusic)            ; loc_14C0
loc_10F94:
                rts  
;=============================================================================== 
; Sub Routine Tails_Display
; [ End ]                         
;===============================================================================   

;=============================================================================== 
; Sub Routine Tails_Control2
; [ Begin ]                         
;===============================================================================     
Tails_Control2: ; loc_10F96:
                move.b  ($FFFFF606).w, D0
                andi.b  #$7F, D0
                beq.s   Tails_ControlNoKeysPressed    ; loc_10FAE
                move.w  #$0000, ($FFFFF700).w
                move.w  #$012C, ($FFFFF702).w
                rts
Tails_ControlNoKeysPressed: ; loc_10FAE:
                tst.w   ($FFFFF702).w
                beq.s   Tails_DoControl        ; loc_10FBA
                subq.w  #$01, ($FFFFF702).w
                rts
Tails_DoControl: ; loc_10FBA:
                move.w  ($FFFFF708).w, D0
                move.w  Tails_ControlIndex(PC, D0), D0 ; loc_10FC6
                jmp     Tails_ControlIndex(PC, D0)     ; loc_10FC6
Tails_ControlIndex: ; loc_10FC6:
                dc.w    Tails_Control_00-Tails_ControlIndex  ; loc_10FCE
                dc.w    Tails_Control_01-Tails_ControlIndex  ; loc_10FD6
                dc.w    Tails_Control_02-Tails_ControlIndex  ; loc_10FEA
                dc.w    Tails_ControlCopySonicMoves-Tails_ControlIndex ; loc_11024
Tails_Control_00: ; loc_10FCE:
                move.w  #$0006, ($FFFFF708).w
                rts
Tails_Control_01: ; loc_10FD6:
                move.w  #$0006, ($FFFFF708).w
                rts
                move.w  #$0040, ($FFFFF706).w
                move.w  #$0004, ($FFFFF708).w
Tails_Control_02: ; loc_10FEA:
                move.w  #$0006, ($FFFFF708).w
                rts
                move.w  ($FFFFF706).w, D1
                subq.w  #$01, D1
                cmpi.w  #$0010, D1
                bne.s   loc_11004
                move.w  #$0006, ($FFFFF708).w
loc_11004:
                move.w  D1, ($FFFFF706).w
                lea     ($FFFFE600).w, A1
                lsl.b   #$02, D1
                addq.b  #$04, D1
                move.w  ($FFFFEEE0).w, D0
                sub.b   D1, D0
                move.w  $00(A1, D0), $0008(A0)
                move.w  $02(A1, D0), $000C(A0)
                rts
Tails_ControlCopySonicMoves: ; loc_11024:
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                bpl.s   loc_11030
                neg.w   D0
loc_11030:
                cmpi.w  #$00C0, D0
                bcs.s   loc_11038
                nop
loc_11038:
                lea     ($FFFFE500).w, A1
                move.w  #$0010, D1
                lsl.b   #$02, D1
                addq.b  #$04, D1
                move.w  ($FFFFEED2).w, D0
                sub.b   D1, D0
                lea     ($FFFFE400).w, A1
                move.w  $00(A1, D0), ($FFFFF606).w
                rts
                
;=============================================================================== 
; Sub Routine Tails_RecordMoves
; [ Begin ]                         
;===============================================================================    
Tails_RecordMoves: ; loc_11056:
                move.w  ($FFFFEED6).w, D0
                lea     ($FFFFE700).w, A1
                lea     $00(A1, D0), A1
                move.w  $0008(A0), (A1)+
                move.w  $000C(A0), (A1)+
                addq.b  #$04, ($FFFFEED7).w
                rts
;=============================================================================== 
; Sub Routine Tails_RecordMoves
; [ End ]                         
;===============================================================================   
               
Tails_MdNormal: ; loc_11070:
                bsr     Tails_Spindash          ; loc_116D2
                bsr     Tails_Jump              ; loc_115E8
                bsr     Tails_SlopeResist       ; loc_1175E
                bsr     Tails_Move              ; loc_1110C
                bsr     Tails_Roll              ; loc_11582
                bsr     Tails_LevelBoundaries   ; loc_114FE
                jsr     SpeedToPos              ; loc_D27A
                bsr     AnglePos          ; loc_12D28
                bsr     Tails_SlopeRepel        ; loc_117D0
                rts
Tails_MdJump: ; loc_11098:
                bsr     Tails_JumpHeight        ; loc_11696
                bsr     Tails_ChgJumpDir        ; loc_11484
                bsr     Tails_LevelBoundaries   ; loc_114FE
                jsr     ObjectFall              ; loc_D24E
                btst    #$06, $0022(A0)
                beq.s   loc_110B8
                subi.w  #$0028, $0012(A0)
loc_110B8:
                bsr     Tails_JumpAngle         ; loc_11812
                bsr     Tails_Floor             ; loc_11872
                rts
Tails_MdRoll: ; loc_110C2:
                bsr     Tails_Jump              ; loc_115E8
                bsr     Tails_RollRepel         ; loc_11794
                bsr     Tails_RollSpeed         ; loc_1138C
                bsr     Tails_LevelBoundaries   ; loc_114FE
                jsr     SpeedToPos              ; loc_D27A
                bsr     AnglePos          ; loc_12D28
                bsr     Tails_SlopeRepel        ; loc_117D0
                rts
Tails_MdJump2: ; loc_110E2:
                bsr     Tails_JumpHeight        ; loc_11696
                bsr     Tails_ChgJumpDir        ; loc_11484
                bsr     Tails_LevelBoundaries   ; loc_114FE
                jsr     ObjectFall              ; loc_D24E
                btst    #$06, $0022(A0)
                beq.s   loc_11102
                subi.w  #$0028, $0012(A0)
loc_11102:
                bsr     Tails_JumpAngle         ; loc_11812
                bsr     Tails_Floor             ; loc_11872
                rts
                
;=============================================================================== 
; Sub Routine Tails_Move
; [ Begin ]                         
;===============================================================================                  
Tails_Move: ; loc_1110C:
                move.w  (Sonic_top_speed).w, D6
                move.w  (Sonic_acceleration).w, D5
                move.w  (Sonic_deceleration).w, D4
                tst.b   ($FFFFF7CA).w
                bne     loc_1121E
                tst.w   $002E(A0)
                bne     loc_111F2
                btst    #$02, ($FFFFF606).w
                beq.s   loc_11134
                bsr     Tails_MoveLeft          ; loc_112AE
loc_11134:
                btst    #$03, ($FFFFF606).w
                beq.s   loc_11140
                bsr     Tails_MoveRight         ; loc_11320
loc_11140:
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne     loc_111F2
                tst.w   $0014(A0)
                bne     loc_111F2
                bclr    #$05, $0022(A0)
                move.b  #$05, $001C(A0)
                btst    #$03, $0022(A0)
                beq.s   Tails_Balance           ; loc_111A2
                moveq   #$00, D0
                move.b  $003D(A0), D0
                lsl.w   #$06, D0
                lea     ($FFFFB000).w, A1
                lea     $00(A1, D0), A1
                tst.b   $0022(A1)
                bmi.s   Tails_LookUp            ; loc_111D4
                moveq   #$00, D1
                move.b  $0019(A1), D1
                move.w  D1, D2
                add.w   D2, D2
                subq.w  #$04, D2
                add.w   $0008(A0), D1
                sub.w   $0008(A1), D1
                cmpi.w  #$0004, D1
                blt.s   loc_111C6
                cmp.w   D2, D1
                bge.s   loc_111B6
                bra.s   Tails_LookUp            ; loc_111D4 
;=============================================================================== 
Tails_Balance: ; loc_111A2:
                jsr     ObjHitFloor             ; loc_13898
                cmpi.w  #$000C, D1
                blt.s   Tails_LookUp            ; loc_111D4
                cmpi.b  #$03, $0036(A0)
                bne.s   loc_111BE
loc_111B6:
                bclr    #$00, $0022(A0)
                bra.s   loc_111CC
loc_111BE:
                cmpi.b  #$03, $0037(A0)
                bne.s   Tails_LookUp            ; loc_111D4
loc_111C6:
                bset    #$00, $0022(A0)
loc_111CC:
                move.b  #$06, $001C(A0)
                bra.s   loc_111F2
;===============================================================================               
Tails_LookUp: ; loc_111D4:
                btst    #$00, ($FFFFF606).w
                beq.s   loc_111E4
                move.b  #$07, $001C(A0)
                bra.s   loc_111F2
loc_111E4:
                btst    #$01, ($FFFFF606).w
                beq.s   loc_111F2
                move.b  #$08, $001C(A0)
loc_111F2:
                move.b  ($FFFFF606).w, D0
                andi.b  #$0C, D0
                bne.s   loc_1121E
                move.w  $0014(A0), D0
                beq.s   loc_1121E
                bmi.s   loc_11212
                sub.w   D5, D0
                bcc.s   loc_1120C
                move.w  #$0000, D0
loc_1120C:
                move.w  D0, $0014(A0)
                bra.s   loc_1121E
loc_11212:
                add.w   D5, D0
                bcc.s   loc_1121A
                move.w  #$0000, D0
loc_1121A:
                move.w  D0, $0014(A0)
loc_1121E:
                move.b  $0026(A0), D0
                jsr     CalcSine                ; loc_320A
                muls.w  $0014(A0), D1
                asr.l   #$08, D1
                move.w  D1, $0010(A0)
                muls.w  $0014(A0), D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
loc_1123C:                
                move.b  $0026(A0), D0
                addi.b  #$40, D0
                bmi.s   loc_112AC
                move.b  #$40, D1
                tst.w   $0014(A0)
                beq.s   loc_112AC
                bmi.s   loc_11254
                neg.w   D1
loc_11254:
                move.b  $0026(A0), D0
                add.b   D1, D0
                move.w  D0, -(A7)
                bsr     Sonic_WalkSpeed         ; loc_1366C
                move.w  (A7)+, D0
                tst.w   D1
                bpl.s   loc_112AC
                asl.w   #$08, D1
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   loc_112A8
                cmpi.b  #$40, D0
                beq.s   loc_11296
                cmpi.b  #$80, D0
                beq.s   loc_11290
                add.w   D1, $0010(A0)
                bset    #$05, $0022(A0)
                move.w  #$0000, $0014(A0)
                rts
loc_11290:
                sub.w   D1, $0012(A0)
                rts
loc_11296:
                sub.w   D1, $0010(A0)
                bset    #$05, $0022(A0)
                move.w  #$0000, $0014(A0)
                rts
loc_112A8:
                add.w   D1, $0012(A0)
loc_112AC:
                rts
;=============================================================================== 
; Sub Routine Tails_Move
; [ End ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine Tails_MoveLeft
; [ Begin ]                         
;===============================================================================                   
Tails_MoveLeft: ; loc_112AE:
                move.w  $0014(A0), D0
                beq.s   loc_112B6
                bpl.s   loc_112E8
loc_112B6:
                bset    #$00, $0022(A0)
                bne.s   loc_112CA
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
loc_112CA:
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   loc_112DC
                add.w   D5, D0
                cmp.w   D1, D0
                ble.s   loc_112DC
                move.w  D1, D0
loc_112DC:
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                rts
loc_112E8:
                sub.w   D4, D0
                bcc.s   loc_112F0
                move.w  #$FF80, D0
loc_112F0:
                move.w  D0, $0014(A0)
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   loc_1131E
                cmpi.w  #$0400, D0
                blt.s   loc_1131E
                move.b  #$0D, $001C(A0)
                bclr    #$00, $0022(A0)
                move.w  #$00A4, D0
                jsr     (PlaySound)              ; loc_14C6
loc_1131E:
                rts
;=============================================================================== 
; Sub Routine Tails_MoveLeft
; [ End ]                         
;===============================================================================   
              
;=============================================================================== 
; Sub Routine Tails_MoveRight
; [ Begin ]                         
;===============================================================================                 
Tails_MoveRight: ; loc_11320:
                move.w  $0014(A0), D0
                bmi.s   loc_11354
                bclr    #$00, $0022(A0)
                beq.s   loc_1133A
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
loc_1133A:
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   loc_11348
                sub.w   D5, D0
                cmp.w   D6, D0
                bge.s   loc_11348
                move.w  D6, D0
loc_11348:
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                rts
loc_11354:
                add.w   D4, D0
                bcc.s   loc_1135C
                move.w  #$0080, D0
loc_1135C:
                move.w  D0, $0014(A0)
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   loc_1138A
                cmpi.w  #$FC00, D0
                bgt.s   loc_1138A
                move.b  #$0D, $001C(A0)
                bset    #$00, $0022(A0)
                move.w  #$00A4, D0
                jsr     (PlaySound)              ; loc_14C6
loc_1138A:
                rts
;=============================================================================== 
; Sub Routine Tails_MoveRight
; [ End ]                         
;===============================================================================  
                 
;=============================================================================== 
; Sub Routine Tails_RollSpeed
; [ Begin ]                         
;===============================================================================                 
Tails_RollSpeed: ; loc_1138C:
                move.w  (Sonic_top_speed).w, D6
                asl.w   #$01, D6
                move.w  (Sonic_acceleration).w, D5
                asr.w   #$01, D5
                move.w  (Sonic_deceleration).w, D4
                asr.w   #$02, D4
                tst.b   ($FFFFF7CA).w
                bne     loc_11408
                tst.w   $002E(A0)
                bne.s   loc_113C4
                btst    #$02, ($FFFFF606).w
                beq.s   loc_113B8
                bsr     Tails_RollLeft          ; loc_1143E
loc_113B8:
                btst    #$03, ($FFFFF606).w
                beq.s   loc_113C4
                bsr     Tails_RollRight         ; loc_11462
loc_113C4:
                move.w  $0014(A0), D0
                beq.s   loc_113E6
                bmi.s   loc_113DA
                sub.w   D5, D0
                bcc.s   loc_113D4
                move.w  #$0000, D0
loc_113D4:
                move.w  D0, $0014(A0)
                bra.s   loc_113E6
loc_113DA:
                add.w   D5, D0
                bcc.s   loc_113E2
                move.w  #$0000, D0
loc_113E2:
                move.w  D0, $0014(A0)
loc_113E6:
                tst.w   $0014(A0)
                bne.s   loc_11408
                bclr    #$02, $0022(A0)
                move.b  #$0F, $0016(A0)
                move.b  #$09, $0017(A0)
                move.b  #$05, $001C(A0)
                subq.w  #$05, $000C(A0)
loc_11408:
                move.b  $0026(A0), D0
                jsr     CalcSine                ; loc_320A
                muls.w  $0014(A0), D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
                muls.w  $0014(A0), D1
                asr.l   #$08, D1
                cmpi.w  #$1000, D1
                ble.s   loc_1142C
                move.w  #$1000, D1
loc_1142C:
                cmpi.w  #$F000, D1
                bge.s   loc_11436
                move.w  #$F000, D1
loc_11436:
                move.w  D1, $0010(A0)
                bra     loc_1123C
;=============================================================================== 
; Sub Routine Tails_RollSpeed
; [ End ]                         
;===============================================================================
  
;=============================================================================== 
; Sub Routine Tails_RollLeft
; [ Begin ]                         
;===============================================================================                   
Tails_RollLeft: ; loc_1143E:
                move.w  $0014(A0), D0
                beq.s   loc_11446
                bpl.s   loc_11454
loc_11446:
                bset    #$00, $0022(A0)
                move.b  #$02, $001C(A0)
                rts
loc_11454:
                sub.w   D4, D0
                bcc.s   loc_1145C
                move.w  #$FF80, D0
loc_1145C:
                move.w  D0, $0014(A0)
                rts
;=============================================================================== 
; Sub Routine Tails_RollLeft
; [ End ]                         
;===============================================================================
   
;=============================================================================== 
; Sub Routine Tails_RollRight
; [ Begin ]                         
;===============================================================================                   
Tails_RollRight: ; loc_11462:
                move.w  $0014(A0), D0
                bmi.s   loc_11476
                bclr    #$00, $0022(A0)
                move.b  #$02, $001C(A0)
                rts
loc_11476:
                add.w   D4, D0
                bcc.s   loc_1147E
                move.w  #$0080, D0
loc_1147E:
                move.w  D0, $0014(A0)
                rts
;=============================================================================== 
; Sub Routine Tails_RollRight
; [ End ]                         
;===============================================================================  
                  
;=============================================================================== 
; Sub Routine Tails_ChgJumpDir
; [ Begin ]                         
;===============================================================================                  
Tails_ChgJumpDir: ; loc_11484:
                move.w  (Sonic_top_speed).w, D6
                move.w  (Sonic_acceleration).w, D5
                asl.w   #$01, D5
                btst    #$04, $0022(A0)
                bne.s   loc_114CE
                move.w  $0010(A0), D0
                btst    #$02, ($FFFFF606).w
                beq.s   loc_114B4
                bset    #$00, $0022(A0)
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   loc_114B4
                move.w  D1, D0
loc_114B4:
                btst    #$03, ($FFFFF606).w
                beq.s   loc_114CA
                bclr    #$00, $0022(A0)
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   loc_114CA
                move.w  D6, D0
loc_114CA:
                move.w  D0, $0010(A0)
loc_114CE:
                cmpi.w  #$FC00, $0012(A0)
                bcs.s   loc_114FC
                move.w  $0010(A0), D0
                move.w  D0, D1
                asr.w   #$05, D1
                beq.s   loc_114FC
                bmi.s   loc_114F0
                sub.w   D1, D0
                bcc.s   loc_114EA
                move.w  #$0000, D0
loc_114EA:
                move.w  D0, $0010(A0)
                rts
loc_114F0:
                sub.w   D1, D0
                bcs.s   loc_114F8
                move.w  #$0000, D0
loc_114F8:
                move.w  D0, $0010(A0)
loc_114FC:
                rts 
;=============================================================================== 
; Sub Routine Tails_ChgJumpDir
; [ End ]                         
;===============================================================================
                    
;=============================================================================== 
; Sub Routine Tails_LevelBoundaries
; [ Begin ]                         
;=============================================================================== 
Tails_LevelBoundaries: ; loc_114FE:
                move.l  $0008(A0), D1
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D1
                swap.w  D1
                move.w  ($FFFFEEC8).w, D0
                addi.w  #$0010, D0
                cmp.w   D1, D0
                bhi.s   loc_1156A
                move.w  ($FFFFEECA).w, D0
                addi.w  #$0128, D0
                tst.b   ($FFFFF7AA).w
                bne.s   loc_1152C
                addi.w  #$0040, D0
loc_1152C:
                cmp.w   D1, D0
                bls.s   loc_1156A
loc_11530:                
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                blt.s   loc_11540
                rts
loc_11540:
                bra     KillTails               ; loc_12074
                cmpi.w  #$0501, ($FFFFFE10).w
                bne     KillTails               ; loc_12074
                cmpi.w  #$2000, $0008(A0)
                bcs     KillTails               ; loc_12074
                clr.b   ($FFFFFE30).w
                move.w  #$0001, ($FFFFFE02).w
                move.w  #$0103, ($FFFFFE10).w
                rts
loc_1156A:
                move.w  D0, $0008(A0)
                move.w  #$0000, $000A(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0014(A0)
                bra.s   loc_11530
;=============================================================================== 
; Sub Routine Tails_LevelBoundaries
; [ End ]                         
;===============================================================================  
               
;=============================================================================== 
; Sub Routine Tails_Roll
; [ Begin ]                         
;===============================================================================                   
Tails_Roll: ; loc_11582:
                tst.b   ($FFFFF7CA).w
                bne.s   loc_115A8
                move.w  $0014(A0), D0
                bpl.s   loc_11590
                neg.w   D0
loc_11590:
                cmpi.w  #$0080, D0
                bcs.s   loc_115A8
                move.b  ($FFFFF606).w, D0
                andi.b  #$0C, D0
                bne.s   loc_115A8
                btst    #$01, ($FFFFF606).w
                bne.s   loc_115AA
loc_115A8:
                rts
loc_115AA:
                btst    #$02, $0022(A0)
                beq.s   loc_115B4
                rts
loc_115B4:
                bset    #$02, $0022(A0)
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                addq.w  #$05, $000C(A0)
                move.w  #$00BE, D0
                jsr     (PlaySound)              ; loc_14C6
                tst.w   $0014(A0)
                bne.s   loc_115E6
                move.w  #$0200, $0014(A0)
loc_115E6:
                rts
;=============================================================================== 
; Sub Routine Tails_Roll
; [ End ]                         
;=============================================================================== 
                 
;=============================================================================== 
; Sub Routine Tails_Jump
; [ Begin ]                         
;===============================================================================                  
Tails_Jump: ; loc_115E8:
                move.b  ($FFFFF607).w, D0
                andi.b  #$70, D0
                beq     loc_1168C
                moveq   #$00, D0
                move.b  $0026(A0), D0
                addi.b  #$80, D0
                bsr     loc_136F2
                cmpi.w  #$0006, D1
                blt     loc_1168C
                move.w  #$0680, D2
                btst    #$06, $0022(A0)
                beq.s   loc_1161A
                move.w  #$0380, D2
loc_1161A:
                moveq   #$00, D0
                move.b  $0026(A0), D0
                subi.b  #$40, D0
                jsr     CalcSine                ; loc_320A
                muls.w  D2, D1
                asr.l   #$08, D1
                add.w   D1, $0010(A0)
                muls.w  D2, D0
                asr.l   #$08, D0
                add.w   D0, $0012(A0)
                bset    #$01, $0022(A0)
                bclr    #$05, $0022(A0)
                addq.l  #$04, A7
                move.b  #$01, $003C(A0)
                clr.b   $0038(A0)
                move.w  #$00A0, D0
                jsr     (PlaySound)              ; loc_14C6
                move.b  #$0F, $0016(A0)
                move.b  #$09, $0017(A0)
                btst    #$02, $0022(A0)
                bne.s   loc_1168E
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                bset    #$02, $0022(A0)
                addq.w  #$05, $000C(A0)
loc_1168C:
                rts
loc_1168E:
                bset    #$04, $0022(A0)
                rts
;=============================================================================== 
; Sub Routine Tails_Jump
; [ End ]                         
;===============================================================================     
              
;=============================================================================== 
; Sub Routine Tails_JumpHeight
; [ Begin ]                         
;===============================================================================                   
Tails_JumpHeight: ; loc_11696:
                tst.b   $003C(A0)
                beq.s   loc_116C2
                move.w  #$FC00, D1
                btst    #$06, $0022(A0)
                beq.s   loc_116AC
                move.w  #$FE00, D1
loc_116AC:
                cmp.w   $0012(A0), D1
                ble.s   loc_116C0
                move.b  ($FFFFF606).w, D0
                andi.b  #$70, D0
                bne.s   loc_116C0
                move.w  D1, $0012(A0)
loc_116C0:
                rts
loc_116C2:
                cmpi.w  #$F040, $0012(A0)
                bge.s   loc_116D0
                move.w  #$F040, $0012(A0)
loc_116D0:
                rts
;=============================================================================== 
; Sub Routine Tails_JumpHeight
; [ End ]                         
;=============================================================================== 
                 
;=============================================================================== 
; Sub Routine Tails_Spindash
; [ Begin ]                         
;===============================================================================                  
Tails_Spindash: ; loc_116D2:
                tst.b   $0039(A0)
                bne.s   loc_11706
                cmpi.b  #$08, $001C(A0)
                bne.s   loc_11704
                move.b  ($FFFFF607).w, D0
                andi.b  #$70, D0
                beq     loc_11704
                move.b  #$09, $001C(A0)
                move.w  #$00BE, D0
                jsr     (PlaySound)              ; loc_14C6
                addq.l  #$04, A7
                move.b  #$01, $0039(A0)
loc_11704:
                rts
loc_11706:
                move.b  ($FFFFF606).w, D0
                btst    #$01, D0
                bne.s   loc_1174C
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                addq.w  #$05, $000C(A0)
                move.b  #$00, $0039(A0)
                move.w  #$2000, ($FFFFEED4).w
                move.w  #$0800, $0014(A0)
                btst    #$00, $0022(A0)
                beq.s   loc_11744
                neg.w   $0014(A0)
loc_11744:
                bset    #$02, $0022(A0)
                rts
loc_1174C:
                move.b  ($FFFFF607).w, D0
                andi.b  #$70, D0
                beq     loc_1175A
                nop
loc_1175A:
                addq.l  #$04, A7
                rts   
;=============================================================================== 
; Sub Routine Tails_Spindash
; [ End ]                         
;===============================================================================   
 
;=============================================================================== 
; Sub Routine Tails_SlopeResist
; [ Begin ]                         
;===============================================================================                   
Tails_SlopeResist: ; loc_1175E:
                move.b  $0026(A0), D0
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   loc_11792
                move.b  $0026(A0), D0
                jsr     CalcSine                ; loc_320A
                muls.w  #$0020, D0
                asr.l   #$08, D0
                tst.w   $0014(A0)
                beq.s   loc_11792
                bmi.s   loc_1178E
                tst.w   D0
                beq.s   loc_1178C
                add.w   D0, $0014(A0)
loc_1178C:
                rts
loc_1178E:
                add.w   D0, $0014(A0)
loc_11792:
                rts
;=============================================================================== 
; Sub Routine Tails_SlopeResist
; [ End ]                         
;===============================================================================     
             
;=============================================================================== 
; Sub Routine Tails_RollRepel
; [ Begin ]                         
;===============================================================================                   
Tails_RollRepel: ; loc_11794:
                move.b  $0026(A0), D0
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   loc_117CE
                move.b  $0026(A0), D0
                jsr     CalcSine                ; loc_320A
                muls.w  #$0050, D0
                asr.l   #$08, D0
                tst.w   $0014(A0)
                bmi.s   loc_117C4
                tst.w   D0
                bpl.s   loc_117BE
                asr.l   #$02, D0
loc_117BE:
                add.w   D0, $0014(A0)
                rts
loc_117C4:
                tst.w   D0
                bmi.s   loc_117CA
                asr.l   #$02, D0
loc_117CA:
                add.w   D0, $0014(A0)
loc_117CE:
                rts
;=============================================================================== 
; Sub Routine Tails_RollRepel
; [ End ]                         
;===============================================================================   
                
;=============================================================================== 
; Sub Routine Tails_SlopeRepel
; [ Begin ]                         
;===============================================================================                  
Tails_SlopeRepel: ; loc_117D0:
                nop
                tst.b   $0038(A0)
                bne.s   loc_1180A
                tst.w   $002E(A0)
                bne.s   loc_1180C
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   loc_1180A
                move.w  $0014(A0), D0
                bpl.s   loc_117F4
                neg.w   D0
loc_117F4:
                cmpi.w  #$0280, D0
                bcc.s   loc_1180A
                clr.w   $0014(A0)
                bset    #$01, $0022(A0)
                move.w  #$001E, $002E(A0)
loc_1180A:
                rts
loc_1180C:
                subq.w  #$01, $002E(A0)
                rts
;=============================================================================== 
; Sub Routine Tails_SlopeRepel
; [ End ]                         
;===============================================================================  
                 
;=============================================================================== 
; Sub Routine Tails_JumpAngle
; [ Begin ]                         
;===============================================================================                  
Tails_JumpAngle: ; loc_11812:
                move.b  $0026(A0), D0
                beq.s   loc_1182C
                bpl.s   loc_11822
                addq.b  #$02, D0
                bcc.s   loc_11820
                moveq   #$00, D0
loc_11820:
                bra.s   loc_11828
loc_11822:
                subq.b  #$02, D0
                bcc.s   loc_11828
                moveq   #$00, D0
loc_11828:
                move.b  D0, $0026(A0)
loc_1182C:
                move.b  $0027(A0), D0
                beq.s   loc_11870
                tst.w   $0014(A0)
                bmi.s   loc_11850
loc_11838:                
                move.b  $002D(A0), D1
                add.b   D1, D0
                bcc.s   loc_1184E
                subq.b  #$01, $002C(A0)
                bcc.s   loc_1184E
                move.b  #$00, $002C(A0)
                moveq   #$00, D0
loc_1184E:
                bra.s   loc_1186C
loc_11850:
                tst.b   $0029(A0)
                bne.s   loc_11838
                move.b  $002D(A0), D1
                sub.b   D1, D0
                bcc.s   loc_1186C
                subq.b  #$01, $002C(A0)
                bcc.s   loc_1186C
                move.b  #$00, $002C(A0)
                moveq   #$00, D0
loc_1186C:
                move.b  D0, $0027(A0)
loc_11870:
                rts
;=============================================================================== 
; Sub Routine Tails_JumpAngle
; [ End ]                         
;===============================================================================     
             
;=============================================================================== 
; Sub Routine Tails_Floor
; [ Begin ]                         
;===============================================================================                   
Tails_Floor: ; loc_11872:
                move.b  $003F(A0), D5
                move.w  $0010(A0), D1
                move.w  $0012(A0), D2
                jsr     CalcAngle               ; loc_34A2
                move.b  D0, $002B(A0)
                subi.b  #$20, D0
                andi.b  #$C0, D0
                cmpi.b  #$40, D0
                beq     loc_11946
                cmpi.b  #$80, D0
                beq     loc_119A8
                cmpi.b  #$C0, D0
                beq     loc_11A04
                bsr     Sonic_HitWall           ; loc_13AFC
                tst.w   D1
                bpl.s   loc_118BA
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
loc_118BA:
                bsr     loc_1397A
                tst.w   D1
                bpl.s   loc_118CC
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
loc_118CC:
                bsr     loc_13736
                tst.w   D1
                bpl.s   loc_11944
                move.b  $0012(A0), D2
                addq.b  #$08,  D2
                neg.b   D2
                cmp.b   D2, D1
                bge.s   loc_118E4
                cmp.b   D2, D0
                blt.s   loc_11944
loc_118E4:
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Tails_ResetTailsOnFloor ; loc_11A66
                move.b  #$00, $001C(A0)
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   loc_11922
                move.b  D3, D0
                addi.b  #$10, D0
                andi.b  #$20, D0
                beq.s   loc_11914
                asr.w   $0012(A0)
                bra.s   loc_11936
loc_11914:
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
                rts
loc_11922:
                move.w  #$0000, $0010(A0)
                cmpi.w  #$0FC0, $0012(A0)
                ble.s   loc_11936
                move.w  #$0FC0, $0012(A0)
loc_11936:
                move.w  $0012(A0), $0014(A0)
                tst.b   D3
                bpl.s   loc_11944
                neg.w   $0014(A0)
loc_11944:
                rts
loc_11946:
                bsr     Sonic_HitWall           ; loc_13AFC
                tst.w   D1
                bpl.s   loc_11960
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
                move.w  $0012(A0), $0014(A0)
                rts
loc_11960:
                bsr     Sonic_DontRunOnWalls    ; loc_139CC
                tst.w   D1
                bpl.s   loc_1197A
                sub.w   D1, $000C(A0)
                tst.w   $0012(A0)
                bpl.s   loc_11978
                move.w  #$0000, $0012(A0)
loc_11978:
                rts
loc_1197A:
                tst.w   $0012(A0)
                bmi.s   loc_119A6
                bsr     loc_13736
                tst.w   D1
                bpl.s   loc_119A6
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Tails_ResetTailsOnFloor ; loc_11A66
                move.b  #$00, $001C(A0)
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
loc_119A6:
                rts
loc_119A8:
                bsr     Sonic_HitWall           ; loc_13AFC
                tst.w   D1
                bpl.s   loc_119BA
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
loc_119BA:
                bsr     loc_1397A
                tst.w   D1
                bpl.s   loc_119CC
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
loc_119CC:
                bsr     Sonic_DontRunOnWalls    ; loc_139CC
                tst.w   D1
                bpl.s   loc_11A02
                sub.w   D1, $000C(A0)
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   loc_119EC
                move.w  #$0000, $0012(A0)
                rts
loc_119EC:
                move.b  D3, $0026(A0)
                bsr     Tails_ResetTailsOnFloor ; loc_11A66
                move.w  $0012(A0), $0014(A0)
                tst.b   D3
                bpl.s   loc_11A02
                neg.w   $0014(A0)
loc_11A02:
                rts
loc_11A04:
                bsr     loc_1397A
                tst.w   D1
                bpl.s   loc_11A1E
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
                move.w  $0012(A0), $0014(A0)
                rts
loc_11A1E:
                bsr     Sonic_DontRunOnWalls    ; loc_139CC
                tst.w   D1
                bpl.s   loc_11A38
                sub.w   D1, $000C(A0)
                tst.w   $0012(A0)
                bpl.s   loc_11A36
                move.w  #$0000, $0012(A0)
loc_11A36:
                rts
loc_11A38:
                tst.w   $0012(A0)
                bmi.s   loc_11A64
                bsr     loc_13736
                tst.w   D1
                bpl.s   loc_11A64
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Tails_ResetTailsOnFloor ; loc_11A66
                move.b  #$00, $001C(A0)
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
loc_11A64:
                rts  
;=============================================================================== 
; Sub Routine Tails_Floor
; [ End ]                         
;===============================================================================                  
                      
;=============================================================================== 
; Object 0x02 - Tails
; [ End ]
;=============================================================================== 

;=============================================================================== 
; Sub Routine Tails_ResetTailsOnFloor
; [ Begin ]                         
;===============================================================================               
Tails_ResetTailsOnFloor: ; loc_11A66:
                btst    #$04, $0022(A0)
                beq.s   loc_11A74
                nop
                nop
                nop
loc_11A74:
                bclr    #$05, $0022(A0)
                bclr    #$01, $0022(A0)
                bclr    #$04, $0022(A0)
                btst    #$02, $0022(A0)
                beq.s   loc_11AAA
                bclr    #$02, $0022(A0)
                move.b  #$0F, $0016(A0)
                move.b  #$09, $0017(A0)
                move.b  #$00, $001C(A0)
                subq.w  #$01, $000C(A0)
loc_11AAA:
                move.b  #$00, $003C(A0)
                move.w  #$0000, ($FFFFF7D0).w
                move.b  #$00, $0027(A0)
                move.b  #$00, $0029(A0)
                rts  
;=============================================================================== 
; Sub Routine Tails_ResetTailsOnFloor
; [ End ]                         
;=============================================================================== 
               
Tails_Hurt: ; loc_11AC4:
                jsr     SpeedToPos              ; loc_D27A
                addi.w  #$0030, $0012(A0)
                btst    #$06, $0022(A0)
                beq.s   loc_11ADE
                subi.w  #$0020, $0012(A0)
loc_11ADE:
                bsr     Tails_HurtStop          ; loc_11AF4
                bsr     Tails_LevelBoundaries   ; loc_114FE
                bsr     Tails_Animate           ; loc_11BA2
                bsr     Load_Tails_Dynamic_PLC  ; loc_11F42
                jmp     DisplaySprite           ; loc_D3C2
                
;=============================================================================== 
; Sub Routine Tails_HurtStop
; [ Begin ]                         
;===============================================================================                 
Tails_HurtStop: ; loc_11AF4:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs     KillTails               ; loc_12074
                bsr     Tails_Floor             ; loc_11872
                btst    #$01, $0022(A0)
                bne.s   loc_11B30
                moveq   #$00, D0
                move.w  D0, $0012(A0)
                move.w  D0, $0010(A0)
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                move.b  #$02, $0024(A0)
                move.w  #$0078, $0030(A0)
loc_11B30:
                rts
;=============================================================================== 
; Sub Routine Tails_HurtStop
; [ End ]                         
;===============================================================================                  
                
Tails_Death: ; loc_11B32:
                bsr     Tails_GameOver          ; loc_11B4A
                jsr     ObjectFall              ; loc_D24E
                bsr     Tails_Animate           ; loc_11BA2
                bsr     Load_Tails_Dynamic_PLC  ; loc_11F42
                jmp     DisplaySprite           ; loc_D3C2
                
;=============================================================================== 
; Sub Routine Tails_GameOver
; [ Begin ]                         
;===============================================================================                 
Tails_GameOver: ; loc_11B4A:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$0100, D0
                cmp.w   $000C(A0), D0
                bcc     loc_11B8C
                move.w  ($FFFFB008).w, D0
                subi.w  #$0040, D0
                move.w  D0, $0008(A0)
                move.w  ($FFFFB00C).w, D0
                subi.w  #$0080, D0
                move.w  D0, $000C(A0)
                move.b  #$02, $0024(A0)
                andi.w  #$7FFF, $0002(A0)
                move.b  #$0C, $003E(A0)
                move.b  #$0D, $003F(A0)
                nop
loc_11B8C:
                rts
;=============================================================================== 
; Sub Routine Tails_GameOver
; [ End ]                         
;===============================================================================
                 
Tails_ResetLevel: ; loc_11B8E:
                tst.w   $003A(A0)
                beq.s   loc_11BA0
                subq.w  #$01, $003A(A0)
                bne.s   loc_11BA0
                move.w  #$0001, ($FFFFFE02).w
loc_11BA0:
                rts
                
;=============================================================================== 
; Sub Routine Tails_Animate
; [ Begin ]                         
;===============================================================================    
Tails_Animate: ; loc_11BA2: ; Tails Subroutine  
                lea     (Tails_AnimateData), A1 ; loc_11DF4
Tails_Animate2: ; loc_11BA8:                
                moveq   #$00, D0
                move.b  $001C(A0), D0
                cmp.b   $001D(A0), D0
                beq.s   loc_11BCA
                move.b  D0, $001D(A0)
                move.b  #$00, $001B(A0)
                move.b  #$00, $001E(A0)
                bclr    #$05, $0022(A0)
loc_11BCA:
                add.w   D0, D0
                adda.w  $00(A1, D0), A1
                move.b  (A1), D0
                bmi.s   loc_11C3A
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                subq.b  #$01, $001E(A0)
                bpl.s   loc_11C08
                move.b  D0, $001E(A0)
loc_11BF0:                
                moveq   #$00, D1
                move.b  $001B(A0), D1
                move.b  $01(A1, D1), D0
                cmpi.b  #$F0, D0                  
                bcc.s   loc_11C0A
loc_11C00:                
                move.b  D0, $001A(A0)
                addq.b  #$01, $001B(A0)
loc_11C08:
                rts
loc_11C0A:
                addq.b  #$01, D0
                bne.s   loc_11C1A
                move.b  #$00, $001B(A0)
                move.b  $0001(A1), D0
                bra.s   loc_11C00
loc_11C1A:
                addq.b  #$01, D0
                bne.s   loc_11C2E
                move.b  $02(A1, D1), D0
                sub.b   D0, $001B(A0)
                sub.b   D0, D1
                move.b  $01(A1, D1), D0
                bra.s   loc_11C00
loc_11C2E:
                addq.b  #$01, D0
                bne.s   loc_11C38
                move.b  $02(A1, D1), $001C(A0)
loc_11C38:
                rts
loc_11C3A:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_11C08
                addq.b  #$01, D0
                bne     loc_11D26
                moveq   #$00, D0
                move.b  $0027(A0), D0
                bne     loc_11CC0
                moveq   #$00, D1
                move.b  $0026(A0), D0
                move.b  $0022(A0), D2
                andi.b  #$01, D2
                bne.s   loc_11C62
                not.b  d0
loc_11C62:
                addi.b  #$10, D0
                bpl.s   loc_11C6A
                moveq   #$03, D1
loc_11C6A:
                andi.b  #$FC, $0001(A0)
                eor.b   D1, D2
                or.b    D2, $0001(A0)
                lsr.b   #$04, D0
                andi.b  #$06, D0
                move.w  $0014(A0), D2
                bpl.s   loc_11C84
                neg.w   D2
loc_11C84:
                move.b  D0, D3
                add.b   D3, D3
                add.b   D3, D3
                lea     (Tails_Animate_Walk), A1 ; loc_11E32
                cmpi.w  #$0600, D2
                bcs.s   loc_11CA6
                lea     (Tails_Animate_Run), A1 ; loc_11E3C
                move.b  D0, D1
                lsr.b   #$01, D1
                add.b   D1, D0
                add.b   D0, D0
                move.b  D0, D3
loc_11CA6:
                neg.w   D2
                addi.w  #$0800, D2
                bpl.s   loc_11CB0
                moveq   #$00, D2
loc_11CB0:
                lsr.w   #$08, D2
                move.b  D2, $001E(A0)
                bsr     loc_11BF0
                add.b   D3, $001A(A0)
                rts
loc_11CC0:
                move.b  $0027(A0), D0
                moveq   #$00, D1
                move.b  $0022(A0), D2
                andi.b  #$01, D2
                bne.s   loc_11CEE
                andi.b  #$FC, $0001(A0)
                addi.b  #$0B, D0
                divu.w  #$0016, D0
                addi.b  #$75, D0
                move.b  D0, $001A(A0)
                move.b  #$00, $001E(A0)
                rts
loc_11CEE:
                andi.b  #$FC, $0001(A0)
                tst.b   $0029(A0)
                beq.s   loc_11D06
                ori.b   #$01, $0001(A0)
                addi.b  #$0B, D0
                bra.s   loc_11D12
loc_11D06:
                ori.b   #$03, $0001(A0)
                neg.b   D0
                addi.b  #$8F, D0
loc_11D12:
                divu.w  #$0016, D0
                addi.b  #$75, D0
                move.b  D0, $001A(A0)
                move.b  #$00, $001E(A0)
                rts
loc_11D26:
                addq.b  #$01, D0
                bne.s   loc_11D6A
                move.w  $0014(A0), D2
                bpl.s   loc_11D32
                neg.w   D2
loc_11D32:
                lea     (Tails_Animate_Roll2), A1 ; loc_11E4B
                cmpi.w  #$0600, D2
                bcc.s   loc_11D44
                lea     (Tails_Animate_Roll), A1 ; loc_11E46
loc_11D44:
                neg.w   D2
                addi.w  #$0400, D2
                bpl.s   loc_11D4E
                moveq   #$00, D2
loc_11D4E:
                lsr.w   #$08, D2
                move.b  D2, $001E(A0)
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                bra     loc_11BF0
loc_11D6A:
                addq.b  #$01, D0
                bne.s   loc_11DA0
                move.w  $0014(A0), D2
                bmi.s   loc_11D76
                neg.w   D2
loc_11D76:
                addi.w  #$0800, D2
                bpl.s   loc_11D7E
                moveq   #$00, D2
loc_11D7E:
                lsr.w   #$06, D2
                move.b  D2, $001E(A0)
                lea     (Tails_Animate_Push_NoArt), A1 ; loc_11E50
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                bra     loc_11BF0
loc_11DA0:
                move.w  ($FFFFB050).w, D1
                move.w  ($FFFFB052).w, D2
                jsr     CalcAngle               ; loc_34A2
                moveq   #$00, D1
                move.b  $0022(A0), D2
                andi.b  #$01, D2
                bne.s   loc_11DBE
                not.b  d0
                bra.s   loc_11DC2
loc_11DBE:
                addi.b  #$80, D0
loc_11DC2:
                addi.b  #$10, D0
                bpl.s   loc_11DCA
                moveq   #$03, D1
loc_11DCA:
                andi.b  #$FC, $0001(A0)
                eor.b   D1, D2
                or.b    D2, $0001(A0)
                lsr.b   #$03, D0
                andi.b  #$0C, D0
                move.b  D0, D3
                lea     (loc_12054), A1
                move.b  #$03, $001E(A0)
                bsr     loc_11BF0
                add.b   D3, $001A(A0)
                rts 
Tails_AnimateData: ; loc_11DF4: ; Tails Data               
                dc.w    Tails_Animate_Walk-Tails_AnimateData           ; loc_11E32
                dc.w    Tails_Animate_Run-Tails_AnimateData            ; loc_11E3C
                dc.w    Tails_Animate_Roll-Tails_AnimateData           ; loc_11E46
                dc.w    Tails_Animate_Roll2-Tails_AnimateData          ; loc_11E4B
                dc.w    Tails_Animate_Push_NoArt-Tails_AnimateData     ; loc_11E50
                dc.w    Tails_Animate_Wait-Tails_AnimateData           ; loc_11E58
                dc.w    Tails_Animate_Balance_NoArt-Tails_AnimateData  ; loc_11E96
                dc.w    Tails_Animate_LookUp-Tails_AnimateData         ; loc_11EA0
                dc.w    Tails_Animate_Duck-Tails_AnimateData           ; loc_11EA3
                dc.w    Tails_Animate_Spindash-Tails_AnimateData       ; loc_11EA6
                dc.w    Tails_Animate_0x0A-Tails_AnimateData           ; loc_11EAB
                dc.w    Tails_Animate_0x0B-Tails_AnimateData           ; loc_11EAE
                dc.w    Tails_Animate_0x0C-Tails_AnimateData           ; loc_11EB4
                dc.w    Tails_Animate_Stop-Tails_AnimateData           ; loc_11EB8
                dc.w    Tails_Animate_Fly-Tails_AnimateData            ; loc_11EBC
                dc.w    Tails_Animate_0x0F-Tails_AnimateData           ; loc_11EC0
                dc.w    Tails_Animate_Jump-Tails_AnimateData           ; loc_11EC7
                dc.w    Tails_Animate_0x11-Tails_AnimateData           ; loc_11ED6
                dc.w    Tails_Animate_0x12-Tails_AnimateData           ; loc_11EDA
                dc.w    Tails_Animate_0x13-Tails_AnimateData           ; loc_11EE0
                dc.w    Tails_Animate_0x14-Tails_AnimateData           ; loc_11EE5
                dc.w    Tails_Animate_0x15-Tails_AnimateData           ; loc_11EE8
                dc.w    Tails_Animate_Death1-Tails_AnimateData         ; loc_11EEF
                dc.w    Tails_Animate_Unused_Drown-Tails_AnimateData   ; loc_11EF2
                dc.w    Tails_Animate_Death2-Tails_AnimateData         ; loc_11EF5
                dc.w    Tails_Animate_0x19-Tails_AnimateData           ; loc_11EF8
                dc.w    Tails_Animate_0x1A-Tails_AnimateData           ; loc_11EFB
                dc.w    Tails_Animate_0x1B-Tails_AnimateData           ; loc_11EFE
                dc.w    Tails_Animate_0x1C-Tails_AnimateData           ; loc_11F02
                dc.w    Tails_Animate_0x1D-Tails_AnimateData           ; loc_11F06
                dc.w    Tails_Animate_0x1E-Tails_AnimateData           ; loc_11F10
Tails_Animate_Walk: ; loc_11E32:
                dc.b    $FF, $10, $11, $12, $13, $14, $15, $0E, $0F, $FF  
Tails_Animate_Run: ; loc_11E3C:
                dc.b    $FF, $2E, $2F, $30, $31, $FF, $FF, $FF, $FF, $FF
Tails_Animate_Roll: ; loc_11E46:
                dc.b    $01, $48, $47, $46, $FF
Tails_Animate_Roll2: ; loc_11E4B:
                dc.b    $01, $48, $47, $46, $FF
Tails_Animate_Push_NoArt: ; loc_11E50:
                dc.b    $FD, $09, $0A, $0B, $0C, $0D, $0E, $FF
Tails_Animate_Wait: ; loc_11E58:
                dc.b    $07, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $03, $02, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $03, $02, $01, $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $06, $07, $08, $07, $08, $07, $08, $07, $08, $07, $08, $06, $FE, $1C  
Tails_Animate_Balance_NoArt: ; loc_11E96:
                dc.b    $1F, $01, $02, $03, $04, $05, $06, $07, $08, $FF
Tails_Animate_LookUp: ; loc_11EA0:
                dc.b    $3F, $04, $FF
Tails_Animate_Duck: ; loc_11EA3:
                dc.b    $3F, $5B, $FF
Tails_Animate_Spindash: ; loc_11EA6:
                dc.b    $00, $60, $61, $62, $FF
Tails_Animate_0x0A: ; loc_11EAB:
                dc.b    $3F, $82, $FF
Tails_Animate_0x0B: ; loc_11EAE:
                dc.b    $07, $08, $08, $09, $FD, $05
Tails_Animate_0x0C: ; loc_11EB4:
                dc.b    $07, $09, $FD, $05
Tails_Animate_Stop: ; loc_11EB8:
                dc.b    $07, $01, $02, $FF
Tails_Animate_Fly: ; loc_11EBC:
                dc.b    $07, $5E, $5F, $FF
Tails_Animate_0x0F: ; loc_11EC0:
                dc.b    $07, $01, $02, $03, $04, $05, $FF
Tails_Animate_Jump: ; loc_11EC7:
                dc.b    $03, $59, $5A, $59, $5A, $59, $5A, $59, $5A, $59, $5A, $59, $5A, $FD, $00
Tails_Animate_0x11: ; loc_11ED6:
                dc.b    $04, $01, $02, $FF
Tails_Animate_0x12: ; loc_11EDA:
                dc.b    $0F, $01, $02, $03, $FE, $01
Tails_Animate_0x13: ; loc_11EE0:
                dc.b    $0F, $01, $02, $FE, $01
Tails_Animate_0x14: ; loc_11EE5:
                dc.b    $3F, $01, $FF
Tails_Animate_0x15: ; loc_11EE8:
                dc.b    $0B, $01, $02, $03, $04, $FD, $00
Tails_Animate_Death1: ; loc_11EEF:
                dc.b    $20, $5D, $FF
Tails_Animate_Unused_Drown: ; loc_11EF2:
                dc.b    $2F, $5D, $FF
Tails_Animate_Death2: ; loc_11EF5:
                dc.b    $03, $5D, $FF
Tails_Animate_0x19: ; loc_11EF8:
                dc.b    $03, $5D, $FF
Tails_Animate_0x1A: ; loc_11EFB:
                dc.b    $03, $5C, $FF
Tails_Animate_0x1B: ; loc_11EFE:
                dc.b    $07, $01, $01, $FF
Tails_Animate_0x1C: ; loc_11F02:
                dc.b    $77, $00, $FD, $00
Tails_Animate_0x1D: ; loc_11F06:
                dc.b    $03, $01, $02, $03, $04, $05, $06, $07, $08, $FF
Tails_Animate_0x1E: ; loc_11F10:
                dc.b    $03, $01, $02, $03, $04, $05, $06, $07, $08, $FF
;=============================================================================== 
; Sub Routine Tails_Animate
; [ End ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine Load_Tails_Tail_Dynamic_PLC
; [ Begin ]                         
;===============================================================================    
Load_Tails_Tail_Dynamic_PLC: ; loc_11F1A:  ; Tails "Tail" subroutine
                moveq   #$00, D0
                move.b  $001A(A0), D0
                cmp.b   ($FFFFF7DF).w, D0
                beq.s   loc_11F94
                move.b  D0, ($FFFFF7DF).w
                lea     (Tails_Dyn_Script), A2  ; loc_7056E
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D5
                subq.w  #$01, D5
                bmi.s   loc_11F94
                move.w  #$F600, D4
                bra.s   loc_11F68  
;=============================================================================== 
; Sub Routine Load_Tails_Tail_Dynamic_PLC
; [ End ]                         
;===============================================================================   
              
;=============================================================================== 
; Sub Routine Load_Tails_Dynamic_PLC
; [ Begin ]                         
;===============================================================================                                                
Load_Tails_Dynamic_PLC: ; loc_11F42:
                moveq   #$00, D0
                move.b  $001A(A0), D0
                cmp.b   ($FFFFF7DE).w, D0
                beq.s   loc_11F94
                move.b  D0, ($FFFFF7DE).w
                lea     (Tails_Dyn_Script), A2 ; loc_7056E
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D5
                subq.w  #$01, D5
                bmi.s   loc_11F94
                move.w  #$F400, D4
loc_11F68:                
                moveq   #$00, D1
                move.w  (A2)+, D1
                move.w  D1, D3
                lsr.w   #$08, D3
                andi.w  #$00F0, D3
                addi.w  #$0010, D3
                andi.w  #$0FFF, D1
                lsl.l   #$05, D1
                addi.l  #Tails_Sprites, D1      ; loc_6254C
                move.w  D4, D2
                add.w   D3, D4
                add.w   D3, D4
                jsr     QueueDMATransfer           ; loc_156C
                dbra    D5, loc_11F68
loc_11F94:
                rts                    
;=============================================================================== 
; Object 0x05 - Tails "Tail"
; [ Begin ]
;===============================================================================                     
Obj_0x05_Tails_Tail: ; loc_11F96:               
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_11FA4(PC, D0), D1
                jmp     loc_11FA4(PC, D1)
loc_11FA4:
                dc.w    loc_11FA8-loc_11FA4
                dc.w    loc_11FD0-loc_11FA4
loc_11FA8:
                addq.b  #$02, $0024(A0)                  
                move.l  #Tails_Mappings, $0004(A0) ; loc_6FB3C
                move.w  #$07B0, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$02, $0018(A0)
                move.b  #$18, $0019(A0)
                move.b  #$04, $0001(A0)
loc_11FD0:
                move.b  ($FFFFB066).w, $0026(A0)
                move.b  ($FFFFB062).w, $0022(A0)
                move.w  ($FFFFB048).w, $0008(A0)
                move.w  ($FFFFB04C).w, $000C(A0)
                moveq   #$00, D0
                move.b  ($FFFFB05C).w, D0
                cmp.b   $0030(A0), D0
                beq.s   loc_11FFE
                move.b  D0, $0030(A0)
                move.b  loc_12014(PC, D0), $001C(A0)
loc_11FFE:
                lea     (loc_12032), A1
                bsr     Tails_Animate2          ; loc_11BA8
                bsr     Load_Tails_Tail_Dynamic_PLC ; loc_11F1A
                jsr     DisplaySprite           ; loc_D3C2
                rts
loc_12014:
                dc.b    $00, $00, $03, $03, $00, $01, $00, $02, $01, $07, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                           
loc_12032:
                dc.w    loc_12042-loc_12032
                dc.w    loc_12045-loc_12032
                dc.w    loc_1204C-loc_12032
                dc.w    loc_12054-loc_12032
                dc.w    loc_1205A-loc_12032
                dc.w    loc_12060-loc_12032
                dc.w    loc_12066-loc_12032
                dc.w    loc_1206C-loc_12032
loc_12042:
                dc.b    $20, $00, $FF 
loc_12045:    
                dc.b    $07, $09, $0A, $0B, $0C, $0D, $FF
loc_1204C: 
                dc.b    $03, $09, $0A, $0B, $0C, $0D, $FD, $01 
loc_12054:
                dc.b    $FC, $49, $4A, $4B, $4C, $FF
loc_1205A:
                dc.b    $03, $4D, $4E, $4F, $50, $FF
loc_12060:
                dc.b    $03, $51, $52, $53, $54, $FF
loc_12066:
                dc.b    $03, $55, $56, $57, $58, $FF
loc_1206C: 
                dc.b    $02, $81, $82, $83, $84, $FF
;=============================================================================== 
; Object 0x05 - Tails "Tail"
; [ End ]
;===============================================================================                    
                nop                             ; Filler 
KillTails: ; loc_12074:
                jmp     KillSonic               ; loc_21422
                dc.w    $0000                   ; Filler  
;=============================================================================== 
; Object 0x0A - 
; [ Begin ]
;===============================================================================                                    
Obj_0x0A_Bubbles_And_Numbers: ; loc_1207C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1208A(PC, D0), D1
                jmp     loc_1208A(PC, D1)
loc_1208A:
                dc.w    loc_1209C-loc_1208A
                dc.w    loc_120F8-loc_1208A
                dc.w    loc_12104-loc_1208A
                dc.w    loc_1216E-loc_1208A
                dc.w    J_DeleteObject_01-loc_1208A ; loc_12182-...
                dc.w    loc_1230C-loc_1208A
                dc.w    loc_12188-loc_1208A
                dc.w    loc_1216E-loc_1208A
                dc.w    J_DeleteObject_01-loc_1208A ; loc_12182-...
loc_1209C:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x0A_Bubbles_Mappings, $0004(A0) ; loc_14374
                move.w  #$8500, $0002(A0)
                move.b  #$84, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  $0028(A0), D0
                bpl.s   loc_120E4
                addq.b  #$08, $0024(A0)
                move.l  #Obj_0x0A_Numbers_Mappings, $0004(A0) ; loc_125C2
                move.w  #$0440, $0002(A0)
                andi.w  #$007F, D0
                move.b  D0, $0033(A0)
                bra     loc_1230C
loc_120E4:
                move.b  D0, $001C(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.w  $0008(A0), $0030(A0)
                move.w  #$FF78, $0012(A0)
loc_120F8:
                lea     (loc_12530), A1
                jsr     AnimateSprite           ; (loc_D412)
loc_12104:
                move.w  (Water_Level_1).w, D0
                cmp.w   $000C(A0), D0
                bcs.s   loc_1212A
                move.b  #$06, $0024(A0)
                addq.b  #$07, $001C(A0)
                cmpi.b  #$0D, $001C(A0)
                beq.s   loc_1216E
                bcs.s   loc_1216E
                move.b  #$0D, $001C(A0)
                bra.s   loc_1216E
loc_1212A:
                tst.b   (WindTunnel_flag).w
                beq.s   loc_12134
                addq.w  #$04, $0030(A0)
loc_12134:
                move.b  $0026(A0), D0
                addq.b  #$01, $0026(A0)
                andi.w  #$007F, D0
                lea     (loc_1220C), A1
                move.b  $00(A1, D0), D0
                ext.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                bsr.s   loc_121C0
                jsr     SpeedToPos              ; (loc_D27A)
                tst.b   $0001(A0)
                bpl.s   J_DeleteObject_00       ; loc_12168
                jmp     DisplaySprite           ; (loc_D3C2) 
J_DeleteObject_00: ; loc_12168:
                jmp     DeleteObject            ; (loc_D3B4)    
loc_1216E:
                bsr.s   loc_121C0
                lea     (loc_12530), A1
                jsr     AnimateSprite           ; (loc_D412)
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_01: ; loc_12182:
                jmp     DeleteObject            ; (loc_D3B4)
loc_12188:
                cmpi.w  #$000C, ($FFFFFE14).w
                bhi.s   J_DeleteObject_02       ; loc_121BA
                subq.w  #$01, $0038(A0)
                bne.s   loc_121A2
                move.b  #$0E, $0024(A0)
                addq.b  #$07, $001C(A0)
                bra.s   loc_1216E
loc_121A2:
                lea     (loc_12530), A1
                jsr     AnimateSprite           ; (loc_D412)
                tst.b   $0001(A0)
                bpl.s   J_DeleteObject_02       ; loc_121BA
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_02: ; loc_121BA:
                jmp     DeleteObject            ; (loc_D3B4)
loc_121C0:
                tst.w   $0038(A0)
                beq.s   loc_1220A
                subq.w  #$01, $0038(A0)
                bne.s   loc_1220A
                cmpi.b  #$07, $001C(A0)
                bcc.s   loc_1220A
                move.w  #$000F, $0038(A0)
                clr.w   $0012(A0)
                move.b  #$80, $0001(A0)
                move.w  $0008(A0), D0
                sub.w   ($FFFFEE00).w, D0
                addi.w  #$0080, D0
                move.w  D0, $0008(A0)
                move.w  $000C(A0), D0
                sub.w   ($FFFFEE04).w, D0
                addi.w  #$0080, D0
                move.w  D0, $000A(A0)
                move.b  #$0C, $0024(A0)
loc_1220A:
                rts

loc_1220C:
                dc.b    $00, $00, $00, $00, $00, $00, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02
                dc.b    $02, $02, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03
                dc.b    $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $02
                dc.b    $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $00, $00, $00, $00, $00
                dc.b    $00, $FF, $FF, $FF, $FF, $FF, $FE, $FE, $FE, $FE, $FE, $FD, $FD, $FD, $FD, $FD
                dc.b    $FD, $FD, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FD
                dc.b    $FD, $FD, $FD, $FD, $FD, $FD, $FE, $FE, $FE, $FE, $FE, $FF, $FF, $FF, $FF, $FF
                dc.b    $00, $00, $00, $00, $00, $00, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02
                dc.b    $02, $02, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03
                dc.b    $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $02
                dc.b    $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $00, $00, $00, $00, $00
                dc.b    $00, $FF, $FF, $FF, $FF, $FF, $FE, $FE, $FE, $FE, $FE, $FD, $FD, $FD, $FD, $FD
                dc.b    $FD, $FD, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FD
                dc.b    $FD, $FD, $FD, $FD, $FD, $FD, $FE, $FE, $FE, $FE, $FE, $FF, $FF, $FF, $FF, $FF
loc_1230C:
                tst.w   $002C(A0)
                bne     loc_123F6
                cmpi.b  #$06, ($FFFFB024).w
                bcc     loc_124FC
                btst    #$06, ($FFFFB022).w
                beq     loc_124FC
                subq.w  #$01, $0038(A0)
                bpl     loc_1241C
                move.w  #$003B, $0038(A0)
                move.w  #$0001, $0036(A0)
                jsr     PseudoRandomNumber      ; loc_31E4
                andi.w  #$0001, D0
                move.b  D0, $0034(A0)
                move.w  ($FFFFFE14).w, D0
                cmpi.w  #$0019, D0
                beq.s   loc_12386
                cmpi.w  #$0014, D0
                beq.s   loc_12386
                cmpi.w  #$000F, D0
                beq.s   loc_12386
                cmpi.w  #$000C, D0
                bhi.s   loc_12390
                bne.s   loc_12372
                move.w  #$008A, D0
                jsr     (PlayMusic)            ; loc_14C0
loc_12372:
                subq.b  #$01, $0032(A0)
                bpl.s   loc_12390
                move.b  $0033(A0), $0032(A0)
                bset    #$07, $0036(A0)
                bra.s   loc_12390
loc_12386:
                move.w  #$00C2, D0
                jsr     (PlaySound)              ; loc_14C6
loc_12390:
                subq.w  #$01, ($FFFFFE14).w
                bcc     loc_1241A
                bsr     ResumeMusic             ; loc_124FE
                move.b  #$81, ($FFFFB02A).w
                move.w  #$00B2, D0
                jsr     (PlaySound)              ; loc_14C6
                move.b  #$0A, $0034(A0)
                move.w  #$0001, $0036(A0)
                move.w  #$0078, $002C(A0)
                move.l  A0, -(A7)
                lea     ($FFFFB000).w, A0
                bsr     Sonic_ResetOnFloor      ; loc_1090C
                move.b  #$17, $001C(A0)
                bset    #$01, $0022(A0)
                bset    #$07, $0002(A0)
                move.w  #$0000, $0012(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0014(A0)
                move.b  #$01, ($FFFFEEDC).w
                move.l  (A7)+, A0
                rts
loc_123F6:
                subq.w  #$01, $002C(A0)
                bne.s   loc_12404
                move.b  #$06, ($FFFFB024).w
                rts
loc_12404:
                move.l  A0, -(A7)
                lea     ($FFFFB000).w, A0
                jsr     SpeedToPos              ; (loc_D27A)
                addi.w  #$0010, $0012(A0)
                move.l  (A7)+, A0
                bra.s   loc_1241C
loc_1241A:
                bra.s   loc_1242C
loc_1241C:
                tst.w   $0036(A0)
                beq     loc_124FC
                subq.w  #$01, $003A(A0)
                bpl     loc_124FC
loc_1242C:
                jsr     PseudoRandomNumber      ; loc_31E4
                andi.w  #$000F, D0
                move.w  D0, $003A(A0)
                jsr     SingleObjLoad        ; (loc_E772)
                bne     loc_124FC
                move.b  #$0A, $0000(A1)
                move.w  ($FFFFB008).w, $0008(A1)
                moveq   #$06, D0
                btst    #$00, ($FFFFB022).w
                beq.s   loc_12462
                neg.w   D0
                move.b  #$40, $0026(A1)
loc_12462:
                add.w   D0, $0008(A1)
                move.w  ($FFFFB00C).w, $000C(A1)
                move.b  #$06, $0028(A1)
                tst.w   $002C(A0)
                beq     loc_124AE
                andi.w  #$0007, $003A(A0)
                addi.w  #$0000, $003A(A0)
                move.w  ($FFFFB00C).w, D0
                subi.w  #$000C, D0
                move.w  D0, $000C(A1)
                jsr     PseudoRandomNumber      ; loc_31E4
                move.b  D0, $0026(A1)
                move.w  ($FFFFFE04).w, D0
                andi.b  #$03, D0
                bne.s   loc_124F2
                move.b  #$0E, $0028(A1)
                bra.s   loc_124F2
loc_124AE:
                btst    #$07, $0036(A0)
                beq.s   loc_124F2
                move.w  ($FFFFFE14).w, D2
                lsr.w   #$01, D2
                jsr     PseudoRandomNumber      ; loc_31E4
                andi.w  #$0003, D0
                bne.s   loc_124DA
                bset    #$06, $0036(A0)
                bne.s   loc_124F2
                move.b  D2, $0028(A1)
                move.w  #$001C, $0038(A1)
loc_124DA:
                tst.b   $0034(A0)
                bne.s   loc_124F2
                bset    #$06, $0036(A0)
                bne.s   loc_124F2
                move.b  D2, $0028(A1)
                move.w  #$001C, $0038(A1)
loc_124F2:
                subq.b  #$01, $0034(A0)
                bpl.s   loc_124FC
                clr.w   $0036(A0)
loc_124FC:
                rts               
ResumeMusic: ; loc_124FE:
                cmpi.w  #$000C, ($FFFFFE14).w
                bhi.s   loc_12524
                move.w  #$0082, D0
                tst.b   ($FFFFFE2D).w
                beq.s   loc_12514
                move.w  #$0087, D0
loc_12514:
                tst.b   ($FFFFF7AA).w
                beq.s   loc_1251E
                move.w  #$008C, D0
loc_1251E:
                jsr     (PlayMusic)            ; loc_14C0
loc_12524:
                move.w  #$001E, ($FFFFFE14).w
                clr.b   ($FFFFB372).w
                rts            
loc_12530:
                dc.w    loc_1254E-loc_12530
                dc.w    loc_12557-loc_12530
                dc.w    loc_12560-loc_12530
                dc.w    loc_12569-loc_12530
                dc.w    loc_12572-loc_12530
                dc.w    loc_1257B-loc_12530
                dc.w    loc_12584-loc_12530
                dc.w    loc_12589-loc_12530
                dc.w    loc_12591-loc_12530
                dc.w    loc_12599-loc_12530
                dc.w    loc_125A1-loc_12530
                dc.w    loc_125A9-loc_12530
                dc.w    loc_125B1-loc_12530
                dc.w    loc_125B9-loc_12530
                dc.w    loc_125BB-loc_12530
loc_1254E:
                dc.b    $05, $00, $01, $02, $03, $04, $09, $0D, $FC
loc_12557:
                dc.b    $05, $00, $01, $02, $03, $04, $0C, $12, $FC
loc_12560:
                dc.b    $05, $00, $01, $02, $03, $04, $0C, $11, $FC
loc_12569:
                dc.b    $05, $00, $01, $02, $03, $04, $0B, $10, $FC
loc_12572:
                dc.b    $05, $00, $01, $02, $03, $04, $09, $0F, $FC
loc_1257B:
                dc.b    $05, $00, $01, $02, $03, $04, $0A, $0E, $FC
loc_12584:
                dc.b    $0E, $00, $01, $02, $FC
loc_12589:
                dc.b    $07, $16, $0D, $16, $0D, $16, $0D, $FC
loc_12591:
                dc.b    $07, $16, $12, $16, $12, $16, $12, $FC
loc_12599:
                dc.b    $07, $16, $11, $16, $11, $16, $11, $FC
loc_125A1:
                dc.b    $07, $16, $10, $16, $10, $16, $10, $FC
loc_125A9:
                dc.b    $07, $16, $0F, $16, $0F, $16, $0F, $FC
loc_125B1:
                dc.b    $07, $16, $0E, $16, $0E, $16, $0E, $FC
loc_125B9:
                dc.b    $0E, $FC
loc_125BB:
                dc.b    $0E, $01, $02, $03, $04, $FC, $00 
Obj_0x0A_Numbers_Mappings: ; loc_125C2:
                dc.w    loc_125C4-Obj_0x0A_Numbers_Mappings
loc_125C4:
                dc.w    $0001
                dc.l    $E80E0000, $0000FFF2                
;=============================================================================== 
; Object 0x0A - 
; [ End ]
;=============================================================================== 
;=============================================================================== 
; Object 0x38 - 
; [ Begin ]
;===============================================================================  
Obj_0x38_Shield: ; loc_125CE:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_125DC(PC, D0), D1
                jmp     loc_125DC(PC, D1)
loc_125DC:                 
                dc.w    loc_125E0-loc_125DC
                dc.w    loc_12616-loc_125DC
loc_125E0:
                addq.b  #$02, $0024(A0)
                move.l  #loc_12BB0, $0004(A0)
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$18, $0019(A0)
                move.w  #$04BE, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                btst    #$07, ($FFFFB002).w
                beq.s   loc_12616
                bset    #$07, $0002(A0)
loc_12616:
                tst.b   ($FFFFFE2D).w
                bne.s   loc_12646
                tst.b   ($FFFFFE2C).w
                beq.s   J_DeleteObject_03       ; loc_12648
                move.w  ($FFFFB008).w, $0008(A0)
                move.w  ($FFFFB00C).w, $000C(A0)
                move.b  ($FFFFB022).w, $0022(A0)
                lea     (loc_12BA2), A1
                jsr     AnimateSprite           ; (loc_D412)
                jmp     DisplaySprite           ; (loc_D3C2)
loc_12646:
                rts    
J_DeleteObject_03: ; loc_12648:
                jmp     DeleteObject            ; (loc_D3B4)
;=============================================================================== 
; Object 0x38 - 
; [ End ]
;===============================================================================  
;=============================================================================== 
; Object 0x35 - 
; [ Begin ]
;===============================================================================                   
Obj_0x35_Invincibility: ; loc_1264E:
                moveq   #$00, D0
                move.b  $000A(A0), D0
                move.w  loc_1265C(PC, D0), D1
                jmp     loc_1265C(PC, D1)
loc_1265C:
                dc.w    loc_12660-loc_1265C
                dc.w    loc_1268E-loc_1265C
loc_12660:
                addq.b  #$02, $000A(A0)
                move.l  #loc_12C88, $0004(A0)
                move.w  #$04DE, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                bset    #$06, $0001(A0)
                move.b  #$10, $000E(A0)
                move.b  #$08, $000F(A0)
loc_1268E:
                tst.b   ($FFFFFE2D).w
                beq     DeleteObject            ; loc_D3B4
                lea     ($FFFFB000).w, A1
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                move.b  $0022(A1), D6
                lea     (loc_127B0), A2
                move.b  $0026(A1), D1
                btst    #$01, D6
                beq.s   loc_126C0
                move.b  $002B(A1), D1
                moveq   #$00, D6
loc_126C0:
                andi.b  #$01, D6
                beq.s   loc_126C8
                neg.w   D1
loc_126C8:
                addi.b  #$10, D1
                lsr.b   #$03, D1
                andi.w  #$001C, D1
                lea     $00(A2, D1), A2
                subq.w  #$08, D1
                andi.w  #$0010, D1
                bne.s   loc_126E2
                eori.b  #$01, D6
loc_126E2:
                move.b  ($FFFFFE05).w, D0
                andi.b  #$01, D0
                lea     (loc_127D0), A3
                beq.s   loc_126FA
                lea     (loc_12938), A3
                addq.w  #$02, A2
loc_126FA:
                move.w  $0008(A1), D4
                move.b  (A2)+, D1
                ext.w   D1
                andi.b  #$01, D6
                beq.s   loc_1270A
                neg.w   D1
loc_1270A:
                add.w   D1, D4
                move.w  $000C(A1), D5
                move.b  (A2)+, D1
                ext.w   D1
                add.w   D1, D5
                moveq   #$00, D0
                move.b  $001A(A0), D0
                addq.b  #$06, D0
                cmpi.b  #$78, D0
                bcs.s   loc_12726
                moveq   #$00, D0
loc_12726:
                move.b  D0, $001A(A0)
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                lea     $00(A3, D0), A3
                lea     $0010(A0), A2
                moveq   #$00, D0
                moveq   #$05, D1
loc_1273C:                
                move.b  (A3)+, D0
                move.b  (A3)+, D2
                ext.w   D2
                andi.b  #$01, D6
                beq.s   loc_1274A
                neg.w   D2
loc_1274A:
                add.w   D4, D2
                move.b  (A3)+, D3
                ext.w   D3
                add.w   D5, D3
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                addq.w  #$01, A2
                move.b  D0, (A2)+
                dbra    D1, loc_1273C
                move.w  $0008(A1), D4
                move.w  $000C(A1), D5
                moveq   #$00, D0
                move.b  $0004(A0), D0
                addq.b  #$06, D0
                cmpi.b  #$A2, D0
                bcs.s   loc_12776
                moveq   #$00, D0
loc_12776:
                move.b  D0, $0004(A0)
                lea     (loc_12AA0), A3
                lea     $00(A3, D0), A3
                moveq   #$01, D1
loc_12786:                
                move.b  (A3)+, D0
                move.b  (A3)+, D2
                ext.w   D2
                andi.b  #$01, D6
                beq.s   loc_12794
                neg.w   D2
loc_12794:
                add.w   D4, D2
                move.b  (A3)+, D3
                ext.w   D3
                add.w   D5, D3
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                addq.w  #$01, A2
                move.b  D0, (A2)+
                dbra    D1, loc_12786
                move.w  #$0080, D0
                bra     DisplaySprite_Param     ; loc_D3FE  
loc_127B0:
                dc.w    $0000, $0000, $00F8, $00F0, $04F0, $04E0, $00F8, $00F0
                dc.w    $0000, $0000, $0008, $0010, $0410, $0420, $0008, $0010  
loc_127D0:
                dc.b    $02, $F8, $F9, $05, $E5, $F9, $04, $E6, $08, $02, $E8, $FD, $00, $00, $00, $00
                dc.b    $00, $00, $03, $F7, $F9, $02, $F8, $07, $06, $E4, $F9, $05, $E5, $08, $03, $E7
                dc.b    $FD, $00, $00, $00, $04, $F6, $F9, $03, $F7, $07, $05, $E3, $FA, $06, $E4, $09
                dc.b    $04, $E6, $FC, $00, $00, $00, $05, $F5, $F9, $04, $F6, $08, $04, $E2, $FB, $05
                dc.b    $E3, $09, $05, $E5, $FC, $00, $00, $00, $06, $F4, $F9, $05, $F5, $08, $02, $F8
                dc.b    $FD, $03, $E1, $FC, $04, $E2, $0A, $06, $E4, $FB, $05, $F3, $FA, $06, $F4, $09
                dc.b    $03, $F7, $FD, $02, $E0, $FD, $03, $E1, $0A, $05, $E3, $FB, $04, $F2, $FB, $05
                dc.b    $F3, $09, $04, $F6, $FC, $01, $DF, $00, $02, $E0, $0B, $04, $E2, $FA, $03, $F1
                dc.b    $FC, $04, $F2, $0A, $05, $F5, $FC, $02, $F8, $02, $01, $DF, $0B, $03, $E1, $FA
                dc.b    $02, $F0, $FD, $03, $F1, $0A, $06, $F4, $FB, $03, $F7, $02, $02, $E0, $FA, $00
                dc.b    $00, $00, $01, $EF, $00, $02, $F0, $0B, $05, $F3, $FB, $04, $F6, $03, $01, $DF
                dc.b    $FA, $00, $00, $00, $01, $EE, $00, $01, $EF, $0B, $04, $F2, $FA, $05, $F5, $03
                dc.b    $02, $F8, $0E, $00, $00, $00, $01, $ED, $01, $01, $EE, $0C, $03, $F1, $FA, $06
                dc.b    $F4, $03, $03, $F7, $0E, $00, $00, $00, $01, $ED, $03, $01, $ED, $0D, $02, $F0
                dc.b    $FA, $05, $F3, $02, $04, $F6, $0D, $00, $00, $00, $01, $EC, $05, $01, $EC, $0D
                dc.b    $01, $EF, $FA, $04, $F2, $02, $05, $F5, $0D, $02, $F8, $F5, $01, $EB, $07, $01
                dc.b    $EB, $0D, $01, $EE, $F9, $03, $F1, $02, $06, $F4, $0C, $03, $F7, $F5, $01, $EA
                dc.b    $08, $01, $EA, $0D, $01, $ED, $F8, $02, $F0, $01, $05, $F3, $0C, $04, $F6, $F5
                dc.b    $01, $E9, $09, $01, $E9, $0D, $01, $EC, $F8, $01, $EF, $01, $04, $F2, $0B, $05
                dc.b    $F5, $F5, $01, $EB, $F7, $01, $EE, $00, $03, $F1, $0A, $05, $F4, $F6, $02, $E8
                dc.b    $F9, $00, $00, $00, $01, $EA, $F7, $01, $ED, $00, $02, $F0, $0A, $04, $F3, $F6
                dc.b    $03, $E7, $F9, $02, $E8, $07, $01, $E9, $F6, $01, $EC, $00, $01, $EF, $09, $03
                dc.b    $F2, $F6, $04, $E6, $F9, $03, $E7, $07    
loc_12938:
                dc.b    $01, $E6, $00, $01, $E7, $0B, $04, $EA, $FA, $05, $ED, $03, $02, $F0, $0E, $00
                dc.b    $00, $00, $01, $E5, $01, $01, $E6, $0C, $03, $E9, $FA, $06, $EC, $03, $03, $F1
                dc.b    $0E, $00, $00, $00, $01, $E5, $03, $01, $E5, $03, $02, $E8, $FA, $05, $EB, $02
                dc.b    $04, $EE, $0D, $00, $00, $00, $01, $E4, $05, $01, $E4, $0D, $01, $E7, $FA, $04
                dc.b    $EA, $02, $05, $ED, $0D, $02, $F0, $F5, $01, $E3, $07, $01, $E3, $0D, $01, $E6
                dc.b    $F9, $03, $E9, $02, $06, $EC, $0C, $03, $EF, $F5, $01, $E2, $08, $01, $E2, $0D
                dc.b    $01, $E5, $F8, $02, $E8, $01, $05, $EB, $0C, $04, $EE, $F5, $01, $E1, $09, $01
                dc.b    $E1, $0D, $01, $E4, $F8, $01, $E7, $01, $04, $EA, $0B, $05, $ED, $F5, $01, $E3
                dc.b    $F7, $01, $E6, $00, $03, $E9, $0A, $05, $EC, $F6, $02, $E8, $02, $00, $00, $00
                dc.b    $01, $E2, $F7, $01, $E5, $00, $02, $E8, $0A, $04, $EB, $F6, $03, $E7, $02, $02
                dc.b    $E8, $0E, $01, $E1, $F6, $01, $E4, $00, $01, $E7, $09, $03, $EA, $F6, $04, $E6
                dc.b    $03, $03, $E7, $0E, $02, $F0, $F9, $05, $E5, $03, $04, $E6, $0D, $02, $E8, $F5
                dc.b    $00, $00, $00, $00, $00, $00, $03, $EF, $F9, $02, $F0, $07, $06, $E4, $03, $05
                dc.b    $E5, $0D, $03, $E7, $F5, $00, $00, $00, $04, $EE, $F9, $03, $EF, $07, $05, $E3
                dc.b    $02, $06, $E4, $0C, $04, $E6, $F5, $00, $00, $00, $05, $ED, $F9, $04, $EE, $08
                dc.b    $04, $E2, $02, $05, $E3, $0C, $05, $E5, $F5, $00, $00, $00, $06, $EC, $F9, $05
                dc.b    $ED, $08, $02, $F0, $FD, $03, $E1, $02, $04, $E2, $0B, $06, $E4, $F6, $05, $EB
                dc.b    $FA, $06, $EC, $09, $03, $EF, $FD, $02, $E0, $01, $03, $E1, $0A, $05, $E3, $F6
                dc.b    $04, $EA, $FB, $05, $EB, $09, $04, $EE, $FD, $01, $DF, $01, $02, $E0, $0A, $04
                dc.b    $E2, $F6, $03, $E9, $FC, $04, $EA, $0A, $05, $ED, $FC, $02, $F0, $02, $01, $DF
                dc.b    $09, $03, $E1, $F7, $02, $E8, $FD, $03, $E9, $0A, $06, $EC, $FB, $03, $EF, $02
                dc.b    $02, $E0, $F7, $00, $00, $00, $01, $E7, $00, $02, $E8, $0B, $05, $EB, $FB, $04
                dc.b    $EE, $03, $01, $DF, $F8, $00, $00, $00      
loc_12AA0:
                dc.b    $04, $08, $09, $04, $FC, $01, $05, $08, $09, $05, $FC, $01, $06, $08, $09, $06
                dc.b    $FC, $01, $07, $08, $09, $07, $FC, $01, $08, $08, $09, $08, $FC, $01, $07, $08
                dc.b    $09, $07, $FC, $01, $06, $08, $09, $06, $FC, $01, $05, $08, $09, $05, $FC, $01
                dc.b    $04, $08, $09, $04, $FC, $01, $04, $F9, $F7, $04, $0B, $FC, $05, $F9, $F7, $05
                dc.b    $0B, $FC, $06, $F9, $F7, $06, $0B, $FC, $07, $F9, $F7, $07, $0B, $FC, $08, $F9
                dc.b    $F7, $08, $0B, $FC, $07, $F9, $F7, $07, $0B, $FC, $06, $F9, $F7, $06, $0B, $FC
                dc.b    $05, $F9, $F7, $05, $0B, $FC, $04, $F9, $F7, $04, $0B, $FC, $04, $03, $F1, $04
                dc.b    $F4, $09, $05, $03, $F1, $05, $F4, $09, $06, $03, $F1, $06, $F4, $09, $07, $03
                dc.b    $F1, $07, $F4, $09, $08, $03, $F1, $08, $F4, $09, $07, $03, $F1, $07, $F4, $09
                dc.b    $06, $03, $F1, $06, $F4, $09, $05, $03, $F1, $05, $F4, $09, $04, $03, $F1, $04
                dc.b    $F4, $09                                                         
;=============================================================================== 
; Object 0x35 - 
; [ End ]
;===============================================================================       

;=============================================================================== 
; Object 0x08 - 
; [ Begin ]
;===============================================================================       
Obj_0x08_Water_Splash: ; loc_12B42:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_12B50(PC, D0), D1
                jmp     loc_12B50(PC, D1)
loc_12B50:
                dc.w    loc_12B56-loc_12B50
                dc.w    loc_12B84-loc_12B50
                dc.w    J_DeleteObject_04-loc_12B50 ; loc_12B9C-...
loc_12B56:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x08_Mappings, $0004(A0) ; loc_12CF4
                ori.b   #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$10, $0019(A0)
                move.w  #$449C, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.w  ($FFFFB008).w, $0008(A0)
loc_12B84:
                move.w  (Water_Level_1).w, $000C(A0)
                lea     (loc_12CEC), A1
                jsr     AnimateSprite           ; (loc_D412)
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_04: ; loc_12B9C:
                jmp     DeleteObject            ; (loc_D3B4)
loc_12BA2:
                dc.w    loc_12BA4-loc_12BA2
loc_12BA4:
                dc.b    $00, $05, $00, $05, $01, $05, $02, $05, $03, $05, $04, $FF
loc_12BB0:
                dc.w    loc_12BBC-loc_12BB0
                dc.w    loc_12BDE-loc_12BB0
                dc.w    loc_12C00-loc_12BB0
                dc.w    loc_12C22-loc_12BB0
                dc.w    loc_12C44-loc_12BB0
                dc.w    loc_12C66-loc_12BB0
loc_12BBC:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF0, $F0050800, $08000000
                dc.l    $00051000, $1000FFF0, $00051800, $18000000
loc_12BDE:
                dc.w    $0004
                dc.l    $F0050004, $0002FFF0, $F0050804, $08020000
                dc.l    $00051004, $1002FFF0, $00051804, $18020000
loc_12C00:
                dc.w    $0004
                dc.l    $F0050008, $0004FFF0, $F0050808, $08040000
                dc.l    $00051008, $1004FFF0, $00051808, $18040000
loc_12C22:
                dc.w    $0004
                dc.l    $F005000C, $0006FFF0, $F005080C, $08060000
                dc.l    $0005100C, $1006FFF0, $0005180C, $18060000
loc_12C44:
                dc.w    $0004
                dc.l    $F0050010, $0008FFF0, $F0050810, $08080000
                dc.l    $00051010, $1008FFF0, $00051810, $18080000
loc_12C66:
                dc.w    $0004
                dc.l    $E00B0014, $000AFFE8, $E00B0814, $080A0000
                dc.l    $000B1014, $100AFFE8, $000B1814, $180A0000
loc_12C88:
                dc.w    loc_12C9A-loc_12C88
                dc.w    loc_12C9C-loc_12C88
                dc.w    loc_12CA6-loc_12C88
                dc.w    loc_12CB0-loc_12C88
                dc.w    loc_12CBA-loc_12C88
                dc.w    loc_12CC4-loc_12C88
                dc.w    loc_12CCE-loc_12C88
                dc.w    loc_12CD8-loc_12C88
                dc.w    loc_12CE2-loc_12C88
loc_12C9A:
                dc.w    $0000
loc_12C9C:
                dc.w    $0001
                dc.l    $F8010000, $0000FFFC
loc_12CA6:
                dc.w    $0001
                dc.l    $F8010002, $0001FFFC
loc_12CB0:
                dc.w    $0001
                dc.l    $F8010004, $0002FFFC
loc_12CBA:
                dc.w    $0001
                dc.l    $F8010006, $0003FFFC
loc_12CC4:
                dc.w    $0001
                dc.l    $F8010008, $0004FFFC
loc_12CCE:
                dc.w    $0001
                dc.l    $F805000A, $0005FFF8
loc_12CD8:
                dc.w    $0001
                dc.l    $F805000E, $0007FFF8
loc_12CE2:
                dc.w    $0001
                dc.l    $F00F0012, $0009FFF0
loc_12CEC:                
                dc.w    loc_12CEE-loc_12CEC
loc_12CEE:
                dc.b    $04, $00, $01, $02, $FC, $00  
Obj_0x08_Mappings:                 
loc_12CF4:
                dc.w    loc_12CFA-loc_12CF4
                dc.w    loc_12D0C-loc_12CF4
                dc.w    loc_12D1E-loc_12CF4
loc_12CFA:
                dc.w    $0002
                dc.l    $F204006D, $0036FFF8, $FA0C006F, $0037FFF0
loc_12D0C:
                dc.w    $0002
                dc.l    $E2000073, $0039FFF8, $EA0E0074, $003AFFF0
loc_12D1E:
                dc.w    $0001
                dc.l    $E20F0080, $0040FFF0
;=============================================================================== 
; Object 0x08 - 
; [ End ]
;===============================================================================

;=============================================================================== 
; Sub Routine AnglePos
; [ Begin ]                         
;===============================================================================        
; loc_12D28: Sonic_AnglePos:
AnglePos:
                move.l  #$FFFFD000, (Collision_addr).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   loc_12D40
                move.l  #$FFFFD600, (Collision_addr).w
loc_12D40:
                move.b  $003E(A0), D5
                btst    #$03, $0022(A0)
                beq.s   loc_12D58
                moveq   #$00, D0
                move.b  D0, (Primary_Angle).w
                move.b  D0, (Secondary_Angle).w
                rts
loc_12D58:
                moveq   #$03, D0
                move.b  D0, (Primary_Angle).w
                move.b  D0, (Secondary_Angle).w
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                bpl.s   loc_12D7A
                move.b  $0026(A0), D0
                bpl.s   loc_12D74
                subq.b  #$01, D0
loc_12D74:
                addi.b  #$20, D0
                bra.s   loc_12D86
loc_12D7A:
                move.b  $0026(A0), D0
                bpl.s   loc_12D82
                addq.b  #$01, D0
loc_12D82:
                addi.b  #$1F, D0
loc_12D86:
                andi.b  #$C0, D0
                cmpi.b  #$40, D0
                beq     Sonic_WalkVertL         ; loc_12FDC
                cmpi.b  #$80, D0
                beq     Sonic_WalkCeiling       ; loc_12F2E
                cmpi.b  #$C0, D0
                beq     Sonic_WalkVertR         ; loc_12E86
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     (Primary_Angle).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindFloor               ; loc_132C4
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0017(A0), D0
                ext.w   D0
                neg.w   D0
                add.w   D0, D3
                lea     (Secondary_Angle).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindFloor               ; loc_132C4
                move.w  (A7)+, D0
                bsr     Sonic_Angle             ; loc_12E4A
                tst.w   D1
                beq.s   loc_12E10
                bpl.s   loc_12E12
                cmpi.w  #$FFF2, D1
                blt.s   loc_12E10
                add.w   D1, $000C(A0)
loc_12E10:
                rts
loc_12E12:
                move.b  $0010(A0), D0
                bpl.s   loc_12E1A
                neg.b   D0
loc_12E1A:
                addq.b  #$04, D0
                cmpi.b  #$0E, D0
                bcs.s   loc_12E26
                move.b  #$0E, D0
loc_12E26:
                cmp.b   D0, D1
                bgt.s   loc_12E30
loc_12E2A:
                add.w   D1, $000C(A0)
                rts
loc_12E30:
                tst.b   $0038(A0)
                bne.s   loc_12E2A 
                bset    #$01, $0022(A0)
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
                rts
                
;=============================================================================== 
; Sub Routine Sonic_Angle
; [ Begin ]                         
;===============================================================================                   
Sonic_Angle: ; loc_12E4A:
                move.b  (Secondary_Angle).w, D2
                cmp.w   D0, D1
                ble.s   loc_12E58
                move.b  (Primary_Angle).w, D2
                move.w  D0, D1
loc_12E58:
                btst    #$00, D2
                bne.s   loc_12E74
                move.b  D2, D0
                sub.b   $0026(A0), D0
                bpl.s   loc_12E68
                neg.b   D0
loc_12E68:
                cmpi.b  #$20, D0
                bcc.s   loc_12E74
                move.b  D2, $0026(A0)
                rts
loc_12E74:
                move.b  $0026(A0), D2
                addi.b  #$20, D2
                andi.b  #$C0, D2
                move.b  D2, $0026(A0)
                rts    
;===============================================================================                
Sonic_WalkVertR: ; loc_12E86:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                neg.w   D0
                add.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     (Primary_Angle).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindWall                ; loc_1349E
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     (Secondary_Angle).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindWall                ; loc_1349E
                move.w  (A7)+, D0
                bsr     Sonic_Angle             ; loc_12E4A                
                tst.w   D1
                beq.s   loc_12EF4
                bpl.s   loc_12EF6
                cmpi.w  #$FFF2, D1
                blt.s   loc_12EF4                 
                add.w   D1, $0008(A0)
loc_12EF4:
                rts
loc_12EF6:
                move.b  $0012(A0), D0
                bpl.s   loc_12EFE
                neg.b   D0  
loc_12EFE:
                addq.b  #$04, D0
                cmpi.b  #$0E, D0
                bcs.s   loc_12F0A
                move.b  #$0E, D0
loc_12F0A:                
                cmp.b   D0, D1
                bgt.s   loc_12F14
loc_12F0E:
                add.w   D1, $0008(A0)
                rts
loc_12F14:
                tst.b   $0038(A0)
                bne.s   loc_12F0E
                bset    #$01, $0022(A0)
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
                rts
;===============================================================================                
Sonic_WalkCeiling: ; loc_12F2E:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D2
                eori.w  #$000F, D2
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     (Primary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                bsr     FindFloor               ; loc_132C4
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D2
                eori.w  #$000F, D2
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D3
                lea     (Secondary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                bsr     FindFloor               ; loc_132C4
                move.w  (A7)+, D0
                bsr     Sonic_Angle             ; loc_12E4A
                tst.w   D1
                beq.s   loc_12FA2
                bpl.s   loc_12FA4
                cmpi.w  #$FFF2, D1
                blt.s   loc_12FA2
                sub.w   D1, $000C(A0)
loc_12FA2:
                rts
loc_12FA4:
                move.b  $0010(A0), D0
                bpl.s   loc_12FAC
                neg.b   D0
loc_12FAC:
                addq.b  #$04, D0
                cmpi.b  #$0E, D0
                bcs.s   loc_12FB8
                move.b  #$0E, D0
loc_12FB8:
                cmp.b   D0, D1
                bgt.s   loc_12FC2
loc_12FBC:
                sub.w   D1, $000C(A0)
                rts
loc_12FC2:
                tst.b   $0038(A0)
                bne.s   loc_12FBC   
                bset    #$01, $0022(A0)
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
                rts
;===============================================================================                
Sonic_WalkVertL: ; loc_12FDC:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D3
                eori.w  #$000F, D3
                lea     (Primary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                bsr     FindWall                ; loc_1349E
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D3
                eori.w  #$000F, D3
                lea     (Secondary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                bsr     FindWall                ; loc_1349E
                move.w  (A7)+, D0
                bsr     Sonic_Angle             ; loc_12E4A
                tst.w   D1
                beq.s   loc_13050
                bpl.s   loc_13052
                cmpi.w  #$FFF2, D1
                blt.s   loc_13050
                sub.w   D1, $0008(A0)
loc_13050:
                rts
loc_13052:
                move.b  $0012(A0), D0
                bpl.s   loc_1305A
                neg.b   D0
loc_1305A:
                addq.b  #$04, D0
                cmpi.b  #$0E, D0
                bcs.s   loc_13066
                move.b  #$0E, D0
loc_13066:                
                cmp.b   D0, D1
                bgt.s   loc_13070
loc_1306A:
                sub.w   D1, $0008(A0)
                
                rts
loc_13070:
                tst.b   $0038(A0)
                bne.s   loc_1306A
                bset    #$01, $0022(A0)  
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
                rts
                
;=============================================================================== 
; Sub Routine Floor_ChkTile
; [ Begin ]                         
;===============================================================================                  
Floor_ChkTile: ; loc_1308A:
                move.w  D2, D0
                add.w   D0, D0
                andi.w  #$0F00, D0
                move.w  D3, D1
                lsr.w   #$03, D1
                move.w  D1, D4
                lsr.w   #$04, D1
                andi.w  #$007F, D1
                add.w   D1, D0
                moveq   #-1, D1
                clr.w   D1
                lea     ($FFFF8000).w, A1
                move.b  $00(A1, D0), D1
                add.w   D1, D1
                move.w  loc_130C4(PC, D1), D1
                move.w  D2, D0
                andi.w  #$0070, D0
                add.w   D0, D1
                andi.w  #$000E, D4
                add.w   D4, D1
                move.l  D1, A1
                rts
loc_130C4:
                dc.w    $0000, $0080, $0100, $0180, $0200, $0280, $0300, $0380
                dc.w    $0400, $0480, $0500, $0580, $0600, $0680, $0700, $0780
                dc.w    $0800, $0880, $0900, $0980, $0A00, $0A80, $0B00, $0B80
                dc.w    $0C00, $0C80, $0D00, $0D80, $0E00, $0E80, $0F00, $0F80
                dc.w    $1000, $1080, $1100, $1180, $1200, $1280, $1300, $1380
                dc.w    $1400, $1480, $1500, $1580, $1600, $1680, $1700, $1780
                dc.w    $1800, $1880, $1900, $1980, $1A00, $1A80, $1B00, $1B80
                dc.w    $1C00, $1C80, $1D00, $1D80, $1E00, $1E80, $1F00, $1F80
                dc.w    $2000, $2080, $2100, $2180, $2200, $2280, $2300, $2380
                dc.w    $2400, $2480, $2500, $2580, $2600, $2680, $2700, $2780
                dc.w    $2800, $2880, $2900, $2980, $2A00, $2A80, $2B00, $2B80
                dc.w    $2C00, $2C80, $2D00, $2D80, $2E00, $2E80, $2F00, $2F80
                dc.w    $3000, $3080, $3100, $3180, $3200, $3280, $3300, $3380
                dc.w    $3400, $3480, $3500, $3580, $3600, $3680, $3700, $3780
                dc.w    $3800, $3880, $3900, $3980, $3A00, $3A80, $3B00, $3B80
                dc.w    $3C00, $3C80, $3D00, $3D80, $3E00, $3E80, $3F00, $3F80
                dc.w    $4000, $4080, $4100, $4180, $4200, $4280, $4300, $4380
                dc.w    $4400, $4480, $4500, $4580, $4600, $4680, $4700, $4780
                dc.w    $4800, $4880, $4900, $4980, $4A00, $4A80, $4B00, $4B80
                dc.w    $4C00, $4C80, $4D00, $4D80, $4E00, $4E80, $4F00, $4F80
                dc.w    $5000, $5080, $5100, $5180, $5200, $5280, $5300, $5380
                dc.w    $5400, $5480, $5500, $5580, $5600, $5680, $5700, $5780
                dc.w    $5800, $5880, $5900, $5980, $5A00, $5A80, $5B00, $5B80
                dc.w    $5C00, $5C80, $5D00, $5D80, $5E00, $5E80, $5F00, $5F80
                dc.w    $6000, $6080, $6100, $6180, $6200, $6280, $6300, $6380
                dc.w    $6400, $6480, $6500, $6580, $6600, $6680, $6700, $6780
                dc.w    $6800, $6880, $6900, $6980, $6A00, $6A80, $6B00, $6B80
                dc.w    $6C00, $6C80, $6D00, $6D80, $6E00, $6E80, $6F00, $6F80
                dc.w    $7000, $7080, $7100, $7180, $7200, $7280, $7300, $7380
                dc.w    $7400, $7480, $7500, $7580, $7600, $7680, $7700, $7780
                dc.w    $7800, $7880, $7900, $7980, $7A00, $7A80, $7B00, $7B80
                dc.w    $7C00, $7C80, $7D00, $7D80, $7E00, $7E80, $7F00, $7F80
                
;=============================================================================== 
; Sub Routine FindFloor
; [ Begin ]                         
;===============================================================================                  
FindFloor: ; loc_132C4:                
                bsr     Floor_ChkTile           ; loc_1308A
                move.w  (A1), D0
                move.w  D0, D4
                andi.w  #$03FF, D0
                beq.s   loc_132D6
                btst    D5, D4
                bne.s   loc_132E4
loc_132D6:
                add.w   A3, D2
                bsr     FindFloor2              ; loc_1336A
                sub.w   A3, D2
                addi.w  #$0010, D1
                rts
loc_132E4:
                move.l  (Collision_addr).w, A2
                add.w   D0, D0
                move.w  $00(A2, D0), D0
                beq.s   loc_132D6
                lea     (AngleMap), A2          ; loc_2D1EA
                move.b  $00(A2, D0), (A4)
                lsl.w   #$04, D0
                move.w  D3, D1
                btst    #$0A, D4
                beq.s   loc_13308
                not.w   D1
                neg.b   (A4)
loc_13308:
                btst    #$0B, D4
                beq.s   loc_13318
                addi.b  #$40, (A4)
                neg.b   (A4)
                subi.b  #$40, (A4)                
loc_13318:
                andi.w  #$000F, D1
                add.w   D0, D1
                lea     (Colision_Array_1), A2  ; loc_2D2EA
                move.b  $00(A2, D1), D0
                ext.w   D0
                eor.w   D6, D4
                btst    #$0B, D4
                beq.s   loc_13334
                neg.w   D0
loc_13334:
                tst.w   D0
                beq.s   loc_132D6
                bmi.s   loc_13350
                cmpi.b  #$10, D0
                beq.s   loc_1335C
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                move.w  #$000F, D1
                sub.w   D0, D1
                rts
loc_13350:
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                bpl     loc_132D6
loc_1335C:                
                sub.w   A3, D2
                bsr     FindFloor2              ; loc_1336A
                add.w   A3, D2
                subi.w  #$0010, D1
                rts
;=============================================================================== 
; Sub Routine FindFloor
; [ End ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine FindFloor2
; [ Begin ]                         
;===============================================================================                 
FindFloor2: ; loc_1336A:
                bsr     Floor_ChkTile           ; loc_1308A
                move.w  (A1), D0
                move.w  D0, D4
                andi.w  #$03FF, D0
                beq.s   loc_1337C
                btst    D5, D4
                bne.s   loc_1338A
loc_1337C:
                move.w  #$000F, D1
                move.w  D2, D0
                andi.w  #$000F, D0
                sub.w   D0, D1
                rts
loc_1338A:
                move.l  (Collision_addr).w, A2
                add.w   D0, D0
                move.w  $00(A2, D0), D0
                beq.s   loc_1337C
                lea     (AngleMap), A2          ; loc_2D1EA
                move.b  $00(A2, D0), (A4)
                lsl.w   #$04, D0
                move.w  D3, D1
                btst    #$0A, D4
                beq.s   loc_133AE
                not.w   D1
                neg.b   (A4)
loc_133AE:
                btst    #$0B, D4
                beq.s   loc_133BE
                addi.b  #$40, (A4)
                neg.b   (A4)
                subi.b  #$40, (A4)
loc_133BE:
                andi.w  #$000F, D1
                add.w   D0, D1
                lea     (Colision_Array_1), A2  ; loc_2D2EA
                move.b  $00(A2, D1), D0                  
                ext.w   D0
                eor.w   D6, D4
                btst    #$0B, D4
                beq.s   loc_133DA
                neg.w   D0                 
loc_133DA:
                tst.w   D0
                beq.s   loc_1337C 
                bmi.s   loc_133F0
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                move.w  #$000F, D1
                sub.w   D0, D1
                rts
loc_133F0:
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                bpl     loc_1337C
                not.w  d1
                rts
loc_13400:
                bsr     Floor_ChkTile           ; loc_1308A
                move.w  (A1), D0
                move.w  D0, D4
                andi.w  #$03FF, D0
                beq.s   loc_13412
                btst    D5, D4
                bne.s   loc_13418
loc_13412:
                move.w  #$0010, D1
                rts
loc_13418:
                move.l  (Collision_addr).w, A2
                add.w   D0, D0
                move.w  $00(A2, D0), D0
                beq.s   loc_13412
                lea     (AngleMap), A2          ; loc_2D1EA
                move.b  $00(A2, D0), (A4)
                lsl.w   #$04, D0
                move.w  D3, D1
                btst    #$0A, D4
                beq.s   loc_1343C
                not.w   D1
                neg.b   (A4)
loc_1343C:
                btst    #$0B, D4
                beq.s   loc_1344C
                addi.b  #$40, (A4)
                neg.b   (A4)
                subi.b  #$40, (A4)
loc_1344C:
                andi.w  #$000F, D1
                add.w   D0, D1
                lea     (Colision_Array_1), A2  ; loc_2D2EA
                move.b  $00(A2, D1), D0
                ext.w   D0
                eor.w   D6, D4
                btst    #$0B, D4
                beq.s   loc_13468
                neg.w   D0
loc_13468:
                tst.w   D0
                beq.s   loc_13412
                bmi.s   loc_13484
                cmpi.b  #$10, D0
                beq.s   loc_13490
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                move.w  #$000F, D1
                sub.w   D0, D1
                rts
loc_13484:
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                bpl     loc_13412
loc_13490:
                sub.w   A3, D2
                bsr     FindFloor2              ; loc_1336A
                add.w   A3, D2
                subi.w  #$0010, D1
                rts
;=============================================================================== 
; Sub Routine FindFloor2
; [ End ]                         
;===============================================================================                 
            
;=============================================================================== 
; Sub Routine FindWall
; [ Begin ]                         
;===============================================================================                  
FindWall: ; loc_1349E:
                bsr     Floor_ChkTile           ; loc_1308A
                move.w  (A1), D0
                move.w  D0, D4
                andi.w  #$03FF, D0
                beq.s   loc_134B0
                btst    D5, D4
                bne.s   loc_134BE
loc_134B0:
                add.w   A3, D3
                bsr     FindWall2               ; loc_13544
                sub.w   A3, D3
                addi.w  #$0010, D1
                rts
loc_134BE:
                move.l  (Collision_addr).w, A2
                add.w   D0, D0
                move.w  $00(A2, D0), D0
                beq.s   loc_134B0
                lea     (AngleMap), A2          ; loc_2D1EA
                move.b  $00(A2, D0), (A4)
                lsl.w   #$04, D0
                move.w  D2, D1
                btst    #$0B, D4
                beq.s   loc_134EA
                not.w   D1
                addi.b  #$40, (A4)
                neg.b   (A4)
                subi.b  #$40, (A4)
loc_134EA:
                btst    #$0A, D4
                beq.s   loc_134F2
                neg.b   (A4)
loc_134F2:
                andi.w  #$000F, D1
                add.w   D0, D1
                lea     (Colision_Array_2), A2  ; loc_2E2EA
                move.b  $00(A2, D1), D0
                ext.w   D0
                eor.w   D6, D4
                btst    #$0A, D4
                beq.s   loc_1350E
                neg.w   D0
loc_1350E:
                tst.w   D0
                beq.s   loc_134B0
                bmi.s   loc_1352A
                cmpi.b  #$10, D0
                beq.s   loc_13536
                move.w  D3, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                move.w  #$000F, D1
                sub.w   D0, D1
                rts
loc_1352A:
                move.w  D3, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                bpl     loc_134B0
loc_13536:
                sub.w   A3, D3
                bsr     FindWall2               ; loc_13544
                add.w   A3, D3
                subi.w  #$0010, D1
                rts
;=============================================================================== 
; Sub Routine FindWall
; [ End ]                         
;===============================================================================    

;=============================================================================== 
; Sub Routine FindWall2
; [ Begin ]                         
;===============================================================================                 
FindWall2: ; loc_13544:
                bsr     Floor_ChkTile           ; loc_1308A
                move.w  (A1), D0
                move.w  D0, D4
                andi.w  #$03FF, D0
                beq.s   loc_13556
                btst    D5, D4
                bne.s   loc_13564
loc_13556:
                move.w  #$000F, D1
                move.w  D3, D0
                andi.w  #$000F, D0
                sub.w   D0, D1
                rts
loc_13564:
                move.l  (Collision_addr).w, A2
                add.w   D0, D0
                move.w  $00(A2, D0), D0
                beq.s   loc_13556
                lea     (AngleMap), A2          ; loc_2D1EA
                move.b  $00(A2, D0), (A4)
                lsl.w   #$04, D0
                move.w  D2, D1
                btst    #$0B, D4
                beq.s   loc_13590
                not.w   D1
                addi.b  #$40, (A4)
                neg.b   (A4)
                subi.b  #$40, (A4)
loc_13590:
                btst    #$0A, D4
                beq.s   loc_13598
                neg.b   (A4)
loc_13598:
                andi.w  #$000F, D1
                add.w   D0, D1
                lea     (Colision_Array_2), A2  ; loc_2E2EA
                move.b  $00(A2, D1), D0
                ext.w   D0
                eor.w   D6, D4
                btst    #$0A, D4
                beq.s   loc_135B4
                neg.w   D0
loc_135B4:                
                tst.w   D0
                beq.s   loc_13556
                bmi.s   loc_135CA
                move.w  D3, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                move.w  #$000F, D1
                sub.w   D0, D1
                rts
loc_135CA:
                move.w  D3, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                bpl     loc_13556
                not.w  d1
                rts
;=============================================================================== 
; Sub Routine FindWall2
; [ End ]                         
;===============================================================================  
                
loc_135DA:
                rts 
;===============================================================================                
; loc_135DC:
                lea     (Colision_Array_1), A1  ; loc_2D2EA
                lea     (Colision_Array_1), A2  ; loc_2D2EA
                move.w  #$00FF, D3
loc_135EC:                
                moveq   #$10, D5
                move.w  #$000F, D2
loc_135F2:                
                moveq   #$00, D4
                move.w  #$000F, D1
loc_135F8:                
                move.w  (A1)+, D0
                lsr.l   D5, D0
                addx.w  D4, D4
                dbra    D1, loc_135F8
                move.w  D4, (A2)+
                suba.w  #$0020, A1
                subq.w  #$01, D5
                dbra    D2, loc_135F2
                adda.w  #$0020, A1
                dbra    D3, loc_135EC
                lea     (Colision_Array_1), A1  ; loc_2D2EA
                lea     (Colision_Array_2), A2  ; loc_2E2EA
                bsr.s   loc_13630
                lea     (Colision_Array_1), A1  ; loc_2D2EA
                lea     (Colision_Array_1), A2  ; loc_2D2EA
loc_13630:                                
                move.w  #$0FFF, D3
loc_13634:                
                moveq   #$00, D2
                move.w  #$000F, D1
                move.w  (A1)+, D0
                beq.s   loc_13662
                bmi.s   loc_1364C
loc_13640:                
                lsr.w   #$01, D0
                bcc.s   loc_13646
                addq.b  #$01, D2
loc_13646:
                dbra    D1, loc_13640
                bra.s   loc_13664
loc_1364C:
                cmpi.w  #$FFFF, D0
                beq.s   loc_1365E
loc_13652:                
                lsl.w   #$01, D0
                bcc.s   loc_13658
                subq.b  #$01, D2
loc_13658:
                dbra    D1, loc_13652
                bra.s   loc_13664
loc_1365E:
                move.w  #$0010, D0
loc_13662:
                move.w  D0, D2
loc_13664:
                move.b  D2, (A2)+
                dbra    D3, loc_13634
                rts
;=============================================================================== 
; Sub Routine Sonic_WalkSpeed
; [ Begin ]                         
;===============================================================================                                  
Sonic_WalkSpeed: ; loc_1366C:
                move.l  #$FFFFD000, (Collision_addr).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   loc_13684
                move.l  #$FFFFD600, (Collision_addr).w
loc_13684:
                move.b  $003F(A0), D5
                move.l  $0008(A0), D3
                move.l  $000C(A0), D2
                move.w  $0010(A0), D1
                ext.l   D1
                asl.l   #$08, D1
                add.l   D1, D3
                move.w  $0012(A0), D1
                ext.l   D1
                asl.l   #$08, D1
                add.l   D1, D2
                swap.w  D2
                swap.w  D3
                move.b  D0, (Primary_Angle).w
                move.b  D0, (Secondary_Angle).w
                move.b  D0, D1
                addi.b  #$20, D0
                bpl.s   loc_136C4
                move.b  D1, D0
                bpl.s   loc_136BE
                subq.b  #$01, D0
loc_136BE:
                addi.b  #$20, D0
                bra.s   loc_136CE
loc_136C4:
                move.b  D1, D0
                bpl.s   loc_136CA
                addq.b  #$01, D0
loc_136CA:
                addi.b  #$1F, D0
loc_136CE:
                andi.b  #$C0, D0
                beq     loc_137CE
                cmpi.b  #$80, D0
                beq     loc_13A3C
                andi.b  #$38, D1
                bne.s   loc_136E6
                addq.w  #$08, D2
loc_136E6:
                cmpi.b  #$40, D0
                beq     loc_13B04
                bra     loc_13982                    
loc_136F2:
                move.l  #$FFFFD000, (Collision_addr).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   loc_1370A
                move.l  #$FFFFD600, (Collision_addr).w
loc_1370A:
                move.b  $003F(A0), D5
                move.b  D0, (Primary_Angle).w
                move.b  D0, (Secondary_Angle).w
                addi.b  #$20, D0
                andi.b  #$C0, D0
                cmpi.b  #$40, D0
                beq     loc_13A94
                cmpi.b  #$80, D0
                beq     Sonic_DontRunOnWalls    ; loc_139CC
                cmpi.b  #$C0, D0
                beq     loc_1391A
loc_13736:                
                move.l  #$FFFFD000, (Collision_addr).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   loc_1374E
                move.l  #$FFFFD600, (Collision_addr).w
loc_1374E:
                move.b  $003E(A0), D5
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     (Primary_Angle).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindFloor               ; loc_132C4
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D3
                lea     (Secondary_Angle).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindFloor               ; loc_132C4
                move.w  (A7)+, D0
                move.b  #$00, D2
loc_137AE:                
                move.b  (Secondary_Angle).w, D3
                cmp.w   D0, D1
                ble.s   loc_137BC
                move.b  (Primary_Angle).w, D3
                exg.l   D1, D0
loc_137BC:
                btst    #$00, D3
                beq.s   loc_137C4
                move.b  D2, D3
loc_137C4:
                rts
; loc_137C6:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3                
loc_137CE:
                addi.w  #$000A, D2
                lea     (Primary_Angle).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindFloor               ; loc_132C4
                move.b  #$00, D2
loc_137E6:                
                move.b  (Primary_Angle).w, D3
                btst    #$00, D3
                beq.s   loc_137F2
                move.b  D2, D3
loc_137F2:
                rts   
                
;=============================================================================== 
; Sub Routine Sonic_HitFloor
; [ Begin ]                         
;===============================================================================                               
Sonic_HitFloor: ; loc_137F4:
                move.w  $0008(A0), D3
                move.w  $000C(A0), D2
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.l  #$FFFFD000, (Collision_addr).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   loc_1381E
                move.l  #$FFFFD600, (Collision_addr).w
loc_1381E:
                lea     (Primary_Angle).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                move.b  $003E(A0), D5
                bsr     FindFloor               ; loc_132C4
                move.b  (Primary_Angle).w, D3
                btst    #$00, D3
                beq.s   loc_13844
                move.b  #$00, D3
loc_13844:
                rts  
;=============================================================================== 
; Sub Routine Sonic_HitFloor
; [ End ]                         
;===============================================================================                  

;=============================================================================== 
; Sub Routine Sonic_HitFloor2
; [ Begin ]                         
;===============================================================================                 
Sonic_HitFloor2: ; loc_13846:
                move.w  $0008(A1), D3
                move.w  $000C(A1), D2
                moveq   #$00, D0
                move.b  $0016(A1), D0
                ext.w   D0
                add.w   D0, D2
                move.l  #$FFFFD000, (Collision_addr).w
                cmpi.b  #$0C, $003E(A1)
                beq.s   loc_13870
                move.l  #$FFFFD600, (Collision_addr).w
loc_13870:
                lea     (Primary_Angle).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                move.b  $003E(A1), D5
                bsr     FindFloor               ; loc_132C4
                move.b  (Primary_Angle).w, D3
                btst    #$00, D3
                beq.s   loc_13896
                move.b  #$00, D3
loc_13896:
                rts
;=============================================================================== 
; Sub Routine Sonic_HitFloor2
; [ End ]                         
;===============================================================================   

;=============================================================================== 
; Sub Routine ObjHitFloor
; [ Begin ]                         
;===============================================================================                   
ObjHitFloor: ; loc_13898:
                move.w  $0008(A0), D3
ObjHitFloor2: ; loc_1389C:               
                move.w  $000C(A0), D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                lea     (Primary_Angle).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                moveq   #$0C, D5
                bsr     FindFloor               ; loc_132C4
                move.b  (Primary_Angle).w, D3
                btst    #$00, D3
                beq.s   loc_138CC
                move.b  #$00, D3
loc_138CC:
                rts 
;=============================================================================== 
; Sub Routine ObjHitFloor
; [ End ]                         
;===============================================================================  
                 
loc_138CE:
                move.w  $0008(A1), D3
                move.w  $000C(A1), D2
                move.b  $0016(A1), D0
                ext.w   D0
                add.w   D0, D2
                lea     (Primary_Angle).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                moveq   #$0C, D5
                bra     FindFloor               ; loc_132C4
loc_138F4:
                move.w  $0008(A0), D3
                move.w  $000C(A0), D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                lea     (Primary_Angle).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                moveq   #$0C, D5
                bra     loc_13400
;===============================================================================                
loc_1391A:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     (Primary_Angle).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindWall                ; loc_1349E
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     (Secondary_Angle).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindWall                ; loc_1349E
                move.w  (A7)+, D0
                move.b  #$C0, D2
                bra     loc_137AE 
;===============================================================================                               
loc_1397A:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3                
loc_13982:
                addi.w  #$000A, D3
                lea     (Primary_Angle).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindWall                ; loc_1349E
                move.b  #$C0, D2
                bra     loc_137E6 
                  
;=============================================================================== 
; Sub Routine ObjHitWallRight
; [ Begin ]                         
;===============================================================================                  
ObjHitWallRight: ; loc_1399E:
                add.w   $0008(A0), D3
                move.w  $000C(A0), D2
                lea     (Primary_Angle).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                moveq   #$0D, D5
                bsr     FindWall                ; loc_1349E
                move.b  (Primary_Angle).w, D3
                btst    #$00, D3
                beq.s   loc_139CA
                move.b  #$C0, D3
loc_139CA:
                rts
;=============================================================================== 
; Sub Routine ObjHitWallRight
; [ End ]                         
;===============================================================================                  
                
;=============================================================================== 
; Sub Routine Sonic_DontRunOnWalls
; [ Begin ]                         
;===============================================================================                  
Sonic_DontRunOnWalls: ; loc_139CC:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D2
                eori.w  #$000F, D2
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     (Primary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                bsr     FindFloor               ; loc_132C4
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D2
                eori.w  #$000F, D2
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D3
                lea     (Secondary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                bsr     FindFloor               ; loc_132C4
                move.w  (A7)+, D0
                move.b  #$80, D2
                bra     loc_137AE
;=============================================================================== 
; Sub Routine Sonic_DontRunOnWalls
; [ End ]                         
;===============================================================================               
              
;loc_13A34:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
loc_13A3C:
                subi.w  #$000A, D2
                eori.w  #$000F, D2
                lea     (Primary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                bsr     FindFloor               ; loc_132C4
                move.b  #$80, D2
                bra     loc_137E6 
;===============================================================================                
; ObjHitCeiling ; loc_13A5C:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D2
                eori.w  #$000F, D2
                lea     (Primary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                moveq   #$0D, D5
                bsr     FindFloor               ; loc_132C4
                move.b  (Primary_Angle).w, D3
                btst    #$00, D3
                beq.s   loc_13A92
                move.b  #$80, D3
loc_13A92:
                rts
;===============================================================================                
loc_13A94:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D3
                eori.w  #$000F, D3
                lea     (Primary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                bsr     FindWall                ; loc_1349E
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D3
                eori.w  #$000F, D3
                lea     (Secondary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                bsr     FindWall                ; loc_1349E
                move.w  (A7)+, D0
                move.b  #$40, D2
                bra     loc_137AE   
                
;=============================================================================== 
; Sub Routine Sonic_HitWall
; [ Begin ]                         
;===============================================================================                   
Sonic_HitWall: ; loc_13AFC:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3                
loc_13B04:
                subi.w  #$000A, D3
                eori.w  #$000F, D3
                lea     (Primary_Angle).w, A4
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                bsr     FindWall                ; loc_1349E
                move.b  #$40, D2
                bra     loc_137E6    
;===============================================================================                                             
ObjHitWallLeft: ; loc_13B24:
                add.w   $0008(A0), D3
                move.w  $000C(A0), D2
                lea     (Primary_Angle).w, A4
                move.b  #$00, (A4)
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                moveq   #$0D, D5
                bsr     FindWall                ; loc_1349E
                move.b  (Primary_Angle).w, D3
                btst    #$00, D3
                beq.s   loc_13B50
                move.b  #$40, D3
loc_13B50:
                rts
                nop                             ; Filler
;=============================================================================== 
; Object 0x79 - Lamp Post
; [ Begin ]
;===============================================================================                      
Obj_0x79_Lamp_Post: ; loc_13B54:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_13B68(PC, D0), D1
                jsr     loc_13B68(PC, D1)
                jmp     MarkObjGone             ; (loc_D2A0)
loc_13B68:
                dc.w    loc_13B6E-loc_13B68
                dc.w    loc_13BD0-loc_13B68
                dc.w    loc_13C58-loc_13B68
loc_13B6E:
                addq.b  #$02, $0024(A0)
                move.l  #Lamp_Post_Mappings, $0004(A0) ; loc_13D8E
                move.w  #$047C, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$08, $0019(A0)
                move.b  #$05, $0018(A0)
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                bclr    #$07, $02(A2, D0)
                btst    #$00, $02(A2, D0)
                bne.s   loc_13BC2
                move.b  ($FFFFFE30).w, D1
                andi.b  #$7F, D1
                move.b  $0028(A0), D2
                andi.b  #$7F, D2
                cmp.b   D2, D1
                bcs.s   loc_13BD0
loc_13BC2:
                bset    #$00, $02(A2, D0)
                move.b  #$04, $0024(A0)
                rts
loc_13BD0:
                tst.w   (Debug_placement_mode).w
                bne     loc_13C56
                tst.b   ($FFFFB02A).w
                bmi     loc_13C56
                move.b  ($FFFFFE30).w, D1
                andi.b  #$7F, D1
                move.b  $0028(A0), D2
                andi.b  #$7F, D2
                cmp.b   D2, D1
                bcs.s   loc_13C0E
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                bset    #$00, $02(A2, D0)
                move.b  #$04, $0024(A0)
                bra     loc_13C56
loc_13C0E:
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                addi.w  #$0008, D0
                cmpi.w  #$0010, D0
                bcc     loc_13C56
                move.w  ($FFFFB00C).w, D0
                sub.w   $000C(A0), D0
                addi.w  #$0040, D0
                cmpi.w  #$0068, D0
                bcc.s   loc_13C56
                move.w  #$00A1, D0
                jsr     (PlaySound)              ; loc_14C6
                addq.b  #$02, $0024(A0)
                bsr     Lamp_Post_Save_Info     ; loc_13C6A
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                bset    #$00, $02(A2, D0)
loc_13C56:
                rts
loc_13C58:
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$02, D0
                lsr.b   #$01, D0
                addq.b  #$01, D0
                move.b  D0, $001A(A0)
                rts
Lamp_Post_Save_Info: ; loc_13C6A:
                move.b  $0028(A0), ($FFFFFE30).w
                move.b  ($FFFFFE30).w, ($FFFFFE31).w
                move.w  $0008(A0), ($FFFFFE32).w
                move.w  $000C(A0), ($FFFFFE34).w
                move.w  ($FFFFFE20).w, ($FFFFFE36).w
                move.b  ($FFFFFE1B).w, ($FFFFFE54).w
                move.l  ($FFFFFE22).w, ($FFFFFE38).w
                move.b  ($FFFFEEDF).w, ($FFFFFE3C).w
                move.w  ($FFFFEECE).w, ($FFFFFE3E).w
                move.w  ($FFFFEE00).w, ($FFFFFE40).w
                move.w  ($FFFFEE04).w, ($FFFFFE42).w
                move.w  ($FFFFEE08).w, ($FFFFFE44).w
                move.w  ($FFFFEE0C).w, ($FFFFFE46).w
                move.w  ($FFFFEE10).w, ($FFFFFE48).w
                move.w  ($FFFFEE14).w, ($FFFFFE4A).w
                move.w  ($FFFFEE18).w, ($FFFFFE4C).w
                move.w  ($FFFFEE1C).w, ($FFFFFE4E).w
                move.w  (Water_Level_2).w, ($FFFFFE50).w
                move.b  (Water_routine).w, ($FFFFFE52).w
                move.b  (Water_fullscreen_flag).w, ($FFFFFE53).w
                rts
Lamp_Post_Load_Info: ; loc_13CE4:
                move.b  ($FFFFFE31).w, ($FFFFFE30).w
                move.w  ($FFFFFE32).w, ($FFFFB008).w
                move.w  ($FFFFFE34).w, ($FFFFB00C).w
                move.w  ($FFFFFE36).w, ($FFFFFE20).w
                move.b  ($FFFFFE54).w, ($FFFFFE1B).w
                clr.w   ($FFFFFE20).w
                clr.b   ($FFFFFE1B).w
                move.l  ($FFFFFE38).w, ($FFFFFE22).w
                move.b  #$3B, ($FFFFFE25).w
                subq.b  #$01, ($FFFFFE24).w
                move.b  ($FFFFFE3C).w, ($FFFFEEDF).w
                move.b  ($FFFFFE52).w, (Water_routine).w
                move.w  ($FFFFFE3E).w, ($FFFFEECE).w
                move.w  ($FFFFFE3E).w, ($FFFFEEC6).w
                move.w  ($FFFFFE40).w, ($FFFFEE00).w
                move.w  ($FFFFFE42).w, ($FFFFEE04).w
                move.w  ($FFFFFE44).w, ($FFFFEE08).w
                move.w  ($FFFFFE46).w, ($FFFFEE0C).w
                move.w  ($FFFFFE48).w, ($FFFFEE10).w
                move.w  ($FFFFFE4A).w, ($FFFFEE14).w
                move.w  ($FFFFFE4C).w, ($FFFFEE18).w
                move.w  ($FFFFFE4E).w, ($FFFFEE1C).w
                tst.b   (Water_flag).w
                beq.s   loc_13D7A
                move.w  ($FFFFFE50).w, (Water_Level_2).w
                move.b  ($FFFFFE52).w, (Water_routine).w
                move.b  ($FFFFFE53).w, (Water_fullscreen_flag).w
loc_13D7A:
                tst.b   ($FFFFFE30).w
                bpl.s   loc_13D8C
                move.w  ($FFFFFE32).w, D0
                subi.w  #$00A0, D0
                move.w  D0, ($FFFFEEC8).w
loc_13D8C:
                rts
Lamp_Post_Mappings:
loc_13D8E:
                dc.w    loc_13D94-loc_13D8E
                dc.w    loc_13DB6-loc_13D8E
                dc.w    loc_13DD8-loc_13D8E
loc_13D94:
                dc.w    $0004
                dc.l    $E8012000, $2000FFF8, $E8012800, $28000000
                dc.l    $F8030006, $0003FFF8, $F8030806, $08030000
loc_13DB6:
                dc.w    $0004
                dc.l    $E8010002, $0001FFF8, $E8010802, $08010000
                dc.l    $F8030006, $0003FFF8, $F8030806, $08030000
loc_13DD8:
                dc.w    $0004
                dc.l    $E8012004, $2002FFF8, $E8012804, $28020000
                dc.l    $F8030006, $0003FFF8, $F8030806, $08030000   
;=============================================================================== 
; Object 0x79 - Lamp Post
; [ End ]
;===============================================================================                    
                nop                             ; Filler             
;=============================================================================== 
; Object 0x7D - Hidden Bonus at end of levels - Sonic 1 Leftover
; [ Begin ]
;===============================================================================                    
Obj_0x7D_Hidden_Bonus: ; loc_13DFC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_13E0A(PC, D0), D1
                jmp     loc_13E0A(PC, D1)
loc_13E0A:
                dc.w    loc_13E0E-loc_13E0A
                dc.w    loc_13EB2-loc_13E0A
loc_13E0E:
                moveq   #$10, D2
                move.w  D2, D3
                add.w   D3, D3
                lea     ($FFFFB000).w, A1
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D2, D0
                cmp.w   D3, D0
                bcc.s   loc_13E90
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                add.w   D2, D1
                cmp.w   D3, D1
                bcc.s   loc_13E90
                tst.w   (Debug_placement_mode).w
                bne.s   loc_13E90
                tst.b   ($FFFFF7CD).w
                bne.s   loc_13E90
                addq.b  #$02, $0024(A0)
                move.l  #Hidden_Bonus_Mappings, $0004(A0) ; loc_13ED6
                move.w  #$84B6, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  #$00, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  $0028(A0), $001A(A0)
                move.w  #$0077, $0030(A0)
                move.w  #$00C9, D0
                jsr     (PlaySound)              ; loc_14C6
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.w  loc_13EAA(PC, D0), D0
                jsr     AddPoints               ; (loc_22FD0)
loc_13E90:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_05       ; loc_13EA4
                rts
J_DeleteObject_05: ; loc_13EA4:
                jmp     DeleteObject            ; (loc_D3B4)                
loc_13EAA:
                dc.w    $0000, $03E8, $0064, $0001  ; Bonus Points
loc_13EB2:
                subq.w  #$01, $0030(A0)
                bmi.s   J_DeleteObject_06       ; loc_13ED0
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_06       ; loc_13ED0
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_06: ; loc_13ED0:
                jmp     DeleteObject            ; (loc_D3B4)
Hidden_Bonus_Mappings:                
loc_13ED6:
                dc.w    loc_13EDE-loc_13ED6
                dc.w    loc_13EE0-loc_13ED6
                dc.w    loc_13EEA-loc_13ED6
                dc.w    loc_13EF4-loc_13ED6
loc_13EDE:
                dc.w    $0000
loc_13EE0:
                dc.w    $0001
                dc.l    $F40E0000, $0000FFF0
loc_13EEA:
                dc.w    $0001
                dc.l    $F40E000C, $0006FFF0
loc_13EF4:
                dc.w    $0001
                dc.l    $F40E0018, $000CFFF0   
;=============================================================================== 
; Object 0x7D - Hidden Bonus at end of levels - Sonic 1 Leftover
; [ End ]
;===============================================================================      
                nop                             ; Filler  
;=============================================================================== 
; Object ??? - Unknow Object 0x013F00
; [ Begin ]
;===============================================================================                  
S1_Obj_0x47: ; Unknow_Obj_0x013F00: ; loc_13F00:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_13F0E(PC, D0), D1
                jmp     loc_13F0E(PC, D1)
loc_13F0E:
                dc.w    loc_13F12-loc_13F0E
                dc.w    loc_13F40-loc_13F0E
loc_13F12:
                addq.b  #$02, $0024(A0)
                move.l  #S1_Obj_0x47_Mappings, $0004(A0) ; loc_1401E
                move.w  #$0380, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  #$D7, $0020(A0)
loc_13F40:
                move.b  $0021(A0), D0
                beq     loc_14002
                lea     ($FFFFB000).w, A1
                bclr    #$00, $0021(A0)
                beq.s   loc_13F56
                bsr.s   loc_13F6C
loc_13F56:
                lea     ($FFFFB040).w, A1
                bclr    #$01, $0021(A0)
                beq.s   loc_13F64
                bsr.s   loc_13F6C
loc_13F64:
                clr.b   $0021(A0)
                bra     loc_14002
loc_13F6C:
                move.w  $0008(A0), D1
                move.w  $000C(A0), D2
                sub.w   $0008(A1), D1
                sub.w   $000C(A1), D2
                jsr     CalcAngle               ; loc_34A2
                jsr     CalcSine                ; loc_320A
                muls.w  #$F900, D1
                asr.l   #$08, D1
                move.w  D1, $0010(A1)
                muls.w  #$F900, D0
                asr.l   #$08, D0
                move.w  D0, $0012(A1)
                bset    #$01, $0022(A1)
                bclr    #$04, $0022(A1)
                bclr    #$05, $0022(A1)
                clr.b   $003C(A1)
                move.b  #$01, $001C(A0)
                move.w  #$00B4, D0
                jsr     PlaySound                ; (loc_14C6)
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_13FDA
                cmpi.b  #$8A, $02(A2, D0)
                bcc.s   loc_14000
                addq.b  #$01, $02(A2, D0)
loc_13FDA:
                moveq   #$01, D0
                jsr     AddPoints               ; (loc_22FD0)
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_14000
                move.b  #$29, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  #$04, $001A(A1)
loc_14000:
                rts
loc_14002:
                lea     (loc_14010), A1
                bsr     AnimateSprite           ; loc_D412
                bra     MarkObjGone             ; loc_D2A0              
loc_14010:
                dc.w    loc_14014-loc_14010
                dc.w    loc_14017-loc_14010
loc_14014:
                dc.b    $0F, $00, $FF
loc_14017:
                dc.b    $03, $01, $02, $01, $02, $FD, $00
S1_Obj_0x47_Mappings: ; Unknow_Obj_0x013F00_Mappings:   loc_1401E:
                dc.w    loc_14024-S1_Obj_0x47_Mappings
                dc.w    loc_14036-S1_Obj_0x47_Mappings
                dc.w    loc_14048-S1_Obj_0x47_Mappings
loc_14024:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F0070800, $08000000
loc_14036:
                dc.w    $0002
                dc.l    $F4060008, $0004FFF4, $F4020808, $08040004
loc_14048:
                dc.w    $0002
                dc.l    $F007000E, $0007FFF0, $F007080E, $08070000                                  
;=============================================================================== 
; Object ??? - Unknow Object 0x013F00
; [ Begin ]
;===============================================================================          
                nop                             ; Filler
;=============================================================================== 
; Object ??? - Unknow Object 0x01405C
; [ Begin ]
;===============================================================================                  
S1_Obj_0x64: ; Unknow_Obj_0x01405C: ; loc_1405C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1406A(PC, D0), D1
                jmp     loc_1406A(PC, D1)
loc_1406A:
                dc.w    loc_14076-loc_1406A
                dc.w    loc_140D8-loc_1406A
                dc.w    loc_140F2-loc_1406A
                dc.w    loc_141AC-loc_1406A
                dc.w    loc_141CA-loc_1406A
                dc.w    loc_141CE-loc_1406A
loc_14076:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x0A_Bubbles_Mappings, $0004(A0) ; loc_14374
                move.w  #$8500, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$84, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  $0028(A0), D0
                bpl.s   loc_140BE
                addq.b  #$08, $0024(A0)
                andi.w  #$007F, D0
                move.b  D0, $0032(A0)
                move.b  D0, $0033(A0)
                move.b  #$06, $001C(A0)
                bra     loc_141CE
loc_140BE:
                move.b  D0, $001C(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  #$FF78, $0012(A0)
                jsr     PseudoRandomNumber      ; loc_31E4
                move.b  D0, $0026(A0)
loc_140D8:
                lea     (loc_14348), A1
                jsr     AnimateSprite           ; (loc_D412)
                cmpi.b  #$06, $001A(A0)
                bne.s   loc_140F2
                move.b  #$01, $002E(A0)
loc_140F2:
                move.w  (Water_Level_1).w, D0
                cmp.w   $000C(A0), D0
                bcs.s   loc_1410A
loc_140FC                
                move.b  #$06, $0024(A0)
                addq.b  #$03, $001C(A0)
                bra     loc_141AC
loc_1410A:
                move.b  $0026(A0), D0
                addq.b  #$01, $0026(A0)
                andi.w  #$007F, D0
                lea     (loc_1220C), A1
                move.b  $00(A1, D0), D0
                ext.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                tst.b   $002E(A0)
                beq.s   loc_14196
                bsr     loc_1430A
                beq.s   loc_14196
                bsr     ResumeMusic             ; loc_124FE
                move.w  #$00AD, D0
                jsr     PlaySound                ; (loc_14C6)
                lea     ($FFFFB000).w, A1
                clr.w   $0010(A1)
                clr.w   $0012(A1)
                clr.w   $0014(A1)
                move.b  #$15, $001C(A1)
                move.w  #$0023, $002E(A1)
                move.b  #$00, $003C(A1)
                bclr    #$05, $0022(A1)
                bclr    #$04, $0022(A1)
                btst    #$02, $0022(A1)
                beq     loc_140FC
                bclr    #$02, $0022(A1)
                move.b  #$13, $0016(A1)
                move.b  #$09, $0017(A1)
                subq.w  #$05, $000C(A1)
                bra     loc_140FC
loc_14196:
                bsr     SpeedToPos              ; loc_D27A
                tst.b   $0001(A0)
                bpl.s   J_DeleteObject_07       ; loc_141A6
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_07: ; loc_141A6:
                jmp     DeleteObject            ; (loc_D3B4)
loc_141AC:
                lea     (loc_14348), A1
                jsr     AnimateSprite           ; (loc_D412)
                tst.b   $0001(A0)
                bpl.s   J_DeleteObject_08       ; loc_141C4
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_08: ; loc_141C4:
                jmp     DeleteObject            ; (loc_D3B4)
loc_141CA:
                bra     DeleteObject            ; loc_D3B4
loc_141CE:
                tst.w   $0036(A0)
                bne.s   loc_14230
                move.w  (Water_Level_1).w, D0
                cmp.w   $000C(A0), D0
                bcc     loc_142D6
                tst.b   $0001(A0)
                bpl     loc_142D6
                subq.w  #$01, $0038(A0)
                bpl     loc_142CA
                move.w  #$0001, $0036(A0)
loc_141F6:                
                jsr     PseudoRandomNumber      ; loc_31E4
                move.w  D0, D1
                andi.w  #$0007, D0
                cmpi.w  #$0006, D0
                bcc.s   loc_141F6
                move.b  D0, $0034(A0)
                andi.w  #$000C, D1
                lea     (loc_142F8), A1
                adda.w  D1, A1
                move.l  A1, $003C(A0)
                subq.b  #$01, $0032(A0)
                bpl.s   loc_1422E
                move.b  $0033(A0), $0032(A0)
                bset    #$07, $0036(A0)
loc_1422E:
                bra.s   loc_14238
loc_14230:
                subq.w  #$01, $0038(A0)
                bpl     loc_142CA
loc_14238:
                jsr     PseudoRandomNumber      ; loc_31E4
                andi.w  #$001F, D0
                move.w  D0, $0038(A0)
                bsr     SingleObjLoad        ; loc_E772
                bne.s   loc_142AE
                move.w  $0008(A0), $0008(A1)
                jsr     PseudoRandomNumber      ; loc_31E4
                andi.w  #$000F, D0
                subq.w  #$08, D0
                add.w   D0, $0008(A1)
                move.w  $000C(A0), $000C(A1)
                moveq   #$00, D0
                move.b  $0034(A0), D0
                move.l  $003C(A0), A2
                move.b  $00(A2, D0), $0028(A1)
                btst    #$07, $0036(A0)
                beq.s   loc_142AE
                jsr     PseudoRandomNumber      ; loc_31E4
                andi.w  #$0003, D0
                bne.s   loc_1429A
                bset    #$06, $0036(A0)
                bne.s   loc_142AE
                move.b  #$02, $0028(A1)
loc_1429A:
                tst.b   $0034(A0)
                bne.s   loc_142AE
                bset    #$06, $0036(A0)
                bne.s   loc_142AE
                move.b  #$02, $0028(A1)
loc_142AE:
                subq.b  #$01, $0034(A0)
                bpl.s   loc_142CA
                jsr     PseudoRandomNumber      ; loc_31E4
                andi.w  #$007F, D0
                addi.w  #$0080, D0
                add.w   D0, $0038(A0)
                clr.w   $0036(A0)
loc_142CA:
                lea     (loc_14348), A1
                jsr     AnimateSprite           ; (loc_D412)
loc_142D6:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; loc_D3B4
                move.w  (Water_Level_1).w, D0
                cmp.w   $000C(A0), D0
                bcs     DisplaySprite           ; loc_D3C2
                rts   
loc_142F8:
                dc.w    $0001, $0000, $0000, $0100, $0000, $0001, $0001, $0000
                dc.w    $0100              
loc_1430A:
                tst.b   ($FFFFB02A).w
                bmi.s   loc_14344
                lea     ($FFFFB000).w, A1
                move.w  $0008(A1), D0
                move.w  $0008(A0), D1
                subi.w  #$0010, D1
                cmp.w   D0, D1
                bcc.s   loc_14344
                addi.w  #$0020, D1
                cmp.w   D0, D1
                bcs.s   loc_14344
                move.w  $000C(A1), D0
                move.w  $000C(A0), D1
                cmp.w   D0, D1
                bcc.s   loc_14344
                addi.w  #$0010, D1
                cmp.w   D0, D1
                bcs.s   loc_14344
                moveq   #$01, D0
                rts
loc_14344:
                moveq   #$00, D0
                rts                
loc_14348:
                dc.w    loc_14356-loc_14348
                dc.w    loc_1435B-loc_14348
                dc.w    loc_14361-loc_14348
                dc.w    loc_14368-loc_14348
                dc.w    loc_14368-loc_14348
                dc.w    loc_1436A-loc_14348
                dc.w    loc_1436F-loc_14348
loc_14356:
                dc.b    $0E, $00, $01, $02, $FC
loc_1435B:
                dc.b    $0E, $01, $02, $03, $04, $FC
loc_14361:
                dc.b    $0E, $02, $03, $04, $05, $06, $FC
loc_14368:
                dc.b    $04, $FC
loc_1436A:
                dc.b    $04, $06, $07, $08, $FC
loc_1436F:
                dc.b    $0F, $13, $14, $15, $FF
Obj_0x0A_Bubbles_Mappings: ; loc_14374:
                dc.w    loc_143A2-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_143AC-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_143B6-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_143C0-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_143CA-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_143D4-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_143DE-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_143E8-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_1440A-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_1442C-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_14436-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_14440-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_1444A-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_14454-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_1445E-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_14468-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_14472-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_1447C-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_14486-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_14490-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_1449A-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_144A4-Obj_0x0A_Bubbles_Mappings
                dc.w    loc_144AE-Obj_0x0A_Bubbles_Mappings
loc_143A2:
                dc.w    $0001
                dc.l    $FC000000, $0000FFFC
loc_143AC:
                dc.w    $0001
                dc.l    $FC000001, $0000FFFC
loc_143B6:
                dc.w    $0001
                dc.l    $FC000002, $0001FFFC
loc_143C0:
                dc.w    $0001
                dc.l    $F8050003, $0001FFF8
loc_143CA:
                dc.w    $0001
                dc.l    $F8050007, $0003FFF8
loc_143D4:
                dc.w    $0001
                dc.l    $F40A000B, $0005FFF4
loc_143DE:
                dc.w    $0001
                dc.l    $F00F0014, $000AFFF0
loc_143E8:
                dc.w    $0004
                dc.l    $F0050024, $0012FFF0, $F0050824, $08120000
                dc.l    $00051024, $1012FFF0, $00051824, $18120000
loc_1440A:
                dc.w    $0004
                dc.l    $F0050028, $0014FFF0, $F0050828, $08140000
                dc.l    $00051028, $1014FFF0, $00051828, $18140000
loc_1442C:
                dc.w    $0001
                dc.l    $F406002C, $0016FFF8
loc_14436:
                dc.w    $0001
                dc.l    $F4060032, $0019FFF8
loc_14440:
                dc.w    $0001
                dc.l    $F4060038, $001CFFF8
loc_1444A:
                dc.w    $0001
                dc.l    $F406003E, $001FFFF8
loc_14454:
                dc.w    $0001
                dc.l    $F4062044, $2022FFF8
loc_1445E:
                dc.w    $0001
                dc.l    $F406204A, $2025FFF8
loc_14468:
                dc.w    $0001
                dc.l    $F4062050, $2028FFF8
loc_14472:
                dc.w    $0001
                dc.l    $F4062056, $202BFFF8
loc_1447C:
                dc.w    $0001
                dc.l    $F406205C, $202EFFF8
loc_14486:
                dc.w    $0001
                dc.l    $F4062062, $2031FFF8
loc_14490:
                dc.w    $0001
                dc.l    $F8050068, $0034FFF8
loc_1449A:
                dc.w    $0001
                dc.l    $F805006C, $0036FFF8
loc_144A4:
                dc.w    $0001
                dc.l    $F8050070, $0038FFF8
loc_144AE:
                dc.w    $0000                
; ===========================================================================
; ---------------------------------------------------------------------------
; Object 03 - Collision plane/layer switcher
; ---------------------------------------------------------------------------
; Sprite_144B0: Obj_0x03_Layer_Switch:
Obj03:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	Obj03_Index(pc,d0.w),d1
		jsr	Obj03_Index(pc,d1.w)
		tst.w	(Debug_mode_flag).w
		beq.w	loc_D30C
		jmp	(MarkObjGone).l
; ===========================================================================
; off_144CC:
Obj03_Index:	dc.w	Obj03_Init-Obj03_Index
		dc.w	Obj03_MainX-Obj03_Index
		dc.w	Obj03_MainY-Obj03_Index
; ===========================================================================
; loc_144D2:
Obj03_Init:
		addq.b	#2,$24(a0)
		move.l	#Obj03_MapUnc_147D0,4(a0)
		move.w	#$26BC,2(a0)
		bsr.w	Adjust2PArtPointer
		ori.b	#4,1(a0)
		move.b	#$10,$19(a0)
		move.b	#5,$18(a0)
		move.b	$28(a0),d0
		btst	#2,d0
		beq.s	Obj03_Init_CheckX

; Obj03_Init_CheckY:
		addq.b	#2,$24(a0)	; => Obj03_MainY
		andi.w	#7,d0
		move.b	d0,$1A(a0)
		andi.w	#3,d0
		add.w	d0,d0
		move.w	Obj03_Sizes(pc,d0.w),$32(a0)
		bra.w	Obj03_MainY
; ===========================================================================
; word_14520:
Obj03_Sizes:	dc.w	$20,$40,$80,$100
; ===========================================================================
; loc_14528:
Obj03_Init_CheckX:
		andi.w	#3,d0
		move.b	d0,$1A(a0)
		add.w	d0,d0
		move.w	Obj03_Sizes(pc,d0.w),$32(a0)

; loc_14538:
Obj03_MainX:
		tst.w	(Debug_placement_mode).w
		bne.w	return_1465A
		move.b	#0,$34(a0)
		move.w	$30(a0),d5
		move.w	8(a0),d0
		move.w	d0,d1
		subq.w	#8,d0
		addq.w	#8,d1
		move.w	$C(a0),d2
		move.w	d2,d3
		move.w	$32(a0),d4
		sub.w	d4,d2
		add.w	d4,d3
		lea	(Obj03_Characters).l,a2
		moveq	#7,d6

loc_1456A:
		move.l	(a2)+,d4
		beq.w	loc_1464A
		move.l	d4,a1
		move.w	8(a1),d4
		cmp.w	d0,d4
		bcs.w	loc_1459A
		cmp.w	d1,d4
		bcc.w	loc_1459A
		move.w	$C(a1),d4
		cmp.w	d2,d4
		bcs.w	loc_1459A
		cmp.w	d3,d4
		bcc.w	loc_1459A
		ori.w	#$8000,d5
		bra.w	loc_1464A
; ===========================================================================

loc_1459A:
		tst.w	d5
		bpl.w	loc_1464A
		swap.w	d0
		move.b	$28(a0),d0
		bpl.s	loc_145B2
		btst	#1,$22(a1)
		bne.w	loc_14644

loc_145B2:
		move.w	8(a1),d4
		cmp.w	8(a0),d4
		bcs.s	loc_145F6
		btst	#0,1(a0)
		bne.s	loc_145E2
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)
		btst	#3,d0
		beq.s	loc_145E2
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_145E2:
		bclr	#7,2(a1)
		btst	#5,d0
		beq.s	loc_1462E
		bset	#7,2(a1)
		bra.s	loc_1462E
; ===========================================================================

loc_145F6:
		btst	#0,1(a0)
		bne.s	loc_1461C
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)
		btst	#4,d0
		beq.s	loc_1461C
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_1461C:
		bclr	#7,2(a1)
		btst	#6,d0
		beq.s	loc_1462E
		bset	#7,2(a1)

loc_1462E:
		move.b	#1,$34(a0)
		tst.w	(Debug_mode_flag).w
		beq.s	loc_14644
		move.w	#$A1,d0
		jsr	(PlaySound).l

loc_14644:
		swap.w	d0
		andi.w	#$7FFF,d5

loc_1464A:
		add.l	d5,d5
		dbf	d6,loc_1456A
		swap.w	d5
		move.b	d5,$30(a0)
		bsr.w	loc_147A0

return_1465A:
		rts
; ===========================================================================
; loc_1465C:
Obj03_MainY:
		tst.w	(Debug_placement_mode).w
		bne.w	return_1477E
		move.b	#0,$34(a0)
		move.w	$30(a0),d5
		move.w	$08(a0),d0
		move.w	d0,d1
		move.w	$32(a0),d4
		sub.w	d4,d0
		add.w	d4,d1
		move.w	$C(a0),d2
		move.w	d2,d3
		subq.w	#8,d2
		addq.w	#8,d3
		lea	(Obj03_Characters).l,a2
		moveq	#7,d6

loc_1468E:
		move.l	(a2)+,d4
		beq.w	loc_1476E
		move.l	d4,a1
		move.w	8(a1),d4
		cmp.w	d0,d4
		bcs.w	loc_146BE
		cmp.w	d1,d4
		bcc.w	loc_146BE
		move.w	$C(a1),d4
		cmp.w	d2,d4
		bcs.w	loc_146BE
		cmp.w	d3,d4
		bcc.w	loc_146BE
		ori.w	#$8000,d5
		bra.w	loc_1476E
; ===========================================================================

loc_146BE:
		tst.w	d5
		bpl.w	loc_1476E
		swap.w	d0
		move.b	$28(a0),d0
		bpl.s	loc_146D6
		btst	#1,$22(a1)
		bne.w	loc_14768

loc_146D6:
		move.w	$C(a1),d4
		cmp.w	$C(a0),d4
		bcs.s	loc_1471A
		btst	#0,1(a0)
		bne.s	loc_14706
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)
		btst	#3,d0
		beq.s	loc_14706
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_14706:
		bclr	#7,2(a1)
		btst	#5,d0
		beq.s	loc_14752
		bset	#7,2(a1)
		bra.s	loc_14752
; ===========================================================================

loc_1471A:
		btst	#0,1(a0)
		bne.s	loc_14740
		move.b	#$C,$3E(a1)
		move.b	#$D,$3F(a1)
		btst	#4,d0
		beq.s	loc_14740
		move.b	#$E,$3E(a1)
		move.b	#$F,$3F(a1)

loc_14740:
		bclr	#7,2(a1)
		btst	#6,d0
		beq.s	loc_14752
		bset	#7,2(a1)

loc_14752:
		move.b	#1,$34(a0)
		tst.w	(Debug_mode_flag).w
		beq.s	loc_14768
		move.w	#$A1,d0
		jsr	(PlaySound).l

loc_14768:
		swap.w	d0
		andi.w	#$7FFF,d5

loc_1476E:
		add.l	d5,d5
		dbf	d6,loc_1468E
		swap.w	d5
		move.b	d5,$30(a0)
		bsr.w	loc_147A0

return_1477E:
                rts
; ===========================================================================
; dword_14780:
Obj03_Characters:
		; character 1, character 2
		dc.l	$FFFFB000,$FFFFB040
		dc.l	0,0
		dc.l	0,0
		dc.l	0,0
		even
; ===========================================================================

loc_147A0:
		tst.b	$34(a0)
		beq.s	return_147CE
		tst.w	($FFFFB002).w
		bpl.s	loc_147B4
		bset	#7,($FFFFB182).w
		bra.s	loc_147BA

loc_147B4:
		bclr	#7,($FFFFB182).w

loc_147BA:
		tst.w	($FFFFB042).w
		bpl.s	loc_147C8
		bset	#7,($FFFFB1C2).w
		bra.s	return_147CE

loc_147C8:
		bclr	#7,($FFFFB1C2).w

return_147CE:
                rts
; ===========================================================================
; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Obj03_MapUnc_147D0:	incbin	"mappings/sprite/obj03.bin"

;=============================================================================== 
; Object 0x0B - Chemical Plant - Open / Close Platforms
; [ Begin ]                         
;===============================================================================   
Obj_0x0B_Open_Close_Platform: ; loc_148AC:              
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_148BA(PC, D0), D1
                jmp     loc_148BA(PC, D1)
loc_148BA:
                dc.w    loc_148C0-loc_148BA
                dc.w    loc_14914-loc_148BA
                dc.w    loc_14922-loc_148BA
loc_148C0:
                addq.b  #$02, $0024(A0)
                move.l  #Open_Close_Platform_Mappings, $0004(A0) ; loc_14996
                move.w  #$E3B0, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$00F0, D0
                addi.w  #$0010, D0
                move.w  D0, D1
                subq.w  #$01, D0
                move.w  D0, $0030(A0)
                move.w  D0, $0032(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                addq.w  #$01, D0
                lsl.w   #$04, D0
                move.b  D0, $0036(A0)
loc_14914:
                move.b  ($FFFFFE0F).w, D0
                add.b   $0036(A0), D0
                bne.s   loc_1494C
                addq.b  #$02, $0024(A0)
loc_14922:
                subq.w  #$01, $0030(A0)
                bpl.s   loc_14940
                move.w  #$007F, $0030(A0)
                tst.b   $001C(A0)
                beq.s   loc_1493A
                move.w  $0032(A0), $0030(A0)
loc_1493A:
                bchg    #0, $001C(A0)
loc_14940:
                lea     (loc_14982), A1
                jsr     AnimateSprite           ; (loc_D412)
loc_1494C:
                tst.b   $001A(A0)
                bne.s   loc_14966
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$11, D3
                move.w  $0008(A0), D4
                bsr     loc_F984
                bra     MarkObjGone             ; loc_D2A0
loc_14966:
                btst    #$03, $0022(A0)
                beq.s   loc_1497E
                lea     ($FFFFB000).w, A1
                bclr    #$03, $0022(A1)
                bclr    #$03, $0022(A0)
loc_1497E:
                bra     MarkObjGone             ; loc_D2A0
loc_14982:
                dc.w    loc_14986-loc_14982
                dc.w    loc_1498E-loc_14982
loc_14986:
                dc.b    $07
                dc.b    $00, $01, $02, $03, $04, $FE, $01
loc_1498E:
                dc.b    $07
                dc.b    $04, $03, $02, $01, $00, $FE, $01
Open_Close_Platform_Mappings:                
loc_14996:
                dc.w    loc_149A0-loc_14996
                dc.w    loc_149B2-loc_14996
                dc.w    loc_149C4-loc_14996
                dc.w    loc_149D6-loc_14996
                dc.w    loc_149E8-loc_14996
loc_149A0:
                dc.w    $0002
                dc.l    $F00C0000, $0000FFF0, $F80E0024, $0012FFF0
loc_149B2:
                dc.w    $0002
                dc.l    $E80F0004, $0002FFF0, $F80E0024, $0012FFF0
loc_149C4:
                dc.w    $0002
                dc.l    $F40F0014, $000AFFF0, $F80E0024, $0012FFF0
loc_149D6:
                dc.w    $0002
                dc.l    $000F1004, $1002FFF0, $F80E0024, $0012FFF0
loc_149E8:
                dc.w    $0002
                dc.l    $100C1000, $1000FFF0, $F80E0024, $0012FFF0
;=============================================================================== 
; Object 0x0B - Chemical Plant - Open / Close Platforms
; [ End ]                         
;===============================================================================  
                nop                             ; Filler 
;=============================================================================== 
; Object 0x0C - 
; [ Begin ]                         
;===============================================================================  
Obj_0x0C: ; loc_149FC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_14A0A(PC, D0), D1
                jmp     loc_14A0A(PC, D1)
loc_14A0A:
                dc.w    loc_14A0E-loc_14A0A
                dc.w    loc_14A6E-loc_14A0A
loc_14A0E:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x0C_Mappings, $0004(A0) ; loc_14AE6
                move.w  #$E418, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                move.w  $000C(A0), D0
                subi.w  #$0010, D0
                move.w  D0, $003A(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$00F0, D0
                addi.w  #$0010, D0
                move.w  D0, D1
                subq.w  #$01, D0
                move.w  D0, $0030(A0)
                move.w  D0, $0032(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                move.b  D0, $003E(A0)
                move.b  D0, $003F(A0)
loc_14A6E:
                move.b  $003C(A0), D0
                beq.s   loc_14AAC
                cmpi.b  #$80, D0
                bne.s   loc_14ABC
                move.b  $003D(A0), D1
                bne.s   loc_14A8E
                subq.b  #$01, $003E(A0)
                bpl.s   loc_14A8E
                move.b  $003F(A0), $003E(A0)
                bra.s   loc_14ABC
loc_14A8E:
                addq.b  #$01, $003D(A0)
                move.b  D1, D0
                bsr     loc_14AF4
                addi.w  #$0008, D0
                asr.w   #$06, D0
                subi.w  #$0010, D0
                add.w   $003A(A0), D0
                move.w  D0, $000C(A0)
                bra.s   loc_14AD2
loc_14AAC:
                move.w  ($FFFFFE0E).w, D1
                andi.w  #$03FF, D1
                bne.s   loc_14AC0
                move.b  #$01, $003D(A0)
loc_14ABC:
                addq.b  #$01, $003C(A0)
loc_14AC0:
                bsr     loc_14AF4
                addi.w  #$0008, D1
                asr.w   #$04, D1
                add.w   $003A(A0), D1
                move.w  D1, $000C(A0)
loc_14AD2:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$09, D3
                move.w  $0008(A0), D4
                bsr     loc_F984
                bra     MarkObjGone             ; loc_D2A0
Obj_0x0C_Mappings:                
loc_14AE6:
                dc.w    loc_14AE8-loc_14AE6
loc_14AE8:
                dc.w    $0001
                dc.l    $F80D0000, $0000FFF0
;=============================================================================== 
; Object 0x0C - 
; [ End ]                         
;===============================================================================  
                nop                             ; Filler 
loc_14AF4:
                jmp     CalcSine                ; loc_320A
                dc.w    $0000                   ; Filler 
;=============================================================================== 
; Object 0x12 - Hidden Palace - Emerald 
; [ Begin ]                         
;===============================================================================                  
Obj_0x12_Emerald: ; loc_14AFC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_14B0A(PC, D0), D1
                jmp     loc_14B0A(PC, D1)
loc_14B0A:                
                dc.w    loc_14B0E-loc_14B0A
                dc.w    loc_14B36-loc_14B0A
loc_14B0E:
                addq.b  #$02, $0024(A0)
                move.l  #Emerald_Mappings, $0004(A0) ; loc_14B62
                move.w  #$6392, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.b  #$04, $0018(A0)
loc_14B36:
                move.w  #$0020, D1
                move.w  #$0010, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; loc_F4A0
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2 
Emerald_Mappings: ; loc_14B62:
                dc.w    loc_14B64-Emerald_Mappings
loc_14B64:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFE0, $F00F0010, $00080000
;=============================================================================== 
; Object 0x12 - Hidden Palace - Emerald 
; [ End ]                         
;===============================================================================  
                nop                             ; Filler
;=============================================================================== 
; Object 0x13 - Hidden Palace - Waterfalls 
; [ Begin ]                         
;===============================================================================                  
Obj_0x13_Hpz_Waterfalls: ; loc_14B78:     
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_14B86(PC, D0), D1
                jmp     loc_14B86(PC, D1)
loc_14B86:
                dc.w    loc_14B8C-loc_14B86
                dc.w    loc_14C52-loc_14B86
                dc.w    loc_14CDC-loc_14B86
loc_14B8C:
                addq.b  #$02, $0024(A0)
                move.l  #Hpz_Waterfalls_Mappings, $0004(A0) ; loc_14CF4
                move.w  #$E315, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  #$12, $001A(A0)
                bsr.s   loc_14BF4
                move.b  #$A0, $0016(A1)
                bset    #$04, $0001(A1)
                move.l  A1, $0038(A0)
                move.w  $000C(A0), $0034(A0)
                move.w  $000C(A0), $0036(A0)
                cmpi.b  #$10, $0028(A0)
                bcs.s   loc_14C38
                bsr.s   loc_14BF4
                move.l  A1, $003C(A0)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$0098, $000C(A1)
                bra.s   loc_14C38
loc_14BF4:
                jsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_14C36
                move.b  #$13, $0000(A1)
                addq.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  #Hpz_Waterfalls_Mappings, $0004(A1) ; loc_14CF4
                move.w  #$E315, $0002(A1)
                bsr     Adjust2PArtPointer2   ; loc_DC4C
                move.b  #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$01, $0018(A1)
loc_14C36:                
                rts
loc_14C38:
                moveq   #$00, D1
                move.b  $0028(A0), D1
                move.w  $0034(A0), D0
                subi.w  #$0078, D0
                lsl.w   #$04, D1
                add.w   D1, D0
                move.w  D0, $000C(A0)
                move.w  D0, $0034(A0)
loc_14C52:
                move.l  $0038(A0), A1
                move.b  #$12, $001A(A0)
                move.w  $0034(A0), D0 
                move.w  (Water_Level_1).w, D1
                cmp.w   D0, D1
                bcc.s   loc_14C6A
                move.w  D1, D0
loc_14C6A:
                move.w  D0, $000C(A0)
                sub.w   $0036(A0), D0
                addi.w  #$0080, D0
                bmi.s   loc_14CBC
                lsr.w   #$04, D0
                move.w  D0, D1
                cmpi.w  #$000F, D0
                bcs.s   loc_14C84
                moveq   #$0F, D0
loc_14C84:
                move.b  D0, $001A(A1)
                cmpi.b  #$10, $0028(A0)
                bcs.s   loc_14CA4
                move.l  $003C(A0), A1
                subi.w  #$000F, D1
                bcc.s   loc_14C9C
                moveq   #$00, D1
loc_14C9C:
                addi.w  #$0013, D1
                move.b  D1, $001A(A1) 
loc_14CA4:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2
loc_14CBC:                
                moveq   #$13, D0
                move.b  D0, $001A(A0)
                move.b  D0, $001A(A1)
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; loc_D3B4
                rts
loc_14CDC:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; loc_D3B4
                bra     DisplaySprite           ; loc_D3C2 
Hpz_Waterfalls_Mappings:                  
loc_14CF4:
                dc.w    loc_14D2E-loc_14CF4
                dc.w    loc_14D38-loc_14CF4
                dc.w    loc_14D4A-loc_14CF4
                dc.w    loc_14D5C-loc_14CF4
                dc.w    loc_14D76-loc_14CF4
                dc.w    loc_14D90-loc_14CF4
                dc.w    loc_14DB2-loc_14CF4
                dc.w    loc_14DD4-loc_14CF4
                dc.w    loc_14DFE-loc_14CF4
                dc.w    loc_14E28-loc_14CF4
                dc.w    loc_14E5A-loc_14CF4
                dc.w    loc_14E8C-loc_14CF4
                dc.w    loc_14EC6-loc_14CF4
                dc.w    loc_14F00-loc_14CF4
                dc.w    loc_14F42-loc_14CF4
                dc.w    loc_14F84-loc_14CF4
                dc.w    loc_14FCE-loc_14CF4
                dc.w    loc_14FCE-loc_14CF4
                dc.w    loc_14FCE-loc_14CF4
                dc.w    loc_14D2C-loc_14CF4
                dc.w    loc_14FE0-loc_14CF4
                dc.w    loc_14FEA-loc_14CF4
                dc.w    loc_14FF4-loc_14CF4
                dc.w    loc_15006-loc_14CF4
                dc.w    loc_15018-loc_14CF4
                dc.w    loc_15032-loc_14CF4
                dc.w    loc_1504C-loc_14CF4
                dc.w    loc_1506E-loc_14CF4
loc_14D2C:
                dc.w    $0000                
loc_14D2E:
                dc.w    $0001
                dc.l    $800C0010, $0008FFF0
loc_14D38:
                dc.w    $0002
                dc.l    $800C0010, $0008FFF0, $880D002D, $0016FFF0
loc_14D4A:
                dc.w    $0002
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
loc_14D5C:
                dc.w    $0003
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80D002D, $0016FFF0
loc_14D76:
                dc.w    $0003
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0
loc_14D90:
                dc.w    $0004
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80D002D, $0016FFF0
loc_14DB2:
                dc.w    $0004
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
loc_14DD4:
                dc.w    $0005
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80D002D, $0016FFF0
loc_14DFE:
                dc.w    $0005
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0
loc_14E28:
                dc.w    $0006
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080D002D, $0016FFF0
loc_14E5A:
                dc.w    $0006
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
loc_14E8C:
                dc.w    $0007
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
                dc.l    $280D002D, $0016FFF0
loc_14EC6:
                dc.w    $0007
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
                dc.l    $280F0000, $0000FFF0
loc_14F00:
                dc.w    $0008
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
                dc.l    $280F0000, $0000FFF0, $480D002D, $0016FFF0
loc_14F42:
                dc.w    $0008
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
                dc.l    $280F0000, $0000FFF0, $480F0000, $0000FFF0
loc_14F84:
                dc.w    $0009
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
                dc.l    $280F0000, $0000FFF0, $480F0000, $0000FFF0
                dc.l    $680D002D, $0016FFF0
loc_14FCE:
                dc.w    $0002
                dc.l    $F00A0018, $000CFFE8, $F00A0818, $080C0000
loc_14FE0:
                dc.w    $0001
                dc.l    $E00D002D, $0016FFF0
loc_14FEA:
                dc.w    $0001
                dc.l    $E00F0000, $0000FFF0
loc_14FF4:
                dc.w    $0002
                dc.l    $E00F0000, $0000FFF0, $000D002D, $0016FFF0
loc_15006:
                dc.w    $0002
                dc.l    $E00F0000, $0000FFF0, $000F0000, $0000FFF0
loc_15018:
                dc.w    $0003
                dc.l    $E00F0000, $0000FFF0, $000F0000, $0000FFF0
                dc.l    $200D002D, $0016FFF0
loc_15032:
                dc.w    $0003
                dc.l    $E00F0000, $0000FFF0, $000F0000, $0000FFF0
                dc.l    $200F0000, $0000FFF0
loc_1504C:
                dc.w    $0004
                dc.l    $E00F0000, $0000FFF0, $000F0000, $0000FFF0
                dc.l    $200F0000, $0000FFF0, $400D002D, $0016FFF0
loc_1506E:
                dc.w    $0004
                dc.l    $E00F0000, $0000FFF0, $000F0000, $0000FFF0
                dc.l    $200F0000, $0000FFF0, $400F0000, $0000FFF0                  
                        
;=============================================================================== 
; Object 0x13 - Hidden Palace - Waterfalls 
; [ End ]                         
;===============================================================================  

; ===========================================================================
; ---------------------------------------------------------------------------
; Object 04 - Surface of the water - water surface
; ---------------------------------------------------------------------------
; Sprite_15090: Obj_0x04:
Obj04:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	Obj04_Index(pc,d0.w),d1
		jmp	Obj04_Index(pc,d1.w)
; ===========================================================================
; off_1509E:
Obj04_Index:	dc.w	Obj04_Init-Obj04_Index
		dc.w	Obj04_Action-Obj04_Index
		dc.w	Obj04_Action2-Obj04_Index
; ===========================================================================
; loc_150A4:
Obj04_Init:
		addq.b	#2,$24(a0)	; => Obj04_Action
		move.l	#Obj04_MapUnc_151C2,4(a0)
		move.w	#$8400,2(a0)
		bsr.w	Adjust2PArtPointer
		move.b	#4,1(a0)
		move.b	#$80,$19(a0)
		move.w	8(a0),$30(a0)
		cmpi.b	#$F,($FFFFFE10).w
		bne.s	Obj04_Action
		addq.b	#2,$24(a0)	; => Obj04_Action2
		move.l	#Obj04_MapUnc_152B2,4(a0)
		bra.w	Obj04_Action2
; ===========================================================================
; loc_150E4:
Obj04_Action:
		move.w	(Water_Level_1).w,d1
		move.w	d1,$C(a0)
		tst.b	$32(a0)
		bne.s	Obj04_Animate
		btst	#7,($FFFFF605).w	; is the Start button pressed?
		beq.s	Obj04_Display		; if not, branch
		addq.b	#3,$1A(a0)		; use different frames
		move.b	#1,$32(a0)		; stop animation
		bra.s	Obj04_Display
; ===========================================================================
; loc_15106:
Obj04_Animate:
		tst.w	($FFFFF63A).w		; if the game paused?
		bne.s	Obj04_Display		; if yes, branch
		move.b	#0,$32(a0)		; resume animation
		subq.b	#3,$1A(a0)		; use normal frames
; loc_15116:
Obj04_Display:
		lea	(Ani_obj04).l,a1
		moveq	#0,d1
		move.b	$1B(a0),d1
		move.b	(a1,d1.w),$1A(a0)
		addq.b	#1,$1B(a0)
		andi.b	#$3F,$1B(a0)
		bra.w	J_DisplaySprite_00
; ===========================================================================
; water sprite animation 'script' (custom format for this object)
; byte_15136:
Ani_obj04:	dc.b	0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1
		dc.b	1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2
		dc.b	2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1
		dc.b	1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0
		even
; ===========================================================================
; loc_15176:
Obj04_Action2:
		move.w	(Water_Level_1).w,d1
		move.w	d1,$C(a0)
		tst.b	$32(a0)
		bne.s	Obj04_Animate2
		btst	#7,($FFFFF605).w	; is the Start button pressed?
		beq.s	loc_151A8		; if not, branch
		addq.b	#2,$1A(a0)		; use different frames
		move.b	#1,$32(a0)		; stop animation
		bra.s	loc_151BE
; ===========================================================================
; loc_15198:
Obj04_Animate2:
		tst.w	($FFFFF63A).w		; is the game paused?
		bne.s	loc_151BE		; if yes, branch
		move.b	#0,$32(a0)		; resume animation
		subq.b	#2,$1A(a0)		; use normal frames

loc_151A8:
		subq.b	#1,$1E(a0)
		bpl.s	loc_151BE
		move.b	#5,$1E(a0)
		addq.b	#1,$1A(a0)
		andi.b	#1,$1A(a0)

loc_151BE:
		bra.w	J_DisplaySprite_00
; ===========================================================================
; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Obj04_MapUnc_151C2:	incbin	"mappings/sprite/obj04_a.bin"
; ---------------------------------------------------------------------------
; sprite mappings
; ---------------------------------------------------------------------------
Obj04_MapUnc_152B2:	incbin	"mappings/sprite/obj04_a.bin"

;=============================================================================== 
; Object 0x49 - Green Hill - Waterfalls 
; [ Begin ]        
;===============================================================================  
Obj_0x49_Waterfall: ; loc_15352:                 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_15360(PC, D0), D1
                jmp     loc_15360(PC, D1)
loc_15360:
                dc.w    loc_15364-loc_15360
                dc.w    loc_1539E-loc_15360
               
loc_15364:
                addq.b  #$02, $0024(A0)
                move.l  #Waterfall_Mappings, $0004(A0) ; loc_15404
                move.w  #$23AE, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                move.b  #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.w  $0008(A0), $0030(A0)
                move.b  #$00, $0018(A0)
                move.b  #$80, $0016(A0)
                bset    #$04, $0001(A0)
loc_1539E:
                tst.w   ($FFFFFFD8).w
                bne.s   loc_153B8
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_09       ; loc_15726
loc_153B8:
                move.w  $0008(A0), D1
                move.w  D1, D2
                subi.w  #$0040, D1
                addi.w  #$0040, D2
                move.b  $0028(A0), D3
                move.b  #$00, $001A(A0)
                move.w  ($FFFFB008).w, D0
                cmp.w   D1, D0
                bcs.s   loc_153EA
                cmp.w   D2, D0
                bcc.s   loc_153EA
                move.b  #$01, $001A(A0)
                add.b   D3, $001A(A0)
                bra     J_DisplaySprite_00      ; loc_15720
loc_153EA:
                move.w  ($FFFFB048).w, D0
                cmp.w   D1, D0
                bcs.s   loc_153FC
                cmp.w   D2, D0
                bcc.s   loc_153FC
                move.b  #$01, $001A(A0)
loc_153FC:
                add.b   D3, $001A(A0)
                bra     J_DisplaySprite_00      ; loc_15720
Waterfall_Mappings:                
loc_15404:
                dc.w    loc_15414-loc_15404
                dc.w    loc_15426-loc_15404
                dc.w    loc_154B8-loc_15404
                dc.w    loc_154BA-loc_15404
                dc.w    loc_154B8-loc_15404
                dc.w    loc_154DC-loc_15404
                dc.w    loc_15414-loc_15404
                dc.w    loc_1552E-loc_15404
loc_15414:
                dc.w    $0002
                dc.l    $800D0000, $0000FFE0, $800D0000, $00000000
loc_15426:
                dc.w    $0012
                dc.l    $800D0000, $0000FFE0, $800D0000, $00000000
                dc.l    $800F0008, $0004FFE0, $800F0008, $00040000
                dc.l    $A00F0008, $0004FFE0, $A00F0008, $00040000
                dc.l    $C00F0008, $0004FFE0, $C00F0008, $00040000
                dc.l    $E00F0008, $0004FFE0, $E00F0008, $00040000
                dc.l    $000F0008, $0004FFE0, $000F0008, $00040000
                dc.l    $200F0008, $0004FFE0, $200F0008, $00040000
                dc.l    $400F0008, $0004FFE0, $400F0008, $00040000
                dc.l    $600F0008, $0004FFE0, $600F0008, $00040000
loc_154B8:
                dc.w    $0000
loc_154BA:
                dc.w    $0004
                dc.l    $E00F0008, $0004FFE0, $E00F0008, $00040000
                dc.l    $000F0008, $0004FFE0, $000F0008, $00040000
loc_154DC:
                dc.w    $000A
                dc.l    $C00F0008, $0004FFE0, $C00F0008, $00040000
                dc.l    $E00F0008, $0004FFE0, $E00F0008, $00040000
                dc.l    $000F0008, $0004FFE0, $000F0008, $00040000
                dc.l    $200F0008, $0004FFE0, $200F0008, $00040000
                dc.l    $400F0008, $0004FFE0, $400F0008, $00040000
loc_1552E:
                dc.w    $000E
                dc.l    $800D0000, $0000FFE0, $800D0000, $00000000
                dc.l    $800F0008, $0004FFE0, $800F0008, $00040000
                dc.l    $A00F0008, $0004FFE0, $A00F0008, $00040000
                dc.l    $C00F0008, $0004FFE0, $C00F0008, $00040000
                dc.l    $E00F0008, $0004FFE0, $E00F0008, $00040000
                dc.l    $000F0008, $0004FFE0, $000F0008, $00040000
                dc.l    $200F0008, $0004FFE0, $200F0008, $00040000
;=============================================================================== 
; Object 0x49 - Green Hill - Waterfalls 
; [ End ]                         
;===============================================================================                

;=============================================================================== 
; Object 0x31 - Hill Top / Metropolis - Lava Attributes 
; [ Begin ]                         
;===============================================================================   
Obj_0x31_Lava_Attributes: ; loc_155A0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_155AE(PC, D0), D1
                jmp     loc_155AE(PC, D1)
loc_155AE:
                dc.w    loc_155B6-loc_155AE
                dc.w    loc_155EC-loc_155AE
loc_155B2: 
                dc.w    $9694, $9500
                
loc_155B6:
                addq.b  #$02, $0024(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.b  loc_155B2(PC, D0), $0020(A0)
                move.l  #Lava_Attributes_Mappings, $0004(A0) ; loc_15612
                move.w  #$8680, $0002(A0)
                move.b  #$84, $0001(A0)
                move.b  #$80, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), $001A(A0)
loc_155EC:                
                tst.w   ($FFFFFFD8).w
                bne.s   loc_15606
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_09       ; loc_15726
loc_15606:
                tst.w   (Debug_placement_mode).w
                beq.s   loc_15610
                bsr     J_DisplaySprite_00      ; loc_15720
loc_15610:                
                rts
Lava_Attributes_Mappings:                
loc_15612:
                dc.w    loc_15618-loc_15612
                dc.w    loc_15618-loc_15612
                dc.w    loc_15618-loc_15612
loc_15618:
                dc.w    $0000
;=============================================================================== 
; Object 0x31 - Hill Top / Metropolis - Lava Attributes 
; [ End ]                         
;=============================================================================== 
;=============================================================================== 
; Object 0x74 - Hill Top / Metropolis / Dust Hill... - Invisible Block 
; [ Begin ]                         
;===============================================================================   
Obj_0x74_Invisible_Block: ; loc_1561A:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_15628(PC, D0), D1
                jmp     loc_15628(PC, D1)
loc_15628:
                dc.w    loc_1562C-loc_15628
                dc.w    loc_15668-loc_15628
loc_1562C:
                addq.b  #$02, $0024(A0)
                move.l  #Invisible_Block_Mappings, $0004(A0) ; loc_156B2
                move.w  #$8680, $0002(A0)
                bsr     Adjust2PArtPointer     ; loc_DC30
                ori.b   #$04, $0001(A0)
                move.b  $0028(A0), D0
                move.b  D0, D1
                andi.w  #$00F0, D0
                addi.w  #$0010, D0
                lsr.w   #$01, D0
                move.b  D0, $0019(A0)
                andi.w  #$000F, D1
                addq.w  #$01, D1
                lsl.w   #$03, D1
                move.b  D1, $0016(A0)
loc_15668:
                bsr     loc_DDD8
                bne.s   loc_1568A
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     loc_F4FA
loc_1568A:
                tst.w   ($FFFFFFD8).w
                bne.s   loc_156A4
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_09       ; loc_15726
loc_156A4:
                tst.w   (Debug_placement_mode).w
                beq.s   loc_156B0
                jmp     DisplaySprite           ; (loc_D3C2)
loc_156B0:
                rts
Invisible_Block_Mappings:
loc_156B2:
                dc.w    loc_156B8-loc_156B2
                dc.w    loc_156DA-loc_156B2
                dc.w    loc_156FC-loc_156B2
loc_156B8:
                dc.w    $0004
                dc.l    $F005001C, $000EFFF0, $F005001C, $000E0000
                dc.l    $0005001C, $000EFFF0, $0005001C, $000E0000
loc_156DA:
                dc.w    $0004
                dc.l    $E005001C, $000EFFC0, $E005001C, $000E0030
                dc.l    $1005001C, $000EFFC0, $1005001C, $000E0030
loc_156FC:
                dc.w    $0004
                dc.l    $E005001C, $000EFF80, $E005001C, $000E0070
                dc.l    $1005001C, $000EFF80, $1005001C, $000E0070                
;=============================================================================== 
; Object 0x74 - Hill Top / Metropolis / Dust Hill... - Invisible Block 
; [ End ]                         
;===============================================================================   

                nop                             ; Filler 
J_DisplaySprite_00: ; loc_15720:
                jmp     DisplaySprite           ; loc_D3C2
J_DeleteObject_09: ; loc_15726:
                jmp     DeleteObject            ; loc_D3B4
;=============================================================================== 
; Object 0x06 - Green Hill / Metropolis - Spiral Loopings Attributes, ... 
; [ Begin ]                         
;===============================================================================                   
Obj_0x06_Spiral_Attributes: ; loc_1572C:   
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1575C(PC, D0), D1
                jsr     loc_1575C(PC, D1)
                tst.w   ($FFFFFFD8).w
                beq.s   loc_15742
                rts
loc_15742:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_0A       ; loc_15756
                rts
J_DeleteObject_0A: ; loc_15756:
                jmp     DeleteObject            ; loc_D3B4
loc_1575C:
                dc.w    loc_15762-loc_1575C
                dc.w    loc_1577A-loc_1575C
                dc.w    loc_15A6A-loc_1575C
loc_15762:
                addq.b  #$02, $0024(A0)
                move.b  #$D0, $0019(A0)
                tst.b   $0028(A0)
                bpl.s   loc_1577A
                addq.b  #$02, $0024(A0)
                bra     loc_15A6A
loc_1577A:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                bsr.s   loc_15788
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
loc_15788:
                btst    D6, $0022(A0)
                bne     loc_15822
                btst    #$01, $0022(A1)
                bne     loc_15820
                btst    #$03, $0022(A1)
                bne.s   loc_157E2
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                tst.w   $0010(A1)
                bmi.s   loc_157BE
                cmpi.w  #$FF40, D0
                bgt.s   loc_15820
                cmpi.w  #$FF30, D0
                blt.s   loc_15820
                bra.s   loc_157CA
loc_157BE:
                cmpi.w  #$00C0, D0
                blt.s   loc_15820
                cmpi.w  #$00D0, D0
                bgt.s   loc_15820
loc_157CA:
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                subi.w  #$0010, D1
                cmpi.w  #$0030, D1
                bcc.s   loc_15820
                bsr     loc_FAF2
                rts
loc_157E2:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                tst.w   $0010(A1)
                bmi.s   loc_157FE
                cmpi.w  #$FF50, D0
                bgt.s   loc_15820
                cmpi.w  #$FF40, D0
                blt.s   loc_15820
                bra.s   loc_1580A
loc_157FE:
                cmpi.w  #$00B0, D0
                blt.s   loc_15820
                cmpi.w  #$00C0, D0
                bgt.s   loc_15820
loc_1580A:
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                subi.w  #$0010, D1
                cmpi.w  #$0030, D1
                bcc.s   loc_15820
                bsr     loc_FAF2
loc_15820:
                rts
loc_15822:
                move.w  $0014(A1), D0
                bpl.s   loc_1582A
                neg.w   D0
loc_1582A:
                cmpi.w  #$0600, D0
                bcs.s   loc_1584C
                btst    #$01, $0022(A1)
                bne.s   loc_1584C
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addi.w  #$00D0, D0
                bmi.s   loc_1584C
                cmpi.w  #$01A0, D0
                bcs.s   loc_15864
loc_1584C:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                rts
loc_15864:
                btst    #$03, $0022(A1)
                beq.s   loc_15820
                move.b  loc_158CA(PC, D0), D1
                ext.w   D1
                move.w  $000C(A0), D2
                add.w   D1, D2
                moveq   #$00, D1
                move.b  $0016(A1), D1
                subi.w  #$0013, D1
                sub.w   D1, D2
                move.w  D2, $000C(A1)
                lsr.w   #$03, D0
                andi.w  #$003F, D0
                move.b  loc_15896(PC, D0), $0027(A1)
                rts
loc_15896:
                dc.b    $00, $00, $01, $01, $16, $16, $16, $16, $2C, $2C, $2C, $2C, $42, $42, $42, $42
                dc.b    $58, $58, $58, $58, $6E, $6E, $6E, $6E, $84, $84, $84, $84, $9A, $9A, $9A, $9A
                dc.b    $B0, $B0, $B0, $B0, $C6, $C6, $C6, $C6, $DC, $DC, $DC, $DC, $F2, $F2, $F2, $F2
                dc.b    $01, $01, $00, $00
loc_158CA:
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $1F, $1F
                dc.b    $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1E, $1E, $1E
                dc.b    $1E, $1E, $1E, $1E, $1E, $1E, $1D, $1D, $1D, $1D, $1D, $1C, $1C, $1C, $1C, $1B
                dc.b    $1B, $1B, $1B, $1A, $1A, $1A, $19, $19, $19, $18, $18, $18, $17, $17, $16, $16
                dc.b    $15, $15, $14, $14, $13, $12, $12, $11, $10, $10, $0F, $0E, $0E, $0D, $0C, $0C
                dc.b    $0B, $0A, $0A, $09, $08, $08, $07, $06, $06, $05, $04, $04, $03, $02, $02, $01
                dc.b    $00, $FF, $FE, $FE, $FD, $FC, $FC, $FB, $FA, $F9, $F9, $F8, $F7, $F7, $F6, $F6
                dc.b    $F5, $F5, $F4, $F4, $F3, $F2, $F2, $F1, $F1, $F0, $F0, $EF, $EF, $EE, $EE, $ED
                dc.b    $ED, $ED, $EC, $EB, $EB, $EA, $EA, $E9, $E9, $E8, $E8, $E7, $E7, $E6, $E6, $E5
                dc.b    $E5, $E4, $E4, $E4, $E3, $E3, $E2, $E2, $E2, $E1, $E1, $E1, $E0, $E0, $E0, $DF
                dc.b    $DF, $DF, $DF, $DE, $DE, $DE, $DD, $DD, $DD, $DD, $DD, $DD, $DD, $DD, $DC, $DC
                dc.b    $DC, $DC, $DC, $DC, $DC, $DC, $DC, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB
                dc.b    $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB
                dc.b    $DB, $DB, $DB, $DB, $DC, $DC, $DC, $DC, $DC, $DC, $DC, $DD, $DD, $DD, $DD, $DD
                dc.b    $DD, $DD, $DD, $DE, $DE, $DE, $DF, $DF, $DF, $DF, $E0, $E0, $E0, $E1, $E1, $E1
                dc.b    $E2, $E2, $E2, $E3, $E3, $E4, $E4, $E4, $E5, $E5, $E6, $E6, $E7, $E7, $E8, $E8
                dc.b    $E9, $E9, $EA, $EA, $EB, $EB, $EC, $ED, $ED, $EE, $EE, $EF, $F0, $F0, $F1, $F2
                dc.b    $F2, $F3, $F4, $F5, $F5, $F6, $F7, $F8, $F9, $F9, $FA, $FB, $FC, $FD, $FE, $FF
                dc.b    $00, $01, $02, $03, $04, $05, $06, $07, $08, $08, $09, $0A, $0A, $0B, $0C, $0D
                dc.b    $0D, $0E, $0E, $0F, $0F, $10, $10, $11, $11, $12, $12, $13, $13, $14, $14, $15
                dc.b    $15, $16, $16, $17, $17, $18, $18, $18, $19, $19, $19, $19, $1A, $1A, $1A, $1A
                dc.b    $1B, $1B, $1B, $1B, $1C, $1C, $1C, $1C, $1C, $1C, $1D, $1D, $1D, $1D, $1D, $1D
                dc.b    $1D, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F
                dc.b    $1F, $1F, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20                
loc_15A6A:
                lea     ($FFFFB000).w, A1
                lea     ($FFFFF7B2).w, A2
                moveq   #$03, D6
                bsr.s   loc_15A80
                lea     ($FFFFB040).w, A1
                lea     ($FFFFF7B3).w, A2
                addq.b  #$01, D6
loc_15A80:
                btst    D6, $0022(A0)
                bne     loc_15AEE
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                cmpi.w  #$FF40, D0
                blt.s   loc_15AEC
                cmpi.w  #$00C0, D0
                bge.s   loc_15AEC
                move.w  $000C(A0), D0
                addi.w  #$003C, D0
                move.w  $000C(A1), D2
                move.b  $0016(A1), D1
                ext.w   D1
                add.w   D2, D1
                addq.w  #$04, D1
                sub.w   D1, D0
                bhi.s   loc_15AEC
                cmpi.w  #$FFF0, D0
                bcs.s   loc_15AEC
                cmpi.b  #$06, $0024(A1)
                bcc.s   loc_15AEC
                add.w   D0, D2
                addq.w  #$03, D2
                move.w  D2, $000C(A1)
                move.b  #$01, $0029(A1)
                bsr     loc_FAF2
                move.w  #$0001, $001C(A1)
                move.b  #$00, (A2)
                tst.w   $0014(A1)
                bne.s   loc_15AEC
                move.w  #$0001, $0014(A1)
loc_15AEC:
                rts
loc_15AEE:
                btst    #$01, $0022(A1)
                bne.s   loc_15B28
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addi.w  #$00C0, D0
                bmi.s   loc_15B0A
                cmpi.w  #$0180, D0
                bcs.s   loc_15B42
loc_15B0A:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                bset    #$01, $0022(A1)
                rts
loc_15B28:
                move.b  (A2), D0
                addi.b  #$20, D0
                cmpi.b  #$40, D0
                bcc.s   loc_15B3A
                asr.w   $0012(A1)
                bra.s   loc_15B0A
loc_15B3A:
                move.w  #$0000, $0012(A1)
                bra.s   loc_15B0A
loc_15B42:
                btst    #$03, $0022(A1)
                beq.s   loc_15AEC
                move.b  (A2), D0
                bsr     loc_15B84
                muls.w  #$2800, D1
                swap.w  D1
                move.w  $000C(A0), D2
                add.w   D1, D2
                moveq   #$00, D1
                move.b  $0016(A1), D1
                subi.w  #$0013, D1
                sub.w   D1, D2
                move.w  D2, $000C(A1)
                move.b  (A2), D0
                move.b  D0, $0027(A1)
                addq.b  #$04, (A2)
                tst.w   $0014(A1)
                bne.s   loc_15B80
                move.w  #$0001, $0014(A1)
loc_15B80:
                rts             
;=============================================================================== 
; Object 0x06 - Green Hill / Metropolis - Spiral Loopings Attributes, ... 
; [ End ]                         
;=============================================================================== 
                nop                             ; Filler
loc_15B84:
                jmp     CalcSine                ; loc_320A  
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x14 - Hill Top See-saw badnick 
; [ Begin ]                         
;===============================================================================    
Obj_0x14_See_Saw: ; loc_15B8C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_15BA2(PC, D0), D1
                jsr     loc_15BA2(PC, D1)
                move.w  $0030(A0), D0
                bra     loc_16004
loc_15BA2:
                dc.w    loc_15BAE-loc_15BA2
                dc.w    loc_15C1C-loc_15BA2
                dc.w    loc_15CD8-loc_15BA2
                dc.w    loc_15D06-loc_15BA2
                dc.w    loc_15D60-loc_15BA2
                dc.w    loc_15DF8-loc_15BA2
loc_15BAE:
                addq.b  #$02, $0024(A0)
                move.l  #See_Saw_Mappings, $0004(A0)  ; loc_15F54
                move.w  #$03C6, $0002(A0)
                bsr     J_Adjust2PArtPointer_00 ; loc_15FF8
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$30, $0019(A0)
                move.w  $0008(A0), $0030(A0)
                tst.b   $0028(A0)
                bne.s   loc_15C08
                bsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_15C08
                move.b  #$14, $0000(A1)
                addq.b  #$06, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $0022(A0), $0022(A1)
                move.l  A0, $003C(A1)
loc_15C08:
                btst    #$00, $0022(A0)
                beq.s   loc_15C16
                move.b  #$02, $001A(A0)
loc_15C16:
                move.b  $001A(A0), $003A(A0)
loc_15C1C:
                move.b  $003A(A0), D1
                btst    #$03, $0022(A0)
                beq.s   loc_15C76
                moveq   #$02, D1  
                lea     ($FFFFB000).w, A1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   loc_15C3C
                neg.w   D0
                moveq   #$00, D1
loc_15C3C:
                cmpi.w  #$0008, D0
                bcc.s   loc_15C44
                moveq   #$01, D1
loc_15C44:
                btst    #$04, $0022(A0)
                beq.s   loc_15CAE
                moveq   #$02, D2
                lea     ($FFFFB040).w, A1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0 
                bcc.s   loc_15C60
                neg.w   D0
                moveq   #$00, D2
loc_15C60:
                cmpi.w  #$0008, D0
                bcc.s   loc_15C68
                moveq   #$01, D2
loc_15C68:
                add.w   D2, D1
                cmpi.w  #$0003, D1   
                bne.s   loc_15C72
                addq.w  #$01, D1
loc_15C72:
                lsr.w   #$01, D1
                bra.s   loc_15CAE
loc_15C76:                
                btst    #$04, $0022(A0)
                beq.s   loc_15C9C
                moveq   #$02, D1
                lea     ($FFFFB040).w, A1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   loc_15C92
                neg.w   D0
                moveq   #$00, D1
loc_15C92:
                cmpi.w  #$0008, D0
                bcc.s   loc_15CAE
                moveq   #$01, D1
                bra.s   loc_15CAE
loc_15C9C:
                move.w  ($FFFFB012).w, D0
                move.w  ($FFFFB052).w, D2
                cmp.w   D0, D2
                blt.s   loc_15CAA
                move.w  D2, D0
loc_15CAA:
                move.w  D0, $0038(A0)
loc_15CAE:
                bsr     loc_15CDA
                lea     (loc_15EF2), A2
                btst    #$00, $001A(A0)
                beq.s   loc_15CC6
                lea     (loc_15F23), A2
loc_15CC6:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$08, D3
                move.w  (A7)+, D4
                bra     loc_F9D6
loc_15CD8:
                rts
loc_15CDA:
                move.b  $001A(A0), D0
                cmp.b   D1, D0
                beq.s   loc_15D04
                bcc.s   loc_15CE6
                addq.b  #$02, D0
loc_15CE6:
                subq.b  #$01, D0
                move.b  D0, $001A(A0)
                move.b  D1, $003A(A0)
                bclr    #$00, $0001(A0)
                btst    #$01, $001A(A0)
                beq.s   loc_15D04
                bset    #$00, $0001(A0)
loc_15D04:
                rts
loc_15D06:
                addq.b  #$02, $0024(A0)
                move.l  #See_Saw_Badnick_Mappings, $0004(A0) ; loc_15FE0
                move.w  #$03DE, $0002(A0)
                bsr     J_Adjust2PArtPointer_00 ; loc_15FF8
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$8B, $0020(A0)
                move.b  #$0C, $0019(A0)
                move.w  $0008(A0), $0030(A0)
                addi.w  #$0028, $0008(A0)
                addi.w  #$0010, $000C(A0)
                move.w  $000C(A0), $0034(A0)
                btst    #$00, $0022(A0)
                beq.s   loc_15D60
                subi.w  #$0050, $0008(A0)
                move.b  #$02, $003A(A0)
loc_15D60:
                bsr     loc_15ECA
                move.l  $003C(A0), A1
                moveq   #$00, D0
                move.b  $003A(A0), D0
                sub.b   $003A(A1), D0
                beq.s   loc_15DBA
                bcc.s   loc_15D78
                neg.b   D0
loc_15D78:
                move.w  #$F7E8, D1
                move.w  #$FEEC, D2
                cmpi.b  #$01, D0
                beq.s   loc_15D9E
                move.w  #$F510, D1
                move.w  #$FF34, D2
                cmpi.w  #$0A00, $0038(A1)
                blt.s   loc_15D9E
                move.w  #$F200, D1
                move.w  #$FF60, D2
loc_15D9E:
                move.w  D1, $0012(A0)
                move.w  D2, $0010(A0)
                move.w  $0008(A0), D0
                sub.w   $0030(A0), D0
                bcc.s   loc_15DB4
                neg.w   $0010(A0)
loc_15DB4:
                addq.b  #$02, $0024(A0)
                bra.s   loc_15DF8
loc_15DBA:
                lea     (loc_15EC0), A2
                moveq   #$00, D0
                move.b  $001A(A1), D0
                move.w  #$0028, D2
                move.w  $0008(A0), D1
                sub.w   $0030(A0), D1
                bcc.s   loc_15DD8
                neg.w   D2
                addq.w  #$02, D0
loc_15DD8:
                add.w   D0, D0
                move.w  $0034(A0), D1
                add.w   $00(A2, D0), D1
                move.w  D1, $000C(A0)
                add.w   $0030(A0), D2
                move.w  D2, $0008(A0)
                clr.w   $000E(A0)
                clr.w   $000A(A0)
                rts
loc_15DF8:
                bsr     loc_15ECA
                tst.w   $0012(A0)
                bpl.s   loc_15E1A
                bsr     J_ObjectFall_00         ; loc_15FFE
                move.w  $0034(A0), D0
                subi.w  #$002F, D0
                cmp.w   $000C(A0), D0
                bgt.s   loc_15E18
                bsr     J_ObjectFall_00         ; loc_15FFE
loc_15E18:
                rts
loc_15E1A:
                bsr     J_ObjectFall_00         ; loc_15FFE
                move.l  $003C(A0), A1
                lea     (loc_15EC0), A2
                moveq   #$00, D0
                move.b  $001A(A1), D0
                move.w  $0008(A0), D1
                sub.w   $0030(A0), D1
                bcc.s   loc_15E3A
                addq.w  #$02, D0
loc_15E3A:
                add.w   D0, D0
                move.w  $0034(A0), D1
                add.w   $00(A2, D0), D1
                cmp.w   $000C(A0), D1
                bgt.s   loc_15E8E
                move.l  $003C(A0), A1
                moveq   #$02, D1
                tst.w   $0010(A0)
                bmi.s   loc_15E58
                moveq   #$00, D1
loc_15E58:
                move.b  D1, $003A(A1)
                move.b  D1, $003A(A0)
                cmp.b   $001A(A1), D1
                beq.s   loc_15E82
                lea     ($FFFFB000).w, A2
                bclr    #$03, $0022(A1)
                beq.s   loc_15E74
                bsr.s   loc_15E90
loc_15E74:
                lea     ($FFFFB040).w, A2
                bclr    #$04, $0022(A1)
                beq.s   loc_15E82
                bsr.s   loc_15E90
loc_15E82:
                clr.w   $0010(A0)
                clr.w   $0012(A0)
                subq.b  #$02, $0024(A0)
loc_15E8E:                
                rts
loc_15E90:
                move.w  $0012(A0), $0012(A2)
                neg.w   $0012(A2)
                bset    #$01, $0022(A2)
                bclr    #$03, $0022(A2)
                clr.b   $003C(A2)
                move.b  #$10, $001C(A2)
                move.b  #$02, $0024(A2)
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6
loc_15EC0:                
                dc.w    $FFF8, $FFE4, $FFD1, $FFE4, $FFF8
loc_15ECA:
                move.b  ($FFFFFE05).w, D0
                andi.b  #$03, D0
                bne.s   loc_15EDA
                bchg    #5, $0002(A0)
loc_15EDA:
                andi.b  #$FE, $0001(A0)
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                bcs.s   loc_15EF0
                ori.b   #$01, $0001(A0)
loc_15EF0:
                rts                
loc_15EF2:                
                dc.b    $14, $14, $16, $18, $1A, $1C, $1A, $18, $16, $14, $13, $12, $11, $10, $0F, $0E
                dc.b    $0D, $0C, $0B, $0A, $09, $08, $07, $06, $05, $04, $03, $02, $01, $00, $FF, $FE
                dc.b    $FD, $FC, $FB, $FA, $F9, $F8, $F7, $F6, $F5, $F4, $F3, $F2, $F2, $F2, $F2, $F2
                dc.b    $F2
loc_15F23:
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $00
See_Saw_Mappings:                
loc_15F54:
                dc.w    loc_15F5C-loc_15F54
                dc.w    loc_15F9E-loc_15F54
                dc.w    loc_15F5C-loc_15F54
                dc.w    loc_15F9E-loc_15F54
loc_15F5C:
                dc.w    $0008
                dc.l    $FC054014, $400AFFF8, $0C012012, $2009FFFC
                dc.l    $E4054006, $4003FFD0, $EC05400A, $4005FFE0
                dc.l    $F405400A, $4005FFF0, $FC05400A, $40050000
                dc.l    $0405400A, $40050010, $0C05400E, $40070020
loc_15F9E:
                dc.w    $0008
                dc.l    $FC054014, $400AFFF8, $0C012012, $2009FFFC
                dc.l    $F4054000, $4000FFD0, $F4054002, $4001FFE0
                dc.l    $F4054002, $4001FFF0, $F4054002, $40010000
                dc.l    $F4054002, $40010010, $F4054800, $48000020 
See_Saw_Badnick_Mappings:                               
loc_15FE0:
                dc.w    loc_15FE4-loc_15FE0
                dc.w    loc_15FEE-loc_15FE0
loc_15FE4:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
loc_15FEE:
                dc.w    $0001
                dc.l    $F8052000, $2000FFF8  
;=============================================================================== 
; Object 0x14 - Hill Top See-saw badnick 
; [ End ]                         
;===============================================================================                   
J_Adjust2PArtPointer_00: ; loc_15FF8:
                jmp     Adjust2PArtPointer     ; loc_DC30  
J_ObjectFall_00: ; ; loc_15FFE:
                jmp     ObjectFall              ; loc_D24E   
loc_16004:
                jmp     loc_D2D8                                        
 
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x16 - Hill Top Teleferics
; [ Begin ]                         
;===============================================================================                    
Obj_0x16_Teleferics: ; loc_1600C:   
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1601A(PC, D0), D1
                jmp     loc_1601A(PC, D1)
loc_1601A:
                dc.w    loc_1601E-loc_1601A
                dc.w    loc_16064-loc_1601A
loc_1601E:
                addq.b  #$02, $0024(A0)
                move.l  #Teleferics_Mappings, $0004(A0)  ; loc_1611E
                move.w  #$43E6, $0002(A0)
                bsr     J_Adjust2PArtPointer_01 ; loc_16210
                ori.b   #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.b  #$00, $001A(A0)
                move.b  #$01, $0018(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0032(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsl.w   #$03, D0
                move.w  D0, $0034(A0)
loc_16064:
                move.w  $0008(A0), -(A7)
                bsr     loc_16080
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  #$FFD8, D3
                move.w  (A7)+, D4
                bsr     loc_F984
                bra     J_MarkObjGone_00        ; loc_1620A
loc_16080:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1608E(PC, D0), D1
                jmp     loc_1608E(PC, D1)
loc_1608E:
                dc.w    loc_16094-loc_1608E
                dc.w    loc_160BC-loc_1608E
                dc.w    loc_16102-loc_1608E
loc_16094:               
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   loc_160BA
                addq.b  #$02, $0025(A0)
                move.w  #$0200, $0010(A0)
                btst    #$00, $0022(A0)
                beq.s   loc_160B4
                neg.w   $0010(A0)
loc_160B4:
                move.w  #$0100, $0012(A0)
loc_160BA:
                rts
loc_160BC:
                bsr     J_SpeedToPos_00         ; loc_16216
                subq.w  #$01, $0034(A0)
                bne.s   loc_16100
                addq.b  #$02, $0025(A0)
                move.b  #$02, $001A(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0012(A0)
                bsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_16100
                move.b  #$1C, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  #$06, $0028(A1)
loc_16100:
                rts
loc_16102:
                bsr     J_SpeedToPos_00         ; loc_16216
                addi.w  #$0038, $0012(A0)
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs     J_DeleteObject_0B       ; loc_16204
                rts   
Teleferics_Mappings:
loc_1611E:
                dc.w    loc_16128-loc_1611E
                dc.w    loc_1617A-loc_1611E
                dc.w    loc_161BC-loc_1611E
                dc.w    loc_161CE-loc_1611E
                dc.w    loc_161E8-loc_1611E
loc_16128:
                dc.w    $000A
                dc.l    $C1050000, $0000FFE4, $D0030004, $0002FFE6
                dc.l    $F0030004, $0002FFE6, $10010008, $0004FFE7
                dc.l    $D505000A, $0005000C, $E003000E, $00070011
                dc.l    $10010012, $00090011, $0003000E, $00070011
                dc.l    $200D0014, $000AFFE0, $200D0814, $080A0000
loc_1617A:
                dc.w    $0008
                dc.l    $C1050000, $0000FFE4, $D0030004, $0002FFE6
                dc.l    $F0030004, $0002FFE6, $1001002C, $0016FFE6
                dc.l    $D505000A, $0005000C, $E003000E, $00070011
                dc.l    $1801002E, $00170011, $0003000E, $00070011
loc_161BC:
                dc.w    $0002
                dc.l    $200D0014, $000AFFE0, $200D0814, $080A0000
loc_161CE:
                dc.w    $0003
                dc.l    $D805001C, $000EFFF8, $E8070020, $0010FFF8
                dc.l    $08070020, $0010FFF8
loc_161E8:
                dc.w    $0003
                dc.l    $D8050028, $0014FFF8, $E8070820, $0810FFF8
                dc.l    $08070820, $0810FFF8   
                nop                             ;  Filler
J_DeleteObject_0B: ; loc_16204:
                jmp     DeleteObject            ; loc_D3B4
J_MarkObjGone_00: ; loc_1620A:           
                jmp     MarkObjGone             ; loc_D2A0
J_Adjust2PArtPointer_01: ; loc_16210:
                jmp     Adjust2PArtPointer     ; loc_DC30
J_SpeedToPos_00: ; loc_16216:
                jmp     SpeedToPos              ; loc_D27A               
;=============================================================================== 
; Object 0x16 - Hill Top Teleferics
; [ End ]                         
;===============================================================================                             
;=============================================================================== 
; Object 0x19 - Oil Ocean - Elevators
; [ Begin ]                         
;===============================================================================  
Obj_0x19_Elevator: ; loc_1621C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1622A(PC, D0), D1
                jmp     loc_1622A(PC, D1)
loc_1622A:
                dc.w    loc_16238-loc_1622A
                dc.w    loc_162A0-loc_1622A
loc_1622E                
                dc.b    $20, $00, $18, $01, $20, $02, $40, $03, $30, $04
loc_16238:
                addq.b  #$02, $0024(A0)
                move.l  #Elevator_Mappings, $0004(A0) ; loc_16412
                move.w  #$63A0, $0002(A0)
                cmpi.b  #$0A, ($FFFFFE10).w
                bne.s   loc_16258
                move.w  #$6300, $0002(A0)
loc_16258:
                bsr     J_Adjust2PArtPointer_02 ; loc_1645C
                move.b  #$04, $0001(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$001E, D0
                lea     loc_1622E(PC, D0), A2
                move.b  (A2)+, $0019(A0)
                move.b  (A2)+, $001A(A0)
                move.b  #$04, $0018(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0032(A0)
                andi.b  #$0F, $0028(A0)
                cmpi.b  #$07, $0028(A0)
                bne.s   loc_162A0
                subi.w  #$00C0, $000C(A0)
loc_162A0:
                move.w  $0008(A0), -(A7)
                bsr     loc_162D0
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  #$0010, D3
                move.w  (A7)+, D4
                bsr     loc_F984
                move.w  $0030(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_0C       ; loc_16456
                bra     J_DisplaySprite_01      ; loc_16450
loc_162D0:
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                add.w   D0, D0
                move.w  loc_162E4(PC, D0), D1
                jmp     loc_162E4(PC, D1)
loc_162E4:
                dc.w    loc_16304-loc_162E4
                dc.w    loc_1630E-loc_162E4
                dc.w    loc_1632E-loc_162E4
                dc.w    loc_1634E-loc_162E4
                dc.w    loc_1635E-loc_162E4
                dc.w    loc_1637E-loc_162E4
                dc.w    loc_16380-loc_162E4
                dc.w    loc_16380-loc_162E4
                dc.w    loc_1639C-loc_162E4
                dc.w    loc_1639C-loc_162E4
                dc.w    loc_1639C-loc_162E4
                dc.w    loc_1639C-loc_162E4
                dc.w    loc_163D6-loc_162E4
                dc.w    loc_163D6-loc_162E4
                dc.w    loc_163D6-loc_162E4
                dc.w    loc_163D6-loc_162E4
loc_16304:
                move.b  ($FFFFFE68).w, D0
                move.w  #$0040, D1
                bra.s   loc_16316
loc_1630E:
                move.b  ($FFFFFE6C).w, D0
                move.w  #$0060, D1
loc_16316:
                btst    #$00, $0022(A0)
                beq.s   loc_16322
                neg.w   D0
                add.w   D1, D0
loc_16322:
                move.w  $0030(A0), D1
                sub.w   D0, D1
                move.w  D1, $0008(A0)
                rts
loc_1632E:
                move.b  ($FFFFFE7C).w, D0
                move.w  #$0080, D1
                btst    #$00, $0022(A0)
                beq.s   loc_16342
                neg.w   D0
                add.w   D1, D0
loc_16342:
                move.w  $0032(A0), D1
                sub.w   D0, D1
                move.w  D1, $000C(A0)
                rts
loc_1634E:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   loc_1635C
                addq.b  #$01, $0028(A0)
loc_1635C:
                rts
loc_1635E:
                bsr     J_SpeedToPos_01         ; loc_16462
                moveq   #$08, D1
                move.w  $0032(A0), D0
                subi.w  #$0060, D0
                cmp.w   $000C(A0), D0
                bcc.s   loc_16374
                neg.w   D1
loc_16374:
                add.w   D1, $0012(A0)
                bne.s   loc_1637E
                addq.b  #$01, $0028(A0)
loc_1637E:
                rts
loc_16380:
                bsr     J_SpeedToPos_01         ; loc_16462
                moveq   #$08, D1
                move.w  $0032(A0), D0
                subi.w  #$0060, D0
                cmp.w   $000C(A0), D0
                bcc.s   loc_16396
                neg.w   D1
loc_16396:
                add.w   D1, $0012(A0)
                rts
loc_1639C:
                move.b  ($FFFFFE98).w, D1
                subi.b  #$40, D1
                ext.w   D1
                move.b  ($FFFFFE9C).w, D2
                subi.b  #$40, D2
                ext.w   D2
                btst    #$02, D0
                beq.s   loc_163BA
                neg.w   D1
                neg.w   D2
loc_163BA:
                btst    #$01, D0
                beq.s   loc_163C4
                neg.w   D1
                exg.l   D2, D1
loc_163C4:
                add.w   $0030(A0), D1
                move.w  D1, $0008(A0)
                add.w   $0032(A0), D2
                move.w  D2, $000C(A0)
                rts
loc_163D6:
                move.b  ($FFFFFE98).w, D1
                subi.b  #$40, D1
                ext.w   D1
                move.b  ($FFFFFE9C).w, D2
                subi.b  #$40, D2
                ext.w   D2
                btst    #$02, D0
                beq.s   loc_163F4
                neg.w   D1
                neg.w   D2
loc_163F4:
                btst    #$01, D0
                beq.s   loc_163FE
                neg.w   D1
                exg.l   D2, D1
loc_163FE:
                neg.w   D1
                add.w   $0030(A0), D1
                move.w  D1, $0008(A0)
                add.w   $0032(A0), D2
                move.w  D2, $000C(A0)
                rts
Elevator_Mappings:                
loc_16412:               
                dc.w    loc_16418-loc_16412
                dc.w    loc_1642A-loc_16412
                dc.w    loc_1643C-loc_16412
loc_16418:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFE0, $F00F0800, $08000000
loc_1642A:
                dc.w    $0002
                dc.l    $F00B0000, $0000FFE8, $F00B0800, $08000000
loc_1643C:
                dc.w    $0002
                dc.l    $F00E0000, $0000FFE0, $F00E0800, $08000000    
;=============================================================================== 
; Object 0x19 - Oil Ocean - Elevators
; [ End ]                         
;===============================================================================  
                nop                             ; Filler
J_DisplaySprite_01: ; loc_16450:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_0C: ; loc_16456:
                jmp     DeleteObject            ; (loc_D3B4)
J_Adjust2PArtPointer_02: ; loc_1645C:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SpeedToPos_01: ; loc_16462:
                jmp     SpeedToPos              ; (loc_D27A)   
                
;=============================================================================== 
; Object 0x1B - Chemical Plant - Speed Booster
; [ Begin ]                         
;===============================================================================                  
Obj_0x1B_Speed_Booster: ; loc_16468:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_16476(PC, D0), D1
                jmp     loc_16476(PC, D1)
loc_16476:
                dc.w    loc_1647E-loc_16476
                dc.w    loc_164B4-loc_16476                 
loc_1647A:
                dc.w    $1000, $0A00
loc_1647E:
                addq.b  #$02, $0024(A0)
                move.l  #Speed_Booster_Mappings, $0004(A0) ; loc_1658A
                move.w  #$E39C, $0002(A0)
                bsr     J_Adjust2PArtPointer_03 ; loc_165AA
                ori.b   #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  $0028(A0), D0
                andi.w  #$0002, D0
                move.w  loc_1647A(PC, D0), $0030(A0)
loc_164B4:
                move.b  ($FFFFFE05).w, D0
                andi.b  #$02, D0
                move.b  D0, $001A(A0)
                move.w  $0008(A0), D0
                move.w  D0, D1
                subi.w  #$0010, D0
                addi.w  #$0010, D1
                move.w  $000C(A0), D2
                move.w  D2, D3
                subi.w  #$0010, D2
                addi.w  #$0010, D3
                lea     ($FFFFB000).w, A1
                btst    #$01, $0022(A1)
                bne.s   loc_16510
                move.w  $0008(A1), D4
                cmp.w   D0, D4
                bcs     loc_16510
                cmp.w   D1, D4
                bcc     loc_16510
                move.w  $000C(A1), D4
                cmp.w   D2, D4
                bcs     loc_16510
                cmp.w   D3, D4
                bcc     loc_16510
                move.w  D0, -(A7)
                bsr     loc_16544
                move.w  (A7)+, D0
loc_16510:
                lea     ($FFFFB040).w, A1
                btst    #$01, $0022(A1)
                bne.s   loc_16540
                move.w  $0008(A1), D4
                cmp.w   D0, D4
                bcs     loc_16540
                cmp.w   D1, D4
                bcc     loc_16540
                move.w  $000C(A1), D4
                cmp.w   D2, D4
                bcs     loc_16540
                cmp.w   D3, D4
                bcc     loc_16540
                bsr     loc_16544
loc_16540:
                bra     J_MarkObjGone_01        ; loc_165A4
loc_16544:
                move.w  $0030(A0), $0010(A1)
                bclr    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                beq.s   loc_16562
                bset    #$00, $0022(A1)
                neg.w   $0010(A1)
loc_16562:
                move.w  #$000F, $002E(A1)
                move.w  $0010(A1), $0014(A1)
                bclr    #$05, $0022(A0)
                bclr    #$06, $0022(A0)
                bclr    #$05, $0022(A1)
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6
Speed_Booster_Mappings:                
loc_1658A:
                dc.w    loc_16590-loc_1658A
                dc.w    loc_16590-loc_1658A
                dc.w    loc_165A2-loc_1658A
loc_16590:
                dc.w    $0002
                dc.l    $F8050000, $0000FFE8, $F8050000, $00000008
loc_165A2:
                dc.w    $0000
;=============================================================================== 
; Object 0x1B - Chemical Plant - Speed Booster
; [ End ]                         
;===============================================================================  
J_MarkObjGone_01: ; loc_165A4:
                jmp     MarkObjGone             ; (loc_D2A0)
J_Adjust2PArtPointer_03: ; loc_165AA:
                jmp     Adjust2PArtPointer     ; (loc_DC30)   
;=============================================================================== 
; Object 0x1D - Chemical Plant - Worms
; [ Begin ]                         
;===============================================================================  
Obj_0x1D_Worms: ; loc_165B0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_165BE(PC, D0), D1
                jmp     loc_165BE(PC, D1)
loc_165BE:
                dc.w    loc_165D0-loc_165BE
                dc.w    loc_1667E-loc_165BE
                dc.w    loc_1669C-loc_165BE
                dc.w    loc_1667E-loc_165BE
                dc.w    loc_166D0-loc_165BE                 
;loc_165C8:
                dc.w    $FB80, $FB00, $FA00, $F900                  
loc_165D0:
                addq.b  #$02, $0024(A0)
                move.w  #$FB80, $0012(A0)
                moveq   #$00, D1
                move.b  $0028(A0), D1
                move.b  D1, D0
                andi.b  #$0F, D1
                moveq   #$02, D5
                andi.b  #$F0, D0
                beq.s   loc_165F0
                moveq   #$06, D5
loc_165F0:
                move.b  $0022(A0), D4
                moveq   #$00, D2
                move.l  A0, A1
                bra.s   loc_16600
loc_165FA:                
                bsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_16678
loc_16600:
                move.b  $0000(A0), $0000(A1)
                move.b  D5, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  #Worms_Mappings, $0004(A1) ; loc_16702
                move.w  #$643C, $0002(A1)
                bsr     J_Adjust2PArtPointer2_00 ; loc_16716
                move.b  #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$8B, $0020(A1)
                move.w  $0008(A1), $0038(A1)
                move.w  $000C(A1), $0030(A1)
                move.w  $0012(A0), $0012(A1)
                move.w  $0012(A1), $0034(A1)
                move.b  #$08, $0019(A1)
                move.w  #$0060, $003A(A1)
                move.w  #$000B, $0036(A1)
                andi.b  #$01, D4
                beq.s   loc_16672
                neg.w   $0036(A1)
                neg.w   $003A(A1)
loc_16672:
                move.w  D2, $0032(A1)
                addq.w  #$03, D2
loc_16678:
                dbra    D1, loc_165FA
                rts
loc_1667E:
                subq.w  #$01, $0032(A0)
                bpl.s   loc_16698
                addq.b  #$02, $0024(A0)
                move.w  #$003B, $0032(A0)
                move.w  #$00AE, D0
                jsr     (PlaySound)              ; loc_14C6
loc_16698:
                bra     J_MarkObjGone_02        ; loc_16710
loc_1669C:
                bsr     J_SpeedToPos_02         ; loc_1671C
                move.w  $0036(A0), D0
                add.w   D0, $0010(A0)
                addi.w  #$0018, $0012(A0)
                bne.s   loc_166B4
                neg.w   $0036(A0)
loc_166B4:
                move.w  $0030(A0), D0
                cmp.w   $000C(A0), D0
                bhi.s   loc_166CC
                move.w  $0034(A0), $0012(A0)
                clr.w   $0010(A0)
                subq.b  #$02, $0024(A0)
loc_166CC:
                bra     J_MarkObjGone_02        ; loc_16710
loc_166D0:
                bsr     J_SpeedToPos_02         ; loc_1671C
                addi.w  #$0018, $0012(A0)
                bne.s   loc_166E8
                move.w  $003A(A0), D0
                add.w   $0038(A0), D0
                move.w  D0, $0008(A0)
loc_166E8:
                move.w  $0030(A0), D0
                cmp.w   $000C(A0), D0
                bhi.s   loc_166FE
                move.w  $0034(A0), $0012(A0)
                move.w  $0038(A0), $0008(A0)
loc_166FE:
                bra     J_MarkObjGone_02        ; loc_16710
Worms_Mappings:                
loc_16702:
                dc.w    loc_16704-loc_16702
loc_16704:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8  
;=============================================================================== 
; Object 0x1D - Chemical Plant - Worms
; [ End ]                         
;===============================================================================               
                nop                             ; Filler
J_MarkObjGone_02: ; loc_16710:
                jmp     MarkObjGone             ; (loc_D2A0)
J_Adjust2PArtPointer2_00: ; loc_16716:
                jmp     Adjust2PArtPointer2   ; (loc_DC4C)
J_SpeedToPos_02: ; loc_1671C:
                jmp     SpeedToPos              ; (loc_D27A)   
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x1E - Chemical Plant - Tube Attributes
; [ Begin ]                         
;===============================================================================                  
Obj_0x1E_Tube_Attributes: ; loc_16724:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_16740(PC, D0), D1
                jsr     loc_16740(PC, D1)
                move.b  $002C(A0), D0
                add.b   $0036(A0), D0
                beq     loc_1716C
                rts
loc_16740:
                dc.w    loc_1674A-loc_16740
                dc.w    loc_1675E-loc_16740
loc_16744:                
                dc.w    $00A0, $0100, $0120
loc_1674A:
                addq.b  #$02, $0024(A0)
                move.b  $0028(A0), D0
                add.w   D0, D0
                andi.w  #$0006, D0
                move.w  loc_16744(PC, D0), $002A(A0)
loc_1675E:
                lea     ($FFFFB000).w, A1
                lea     $002C(A0), A4
                bsr.s   loc_16770
                lea     ($FFFFB040).w, A1
                lea     $0036(A0), A4
loc_16770:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  loc_1677C(PC, D0), D0
                jmp     loc_1677C(PC, D0)
loc_1677C:
                dc.w    loc_16784-loc_1677C
                dc.w    loc_16898-loc_1677C
                dc.w    loc_1697C-loc_1677C
                dc.w    loc_169E8-loc_1677C
loc_16784:
                tst.w   (Debug_placement_mode).w
                bne     loc_16896
                move.w  $002A(A0), D2
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                cmp.w   D2, D0
                bcc     loc_16896
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                cmpi.w  #$0080, D1
                bcc     loc_16896
                moveq   #$00, D3
                cmpi.w  #$00A0, D2
                beq.s   loc_167C6
                moveq   #$08, D3
                cmpi.w  #$0120, D2
                beq.s   loc_167C6
                moveq   #$04, D3
                neg.w   D0
                addi.w  #$0100, D0
loc_167C6:
                cmpi.w  #$0080, D0
                bcs.s   loc_167FC
                moveq   #$00, D2
                move.b  $0028(A0), D0
                lsr.w   #$02, D0
                andi.w  #$000F, D0
                move.b  loc_167EC(PC, D0), D2
                cmpi.b  #$02, D2
loc_167E0:
                bne.s   loc_16806
                move.b  ($FFFFFE04).w, D2
                andi.b  #$01, D2
                bra.s   loc_16806
loc_167EC:
                dc.b    $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $00, $02, $00, $01, $02, $01
loc_167FC:
                moveq   #$02, D2
                cmpi.w  #$0040, D1
                bcc.s   loc_16806
                moveq   #$03, D2
loc_16806:
                move.b  D2, $0001(A4)
                add.w   D3, D2
                add.w   D2, D2
                andi.w  #$001E, D2
                lea     loc_16AFE(PC), A2
                adda.w  $00(A2, D2), A2
                move.w  (A2)+, $0004(A4)
                subq.w  #$04, $0004(A4)
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                move.w  D5, $000C(A1)
                move.l  A2, $0006(A4)
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
loc_16840:
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                addq.b  #$02, (A4)
                move.b  #$81, $002A(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0800, $0014(A1)
                move.w  #$0000, $0010(A1)
loc_16860:
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
                bset    #$01, $0022(A1)
                move.b  #$00, $003C(A1)
                bclr    #$07, $0002(A1)
                move.w  #$0800, D2
                bsr     loc_16A80
                move.w  #$00BE, D0
                jsr     (PlaySound)              ; loc_14C6
loc_16896:
                rts
loc_16898:
                subq.b  #$01, $0002(A4)
                bpl.s   loc_168DC
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                move.w  D5, $000C(A1)
                tst.b   $0001(A4)
                bpl.s   loc_168BE
                subq.w  #$08, A2
loc_168BE:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4)
                beq.s   loc_16902
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                move.w  #$0800, D2
                bra     loc_16A80
loc_168DC:
                move.l  $0008(A1), D2
                move.l  $000C(A1), D3
                move.w  $0010(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A1)
                move.l  D3, $000C(A1)
                rts
loc_16902:
                cmpi.b  #$04, $0001(A4)
                bcc.s   loc_16924
                move.b  $0028(A0), D0
                andi.w  #$00FC, D0
                add.b   $0001(A4), D0
                move.b  #$04, $0001(A4)
                move.b  loc_1693C(PC, D0), D0
                bne     loc_16A10
loc_16924:
                andi.w  #$07FF, $000C(A1)
                move.b  #$06, (A4)
                clr.b   $002A(A1)
                move.w  #$00BC, D0
                jmp     (PlaySound)              ; loc_14C6
loc_1693C:
                dc.b    $02, $01, $00, $00, $FF, $03, $00, $00, $04, $FE, $00, $00, $FD, $FC, $00, $00
                dc.b    $FB, $FB, $00, $00, $07, $06, $00, $00, $F9, $FA, $00, $00, $08, $09, $00, $00
                dc.b    $F8, $F7, $00, $00, $0B, $0A, $00, $00, $0C, $00, $00, $00, $F5, $F6, $00, $00
                dc.b    $F4, $00, $00, $00, $00, $0D, $00, $00, $F3, $0E, $00, $00, $00, $F2, $00, $00
loc_1697C:
                subq.b  #$01, $0002(A4)
                bpl.s   loc_169B0
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
                tst.b   $0001(A4)
                bpl.s   loc_1699A
                subq.w  #$08, A2
loc_1699A:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4)
                beq.s   loc_169D6
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$0800, D2
                bra     loc_16A80
loc_169B0:
                move.l  $0008(A1), D2
                move.l  $000C(A1), D3
                move.w  $0010(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A1)
                move.l  D3, $000C(A1)
                rts
loc_169D6:
                andi.w  #$07FF, $000C(A1)
                clr.b   (A4)
                move.w  #$00BC, D0
                jmp     (PlaySound)              ; loc_14C6
loc_169E8:
                move.w  $002A(A0), D2
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                cmp.w   D2, D0
                bcc     loc_16A0C
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                cmpi.w  #$0080, D1
                bcc     loc_16A0C
                rts
loc_16A0C:
                clr.b   (A4)
                rts
loc_16A10:
                bpl.s   loc_16A42
                neg.b   D0
                move.b  #$FC, $0001(A4)
                add.w   D0, D0
                lea     (loc_17006), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D0
                subq.w  #$04, D0
                move.w  D0, $0004(A4)
                lea     $00(A2, D0), A2
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
                subq.w  #$08, A2
                bra.s   loc_16A62
loc_16A42:
                add.w   D0, D0
                lea     (loc_17006), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, $0004(A4)
                subq.w  #$04, $0004(A4)
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
loc_16A62:
                move.l  A2, $0006(A4)
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$0800, D2
                bsr     loc_16A80
                move.w  #$00BE, D0
                jsr     (PlaySound)              ; loc_14C6
                addq.b  #$02, (A4)
                rts
loc_16A80:
                moveq   #$00, D0
                move.w  D2, D3
                move.w  D4, D0
                sub.w   $0008(A1), D0
                bge.s   loc_16A90
                neg.w   D0
                neg.w   D2
loc_16A90:
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                bge.s   loc_16A9E
                neg.w   D1
                neg.w   D3
loc_16A9E:
                cmp.w   D0, D1
                bcs.s   loc_16AD0
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                swap.w  D1
                divs.w  D3, D1
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   $0008(A1), D0
                beq.s   loc_16ABC
                swap.w  D0
                divs.w  D1, D0
loc_16ABC:
                move.w  D0, $0010(A1)
                move.w  D3, $0012(A1)
                tst.w   D1
                bpl.s   loc_16ACA
                neg.w   D1
loc_16ACA:
                move.w  D1, $0002(A4)
                rts
loc_16AD0:
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   $0008(A1), D0
                swap.w  D0
                divs.w  D2, D0
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                beq.s   loc_16AEA
                swap.w  D1
                divs.w  D0, D1
loc_16AEA:
                move.w  D1, $0012(A1)
                move.w  D2, $0010(A1)
                tst.w   D0
                bpl.s   loc_16AF8
                neg.w   D0
loc_16AF8:
                move.w  D0, $0002(A4)
                rts
loc_16AFE:              
                dc.w    loc_16B16-loc_16AFE
                dc.w    loc_16B8C-loc_16AFE
                dc.w    loc_16BEA-loc_16AFE
                dc.w    loc_16C60-loc_16AFE
                dc.w    loc_16CBE-loc_16AFE
                dc.w    loc_16D30-loc_16AFE
                dc.w    loc_16D8E-loc_16AFE
                dc.w    loc_16E00-loc_16AFE
                dc.w    loc_16E5E-loc_16AFE
                dc.w    loc_16ED4-loc_16AFE
                dc.w    loc_16F32-loc_16AFE
                dc.w    loc_16FA8-loc_16AFE
loc_16B16:
                dc.w    $0074
                dc.w    $0090, $0010, $0090, $0070, $0040, $0070, $0035, $006F
                dc.w    $0028, $006A, $001E, $0062, $0015, $0058, $0011, $004A
                dc.w    $0010, $0040, $0011, $0035, $0015, $0027, $001E, $001E
                dc.w    $0028, $0015, $0035, $0011, $0040, $0010, $0050, $0010
                dc.w    $005E, $0012, $0068, $0018, $006D, $0024, $0070, $0030
                dc.w    $006D, $003D, $0068, $0048, $005E, $004E, $0050, $0050
                dc.w    $0030, $0050, $0022, $0052, $0017, $005A, $0011, $0063
                dc.w    $0010, $0070 
loc_16B8C:
                dc.w    $005C
                dc.w    $0090, $0010, $0090, $0070, $0040, $0070, $002E, $006E
                dc.w    $001D, $0062, $0013, $0053, $0010, $0040, $0013, $002D
                dc.w    $001D, $001E, $002E, $0013, $0040, $0010, $0058, $0010
                dc.w    $0064, $0014, $006C, $001A, $0070, $0028, $006C, $0036
                dc.w    $0064, $003C, $0058, $0040, $004B, $003D, $0040, $0038
                dc.w    $0036, $0032, $0028, $0030, $0010, $0030
loc_16BEA:
                dc.w    $0074
                dc.w    $0010, $0070, $0011, $0063, $0017, $005A, $0022, $0052
                dc.w    $0030, $0050, $0050, $0050, $005E, $004E, $0068, $0048
                dc.w    $006D, $003D, $0070, $0030, $006D, $0024, $0068, $0018
                dc.w    $005E, $0012, $0050, $0010, $0040, $0010, $0035, $0011
                dc.w    $0028, $0015, $001E, $001E, $0015, $0027, $0011, $0035
                dc.w    $0010, $0040, $0011, $004A, $0015, $0058, $001E, $0062
                dc.w    $0028, $006A, $0035, $006F, $0040, $0070, $0090, $0070
                dc.w    $0090, $0010
loc_16C60:
                dc.w    $005C
                dc.w    $0010, $0030, $0028, $0030, $0036, $0032, $0040, $0038
                dc.w    $004B, $003D, $0058, $0040, $0064, $003C, $006C, $0036
                dc.w    $0070, $0028, $006C, $001A, $0064, $0014, $0058, $0010
                dc.w    $0040, $0010, $002E, $0013, $001D, $001E, $0013, $002D
                dc.w    $0010, $0040, $0013, $0053, $001D, $0062, $002E, $006E
                dc.w    $0040, $0070, $0090, $0070, $0090, $0010
loc_16CBE:
                dc.w    $0070
                dc.w    $0010, $0010, $0010, $0070, $00C0, $0070, $00CA, $006F
                dc.w    $00D4, $006C, $00DB, $0068, $00E3, $0062, $00E8, $005A
                dc.w    $00ED, $0052, $00EF, $0048, $00F0, $0040, $00EF, $0036
                dc.w    $00ED, $002E, $00E8, $0026, $00E3, $001E, $00DB, $0017
                dc.w    $00D4, $0014, $00CA, $0012, $00C0, $0010, $00B7, $0011
                dc.w    $00AF, $0012, $00A6, $0017, $009E, $001E, $0097, $0026
                dc.w    $0093, $002E, $0091, $0036, $0090, $0040, $0090, $0070                  
loc_16D30:
                dc.w    $005C
                dc.w    $0010, $0010, $0010, $0070, $00C0, $0070, $00D2, $006E
                dc.w    $00E3, $0062, $00ED, $0053, $00F0, $0040, $00ED, $002D
                dc.w    $00E3, $001E, $00D2, $0013, $00C0, $0010, $00A8, $0010
                dc.w    $009C, $0014, $0094, $001A, $0090, $0028, $0094, $0036
                dc.w    $009C, $003C, $00A8, $0040, $00B5, $003D, $00C0, $0038
                dc.w    $00CA, $0032, $00D8, $0030, $00F0, $0030
loc_16D8E:
                dc.w    $0070
                dc.w    $0090, $0070, $0090, $0040, $0091, $0036, $0093, $002E
                dc.w    $0097, $0026, $009E, $001E, $00A6, $0017, $00AF, $0012
                dc.w    $00B7, $0011, $00C0, $0010, $00CA, $0012, $00D4, $0014
                dc.w    $00DB, $0017, $00E3, $001E, $00E8, $0026, $00ED, $002E
                dc.w    $00EF, $0036, $00F0, $0040, $00EF, $0048, $00ED, $0052
                dc.w    $00E8, $005A, $00E3, $0062, $00DB, $0068, $00D4, $006C
                dc.w    $00CA, $006F, $00C0, $0070, $0010, $0070, $0010, $0010                
loc_16E00:
                dc.w    $005C
                dc.w    $00F0, $0030, $00D8, $0030, $00CA, $0032, $00C0, $0038
                dc.w    $00B5, $003D, $00A8, $0040, $009C, $003C, $0094, $0036
                dc.w    $0090, $0028, $0094, $001A, $009C, $0014, $00A8, $0010
                dc.w    $00C0, $0010, $00D2, $0013, $00E3, $001E, $00ED, $002D
                dc.w    $00F0, $0040, $00ED, $0053, $00E3, $0062, $00D2, $006E
                dc.w    $00C0, $0070, $0010, $0070, $0010, $0010
loc_16E5E:
                dc.w    $0074
                dc.w    $0110, $0010, $0110, $0070, $0040, $0070, $0035, $006F
                dc.w    $0028, $006A, $001E, $0062, $0015, $0058, $0011, $004A
                dc.w    $0010, $0040, $0011, $0035, $0015, $0027, $001E, $001E
                dc.w    $0028, $0015, $0035, $0011, $0040, $0010, $0050, $0010
                dc.w    $005E, $0012, $0068, $0018, $006D, $0024, $0070, $0030
                dc.w    $006D, $003D, $0068, $0048, $005E, $004E, $0050, $0050
                dc.w    $0030, $0050, $0022, $0052, $0017, $005A, $0011, $0063
                dc.w    $0010, $0070
loc_16ED4:
                dc.w    $005C
                dc.w    $0110, $0010, $0110, $0070, $0040, $0070, $002E, $006E
                dc.w    $001D, $0062, $0013, $0053, $0010, $0040, $0013, $002D
                dc.w    $001D, $001E, $002E, $0013, $0040, $0010, $0058, $0010
                dc.w    $0064, $0014, $006C, $001A, $0070, $0028, $006C, $0036
                dc.w    $0064, $003C, $0058, $0040, $004B, $003D, $0040, $0038
                dc.w    $0036, $0032, $0028, $0030, $0010, $0030
loc_16F32:
                dc.w    $0074
                dc.w    $0010, $0070, $0011, $0063, $0017, $005A, $0022, $0052
                dc.w    $0030, $0050, $0050, $0050, $005E, $004E, $0068, $0048
                dc.w    $006D, $003D, $0070, $0030, $006D, $0024, $0068, $0018
                dc.w    $005E, $0012, $0050, $0010, $0040, $0010, $0035, $0011
                dc.w    $0028, $0015, $001E, $001E, $0015, $0027, $0011, $0035
                dc.w    $0010, $0040, $0011, $004A, $0015, $0058, $001E, $0062
                dc.w    $0028, $006A, $0035, $006F, $0040, $0070, $0110, $0070
                dc.w    $0110, $0010
loc_16FA8:
                dc.w    $005C
                dc.w    $0010, $0030, $0028, $0030, $0036, $0032, $0040, $0038
                dc.w    $004B, $003D, $0058, $0040, $0064, $003C, $006C, $0036
                dc.w    $0070, $0028, $006C, $001A, $0064, $0014, $0058, $0010
                dc.w    $0040, $0010, $002E, $0013, $001D, $001E, $0013, $002D
                dc.w    $0010, $0040, $0013, $0053, $001D, $0062, $002E, $006E
                dc.w    $0040, $0070, $0110, $0070, $0110, $0010
loc_17006:
                dc.w    loc_17024-loc_17006
                dc.w    loc_17024-loc_17006
                dc.w    loc_1703A-loc_17006
                dc.w    loc_17064-loc_17006
                dc.w    loc_1707A-loc_17006
                dc.w    loc_17090-loc_17006
                dc.w    loc_170A6-loc_17006
                dc.w    loc_170B8-loc_17006
                dc.w    loc_170D2-loc_17006
                dc.w    loc_170EC-loc_17006
                dc.w    loc_170FE-loc_17006
                dc.w    loc_17110-loc_17006
                dc.w    loc_1712A-loc_17006
                dc.w    loc_17140-loc_17006
                dc.w    loc_1714E-loc_17006
loc_17024:
                dc.w    $0014
                dc.w    $0790, $03B0, $0710, $03B0, $0710, $06B0, $0A90, $06B0
                dc.w    $0A90, $0670
loc_1703A:
                dc.w    $0028
                dc.w    $0790, $03F0, $0790, $04B0, $0A00, $04B0, $0C10, $04B0
                dc.w    $0C10, $0330, $0D90, $0330, $0D90, $01B0, $0F10, $01B0
                dc.w    $0F10, $02B0, $0F90, $02B0
loc_17064:
                dc.w    $0014
                dc.w    $0AF0, $0630, $0E90, $0630, $0E90, $06B0, $0F90, $06B0
                dc.w    $0F90, $0670
loc_1707A:
                dc.w    $0014
                dc.w    $0F90, $02F0, $0F90, $04B0, $0F10, $04B0, $0F10, $0630
                dc.w    $0F90, $0630
loc_17090:
                dc.w    $0014
                dc.w    $1410, $0530, $1190, $0530, $1190, $06B0, $1410, $06B0
                dc.w    $1410, $0570
loc_170A6:
                dc.w    $0010
                dc.w    $1AF0, $0530, $1B90, $0530, $1B90, $0330, $1E10, $0330
loc_170B8:
                dc.w    $0018
                dc.w    $1A90, $0570, $1A90, $05B0, $1C10, $05B0, $1C10, $0430
                dc.w    $1E10, $0430, $1E10, $0370
loc_170D2:
                dc.w    $0018
                dc.w    $2490, $0370, $2490, $03D0, $2390, $03D0, $2390, $05D0
                dc.w    $2510, $05D0, $2510, $0570
loc_170EC:
                dc.w    $0010
                dc.w    $24F0, $0330, $2590, $0330, $2590, $0530, $2570, $0530
loc_170FE:
                dc.w    $0010
                dc.w    $0310, $0330, $0290, $0330, $0290, $0230, $0490, $0230
loc_17110:
                dc.w    $0018
                dc.w    $0310, $0370, $0310, $03B0, $0410, $03B0, $0410, $02B0
                dc.w    $0490, $02B0, $0490, $0270
loc_1712A:
                dc.w    $0014
                dc.w    $0490, $06F0, $0490, $0730, $0690, $0730, $0890, $0730
                dc.w    $0890, $06F0
loc_17140:
                dc.w    $000C
                dc.w    $0BF0, $0330, $0D90, $0330, $0D90, $02F0
loc_1714E:
                dc.w    $001C
                dc.w    $0D90, $02B0, $0C90, $02B0, $0C90, $00B0, $0E80, $00B0
                dc.w    $1110, $00B0, $1110, $0230, $10F0, $0230 
;=============================================================================== 
; Object 0x1E - Chemical Plant - Tube Attributes
; [ End ]                         
;===============================================================================                   
loc_1716C:
                jmp     (loc_D30C) 
                dc.w    $0000                   ; Filler  
                
;=============================================================================== 
; Object 0x20 - Fireball - Hill Top 
; [ Begin ]                         
;===============================================================================  
Obj_0x20_Fireball: ; loc_17174:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_17182(PC, D0), D1
                jmp     loc_17182(PC, D1)
loc_17182:
                dc.w    loc_17190-loc_17182
                dc.w    loc_171F2-loc_17182
                dc.w    loc_17200-loc_17182
                dc.w    loc_1729A-loc_17182
                dc.w    loc_172C0-loc_17182
                dc.w    loc_1734E-loc_17182
                dc.w    loc_173AE-loc_17182
loc_17190:
                addq.b  #$02, $0024(A0)
                move.b  #$08, $0016(A0)
                move.b  #$08, $0017(A0)
                move.l  #Fireball_Mappings, $0004(A0) ; loc_173D0
                move.w  #$8416, $0002(A0)
                bsr     J_Adjust2PArtPointer_04 ; loc_17470
                ori.b   #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$08, $0019(A0)
                move.w  $000C(A0), $0030(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsl.w   #$03, D0
                andi.w  #$0780, D0
                neg.w   D0
                move.w  D0, $0010(A0)
                move.w  D0, $0012(A0)
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                lsl.w   #$04, D0
                move.w  D0, $0032(A0)
                move.w  D0, $0034(A0)
loc_171F2:
                lea     (loc_173B2), A1
                bsr     J_AnimateSprite_00      ; loc_1746A
                bra     J_MarkObjGone_03        ; loc_1745E
loc_17200:
                cmpi.b  #$05, $001E(A0)
                bne.s   loc_17230
                bsr     J_SingleObjLoad2_00 ; loc_17464
                bne.s   loc_17222
                bsr.s   loc_1723E
                bsr     J_SingleObjLoad2_00 ; loc_17464
                bne.s   loc_17222
                bsr.s   loc_1723E
                neg.w   $0010(A1)
                bset    #$00, $0001(A1)
loc_17222:
                move.w  #$00AE, D0
                jsr     (PlaySound)              ; loc_14C6
                addq.b  #$02, $0024(A0)
loc_17230:
                lea     (loc_173B2), A1
                bsr     J_AnimateSprite_00      ; loc_1746A
                bra     J_MarkObjGone_03        ; loc_1745E
loc_1723E:
                move.b  #$20, $0000(A1)
                move.b  #$08, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0010(A0), $0010(A1)
                move.w  $0012(A0), $0012(A1)
                move.b  #$08, $0016(A1)
                move.b  #$08, $0017(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$08, $0019(A1)
                move.b  #$8B, $0020(A1)
                move.w  $000C(A1), $0030(A1)
                rts
loc_1729A:
                subq.w  #$01, $0032(A0)
                bpl.s   loc_172B2
                move.w  $0034(A0), $0032(A0)
                move.b  #$02, $0024(A0)
                move.w  #$0001, $001C(A0)
loc_172B2:
                lea     (loc_173B2), A1
                bsr     J_AnimateSprite_00      ; loc_1746A
                bra     J_MarkObjGone_03        ; loc_1745E
loc_172C0:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_172D6
                move.b  #$07, $001E(A0)
                addq.b  #$01, $001A(A0)
                andi.b  #$01, $001A(A0)
loc_172D6:
                bsr     J_SpeedToPos_03         ; loc_17476
                addi.w  #$0018, $0012(A0)
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcc.s   loc_172F2
                bra     J_DeleteObject_0D       ; loc_17458
loc_172F2:
                bclr    #$01, $0001(A0)
                tst.w   $0012(A0)
                bmi.s   loc_1734A
                bset    #$01, $0001(A0)
                bsr     ObjHitFloor             ; loc_13898
                tst.w   D1
                bpl.s   loc_1734A
                add.w   D1, $000C(A0)
                addq.b  #$02, $0024(A0)
                move.b  #$02, $001C(A0)
                move.b  #$04, $001A(A0)
                move.w  #$0000, $0012(A0)
                move.l  #$00017410, $0004(A0)
                move.w  #$839E, $0002(A0)
                bsr     J_Adjust2PArtPointer_04 ; loc_17470
                move.b  #$00, $001A(A0)
                move.w  #$0009, $0032(A0)
                move.b  #$03, $0036(A0)
loc_1734A:
                bra     J_MarkObjGone_03        ; loc_1745E
loc_1734E:
                subq.w  #$01, $0032(A0)
                bpl.s   loc_173A0
                move.w  #$007F, $0032(A0)
                subq.b  #$01, $0036(A0)
                bmi.s   loc_173A0
                bsr     J_SingleObjLoad2_00 ; loc_17464
                bne.s   loc_173A0
                moveq   #$00, D0
                move.w  #$000F, D1
loc_1736C:                
                move.l  $00(A0, D0), $00(A1, D0)
                addq.w  #$04, D0
                dbra    D1, loc_1736C
                move.w  #$0009, $0032(A1)
                move.w  #$0200, $001C(A1)
                move.w  #$000E, D0
                tst.w   $0010(A1)
                bpl.s   loc_17390
                neg.w   D0
loc_17390:
                add.w   D0, $0008(A1)
                move.l  A1, -(A7)
                bsr     loc_138CE
                move.l  (A7)+, A1
                add.w   D1, $000C(A1)
loc_173A0:
                lea     (loc_173B2), A1
                bsr     J_AnimateSprite_00      ; loc_1746A
                bra     J_MarkObjGone_03        ; loc_1745E
loc_173AE:
                bra     J_DeleteObject_0D       ; loc_17458
loc_173B2:
                dc.w    loc_173B8-loc_173B2
                dc.w    loc_173BF-loc_173B2
                dc.w    loc_173C2-loc_173B2
loc_173B8:
                dc.b    $0B, $02, $03, $FC, $04, $FD, $01
loc_173BF:
                dc.b    $7F, $05, $FF
loc_173C2:
                dc.b    $05, $04, $05, $02, $03, $00, $01, $00, $01, $02, $03, $04, $05, $FC
Fireball_Mappings:                
loc_173D0:
                dc.w    loc_173DC-loc_173D0
                dc.w    loc_173E6-loc_173D0
                dc.w    loc_173F0-loc_173D0
                dc.w    loc_173FA-loc_173D0
                dc.w    loc_17404-loc_173D0
                dc.w    loc_1740E-loc_173D0
loc_173DC:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
loc_173E6:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
loc_173F0:
                dc.w    $0001
                dc.l    $F9050008, $0004FFF8
loc_173FA:
                dc.w    $0001
                dc.l    $F6050008, $0004FFF8
loc_17404:
                dc.w    $0001
                dc.l    $F605000C, $0006FFF8
loc_1740E:
                dc.w    $0000
loc_17410_B:
                dc.w    loc_1741C-loc_17410_B
                dc.w    loc_17426-loc_17410_B
                dc.w    loc_17430-loc_17410_B
                dc.w    loc_1743A-loc_17410_B
                dc.w    loc_17444-loc_17410_B
                dc.w    loc_1744E-loc_17410_B
loc_1741C:
                dc.w    $0001
                dc.l    $F0070000, $0000FFF8
loc_17426:
                dc.w    $0001
                dc.l    $F0070800, $0800FFF8
loc_17430:
                dc.w    $0001
                dc.l    $F0070008, $0004FFF8
loc_1743A:
                dc.w    $0001
                dc.l    $F0070808, $0804FFF8
loc_17444:
                dc.w    $0001
                dc.l    $00050010, $0008FFF8
loc_1744E:
                dc.w    $0001
                dc.l    $00050810, $0808FFF8    
J_DeleteObject_0D: ; loc_17458:
                jmp     DeleteObject            ; (loc_D3B4)
J_MarkObjGone_03: ; loc_1745E:
                jmp     MarkObjGone             ; (loc_D2A0)
J_SingleObjLoad2_00: ; loc_17464:
                jmp     SingleObjLoad2      ; (loc_E788)
J_AnimateSprite_00: ; loc_1746A:
                jmp     AnimateSprite           ; (loc_D412)
J_Adjust2PArtPointer_04: ; loc_17470:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SpeedToPos_03: ; loc_17476:
                jmp     SpeedToPos              ; (loc_D27A)        
;=============================================================================== 
; Object 0x20 - Fireball - Hill Top 
; [ End ]                         
;=============================================================================== 
;=============================================================================== 
; Object 0x2F - Hill Top - Breakable Floor
; [ Begin ]                         
;=============================================================================== 
Obj_0x2F_Breakable_Floor: ; loc_1747C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1748A(PC, D0), D1
                jmp     loc_1748A(PC, D1)
loc_1748A:
                dc.w    loc_1749A-loc_1748A
                dc.w    loc_174D8-loc_1748A
                dc.w    loc_1764C-loc_1748A
loc_17490:
                dc.b    $24, $00, $20, $02, $18, $04, $10, $06, $08, $08
loc_1749A:
                addq.b  #$02, $0024(A0)
                move.l  #Breakable_Floor_Mappings, $0004(A0) ; loc_1786A
                move.w  #$C000, $0002(A0)
                bsr     J_Adjust2PArtPointer_05 ; loc_17A34
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$001E, D0
                lea     loc_17490(PC, D0), A2
                move.b  (A2)+, $0016(A0)
                move.b  (A2)+, $001A(A0)
loc_174D8:
                move.w  ($FFFFF7D0).w, $0038(A0)
                move.b  ($FFFFB01C).w, $0032(A0)
                move.b  ($FFFFB05C).w, $0033(A0)
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_00        ; loc_17A40
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   loc_17514
loc_17510:                
                bra     J_MarkObjGone_04        ; loc_17A2E
loc_17514:
                cmpi.b  #$18, D0
                bne.s   loc_17578
                cmpi.b  #$02, $0032(A0)
                bne.s   loc_17530
                tst.b   $0028(A0)
                bmi.s   loc_17560
                cmpi.b  #$0E, ($FFFFB03E).w
                beq.s   loc_17560
loc_17530:
                move.b  #$0C, ($FFFFB03E).w
                move.b  #$0D, ($FFFFB03F).w
                cmpi.b  #$02, $0033(A0)
                bne.s   loc_17552
                tst.b   $0028(A0)
                bmi.s   loc_17560
                cmpi.b  #$0E, ($FFFFB07E).w
                beq.s   loc_17560
loc_17552:
                move.b  #$0C, ($FFFFB07E).w
                move.b  #$0D, ($FFFFB07F).w
                bra.s   loc_17510
loc_17560:
                lea     ($FFFFB000).w, A1
                move.b  $0032(A0), D0
                bsr.s   loc_175AE
                lea     ($FFFFB040).w, A1
                move.b  $0033(A0), D0
                bsr.s   loc_175AE
                bra     loc_17614
loc_17578:
                move.b  D0, D1
                andi.b  #$08, D1
                beq.s   loc_175E0
                cmpi.b  #$02, $0032(A0)
                bne.s   loc_17596
                tst.b   $0028(A0)
                bmi.s   loc_175A6
                cmpi.b  #$0E, ($FFFFB03E).w
                beq.s   loc_175A6
loc_17596:
                move.b  #$0C, ($FFFFB03E).w
                move.b  #$0D, ($FFFFB03F).w
                bra     loc_17510
loc_175A6:
                lea     ($FFFFB000).w, A1
                bsr.s   loc_175B4
                bra.s   loc_17614
loc_175AE:
                cmpi.b  #$02, D0
                bne.s   loc_175CC
loc_175B4:
                bset    #$02, $0022(A1)
                move.b  #$0E, $0016(A1)
                move.b  #$07, $0017(A1)
                move.b  #$02, $001C(A1)
loc_175CC:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                rts
loc_175E0:
                andi.b  #$10, D0
                beq     loc_17510
                cmpi.b  #$02, $0033(A0)
                bne.s   loc_175FE
                tst.b   $0028(A0)
                bmi.s   loc_1760E
                cmpi.b  #$0E, ($FFFFB07E).w
                beq.s   loc_1760E
loc_175FE:
                move.b  #$0C, ($FFFFB07E).w
                move.b  #$0D, ($FFFFB07F).w
                bra     loc_17510
loc_1760E:
                lea     ($FFFFB040).w, A1
                bsr.s   loc_175B4
loc_17614:
                move.w  $0038(A0), ($FFFFF7D0).w
                andi.b  #$E7, $0022(A0)
                lea     (loc_17662), A4
                moveq   #$00, D0
                move.b  $001A(A0), D0
                addq.b  #$01, $001A(A0)
                move.l  D0, D1
                add.w   D0, D0
                add.w   D0, D0
                lea     $00(A4, D0), A4
                neg.w   D1
                addi.w  #$0009, D1
                move.w  #$0018, D2
                bsr     loc_17A3A
                bsr     loc_17818
loc_1764C:
                bsr     J_SpeedToPos_04         ; loc_17A46
                addi.w  #$0018, $0012(A0)
                tst.b   $0001(A0)
                bpl     J_DeleteObject_0E       ; loc_17A22
                bra     J_DisplaySprite_02      ; loc_17A1C  
loc_17662:
                dc.w    $FF00, $F800, $0100, $F800, $FF20, $F900, $00E0, $F900
                dc.w    $FF40, $FA00, $00C0, $FA00, $FF60, $FB00, $00A0, $FB00
                dc.w    $FF80, $FC00, $0080, $FC00  
;=============================================================================== 
; Object 0x2F - Hill Top - Breakable Floor
; [ End ]                         
;===============================================================================  
;=============================================================================== 
; Object 0x32 - Rock - Hill Top / Tunel Obstacule - Chemical Plant
; [ Begin ]                         
;=============================================================================== 
Obj_0x32_Breakable_Obstacule: ; loc_1768A:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_17698(PC, D0), D1
                jmp     loc_17698(PC, D1)
loc_17698:
                dc.w    loc_1769E-loc_17698
                dc.w    loc_176F2-loc_17698
                dc.w    loc_177DA-loc_17698
loc_1769E:
                addq.b  #$02, $0024(A0)
                move.l  #Rock_Mappings, $0004(A0) ; loc_179C2
                move.w  #$43B2, $0002(A0)
                move.b  #$18, $0019(A0)
                move.l  #loc_177F0, $003C(A0)
                cmpi.b  #$0D, ($FFFFFE10).w
                bne.s   loc_176E2
                move.l  #Tunel_Obstacule_Mappings, $0004(A0) ; loc_179F6
                move.w  #$6430, $0002(A0)
                move.b  #$10, $0019(A0)
                move.l  #loc_17808, $003C(A0)
loc_176E2:
                bsr     J_Adjust2PArtPointer_05 ; loc_17A34
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
loc_176F2:
                move.w  ($FFFFF7D0).w, $0038(A0)
                move.b  ($FFFFB01C).w, $0032(A0)
                move.b  ($FFFFB05C).w, $0033(A0)
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_00        ; loc_17A40
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   loc_1772C
loc_17728:                
                bra     J_MarkObjGone_04        ; loc_17A2E
loc_1772C:
                cmpi.b  #$18, D0
                bne.s   loc_1775A
                cmpi.b  #$02, $0032(A0)
                beq.s   loc_17742
                cmpi.b  #$02, $0033(A0)
                bne.s   loc_17728
loc_17742:
                lea     ($FFFFB000).w, A1
                move.b  $0032(A0), D0
                bsr.s   loc_17772
                lea     ($FFFFB040).w, A1
                move.b  $0033(A0), D0
                bsr.s   loc_17772
                bra     loc_177C2
loc_1775A:
                move.b  D0, D1
                andi.b  #$08, D1
                beq.s   loc_177AA
                cmpi.b  #$02, $0032(A0)
                bne.s   loc_17728
                lea     ($FFFFB000).w, A1
                bsr.s   loc_17778
                bra.s   loc_177C2
loc_17772:
                cmpi.b  #$02, D0
                bne.s   loc_17796
loc_17778:
                bset    #$02, $0022(A1)
                move.b  #$0E, $0016(A1)
                move.b  #$07, $0017(A1)
                move.b  #$02, $001C(A1)
                move.w  #$FD00, $0012(A1)
loc_17796:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                rts
loc_177AA:
                andi.b  #$10, D0
                beq     loc_17728
                cmpi.b  #$02, $0033(A0)
                bne     loc_17728
                lea     ($FFFFB040).w, A1
                bsr.s   loc_17778
loc_177C2:
                move.w  $0038(A0), ($FFFFF7D0).w
                andi.b  #$E7, $0022(A0)
                move.l  $003C(A0), A4
                bsr     loc_17A3A
                bsr     loc_17818
loc_177DA:
                bsr     J_SpeedToPos_04         ; loc_17A46
                addi.w  #$0018, $0012(A0)
                tst.b   $0001(A0)
                bpl     J_DeleteObject_0E       ; loc_17A22
                bra     J_DisplaySprite_02      ; loc_17A1C
loc_177F0:
                dc.w    $FE00, $FE00, $0000, $FD80, $0200, $FE00, $FE40, $FE40
                dc.w    $0000, $FE00, $01C0, $FE40
loc_17808:
                dc.w    $FF00, $FE00, $0100, $FE00, $FF40, $FE40, $00C0, $FE40                
;=============================================================================== 
; Object 0x32 - Rock - Hill Top / Tunel Obstacule - Chemical Plant
; [ End ]                         
;===============================================================================              
loc_17818:
                bsr     J_SingleObjLoad_00   ; loc_17A28
                bne.s   loc_17860
                move.b  #$29, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  ($FFFFF7D0).w, D2
                addq.w  #$02, ($FFFFF7D0).w
                cmpi.w  #$0006, D2
                bcs.s   loc_17840
                moveq   #$06, D2
loc_17840:
                moveq   #$00, D0
                move.w  loc_17862(PC, D2), D0
                cmpi.w  #$0020, ($FFFFF7D0).w
                bcs.s   loc_17854
                move.w  #$03E8, D0
                moveq   #$0A, D2
loc_17854:
                jsr     AddPoints               ; (loc_22FD0)
                lsr.w   #$01, D2
                move.b  D2, $001A(A1)
loc_17860:
                rts
loc_17862:
                dc.w    $000A, $0014, $0032, $0064
Breakable_Floor_Mappings:                
loc_1786A:
                dc.w    loc_1787E-loc_1786A
                dc.w    loc_178C8-loc_1786A
                dc.w    loc_1791A-loc_1786A
                dc.w    loc_1791A-loc_1786A
                dc.w    loc_1795C-loc_1786A
                dc.w    loc_1795C-loc_1786A
                dc.w    loc_1798E-loc_1786A
                dc.w    loc_1798E-loc_1786A
                dc.w    loc_179B0-loc_1786A
                dc.w    loc_179B0-loc_1786A
loc_1787E:
                dc.w    $0009
                dc.l    $D80D0012, $0009FFF0, $E805004A, $0025FFF0
                dc.l    $E805004A, $00250000, $F805004E, $0027FFF0
                dc.l    $F805004E, $00270000, $08050052, $0029FFF0
                dc.l    $08050052, $00290000, $18050052, $0029FFF0
                dc.l    $18050052, $00290000
loc_178C8:
                dc.w    $000A
                dc.l    $D8050012, $0009FFF0, $D8050016, $000B0000
                dc.l    $E805004A, $0025FFF0, $E805004A, $00250000
                dc.l    $F805004E, $0027FFF0, $F805004E, $00270000
                dc.l    $08050052, $0029FFF0, $08050052, $00290000
                dc.l    $18050052, $0029FFF0, $18050052, $00290000
loc_1791A:
                dc.w    $0008
                dc.l    $E005004A, $0025FFF0, $E005004A, $00250000
                dc.l    $F005004E, $0027FFF0, $F005004E, $00270000
                dc.l    $00050052, $0029FFF0, $00050052, $00290000
                dc.l    $10050052, $0029FFF0, $10050052, $00290000
loc_1795C:
                dc.w    $0006
                dc.l    $E805004E, $0027FFF0, $E805004E, $00270000
                dc.l    $F8050052, $0029FFF0, $F8050052, $00290000
                dc.l    $08050052, $0029FFF0, $08050052, $00290000
loc_1798E:
                dc.w    $0004
                dc.l    $F0050052, $0029FFF0, $F0050052, $00290000
                dc.l    $00050052, $0029FFF0, $00050052, $00290000
loc_179B0:
                dc.w    $0002
                dc.l    $F8050052, $0029FFF0, $F8050052, $00290000 
Rock_Mappings:                              
loc_179C2:
                dc.w    loc_179C4-loc_179C2
loc_179C4:
                dc.w    $0006
                dc.l    $F0050000, $0000FFE8, $F0050004, $0002FFF8
                dc.l    $F0050008, $00040008, $0005000C, $0006FFE8
                dc.l    $00050010, $0008FFF8, $00050010, $00080008
Tunel_Obstacule_Mappings:                  
loc_179F6:
                dc.w    loc_179F8-loc_179F6
loc_179F8:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF0, $F0050800, $08000000
                dc.l    $00050000, $0000FFF0, $00050800, $08000000
                nop                             ; Filler               
J_DisplaySprite_02: ; loc_17A1C:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_0E: ; loc_17A22:
                jmp     DeleteObject            ; (loc_D3B4)
J_SingleObjLoad_00: ; loc_17A28:
                jmp     SingleObjLoad        ; (loc_E772)
J_MarkObjGone_04: ; loc_17A2E:
                jmp     MarkObjGone             ; (loc_D2A0)
J_Adjust2PArtPointer_05: ; loc_17A34:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
loc_17A3A:
                jmp     (BreakObjectToPieces)
J_SolidObject_00: ; loc_17A40:
                jmp     SolidObject             ; (loc_F4A0)
J_SpeedToPos_04: ; loc_17A46:
                jmp     SpeedToPos              ; (loc_D27A) 
                
;=============================================================================== 
; Object 0x30 - 
; [ Begin ]                         
;===============================================================================                  
Obj_0x30: ; loc_17A4C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_17A5A(PC, D0), D1
                jmp     loc_17A5A(PC, D1)
loc_17A5A:
                dc.w    loc_17A68-loc_17A5A
                dc.w    loc_17AB4-loc_17A5A
loc_17A5E:
                dc.w    $C000, $C000, $C000, $E000, $FF00
loc_17A68:
                addq.b  #$02, $0024(A0)
                move.w  $000C(A0), $0032(A0)
                move.w  $0008(A0), $0030(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.b  loc_17A5E(PC, D0), $0019(A0)
                cmpi.b  #$06, D0
                bcs.s   loc_17AB4
                bne.s   loc_17A96
                cmpi.w  #$0380, ($FFFFEE04).w
                bcc.s   loc_17AB4
                bra.s   loc_17A9E
loc_17A96:
                cmpi.w  #$0380, ($FFFFEE04).w
                bcs.s   loc_17AB4
loc_17A9E:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_17AB0
                bclr    #$07, $02(A2, D0)
loc_17AB0:
                bra     J_DeleteObject_0F       ; loc_17C80
loc_17AB4:
                move.w  $0032(A0), D0
                add.w   ($FFFFEEE4).w, D0
                move.w  D0, $000C(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.w  loc_17AD8(PC, D0), D1
                jsr     loc_17AD8(PC, D1)
                tst.b   ($FFFFEEBC).w
                beq     loc_17C8C
                rts
loc_17AD8:
                dc.w    loc_17AE2-loc_17AD8
                dc.w    loc_17AE2-loc_17AD8
                dc.w    loc_17AFA-loc_17AD8
                dc.w    loc_17B40-loc_17AD8
                dc.w    loc_17B5A-loc_17AD8
loc_17AE2:
                move.w  #$00CB, D1
                move.w  #$0080, D2
                move.w  #$0081, D3
                move.w  $0008(A0), D4
                bsr     loc_17C92
                bra     loc_FBF4
loc_17AFA:
                move.w  #$00CB, D1
                move.w  #$0078, D2
                move.w  #$0079, D3
                move.w  $0008(A0), D4
                bsr     loc_17C92
                bsr     loc_FBF4
loc_17B12:               
                btst    #$03, $0022(A0)
                beq.s   loc_17B28
                move.l  A0, -(A7)
                move.l  A0, A1
                lea     ($FFFFB000).w, A0
                bsr     loc_17C86
                move.l  (A7)+, A0
loc_17B28:
                btst    #$04, $0022(A0)
                beq.s   loc_17B3E
                move.l  A0, -(A7)
                move.l  A0, A1
                lea     ($FFFFB040).w, A0
                bsr     loc_17C86
                move.l  (A7)+, A0
loc_17B3E:
                rts
loc_17B40:
                move.w  #$00EB, D1
                move.w  #$0078, D2
                move.w  #$0079, D3
                move.w  $0008(A0), D4
                bsr     loc_17C92
                bsr     loc_FBF4
                bra.s   loc_17B12
loc_17B5A:
                move.w  #$010A, D1
                move.w  #$003E, D2
                move.w  $0008(A0), D4
                lea     (loc_17B74), A2
                bsr     loc_17C98
                bra     loc_FBF4     
loc_17B74:
                dc.b    $40, $40, $40, $40, $40, $40, $40, $40, $3F, $3F, $3E, $3E, $3D, $3D, $3C, $3C
                dc.b    $3B, $3B, $3A, $3A, $39, $39, $38, $38, $37, $37, $36, $36, $35, $35, $34, $34
                dc.b    $33, $33, $32, $32, $31, $31, $30, $30, $2F, $2F, $2E, $2E, $2D, $2D, $2C, $2C
                dc.b    $2B, $2B, $2A, $2A, $29, $29, $28, $28, $27, $27, $26, $26, $25, $25, $24, $24
                dc.b    $23, $23, $22, $22, $21, $21, $20, $20, $1F, $1F, $1E, $1E, $1D, $1D, $1C, $1C
                dc.b    $1B, $1B, $1A, $1A, $19, $19, $18, $18, $17, $17, $16, $16, $15, $15, $14, $14
                dc.b    $13, $13, $12, $12, $11, $11, $10, $10, $0F, $0F, $0E, $0E, $0D, $0D, $0C, $0C
                dc.b    $0B, $0B, $0A, $0A, $09, $09, $08, $08, $07, $07, $06, $06, $05, $05, $04, $04
                dc.b    $03, $03, $02, $02, $01, $01, $00, $00, $FF, $FF, $FE, $FE, $FD, $FD, $FC, $FC
                dc.b    $FB, $FB, $FA, $FA, $F9, $F9, $F8, $F8, $F7, $F7, $F6, $F6, $F5, $F5, $F4, $F4
                dc.b    $F3, $F3, $F2, $F2, $F1, $F1, $F0, $F0, $EF, $EF, $EE, $EE, $ED, $ED, $EC, $EC
                dc.b    $EB, $EB, $EA, $EA, $E9, $E9, $E8, $E8, $E7, $E7, $E6, $E6, $E5, $E5, $E4, $E4
                dc.b    $E3, $E3, $E2, $E2, $E1, $E1, $E0, $E0, $DF, $DF, $DE, $DE, $DD, $DD, $DC, $DC
                dc.b    $DB, $DB, $DA, $DA, $D9, $D9, $D8, $D8, $D7, $D7, $D6, $D6, $D5, $D5, $D4, $D4
                dc.b    $D3, $D3, $D2, $D2, $D1, $D1, $D0, $D0, $CF, $CF, $CE, $CE, $CD, $CD, $CC, $CC
                dc.b    $CB, $CB, $CA, $CA, $C9, $C9, $C8, $C8, $C7, $C7, $C6, $C6, $C5, $C5, $C4, $C4
                dc.b    $C3, $C3, $C2, $C2, $C1, $C1, $C0, $C0, $C0, $C0, $C0, $C0                         
;=============================================================================== 
; Object 0x30 - 
; [ End ]                         
;===============================================================================  
J_DeleteObject_0F: ; loc_17C80:
                jmp     DeleteObject            ; (loc_D3B4)
loc_17C86:
                jmp     (loc_21370)
loc_17C8C:
                jmp     (loc_D30C)
loc_17C92:
                jmp     (loc_F4FA)
loc_17C98:
                jmp     (loc_F54C)
                dc.w    $0000                   ; Filler                  
;=============================================================================== 
; Object 0x33 - Oil Ocean - Touch to Boost Up
; [ Begin ]                         
;===============================================================================                  
Obj_0x33_Touch_Booster: ; loc_17CA0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_17CAE(PC, D0), D1
                jmp     loc_17CAE(PC, D1)
loc_17CAE:
                dc.w    loc_17CB2-loc_17CAE
                dc.w    loc_17CF6-loc_17CAE
loc_17CB2:
                addq.b  #$02, $0024(A0)
                move.l  #Touch_Booster_Mappings, $0004(A0) ; loc_17EE2
                move.w  #$632C, $0002(A0)
                bsr     J_Adjust2PArtPointer_06 ; loc_17EFE
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$18, $0019(A0)
                move.w  $000C(A0), $0030(A0)
                addq.b  #$02, $0025(A0)
                move.w  #$0078, $0036(A0)
                tst.b   $0028(A0)
                beq.s   loc_17CF6
                move.b  #$04, $0025(A0)
loc_17CF6:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_17D22(PC, D0), D1
                jsr     loc_17D22(PC, D1)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$08, D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_01        ; loc_17F04
                bra     J_MarkObjGone_05        ; loc_17EF8
loc_17D22:
                dc.w    loc_17D2C-loc_17D22
                dc.w    loc_17D46-loc_17D22
                dc.w    loc_17D82-loc_17D22
                dc.w    loc_17E68-loc_17D22
                dc.w    loc_17EE0-loc_17D22
loc_17D2C:
                subq.w  #$01, $0036(A0)
                bpl.s   loc_17D44
                move.w  #$0078, $0036(A0)
                move.l  #$FFF69800, $0032(A0)
                addq.b  #$02, $0025(A0)
loc_17D44:
                rts
loc_17D46:
                move.l  $000C(A0), D1
                add.l   $0032(A0), D1
                move.l  D1, $000C(A0)
                addi.l  #$00003800, $0032(A0)
                swap.w  D1
                cmp.w   $0030(A0), D1
                bcs.s   loc_17D80
                move.l  $0032(A0), D0
                cmpi.l  #$00010000, D0
                bcc.s   loc_17D72
                subq.b  #$02, $0025(A0)
loc_17D72:
                lsr.l   #$02, D0
                neg.l   D0
                move.l  D0, $0032(A0)
                move.w  $0030(A0), $000C(A0)
loc_17D80:
                rts
loc_17D82:
                move.w  $0008(A0), D2
                move.w  D2, D3
                subi.w  #$0010, D2
                addi.w  #$0010, D3
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   loc_17DF0
                cmpi.b  #$18, D0
                beq.s   loc_17DF2
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                bsr.s   loc_17DAE
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
loc_17DAE:
                btst    D6, $0022(A0)
                beq.s   loc_17DF0
                move.w  $0008(A1), D0
                cmp.w   D2, D0
                bcs.s   loc_17DF0
                cmp.w   D3, D0
                bcc.s   loc_17DF0
                move.b  #$01, $002A(A1)
                move.w  #$0000, $0014(A1)
                move.w  #$0000, $0010(A1)
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A1)
                bclr    #$07, $0002(A1)
                move.l  #$FFF69800, $0032(A0)
                addq.b  #$02, $0025(A0)
loc_17DF0:
                rts
loc_17DF2:
                lea     ($FFFFB000).w, A1
                move.w  $0008(A1), D0
                cmp.w   D2, D0
                bcs.s   loc_17E66
                cmp.w   D3, D0
                bcc.s   loc_17E66
                lea     ($FFFFB040).w, A2
                move.w  $0008(A2), D0
                cmp.w   D2, D0
                bcs.s   loc_17E66
                cmp.w   D3, D0
                bcc.s   loc_17E66
                move.b  #$01, $002A(A1)
                move.w  #$0000, $0014(A1)
                move.w  #$0000, $0010(A1)
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A1)
                bclr    #$07, $0002(A1)
                move.b  #$01, $002A(A2)
                move.w  #$0000, $0014(A2)
                move.w  #$0000, $0010(A2)
                move.w  #$0000, $0012(A2)
                bclr    #$05, $0022(A2)
                bclr    #$07, $0002(A2)
                move.l  #$FFF69800, $0032(A0)
                addq.b  #$02, $0025(A0)
loc_17E66:
                rts
loc_17E68:
                move.l  $000C(A0), D1
                add.l   $0032(A0), D1
                move.l  D1, $000C(A0)
                addi.l  #$00003800, $0032(A0)
                swap.w  D1
                move.w  $0030(A0), D0
                subi.w  #$007D, D0
                cmp.w   D0, D1
                bne.s   loc_17EDE
                addq.b  #$02, $0025(A0)
                lea     ($FFFFB000).w, A1
                move.b  $0022(A0), D0
                andi.b  #$08, D0
                bsr.s   loc_17EA8
                lea     ($FFFFB040).w, A1
                move.b  $0022(A0), D0
                andi.b  #$10, D0
loc_17EA8:
                beq.s   loc_17EDE
                move.w  $0008(A0), $0008(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0800, $0014(A1)
                bset    #$01, $0022(A1)
                move.w  #$F000, $0012(A1)
                bclr    #$03, $0022(A1)
                move.b  #$00, $002A(A1)
                move.w  #$00CC, D0
                jsr     (PlaySound)              ; loc_14C6
loc_17EDE:
                rts
loc_17EE0:
                rts
Touch_Booster_Mappings:                
loc_17EE2:
                dc.w    loc_17EE4-loc_17EE2
loc_17EE4:
                dc.w    $0002
                dc.l    $F8090000, $0000FFE8, $F8090800, $08000000
;=============================================================================== 
; Object 0x33 - Oil Ocean - Touch to Boost Up 
; [ End ]                         
;===============================================================================                   
                nop                             ; Filler
J_MarkObjGone_05: ; loc_17EF8:
                jmp     MarkObjGone             ; (loc_D2A0)
J_Adjust2PArtPointer_06: ; loc_17EFE:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_01: ; loc_17F04:
                jmp     SolidObject             ; (loc_F4A0)
                dc.w    $0000                   ; Filler
                
;=============================================================================== 
; Object 0x43 - Oil Ocean - Giant Spikeball
; [ Begin ]                         
;===============================================================================                 
Obj_0x43_Giant_Spikeball: ; loc_17F0C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_17F1A(PC, D0), D1
                jmp     loc_17F1A(PC, D1)
loc_17F1A:
                dc.w    loc_17F32-loc_17F1A
                dc.w    loc_17FD6-loc_17F1A
                dc.w    loc_18028-loc_17F1A
loc_17F20:
                dc.b    $00, $68, $00, $00, $00, $00, $01, $E8, $FF, $E8, $00, $18, $01, $A8, $FF, $A8
                dc.b    $FF, $D8
loc_17F32:
                addq.b  #$02, $0024(A0)
                move.w  #$C30C, $0002(A0)
                bsr     J_Adjust2PArtPointer_07 ; loc_180CA
                moveq   #$00, D1
                move.b  $0028(A0), D1
                lea     loc_17F20(PC, D1), A2
                move.b  (A2)+, D1
                move.l  A0, A1
                bra.s   loc_17F74
loc_17F50:                
                bsr     J_SingleObjLoad2_01  ; loc_180C4
                bne.s   loc_17FA0
                move.b  $0000(A0), $0000(A1)
                move.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  #$01, $0036(A1)
loc_17F74:
                move.l  #Giant_Spikeball_Mappings, $0004(A1) ; loc_1808E
                move.w  $0002(A0), $0002(A1)
                move.b  #$04, $0001(A1)
                move.b  #$04, $0018(A1)
                move.b  #$18, $0019(A1)
                move.b  #$A5, $0020(A1)
                move.w  $0008(A1), $0030(A1)
loc_17FA0:
                dbra    D1, loc_17F50
                move.l  A0, $003C(A1)
                move.l  A1, $003C(A0)
                moveq   #$00, D1
                move.b  (A2)+, D1
                move.w  $0030(A0), D0
                sub.w   D1, D0
                move.w  D0, $0032(A0)
                move.w  D0, $0032(A1)
                add.w   D1, D0
                add.w   D1, D0
                move.w  D0, $0034(A0)
                move.w  D0, $0034(A1)
                move.w  (A2)+, D0
                add.w   D0, $0008(A0)
                move.w  (A2)+, D0
                add.w   D0, $0008(A1)
loc_17FD6:
                bsr.s   loc_18032
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bls.s   loc_17FFC
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_18002
loc_17FFC:
                jmp     DisplaySprite           ; (loc_D3C2)
loc_18002:
                move.l  $003C(A0), A1
                cmpa.l  A0, A1
                beq.s   loc_18010
                jsr     (loc_D3B6)
loc_18010:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_10       ; loc_18022
                bclr    #$07, $02(A2, D0)
J_DeleteObject_10: ; loc_18022:
                jmp     DeleteObject            ; (loc_D3B4)
loc_18028:
                bsr.s   loc_18032
                bsr.s   loc_18068
                jmp     DisplaySprite           ; (loc_D3C2)
loc_18032:
                tst.b   $0036(A0)
                bne.s   loc_18050
                move.w  $0008(A0), D0
                subq.w  #$01, D0
                cmp.w   $0032(A0), D0
                bne.s   loc_1804A
                move.b  #$01, $0036(A0)
loc_1804A:
                move.w  D0, $0008(A0)
                rts
loc_18050:
                move.w  $0008(A0), D0
                addq.w  #$01, D0
                cmp.w   $0034(A0), D0
                bne.s   loc_18062
                move.b  #$00, $0036(A0)
loc_18062:
                move.w  D0, $0008(A0)
                rts
loc_18068:
                move.l  $003C(A0), A1
                move.w  $0008(A0), D0
                subi.w  #$0018, D0
                move.w  $0008(A1), D2
                addi.w  #$0018, D2
                cmp.w   D0, D2
                bne.s   loc_1808C
                eori.b  #$01, $0036(A0)
                eori.b  #$01, $0036(A1)
loc_1808C:
                rts
Giant_Spikeball_Mappings:
loc_1808E:
                dc.w    loc_18090-loc_1808E
loc_18090:
                dc.w    $0006
                dc.l    $E0050000, $0000FFE8, $D80F0004, $0002FFF8
                dc.l    $F8090014, $000AFFE8, $F809001A, $000D0000
                dc.l    $10051000, $1000FFE8, $080F1004, $1002FFF8                
;=============================================================================== 
; Object 0x43 - Oil Ocean - Big Spikeball
; [ End ]                         
;===============================================================================                
                nop                             ; Filler
J_SingleObjLoad2_01: ; loc_180C4:
                jmp     SingleObjLoad2      ; (loc_E788)
J_Adjust2PArtPointer_07: ; loc_180CA:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
;=============================================================================== 
; Object 0x07 - 
; [ Begin ]                         
;===============================================================================  
Obj_0x07: ; loc_180D0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_180DE(PC, D0), D1
                jmp     loc_180DE(PC, D1)
loc_180DE:                
                dc.w    loc_180E2-loc_180DE
                dc.w    loc_18104-loc_180DE   
loc_180E2:
                addq.b  #$02, $0024(A0)
                move.w  #$0758, $000C(A0)
                move.b  #$20, $0019(A0)
                move.w  $000C(A0), $0030(A0)
                move.b  #$30, $0038(A0)
                bset    #$07, $0022(A0)
loc_18104:
                lea     ($FFFFB000).w, A1
                moveq   #$08, D1
                move.b  $0022(A0), D0
                and.b   D1, D0
                bne.s   loc_18120
                cmpi.b  #$30, $0038(A0)
                beq.s   loc_1812A
                addq.b  #$01, $0038(A0)
                bra.s   loc_1812A
loc_18120:
                tst.b   $0038(A0)
                beq.s   loc_1817E
                subq.b  #$01, $0038(A0)
loc_1812A:
                moveq   #$20, D1
                moveq   #$00, D3
                move.b  $0038(A0), D3
                moveq   #$03, D6
                move.w  $0008(A1), D4
                move.w  D4, $0008(A0)
                bsr     loc_1819A
                lea     ($FFFFB040).w, A1
                moveq   #$10, D1
                move.b  $0022(A0), D0
                and.b   D1, D0
                bne.s   loc_1815C
                cmpi.b  #$30, $003A(A0)
                beq.s   loc_18166
                addq.b  #$01, $003A(A0)
                bra.s   loc_18166
loc_1815C:
                tst.b   $003A(A0)
                beq.s   loc_1817E
                subq.b  #$01, $003A(A0)
loc_18166:
                moveq   #$20, D1
                moveq   #$00, D3
                move.b  $003A(A0), D3
                moveq   #$04, D6
                move.w  $0008(A1), D4
                move.w  D4, $0008(A0)
                bsr     loc_1819A
                rts
loc_1817E:
                not.b  D1
                and.b   D1, $0022(A0)
                move.l  A0, -(A7)
                move.l  A0, A2
                move.l  A1, A0
                bsr     J_KillSonic_01          ; loc_18194
                move.l  (A7)+, A0
                rts
;=============================================================================== 
; Object 0x07 - 
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler            
J_KillSonic_01: ; loc_18194:
                jmp     KillSonic               ; (loc_21422)
loc_1819A:
                jmp     (loc_F99A)

;=============================================================================== 
; Object 0x45 - Oil Ocean - Spring Push to Boost 
; [ Begin ]                         
;===============================================================================  
Obj_0x45_Spring_Push_Boost: ; loc_181A0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_181B2(PC, D0), D1
                jsr     loc_181B2(PC, D1)
                bra     J_MarkObjGone_06        ; loc_18D78
loc_181B2:
                dc.w    loc_181B8-loc_181B2
                dc.w    loc_1822E-loc_181B2
                dc.w    loc_18322-loc_181B2
loc_181B8:
                addq.b  #$02, $0024(A0)
                move.l  #Spring_Push_Boost_Mappings, $0004(A0) ; loc_185C2
                move.w  #$43C5, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                move.w  loc_181EE(PC, D0), D0
                jmp     loc_181EE(PC, D0)
loc_181EE:
                dc.w    loc_18216-loc_181EE
                dc.w    loc_181F2-loc_181EE
loc_181F2:
                move.b  #$04, $0024(A0)
                move.b  #$01, $001C(A0)
                move.b  #$0A, $001A(A0)
                move.w  #$43C5, $0002(A0)
                move.b  #$14, $0019(A0)
                move.w  $0008(A0), $0034(A0)
loc_18216:
                move.b  $0028(A0), D0
                andi.w  #$0002, D0
                move.w  loc_1822A(PC, D0), $0030(A0)
                bsr     J_Adjust2PArtPointer_08 ; loc_18D7E
                rts
loc_1822A:
                dc.w    $F000, $F600
loc_1822E:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   loc_18244
                tst.b   $0032(A0)
                beq.s   loc_18250
                subq.b  #$01, $0032(A0)
                bra.s   loc_18250
loc_18244:
                cmpi.b  #$09, $0032(A0)
                beq.s   loc_1826E
                addq.b  #$01, $0032(A0)
loc_18250:
                moveq   #$00, D3
                move.b  $0032(A0), D3
                move.b  D3, $001A(A0)
                add.w   D3, D3
                move.w  #$001B, D1
                move.w  #$0014, D2
                move.w  $0008(A0), D4
                bsr     loc_18D90
                rts
loc_1826E:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                bsr.s   loc_1827C
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
loc_1827C:
                bclr    D6, $0022(A0)
                beq     loc_18320
                move.w  $0030(A0), $0012(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                bpl.s   loc_182AE
                move.w  #$0000, $0010(A1)
loc_182AE:
                btst    #$00, D0
                beq.s   loc_182EE
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                btst    #$01, D0
                bne.s   loc_182DE
                move.b  #$01, $002C(A1)
loc_182DE:
                btst    #$00, $0022(A1)
                beq.s   loc_182EE
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_182EE:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_18304
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_18304:
                cmpi.b  #$08, D0
                bne.s   loc_18316
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
loc_18316:
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6
loc_18320:
                rts
loc_18322:
                move.b  #$00, $0036(A0)
                move.w  #$001F, D1
                move.w  #$000C, D2
                move.w  #$000D, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     loc_18D8A
                cmpi.w  #$0001, D4
                bne.s   loc_18368
                move.b  $0022(A0), D1
                move.w  $0008(A0), D2
                sub.w   $0008(A1), D2
                bcs.s   loc_1835E
                eori.b  #$01, D1
loc_1835E:
                andi.b  #$01, D1
                bne.s   loc_18368
                bsr     loc_183E4
loc_18368:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     loc_18D8A
                cmpi.w  #$0001, D4
                bne.s   loc_18396
                move.b  $0022(A0), D1
                move.w  $0008(A0), D2
                sub.w   $0008(A1), D2
                bcs.s   loc_1838E
                eori.b  #$01, D1
loc_1838E:
                andi.b  #$01, D1
                bne.s   loc_18396
                bsr.s   loc_183E4
loc_18396:
                tst.b   $0036(A0)
                bne.s   loc_183E2
                move.w  $0034(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   loc_183E2
                bcc.s   loc_183C4
                subq.b  #$04, $001A(A0)
                subq.w  #$04, $0008(A0)
                cmp.w   $0008(A0), D0
                bcs.s   loc_183DE
                move.b  #$0A, $001A(A0)
                move.w  $0034(A0), $0008(A0)
                bra.s   loc_183DE
loc_183C4:
                subq.b  #$04, $001A(A0)
                addq.w  #$04, $0008(A0)
                cmp.w   $0008(A0), D0
                bcc.s   loc_183DE
                move.b  #$0A, $001A(A0)
                move.w  $0034(A0), $0008(A0)
loc_183DE:
                bsr     loc_18478
loc_183E2:
                rts
loc_183E4:
                btst    #$00, $0022(A0)
                beq.s   loc_18420
                btst    #$00, $0022(A1)
                bne     loc_18476
                tst.w   D0
                bne     loc_18406
                tst.w   $0014(A1)
                beq.s   loc_18476
                bpl.s   loc_18470
                bra.s   loc_18476
loc_18406:
                move.w  $0034(A0), D0
                addi.w  #$0012, D0
                cmp.w   $0008(A0), D0
                beq.s   loc_18470
                addq.w  #$01, $0008(A0)
                moveq   #$01, D0
                move.w  #$0040, D1
                bra.s   loc_1844E
loc_18420:
                btst    #$00, $0022(A1)
                beq.s   loc_18476
                tst.w   D0
                bne     loc_18436
                tst.w   $0014(A1)
                bmi.s   loc_18470
                bra.s   loc_18476
loc_18436:
                move.w  $0034(A0), D0
                subi.w  #$0012, D0
                cmp.w   $0008(A0), D0
                beq.s   loc_18470
                subq.w  #$01, $0008(A0)
                moveq   #-1, D0
                move.w  #$FFC0, D1
loc_1844E:
                add.w   D0, $0008(A1)
                move.w  D1, $0014(A1)
                move.w  #$0000, $0010(A1)
                move.w  $0034(A0), D0
                sub.w   $0008(A0), D0
                bcc.s   loc_18468
                neg.w   D0
loc_18468:
                addi.w  #$000A, D0
                move.b  D0, $001A(A0)
loc_18470:
                move.b  #$01, $0036(A0)
loc_18476:
                rts
loc_18478:
                move.b  $0022(A0), D0
                andi.b  #$60, D0
                beq     loc_18578
                lea     ($FFFFB000).w, A1
                moveq   #$05, D6
                bsr.s   loc_18492
                lea     ($FFFFB040).w, A1
                moveq   #$06, D6
loc_18492:
                bclr    D6, $0022(A0)
                beq     loc_18578
                move.w  $0034(A0), D0
                sub.w   $0008(A0), D0
                bcc.s   loc_184A6
                neg.w   D0
loc_184A6:
                addi.w  #$000A, D0
                lsl.w   #$07, D0
                neg.w   D0
                move.w  D0, $0010(A1)
                subq.w  #$04, $0008(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   loc_184D4
                bclr    #$00, $0022(A1)
                addi.w  #$0008, $0008(A1)
                neg.w   $0010(A1)
loc_184D4:
                move.w  #$000F, $002E(A1)
                move.w  $0010(A1), $0014(A1)
                btst    #$02, $0022(A1)
                bne.s   loc_184EE
                move.b  #$00, $001C(A1)
loc_184EE:
                move.b  $0028(A0), D0
                bpl.s   loc_184FA
                move.w  #$0000, $0012(A1)
loc_184FA:
                btst    #$00, D0
                beq.s   loc_1853A
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0
                bne.s   loc_1852A
                move.b  #$03, $002C(A1)
loc_1852A:
                btst    #$00, $0022(A1)
                beq.s   loc_1853A
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_1853A:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_18550
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_18550:
                cmpi.b  #$08, D0
                bne.s   loc_18562
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
loc_18562:
                bclr    #$05, $0022(A1)
                move.b  #$01, $001D(A1)
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6
loc_18578:
                rts 
loc_1857A:   ; Unused Obj Conf
                dc.w    loc_1857E-loc_1857A
                dc.w    loc_185A0-loc_1857A
loc_1857E:
                dc.b    $00, $00, $01, $02, $03, $04, $05, $06, $07, $08, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $08, $07, $06, $05, $04, $03, $02, $01, $00, $00, $00, $00, $00, $00
                dc.b    $00, $FF
loc_185A0:
                dc.b    $00, $0A, $0B, $0C, $0D, $0E, $0F, $10, $11, $12, $13, $13, $13, $13, $13, $13
                dc.b    $13, $13, $12, $11, $10, $0F, $0E, $0D, $0C, $0B, $0A, $0A, $0A, $0A, $0A, $0A
                dc.b    $0A, $FF                
Spring_Push_Boost_Mappings: 
loc_185C2:
                dc.w    loc_185FC-loc_185C2
                dc.w    loc_18626-loc_185C2
                dc.w    loc_18650-loc_185C2
                dc.w    loc_1867A-loc_185C2
                dc.w    loc_186A4-loc_185C2
                dc.w    loc_186CE-loc_185C2
                dc.w    loc_186F8-loc_185C2
                dc.w    loc_18722-loc_185C2
                dc.w    loc_1874C-loc_185C2
                dc.w    loc_18776-loc_185C2
                dc.w    loc_187A0-loc_185C2
                dc.w    loc_187CA-loc_185C2
                dc.w    loc_187F4-loc_185C2
                dc.w    loc_1881E-loc_185C2
                dc.w    loc_18848-loc_185C2
                dc.w    loc_18872-loc_185C2
                dc.w    loc_1889C-loc_185C2
                dc.w    loc_188C6-loc_185C2
                dc.w    loc_188F0-loc_185C2
                dc.w    loc_1891A-loc_185C2
                dc.w    loc_18944-loc_185C2
                dc.w    loc_1896E-loc_185C2
                dc.w    loc_18998-loc_185C2
                dc.w    loc_189C2-loc_185C2
                dc.w    loc_189EC-loc_185C2
                dc.w    loc_18A16-loc_185C2
                dc.w    loc_18A40-loc_185C2
                dc.w    loc_18A6A-loc_185C2
                dc.w    loc_18A94-loc_185C2               
loc_185FC:
                dc.w    $0005
                dc.l    $EC0C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $04081007, $1003FFF4, $FC08300A, $3005FFF4
                dc.l    $F404100D, $1006FFF8
loc_18626:
                dc.w    $0005
                dc.l    $EE0C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $04081007, $1003FFF4, $FC08300A, $3005FFF4
                dc.l    $F604100D, $1006FFF8
loc_18650:
                dc.w    $0005
                dc.l    $F00C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $04081007, $1003FFF4, $FE08300A, $3005FFF4
                dc.l    $F804100D, $1006FFF8
loc_1867A:
                dc.w    $0005
                dc.l    $F20C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $06081007, $1003FFF4, $0008300A, $3005FFF4
                dc.l    $FA04100D, $1006FFF8
loc_186A4:
                dc.w    $0005
                dc.l    $F40C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $06081007, $1003FFF4, $0008300A, $3005FFF4
                dc.l    $FC04100D, $1006FFF8
loc_186CE:
                dc.w    $0005
                dc.l    $F60C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $06081007, $1003FFF4, $0208300A, $3005FFF4
                dc.l    $FE04100D, $1006FFF8
loc_186F8:
                dc.w    $0005
                dc.l    $F80C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $08081007, $1003FFF4, $0408300A, $3005FFF4
                dc.l    $0004100D, $1006FFF8
loc_18722:
                dc.w    $0005
                dc.l    $FA0C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $08081007, $1003FFF4, $0408300A, $3005FFF4
                dc.l    $0204100D, $1006FFF8
loc_1874C:
                dc.w    $0005
                dc.l    $FC0C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $08081007, $1003FFF4, $0608300A, $3005FFF4
                dc.l    $0404100D, $1006FFF8
loc_18776:
                dc.w    $0005
                dc.l    $FE0C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $0A081007, $1003FFF4, $0808300A, $3005FFF4
                dc.l    $0604100D, $1006FFF8
loc_187A0:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFEC
                dc.l    $F4020016, $000BFFF4, $F4022019, $200CFFFC
                dc.l    $F801001C, $000E0004
loc_187CA:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFED
                dc.l    $F4020016, $000BFFF5, $F4022019, $200CFFFD
                dc.l    $F801001C, $000E0004
loc_187F4:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFEE
                dc.l    $F4020016, $000BFFF6, $F4022019, $200CFFFE
                dc.l    $F801001C, $000E0004
loc_1881E:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFEF
                dc.l    $F4020016, $000BFFF7, $F4022019, $200CFFFF
                dc.l    $F801001C, $000E0004
loc_18848:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF0
                dc.l    $F4020016, $000BFFF8, $F4022019, $200CFFFE
                dc.l    $F801001C, $000E0004
loc_18872:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF1
                dc.l    $F4020016, $000BFFF9, $F4022019, $200CFFFF
                dc.l    $F801001C, $000E0004
loc_1889C:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF2
                dc.l    $F4020016, $000BFFF8, $F4022019, $200CFFFE
                dc.l    $F801001C, $000E0004
loc_188C6:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF3
                dc.l    $F4020016, $000BFFF9, $F4022019, $200CFFFF
                dc.l    $F801001C, $000E0004
loc_188F0:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF4
                dc.l    $F4020016, $000BFFFA, $F4022019, $200C0000
                dc.l    $F801001C, $000E0004
loc_1891A:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF5
                dc.l    $F4020016, $000BFFFB, $F4022019, $200C0001
                dc.l    $F801001C, $000E0004
loc_18944:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF6
                dc.l    $F4020016, $000BFFFC, $F4022019, $200C0000
                dc.l    $F801001C, $000E0004
loc_1896E:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF7
                dc.l    $F4020016, $000BFFFD, $F4022019, $200C0001
                dc.l    $F801001C, $000E0004
loc_18998:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF8
                dc.l    $F4020016, $000BFFFC, $F4022019, $200C0000
                dc.l    $F801001C, $000E0004
loc_189C2:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF9
                dc.l    $F4020016, $000BFFFD, $F4022019, $200C0001
                dc.l    $F801001C, $000E0004
loc_189EC:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFFA
                dc.l    $F4020016, $000BFFFE, $F4022019, $200C0002
                dc.l    $F801001C, $000E0004
loc_18A16:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFFB
                dc.l    $F4020016, $000BFFFF, $F4022019, $200C0003
                dc.l    $F801001C, $000E0004
loc_18A40:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFFC
                dc.l    $F4020016, $000B0000, $F4022019, $200C0002
                dc.l    $F801001C, $000E0004
loc_18A6A:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFFD
                dc.l    $F4020016, $000B0001, $F4022019, $200C0003
                dc.l    $F801001C, $000E0004
loc_18A94:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFFE
                dc.l    $F4020016, $000B0000, $F4022019, $200C0002
                dc.l    $F801001C, $000E0004                
;=============================================================================== 
; Object 0x45 - Oil Ocean - Spring Push to Boost 
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Object 0x46 - Oil Ocean - Spring With Ball - Sonic call stay on ball 
; [ Begin ]                         
;===============================================================================  
Obj_0x46_Spring_Ball: ; loc_18ABE:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_18ACC(PC, D0), D1
                jmp     loc_18ACC(PC, D1)
loc_18ACC:
                dc.w    loc_18AD4-loc_18ACC
                dc.w    loc_18B92-loc_18ACC
                dc.w    loc_18BE0-loc_18ACC
                dc.w    loc_18C84-loc_18ACC
loc_18AD4:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_18AF0
                bclr    #$07, $02(A2, D0)
                bset    #$00, $02(A2, D0)
                bne     J_DeleteObject_11       ; loc_18D6C
loc_18AF0:
                addq.b  #$02, $0024(A0)
                move.b  #$0F, $0016(A0)
                move.b  #$0F, $0017(A0)
                move.l  #Spring_Ball_Mappings, $0004(A0) ; loc_18CFA
                move.w  #$6354, $0002(A0)
                bsr     J_Adjust2PArtPointer_08 ; loc_18D7E
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0036(A0)
                move.b  #$10, $0019(A0)
                move.b  #$00, $001A(A0)
                move.w  #$0000, $0014(A0)
                move.b  #$01, $001F(A0)
                bsr     J_SingleObjLoad_01   ; loc_18D72
                bne.s   loc_18B8E
                move.b  #$46, $0000(A1)
                addq.b  #$06, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$0012, $000C(A1)
                move.l  #Spring_Push_Boost_Mappings, $0004(A1) ; loc_185C2
                move.w  #$43C5, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$04, $0018(A1)
                move.b  #$09, $001A(A1)
                move.l  A0, $003C(A1)
loc_18B8E:
                move.l  A1, $003C(A0)
loc_18B92:
                btst    #$06, ($FFFFF607).w
                bne.s   loc_18BAC
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$04, D0
                tst.b   $00(A2, D0)
                beq.s   loc_18BD8
loc_18BAC:
                addq.b  #$02, $0024(A0)
                bset    #$01, $0022(A0)
                move.w  #$FD00, $0012(A0)
                move.w  #$0100, $0014(A0)
                move.l  $003C(A0), A1
                move.b  #$01, $0030(A1)
                btst    #$00, $0022(A0)
                beq.s   loc_18BD8
                neg.w   $0014(A0)
loc_18BD8:
                bsr     loc_18C98
                bra     J_MarkObjGone_06        ; loc_18D78
loc_18BE0:
                move.w  $0008(A0), -(A7)
                bsr     J_SpeedToPos_05         ; loc_18D96
                btst    #$01, $0022(A0)
                beq.s   loc_18C34
                addi.w  #$0018, $0012(A0)
                bmi.s   loc_18C32
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs.s   loc_18C6C
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl     loc_18C32
                add.w   D1, $000C(A0)
                clr.w   $0012(A0)
                bclr    #$01, $0022(A0)
                move.w  #$0100, $0010(A0)
                btst    #$00, $0022(A0)
                beq.s   loc_18C32
                neg.w   $0010(A0)
loc_18C32:
                bra.s   loc_18C4C
loc_18C34:
                jsr     ObjHitFloor             ; (loc_13898)
                cmpi.w  #$0008, D1
                blt.s   loc_18C48
                bset    #$01, $0022(A0)
                bra.s   loc_18C4C
loc_18C48:
                add.w   D1, $000C(A0)
loc_18C4C:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  (A7)+, D4
                bsr     J_SolidObject_02        ; loc_18D84
                bsr     loc_18C98
                bra     J_MarkObjGone_06        ; loc_18D78
loc_18C6C:
                move.w  (A7)+, D4
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_18C80
                bclr    #$07, $02(A2, D0)
loc_18C80:
                bra     J_DeleteObject_11       ; loc_18D6C
loc_18C84:
                tst.b   $0030(A0)
                beq.s   loc_18C94
                subq.b  #$01, $001A(A0)
                bne.s   loc_18C94
                clr.b   $0030(A0)
loc_18C94:
                bra     J_MarkObjGone_06        ; loc_18D78
loc_18C98:
                tst.b   $001A(A0)
                beq.s   loc_18CA6
                move.b  #$00, $001A(A0)
                rts
loc_18CA6:
                move.b  $0014(A0), D0
                beq.s   loc_18CD2
                bmi.s   loc_18CDA
                subq.b  #$01, $001E(A0)
                bpl.s   loc_18CD2
                neg.b   D0
                addq.b  #$08, D0
                bcs.s   loc_18CBC
                moveq   #$00, D0
loc_18CBC:
                move.b  D0, $001E(A0)
                move.b  $001F(A0), D0
                addq.b  #$01, D0
                cmpi.b  #$04, D0
                bne.s   loc_18CCE
                moveq   #$01, D0
loc_18CCE:
                move.b  D0, $001F(A0)
loc_18CD2:
                move.b  $001F(A0), $001A(A0)
                rts
loc_18CDA:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_18CD2
                addq.b  #$08, D0
                bcs.s   loc_18CE6
                moveq   #$00, D0
loc_18CE6:
                move.b  D0, $001E(A0)
                move.b  $001F(A0), D0
                subq.b  #$01, D0
                bne.s   loc_18CF4
                moveq   #$03, D0
loc_18CF4:
                move.b  D0, $001F(A0)
                bra.s   loc_18CD2 
Spring_Ball_Mappings: ; loc_18CFA:
                dc.w    loc_18D02-Spring_Ball_Mappings
                dc.w    loc_18D24-Spring_Ball_Mappings
                dc.w    loc_18D46-Spring_Ball_Mappings
                dc.w    loc_18D58-Spring_Ball_Mappings
loc_18D02:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $00051804, $1802FFF0, $00051004, $10020000
loc_18D24:
                dc.w    $0004
                dc.l    $F0050008, $0004FFF0, $F0050808, $08040000
                dc.l    $00051008, $1004FFF0, $00051808, $18040000
loc_18D46:
                dc.w    $0002
                dc.l    $F00D000C, $0006FFF0, $000D180C, $1806FFF0
loc_18D58:
                dc.w    $0002
                dc.l    $F00D080C, $0806FFF0, $000D100C, $1006FFF0                 
;=============================================================================== 
; Object 0x46 - Oil Ocean - Spring With Ball - Sonic call stay on ball 
; [ End ]                         
;===============================================================================            
                nop                             ; Filler
J_DeleteObject_11: ; loc_18D6C:
                jmp     DeleteObject            ; (loc_D3B4)
J_SingleObjLoad_01: ; loc_18D72:
                jmp     SingleObjLoad        ; (loc_E772)
J_MarkObjGone_06: ; loc_18D78:
                jmp     MarkObjGone             ; (loc_D2A0)
J_Adjust2PArtPointer_08: ; loc_18D7E:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_02: ; loc_18D84:
                jmp     SolidObject             ; (loc_F4A0)
loc_18D8A:
                jmp     (loc_F510)
loc_18D90:
                jmp     (loc_F5F0)
J_SpeedToPos_05: ; loc_18D96:
                jmp     SpeedToPos              ; (loc_D27A)
;=============================================================================== 
; Object 0x47 - Switch - Oil Ocean / Dust Hill
; [ Begin ]                         
;===============================================================================                  
Obj_0x47_Switch: ; loc_18D9C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_18DAA(PC, D0), D1
                jmp     loc_18DAA(PC, D1)  
loc_18DAA:                  
                dc.w    loc_18DAE-loc_18DAA
                dc.w    loc_18DDA-loc_18DAA
loc_18DAE:
                addq.b  #$02, $0024(A0)
                move.l  #Switch_Mappings, $0004(A0) ; loc_18E3E
                move.w  #$0424, $0002(A0)
                bsr     J_Adjust2PArtPointer_09 ; loc_18E6A
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                addq.w  #$04, $000C(A0)
loc_18DDA:
                tst.b   $0001(A0)
                bpl.s   loc_18E3A
                move.w  #$001B, D1
                move.w  #$0004, D2
                move.w  #$0005, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_03        ; loc_18E70
                move.b  #$00, $001A(A0)
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                lea     ($FFFFF7E0).w, A3
                lea     $00(A3, D0), A3
                moveq   #$00, D3
                btst    #$06, $0028(A0)
                beq.s   loc_18E16
                moveq   #$07, D3
loc_18E16:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   loc_18E24
                bclr    D3, (A3)
                bra.s   loc_18E3A
loc_18E24:
                tst.b   (A3)
                bne.s   loc_18E32
                move.w  #$00CD, D0
                jsr     (PlaySound)              ; loc_14C6
loc_18E32:
                bset    D3, (A3)
                move.b  #$01, $001A(A0)
loc_18E3A:
                bra     J_MarkObjGone_07        ; loc_18E64 
Switch_Mappings: ; loc_18E3E:
                dc.w    loc_18E44-Switch_Mappings
                dc.w    loc_18E4E-Switch_Mappings
                dc.w    loc_18E58-Switch_Mappings
loc_18E44:
                dc.w    $0001
                dc.l    $F40D0000, $0000FFF0
loc_18E4E:
                dc.w    $0001
                dc.l    $F40D0008, $0004FFF0
loc_18E58:
                dc.w    $0001
                dc.l    $F80D0000, $0000FFF0
;=============================================================================== 
; Object 0x47 - Switch - Oil Ocean / Dust Hill
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler
J_MarkObjGone_07: ; loc_18E64:
                jmp     MarkObjGone             ; (loc_D2A0)
J_Adjust2PArtPointer_09 ; loc_18E6A:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_03: ; loc_18E70:
                jmp     SolidObject             ; (loc_F4A0)
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x3D - Break to Boost - Oil Ocean
; [ Begin ]                         
;===============================================================================  
Obj_0x3D_Break_Boost: ; loc_18E78:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_18E86(PC, D0), D1
                jmp     loc_18E86(PC, D1)
loc_18E86:
                dc.w    loc_18E8E-loc_18E86
                dc.w    loc_18EB6-loc_18E86
                dc.w    loc_18FCC-loc_18E86
                dc.w    loc_18FE2-loc_18E86
loc_18E8E:
                addq.b  #$02, $0024(A0)
                move.l  #Break_Boost_Mappings, $0004(A0) ; loc_1916E
                move.w  #$6332, $0002(A0)
                bsr     J_Adjust2PArtPointer_0A ; loc_19236
                move.b  #$04, $0001(A0)
                move.b  #$18, $0019(A0)
                move.b  #$04, $0018(A0)
loc_18EB6:
                move.b  ($FFFFB01C).w, $0032(A0)
                move.b  ($FFFFB05C).w, $0033(A0)
                move.w  ($FFFFB012).w, $0034(A0)
                move.w  ($FFFFB052).w, $0036(A0)
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_04        ; loc_19242
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   loc_18EF0
loc_18EEC:                
                bra     J_MarkObjGone_08        ; loc_19224
loc_18EF0:
                cmpi.b  #$18, D0
                bne.s   loc_18F26
                cmpi.b  #$02, $0032(A0)
                beq.s   loc_18F06
                cmpi.b  #$02, $0033(A0)
                bne.s   loc_18EEC
loc_18F06:
                lea     ($FFFFB000).w, A1
                move.b  $0032(A0), D0
                move.w  $0034(A0), D1
                bsr.s   loc_18F42
                lea     ($FFFFB040).w, A1
                move.b  $0033(A0), D0
                move.w  $0036(A0), D1
                bsr.s   loc_18F42
                bra     loc_18F94
loc_18F26:
                move.b  D0, D1
                andi.b  #$08, D1
                beq.s   loc_18F78
                cmpi.b  #$02, $0032(A0)
                bne.s   loc_18EEC
                lea     ($FFFFB000).w, A1
                move.w  $0034(A0), D1
                bsr.s   loc_18F48
                bra.s   loc_18F94
loc_18F42:
                cmpi.b  #$02, D0
                bne.s   loc_18F64
loc_18F48:
                bset    #$02, $0022(A1)
                move.b  #$0E, $0016(A1)
                move.b  #$07, $0017(A1)
                move.b  #$02, $001C(A1)
                move.w  D1, $0012(A1)
loc_18F64:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                rts
loc_18F78:
                andi.b  #$10, D0
                beq     loc_18EEC
                cmpi.b  #$02, $0033(A0)
                bne     loc_18EEC
                lea     ($FFFFB040).w, A1
                move.w  $0036(A0), D1
                bsr.s   loc_18F48
loc_18F94:
                andi.b  #$E7, $0022(A0)
                bsr     J_SingleObjLoad2_02  ; loc_1922A
                bne.s   loc_18FB8
                moveq   #$00, D0
                move.w  #$0009, D1
loc_18FA6:                
                move.l  $00(A0, D0), $00(A1, D0)
                addq.w  #$04, D0
                dbra    D1, loc_18FA6
                move.b  #$06, $0024(A1)
loc_18FB8:
                lea     (loc_1912E), A4
                addq.b  #$01, $001A(A0)
                moveq   #$0F, D1
                move.w  #$0018, D2
                bsr     loc_1923C
loc_18FCC:
                bsr     J_SpeedToPos_06         ; loc_19248
                addi.w  #$0018, $0012(A0)
                tst.b   $0001(A0)
                bpl     J_DeleteObject_12       ; loc_1921E
                bra     J_DisplaySprite_03      ; loc_19218
loc_18FE2:
                lea     ($FFFFB000).w, A1
                lea     $002C(A0), A4
                bsr.s   loc_19004
                lea     ($FFFFB040).w, A1
                lea     $0036(A0), A4
                bsr.s   loc_19004
                move.b  $002C(A0), D0
                add.b   $0036(A0), D0
                beq     loc_19230
                rts
loc_19004:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  loc_19010(PC, D0), D0
                jmp     loc_19010(PC, D0)   
loc_19010:
                dc.w    loc_19014-loc_19010
                dc.w    loc_19092-loc_19010
loc_19014:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addi.w  #$0010, D0
                cmpi.w  #$0020, D0
                bcc     loc_19090
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                cmpi.w  #$0010, D1
                bcc     loc_19090
                addq.b  #$02, (A4)
                move.w  $000C(A0), $000C(A1)
                move.b  #$81, $002A(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0800, $0014(A1)
                move.w  #$0800, $0010(A1)
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
                bset    #$01, $0022(A1)
                bset    #$03, $0022(A1)
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.b  D0, $003D(A1)
                move.w  #$00BE, D0
                jsr     (PlaySound)              ; loc_14C6
loc_19090:
                rts
loc_19092:
                bra.s   loc_190D8
                subq.b  #$01, $0002(A4)
                bpl.s   loc_190D8
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                move.w  D5, $000C(A1)
                tst.b   $0001(A4)
                bpl.s   loc_190BA
                subq.w  #$08, A2
loc_190BA:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4)
                beq.s   loc_190FE
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                move.w  #$0800, D2
                bra     loc_16A80
loc_190D8:
                move.l  $0008(A1), D2
                move.l  $000C(A1), D3
                move.w  $0010(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A1)
                move.l  D3, $000C(A1)
                rts
loc_190FE:
                cmpi.b  #$04, $0001(A4)
                bcc.s   loc_19116
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.b   $0001(A4), D0
                move.b  #$04, $0001(A4)
loc_19116:
                andi.w  #$07FF, $000C(A1)
                move.b  #$06, (A4)
                clr.b   $002A(A1)
                move.w  #$00BC, D0
                jmp     (PlaySound)              ; loc_14C6     
loc_1912E:
                dc.w    $FC00, $FC00, $FE00, $FC00, $0200, $FC00, $0400, $FC00
                dc.w    $FC40, $FE00, $FE40, $FE00, $01C0, $FE00, $03C0, $FE00
                dc.w    $FC80, $0200, $FE80, $0200, $0180, $0200, $0380, $0200
                dc.w    $FCC0, $0400, $FEC0, $0400, $0140, $0400, $0340, $0400 
Break_Boost_Mappings: ; loc_1916E:
                dc.w    loc_19172-Break_Boost_Mappings
                dc.w    loc_19194-Break_Boost_Mappings
loc_19172:
                dc.w    $0004
                dc.l    $F0030000, $0000FFF0, $F0030000, $0000FFF8
                dc.l    $F0030000, $00000000, $F0030000, $00000008
loc_19194:
                dc.w    $0010
                dc.l    $F0000000, $0000FFF0, $F0000000, $0000FFF8
                dc.l    $F0000000, $00000000, $F0000000, $00000008
                dc.l    $F8000000, $0000FFF0, $F8000000, $0000FFF8
                dc.l    $F8000000, $00000000, $F8000000, $00000008
                dc.l    $00000000, $0000FFF0, $00000000, $0000FFF8
                dc.l    $00000000, $00000000, $00000000, $00000008
                dc.l    $08000000, $0000FFF0, $08000000, $0000FFF8
                dc.l    $08000000, $00000000, $08000000, $00000008                
;=============================================================================== 
; Object 0x3D - Break to Boost - Oil Ocean 
; [ End ]                         
;=============================================================================== 
                nop                             ; Filler
J_DisplaySprite_03: ; loc_19218:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_12: ; loc_1921E:
                jmp     DeleteObject            ; (loc_D3B4)
J_MarkObjGone_08: ; loc_19224:
                jmp     MarkObjGone             ; (loc_D2A0)
J_SingleObjLoad2_02: ; loc_1922A:
                jmp     SingleObjLoad2      ; (loc_E788)
loc_19230:
                jmp     (loc_D30C)
J_Adjust2PArtPointer_0A: ; loc_19236:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
loc_1923C:
                jmp     (BreakObjectToPieces)
J_SolidObject_04: ; loc_19242:
                jmp     SolidObject             ; (loc_F4A0)
J_SpeedToPos_06: ; loc_19248:
                jmp     SpeedToPos              ; (loc_D27A)
                dc.w    $0000                   ; Filler                    
                
;=============================================================================== 
; Object 0x48 - Cannon - Oil Ocean 
; [ Begin ]                         
;===============================================================================                  
Obj_0x48_Cannon: ; loc_19250:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1926E(PC, D0), D1
                jsr     loc_1926E(PC, D1)
                move.b  $002C(A0), D0
                add.b   $0036(A0), D0
                beq     J_MarkObjGone_09        ; loc_19652
                bra     J_DisplaySprite_04      ; loc_1964C
loc_1926E:
                dc.w    loc_19282-loc_1926E
                dc.w    loc_192D2-loc_1926E
loc_19272:
                dc.b    $04
loc_19273:
                dc.b    $00, $06, $07, $07, $00, $05, $07, $05, $00, $04, $07, $06, $00, $07, $07
loc_19282:
                addq.b  #$02, $0024(A0)
                move.l  #Cannon_Mappings, $0004(A0) ; loc_194CA
                move.w  #$6368, $0002(A0)
                bsr     J_Adjust2PArtPointer_0B ; loc_19658
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                btst    #$00, $0022(A0)
                beq.s   loc_192AA
                addq.w  #$04, D0
loc_192AA:
                add.w   D0, D0
                move.b  loc_19272(PC, D0), $0001(A0)
                move.b  loc_19273(PC, D0), $003F(A0)
                beq.s   loc_192C0
                move.b  #$01, $003E(A0)
loc_192C0:
                move.b  $003F(A0), $001A(A0)
                move.b  #$28, $0019(A0)
                move.b  #$01, $0018(A0)
loc_192D2:
                lea     ($FFFFB000).w, A1
                lea     $002C(A0), A4
                moveq   #$2C, D2
                bsr.s   loc_192E8
                lea     ($FFFFB040).w, A1
                lea     $0036(A0), A4
                moveq   #$36, D2
loc_192E8:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  loc_192F4(PC, D0), D0
                jmp     loc_192F4(PC, D0)
loc_192F4:
                dc.w    loc_192FC-loc_192F4
                dc.w    loc_193B0-loc_192F4
                dc.w    loc_1945E-loc_192F4
                dc.w    loc_194BE-loc_192F4
loc_192FC:
                tst.w   (Debug_placement_mode).w
                bne     loc_193AE
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addi.w  #$0010, D0
                cmpi.w  #$0020, D0
                bcc     loc_193AE
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                addi.w  #$0010, D1
                cmpi.w  #$0020, D1
                bcc     loc_193AE
                btst    #$03, $0022(A1)
                beq.s   loc_1934A
                moveq   #$00, D0
                move.b  $003D(A1), D0
                lsl.w   #$06, D0
                addi.l  #$FFFFB000, D0
                move.l  D0, A3
                move.b  #$00, $00(A3, D2)
loc_1934A:
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.b  D0, $003D(A1)
                addq.b  #$02, (A4)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  #$81, $002A(A1)
                move.b  #$02, $001C(A1)
                move.w  #$1000, $0014(A1)
                move.w  #$0000, $0010(A1)
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
                bset    #$01, $0022(A1)
                bset    #$03, $0022(A1)
                move.b  $003F(A0), $001A(A0)
                move.w  #$00BE, D0
                jsr     (PlaySound)              ; loc_14C6
loc_193AE:
                rts
loc_193B0:
                tst.b   $003E(A0)
                bne.s   loc_193D8
                cmpi.b  #$07, $001A(A0)
                beq.s   loc_193F2
                subq.w  #$01, $001E(A0)
                bpl.s   loc_193D6
                move.w  #$0007, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$07, $001A(A0)
                beq.s   loc_193F2
loc_193D6:
                rts
loc_193D8:
                tst.b   $001A(A0)
                beq.s   loc_193F2
                subq.w  #$01, $001E(A0)
                bpl.s   loc_193D6
                move.w  #$0007, $001E(A0)
                subq.b  #$01, $001A(A0)
                beq.s   loc_193F2
                rts
loc_193F2:
                addq.b  #$02, (A4)
                move.b  $0028(A0), D0
                addq.b  #$01, D0
                btst    #$00, $0022(A0)
                beq.s   loc_19404
                subq.b  #$02, D0
loc_19404:
                andi.w  #$0003, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  loc_1944E(PC, D0), $0010(A1)
                move.w  loc_19450(PC, D0), $0012(A1)
                move.w  #$0003, $001E(A0)
                tst.b   $0028(A0)
                bpl.s   loc_1944C
                move.b  #$00, $002A(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$00, $003C(A1)
                move.b  #$02, $0024(A1)
                move.b  #$06, (A4)
                move.w  #$0007, $003C(A0)
loc_1944C:
                rts     
loc_1944E:
                dc.w    $0000
loc_19450:
                dc.w    $F000, $1000, $0000, $0000, $1000, $F000, $0000
loc_1945E:
                cmpi.b  #$02, $002C(A0)
                beq.s   loc_19498
                cmpi.b  #$02, $0036(A0)
                beq.s   loc_19498
                subq.w  #$01, $001E(A0)
                bpl.s   loc_19498
                move.w  #$0001, $001E(A0)
                tst.b   $003E(A0)
                beq.s   loc_1948E
                cmpi.b  #$07, $001A(A0)
                beq.s   loc_19498
                addq.b  #$01, $001A(A0)
                bra.s   loc_19498
loc_1948E:
                tst.b   $001A(A0)
                beq.s   loc_19498
                subq.b  #$01, $001A(A0)
loc_19498:
                move.l  $0008(A1), D2
                move.l  $000C(A1), D3
                move.w  $0010(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A1)
                move.l  D3, $000C(A1)
                rts
loc_194BE:
                subq.w  #$01, $003C(A0)
                bpl.s   loc_194C8
                move.b  #$00, (A4)
loc_194C8:
                rts                
Cannon_Mappings:
loc_194CA:
                dc.w    loc_194DA-loc_194CA
                dc.w    loc_1951C-loc_194CA
                dc.w    loc_1954E-loc_194CA
                dc.w    loc_19570-loc_194CA
                dc.w    loc_19592-loc_194CA
                dc.w    loc_195B4-loc_194CA
                dc.w    loc_195D6-loc_194CA
                dc.w    loc_19608-loc_194CA
loc_194DA:
                dc.w    $0008
                dc.l    $D8040000, $0000FFF0, $D8040800, $08000000
                dc.l    $E0040002, $0001FFF0, $E0040802, $08010000
                dc.l    $E80A0011, $0008FFE8, $E80A0811, $08080000
                dc.l    $000A1008, $1004FFE8, $000A1808, $18040000
loc_1951C:
                dc.w    $0006
                dc.l    $E0040000, $0000FFF0, $E0040800, $08000000
                dc.l    $E80A0011, $0008FFE8, $E80A0811, $08080000
                dc.l    $000A1008, $1004FFE8, $000A1808, $18040000
loc_1954E:
                dc.w    $0004
                dc.l    $E80A0011, $0008FFE8, $E80A0811, $08080000
                dc.l    $000A1008, $1004FFE8, $000A1808, $18040000
loc_19570:
                dc.w    $0004
                dc.l    $E80A001A, $000DFFE8, $E80A1823, $18110000
                dc.l    $000A0023, $0011FFE8, $000A181A, $180D0000
loc_19592:
                dc.w    $0004
                dc.l    $E80A1023, $1011FFE8, $E80A081A, $080D0000
                dc.l    $000A101A, $100DFFE8, $000A0823, $08110000
loc_195B4:
                dc.w    $0004
                dc.l    $E80A0008, $0004FFE8, $E80A102C, $10160000
                dc.l    $000A1008, $1004FFE8, $000A002C, $00160000
loc_195D6:
                dc.w    $0006
                dc.l    $E80A0008, $0004FFE8, $E80A102C, $10160000
                dc.l    $000A1008, $1004FFE8, $000A002C, $00160000
                dc.l    $F0010006, $00030018, $00011006, $10030018
loc_19608:
                dc.w    $0008
                dc.l    $E80A0008, $0004FFE8, $E80A102C, $10160000
                dc.l    $000A1008, $1004FFE8, $000A002C, $00160000
                dc.l    $F0010004, $00020018, $00011004, $10020018
                dc.l    $F0010006, $00030020, $00011006, $10030020                
;=============================================================================== 
; Object 0x48 - Cannon - Oil Ocean 
; [ End ]                         
;===============================================================================   
                nop                             ; Filler
J_DisplaySprite_04: ; loc_1964C:
                jmp     DisplaySprite           ; (loc_D3C2)
J_MarkObjGone_09: ; loc_19652:
                jmp     MarkObjGone             ; (loc_D2A0)
J_Adjust2PArtPointer_0B: ; loc_19658:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x22 - Arrow Shooter - Neo Green Hill 
; [ Begin ]                         
;===============================================================================  
Obj_0x22_Arrow_Shooter: ; loc_19660:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1966E(PC, D0), D1
                jmp     loc_1966E(PC, D1)
loc_1966E:
                dc.w    loc_19678-loc_1966E
                dc.w    loc_196AC-loc_1966E
                dc.w    loc_196F6-loc_1966E
                dc.w    loc_1973C-loc_1966E
                dc.w    loc_19780-loc_1966E
loc_19678:
                addq.b  #$02, $0024(A0)
                move.l  #Arrow_Shooter_Mappings, $0004(A0) ; loc_197C6
                move.w  #$0417, $0002(A0)
                bsr     J_Adjust2PArtPointer_0C ; loc_19844
                ori.b   #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $001A(A0)
                andi.b  #$0F, $0028(A0)
loc_196AC:
                cmpi.b  #$02, $001C(A0)
                beq.s   loc_196D2
                moveq   #$00, D2
                lea     ($FFFFB000).w, A1
                bsr.s   loc_196E0
                lea     ($FFFFB040).w, A1
                bsr.s   loc_196E0
                tst.b   D2
                bne.s   loc_196CE
                tst.b   $001C(A0)
                beq.s   loc_196CE
                moveq   #$02, D2
loc_196CE:
                move.b  D2, $001C(A0)
loc_196D2:
                lea     (loc_197B0), A1
                bsr     J_AnimateSprite_01      ; loc_1983E
                bra     J_MarkObjGone_0A        ; loc_19838
loc_196E0:
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   loc_196EC
                neg.w   D0
loc_196EC:
                cmpi.w  #$0040, D0
                bcc.s   loc_196F4
                moveq   #$01, D2
loc_196F4:
                rts
loc_196F6:
                bsr     J_SingleObjLoad_02   ; loc_19832
                bne.s   loc_1972A
                move.b  $0000(A0), $0000(A1)
                addq.b  #$06, $0024(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0022(A0), $0022(A1)
loc_1972A:
                subq.b  #$02, $0024(A0)
                lea     (loc_197B0), A1
                bsr     J_AnimateSprite_01      ; loc_1983E
                bra     J_MarkObjGone_0A        ; loc_19838
loc_1973C:
                addq.b  #$02, $0024(A0)
                move.b  #$08, $0016(A0)
                move.b  #$10, $0017(A0)
                move.b  #$04, $0018(A0)
                move.b  #$9B, $0020(A0)
                move.b  #$08, $0019(A0)
                move.b  #$00, $001A(A0)
                move.w  #$0400, $0010(A0)
                btst    #$00, $0022(A0)
                beq.s   loc_19776
                neg.w   $0010(A0)
loc_19776:
                move.w  #$00AE, D0
                jsr     (PlaySound)              ; loc_14C6
loc_19780:
                bsr     J_SpeedToPos_07         ; loc_1984A
                btst    #$00, $0022(A0)
                bne.s   loc_197A0
                moveq   #-8, D3
                bsr     ObjHitWallLeft          ; loc_13B24
                tst.w   D1
                bmi     loc_1979C
                bra     J_MarkObjGone_0A        ; loc_19838
loc_1979C:
                bra     J_DeleteObject_13       ; loc_1982C
loc_197A0:
                moveq   #$08, D3
                bsr     ObjHitWallRight         ; loc_1399E
                tst.w   D1
                bmi     loc_1979C
                bra     J_MarkObjGone_0A        ; loc_19838
loc_197B0:                
                dc.w    loc_197B6-loc_197B0
                dc.w    loc_197B9-loc_197B0
                dc.w    loc_197BD-loc_197B0
loc_197B6:
                dc.b    $1F, $01, $FF
loc_197B9:
                dc.b    $03, $01, $02, $FF
loc_197BD:
                dc.b    $07, $03, $04, $FC, $04, $03, $01, $FD, $00
Arrow_Shooter_Mappings:                
loc_197C6:
                dc.w    loc_197D0-loc_197C6
                dc.w    loc_197DA-loc_197C6
                dc.w    loc_197EC-loc_197C6
                dc.w    loc_19806-loc_197C6
                dc.w    loc_19818-loc_197C6
loc_197D0:
                dc.w    $0001
                dc.l    $FC0C2000, $2000FFF0
loc_197DA:
                dc.w    $0002
                dc.l    $F8092004, $2002FFF0, $F801200B, $20050008
loc_197EC:
                dc.w    $0003
                dc.l    $FC00000A, $0005FFFC, $F8092004, $2002FFF0
                dc.l    $F801200B, $20050008
loc_19806:
                dc.w    $0002
                dc.l    $F8092004, $2002FFF0, $F801200D, $20060008
loc_19818:
                dc.w    $0002
                dc.l    $F8092004, $2002FFF0, $F801200F, $20070008
;=============================================================================== 
; Object 0x22 - Arrow Shooter - Neo Green Hill 
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler
J_DeleteObject_13: ; loc_1982C:
                jmp     DeleteObject            ; (loc_D3B4)
J_SingleObjLoad_02: ; loc_19832:
                jmp     SingleObjLoad        ; (loc_E772)
J_MarkObjGone_0A: ; loc_19838:
                jmp     MarkObjGone             ; (loc_D2A0)
J_AnimateSprite_01: ; loc_1983E:
                jmp     AnimateSprite           ; (loc_D412)
J_Adjust2PArtPointer_0C: ; loc_19844:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SpeedToPos_07: ; loc_1984A:
                jmp     SpeedToPos              ; (loc_D27A)                             
;=============================================================================== 
; Object 0x23 - Neo Green Hill - Pillar That Drops Lower Half 
; [ Begin ]                         
;=============================================================================== 
Obj_0x23_Pillar: ; loc_19850:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1985E(PC, D0), D1
                jmp     loc_1985E(PC, D1)
loc_1985E:
                dc.w    loc_19862-loc_1985E
                dc.w    loc_198E6-loc_1985E
loc_19862:
                addq.b  #$02, $0024(A0)
                move.l  #Pillar_Mappings, $0004(A0) ; loc_199AA
                move.w  #$2000, $0002(A0)
                bsr     J_Adjust2PArtPointer_0D ; loc_1A0B0
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$20, $0016(A0)
                move.b  #$04, $0018(A0)
                bsr     J_SingleObjLoad2_03  ; loc_1A0AA
                bne.s   loc_198E6
                move.b  $0000(A0), $0000(A1)
                addq.b  #$02, $0024(A1)
                addq.b  #$02, $0025(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $0008(A0), $0030(A1)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$0030, $000C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$10, $0016(A1)
                move.b  #$04, $0018(A1)
                move.b  #$01, $001A(A1)
loc_198E6:
                move.w  $0008(A0), -(A7)
                bsr     loc_1990C
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     J_SolidObject_05        ; loc_1A0B6
                bra     J_MarkObjGone_0B        ; loc_1A0A4
loc_1990C:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1991A(PC, D0), D1
                jmp     loc_1991A(PC, D1)                 
loc_1991A:
                dc.w    loc_19950-loc_1991A
                dc.w    loc_19922-loc_1991A
                dc.w    loc_19952-loc_1991A
                dc.w    loc_1997C-loc_1991A
loc_19922:
                tst.w   (Debug_placement_mode).w
                bne.s   loc_19950
                lea     ($FFFFB000).w, A1
                bsr.s   loc_19932
                lea     ($FFFFB040).w, A1
loc_19932:
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   loc_1993E
                neg.w   D0
loc_1993E:
                cmpi.w  #$0080, D0
                bcc.s   loc_19950
                move.b  #$04, $0025(A0)
                move.w  #$0008, $0034(A0)
loc_19950:
                rts
loc_19952:
                move.w  $0034(A0), D0
                subq.w  #$01, D0
                bcc.s   loc_19960
                addq.b  #$02, $0025(A0)
                rts
loc_19960:
                move.w  D0, $0034(A0)
                move.b  loc_19974(PC, D0), D0
                ext.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                rts
loc_19974:
                dc.b    $00, $01, $FF, $01, $00, $FF, $00, $01
loc_1997C:
                bsr     J_SpeedToPos_08         ; loc_1A0BC
                addi.w  #$0038, $0012(A0)
                bsr     ObjHitFloor             ; loc_13898
                tst.w   D1
                bpl     loc_199A8
                add.w   D1, $000C(A0)
                clr.w   $0012(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  #$02, $001A(A0)
                clr.b   $0025(A0)
loc_199A8:
                rts
Pillar_Mappings:                
loc_199AA:                
                dc.w    loc_199B0-loc_199AA
                dc.w    loc_199E2-loc_199AA
                dc.w    loc_199FC-loc_199AA
loc_199B0:
                dc.w    $0006
                dc.l    $E005005D, $002EFFE0, $E005085D, $082E0010
                dc.l    $E00D0061, $0030FFF0, $F00D0069, $0034FFF0
                dc.l    $000D0069, $0034FFF0, $100D0071, $0038FFF0
loc_199E2:
                dc.w    $0003
                dc.l    $F00D0069, $0034FFF0, $000D0079, $003CFFF0
                dc.l    $10040081, $0040FFF0
loc_199FC:
                dc.w    $0004
                dc.l    $090D208B, $2045FFF0, $F00D0069, $0034FFF0
                dc.l    $000D0079, $003CFFF0, $10040081, $0040FFF0
;=============================================================================== 
; Object 0x23 - Neo Green Hill - Pillar That Drops Lower Half 
; [ End ]                         
;===============================================================================                 
;=============================================================================== 
; Object 0x2B - Neo Green Hill - Breakable Pillar
; [ Begin ]                         
;===============================================================================                       
Obj_0x2B_Breakable_Pillar: ; loc_19A1E:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_19A2C(PC, D0), D1
                jmp     loc_19A2C(PC, D1)
loc_19A2C:
                dc.w    loc_19A32-loc_19A2C
                dc.w    loc_19A60-loc_19A2C
                dc.w    loc_19B50-loc_19A2C
loc_19A32:
                addq.b  #$02, $0024(A0)
                move.l  #Breakable_Pillar_Mappings, $0004(A0) ; loc_19C30
                move.w  #$2000, $0002(A0)
                bsr     J_Adjust2PArtPointer_0D ; loc_1A0B0
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$18, $0016(A0)
                move.b  #$04, $0018(A0)
loc_19A60:
                move.w  $0008(A0), -(A7)
                bsr     loc_19AEA
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     J_SolidObject_05        ; loc_1A0B6
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne     loc_19A92
                bra     J_MarkObjGone_0B        ; loc_1A0A4
loc_19A92:
                lea     (loc_19B80), A4
                lea     (loc_19B72), A2
                addq.b  #$07, $001A(A0)
                bsr     loc_19BB8
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                bsr.s   loc_19AB8
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
                bra     loc_19B50
loc_19AB8:
                bclr    D6, $0022(A0)
                beq.s   loc_19AE8
                bset    #$02, $0022(A1)
                move.b  #$0E, $0016(A1)
                move.b  #$07, $0017(A1)
                move.b  #$02, $001C(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
loc_19AE8:
                rts
loc_19AEA:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_19AF8(PC, D0), D1
                jmp     loc_19AF8(PC, D1)
loc_19AF8:
                dc.w    loc_19AFE-loc_19AF8
                dc.w    loc_19B28-loc_19AF8
                dc.w    loc_19B26-loc_19AF8
loc_19AFE:
                tst.w   (Debug_placement_mode).w
                bne.s   loc_19B26
                lea     ($FFFFB000).w, A1
                bsr.s   loc_19B0E
                lea     ($FFFFB040).w, A1
loc_19B0E:
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   loc_19B1A
                neg.w   D0
loc_19B1A:
                cmpi.w  #$0040, D0
                bcc.s   loc_19B26
                move.b  #$02, $0025(A0)
loc_19B26:
                rts
loc_19B28:
                subq.w  #$01, $0034(A0)
                bcc.s   loc_19B4E
                move.w  #$0003, $0034(A0)
                subq.w  #$04, $000C(A0)
                addq.b  #$04, $0016(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$06, $001A(A0)
                bne.s   loc_19B4E
                move.b  #$04, $0025(A0)
loc_19B4E:
                rts
loc_19B50:
                tst.b   $003F(A0)
                beq.s   loc_19B5C
                subq.b  #$01, $003F(A0)
                bra.s   loc_19B66
loc_19B5C:
                bsr     J_SpeedToPos_08         ; loc_1A0BC
                addi.w  #$0018, $0012(A0)
loc_19B66:
                tst.b   $0001(A0)
                bpl     J_DeleteObject_14       ; loc_1A09E
                bra     J_DisplaySprite_05      ; loc_1A098
loc_19B72:
                dc.b    $00, $00, $00, $00, $04, $04, $08, $08, $0C, $0C, $10, $10, $14, $14                
loc_19B80:
                dc.w    $FE00, $FE00, $0200, $FE00, $FE40, $FE40, $01C0, $FE40
                dc.w    $FE80, $FE80, $0180, $FE80, $FEC0, $FEC0, $0140, $FEC0
                dc.w    $FF00, $FF00, $0100, $FF00, $FF40, $FF40, $00C0, $FF40
                dc.w    $FF80, $FF80, $0080, $FF80  
loc_19BB8:
                moveq   #$00, D0
                move.b  $001A(A0), D0
                add.w   D0, D0
                move.l  $0004(A0), A3
                adda.w  $00(A3, D0), A3
                move.w  (A3)+, D1
                subq.w  #$01, D1
                bset    #$05, $0001(A0)
                move.b  $0000(A0), D4
                move.b  $0001(A0), D5
                move.l  A0, A1
                bra.s   loc_19BE6
loc_19BDE:                
                bsr     J_SingleObjLoad2_03  ; loc_1A0AA
                bne.s   loc_19C26
                addq.w  #$08, A3
loc_19BE6:
                move.b  #$04, $0024(A1)
                move.b  D4, $0000(A1)
                move.l  A3, $0004(A1)
                move.b  D5, $0001(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  $0018(A0), $0018(A1)
                move.b  $0019(A0), $0019(A1)
                move.w  (A4)+, $0010(A1)
                move.w  (A4)+, $0012(A1)
                move.b  (A2)+, $003F(A1)
                dbra    D1, loc_19BDE
loc_19C26:
                move.w  #$00CB, D0
                jmp     (PlaySound)              ; loc_14C6  
Breakable_Pillar_Mappings:                                             
loc_19C30:
                dc.w    loc_19C4C-loc_19C30
                dc.w    loc_19C7E-loc_19C30
                dc.w    loc_19CB8-loc_19C30
                dc.w    loc_19CF2-loc_19C30
                dc.w    loc_19D34-loc_19C30
                dc.w    loc_19D76-loc_19C30
                dc.w    loc_19DC0-loc_19C30
                dc.w    loc_19E0A-loc_19C30
                dc.w    loc_19E4C-loc_19C30
                dc.w    loc_19E9E-loc_19C30
                dc.w    loc_19EF0-loc_19C30
                dc.w    loc_19F52-loc_19C30
                dc.w    loc_19FB4-loc_19C30
                dc.w    loc_1A026-loc_19C30
loc_19C4C:
                dc.w    $0006
                dc.l    $100D208B, $2045FFF0, $E805005D, $002EFFE0
                dc.l    $E805085D, $082E0010, $E80D0061, $0030FFF0
                dc.l    $F80D0069, $0034FFF0, $080D0083, $0041FFF0
loc_19C7E:
                dc.w    $0007
                dc.l    $140D208B, $2045FFF0, $E405005D, $002EFFE0
                dc.l    $E405085D, $082E0010, $E40D0061, $0030FFF0
                dc.l    $F40D0069, $0034FFF0, $FC0D0069, $0034FFF0
                dc.l    $0C0D0083, $0041FFF0
loc_19CB8:
                dc.w    $0007
                dc.l    $180D208B, $2045FFF0, $E005005D, $002EFFE0
                dc.l    $E005085D, $082E0010, $E00D0061, $0030FFF0
                dc.l    $F00D0069, $0034FFF0, $000D0069, $0034FFF0
                dc.l    $100D0083, $0041FFF0
loc_19CF2:
                dc.w    $0008
                dc.l    $1C0D208B, $2045FFF0, $DC05005D, $002EFFE0
                dc.l    $DC05085D, $082E0010, $DC0D0061, $0030FFF0
                dc.l    $EC0D0069, $0034FFF0, $FC0D0069, $0034FFF0
                dc.l    $040D0069, $0034FFF0, $140D0083, $0041FFF0
loc_19D34:
                dc.w    $0008
                dc.l    $200D208B, $2045FFF0, $D805005D, $002EFFE0
                dc.l    $D805085D, $082E0010, $D80D0061, $0030FFF0
                dc.l    $E80D0069, $0034FFF0, $F80D0069, $0034FFF0
                dc.l    $080D0069, $0034FFF0, $180D0083, $0041FFF0
loc_19D76:
                dc.w    $0009
                dc.l    $240D208B, $2045FFF0, $D405005D, $002EFFE0
                dc.l    $D405085D, $082E0010, $D40D0061, $0030FFF0
                dc.l    $E40D0069, $0034FFF0, $F40D0069, $0034FFF0
                dc.l    $040D0069, $0034FFF0, $0C0D0069, $0034FFF0
                dc.l    $1C0D0083, $0041FFF0
loc_19DC0:
                dc.w    $0009
                dc.l    $280D208B, $2045FFF0, $D005005D, $002EFFE0
                dc.l    $D005085D, $082E0010, $D00D0061, $0030FFF0
                dc.l    $E00D0069, $0034FFF0, $F00D0069, $0034FFF0
                dc.l    $000D0069, $0034FFF0, $100D0069, $0034FFF0
                dc.l    $200D0083, $0041FFF0
loc_19E0A:
                dc.w    $0008
                dc.l    $E805005D, $002EFFE0, $E805085D, $082E0010
                dc.l    $E8050061, $0030FFF0, $E8050065, $00320000
                dc.l    $F8050069, $0034FFF0, $F805006D, $00360000
                dc.l    $08050083, $0041FFF0, $08050087, $00430000
loc_19E4C:
                dc.w    $000A
                dc.l    $E405005D, $002EFFE0, $E405085D, $082E0010
                dc.l    $E4050061, $0030FFF0, $E4050065, $00320000
                dc.l    $F4050069, $0034FFF0, $F405006D, $00360000
                dc.l    $FC050069, $0034FFF0, $FC05006D, $00360000
                dc.l    $0C050083, $0041FFF0, $0C050087, $00430000
loc_19E9E:
                dc.w    $000A
                dc.l    $E005005D, $002EFFE0, $E005085D, $082E0010
                dc.l    $E0050061, $0030FFF0, $E0050065, $00320000
                dc.l    $F0050069, $0034FFF0, $F005006D, $00360000
                dc.l    $00050069, $0034FFF0, $0005006D, $00360000
                dc.l    $10050083, $0041FFF0, $10050087, $00430000
loc_19EF0:
                dc.w    $000C
                dc.l    $DC05005D, $002EFFE0, $DC05085D, $082E0010
                dc.l    $DC050061, $0030FFF0, $DC050065, $00320000
                dc.l    $EC050069, $0034FFF0, $EC05006D, $00360000
                dc.l    $FC050069, $0034FFF0, $FC05006D, $00360000
                dc.l    $04050069, $0034FFF0, $0405006D, $00360000
                dc.l    $14050083, $0041FFF0, $14050087, $00430000
loc_19F52:
                dc.w    $000C
                dc.l    $D805005D, $002EFFE0, $D805085D, $082E0010
                dc.l    $D8050061, $0030FFF0, $D8050065, $00320000
                dc.l    $E8050069, $0034FFF0, $E805006D, $00360000
                dc.l    $F8050069, $0034FFF0, $F805006D, $00360000
                dc.l    $08050069, $0034FFF0, $0805006D, $00360000
                dc.l    $18050083, $0041FFF0, $18050087, $00430000
loc_19FB4:
                dc.w    $000E
                dc.l    $D405005D, $002EFFE0, $D405085D, $082E0010
                dc.l    $D4050061, $0030FFF0, $D4050065, $00320000
                dc.l    $E4050069, $0034FFF0, $E405006D, $00360000
                dc.l    $F4050069, $0034FFF0, $F405006D, $00360000
                dc.l    $04050069, $0034FFF0, $0405006D, $00360000
                dc.l    $0C050069, $0034FFF0, $0C05006D, $00360000
                dc.l    $1C050083, $0041FFF0, $1C050087, $00430000
loc_1A026:
                dc.w    $000E
                dc.l    $D005005D, $002EFFE0, $D005085D, $082E0010
                dc.l    $D0050061, $0030FFF0, $D0050065, $00320000
                dc.l    $E0050069, $0034FFF0, $E005006D, $00360000
                dc.l    $F0050069, $0034FFF0, $F005006D, $00360000
                dc.l    $00050069, $0034FFF0, $0005006D, $00360000
                dc.l    $10050069, $0034FFF0, $1005006D, $00360000
                dc.l    $20050083, $0041FFF0, $20050087, $00430000                
;=============================================================================== 
; Object 0x2B - Neo Green Hill - Breakable Pillar
; [ End ]                         
;=============================================================================== 
J_DisplaySprite_05: ; loc_1A098:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_14: ; loc_1A09E:
                jmp     DeleteObject            ; (loc_D3B4)
J_MarkObjGone_0B: ; loc_1A0A4:
                jmp     MarkObjGone             ; (loc_D2A0)
J_SingleObjLoad2_03: ; loc_1A0AA:
                jmp     SingleObjLoad2      ; (loc_E788)
J_Adjust2PArtPointer_0D: ; loc_1A0B0:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_05: ; loc_1A0B6:
                jmp     SolidObject             ; (loc_F4A0)
J_SpeedToPos_08: ; loc_1A0BC:
                jmp     SpeedToPos              ; (loc_D27A)
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x2C - Neo Green Hill - Leaves
; [ Begin ]                         
;===============================================================================                  
Obj_0x2C_Leaves: ; loc_1A0C4:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1A0D2(PC, D0), D1
                jmp     loc_1A0D2(PC, D1)
loc_1A0D2:
                dc.w    loc_1A0DC-loc_1A0D2
                dc.w    loc_1A112-loc_1A0D2
                dc.w    loc_1A234-loc_1A0D2
loc_1A0D8:
                dc.b    $D6, $D4, $D5, $00
loc_1A0DC:
                addq.b  #$02, $0024(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.b  loc_1A0D8(PC, D0), $0020(A0)
                move.l  #Lava_Attributes_Mappings, $0004(A0) ; loc_15612
                move.w  #$8680, $0002(A0)
                move.b  #$84, $0001(A0)
                move.b  #$80, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), $001A(A0)
loc_1A112:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_15       ; loc_1A2F2
                tst.w   (Debug_placement_mode).w
                beq.s   loc_1A130
                bsr     J_DisplaySprite_06      ; loc_1A2EC
loc_1A130:
                move.b  $0021(A0), D0
                beq.s   loc_1A16C
                move.b  ($FFFFFE05).w, D0
                andi.w  #$000F, D0
                bne.s   loc_1A150
                lea     ($FFFFB000).w, A2
                bclr    #$00, $0021(A0)
                beq.s   loc_1A168
                bsr.s   loc_1A16E
                bra.s   loc_1A168
loc_1A150:
                addi.w  #$0008, D0
                andi.w  #$000F, D0
                bne.s   loc_1A168
                lea     ($FFFFB040).w, A2
                bclr    #$01, $0021(A0)
                beq.s   loc_1A168
                bsr.s   loc_1A16E
loc_1A168:
                clr.b   $0021(A0)
loc_1A16C:
                rts
loc_1A16E:
                move.w  $0010(A2), D0
                bpl.s   loc_1A176
                neg.w   D0
loc_1A176:
                cmpi.w  #$0200, D0
                bcc.s   loc_1A18A
                move.w  $0012(A2), D0
                bpl.s   loc_1A184
                neg.w   D0
loc_1A184:
                cmpi.w  #$0200, D0
                bcs.s   loc_1A16C
loc_1A18A:
                lea     (loc_1A224), A3
                moveq   #$03, D6
loc_1A192:                
                bsr     J_SingleObjLoad_03   ; loc_1A2F8
                bne     loc_1A21E
                move.b  #$2C, $0000(A1)
                move.b  #$04, $0024(A1)
                move.w  $0008(A2), $0008(A1)
                move.w  $000C(A2), $000C(A1)
                bsr     loc_1A2FE
                andi.w  #$000F, D0
                subq.w  #$08, D0
                add.w   D0, $0008(A1)
                swap.w  D0
                andi.w  #$000F, D0
                subq.w  #$08, D0
                add.w   D0, $000C(A1)
                move.w  (A3)+, $0010(A1)
                move.w  (A3)+, $0012(A1)
                btst    #$00, $0022(A2)
                beq.s   loc_1A1E0
                neg.w   $0010(A1)
loc_1A1E0:
                move.w  $0008(A1), $0030(A1)
                move.w  $000C(A1), $0034(A1)
                andi.b  #$01, D0
                move.b  D0, $001A(A1)
                move.l  #Leaves_Mappings, $0004(A1) ; loc_1A2BC
                move.w  #$E410, $0002(A1)
                move.b  #$84, $0001(A1)
                move.b  #$08, $0019(A1)
                move.b  #$01, $0018(A1)
                move.b  #$04, $0038(A1)
                move.b  D1, $0026(A0)
loc_1A21E:
                dbra    D6, loc_1A192
                rts  
loc_1A224:
                dc.w    $FF80, $FF80, $00C0, $FFC0, $FF40, $0040, $0080, $0080
loc_1A234:
                move.b  $0038(A0), D0
                add.b   D0, $0026(A0)
                add.b   ($FFFFFE0F).w, D0
                andi.w  #$001F, D0
                bne.s   loc_1A252
                add.b   D7, D0
                andi.b  #$01, D0
                beq.s   loc_1A252
                neg.b   $0038(A0)
loc_1A252:
                move.l  $0030(A0), D2
                move.l  $0034(A0), D3
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0030(A0)
                move.l  D3, $0034(A0)
                swap.w  D2
                andi.w  #$0003, D3
                addq.w  #$04, D3
                add.w   D3, $0012(A0)
                move.b  $0026(A0), D0
                bsr     loc_1A304
                asr.w   #$06, D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                asr.w   #$06, D1
                add.w   $0034(A0), D1
                move.w  D1, $000C(A0)
                subq.b  #$01, $001E(A0)
                bpl.s   loc_1A2B0
                move.b  #$0B, $001E(A0)
                bchg    #1, $001A(A0)
loc_1A2B0:
                tst.b   $0001(A0)
                bpl     J_DeleteObject_15       ; loc_1A2F2
                bra     J_DisplaySprite_06      ; loc_1A2EC
Leaves_Mappings:                
loc_1A2BC:
                dc.w    loc_1A2C4-loc_1A2BC
                dc.w    loc_1A2CE-loc_1A2BC
                dc.w    loc_1A2D8-loc_1A2BC
                dc.w    loc_1A2E2-loc_1A2BC
loc_1A2C4:
                dc.w    $0001
                dc.l    $FC000000, $0000FFFC
loc_1A2CE:
                dc.w    $0001
                dc.l    $FC040001, $0000FFF8
loc_1A2D8:
                dc.w    $0001
                dc.l    $FC040003, $0001FFF8
loc_1A2E2:
                dc.w    $0001
                dc.l    $FC040005, $0002FFF8                            
;=============================================================================== 
; Object 0x2C - Neo Green Hill - Leaves
; [ End ]                         
;===============================================================================                   
J_DisplaySprite_06: ; loc_1A2EC:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_15: ; loc_1A2F2:
                jmp     DeleteObject            ; (loc_D3B4)
J_SingleObjLoad_03: ; loc_1A2F8:
                jmp     SingleObjLoad        ; (loc_E772)
loc_1A2FE:
                jmp     PseudoRandomNumber      ; loc_31E4
loc_1A304:
                jmp     CalcSine                ; loc_320A  
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x40 - Chemical Plant / Neo Green Hill - Springs 
; [ Begin ]                         
;===============================================================================  
Obj_0x40_Diagonal_Springs: ; loc_1A30C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1A31E(PC, D0), D1
                jsr     loc_1A31E(PC, D1)
                bra     J_MarkObjGone_0C        ; loc_1A5B4
loc_1A31E:
                dc.w    loc_1A328-loc_1A31E
                dc.w    loc_1A364-loc_1A31E
loc_1A322:
                dc.w    $FC00, $F600, $F800
loc_1A328:
                addq.b  #$02, $0024(A0)
                move.l  #Diagonal_Spring_Mappings, $0004(A0) ; loc_1A58A
                move.w  #$0440, $0002(A0)
                bsr     J_Adjust2PArtPointer_0E ; loc_1A5C0
                ori.b   #$04, $0001(A0)
                move.b  #$1C, $0019(A0)
                move.b  #$04, $0018(A0)
                bset    #$07, $0022(A0)
                move.b  $0028(A0), D0
                andi.w  #$0002, D0
                move.w  loc_1A322(PC, D0), $0030(A0)
loc_1A364:
                lea     (loc_1A57E), A1
                bsr     J_AnimateSprite_02      ; loc_1A5BA
                move.w  #$0027, D1
                move.w  #$0008, D2
                move.w  $0008(A0), D4
                lea     loc_1A52E(PC), A2
                tst.b   $001A(A0)
                beq.s   loc_1A388
                lea     loc_1A556(PC), A2
loc_1A388:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     loc_1A5C6
                btst    #$03, $0022(A0)
                beq.s   loc_1A3A0
                bsr.s   loc_1A3BA
loc_1A3A0:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     loc_1A5C6
                btst    #$04, $0022(A0)
                beq.s   loc_1A3B8
                bsr.s   loc_1A3BA
loc_1A3B8:
                rts
loc_1A3BA:
                btst    #$00, $0022(A0)
                bne.s   loc_1A3D2
                move.w  $0008(A0), D0
                subi.w  #$0010, D0
                cmp.w   $0008(A1), D0
                bcs.s   loc_1A3E2
                rts
loc_1A3D2:
                move.w  $0008(A0), D0
                addi.w  #$0010, D0
                cmp.w   $0008(A1), D0
                bcc.s   loc_1A3E2
                rts
loc_1A3E2:
                cmpi.b  #$01, $001C(A0)
                beq.s   loc_1A3F2
                move.w  #$0100, $001C(A0)
                rts
loc_1A3F2:
                tst.b   $001A(A0)
                beq.s   loc_1A3FA
                rts
loc_1A3FA:
                move.w  $0008(A0), D0
                subi.w  #$001C, D0
                sub.w   $0008(A1), D0
                neg.w   D0
                btst    #$00, $0022(A0)
                beq.s   loc_1A416
                not.w  D0
                addi.w  #$0027, D0
loc_1A416:
                tst.w   D0
                bpl.s   loc_1A41C
                moveq   #$00, D0
loc_1A41C:
                lea     (loc_1A4E6), A3
                move.b  $00(A3, D0), D0
                move.w  #$FC00, $0012(A1)
                sub.b   D0, $0012(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   loc_1A446
                bclr    #$00, $0022(A1)
                neg.b   D0
loc_1A446:
                move.w  $0010(A1), D1
                bpl.s   loc_1A44E
                neg.w   D1
loc_1A44E:
                cmpi.w  #$0400, D1
                bcs.s   loc_1A458
                sub.b   D0, $0010(A1)
loc_1A458:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                btst    #$00, D0
                beq.s   loc_1A4B4
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0
                bne.s   loc_1A4A4
                move.b  #$03, $002C(A1)
loc_1A4A4:
                btst    #$00, $0022(A1)
                beq.s   loc_1A4B4
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_1A4B4:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_1A4CA
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_1A4CA:
                cmpi.b  #$08, D0
                bne.s   loc_1A4DC
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
loc_1A4DC:
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6   
loc_1A4E6:
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02, $02, $02, $02
                dc.b    $03, $03, $03, $03, $03, $03, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00   
loc_1A52E:
                dc.b    $08, $08, $08, $08, $08, $08, $08, $09, $0A, $0B, $0C, $0D, $0E, $0F, $10, $10
                dc.b    $11, $12, $13, $14, $14, $15, $15, $16, $17, $18, $18, $18, $18, $18, $18, $18
                dc.b    $18, $18, $18, $18, $18, $18, $18, $18      
loc_1A556:
                dc.b    $08, $08, $08, $08, $08, $08, $08, $09, $0A, $0B, $0C, $0C, $0C, $0C, $0D, $0D
                dc.b    $0D, $0D, $0D, $0D, $0E, $0E, $0F, $0F, $10, $10, $10, $10, $0F, $0F, $0E, $0E
                dc.b    $0D, $0D, $0D, $0D, $0D, $0D, $0D, $0D                
loc_1A57E:
                dc.w    loc_1A582-loc_1A57E
                dc.w    loc_1A585-loc_1A57E
loc_1A582:
                dc.b    $0F, $00, $FF
loc_1A585:
                dc.b    $03, $01, $00, $FD, $00 
Diagonal_Spring_Mappings:                                                         
loc_1A58A:
                dc.w    loc_1A58E-loc_1A58A
                dc.w    loc_1A5A0-loc_1A58A   
loc_1A58E:
                dc.w    $0002
                dc.l    $E8090000, $0000FFE4, $E80D0006, $0003FFFC
loc_1A5A0:
                dc.w    $0002
                dc.l    $E809000E, $0007FFE4, $E80D0014, $000AFFFC                
;=============================================================================== 
; Object 0x40 - Chemical Plant / Neo Green Hill - Springs 
; [ End ]                         
;===============================================================================  
                nop
J_MarkObjGone_0C: ; loc_1A5B4:
                jmp     MarkObjGone             ; (loc_D2A0)
J_AnimateSprite_02: ; loc_1A5BA:
                jmp     AnimateSprite           ; (loc_D412)
J_Adjust2PArtPointer_0E: ; loc_1A5C0:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
loc_1A5C6:
                jmp     (loc_F562)
                
;=============================================================================== 
; Object 0x42 - Metropolis - Steam Vent 
; [ Begin ]                         
;===============================================================================                  
Obj_0x42_Steam_Vent: ; loc_1A5CC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1A5DA(PC, D0), D1
                jmp     loc_1A5DA(PC, D1)
loc_1A5DA:
                dc.w    loc_1A5E0-loc_1A5DA
                dc.w    loc_1A620-loc_1A5DA
                dc.w    loc_1A7CC-loc_1A5DA
loc_1A5E0:
                addq.b  #$02, $0024(A0)
                move.l  #Steam_Vent_Mappings, $0004(A0) ; loc_1A7FE
                move.w  #$6000, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                bsr     J_Adjust2PArtPointer_0F ; loc_1A8A8
                move.b  #$07, $001A(A0)
                move.w  $000C(A0), $0034(A0)
                move.w  #$0010, $0036(A0)
                addi.w  #$0010, $000C(A0)
loc_1A620:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     loc_1A8AE
                btst    #$03, $0022(A0)
                beq.s   loc_1A64A
                bsr     loc_1A726
loc_1A64A:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     loc_1A8AE
                btst    #$04, $0022(A0)
                beq.s   loc_1A664
                bsr     loc_1A726
loc_1A664:
                move.b  $0025(A0), D0
                bne.s   loc_1A67C
                subq.w  #$01, $0032(A0)
                bpl.s   loc_1A6E0
                move.w  #$007F, $0032(A0)
                addq.b  #$02, $0025(A0)
                bra.s   loc_1A6E0
loc_1A67C:
                subq.b  #$02, D0
                bne.s   loc_1A6AE
                subq.w  #$08, $0036(A0)
                bne.s   loc_1A6A0
                addq.b  #$02, $0025(A0)
                bsr.s   loc_1A6E4
                addi.w  #$0028, $0008(A1)
                bsr.s   loc_1A6E4
                subi.w  #$0028, $0008(A1)
                bset    #$00, $0001(A1)
loc_1A6A0:
                move.w  $0036(A0), D0
                add.w   $0034(A0), D0
                move.w  D0, $000C(A0)
                bra.s   loc_1A6E0
loc_1A6AE:
                subq.b  #$02, D0
                bne.s   loc_1A6C4
                subq.w  #$01, $0032(A0)
                bpl.s   loc_1A6E0
                move.w  #$007F, $0032(A0)
                addq.b  #$02, $0025(A0)
                bra.s   loc_1A6E0
loc_1A6C4:
                addq.w  #$08, $0036(A0)
                cmpi.w  #$0010, $0036(A0)
                bne.s   loc_1A6D4
                clr.b   $0025(A0)
loc_1A6D4:
                move.w  $0036(A0), D0
                add.w   $0034(A0), D0
                move.w  D0, $000C(A0)
loc_1A6E0:
                bra     J_MarkObjGone_0D        ; loc_1A8A2
loc_1A6E4:
                bsr     J_SingleObjLoad_04   ; loc_1A89C
                bne.s   loc_1A724
                move.b  $0000(A0), $0000(A1)
                addq.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $0034(A0), $000C(A1)
                move.b  #$07, $001E(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  #$2405, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$18, $0019(A1)
                move.b  #$04, $0018(A1)
loc_1A724:
                rts
loc_1A726:
                cmpi.b  #$02, $0025(A0)
                beq.s   loc_1A730
                rts
loc_1A730:
                move.w  #$FA00, $0012(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                bpl.s   loc_1A75A
                move.w  #$0000, $0010(A1)
loc_1A75A:
                btst    #$00, D0
                beq.s   loc_1A79A
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                btst    #$01, D0
                bne.s   loc_1A78A
                move.b  #$01, $002C(A1)
loc_1A78A:
                btst    #$00, $0022(A1)
                beq.s   loc_1A79A
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_1A79A:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_1A7B0
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_1A7B0:
                cmpi.b  #$08, D0
                bne.s   loc_1A7C2
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
loc_1A7C2:
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6
loc_1A7CC:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_1A7FA
                move.b  #$07, $001E(A0)
                move.b  #$00, $0020(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$02, $001A(A0)
                bne.s   loc_1A7F0
                move.b  #$8B, $0020(A0)
loc_1A7F0:
                cmpi.b  #$07, $001A(A0)
                beq     J_DeleteObject_16       ; loc_1A896
loc_1A7FA:
                bra     J_DisplaySprite_07      ; loc_1A890
Steam_Vent_Mappings:                
loc_1A7FE:
                dc.w    loc_1A80E-loc_1A7FE
                dc.w    loc_1A818-loc_1A7FE
                dc.w    loc_1A822-loc_1A7FE
                dc.w    loc_1A82C-loc_1A7FE
                dc.w    loc_1A83E-loc_1A7FE
                dc.w    loc_1A850-loc_1A7FE
                dc.w    loc_1A86A-loc_1A7FE
                dc.w    loc_1A87C-loc_1A7FE
loc_1A80E:
                dc.w    $0001
                dc.l    $FF000000, $0000FFE8
loc_1A818:
                dc.w    $0001
                dc.l    $FF040001, $0000FFE8
loc_1A822:
                dc.w    $0001
                dc.l    $FC050003, $0001FFEC
loc_1A82C:
                dc.w    $0002
                dc.l    $FC050007, $0003FFF8, $FC050003, $0001FFF0
loc_1A83E:
                dc.w    $0002
                dc.l    $FC051007, $10030000, $FC01100B, $1005FFF8
loc_1A850:
                dc.w    $0003
                dc.l    $FC01000D, $0006000C, $FC01000B, $00050004
                dc.l    $FC01180D, $1806FFFC
loc_1A86A:
                dc.w    $0002
                dc.l    $FC01000D, $00060010, $FC01180D, $18060008
loc_1A87C:
                dc.w    $0002
                dc.l    $F0070015, $000AFFF0, $F007001D, $000E0000                    
;=============================================================================== 
; Object 0x42 - Metropolis - Steam Vent 
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler
J_DisplaySprite_07: ; loc_1A890:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_16: ; loc_1A896:
                jmp     DeleteObject            ; (loc_D3B4)
J_SingleObjLoad_04: ; loc_1A89C:
                jmp     SingleObjLoad        ; (loc_E772)
J_MarkObjGone_0D: ; loc_1A8A2:
                jmp     MarkObjGone             ; (loc_D2A0)
J_Adjust2PArtPointer_0F: ; loc_1A8A8:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
loc_1A8AE:
                jmp     (loc_F510)   
;=============================================================================== 
; Object 0x64 - Metropolis - Pistons 
; [ Begin ]                         
;===============================================================================                  
Obj_0x64_Pistons: ; loc_1A8B4:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1A8C2(PC, D0), D1
                jmp     loc_1A8C2(PC, D1)
loc_1A8C2:
                dc.w    loc_1A8CE-loc_1A8C2
                dc.w    loc_1A936-loc_1A8C2
loc_1A8C6:
                dc.b    $40, $0C, $40, $01, $10, $20, $40, $01
loc_1A8CE:
                addq.b  #$02, $0024(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     loc_1A8C6(PC, D0), A3
                move.b  (A3)+, $0019(A0)
                move.b  (A3)+, $002E(A0)
                lsr.w   #$02, D0
                move.b  D0, $001A(A0)
                bne.s   loc_1A8FE
                move.b  #$6C, $0016(A0)
                bset    #$04, $0001(A0)
loc_1A8FE:
                move.l  #Piston_Mappings, $0004(A0) ; loc_1A9F0
                move.w  #$2000, $0002(A0)
                bsr     J_Adjust2PArtPointer_10 ; loc_1AA68
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0030(A0)
                moveq   #$00, D0
                move.b  (A3)+, D0
                move.w  D0, $003C(A0)
                andi.b  #$0F, $0028(A0)
loc_1A936:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.w  loc_1A988(PC, D0), D1
                jsr     loc_1A988(PC, D1)
                move.w  (A7)+, D4
                tst.b   $0001(A0)
                bpl.s   loc_1A96A
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $002E(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_06        ; loc_1AA6E
loc_1A96A:
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_17       ; loc_1A982
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_17: ; loc_1A982:
                jmp     DeleteObject            ; (loc_D3B4)   
loc_1A988:                              
                dc.w    loc_1A98C-loc_1A988
                dc.w    loc_1A98E-loc_1A988
loc_1A98C:
                rts
loc_1A98E:
                tst.b   $0038(A0)
                bne.s   loc_1A9B2
                tst.w   $003A(A0)
                beq.s   loc_1A9A0
                subq.w  #$08, $003A(A0)
                bra.s   loc_1A9D2
loc_1A9A0:
                subq.w  #$01, $0036(A0)
                bpl.s   loc_1A9D2
                move.w  #$003C, $0036(A0)
                move.b  #$01, $0038(A0)
loc_1A9B2:
                move.w  $003A(A0), D0
                cmp.w   $003C(A0), D0
                beq.s   loc_1A9C2
                addq.w  #$08, $003A(A0)
                bra.s   loc_1A9D2
loc_1A9C2:
                subq.w  #$01, $0036(A0)
                bpl.s   loc_1A9D2
                move.w  #$003C, $0036(A0)
                clr.b   $0038(A0)
loc_1A9D2:
                move.w  $003A(A0), D0
                btst    #$00, $0022(A0)
                beq.s   loc_1A9E4
                neg.w   D0
                addi.w  #$0040, D0
loc_1A9E4:
                move.w  $0030(A0), D1
                add.w   D0, D1
                move.w  D1, $000C(A0)
                rts                   
Piston_Mappings:
loc_1A9F0:
                dc.w    loc_1A9F4-loc_1A9F0
                dc.w    loc_1AA46-loc_1A9F0
loc_1A9F4:
                dc.w    $000A
                dc.l    $F40E0001, $0000FFC0, $F40E0801, $0800FFE0
                dc.l    $F40E0001, $00000000, $F40E0801, $08000020
                dc.l    $0C07000D, $0006FFD8, $2C07000D, $0006FFD8
                dc.l    $4C07000D, $0006FFD8, $0C07000D, $00060018
                dc.l    $2C07000D, $00060018, $4C07000D, $00060018
loc_1AA46:
                dc.w    $0004
                dc.l    $E0070057, $002BFFF0, $E0070857, $082B0000
                dc.l    $00071057, $102BFFF0, $00071857, $182B0000  
;=============================================================================== 
; Object 0x64 - Metropolis - Pistons 
; [ End ]                         
;===============================================================================                  
J_Adjust2PArtPointer_10: ; loc_1AA68:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_06: ; loc_1AA6E:
                jmp     SolidObject             ; (loc_F4A0)             
;=============================================================================== 
; Object 0x65 - Metropolis - Platform / Platform Over Gears
; [ Begin ]                         
;===============================================================================                 
Obj_0x65_Platform: ; loc_1AA74:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1AA82(PC, D0), D1
                jmp     loc_1AA82(PC, D1)
loc_1AA82:
                dc.w    loc_1AA9A-loc_1AA82
                dc.w    loc_1ABB0-loc_1AA82
                dc.w    loc_1AE08-loc_1AA82
                dc.w    loc_1AE26-loc_1AA82
loc_1AA8A:
                dc.b    $40, $0C, $80, $01, $20, $0C, $40, $03, $10, $10, $20, $00, $40, $0C, $80, $07
loc_1AA9A:
                addq.b  #$02, $0024(A0)
                move.l  #Mz_Platform_Mappings, $0004(A0) ; loc_1AE2C
                move.w  #$6000, $0002(A0)
                bsr     J_Adjust2PArtPointer_11 ; loc_1AEB0
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     loc_1AA8A(PC, D0), A3
                move.b  (A3)+, $0019(A0)
                move.b  (A3)+, $0016(A0)
                lsr.w   #$02, D0
                move.b  D0, $001A(A0)
                cmpi.b  #$01, D0
                bne.s   loc_1AAE6
                bset    #$07, $0022(A0)
loc_1AAE6:
                cmpi.b  #$02, D0
                bne.s   loc_1AB02
                addq.b  #$04, $0024(A0)
                move.l  #Obj_0x65_Mappings_1, $0004(A0) ; loc_1AE68
                move.w  #$655F, $0002(A0)
                bra     loc_1AE26
loc_1AB02:
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0030(A0)
                moveq   #$00, D0
                move.b  (A3)+, D0
                move.w  D0, $003C(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                bpl     loc_1ABAA
                andi.b  #$0F, D0
                move.b  D0, $003E(A0)
                move.b  (A3), $0028(A0)
                cmpi.b  #$07, (A3)
                bne.s   loc_1AB38
                move.w  $003C(A0), $003A(A0)
loc_1AB38:
                bsr     J_SingleObjLoad2_04  ; loc_1AEAA
                bne.s   loc_1AB98
                move.b  $0000(A0), $0000(A1)
                addq.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$FFB4, $0008(A1)
                addi.w  #$0014, $000C(A1)
                btst    #$00, $0022(A0)
                bne.s   loc_1AB74
                subi.w  #$FFE8, $0008(A1)
                bset    #$00, $0001(A1)
loc_1AB74:
                move.l  #Obj_0x65_Mappings_1, $0004(A1) ; loc_1AE68
                move.w  #$655F, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$04, $0018(A1)
                move.l  A0, $003C(A1)
loc_1AB98:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_1ABAA
                bclr    #$07, $02(A2, D0)
loc_1ABAA:
                andi.b  #$0F, $0028(A0)
loc_1ABB0:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.w  loc_1AC0E(PC, D0), D1
                jsr     loc_1AC0E(PC, D1)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_07        ; loc_1AEB6
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1ABF6
                jmp     DisplaySprite           ; (loc_D3C2)
loc_1ABF6:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_18       ; loc_1AC08
                bclr    #$07, $02(A2, D0)
J_DeleteObject_18: ; loc_1AC08:
                jmp     DeleteObject            ; (loc_D3B4)
loc_1AC0E:
                dc.w    loc_1AC1E-loc_1AC0E
                dc.w    loc_1AC34-loc_1AC0E
                dc.w    loc_1ACC0-loc_1AC0E
                dc.w    loc_1AD1C-loc_1AC0E
                dc.w    loc_1ADC0-loc_1AC0E
                dc.w    loc_1ADCE-loc_1AC0E
                dc.w    loc_1AC20-loc_1AC0E
                dc.w    loc_1ACA0-loc_1AC0E
loc_1AC1E:
                rts
loc_1AC20:
                tst.b   $0038(A0)
                bne.s   loc_1AC32
                subq.w  #$01, $0036(A0)
                bne.s   loc_1AC60
                move.b  #$01, $0038(A0)
loc_1AC32:
                bra.s   loc_1AC52
loc_1AC34:
                tst.b   $0038(A0)
                bne.s   loc_1AC52
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  $003E(A0), D0
                btst    #$00, $00(A2, D0)
                beq.s   loc_1AC60
                move.b  #$01, $0038(A0)
loc_1AC52:
                move.w  $003C(A0), D0
                cmp.w   $003A(A0), D0
                beq.s   loc_1AC7E
                addq.w  #$02, $003A(A0)
loc_1AC60:
                move.w  $003A(A0), D0
                btst    #$00, $0022(A0)
                beq.s   loc_1AC72
                neg.w   D0
                addi.w  #$0080, D0
loc_1AC72:
                move.w  $0034(A0), D1
                sub.w   D0, D1
                move.w  D1, $0008(A0)
                rts
loc_1AC7E:
                addq.b  #$01, $0028(A0)
                move.w  #$00B4, $0036(A0)
                clr.b   $0038(A0)
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_1AC60
                bset    #$00, $02(A2, D0)
                bra.s   loc_1AC60
loc_1ACA0:
                tst.b   $0038(A0)
                bne.s   loc_1ACBE
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  $003E(A0), D0
                btst    #$00, $00(A2, D0)
                beq.s   loc_1ACDC
                move.b  #$01, $0038(A0)
loc_1ACBE:
                bra.s   loc_1ACD2
loc_1ACC0:
                tst.b   $0038(A0)
                bne.s   loc_1ACD2
                subq.w  #$01, $0036(A0)
                bne.s   loc_1ACDC
                move.b  #$01, $0038(A0)
loc_1ACD2:
                tst.w   $003A(A0)
                beq.s   loc_1ACFA
                subq.w  #$02, $003A(A0)
loc_1ACDC:
                move.w  $003A(A0), D0
                btst    #$00, $0022(A0)
                beq.s   loc_1ACEE
                neg.w   D0
                addi.w  #$0080, D0
loc_1ACEE:
                move.w  $0034(A0), D1
                sub.w   D0, D1
                move.w  D1, $0008(A0)
                rts
loc_1ACFA:
                subq.b  #$01, $0028(A0)
                move.w  #$00B4, $0036(A0)
                clr.b   $0038(A0)
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_1ACDC
                bclr    #$00, $02(A2, D0)
                bra.s   loc_1ACDC
loc_1AD1C:
                move.w  $0034(A0), D4
                move.w  D4, D5
                btst    #$00, $0022(A0)
                bne.s   loc_1AD34
                subi.w  #$0020, D4
                addi.w  #$0060, D5
                bra.s   loc_1AD3C
loc_1AD34:
                subi.w  #$00A0, D4
                subi.w  #$0020, D5
loc_1AD3C:
                move.w  $000C(A0), D2
                move.w  D2, D3
                subi.w  #$0010, D2
                addi.w  #$0040, D3
                moveq   #$00, D1
                move.w  ($FFFFB008).w, D0
                cmp.w   D4, D0
                bcs.s   loc_1AD66
                cmp.w   D5, D0
                bcc.s   loc_1AD66
                move.w  ($FFFFB00C).w, D0
                cmp.w   D2, D0
                bcs.s   loc_1AD66
                cmp.w   D3, D0
                bcc.s   loc_1AD66
                moveq   #$01, D1
loc_1AD66:
                move.w  ($FFFFB048).w, D0
                cmp.w   D4, D0
                bcs.s   loc_1AD80
                cmp.w   D5, D0
                bcc.s   loc_1AD80
                move.w  ($FFFFB04C).w, D0
                cmp.w   D2, D0
                bcs.s   loc_1AD80
                cmp.w   D3, D0
                bcc.s   loc_1AD80
                moveq   #$01, D1
loc_1AD80:
                tst.b   D1
                beq.s   loc_1AD96
                move.w  $003C(A0), D0
                cmp.w   $003A(A0), D0
                beq.s   loc_1ADBE
                addi.w  #$0010, $003A(A0)
                bra.s   loc_1ADA2
loc_1AD96:
                tst.w   $003A(A0)
                beq.s   loc_1ADA2
                subi.w  #$0010, $003A(A0)
loc_1ADA2:
                move.w  $003A(A0), D0
                btst    #$00, $0022(A0)
                beq.s   loc_1ADB4
                neg.w   D0
                addi.w  #$0040, D0
loc_1ADB4:
                move.w  $0034(A0), D1
                sub.w   D0, D1
                move.w  D1, $0008(A0)
loc_1ADBE:
                rts
loc_1ADC0:
                btst    #$03, $0022(A0)
                beq.s   loc_1ADCC
                addq.b  #$01, $0028(A0)
loc_1ADCC:
                rts
loc_1ADCE:
                tst.b   $0038(A0)
                bne.s   loc_1ADE8
                addq.w  #$02, $0008(A0)
                cmpi.w  #$1B40, $0008(A0)
                bne.s   loc_1ADFA
                move.b  #$01, $0038(A0)
                bra.s   loc_1ADFA
loc_1ADE8:
                subq.w  #$02, $0008(A0)
                cmpi.w  #$1800, $0008(A0)
                bne.s   loc_1ADFA
                move.b  #$00, $0038(A0)
loc_1ADFA:
                move.w  $0008(A0), $0034(A0)
                move.w  $0008(A0), ($FFFFF7B0).w
                rts
loc_1AE08:
                move.l  $003C(A0), A1
                move.w  $003A(A1), D0
loc_1AE10:                
                andi.w  #$0007, D0
                move.b  loc_1AE1E(PC, D0), $001A(A0)
                bra     J_MarkObjGone_0E        ; loc_1AEA4    
loc_1AE1E:
                dc.b    $00, $00, $02, $02, $02, $01, $01, $01
loc_1AE26:
                move.w  ($FFFFF7B0).w, D0
                bra.s   loc_1AE10  
Mz_Platform_Mappings:                
loc_1AE2C:
                dc.w    loc_1AE34-loc_1AE2C
                dc.w    loc_1AE56-loc_1AE2C
                dc.w    loc_1AE34-loc_1AE2C
                dc.w    loc_1AE34-loc_1AE2C
loc_1AE34:
                dc.w    $0004
                dc.l    $F40E004B, $0025FFC0, $F40E004B, $0025FFE0
                dc.l    $F40E004B, $00250000, $F40E004B, $00250020
loc_1AE56:
                dc.w    $0002
                dc.l    $F40E0039, $001CFFE0, $F40E0839, $081C0000  
Obj_0x65_Mappings_1:                
loc_1AE68:
                dc.w    loc_1AE6E-loc_1AE68
                dc.w    loc_1AE80-loc_1AE68
                dc.w    loc_1AE92-loc_1AE68
loc_1AE6E:
                dc.w    $0002
                dc.l    $F4060000, $0000FFF0, $F4060800, $08000000
loc_1AE80:
                dc.w    $0002
                dc.l    $F4060006, $0003FFF0, $F4061806, $18030000
loc_1AE92:
                dc.w    $0002
                dc.l    $F4061006, $1003FFF0, $F4060806, $08030000                                                    
;=============================================================================== 
; Object 0x65 - Metropolis - Platform Over Gears
; [ End ]                         
;===============================================================================                  
J_MarkObjGone_0E: ; loc_1AEA4:
                jmp     MarkObjGone             ; (loc_D2A0)
J_SingleObjLoad2_04: ; loc_1AEAA:
                jmp     SingleObjLoad2      ; (loc_E788)
J_Adjust2PArtPointer_11: ; loc_1AEB0:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_07: ; loc_1AEB6:
                jmp     SolidObject             ; (loc_F4A0)     
;=============================================================================== 
; Object 0x66 - Metropolis - Springs on Walls
; [ Begin ]                         
;===============================================================================                   
Obj_0x66_Spring_Wall: ; loc_1AEBC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1AECA(PC, D0), D1
                jmp     loc_1AECA(PC, D1)
loc_1AECA:
                dc.w    loc_1AECE-loc_1AECA
                dc.w    loc_1AF12-loc_1AECA
loc_1AECE:
                addq.b  #$02, $0024(A0)
                move.l  #Spring_Wall_Mappings, $0004(A0) ; loc_1B084
                move.w  #$8680, $0002(A0)
                bsr     J_Adjust2PArtPointer_12 ; loc_1B0B8
                ori.b   #$04, $0001(A0)
                move.b  #$08, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  #$40, $0016(A0)
                move.b  $0028(A0), D0
                lsr.b   #$04, D0
                andi.b  #$07, D0
                move.b  D0, $001A(A0)
                beq.s   loc_1AF12
                move.b  #$80, $0016(A0)
loc_1AF12:
                move.w  #$0013, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     loc_1B0BE
                cmpi.b  #$01, D4
                bne.s   loc_1AF5A
                btst    #$01, $0022(A1)
                beq.s   loc_1AF5A
                move.b  $0022(A0), D1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcs.s   loc_1AF52
                eori.b  #$01, D1
loc_1AF52:
                andi.b  #$01, D1
                bne.s   loc_1AF5A
                bsr.s   loc_1AFB0
loc_1AF5A:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     loc_1B0BE
                cmpi.b  #$01, D4
                bne.s   loc_1AF90
                btst    #$01, $0022(A1)
                beq.s   loc_1AF90
                move.b  $0022(A0), D1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcs.s   loc_1AF88
                eori.b  #$01, D1
loc_1AF88:
                andi.b  #$01, D1
                bne.s   loc_1AF90
                bsr.s   loc_1AFB0
loc_1AF90:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_19       ; loc_1B0B2
                tst.w   (Debug_placement_mode).w
                beq.s   loc_1AFAE
                bsr     J_DisplaySprite_08      ; loc_1B0AC
loc_1AFAE:
                rts
loc_1AFB0:
                move.w  $0030(A0), $0010(A1)
                move.w  #$F800, $0010(A1)
                move.w  #$F800, $0012(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   loc_1AFDA
                bclr    #$00, $0022(A1)
                neg.w   $0010(A1)
loc_1AFDA:
                move.w  #$000F, $002E(A1)
                move.w  $0010(A1), $0014(A1)
                btst    #$02, $0022(A1)
                bne.s   loc_1AFF4
                move.b  #$00, $001C(A1)
loc_1AFF4:
                move.b  $0028(A0), D0
                bpl.s   loc_1B000
                move.w  #$0000, $0012(A1)
loc_1B000:
                btst    #$00, D0
                beq.s   loc_1B040
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0
                bne.s   loc_1B030
                move.b  #$03, $002C(A1)
loc_1B030:
                btst    #$00, $0022(A1)
                beq.s   loc_1B040
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_1B040:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_1B056
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_1B056:
                cmpi.b  #$08, D0
                bne.s   loc_1B068
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
loc_1B068:
                bclr    #$05, $0022(A0)
                bclr    #$06, $0022(A0)
                bclr    #$05, $0022(A1)
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6
Spring_Wall_Mappings:                   
loc_1B084:
                dc.w    loc_1B088-loc_1B084
                dc.w    loc_1B09A-loc_1B084                
loc_1B088:
                dc.w    $0002
                dc.l    $C0050034, $001AFFF8, $30050034, $001AFFF8
loc_1B09A:
                dc.w    $0002
                dc.l    $80050034, $001AFFF8, $70050034, $001AFFF8   
;=============================================================================== 
; Object 0x66 - Metropolis - Springs on Walls
; [ End ]                         
;===============================================================================  
J_DisplaySprite_08: ; loc_1B0AC:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_19: ; loc_1B0B2:
                jmp     DeleteObject            ; (loc_D3B4)
J_Adjust2PArtPointer_12: ; loc_1B0B8:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
loc_1B0BE:
                jmp     (loc_F510)                  
;=============================================================================== 
; Object 0x67 - Metropolis - Teleport Attributes
; [ Begin ]                         
;===============================================================================                    
Obj_0x67_Teleport_Attributes: ; loc_1B0C4:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1B0EC(PC, D0), D1
                jsr     loc_1B0EC(PC, D1)
                move.b  $002C(A0), D0
                add.b   $0036(A0), D0
                beq     loc_1B518
                lea     (loc_1B4BA), A1
                bsr     J_AnimateSprite_03      ; loc_1B512
                bra     J_DisplaySprite_09      ; loc_1B50C
loc_1B0EC:
                dc.w    loc_1B0F0-loc_1B0EC
                dc.w    loc_1B114-loc_1B0EC
loc_1B0F0:
                addq.b  #$02, $0024(A0)
                move.l  #Teleport_Attributes_Mappings, $0004(A0) ; loc_1B4D4
                move.w  #$633C, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$05, $0018(A0)
loc_1B114:
                lea     ($FFFFB000).w, A1
                lea     $002C(A0), A4
                bsr.s   loc_1B126
                lea     ($FFFFB040).w, A1
                lea     $0036(A0), A4
loc_1B126:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  loc_1B132(PC, D0), D0
                jmp     loc_1B132(PC, D0)
loc_1B132:
                dc.w    loc_1B138-loc_1B132
                dc.w    loc_1B1C8-loc_1B132
                dc.w    loc_1B1FC-loc_1B132
loc_1B138:
                tst.w   (Debug_placement_mode).w
                bne     loc_1B1C6
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addq.w  #$03, D0
                btst    #$00, $0022(A0)
                beq.s   loc_1B156
                addi.w  #$000A, D0
loc_1B156:
                cmpi.w  #$0010, D0
                bcc.s   loc_1B1C6
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                addi.w  #$0020, D1
                cmpi.w  #$0040, D1
                bcc.s   loc_1B1C6
                tst.b   $002A(A1)
                bne.s   loc_1B1C6
                addq.b  #$02, (A4)
                move.b  #$81, $002A(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0800, $0014(A1)
                move.w  #$0000, $0010(A1)
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
                bset    #$01, $0022(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                clr.b   $0001(A4)
                move.w  #$00BE, D0
                jsr     (PlaySound)              ; loc_14C6
                move.w  #$0100, $001C(A0)
loc_1B1C6:
                rts
loc_1B1C8:
                move.b  $0001(A4), D0
                addq.b  #$02, $0001(A4)
                jsr     CalcSine                ; loc_320A
                asr.w   #$05, D0
                move.w  $000C(A0), D2
                sub.w   D0, D2
                move.w  D2, $000C(A1)
                cmpi.b  #$80, $0001(A4)
                bne.s   loc_1B1FA
                bsr     loc_1B278
                addq.b  #$02, (A4)
                move.w  #$00BC, D0
                jsr     (PlaySound)              ; loc_14C6
loc_1B1FA:
                rts
loc_1B1FC:
                subq.b  #$01, $0002(A4)
                bpl.s   loc_1B230
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
                tst.b   $0028(A0)
                bpl.s   loc_1B21A
                subq.w  #$08, A2
loc_1B21A:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4)
                beq.s   loc_1B256
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$1000, D2
                bra     loc_1B2DC
loc_1B230:
                move.l  $0008(A1), D2
                move.l  $000C(A1), D3
                move.w  $0010(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A1)
                move.l  D3, $000C(A1)
                rts
loc_1B256:
                andi.w  #$07FF, $000C(A1)
                clr.b   (A4)
                clr.b   $002A(A1)
                btst    #$04, $0028(A0)
                bne.s   loc_1B276
                move.w  #$0000, $0010(A1)
                move.w  #$0000, $0012(A1)
loc_1B276:
                rts
loc_1B278:
                move.b  $0028(A0), D0
                bpl.s   loc_1B2AC
                neg.b   D0
                andi.w  #$000F, D0
                add.w   D0, D0
                lea     (loc_1B35A), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D0
                subq.w  #$04, D0
                move.w  D0, $0004(A4)
                lea     $00(A2, D0), A2
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
                subq.w  #$08, A2
                bra.s   loc_1B2D0
loc_1B2AC:
                andi.w  #$000F, D0
                add.w   D0, D0
                lea     (loc_1B35A), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, $0004(A4)
                subq.w  #$04, $0004(A4)
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
loc_1B2D0:
                move.l  A2, $0006(A4)
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$1000, D2
loc_1B2DC:
                moveq   #$00, D0
                move.w  D2, D3
                move.w  D4, D0
                sub.w   $0008(A1), D0
                bge.s   loc_1B2EC
                neg.w   D0
                neg.w   D2
loc_1B2EC:
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                bge.s   loc_1B2FA
                neg.w   D1
                neg.w   D3
loc_1B2FA:
                cmp.w   D0, D1
                bcs.s   loc_1B32C
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                swap.w  D1
                divs.w  D3, D1
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   $0008(A1), D0
                beq.s   loc_1B318
                swap.w  D0
                divs.w  D1, D0
loc_1B318:
                move.w  D0, $0010(A1)
                move.w  D3, $0012(A1)
                tst.w   D1
                bpl.s   loc_1B326
                neg.w   D1
loc_1B326:
                move.w  D1, $0002(A4)
                rts
loc_1B32C:
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   $0008(A1), D0
                swap.w  D0
                divs.w  D2, D0
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                beq.s   loc_1B346
                swap.w  D1
                divs.w  D0, D1
loc_1B346:
                move.w  D1, $0012(A1)
                move.w  D2, $0010(A1)
                tst.w   D0
                bpl.s   loc_1B354
                neg.w   D0
loc_1B354:
                move.w  D0, $0002(A4)
                rts
loc_1B35A:
                dc.w    loc_1B37A-loc_1B35A
                dc.w    loc_1B394-loc_1B35A
                dc.w    loc_1B39E-loc_1B35A
                dc.w    loc_1B3A8-loc_1B35A
                dc.w    loc_1B3B2-loc_1B35A
                dc.w    loc_1B3BC-loc_1B35A
                dc.w    loc_1B3C6-loc_1B35A
                dc.w    loc_1B3D0-loc_1B35A
                dc.w    loc_1B3EA-loc_1B35A
                dc.w    loc_1B404-loc_1B35A
                dc.w    loc_1B41E-loc_1B35A
                dc.w    loc_1B438-loc_1B35A
                dc.w    loc_1B452-loc_1B35A
                dc.w    loc_1B46C-loc_1B35A
                dc.w    loc_1B486-loc_1B35A
                dc.w    loc_1B4A0-loc_1B35A
loc_1B37A:
                dc.w    $0018
                dc.b    $07, $28, $02, $70, $06, $D0, $02, $70, $06, $C0, $02, $88, $06, $C0, $03, $E0
                dc.b    $06, $D0, $03, $F0, $07, $28, $03, $F0
loc_1B394:
                dc.w    $0008
                dc.b    $0B, $D8, $05, $F0, $0E, $00, $05, $F0
loc_1B39E:
                dc.w    $0008
                dc.b    $0C, $58, $03, $70, $0E, $00, $03, $70
loc_1B3A8:
                dc.w    $0008
                dc.b    $13, $D8, $01, $F0, $15, $80, $01, $F0
loc_1B3B2:
                dc.w    $0008
                dc.b    $05, $D8, $03, $70, $07, $80, $03, $70
loc_1B3BC:
                dc.w    $0008
                dc.b    $05, $D8, $05, $F0, $07, $00, $05, $F0
loc_1B3C6:
                dc.w    $0008
                dc.b    $0B, $A8, $07, $70, $08, $80, $07, $70
loc_1B3D0:
                dc.w    $0018
                dc.b    $0B, $D8, $01, $F0, $0C, $30, $01, $F0, $0C, $40, $01, $E0, $0C, $40, $00, $C0
                dc.b    $0C, $50, $00, $B0, $0C, $A8, $00, $B0
loc_1B3EA:
                dc.w    $0018
                dc.b    $14, $D8, $04, $B0, $15, $30, $04, $B0, $15, $40, $04, $C0, $15, $40, $05, $A0
                dc.b    $15, $30, $05, $B0, $14, $D8, $05, $B0
loc_1B404:
                dc.w    $0018
                dc.b    $17, $28, $03, $30, $15, $D0, $03, $30, $15, $C0, $03, $20, $15, $C0, $02, $40
                dc.b    $15, $D0, $02, $30, $16, $28, $02, $30
loc_1B41E:
                dc.w    $0018
                dc.b    $0F, $D8, $03, $B0, $10, $30, $03, $B0, $10, $40, $03, $A0, $10, $40, $02, $C0
                dc.b    $10, $50, $02, $B0, $10, $A8, $02, $B0
loc_1B438:
                dc.w    $0018
                dc.b    $0F, $D8, $04, $B0, $10, $B0, $04, $B0, $10, $C0, $04, $A0, $10, $C0, $03, $C0
                dc.b    $10, $D0, $03, $B0, $11, $28, $03, $B0
loc_1B452:
                dc.w    $0018
                dc.b    $1E, $58, $01, $B0, $1F, $30, $01, $B0, $1F, $40, $01, $C0, $1F, $40, $02, $A0
                dc.b    $1F, $50, $02, $B0, $20, $A8, $02, $B0
loc_1B46C:
                dc.w    $0018
                dc.b    $20, $A8, $04, $70, $20, $50, $04, $70, $20, $40, $04, $80, $20, $40, $05, $A0
                dc.b    $20, $50, $05, $B0, $20, $A8, $05, $B0
loc_1B486:
                dc.w    $0018
                dc.b    $22, $58, $05, $B0, $23, $30, $05, $B0, $23, $40, $05, $A0, $23, $40, $04, $C0
                dc.b    $23, $50, $04, $B0, $23, $A8, $04, $B0
loc_1B4A0:
                dc.w    $0018
                dc.b    $22, $D8, $02, $B0, $23, $30, $02, $B0, $23, $40, $02, $C0, $23, $40, $04, $60
                dc.b    $23, $30, $04, $70, $22, $D8, $04, $70                
loc_1B4BA:                 
                dc.w    loc_1B4BE-loc_1B4BA
                dc.w    loc_1B4C1-loc_1B4BA
loc_1B4BE:
                dc.b    $1F, $00, $FF
loc_1B4C1:
                dc.b    $01, $01, $00, $00, $00, $00, $00, $01, $00, $00, $00, $01, $00, $00, $01, $00
                dc.b    $FE, $02, $00   
Teleport_Attributes_Mappings:
loc_1B4D4:
                dc.w    loc_1B4D8-loc_1B4D4
                dc.w    loc_1B4DA-loc_1B4D4
loc_1B4D8:
                dc.w    $0000
loc_1B4DA:
                dc.w    $0006
                dc.l    $E0050000, $0000FFEC, $E0050000, $0000FFF8
                dc.l    $F0050000, $0000FFEC, $F0050000, $0000FFF8
                dc.l    $00050000, $0000FFEC, $00050000, $0000FFF8                             
;=============================================================================== 
; Object 0x67 - Metropolis - Teleport Attributes
; [ End ]                         
;===============================================================================               
J_DisplaySprite_09: ; loc_1B50C:
                jmp     DisplaySprite           ; (loc_D3C2)
J_AnimateSprite_03: ; loc_1B512:
                jmp     AnimateSprite           ; (loc_D412)
loc_1B518:
                jmp     (loc_D30C)
                dc.w    $0000                   ; Filler                       
;=============================================================================== 
; Object 0x68 - Metropolis - Block with Arrow
; [ Begin ]                         
;===============================================================================                    
Obj_0x68_Block_Arrow: ; loc_1B520:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1B52E(PC, D0), D1
                jmp     loc_1B52E(PC, D1)
loc_1B52E:
                dc.w    loc_1B534-loc_1B52E
                dc.w    loc_1B5D6-loc_1B52E
                dc.w    loc_1B5EE-loc_1B52E
loc_1B534:
                addq.b  #$02, $0024(A0)
                move.l  #Block_Arrow_Mappings, $0004(A0) ; loc_1B6DC
                move.w  #$6414, $0002(A0)
                bsr     J_Adjust2PArtPointer_13 ; loc_1B7FC
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                bsr     J_SingleObjLoad2_05  ; loc_1B7F6
                bne.s   loc_1B5D0
                move.b  $0000(A0), $0000(A1)
                addq.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0008(A1), $0030(A1)
                move.w  $000C(A1), $0032(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  #$241C, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$04, $0018(A1)
                move.w  ($FFFFFE04).w, D0
                lsr.w   #$06, D0
                move.w  D0, D1
                andi.w  #$0001, D0
                move.w  D0, $0036(A1)
                lsr.w   #$01, D1
                add.b   $0028(A0), D1
                andi.w  #$0003, D1
                move.b  D1, $0025(A1)
                move.b  D1, $001A(A1)
                lea     (loc_1B6D8), A2
                move.b  $00(A2, D1), $0020(A1)
loc_1B5D0:
                move.b  #$04, $001A(A0)
loc_1B5D6:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_08        ; loc_1B802
                bra     J_MarkObjGone_0F        ; loc_1B7F0
loc_1B5EE:
                bsr     loc_1B656
                moveq   #$00, D0
                move.b  $0025(A0), D0
                add.w   D0, D0
                move.w  loc_1B60A(PC, D0), D1
                jsr     loc_1B60A(PC, D1)
                move.w  $0030(A0), D0
                bra     loc_1B808
loc_1B60A:
                dc.w    loc_1B612-loc_1B60A
                dc.w    loc_1B624-loc_1B60A
                dc.w    loc_1B634-loc_1B60A
                dc.w    loc_1B644-loc_1B60A
loc_1B612:
                moveq   #$00, D0
                move.b  $0034(A0), D0
                neg.w   D0
                add.w   $0032(A0), D0
                move.w  D0, $000C(A0)
                rts
loc_1B624:
                moveq   #$00, D0
                move.b  $0034(A0), D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                rts
loc_1B634:
                moveq   #$00, D0
                move.b  $0034(A0), D0
                add.w   $0032(A0), D0
                move.w  D0, $000C(A0)
                rts
loc_1B644:
                moveq   #$00, D0
                move.b  $0034(A0), D0
                neg.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                rts
loc_1B656:
                tst.w   $0038(A0)
                beq.s   loc_1B67A
                move.b  ($FFFFFE05).w, D0
                andi.b  #$3F, D0
                bne.s   loc_1B6D6
                clr.w   $0038(A0)
                tst.b   $0001(A0)
                bpl.s   loc_1B67A
                move.w  #$00B6, D0
                jsr     (PlaySound)              ; loc_14C6
loc_1B67A:
                tst.w   $0036(A0)
                beq.s   loc_1B6B6
                subi.w  #$0800, $0034(A0)
                bcc.s   loc_1B6D6
                move.w  #$0000, $0034(A0)
                move.w  #$0000, $0036(A0)
                move.w  #$0001, $0038(A0)
                addq.b  #$01, $0025(A0)
                andi.b  #$03, $0025(A0)
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.b  D0, $001A(A0)
                move.b  loc_1B6D8(PC, D0), $0020(A0)
                rts
loc_1B6B6:
                addi.w  #$0800, $0034(A0)
                cmpi.w  #$2000, $0034(A0)
                bcs.s   loc_1B6D6
                move.w  #$2000, $0034(A0)
                move.w  #$0001, $0036(A0)
                move.w  #$0001, $0038(A0)
loc_1B6D6:
                rts
loc_1B6D8:
                dc.b    $84, $A6, $84, $A6  
Block_Arrow_Mappings:
loc_1B6DC:
                dc.w    loc_1B6E6-loc_1B6DC
                dc.w    loc_1B6F0-loc_1B6DC
                dc.w    loc_1B6FA-loc_1B6DC
                dc.w    loc_1B704-loc_1B6DC
                dc.w    loc_1B70E-loc_1B6DC
loc_1B6E6:
                dc.w    $0001
                dc.l    $F0031000, $1000FFFC
loc_1B6F0:
                dc.w    $0001
                dc.l    $FC0C0004, $0002FFF0
loc_1B6FA:
                dc.w    $0001
                dc.l    $F0030000, $0000FFFC
loc_1B704:
                dc.w    $0001
                dc.l    $FC0C0804, $0802FFF0
loc_1B70E:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F0070800, $08000000                              
;=============================================================================== 
; Object 0x68 - Metropolis - Block with Arrow
; [ End ]                         
;===============================================================================  
;=============================================================================== 
; Object 0x6D - Metropolis - Floor Harpoon
; [ Begin ]                         
;===============================================================================  
Obj_0x6D_Harpoon: ; loc_1B720:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1B72E(PC, D0), D1
                jmp     loc_1B72E(PC, D1)
loc_1B72E:
                dc.w    loc_1B732-loc_1B72E
                dc.w    loc_1B76C-loc_1B72E
loc_1B732:
                addq.b  #$02, $0024(A0)
                move.l  #Block_Arrow_Mappings, $0004(A0) ; loc_1B6DC
                move.w  #$241C, $0002(A0)
                bsr     J_Adjust2PArtPointer_13 ; loc_1B7FC
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0019(A0)
                move.b  #$04, $0018(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  #$84, $0020(A0)
loc_1B76C:
                bsr     loc_1B788
                moveq   #$00, D0
                move.b  $0034(A0), D0
                neg.w   D0
                add.w   $0032(A0), D0
                move.w  D0, $000C(A0)
                move.w  $0030(A0), D0
                bra     loc_1B808
loc_1B788:
                tst.w   $003A(A0)
                beq.s   loc_1B794
                subq.w  #$01, $003A(A0)
                rts
loc_1B794:
                tst.w   $0038(A0)
                beq.s   loc_1B7AC
                move.b  ($FFFFFE05).w, D0
                sub.b   $0028(A0), D0
                andi.b  #$7F, D0
                bne.s   loc_1B7EE
                clr.w   $0038(A0)
loc_1B7AC:
                tst.w   $0036(A0)
                beq.s   loc_1B7CE
                subi.w  #$0400, $0034(A0)
                bcc.s   loc_1B7EE
                move.w  #$0000, $0034(A0)
                move.w  #$0000, $0036(A0)
                move.w  #$0001, $0038(A0)
                rts
loc_1B7CE:
                addi.w  #$0400, $0034(A0)
                cmpi.w  #$2000, $0034(A0)
                bcs.s   loc_1B7EE
                move.w  #$2000, $0034(A0)
                move.w  #$0001, $0036(A0)
                move.w  #$0003, $003A(A0)
loc_1B7EE:
                rts
;=============================================================================== 
; Object 0x6D - Metropolis - Floor Harpoon
; [ End ]                         
;===============================================================================  

J_MarkObjGone_0F: ; loc_1B7F0:
                jmp     MarkObjGone             ; (loc_D2A0)
J_SingleObjLoad2_05: ; loc_1B7F6:
                jmp     SingleObjLoad2      ; (loc_E788)
J_Adjust2PArtPointer_13: ; loc_1B7FC:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_08: ; loc_1B802:
                jmp     SolidObject             ; (loc_F4A0)
loc_1B808:
                jmp     (loc_D2D8)       
                dc.w    $0000                   ; Filler       
;=============================================================================== 
; Object 0x69 - Metropolis - Screew Nut
; [ Begin ]                         
;===============================================================================                   
Obj_0x69_Screw_Nut: ; loc_1B810:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1B81E(PC, D0), D1
                jmp     loc_1B81E(PC, D1)
loc_1B81E:
                dc.w    loc_1B826-loc_1B81E
                dc.w    loc_1B868-loc_1B81E
                dc.w    loc_1B982-loc_1B81E
                dc.w    loc_1B880-loc_1B81E
loc_1B826:
                addq.b  #$02, $0024(A0)
                move.l  #Screw_Nut_Mappings, $0004(A0) ; loc_1B9A6
                move.w  #$2500, $0002(A0)
                bsr     J_Adjust2PArtPointer_14 ; loc_1BA16
                move.b  #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.b  #$0B, $0016(A0)
                move.b  #$04, $0018(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  $0028(A0), D0
                andi.w  #$007F, D0
                lsl.w   #$03, D0
                move.w  D0, $0036(A0)
loc_1B868:
                lea     ($FFFFB000).w, A1
                lea     $0038(A0), A4
                moveq   #$03, D6
                bsr.s   loc_1B898
                lea     ($FFFFB040).w, A1
                lea     $003C(A0), A4
                moveq   #$04, D6
                bsr.s   loc_1B898
loc_1B880:
                move.w  #$002B, D1
                move.w  #$000C, D2
                move.w  #$000D, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_09        ; loc_1BA1C
                bra     J_MarkObjGone_10        ; loc_1BA10
loc_1B898:
                btst    D6, $0022(A0)
                bne.s   loc_1B8A0
                clr.b   (A4)
loc_1B8A0:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  loc_1B8AC(PC, D0), D0
                jmp     loc_1B8AC(PC, D0)
loc_1B8AC:
                dc.w    loc_1B8B2-loc_1B8AC
                dc.w    loc_1B8D2-loc_1B8AC
                dc.w    loc_1B8F4-loc_1B8AC
loc_1B8B2:
                btst    D6, $0022(A0)
                bne.s   loc_1B8BA
                rts
loc_1B8BA:
                addq.b  #$02, (A4)
                move.b  #$00, $0001(A4)
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   loc_1B8D2
                move.b  #$01, $0001(A4)
loc_1B8D2:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                tst.b   $0001(A4)
                beq.s   loc_1B8E4
                addi.w  #$000F, D0
loc_1B8E4:
                cmpi.w  #$0010, D0
                bcc.s   loc_1B8F2
                move.w  $0008(A0), $0008(A1)
                addq.b  #$02, (A4)
loc_1B8F2:
                rts
loc_1B8F4:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                bcc.s   loc_1B95A
                add.w   D0, $0034(A0)
                move.w  $0008(A0), $0008(A1)
                move.w  $0034(A0), D0
                asr.w   #$03, D0
                move.w  D0, D1
                asr.w   #$01, D0
                andi.w  #$0003, D0
                move.b  D0, $001A(A0)
                neg.w   D1
                add.w   $0032(A0), D1
                move.w  D1, $000C(A0)
                sub.w   $0032(A0), D1
                move.w  $0036(A0), D0
                cmp.w   D0, D1
                blt.s   loc_1B958
                move.w  D0, D1
                add.w   $0032(A0), D1
                move.w  D1, $000C(A0)
                lsl.w   #$03, D0
                neg.w   D0
                move.w  D0, $0034(A0)
                move.b  #$00, $001A(A0)
                tst.b   $0028(A0)
                bmi.s   loc_1B952
                clr.b   (A4)
                rts
loc_1B952:
                move.b  #$04, $0024(A0)
loc_1B958:
                rts
loc_1B95A:
                add.w   D0, $0034(A0)
                move.w  $0008(A0), $0008(A1)
                move.w  $0034(A0), D0
                asr.w   #$03, D0
                move.w  D0, D1
                asr.w   #$01, D0
                andi.w  #$0003, D0
                move.b  D0, $001A(A0)
                neg.w   D1
                add.w   $0032(A0), D1
                move.w  D1, $000C(A0)
                rts
loc_1B982:
                bsr     J_SpeedToPos_09         ; loc_1BA22
                addi.w  #$0038, $0012(A0)
                bsr     J_ObjHitFloor_00        ; loc_1BA28
                tst.w   D1
                bpl     loc_1B9A2
                add.w   D1, $000C(A0)
                clr.w   $0012(A0)
                addq.b  #$02, $0024(A0)
loc_1B9A2:
                bra     loc_1B880     
Screw_Nut_Mappings:
loc_1B9A6:
                dc.w    loc_1B9AE-loc_1B9A6
                dc.w    loc_1B9C0-loc_1B9A6
                dc.w    loc_1B9DA-loc_1B9A6
                dc.w    loc_1B9F4-loc_1B9A6
loc_1B9AE:
                dc.w    $0002
                dc.l    $F40E0000, $0000FFE0, $F40E000C, $00060000
loc_1B9C0:
                dc.w    $0003
                dc.l    $F40A0003, $0001FFE0, $F40E000C, $0006FFF8
                dc.l    $F4020809, $08040018
loc_1B9DA:
                dc.w    $0003
                dc.l    $F4060024, $0012FFE0, $F40E002A, $0015FFF0
                dc.l    $F4060018, $000C0010
loc_1B9F4:
                dc.w    $0003
                dc.l    $F4020027, $0013FFE0, $F40E0018, $000CFFE8
                dc.l    $F40A082D, $08160008                         
;=============================================================================== 
; Object 0x69 - Metropolis - Screew Nut
; [ End ]                         
;===============================================================================  
                nop                             ; Filler
J_MarkObjGone_10: ; loc_1BA10:
                jmp     MarkObjGone             ; (loc_D2A0)
J_Adjust2PArtPointer_14: ; loc_1BA16:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_09: ; loc_1BA1C:
                jmp     SolidObject             ; (loc_F4A0)
J_SpeedToPos_09: ; loc_1BA22:
                jmp     SpeedToPos              ; (loc_D27A)
J_ObjHitFloor_00: ; loc_1BA28:
                jmp     ObjHitFloor             ; (loc_13898)
                dc.w    $0000                   ; Filler                     
;=============================================================================== 
; Object 0x6A - Dust Hill - Three Rotating Boxes
; [ Begin ]                         
;===============================================================================                  
Obj_0x6A_Rotating_Boxes: ; loc_1BA30:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1BA3E(PC, D0), D1
                jmp     loc_1BA3E(PC, D1)
loc_1BA3E:
                dc.w    loc_1BA44-loc_1BA3E
                dc.w    loc_1BB5E-loc_1BA3E
                dc.w    loc_1BBE6-loc_1BA3E
loc_1BA44:
                addq.b  #$02, $0024(A0)
                move.l  #Mz_Platform_Mappings, $0004(A0) ; loc_1AE2C
                move.w  #$6000, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$20, $0019(A0)
                move.b  #$0C, $0016(A0)
                move.l  #loc_1BC5C, $002C(A0)
                move.b  #$01, $001A(A0)
                cmpi.b  #$0B, ($FFFFFE10).w
                bne     loc_1BB44
                addq.b  #$02, $0024(A0)
                move.l  #Rotating_Boxes_Mappings, $0004(A0) ; loc_1BCB0
                move.w  #$63D4, $0002(A0)
                move.b  #$20, $0019(A0)
                move.b  #$20, $0016(A0)
                move.l  #loc_1BC74, $002C(A0)
                btst    #$00, $0022(A0)
                beq.s   loc_1BABC
                move.l  #loc_1BC92, $002C(A0)
loc_1BABC:
                move.b  #$00, $001A(A0)
                cmpi.b  #$18, $0028(A0)
                bne     loc_1BB50
                bsr     J_SingleObjLoad2_06  ; loc_1BCD4
                bne.s   loc_1BB1C
                bsr.s   loc_1BB1E
                addi.w  #$0040, $0008(A1)
                addi.w  #$0040, $000C(A1)
                move.b  #$06, $0028(A1)
                btst    #$00, $0022(A0)
                beq.s   loc_1BAF4
                move.b  #$0C, $0028(A1)
loc_1BAF4:
                bsr     J_SingleObjLoad2_06  ; loc_1BCD4
                bne.s   loc_1BB1C
                bsr.s   loc_1BB1E
                subi.w  #$0040, $0008(A1)
                addi.w  #$0040, $000C(A1)
                move.b  #$0C, $0028(A1)
                btst    #$00, $0022(A0)
                beq.s   loc_1BB1C
                move.b  #$06, $0028(A1)
loc_1BB1C:
                bra.s   loc_1BB44
loc_1BB1E:
                move.b  $0000(A0), $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0008(A0), $0032(A1)
                move.w  $000C(A0), $0030(A1)
                move.b  $0022(A0), $0022(A1)
                rts
loc_1BB44:
                move.w  $0008(A0), $0032(A0)
                move.w  $000C(A0), $0030(A0)
loc_1BB50:
                bsr     J_Adjust2PArtPointer_15 ; loc_1BCDA
                move.b  $0028(A0), $0038(A0)
                bra     loc_1BC22
loc_1BB5E:
                move.w  $0008(A0), -(A7)
                tst.w   $0036(A0)
                bne.s   loc_1BBAE
                move.b  $003C(A0), D1
                move.b  $0022(A0), D0
                btst    #$03, D0
                bne.s   loc_1BB8A
                btst    #$03, D1
                beq.s   loc_1BB8E
                move.b  #$01, $0036(A0)
                move.b  #$00, $003C(A0)
                bra.s   loc_1BBBE
loc_1BB8A:
                move.b  D0, $003C(A0)
loc_1BB8E:
                btst    #$04, D0
                bne.s   loc_1BBA8
                btst    #$04, D1
                beq.s   loc_1BBBE
                move.b  #$01, $0036(A0)
                move.b  #$00, $003C(A0)
                bra.s   loc_1BBBE
loc_1BBA8:
                move.b  D0, $003C(A0)
                bra.s   loc_1BBBE
loc_1BBAE:
                jsr     SpeedToPos              ; (loc_D27A)
                subq.w  #$01, $0034(A0)
                bne.s   loc_1BBBE
                bsr     loc_1BC22
loc_1BBBE:
                move.w  (A7)+, D4
                tst.b   $0001(A0)
                bpl.s   loc_1BBDE
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_0A        ; loc_1BCE0
loc_1BBDE:
                move.w  $0032(A0), D0
                bra     loc_1BCE6
loc_1BBE6:
                move.w  $0008(A0), -(A7)
                jsr     SpeedToPos              ; (loc_D27A)
                subq.w  #$01, $0034(A0)
                bne.s   loc_1BBFA
                bsr     loc_1BC22
loc_1BBFA:
                move.w  (A7)+, D4
                tst.b   $0001(A0)
                bpl.s   loc_1BC1A
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_0A        ; loc_1BCE0
loc_1BC1A:
                move.w  $0032(A0), D0
                bra     loc_1BCE6
loc_1BC22:
                moveq   #$00, D0
                move.b  $0038(A0), D0
                move.l  $002C(A0), A1
                lea     $00(A1, D0), A1
                move.w  (A1)+, $0010(A0)
                move.w  (A1)+, $0012(A0)
                move.w  (A1)+, $0034(A0)
                move.w  #$0007, $003A(A0)
                move.b  #$00, $0036(A0)
                addq.b  #$06, $0038(A0)
                cmpi.b  #$18, $0038(A0)
                bcs.s   loc_1BC5A
                move.b  #$00, $0038(A0)
loc_1BC5A:
                rts    
loc_1BC5C:
                dc.w    $0000, $0400, $0010, $0400, $FE00, $0020, $0000, $0400
                dc.w    $0010, $FC00, $FE00, $0020
loc_1BC74:
                dc.w    $0000, $0100, $0040, $FF00, $0000, $0080, $0000, $FF00
                dc.w    $0040, $0100, $0000, $0080, $0100, $0000, $0040
loc_1BC92:
                dc.w    $0000, $0100, $0040, $0100, $0000, $0080, $0000, $FF00
                dc.w    $0040, $FF00, $0000, $0080, $FF00, $0000, $0040
Rotating_Boxes_Mappings:                   
loc_1BCB0:
                dc.w    loc_1BCB2-loc_1BCB0
loc_1BCB2:
                dc.w    $0004
                dc.l    $E00F0000, $0000FFE0, $E00F0010, $00080000
                dc.l    $000F1810, $1808FFE0, $000F1800, $18000000                                                                      
;=============================================================================== 
; Object 0x6A - Dust Hill - Three Rotating Boxes
; [ End ]                         
;===============================================================================                   
J_SingleObjLoad2_06: ; loc_1BCD4:
                jmp     SingleObjLoad2      ; (loc_E788)
J_Adjust2PArtPointer_15: ; loc_1BCDA:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_0A: ; loc_1BCE0:
                jmp     SolidObject             ; (loc_F4A0)
loc_1BCE6:
                jmp     (loc_D2D8)                
;=============================================================================== 
; Object 0x6B - Metropolis Platforms / Chemical Plant - Block
; [ Begin ]                         
;===============================================================================   
Obj_0x6B_Mz_Platform: ; Obj_0x6B_Block: ; loc_1BCEC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1BCFA(PC, D0), D1
                jmp     loc_1BCFA(PC, D1)
loc_1BCFA:
                dc.w    loc_1BD06-loc_1BCFA
                dc.w    loc_1BD88-loc_1BCFA
loc_1BCFE:
                dc.b    $20, $0C, $01, $00, $10, $10, $00, $00
loc_1BD06:
                addq.b  #$02, $0024(A0)
                move.l  #Mz_Platform_Mappings, $0004(A0) ; loc_1AE2C
                move.w  #$6000, $0002(A0)
                cmpi.b  #$0D, ($FFFFFE10).w
                bne.s   loc_1BD2E
                move.l  #Block_Mappings, $0004(A0)       ; loc_1BF4A
                move.w  #$6418, $0002(A0)
loc_1BD2E:
                bsr     J_Adjust2PArtPointer_16 ; loc_1BF58
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     loc_1BCFE(PC, D0), A2
                move.b  (A2)+, $0019(A0)
                move.b  (A2)+, $0016(A0)
                move.b  (A2)+, $001A(A0)
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0030(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                subq.w  #$08, D0
                bcs.s   loc_1BD88
                lsl.w   #$02, D0
                lea     ($FFFFFE8A).w, A2
                lea     $00(A2, D0), A2
                tst.w   (A2)
                bpl.s   loc_1BD88
                bchg    #0, $0022(A0)
loc_1BD88:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                add.w   D0, D0
                move.w  loc_1BDC8(PC, D0), D1
                jsr     loc_1BDC8(PC, D1)
                move.w  (A7)+, D4
                tst.b   $0001(A0)
                bpl.s   loc_1BDC0
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_0B        ; loc_1BF5E
loc_1BDC0:
                move.w  $0034(A0), D0
                bra     loc_1BF64
loc_1BDC8:
                dc.w    loc_1BDE0-loc_1BDC8
                dc.w    loc_1BDE2-loc_1BDC8
                dc.w    loc_1BDEE-loc_1BDC8
                dc.w    loc_1BE10-loc_1BDC8
                dc.w    loc_1BE1C-loc_1BDC8
                dc.w    loc_1BE3E-loc_1BDC8
                dc.w    loc_1BE5C-loc_1BDC8
                dc.w    loc_1BDE0-loc_1BDC8
                dc.w    loc_1BE8A-loc_1BDC8
                dc.w    loc_1BE9C-loc_1BDC8
                dc.w    loc_1BEAC-loc_1BDC8
                dc.w    loc_1BEBC-loc_1BDC8
loc_1BDE0:
                rts
loc_1BDE2:
                move.w  #$0040, D1
                moveq   #$00, D0
                move.b  ($FFFFFE68).w, D0
                bra.s   loc_1BDF8
loc_1BDEE:
                move.w  #$0080, D1
                moveq   #$00, D0
                move.b  ($FFFFFE7C).w, D0
loc_1BDF8:
                btst    #$00, $0022(A0)
                beq.s   loc_1BE04
                neg.w   D0
                add.w   D1, D0
loc_1BE04:
                move.w  $0034(A0), D1
                sub.w   D0, D1
                move.w  D1, $0008(A0)
                rts
loc_1BE10:
                move.w  #$0040, D1
                moveq   #$00, D0
                move.b  ($FFFFFE68).w, D0
                bra.s   loc_1BE26
loc_1BE1C:
                move.w  #$0080, D1
                moveq   #$00, D0
                move.b  ($FFFFFE7C).w, D0
loc_1BE26:
                btst    #$00, $0022(A0)
                beq.s   loc_1BE32
                neg.w   D0
                add.w   D1, D0
loc_1BE32:
                move.w  $0030(A0), D1
                sub.w   D0, D1
                move.w  D1, $000C(A0)
                rts
loc_1BE3E:
                move.b  ($FFFFFE60).w, D0
                lsr.w   #$01, D0
                add.w   $0030(A0), D0
                move.w  D0, $000C(A0)
                move.b  $0022(A0), D1
                andi.b  #$18, D1
                beq.s   loc_1BE5A
                addq.b  #$01, $0028(A0)
loc_1BE5A:
                rts
loc_1BE5C:
                move.l  $000C(A0), D3
                move.w  $0012(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D3, $000C(A0)
                addi.w  #$0008, $0012(A0)
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcc.s   loc_1BE88
                move.b  #$00, $0028(A0)
loc_1BE88:
                rts
loc_1BE8A:
                move.w  #$0010, D1
                moveq   #$00, D0
                move.b  ($FFFFFE88).w, D0
                lsr.w   #$01, D0
                move.w  ($FFFFFE8A).w, D3
                bra.s   loc_1BECA
loc_1BE9C:
                move.w  #$0030, D1
                moveq   #$00, D0
                move.b  ($FFFFFE8C).w, D0
                move.w  ($FFFFFE8E).w, D3
                bra.s   loc_1BECA
loc_1BEAC:
                move.w  #$0050, D1
                moveq   #$00, D0
                move.b  ($FFFFFE90).w, D0
                move.w  ($FFFFFE92).w, D3
                bra.s   loc_1BECA
loc_1BEBC:
                move.w  #$0070, D1
                moveq   #$00, D0
                move.b  ($FFFFFE94).w, D0
                move.w  ($FFFFFE96).w, D3
loc_1BECA:
                tst.w   D3
                bne.s   loc_1BED8
                addq.b  #$01, $0022(A0)
                andi.b  #$03, $0022(A0)
loc_1BED8:
                move.b  $0022(A0), D2
                andi.b  #$03, D2
                bne.s   loc_1BEF8
                sub.w   D1, D0
                add.w   $0034(A0), D0
                move.w  D0, $0008(A0)
                neg.w   D1
                add.w   $0030(A0), D1
                move.w  D1, $000C(A0)
                rts
loc_1BEF8:
                subq.b  #$01, D2
                bne.s   loc_1BF16
                subq.w  #$01, D1
                sub.w   D1, D0
                neg.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $000C(A0)
                addq.w  #$01, D1
                add.w   $0034(A0), D1
                move.w  D1, $0008(A0)
                rts
loc_1BF16:
                subq.b  #$01, D2
                bne.s   loc_1BF34
                subq.w  #$01, D1
                sub.w   D1, D0
                neg.w   D0
                add.w   $0034(A0), D0
                move.w  D0, $0008(A0)
                addq.w  #$01, D1
                add.w   $0030(A0), D1
                move.w  D1, $000C(A0)
                rts
loc_1BF34:
                sub.w   D1, D0
                add.w   $0030(A0), D0
                move.w  D0, $000C(A0)
                neg.w   D1
                add.w   $0034(A0), D1
                move.w  D1, $0008(A0)
                rts 
Block_Mappings:                
loc_1BF4A:
                dc.w    loc_1BF4C-loc_1BF4A
loc_1BF4C:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0                           
;=============================================================================== 
; Object 0x6B - Metropolis Platforms / Chemical Plant - Block
; [ End ]                         
;===============================================================================  
                nop                             ; Filler
J_Adjust2PArtPointer_16: ; loc_1BF58:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_0B: ; loc_1BF5E:
                jmp     SolidObject             ; (loc_F4A0)
loc_1BF64:
                jmp     (loc_D2D8)    
                dc.w    $0000                   ; Filler      
;=============================================================================== 
; Object 0x6C - Moving platforms - clockwise
; [ Begin ]                         
;===============================================================================                  
Obj_0x6C_Mz_Moving_Platforms: ; loc_1BF6C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1BF94(PC, D0), D1
                jsr     loc_1BF94(PC, D1)
                move.w  $0030(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1BF90
                bra     J_DisplaySprite_0A      ; loc_1C2C0
loc_1BF90:
                bra     J_DeleteObject_1A       ; loc_1C2C6
loc_1BF94:
                dc.w    loc_1BF98-loc_1BF94
                dc.w    loc_1C0A0-loc_1BF94
loc_1BF98:
                move.b  $0028(A0), D0
                bmi     loc_1C04A
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x6C_Mappings, $0004(A0) ; loc_1C2AA
                move.w  #$63F9, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                bsr     J_Adjust2PArtPointer_17 ; loc_1C2D2
                move.b  #$00, $001A(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.w  D0, D1
                lsr.w   #$03, D0
                andi.w  #$001E, D0
                lea     loc_1C18A(PC), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, $0038(A0)
                move.l  A2, $003C(A0)
                andi.w  #$000F, D1
                lsl.w   #$02, D1
                move.b  D1, $0038(A0)
                move.b  #$04, $003A(A0)
                btst    #$00, $0022(A0)
                beq.s   loc_1C02A
                neg.b   $003A(A0)
                moveq   #$00, D1
                move.b  $0038(A0), D1
                add.b   $003A(A0), D1
                cmp.b   $0039(A0), D1
                bcs.s   loc_1C026
                move.b  D1, D0
                moveq   #$00, D1
                tst.b   D0
                bpl.s   loc_1C026
                move.b  $0039(A0), D1
                subq.b  #$04, D1
loc_1C026:
                move.b  D1, $0038(A0)
loc_1C02A:
                move.w  $00(A2, D1), D0
                add.w   $0030(A0), D0
                move.w  D0, $0034(A0)
                move.w  $02(A2, D1), D0
                add.w   $0032(A0), D0
                move.w  D0, $0036(A0)
                bsr     loc_1C112
                bra     loc_1C0A0
loc_1C04A:
                andi.w  #$007F, D0
                add.w   D0, D0
                lea     (loc_1C20E), A2    
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D1
                move.l  A0, A1
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                bra.s   loc_1C06E
loc_1C068:                
                bsr     J_SingleObjLoad_05   ; loc_1C2CC
                bne.s   loc_1C098
loc_1C06E:
                move.b  #$6C, $0000(A1)
                move.w  (A2)+, D0
                add.w   D2, D0
                move.w  D0, $0008(A1)
                move.w  (A2)+, D0
                add.w   D3, D0
                move.w  D0, $000C(A1)
                move.w  D2, $0030(A1)
                move.w  D3, $0032(A1)
                move.w  (A2)+, D0
                move.b  D0, $0028(A1)
                move.b  $0022(A0), $0022(A1)
loc_1C098:
                dbra    D1, loc_1C068
                addq.l  #$04, A7
                rts
loc_1C0A0:
                move.w  $0008(A0), -(A7)
                bsr     loc_1C0B6
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$08, D3
                move.w  (A7)+, D4
                bra     loc_1C2D8
loc_1C0B6:
                move.w  $0008(A0), D0
                cmp.w   $0034(A0), D0
                bne.s   loc_1C10C
                move.w  $000C(A0), D0
                cmp.w   $0036(A0), D0
                bne.s   loc_1C10C
                moveq   #$00, D1
                move.b  $0038(A0), D1
                add.b   $003A(A0), D1
                cmp.b   $0039(A0), D1
                bcs.s   loc_1C0E8
                move.b  D1, D0
                moveq   #$00, D1
                tst.b   D0
                bpl.s   loc_1C0E8
                move.b  $0039(A0), D1
                subq.b  #$04, D1
loc_1C0E8:
                move.b  D1, $0038(A0)
                move.l  $003C(A0), A1
                move.w  $00(A1, D1), D0
                add.w   $0030(A0), D0
                move.w  D0, $0034(A0)
                move.w  $02(A1, D1), D0
                add.w   $0032(A0), D0
                move.w  D0, $0036(A0)
                bsr     loc_1C112
loc_1C10C:
                bsr     J_SpeedToPos_0A         ; loc_1C2DE
                rts
loc_1C112:
                moveq   #$00, D0
                move.w  #$FF00, D2
                move.w  $0008(A0), D0
                sub.w   $0034(A0), D0
                bcc.s   loc_1C126
                neg.w   D0
                neg.w   D2
loc_1C126:
                moveq   #$00, D1
                move.w  #$FF00, D3
                move.w  $000C(A0), D1
                sub.w   $0036(A0), D1
                bcc.s   loc_1C13A
                neg.w   D1
                neg.w   D3
loc_1C13A:
                cmp.w   D0, D1
                bcs.s   loc_1C164
                move.w  $0008(A0), D0
                sub.w   $0034(A0), D0
                beq.s   loc_1C150
                ext.l   D0
                asl.l   #$08, D0
                divs.w  D1, D0
                neg.w   D0
loc_1C150:
                move.w  D0, $0010(A0)
                move.w  D3, $0012(A0)
                swap.w  D0
                move.w  D0, $000A(A0)
                clr.w   $000E(A0)
                rts
loc_1C164:
                move.w  $000C(A0), D1
                sub.w   $0036(A0), D1
                beq.s   loc_1C176
                ext.l   D1
                asl.l   #$08, D1
                divs.w  D0, D1
                neg.w   D1
loc_1C176:
                move.w  D1, $0012(A0)
                move.w  D2, $0010(A0)
                swap.w  D1
                move.w  D1, $000E(A0)
                clr.w   $000A(A0)
                rts    
loc_1C18A:
                dc.w    loc_1C190-loc_1C18A
                dc.w    loc_1C1BA-loc_1C18A
                dc.w    loc_1C1E4-loc_1C18A
loc_1C190:
                dc.w    $0028
                dc.b    $00, $00, $00, $00, $FF, $EA, $00, $0A, $FF, $E0, $00, $20, $FF, $E0, $00, $E0
                dc.b    $FF, $EA, $00, $F6, $00, $00, $01, $00, $00, $16, $00, $F6, $00, $20, $00, $E0
                dc.b    $00, $20, $00, $20, $00, $16, $00, $0A
loc_1C1BA:
                dc.w    $0028
                dc.b    $00, $00, $00, $00, $FF, $EA, $00, $0A, $FF, $E0, $00, $20, $FF, $E0, $01, $60
                dc.b    $FF, $EA, $01, $76, $00, $00, $01, $80, $00, $16, $01, $76, $00, $20, $01, $60
                dc.b    $00, $20, $00, $20, $00, $16, $00, $0A
loc_1C1E4:
                dc.w    $0028
                dc.b    $00, $00, $00, $00, $FF, $EA, $00, $0A, $FF, $E0, $00, $20, $FF, $E0, $01, $E0
                dc.b    $FF, $EA, $01, $F6, $00, $00, $02, $00, $00, $16, $01, $F6, $00, $20, $01, $E0
                dc.b    $00, $20, $00, $20, $00, $16, $00, $0A                
loc_1C20E: 
                dc.w    loc_1C214-loc_1C20E
                dc.w    loc_1C246-loc_1C20E
                dc.w    loc_1C278-loc_1C20E
loc_1C214:
                dc.w    $0007
                dc.b    $00, $00, $00, $00, $00, $01, $FF, $E0, $00, $3A, $00, $03, $FF, $E0, $00, $80
                dc.b    $00, $03, $FF, $E0, $00, $C6, $00, $03, $00, $00, $01, $00, $00, $06, $00, $20
                dc.b    $00, $C6, $00, $08, $00, $20, $00, $80, $00, $08, $00, $20, $00, $3A, $00, $08  
loc_1C246:
                dc.w    $0007
                dc.b    $00, $00, $00, $00, $00, $11, $FF, $E0, $00, $5A, $00, $13, $FF, $E0, $00, $C0
                dc.b    $00, $13, $FF, $E0, $01, $26, $00, $13, $00, $00, $01, $80, $00, $16, $00, $20
                dc.b    $01, $26, $00, $18, $00, $20, $00, $C0, $00, $18, $00, $20, $00, $5A, $00, $18                
loc_1C278:
                dc.w    $0007
                dc.b    $00, $00, $00, $00, $00, $21, $FF, $E0, $00, $7A, $00, $23, $FF, $E0, $01, $00
                dc.b    $00, $23, $FF, $E0, $01, $86, $00, $23, $00, $00, $02, $00, $00, $26, $00, $20
                dc.b    $01, $86, $00, $28, $00, $20, $01, $00, $00, $28, $00, $20, $00, $7A, $00, $28
                
Obj_0x6C_Mappings:                
loc_1C2AA:
                dc.w    loc_1C2AC-loc_1C2AA
loc_1C2AC:
                dc.w    $0002
                dc.l    $F8050000, $0000FFF0, $F8050800, $08000000                                                  
;=============================================================================== 
; Object 0x6C - Moving platforms - clockwise
; [ End ]                         
;===============================================================================                   
                nop                             ; Filler
J_DisplaySprite_0A: ; loc_1C2C0:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_1A: ; loc_1C2C6:
                jmp     DeleteObject            ; (loc_D3B4)
J_SingleObjLoad_05: ; loc_1C2CC:
                jmp     SingleObjLoad        ; (loc_E772)
J_Adjust2PArtPointer_17: ; loc_1C2D2:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
loc_1C2D8:
                jmp     (loc_F984)
J_SpeedToPos_0A: ; loc_1C2DE:
                jmp     SpeedToPos              ; (loc_D27A)    
;=============================================================================== 
; Object 0x6E - Metropolis - Machine
; [ Begin ]                         
;===============================================================================                   
Obj_0x6E_Machine: ; loc_1C2E4:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1C2F2(PC, D0), D1
                jmp     loc_1C2F2(PC, D1)
loc_1C2F2:
                dc.w    loc_1C300-loc_1C2F2
                dc.w    loc_1C36A-loc_1C2F2
                dc.w    loc_1C3F4-loc_1C2F2
loc_1C2F8: 
                dc.b    $10, $0C, $28, $08, $60, $18, $0C, $0C
loc_1C300:
                addq.b  #$02, $0024(A0)
                move.l  #Machine_Mappings, $0004(A0) ; loc_1C464
                move.w  #$6000, $0002(A0)
                bsr     J_Adjust2PArtPointer_18 ; loc_1C4EC
loc_1C316:
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                lea     loc_1C2F8(PC, D0), A3
                move.b  (A3)+, $0019(A0)
                move.b  (A3)+, $0016(A0)
                lsr.w   #$01, D0
                move.b  D0, $001A(A0)
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0030(A0)
                cmpi.b  #$03, D0
                bne.s   loc_1C36A
                addq.b  #$02, $0024(A0)
                move.w  #$63F0, $0002(A0)
                bsr     J_Adjust2PArtPointer_18 ; loc_1C4EC
                move.b  #$05, $0018(A0)
                bra     loc_1C3F4
loc_1C36A:
                move.w  $0008(A0), -(A7)
                move.b  ($FFFFFE80).w, D1
                subi.b  #$38, D1
                ext.w   D1
                move.b  ($FFFFFE84).w, D2
                subi.b  #$38, D2
                ext.w   D2
                btst    #$00, $0028(A0)
                beq.s   loc_1C38E
                neg.w   D1
                neg.w   D2
loc_1C38E:
                btst    #$01, $0028(A0)
                beq.s   loc_1C39A
                neg.w   D1
                exg.l   D2, D1
loc_1C39A:
                add.w   $0034(A0), D1
                move.w  D1, $0008(A0)
                add.w   $0030(A0), D2
                move.w  D2, $000C(A0)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_0C        ; loc_1C4F2
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1C3DC
                jmp     DisplaySprite           ; (loc_D3C2)
loc_1C3DC:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_1B       ; loc_1C3EE
                bclr    #$07, $02(A2, D0)
J_DeleteObject_1B: ; loc_1C3EE:
                jmp     DeleteObject            ; (loc_D3B4)
loc_1C3F4:
                move.b  ($FFFFFE80).w, D1
                lsr.b   #$01, D1
                subi.b  #$1C, D1
                ext.w   D1
                move.b  ($FFFFFE84).w, D2
                lsr.b   #$01, D2
                subi.b  #$1C, D2
                ext.w   D2
                btst    #$00, $0028(A0)
                beq.s   loc_1C418
                neg.w   D1
                neg.w   D2
loc_1C418:
                btst    #$01, $0028(A0)
                beq.s   loc_1C424
                neg.w   D1
                exg.l   D2, D1
loc_1C424:
                add.w   $0034(A0), D1
                move.w  D1, $0008(A0)
                add.w   $0030(A0), D2
                move.w  D2, $000C(A0)
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1C44C
                jmp     DisplaySprite           ; (loc_D3C2)
loc_1C44C:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_1C       ; loc_1C45E
                bclr    #$07, $02(A2, D0)
J_DeleteObject_1C: ; loc_1C45E:
                jmp     DeleteObject            ; (loc_D3B4)   
Machine_Mappings:
loc_1C464:
                dc.w    loc_1C46C-loc_1C464
                dc.w    loc_1C476-loc_1C464
                dc.w    loc_1C490-loc_1C464
                dc.w    loc_1C4E2-loc_1C464
loc_1C46C:
                dc.w    $0001
                dc.l    $F40E0025, $0012FFF0
loc_1C476:
                dc.w    $0003
                dc.l    $F80D0031, $0018FFD8, $F80D0031, $0018FFF8
                dc.l    $F8050031, $00180018
loc_1C490:
                dc.w    $000A
                dc.l    $E80E0039, $001CFFA0, $E80E0839, $081CFFC0
                dc.l    $E80E0039, $001CFFE0, $E80E0839, $081C0000
                dc.l    $E80E0039, $001C0020, $E80E0839, $081C0040
                dc.l    $00060045, $0022FFA0, $00060845, $0822FFB0
                dc.l    $00060045, $00220040, $00060845, $08220050
loc_1C4E2:
                dc.w    $0001
                dc.l    $F40A0000, $0000FFF4                             
;=============================================================================== 
; Object 0x6E - Metropolis - Machine
; [ End ]                         
;===============================================================================                   
J_Adjust2PArtPointer_18: ; loc_1C4EC:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_0C: ; loc_1C4F2:
                jmp     SolidObject             ; (loc_F4A0)   
;=============================================================================== 
; Object 0x6F - Metropolis - Parallelogram Elevators
; [ Begin ]                         
;===============================================================================                    
Obj_Ox6F_Parallelogram_Elevator: ; loc_1C4F8:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1C506(PC, D0), D1
                jmp     loc_1C506(PC, D1)
loc_1C506:
                dc.w    loc_1C50A-loc_1C506
                dc.w    loc_1C570-loc_1C506
loc_1C50A:
                addq.b  #$02, $0024(A0)
                move.l  #Parallelogram_Elevator_Mappings, $0004(A0) ; loc_1C7BE
                move.w  #$653F, $0002(A0)
                bsr     J_Adjust2PArtPointer_19 ; loc_1C844
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$80, $0019(A0)
                move.b  #$20, $0016(A0)
                move.w  $0008(A0), $0032(A0)
                move.w  $000C(A0), $0030(A0)
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                lea     (loc_1C632), A1
                move.w  $00(A1, D0), D0
                lea     $00(A1, D0), A1
                move.l  A1, $003C(A0)
                bsr     loc_1C604
                bset    #$07, $0022(A0)
                andi.b  #$0F, $0028(A0)
loc_1C570:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.w  loc_1C5DA(PC, D0), D1
                jsr     loc_1C5DA(PC, D1)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  $0019(A0), D1
                lea     (loc_1C6BE), A2
                bsr     loc_1C84A
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1C5AE
                jmp     DisplaySprite           ; (loc_D3C2)
loc_1C5AE:
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1C5C2
                rts
loc_1C5C2:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_1D       ; loc_1C5D4
                bclr    #$07, $02(A2, D0)
J_DeleteObject_1D: ; loc_1C5D4:
                jmp     DeleteObject            ; (loc_D3B4)
loc_1C5DA:
                dc.w    loc_1C5E0-loc_1C5DA
                dc.w    loc_1C5E2-loc_1C5DA
                dc.w    loc_1C5F2-loc_1C5DA
loc_1C5E0:
                rts
loc_1C5E2:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   loc_1C5F0
                addq.b  #$01, $0028(A0)
loc_1C5F0:
                rts
loc_1C5F2:
                jsr     SpeedToPos              ; (loc_D27A)
                subq.w  #$01, $0034(A0)
                bne.s   loc_1C602
                bsr     loc_1C604
loc_1C602:
                rts
loc_1C604:
                moveq   #$00, D0
                move.b  $0038(A0), D0
                move.l  $003C(A0), A1
                move.w  (A1)+, D1
                lea     $00(A1, D0), A1
                move.w  (A1)+, $0010(A0)
                move.w  (A1)+, $0012(A0)
                move.w  (A1)+, $0034(A0)
                addq.b  #$06, $0038(A0)
                cmp.b   $0038(A0), D1
                bhi.s   loc_1C630
                move.b  #$00, $0038(A0)
loc_1C630:
                rts   
loc_1C632:
                dc.w    loc_1C63C-loc_1C632
                dc.w    loc_1C64A-loc_1C632
                dc.w    loc_1C658-loc_1C632
                dc.w    loc_1C672-loc_1C632
                dc.w    loc_1C6A4-loc_1C632
loc_1C63C:
                dc.w    $000C
                dc.b    $01, $00, $FF, $80, $01, $00, $FF, $00, $00, $80, $01, $00
loc_1C64A:
                dc.w    $000C
                dc.b    $01, $00, $FF, $80, $01, $80, $FF, $00, $00, $80, $01, $80
loc_1C658:
                dc.w    $0018
                dc.b    $FF, $00, $00, $80, $00, $80, $FF, $00, $00, $00, $01, $80, $01, $00, $FF, $80
                dc.b    $00, $80, $01, $00, $00, $00, $01, $80
loc_1C672:
                dc.w    $0030
                dc.b    $01, $00, $FF, $80, $02, $00, $01, $00, $00, $00, $01, $00, $FF, $00, $00, $80
                dc.b    $01, $00, $01, $00, $00, $00, $01, $80, $FF, $00, $00, $00, $01, $80, $01, $00
                dc.b    $FF, $80, $01, $00, $FF, $00, $00, $00, $01, $00, $FF, $00, $00, $80, $02, $00
loc_1C6A4:
                dc.w    $0018
                dc.b    $FF, $00, $00, $80, $01, $80, $01, $00, $00, $00, $02, $00, $FF, $00, $00, $00
                dc.b    $02, $00, $01, $00, $FF, $80, $01, $80  
loc_1C6BE:
                dc.w    $E101, $E202, $E303, $E404, $E505, $E606, $E707, $E808
                dc.w    $E909, $EA0A, $EB0B, $EC0C, $ED0D, $EE0E, $EF0F, $F010
                dc.w    $F111, $F212, $F313, $F414, $F515, $F616, $F717, $F818
                dc.w    $F919, $FA1A, $FB1B, $FC1C, $FD1D, $FE1E, $FF1F, $0020
                dc.w    $0121, $0222, $0323, $0424, $0525, $0626, $0727, $0828
                dc.w    $0929, $0A2A, $0B2B, $0C2C, $0D2D, $0E2E, $0F2F, $1030
                dc.w    $1131, $1232, $1333, $1434, $1535, $1636, $1737, $1838
                dc.w    $1939, $1A3A, $1B3B, $1C3C, $1D3D, $1E3E, $1F3F, $2040
                dc.w    $2040, $203F, $203E, $203D, $203C, $203B, $203A, $2039
                dc.w    $2038, $2037, $2036, $2035, $2034, $2033, $2032, $2031
                dc.w    $2030, $202F, $202E, $202D, $202C, $202B, $202A, $2029
                dc.w    $2028, $2027, $2026, $2025, $2024, $2023, $2022, $2021
                dc.w    $2020, $201F, $201E, $201D, $201C, $201B, $201A, $2019
                dc.w    $2018, $2017, $2016, $2015, $2014, $2013, $2012, $2011
                dc.w    $2010, $200F, $200E, $200D, $200C, $200B, $200A, $2009
                dc.w    $2008, $2007, $2006, $2005, $2004, $2003, $2002, $2001   
Parallelogram_Elevator_Mappings:
loc_1C7BE:
                dc.w    loc_1C7C0-loc_1C7BE
loc_1C7C0:
                dc.w    $0010
                dc.l    $100D0000, $0000FF80, $000D0000, $0000FFA0
                dc.l    $100D0008, $0004FFA0, $F00D0000, $0000FFC0
                dc.l    $000F0010, $0008FFC0, $E00D0000, $0000FFE0
                dc.l    $F00D0008, $0004FFE0, $000F0010, $0008FFE0
                dc.l    $E00F0010, $00080000, $000D0008, $00040000
                dc.l    $100D1800, $18000000, $E00F0010, $00080020
                dc.l    $000D1800, $18000020, $E00D0008, $00040040
                dc.l    $F00D1800, $18000040, $E00D1800, $18000060                                                    
;=============================================================================== 
; Object 0x6F - Metropolis - Parallelogram Elevators
; [ End ]                         
;===============================================================================                
                nop                             ; Filler
J_Adjust2PArtPointer_19: ; loc_1C844:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
loc_1C84A:
                jmp     (loc_F59E)   
                
;=============================================================================== 
; Object 0x70 - Metropolis - Rotating Gears
; [ Begin ]                         
;===============================================================================                     
Obj_0x70_Rotating_Gears: ; loc_1C850:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1C85E(PC, D0), D1
                jmp     loc_1C85E(PC, D1)
loc_1C85E:
                dc.w    loc_1C862-loc_1C85E
                dc.w    loc_1C8E2-loc_1C85E
loc_1C862:
                moveq   #$07, D1
                moveq   #$00, D4
                lea     (loc_1C9B6), A2
                move.l  A0, A1
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                bset    #$07, $0022(A0)
                bra.s   loc_1C884
loc_1C87E:                
                bsr     J_SingleObjLoad2_07  ; loc_1CBB8
                bne.s   loc_1C8DE
loc_1C884:
                move.b  $0000(A0), $0000(A1)
                addq.b  #$02, $0024(A1)
                move.l  #Rotating_Gears_Mappings, $0004(A1) ; loc_1CA16
                move.w  #$6378, $0002(A1)
                bsr     J_Adjust2PArtPointer2_01 ; loc_1CBBE
                move.b  #$04, $0001(A1)
                move.b  #$04, $0018(A1)
                move.b  #$10, $0019(A1)
                move.w  D2, $0032(A1)
                move.w  D3, $0030(A1)
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, $0008(A1)
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D3, D0
                move.w  D0, $000C(A1)
                move.b  (A2)+, $001A(A1)
                move.w  D4, $0034(A1)
                addq.w  #$03, D4
                move.b  $0022(A0), $0022(A1)
loc_1C8DE:
                dbra    D1, loc_1C87E
loc_1C8E2:
                move.w  $0008(A0), -(A7)
                move.b  ($FFFFFE05).w, D0
                move.b  D0, D1
                andi.w  #$000F, D0
                bne.s   loc_1C95A
                move.w  $0036(A0), D1
                btst    #$00, $0022(A0)
                beq.s   loc_1C914
                subi.w  #$0018, D1
                bcc.s   loc_1C932
                moveq   #$48, D1
                subq.w  #$03, $0034(A0)
                bcc.s   loc_1C932
                move.w  #$0015, $0034(A0)
                bra.s   loc_1C932
loc_1C914:
                addi.w  #$0018, D1
                cmpi.w  #$0060, D1
                bcs.s   loc_1C932
                moveq   #$00, D1
                addq.w  #$03, $0034(A0)
                cmpi.w  #$0018, $0034(A0)
                bcs.s   loc_1C932
                move.w  #$0000, $0034(A0)
loc_1C932:
                move.w  D1, $0036(A0)
                add.w   $0034(A0), D1
                lea     loc_1C9B6(PC, D1), A1
                move.b  (A1)+, D0
                ext.w   D0
                add.w   $0032(A0), D0
                move.w  D0, $0008(A0)
                move.b  (A1)+, D0
                ext.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $000C(A0)
                move.b  (A1)+, $001A(A0)
loc_1C95A:
                move.b  $001A(A0), D0
                add.w   D0, D0
                andi.w  #$001E, D0
                moveq   #$00, D1
                moveq   #$00, D2
                move.b  loc_1C996(PC, D0), D1
                move.b  loc_1C997(PC, D0), D2
                move.w  D2, D3
                move.w  (A7)+, D4
                bsr     J_SolidObject_0D        ; loc_1CBC4
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_1E       ; loc_1C990
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_1E: ; loc_1C990:
                jmp     DeleteObject            ; (loc_D3B4)   

loc_1C996:                  
                dc.b    $10
loc_1C997:
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $0C, $10
                dc.b    $08, $10, $0C, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10
loc_1C9B6:
                dc.b    $00, $B8, $00, $32, $CE, $04, $48, $00, $08, $32, $32, $0C, $00, $48, $10, $CE
                dc.b    $32, $14, $B8, $00, $18, $CE, $CE, $1C, $0D, $B8, $01, $3F, $DA, $05, $48, $0C
                dc.b    $09, $27, $3C, $0D, $F3, $48, $11, $C1, $26, $15, $B8, $F4, $19, $D9, $C4, $1D
                dc.b    $19, $BC, $02, $46, $E9, $06, $46, $17, $0A, $19, $44, $0E, $E7, $44, $12, $BA
                dc.b    $17, $16, $BA, $E9, $1A, $E7, $BC, $1E, $27, $C4, $03, $48, $F4, $07, $3F, $26
                dc.b    $0B, $0D, $48, $0F, $D9, $3C, $13, $B8, $0C, $17, $C1, $DA, $1B, $F3, $B8, $1F
Rotating_Gears_Mappings:
loc_1CA16:
                dc.w    loc_1CA56-loc_1CA16
                dc.w    loc_1CA68-loc_1CA16
                dc.w    loc_1CA72-loc_1CA16
                dc.w    loc_1CA7C-loc_1CA16
                dc.w    loc_1CA86-loc_1CA16
                dc.w    loc_1CA90-loc_1CA16
                dc.w    loc_1CA9A-loc_1CA16
                dc.w    loc_1CAA4-loc_1CA16
                dc.w    loc_1CAAE-loc_1CA16
                dc.w    loc_1CAC0-loc_1CA16
                dc.w    loc_1CACA-loc_1CA16
                dc.w    loc_1CAD4-loc_1CA16
                dc.w    loc_1CADE-loc_1CA16
                dc.w    loc_1CAE8-loc_1CA16
                dc.w    loc_1CAF2-loc_1CA16
                dc.w    loc_1CAFC-loc_1CA16
                dc.w    loc_1CB06-loc_1CA16
                dc.w    loc_1CB18-loc_1CA16
                dc.w    loc_1CB22-loc_1CA16
                dc.w    loc_1CB2C-loc_1CA16
                dc.w    loc_1CB36-loc_1CA16
                dc.w    loc_1CB40-loc_1CA16
                dc.w    loc_1CB4A-loc_1CA16
                dc.w    loc_1CB54-loc_1CA16
                dc.w    loc_1CB5E-loc_1CA16
                dc.w    loc_1CB70-loc_1CA16
                dc.w    loc_1CB7A-loc_1CA16
                dc.w    loc_1CB84-loc_1CA16
                dc.w    loc_1CB8E-loc_1CA16
                dc.w    loc_1CB98-loc_1CA16
                dc.w    loc_1CBA2-loc_1CA16
                dc.w    loc_1CBAC-loc_1CA16
loc_1CA56:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F0070800, $08000000
loc_1CA68:
                dc.w    $0001
                dc.l    $F00B0808, $0804FFF4
loc_1CA72:
                dc.w    $0001
                dc.l    $F00F0814, $080AFFF0
loc_1CA7C:
                dc.w    $0001
                dc.l    $F00F0824, $0812FFF0
loc_1CA86:
                dc.w    $0001
                dc.l    $F00F0834, $081AFFF0
loc_1CA90:
                dc.w    $0001
                dc.l    $F00F0844, $0822FFF0
loc_1CA9A:
                dc.w    $0001
                dc.l    $F00F0854, $082AFFF0
loc_1CAA4:
                dc.w    $0001
                dc.l    $F40E0864, $0832FFF0
loc_1CAAE:
                dc.w    $0002
                dc.l    $F00D0870, $0838FFF0, $000D1870, $1838FFF0
loc_1CAC0:
                dc.w    $0001
                dc.l    $F40E1864, $1832FFF0
loc_1CACA:
                dc.w    $0001
                dc.l    $F00F1854, $182AFFF0
loc_1CAD4:
                dc.w    $0001
                dc.l    $F00F1844, $1822FFF0
loc_1CADE:
                dc.w    $0001
                dc.l    $F00F1834, $181AFFF0
loc_1CAE8:
                dc.w    $0001
                dc.l    $F00F1824, $1812FFF0
loc_1CAF2:
                dc.w    $0001
                dc.l    $F00F1814, $180AFFF0
loc_1CAFC:
                dc.w    $0001
                dc.l    $F00B1808, $1804FFF4
loc_1CB06:
                dc.w    $0002
                dc.l    $F0071000, $1000FFF0, $F0071800, $18000000
loc_1CB18:
                dc.w    $0001
                dc.l    $F00B1008, $1004FFF4
loc_1CB22:
                dc.w    $0001
                dc.l    $F00F1014, $100AFFF0
loc_1CB2C:
                dc.w    $0001
                dc.l    $F00F1024, $1012FFF0
loc_1CB36:
                dc.w    $0001
                dc.l    $F00F1034, $101AFFF0
loc_1CB40:
                dc.w    $0001
                dc.l    $F00F1044, $1022FFF0
loc_1CB4A:
                dc.w    $0001
                dc.l    $F00F1054, $102AFFF0
loc_1CB54:
                dc.w    $0001
                dc.l    $F40E1064, $1032FFF0
loc_1CB5E:
                dc.w    $0002
                dc.l    $F00D0070, $0038FFF0, $000D1070, $1038FFF0
loc_1CB70:
                dc.w    $0001
                dc.l    $F40E0064, $0032FFF0
loc_1CB7A:
                dc.w    $0001
                dc.l    $F00F0054, $002AFFF0
loc_1CB84:
                dc.w    $0001
                dc.l    $F00F0044, $0022FFF0
loc_1CB8E:
                dc.w    $0001
                dc.l    $F00F0034, $001AFFF0
loc_1CB98:
                dc.w    $0001
                dc.l    $F00F0024, $0012FFF0
loc_1CBA2:
                dc.w    $0001
                dc.l    $F00F0014, $000AFFF0
loc_1CBAC:
                dc.w    $0001
                dc.l    $F00B0008, $0004FFF4                                                        
;=============================================================================== 
; Object 0x70 - Metropolis - Rotating Gears
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler
J_SingleObjLoad2_07: ; loc_1CBB8:
                jmp     SingleObjLoad2      ; (loc_E788)
J_Adjust2PArtPointer2_01: ; loc_1CBBE:
                jmp     Adjust2PArtPointer2   ; (loc_DC4C)
J_SolidObject_0D: ; loc_1CBC4:
                jmp     SolidObject             ; (loc_F4A0)  
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x72 - Metropolis - Conveyor Belt Attributes
; [ Begin ]                         
;===============================================================================                   
Obj_0x72_Conveyor_Belt_Attributes: ; loc_1CBCC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1CBDA(PC, D0), D1
                jmp     loc_1CBDA(PC, D1)
loc_1CBDA:
                dc.w    loc_1CBDE-loc_1CBDA
                dc.w    loc_1CBFE-loc_1CBDA
loc_1CBDE:
                addq.b  #$02, $0024(A0)
                move.b  $0028(A0), D0
                lsl.b   #$04, D0
                move.b  D0, $0038(A0)
                move.w  #$0002, $0036(A0)
                btst    #$00, $0022(A0)
                beq.s   loc_1CBFE
                neg.w   $0036(A0)
loc_1CBFE:
                lea     ($FFFFB000).w, A1
                bsr.s   loc_1CC0E
                lea     ($FFFFB040).w, A1
                bsr.s   loc_1CC0E
                bra     loc_1CC4C
loc_1CC0E:
                moveq   #$00, D2
                move.b  $0038(A0), D2
                move.w  D2, D3
                add.w   D3, D3
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D2, D0
                cmp.w   D3, D0
                bcc.s   loc_1CC48
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                addi.w  #$0030, D1
                cmpi.w  #$0030, D1
                bcc.s   loc_1CC48
                btst    #$01, $0022(A1)
                bne.s   loc_1CC48
                move.w  $0036(A0), D0
                add.w   D0, $0008(A1)
loc_1CC48:
                rts
                
;=============================================================================== 
; Object 0x72 - Metropolis - Conveyor Belt Attributes
; [ End ]                         
;===============================================================================             
                nop                             ; Filler
loc_1CC4C:
                jmp     (loc_D30C)     
                dc.w    $000                    ; Filler
;=============================================================================== 
; Object 0x73 - Dust Hill - Rotating Rings - Sonic can walk Through
; [ Begin ]                         
;===============================================================================  
Obj_0x73_Rotating_Rings: ; loc_1CC54:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1CC62(PC, D0), D1
                jmp     loc_1CC62(PC, D1)
loc_1CC62:
                dc.w    loc_1CC68-loc_1CC62
                dc.w    loc_1CD56-loc_1CC62
                dc.w    loc_1CDFE-loc_1CC62
loc_1CC68:
                addq.b  #$02, $0024(A0)
                move.l  #Rotating_Rings_Mappings, $0004(A0) ; loc_1CE1C
                move.w  #$26BC, $0002(A0)
                bsr     J_Adjust2PArtPointer_1A ; loc_1CE3A
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$08, $0019(A0)
                move.w  $0008(A0), $003A(A0)
                move.w  $000C(A0), $0038(A0)
                move.b  #$00, $0020(A0)
                bset    #$07, $0022(A0)
                move.b  $0028(A0), D1
                andi.b  #$F0, D1
                ext.w   D1
                asl.w   #$03, D1
                move.w  D1, $003E(A0)
                move.b  $0022(A0), D0
                ror.b   #$02, D0
                andi.b  #$C0, D0
                move.b  D0, $0026(A0)
                lea     $0029(A0), A2
                move.b  $0028(A0), D1
                andi.w  #$0007, D1
                move.b  #$00, (A2)+
                move.w  D1, D3
                lsl.w   #$04, D3
                move.b  D3, $003C(A0)
                subq.w  #$01, D1
                bcs.s   loc_1CD48
                btst    #$03, $0028(A0)
                beq.s   loc_1CCEE
                subq.w  #$01, D1
                bcs.s   loc_1CD48
loc_1CCEE:
                bsr     J_SingleObjLoad_06   ; loc_1CE2E
                bne.s   loc_1CD48
                addq.b  #$01, $0029(A0)
                move.w  A1, D5
                subi.w  #$B000, D5
                lsr.w   #$06, D5
                andi.w  #$007F, D5
                move.b  D5, (A2)+
                move.b  #$04, $0024(A1)
                move.b  $0000(A0), $0000(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0018(A0), $0018(A1)
                move.b  $0019(A0), $0019(A1)
                move.b  $0020(A0), $0020(A1)
                move.b  $0022(A0), $0022(A1)
                subi.b  #$10, D3
                move.b  D3, $003C(A1)
                dbra    D1, loc_1CCEE
loc_1CD48:
                move.w  A0, D5
                subi.w  #$B000, D5
                lsr.w   #$06, D5
                andi.w  #$007F, D5
                move.b  D5, (A2)+
loc_1CD56:
                move.w  $0008(A0), -(A7)
                bsr     loc_1CD74
                move.w  #$0008, D1
                move.w  #$0008, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     J_SolidObject_0E        ; loc_1CE40
                bra     loc_1CDC6
loc_1CD74:
                move.w  $003E(A0), D0
                add.w   D0, $0026(A0)
                move.b  $0026(A0), D0
                jsr     CalcSine                ; loc_320A
                move.w  $0038(A0), D2
                move.w  $003A(A0), D3
                lea     $0029(A0), A2
                moveq   #$00, D6
                move.b  (A2)+, D6
loc_1CD96:                
                moveq   #$00, D4
                move.b  (A2)+, D4
                lsl.w   #$06, D4
                addi.l  #$FFFFB000, D4
                move.l  D4, A1
                moveq   #$00, D4
                move.b  $003C(A1), D4
                move.l  D4, D5
                muls.w  D0, D4
                asr.l   #$08, D4
                muls.w  D1, D5
                asr.l   #$08, D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D4, $000C(A1)
                move.w  D5, $0008(A1)
                dbra    D6, loc_1CD96
                rts
loc_1CDC6:
                move.w  $003A(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_1CDDE
                bra     J_DisplaySprite_0B      ; loc_1CE28
loc_1CDDE:
                moveq   #$00, D2
                lea     $0029(A0), A2
                move.b  (A2)+, D2
loc_1CDE6:                
                moveq   #$00, D0
                move.b  (A2)+, D0
                lsl.w   #$06, D0
                addi.l  #$FFFFB000, D0
                move.l  D0, A1
                bsr     loc_1CE34
                dbra    D2, loc_1CDE6
                rts
loc_1CDFE:
                move.w  #$0008, D1
                move.w  #$0008, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0036(A0), D4
                bsr     J_SolidObject_0E        ; loc_1CE40
                move.w  $0008(A0), $0036(A0)
                bra     J_DisplaySprite_0B      ; loc_1CE28  
Rotating_Rings_Mappings:                     
loc_1CE1C:
                dc.w    loc_1CE1E-loc_1CE1C
loc_1CE1E:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8                       
;=============================================================================== 
; Object 0x73 - Dust Hill - Rotating Rings - Sonic can walk Through
; [ End ]                         
;===============================================================================
J_DisplaySprite_0B: ; loc_1CE28:
                jmp     DisplaySprite           ; (loc_D3C2)
J_SingleObjLoad_06: ; loc_1CE2E:
                jmp     SingleObjLoad        ; (loc_E772)
loc_1CE34:
                jmp     (loc_D3B6)
J_Adjust2PArtPointer_1A: ; loc_1CE3A:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_0E: ; loc_1CE40:
                jmp     SolidObject             ; (loc_F4A0)      
                dc.w    $0000                   ; Filler     
;=============================================================================== 
; Object 0x75 - Dust Hill - Spikeball with chain
; [ Begin ]                         
;===============================================================================                
Obj_0x75_Spikeball_Chain: ; loc_1CE48:
                btst    #$06, $0001(A0)
                bne     loc_1CE60
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1CE68(PC, D0), D1
                jmp     loc_1CE68(PC, D1)
loc_1CE60:
                move.w  #$0280, D0
                bra     J_DisplaySprite_Param_00  ; loc_1D040
loc_1CE68:
                dc.w    loc_1CE6E-loc_1CE68
                dc.w    loc_1CF4A-loc_1CE68
                dc.w    loc_1CFEC-loc_1CE68
loc_1CE6E:
                addq.b  #$02, $0024(A0)
                move.l  #Spikeball_Chain_Mappings, $0004(A0) ; loc_1D00A
                move.w  #$2000, $0002(A0)
                bsr     J_Adjust2PArtPointer_1B ; loc_1D064
                move.b  #$04, $0001(A0)
                move.b  #$05, $0018(A0)
                move.b  #$10, $0019(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  $0028(A0), D1
                move.b  D1, D0
                andi.w  #$000F, D1
                andi.b  #$F0, D0
                ext.w   D0
                asl.w   #$03, D0
                move.w  D0, $0034(A0)
                move.b  $0022(A0), D0
                ror.b   #$02, D0
                andi.b  #$C0, D0
                move.b  D0, $0026(A0)
                cmpi.b  #$0F, D1
                bne.s   loc_1CEDE
                addq.b  #$02, $0024(A0)
                move.b  #$04, $0018(A0)
                move.b  #$02, $001A(A0)
                rts
loc_1CEDE:
                move.b  #$9A, $0020(A0)
                bsr     J_SingleObjLoad2_08  ; loc_1D05E
                bne.s   loc_1CF4A
                move.b  $0000(A0), $0000(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  #$04, $0001(A1)
                bset    #$06, $0001(A1)
                move.b  #$40, $000E(A1)
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                move.b  D1, $000F(A1)
                subq.w  #$01, D1
                lea     $0010(A1), A2
loc_1CF20:                
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                move.w  #$0001, (A2)+
                dbra    D1, loc_1CF20
                move.w  D2, $0008(A1)
                move.w  D3, $000C(A1)
                move.b  #$00, $000B(A1)
                move.l  A1, $003C(A0)
                move.b  #$40, $0014(A1)
                bset    #$04, $0001(A1)
loc_1CF4A:
                move.w  $0034(A0), D0
                add.w   D0, $0026(A0)
                move.b  $0026(A0), D0
                bsr     loc_1D06A
                move.w  $0032(A0), D2
                move.w  $0030(A0), D3
                moveq   #$00, D6
                move.l  $003C(A0), A1
                move.b  $000F(A1), D6
                subq.w  #$01, D6
                bcs.s   loc_1CFBE
                asl.w   #$04, D0
                ext.l   D0
                asl.l   #$08, D0
                asl.w   #$04, D1
                ext.l   D1
                asl.l   #$08, D1
                moveq   #$00, D4
                moveq   #$00, D5
                lea     $0010(A1), A2
loc_1CF84:                
                movem.l D4/D5, -(A7)
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, (A2)+
                move.w  D4, (A2)+
                movem.l (A7)+, D4/D5
                add.l   D0, D4
                add.l   D1, D5
                addq.w  #$02, A2
                dbra    D6, loc_1CF84
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, $0008(A0)
                move.w  D4, $000C(A0)
                move.w  $0028(A1), $0008(A1)
                move.w  $002A(A1), $000C(A1)
loc_1CFBE:
                tst.w   ($FFFFFFD8).w
                beq.s   loc_1CFC8
                bra     J_DisplaySprite_0C      ; loc_1D046
loc_1CFC8:
                move.w  $0030(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_1CFE0
                bra     J_DisplaySprite_0C      ; loc_1D046
loc_1CFE0:
                move.l  $003C(A0), A1
                bsr     loc_1D058
                bra     J_DeleteObject_1F       ; loc_1D04C
loc_1CFEC:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_0F        ; loc_1D070
                bra     J_MarkObjGone_11        ; loc_1D052   
Spikeball_Chain_Mappings:
loc_1D00A:
                dc.w    loc_1D010-loc_1D00A
                dc.w    loc_1D022-loc_1D00A
                dc.w    loc_1D02C-loc_1D00A
loc_1D010:
                dc.w    $0002
                dc.l    $F00D007A, $003DFFF0, $000D187A, $183DFFF0
loc_1D022:
                dc.w    $0001
                dc.l    $F8054066, $4033FFF8
loc_1D02C:
                dc.w    $0002
                dc.l    $F0074040, $4020FFF0, $F0074840, $48200000                             
;=============================================================================== 
; Object 0x75 - Dust Hill - Spikeball with chain
; [ End ]                         
;===============================================================================  
                nop                             ; Filler
J_DisplaySprite_Param_00: ; loc_1D040:                               
                jmp     DisplaySprite_Param     ; (loc_D3FE)
J_DisplaySprite_0C: ; loc_1D046:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_1F: ; loc_1D04C:
                jmp     DeleteObject            ; (loc_D3B4)
J_MarkObjGone_11: ; loc_1D052:
                jmp     MarkObjGone             ; (loc_D2A0)
loc_1D058:
                jmp     (loc_D3B6)
J_SingleObjLoad2_08: ; loc_1D05E:
                jmp     SingleObjLoad2      ; (loc_E788)
J_Adjust2PArtPointer_1B: ; loc_1D064:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
loc_1D06A:
                jmp     CalcSine                ; loc_320A
J_SolidObject_0F: ; loc_1D070:
                jmp     SolidObject             ; (loc_F4A0)     
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x76 - Dust Hill - Platform with spikes on sides 
; [ Begin ]                         
;===============================================================================                    
Obj_0x76_Platform_Spikes: ; loc_1D078:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1D086(PC, D0), D1
                jmp     loc_1D086(PC, D1)
loc_1D086:
                dc.w    loc_1D08E-loc_1D086
                dc.w    loc_1D0DE-loc_1D086
loc_1D08A:
                dc.b    $40, $10, $00, $00
loc_1D08E:
                addq.b  #$02, $0024(A0)
                move.l  #Platform_Spikes_Mappings, $0004(A0) ; loc_1D1BA
                move.w  #$0000, $0002(A0)
                bsr     J_Adjust2PArtPointer_1C ; loc_1D1F6
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     loc_1D08A(PC, D0), A2
                move.b  (A2)+, $0019(A0)
                move.b  (A2)+, $0016(A0)
                move.b  (A2)+, $001A(A0)
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0030(A0)
                andi.w  #$000F, $0028(A0)
loc_1D0DE:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.w  loc_1D14A(PC, D0), D1
                jsr     loc_1D14A(PC, D1)
                move.w  (A7)+, D4
                tst.b   $0001(A0)
                bpl.s   loc_1D142
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_10        ; loc_1D1FC
                swap.w  D6
                andi.w  #$0003, D6
                beq.s   loc_1D142
                move.b  D6, D0
                andi.b  #$01, D0
                beq.s   loc_1D12E
                lea     ($FFFFB000).w, A1
                bsr     loc_1D1F0
                bclr    #$05, $0022(A0)
loc_1D12E:
                andi.b  #$02, D6
                beq.s   loc_1D142
                lea     ($FFFFB040).w, A1
                bsr     loc_1D1F0
                bclr    #$06, $0022(A0)
loc_1D142:
                move.w  $0034(A0), D0
                bra     loc_1D202
loc_1D14A:                  
                dc.w    loc_1D14E-loc_1D14A
                dc.w    loc_1D19E-loc_1D14A
loc_1D14E:
                lea     ($FFFFB000).w, A1
                bsr.s   loc_1D158
                lea     ($FFFFB040).w, A1
loc_1D158:
                btst    #$01, $0022(A1)
                bne.s   loc_1D19C
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addi.w  #$00C0, D0
loc_1D16C:
                btst    #$00, $0022(A0)
                beq.s   loc_1D178
                subi.w  #$0100, D0
loc_1D178:
                cmpi.w  #$0080, D0
                bcc.s   loc_1D19C
                move.w  $000C(A1), D0
                sub.w   $000C(A0), D0
                addi.w  #$0010, D0
                cmpi.w  #$0020, D0
                bcc.s   loc_1D19C
                move.b  #$02, $0028(A0)
                move.w  #$0080, $0036(A0)
loc_1D19C:
                rts
loc_1D19E:
                tst.w   $0036(A0)
                beq.s   loc_1D1B8
                subq.w  #$01, $0036(A0)
                moveq   #-1, D0
                btst    #$00, $0022(A0)
                beq.s   loc_1D1B4
                neg.w   D0
loc_1D1B4:
                add.w   D0, $0008(A0)
loc_1D1B8:
                rts
Platform_Spikes_Mappings:
loc_1D1BA:
                dc.w    loc_1D1BC-loc_1D1BA
loc_1D1BC:
                dc.w    $0006
                dc.l    $F005242C, $2216FFC0, $0005242C, $2216FFC0
                dc.l    $F0076040, $6020FFD0, $F00F6048, $6024FFE0
                dc.l    $F00F6048, $60240000, $F00F6048, $60240020                
;=============================================================================== 
; Object 0x76 - Dust Hill - Platform with spikes on sides 
; [ End ]                         
;===============================================================================                   
                nop                             ; Filler
loc_1D1F0:
                jmp     Touch_Spikes            ; (loc_CAD0)
J_Adjust2PArtPointer_1C: ; loc_1D1F6:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_10: ; loc_1D1FC:
                jmp     SolidObject             ; (loc_F4A0)
loc_1D202:
                jmp     (loc_D2D8)
;=============================================================================== 
; Object 0x77 - Dust Hill - Bridge 
; [ Begin ]                         
;===============================================================================                    
Obj_0x77_Bridge: ; loc_1D208:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1D216(PC, D0), D1
                jmp     loc_1D216(PC, D1)
loc_1D216:
                dc.w    loc_1D21A-loc_1D216
                dc.w    loc_1D23C-loc_1D216
loc_1D21A:
                addq.b  #$02, $0024(A0)
                move.l  #Dhz_Bridge_Mappings, $0004(A0) ; loc_1D2E0
                move.w  #$643C, $0002(A0)
                bsr     J_Adjust2PArtPointer_1D ; loc_1D3B2
                ori.b   #$04, $0001(A0)
                move.b  #$80, $0019(A0)
loc_1D23C:
                tst.b   $0034(A0)
                bne.s   loc_1D270
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  $0028(A0), D0
                btst    #$00, $00(A2, D0)
                beq.s   loc_1D270
                move.b  #$01, $0034(A0)
                bchg    #$00, $001C(A0)
                tst.b   $0001(A0)
                bpl.s   loc_1D270
                move.w  #$00BB, D0
                jsr     (PlaySound)              ; loc_14C6
loc_1D270:
                lea     (loc_1D2D0), A1
                jsr     AnimateSprite           ; (loc_D412)
                tst.b   $001A(A0)
                bne.s   loc_1D29A
                move.w  #$004B, D1
                move.w  #$0008, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_11        ; loc_1D3B8
                bra     J_MarkObjGone_12        ; loc_1D3AC
loc_1D29A:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   loc_1D2CC
                move.b  D0, D1
                andi.b  #$08, D0
                beq.s   loc_1D2B6
                lea     ($FFFFB000).w, A1
                bclr    #$03, $0022(A1)
loc_1D2B6:
                andi.b  #$10, D1
                beq.s   loc_1D2C6
                lea     ($FFFFB040).w, A1
                bclr    #$03, $0022(A1)
loc_1D2C6:
                andi.b  #$E7, $0022(A0)
loc_1D2CC:
                bra     J_MarkObjGone_12        ; loc_1D3AC  

loc_1D2D0:               
                dc.w    loc_1D2D4-loc_1D2D0
                dc.w    loc_1D2DA-loc_1D2D0
loc_1D2D4:
                dc.b    $03, $02, $01, $00, $FE, $01
loc_1D2DA:
                dc.b    $03, $00, $01, $02, $FE, $01
Dhz_Bridge_Mappings:                
loc_1D2E0:
                dc.w    loc_1D2E6-loc_1D2E0
                dc.w    loc_1D328-loc_1D2E0
                dc.w    loc_1D36A-loc_1D2E0                
loc_1D2E6:
                dc.w    $0008
                dc.l    $F8050000, $0000FFC0, $F8050000, $0000FFD0
                dc.l    $F8050000, $0000FFE0, $F8050000, $0000FFF0
                dc.l    $F8050000, $00000000, $F8050000, $00000010
                dc.l    $F8050000, $00000020, $F8050000, $00000030
loc_1D328:
                dc.w    $0008
                dc.l    $F8050000, $0000FFC0, $04050000, $0000FFCC
                dc.l    $10050000, $0000FFD8, $1C050000, $0000FFE4
                dc.l    $1C050000, $0000000C, $10050000, $00000018
                dc.l    $04050000, $00000024, $F8050000, $00000030
loc_1D36A:
                dc.w    $0008
                dc.l    $F8050000, $0000FFC0, $08050000, $0000FFC0
                dc.l    $18050000, $0000FFC0, $28050000, $0000FFC0
                dc.l    $F8050000, $00000030, $08050000, $00000030
                dc.l    $18050000, $00000030, $28050000, $00000030                            
;=============================================================================== 
; Object 0x77 - Dust Hill - Bridge 
; [ End ]                         
;===============================================================================  
J_MarkObjGone_12: ; loc_1D3AC:
                jmp     MarkObjGone             ; (loc_D2A0)
J_Adjust2PArtPointer_1D: ; loc_1D3B2:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
J_SolidObject_11: ; loc_1D3B8:
                jmp     SolidObject             ; (loc_F4A0)
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x78 - Chemical Plant - Rotanting Platforms / Down when Touch Platform 
; [ Begin ]                         
;===============================================================================                  
Obj_0x78_Rotating_Platforms: ; loc_1D3C0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1D3D6(PC, D0), D1
                jsr     loc_1D3D6(PC, D1)
                move.w  $0030(A0), D0
                bra     loc_1D58E
loc_1D3D6:
                dc.w    loc_1D3DC-loc_1D3D6
                dc.w    loc_1D460-loc_1D3D6
                dc.w    loc_1D474-loc_1D3D6
loc_1D3DC:
                addq.b  #$02, $0024(A0)
                moveq   #$34, D3
                moveq   #$02, D4
                btst    #$00, $0022(A0)
                beq.s   loc_1D3F0
                moveq   #$3A, D3
                moveq   #-2, D4
loc_1D3F0:
                move.w  $0008(A0), D2
                move.l  A0, A1
                moveq   #$03, D1
                bra.s   loc_1D408
loc_1D3FA:                
                bsr     J_SingleObjLoad2_09 ; loc_1D57C
                bne     loc_1D460
                move.b  #$04, $0024(A1)
loc_1D408:
                move.b  $0000(A0), $0000(A1)
                move.l  #Block_Mappings, $0004(A1) ; loc_1BF4A
                move.w  #$6418, $0002(A1)
                bsr     J_Adjust2PArtPointer2_02 ; loc_1D582
                move.b  #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$10, $0019(A1)
                move.b  $0028(A0), $0028(A1)
                move.w  D2, $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0008(A0), $0030(A1)
                move.w  $000C(A1), $0032(A1)
                addi.w  #$0020, D2
                move.b  D3, $002F(A1)
                move.l  A0, $003C(A1)
                add.b   D4, D3
                dbra    D1, loc_1D3FA
loc_1D460:
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$0007, D0
                add.w   D0, D0
                move.w  loc_1D4AC(PC, D0), D1
                jsr     loc_1D4AC(PC, D1)
loc_1D474:
                move.l  $003C(A0), A2
                moveq   #$00, D0
                move.b  $002F(A0), D0
                move.w  $00(A2, D0), D0
                add.w   $0032(A0), D0
                move.w  D0, $000C(A0)
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_12        ; loc_1D588
                swap.w  D6
                or.b    D6, $002E(A2)
                rts
loc_1D4AC:
                dc.w    loc_1D4BC-loc_1D4AC
                dc.w    loc_1D528-loc_1D4AC
                dc.w    loc_1D4E0-loc_1D4AC
                dc.w    loc_1D528-loc_1D4AC
                dc.w    loc_1D4BC-loc_1D4AC
                dc.w    loc_1D552-loc_1D4AC
                dc.w    loc_1D4E0-loc_1D4AC
                dc.w    loc_1D552-loc_1D4AC
loc_1D4BC:
                tst.w   $002C(A0)
                bne.s   loc_1D4D4
                move.b  $002E(A0), D0
                andi.b  #$30, D0
                beq.s   loc_1D4D2
                move.w  #$001E, $002C(A0)
loc_1D4D2:
                rts
loc_1D4D4:
                subq.w  #$01, $002C(A0)
                bne.s   loc_1D4D2
                addq.b  #$01, $0028(A0)
                rts
loc_1D4E0:
                tst.w   $002C(A0)
                bne.s   loc_1D4F8
                move.b  $002E(A0), D0
                andi.b  #$0C, D0
                beq.s   loc_1D4F6
                move.w  #$003C, $002C(A0)
loc_1D4F6:
                rts
loc_1D4F8:
                subq.w  #$01, $002C(A0)
                bne.s   loc_1D504
                addq.b  #$01, $0028(A0)
                rts
loc_1D504:
                lea     $0034(A0), A1
                move.w  $002C(A0), D0
                lsr.b   #$02, D0
                andi.b  #$01, D0
                move.w  D0, (A1)+
                eori.b  #$01, D0
                move.w  D0, (A1)+
                eori.b  #$01, D0
                move.w  D0, (A1)+
                eori.b  #$01, D0
                move.w  D0, (A1)+
                rts
loc_1D528:
                lea     $0034(A0), A1
                cmpi.w  #$0080, (A1)
                beq.s   loc_1D550
                addq.w  #$01, (A1)
                moveq   #$00, D1
                move.w  (A1)+, D1
                swap.w  D1
                lsr.l   #$01, D1
                move.l  D1, D2
                lsr.l   #$01, D1
                move.l  D1, D3
                add.l   D2, D3
                swap.w  D1
                swap.w  D2
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D2, (A1)+
                move.w  D1, (A1)+
loc_1D550:
                rts
loc_1D552:
                lea     $0034(A0), A1
                cmpi.w  #$FF80, (A1)
                beq.s   loc_1D57A
                subq.w  #$01, (A1)
                moveq   #$00, D1
                move.w  (A1)+, D1
                swap.w  D1
                asr.l   #$01, D1
                move.l  D1, D2
                asr.l   #$01, D1
                move.l  D1, D3
                add.l   D2, D3
                swap.w  D1
                swap.w  D2
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D2, (A1)+
                move.w  D1, (A1)+
loc_1D57A:
                rts   
;=============================================================================== 
; Object 0x78 - Chemical Plant - Rotanting Platforms / Down when Touch Platform 
; [ End ]                         
;===============================================================================                   
J_SingleObjLoad2_09: ; loc_1D57C:
                jmp     SingleObjLoad2      ; (loc_E788)
J_Adjust2PArtPointer2_02: ; loc_1D582:
                jmp     Adjust2PArtPointer2   ; (loc_DC4C)
J_SolidObject_12: ; loc_1D588:
                jmp     SolidObject             ; (loc_F4A0)
loc_1D58E:
                jmp     (loc_D2D8)  
;=============================================================================== 
; Object 0x7A - Chemical Plant - Platforms - Move horizontally
; [ Begin ]                         
;===============================================================================                     
Obj_0x7A_Platform_Horizontal: ; loc_1D594:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1D5A2(PC, D0), D1
                jmp     loc_1D5A2(PC, D1)
loc_1D5A2:
                dc.w    loc_1D5BA-loc_1D5A2
                dc.w    loc_1D660-loc_1D5A2
                dc.w    loc_1D6B2-loc_1D5A2
loc_1D5A8:                
                dc.b    $00, $70, $FF, $90, $00, $00, $01, $B0, $FF, $50, $00, $40, $01, $F0, $FF, $80
                dc.b    $00, $80
loc_1D5BA:
                addq.b  #$02, $0024(A0)
                move.w  #$E418, $0002(A0)
                bsr     J_Adjust2PArtPointer_1E ; loc_1D73E
                moveq   #$00, D1
                move.b  $0028(A0), D1
                lea     loc_1D5A8(PC, D1), A2
                move.b  (A2)+, D1
                move.l  A0, A1
                bra.s   loc_1D5F6
loc_1D5D8:                
                bsr     J_SingleObjLoad2_0A  ; loc_1D738
                bne.s   loc_1D61C
                move.b  $0000(A0), $0000(A1)
                move.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
loc_1D5F6:
                move.l  #Platform_Horizontal_Mappings, $0004(A1) ; loc_1D72C
                move.w  $0002(A0), $0002(A1)
                move.b  #$04, $0001(A1)
                move.b  #$04, $0018(A1)
                move.b  #$10, $0019(A1)
                move.w  $0008(A1), $0030(A1)
loc_1D61C:
                dbra    D1, loc_1D5D8
                move.l  A0, $003C(A1)
                move.l  A1, $003C(A0)
                cmpi.b  #$0C, $0028(A0)
                bne.s   loc_1D636
                move.b  #$01, $0036(A0)
loc_1D636:
                moveq   #$00, D1
                move.b  (A2)+, D1
                move.w  $0030(A0), D0
                sub.w   D1, D0
                move.w  D0, $0032(A0)
                move.w  D0, $0032(A1)
                add.w   D1, D0
                add.w   D1, D0
                move.w  D0, $0034(A0)
                move.w  D0, $0034(A1)
                move.w  (A2)+, D0
                add.w   D0, $0008(A0)
                move.w  (A2)+, D0
                add.w   D0, $0008(A1)
loc_1D660:
                bsr.s   loc_1D6BC
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bls.s   loc_1D686
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1D68C
loc_1D686:
                jmp     DisplaySprite           ; (loc_D3C2)
loc_1D68C:
                move.l  $003C(A0), A1
                cmpa.l  A0, A1
                beq.s   loc_1D69A
                jsr     (loc_D3B6)
loc_1D69A:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_20       ; loc_1D6AC
                bclr    #$07, $02(A2, D0)
J_DeleteObject_20: ; loc_1D6AC:
                jmp     DeleteObject            ; (loc_D3B4)
loc_1D6B2:
                bsr.s   loc_1D6BC
                bsr.s   loc_1D706
                jmp     DisplaySprite           ; (loc_D3C2)
loc_1D6BC:
                move.w  $0008(A0), -(A7)
                tst.b   $0036(A0)
                beq.s   loc_1D6DE
                move.w  $0008(A0), D0
                subq.w  #$01, D0
                cmp.w   $0032(A0), D0
                bne.s   loc_1D6D8
                move.b  #$00, $0036(A0)
loc_1D6D8:
                move.w  D0, $0008(A0)
                bra.s   loc_1D6F4
loc_1D6DE:
                move.w  $0008(A0), D0
                addq.w  #$01, D0
                cmp.w   $0034(A0), D0
                bne.s   loc_1D6F0
                move.b  #$01, $0036(A0)
loc_1D6F0:
                move.w  D0, $0008(A0)
loc_1D6F4:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  #$0008, D3
                move.w  (A7)+, D4
                bsr     loc_1D744
                rts
loc_1D706:
                move.l  $003C(A0), A1
                move.w  $0008(A0), D0
                subi.w  #$0010, D0
                move.w  $0008(A1), D2
                addi.w  #$0010, D2
                cmp.w   D0, D2
                bne.s   loc_1D72A
                eori.b  #$01, $0036(A0)
                eori.b  #$01, $0036(A1)
loc_1D72A:
                rts
Platform_Horizontal_Mappings: ; loc_1D72C:
                dc.w    loc_1D72E-Platform_Horizontal_Mappings
loc_1D72E:
                dc.w    $0001
                dc.l    $F80D0010, $0008FFF0            
;=============================================================================== 
; Object 0x7A - Chemical Plant - Platforms - Move horizontally
; [ End ]                         
;===============================================================================  
J_SingleObjLoad2_0A: ; loc_1D738:
                jmp     SingleObjLoad2      ; (loc_E788)
J_Adjust2PArtPointer_1E: ; loc_1D73E:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
loc_1D744:
                jmp     (loc_F984)
                dc.w    $0000                   ; Filler    
;=============================================================================== 
; Object 0x7B - Chemical Plant - Spring Over Tubes 
; [ Begin ]                         
;===============================================================================                 
Obj_0x7B_Spring_Tubes: ; loc_1D74C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1D77C(PC, D0), D1
                jsr     loc_1D77C(PC, D1)
                tst.w   ($FFFFFFD8).w
                beq.s   loc_1D764
                bra     J_DisplaySprite_0D      ; loc_1D964
loc_1D764:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_21       ; loc_1D96A
                bra     J_DisplaySprite_0D      ; loc_1D964
loc_1D77C:
                dc.w    loc_1D784-loc_1D77C
                dc.w    loc_1D7BA-loc_1D77C
loc_1D780:
                dc.w    $F000, $F600
loc_1D784:
                addq.b  #$02, $0024(A0)
                move.l  #Spring_Tubes_Mappings, $0004(A0) ; loc_1D920
                move.w  #$03E0, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  $0028(A0), D0
                andi.w  #$0002, D0
                move.w  loc_1D780(PC, D0), $0030(A0)
                bsr     J_Adjust2PArtPointer_1F ; loc_1D976
loc_1D7BA:
                cmpi.b  #$01, $001A(A0)
                beq.s   loc_1D802
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     loc_1D97C
                btst    #$03, $0022(A0)
                beq.s   loc_1D7EA
                bsr.s   loc_1D862
loc_1D7EA:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     loc_1D97C
                btst    #$04, $0022(A0)
                beq.s   loc_1D802
                bsr.s   loc_1D862
loc_1D802:
                move.w  $0008(A0), D4
                move.w  D4, D5
                subi.w  #$0010, D4
                addi.w  #$0010, D5
                move.w  $000C(A0), D2
                move.w  D2, D3
                addi.w  #$0030, D3
                move.w  ($FFFFB008).w, D0
                cmp.w   D4, D0
                bcs.s   loc_1D838
                cmp.w   D5, D0
                bcc.s   loc_1D838
                move.w  ($FFFFB00C).w, D0
                cmp.w   D2, D0
                bcs.s   loc_1D838
                cmp.w   D3, D0
                bcc.s   loc_1D838
                move.b  #$02, $001C(A0)
loc_1D838:
                move.w  ($FFFFB048).w, D0
                cmp.w   D4, D0
                bcs.s   loc_1D856
                cmp.w   D5, D0
                bcc.s   loc_1D856
                move.w  ($FFFFB04C).w, D0
                cmp.w   D2, D0
                bcs.s   loc_1D856
                cmp.w   D3, D0
                bcc.s   loc_1D856
                move.b  #$03, $001C(A0)
loc_1D856:
                lea     (loc_1D908), A1
                bra     J_AnimateSprite_04      ; loc_1D970
                rts
loc_1D862:
                move.w  #$0100, $001C(A0)
                addq.w  #$04, $000C(A1)
                move.w  $0030(A0), $0012(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                bpl.s   loc_1D896
                move.w  #$0000, $0010(A1)
loc_1D896:
                btst    #$00, D0
                beq.s   loc_1D8D6
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                btst    #$01, D0
                bne.s   loc_1D8C6
                move.b  #$01, $002C(A1)
loc_1D8C6:
                btst    #$00, $0022(A1)
                beq.s   loc_1D8D6
                neg.b   $0027(A1)
                neg.w   $0014(A1)
loc_1D8D6:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_1D8EC
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
loc_1D8EC:
                cmpi.b  #$08, D0
                bne.s   loc_1D8FE
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
loc_1D8FE:
                move.w  #$00CC, D0
                jmp     (PlaySound)              ; loc_14C6    
loc_1D908:
                dc.w    loc_1D910-loc_1D908
                dc.w    loc_1D913-loc_1D908
                dc.w    loc_1D917-loc_1D908
                dc.w    loc_1D917-loc_1D908
loc_1D910:
                dc.b    $0F, $00, $FF
loc_1D913:
                dc.b    $00, $03, $FD, $00
loc_1D917:
                dc.b    $05, $01, $02, $02, $02, $04, $FD, $00, $00  
Spring_Tubes_Mappings:
loc_1D920:
                dc.w    loc_1D92A-loc_1D920
                dc.w    loc_1D934-loc_1D920
                dc.w    loc_1D946-loc_1D920
                dc.w    loc_1D958-loc_1D920
                dc.w    loc_1D934-loc_1D920
loc_1D92A:
                dc.w    $0001
                dc.l    $F00D0000, $0000FFF0
loc_1D934:
                dc.w    $0002
                dc.l    $E0070008, $0004FFF0, $E0070808, $08040000
loc_1D946:
                dc.w    $0002
                dc.l    $E0070010, $0008FFF0, $E0070810, $08080000
loc_1D958:
                dc.w    $0001
                dc.l    $F00D0018, $000CFFF0                                
;=============================================================================== 
; Object 0x7B - 
; [ End ]                         
;===============================================================================  
                nop                             ; Filler 
J_DisplaySprite_0D: ; loc_1D964:                                
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_21: ; loc_1D96A:
                jmp     DeleteObject            ; (loc_D3B4)
J_AnimateSprite_04: ; loc_1D970:
                jmp     AnimateSprite           ; (loc_D412)
J_Adjust2PArtPointer_1F: ; loc_1D976:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
loc_1D97C:
                jmp     (loc_F510)
                dc.w    $0000                   ; Filler                    
;=============================================================================== 
; Object 0x4D - Hidden Palace - Rhinobot 
; [ Begin ]                         
;===============================================================================                      
Obj_0x4D_Rhinobot: ; loc_1D984:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1D992(PC, D0), D1
                jmp     loc_1D992(PC, D1)
loc_1D992:
                dc.w    loc_1D996-loc_1D992
                dc.w    loc_1D9E6-loc_1D992
loc_1D996:
                move.l  #Rhinobot_Mappings, $0004(A0) ; loc_1DAEE
                move.w  #$23C4, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$18, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$18, $0017(A0)
                bsr     J_ObjectFall_01         ; loc_1DC4C
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_1D9E4
                add.w   D1, $000C(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
loc_1D9E4:
                rts
loc_1D9E6:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1DA02(PC, D0), D1
                jsr     loc_1DA02(PC, D1)
                lea     (loc_1DAD2), A1
                bsr     J_AnimateSprite_05      ; loc_1DC46
                bra     J_MarkObjGone_13        ; loc_1DC40
loc_1DA02:
                dc.w    loc_1DA06-loc_1DA02
                dc.w    loc_1DA2A-loc_1DA02
loc_1DA06:
                subq.w  #$01, $0030(A0)
                bpl.s   loc_1DA28
                addq.b  #$02, $0025(A0)
                move.w  #$FF80, $0010(A0)
                move.b  #$00, $001C(A0)
                bchg    #0, $0022(A0)
                bne.s   loc_1DA28
                neg.w   $0010(A0)
loc_1DA28:
                rts
loc_1DA2A:
                bsr     loc_1DA74
                bsr     J_ObjectFall_01         ; loc_1DC4C
                jsr     ObjHitFloor             ; (loc_13898)
                cmpi.w  #$FFF8, D1
                blt.s   loc_1DA50
                cmpi.w  #$000C, D1
                bge.s   loc_1DA4E
                move.w  #$0000, $0012(A0)
                add.w   D1, $000C(A0)
loc_1DA4E:
                rts
loc_1DA50:
                subq.b  #$02, $0025(A0)
                move.w  #$003B, $0030(A0)
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                sub.l   D0, $0008(A0)
                move.w  #$0000, $0010(A0)
                move.b  #$01, $001C(A0)
                rts
loc_1DA74:
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bmi.s   loc_1DAA8
                cmpi.w  #$0060, D0
                bgt.s   loc_1DA98
                btst    #$00, $0022(A0)
                bne.s   loc_1DA9A
                move.b  #$02, $001C(A0)
                move.w  #$FE00, $0010(A0)
loc_1DA98:
                rts
loc_1DA9A:
                move.b  #$00, $001C(A0)
                move.w  #$0080, $0010(A0)
                rts
loc_1DAA8:
                cmpi.w  #$FFA0, D0
                blt.s   loc_1DA98
                btst    #$00, $0022(A0)
                beq.s   loc_1DAC4
                move.b  #$02, $001C(A0)
                move.w  #$0200, $0010(A0)
                rts
loc_1DAC4:
                move.b  #$00, $001C(A0)
                move.w  #$FF80, $0010(A0)
                rts
loc_1DAD2:
                dc.w    loc_1DAD8-loc_1DAD2
                dc.w    loc_1DAE6-loc_1DAD2
                dc.w    loc_1DAE9-loc_1DAD2
loc_1DAD8:
                dc.b    $02, $00, $00, $00, $03, $03, $04, $01, $01, $02, $05, $05, $05, $FF
loc_1DAE6:
                dc.b    $0F, $00, $FF
loc_1DAE9:
                dc.b    $02, $06, $07, $FF, $00
Rhinobot_Mappings:                
loc_1DAEE:
                dc.w    loc_1DAFE-loc_1DAEE
                dc.w    loc_1DB28-loc_1DAEE
                dc.w    loc_1DB52-loc_1DAEE
                dc.w    loc_1DB7C-loc_1DAEE
                dc.w    loc_1DBA6-loc_1DAEE
                dc.w    loc_1DBD0-loc_1DAEE
                dc.w    loc_1DBFA-loc_1DAEE
                dc.w    loc_1DC1C-loc_1DAEE
loc_1DAFE:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $0005000A, $0005FFF0
                dc.l    $00090022, $00110000
loc_1DB28:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $0005000E, $0007FFF0
                dc.l    $00090022, $00110000
loc_1DB52:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $00050012, $0009FFF0
                dc.l    $00090022, $00110000
loc_1DB7C:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $0005000A, $0005FFF0
                dc.l    $00090028, $00140000
loc_1DBA6:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $0005000E, $0007FFF0
                dc.l    $00090028, $00140000
loc_1DBD0:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $00050012, $0009FFF0
                dc.l    $00090028, $00140000
loc_1DBFA:
                dc.w    $0004
                dc.l    $F00B0016, $000BFFE8, $F0050004, $00020000
                dc.l    $00090022, $00110000, $FB01002E, $0017001A
loc_1DC1C:
                dc.w    $0004
                dc.l    $F00B0016, $000BFFE8, $F0050004, $00020000
                dc.l    $00090028, $00140000, $FB010030, $0018001A                
;=============================================================================== 
; Object 0x4D - Hidden Palace - Rhinobot 
; [ End ]                         
;===============================================================================  
                dc.w    $0000                   ; Filler    
J_MarkObjGone_13: ; loc_1DC40:
                jmp     MarkObjGone             ; (loc_D2A0)
J_AnimateSprite_05: ; loc_1DC46:
                jmp     AnimateSprite           ; (loc_D412)
J_ObjectFall_01: ; loc_1DC4C:
                jmp     ObjectFall              ; (loc_D24E)  
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x52 - Piranha 
; [ Begin ]                         
;===============================================================================                  
Obj_0x52_Piranha: ; loc_1DC54:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1DC62(PC, D0), D1
                jmp     loc_1DC62(PC, D1)
loc_1DC62:
                dc.w    loc_1DC68-loc_1DC62
                dc.w    loc_1DCE0-loc_1DC62
                dc.w    loc_1DD50-loc_1DC62
loc_1DC68:
                addq.b  #$02, $0024(A0)
                move.l  #Piranha_Mappings, $0004(A0) ; loc_1DE66
                move.w  #$2530, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.b  D0, D1
                andi.w  #$00F0, D1
                add.w   D1, D1
                add.w   D1, D1
                move.w  D1, $003A(A0)
                move.w  D1, $003C(A0)
                andi.w  #$000F, D0
                lsl.w   #$06, D0
                subq.w  #$01, D0
                move.w  D0, $0030(A0)
                move.w  D0, $0032(A0)
                move.w  #$FF80, $0010(A0)
                move.l  #$FFFB8000, $0036(A0)
                move.w  $000C(A0), $0034(A0)
                bset    #$06, $0022(A0)
                btst    #$00, $0022(A0)
                beq.s   loc_1DCE0
                neg.w   $0010(A0)
loc_1DCE0:
                cmpi.w  #$FFFF, $003A(A0)
                beq.s   loc_1DCEC
                subq.w  #$01, $003A(A0)
loc_1DCEC:
                subq.w  #$01, $0030(A0)
                bpl.s   loc_1DD0E
                move.w  $0032(A0), $0030(A0)
                neg.w   $0010(A0)
                bchg    #0, $0022(A0)
                move.b  #$01, $001D(A0)
                move.w  $003C(A0), $003A(A0)
loc_1DD0E:
                lea     (loc_1DE4E), A1
                bsr     J_AnimateSprite_06      ; loc_1DE9E
                bsr     J_SpeedToPos_0B         ; loc_1DEA4
                tst.w   $003A(A0)
                bgt     J_MarkObjGone_14        ; loc_1DE98
                cmpi.w  #$FFFF, $003A(A0)
                beq     J_MarkObjGone_14        ; loc_1DE98
                move.l  #$FFFB8000, $0036(A0)
                addq.b  #$02, $0024(A0)
                move.w  #$FFFF, $003A(A0)
                move.b  #$02, $001C(A0)
                move.w  #$0001, $003E(A0)
                bra     J_MarkObjGone_14        ; loc_1DE98
loc_1DD50:
                move.w  #$0390, (Water_Level_1).w
                lea     (loc_1DE4E), A1
                bsr     J_AnimateSprite_06      ; loc_1DE9E
                move.w  $003E(A0), D0
                sub.w   D0, $0030(A0)
                bsr     loc_1DE00
                tst.l   $0036(A0)
                bpl.s   loc_1DDA8
                move.w  $000C(A0), D0
                cmp.w   (Water_Level_1).w, D0
                bgt     J_MarkObjGone_14        ; loc_1DE98
                move.b  #$03, $001C(A0)
                bclr    #$06, $0022(A0)
                tst.b   $002A(A0)
                bne     J_MarkObjGone_14        ; loc_1DE98
                move.w  $0010(A0), D0
                asl.w   #$01, D0
                move.w  D0, $0010(A0)
                addq.w  #$01, $003E(A0)
                st      $002A(A0)
                bra     J_MarkObjGone_14        ; loc_1DE98
loc_1DDA8:
                move.w  $000C(A0), D0
                cmp.w   (Water_Level_1).w, D0
                bgt.s   loc_1DDBC
                move.b  #$01, $001C(A0)
                bra     J_MarkObjGone_14        ; loc_1DE98
loc_1DDBC:
                move.b  #$00, $001C(A0)
                bset    #$06, $0022(A0)
                bne.s   loc_1DDD6
                move.l  $0036(A0), D0
                asr.l   #$01, D0
                move.l  D0, $0036(A0)
                nop
loc_1DDD6:
                move.w  $0034(A0), D0
                cmp.w   $000C(A0), D0
                bgt     J_MarkObjGone_14        ; loc_1DE98
                subq.b  #$02, $0024(A0)
                tst.b   $002A(A0)
                beq     J_MarkObjGone_14        ; loc_1DE98
                move.w  $0010(A0), D0
                asr.w   #$01, D0
                move.w  D0, $0010(A0)
                sf      $002A(A0)
                bra     J_MarkObjGone_14        ; loc_1DE98
loc_1DE00:
                move.l  $0008(A0), D2
                move.l  $000C(A0), D3
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                add.l   $0036(A0), D3
                btst    #$06, $0022(A0)
                beq.s   loc_1DE3C
                tst.l   $0036(A0)
                bpl.s   loc_1DE34
                addi.l  #$00001000, $0036(A0)
                addi.l  #$00001000, $0036(A0)
loc_1DE34:
                subi.l  #$00001000, $0036(A0)
loc_1DE3C:
                addi.l  #$00001800, $0036(A0)
                move.l  D2, $0008(A0)
                move.l  D3, $000C(A0)
                rts      
loc_1DE4E:                 
                dc.w    loc_1DE56-loc_1DE4E
                dc.w    loc_1DE5A-loc_1DE4E
                dc.w    loc_1DE5E-loc_1DE4E
                dc.w    loc_1DE62-loc_1DE4E
loc_1DE56:
                dc.b    $0E, $00, $01, $FF
loc_1DE5A:
                dc.b    $03, $00, $01, $FF
loc_1DE5E:
                dc.b    $0E, $02, $03, $FF
loc_1DE62:
                dc.b    $03, $02, $03, $FF  
Piranha_Mappings: ; loc_1DE66:
                dc.w    loc_1DE6E-Piranha_Mappings
                dc.w    loc_1DE78-Piranha_Mappings
                dc.w    loc_1DE82-Piranha_Mappings
                dc.w    loc_1DE8C-Piranha_Mappings               
loc_1DE6E:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_1DE78:
                dc.w    $0001
                dc.l    $F00F0010, $0008FFF0
loc_1DE82:
                dc.w    $0001
                dc.l    $F00F0020, $0010FFF0
loc_1DE8C:
                dc.w    $0001
                dc.l    $F00F0030, $0018FFF0                                  
;=============================================================================== 
; Object 0x52 - Piranha 
; [ End ]                         
;===============================================================================   
                dc.w    $0000                   ; Filler   
J_MarkObjGone_14: ; loc_1DE98:
                jmp     MarkObjGone             ; (loc_D2A0)
J_AnimateSprite_06: ; loc_1DE9E:
                jmp     AnimateSprite           ; (loc_D412)
J_SpeedToPos_0B: ; loc_1DEA4:
                jmp     SpeedToPos              ; (loc_D27A)                                                    
                dc.w    $0000                   ; Filler  
;=============================================================================== 
; Object 0x4F - Hidden Palace - Dinobot 
; [ Begin ]                         
;===============================================================================                 
Obj_0x4F_Dinobot: ; loc_1DEAC:               
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1DEBA(PC, D0), D1
                jmp     loc_1DEBA(PC, D1)
loc_1DEBA:                
                dc.w    loc_1DEC0-loc_1DEBA
                dc.w    loc_1DF16-loc_1DEBA
                dc.w    loc_1DFB8-loc_1DEBA
loc_1DEC0:
                move.l  #Dinobot_Mappings, $0004(A0) ; loc_1DFCA
                move.w  #$0500, $0002(A0)
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$06, $0017(A0)
                move.b  #$0C, $0020(A0)
                bsr     J_ObjectFall_02         ; loc_1E002
                jsr     ObjHitFloor             ; loc_13898
                tst.w   D1
                bpl.s   loc_1DF14
                add.w   D1, $000C(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
                bchg    #0, $0022(A0)
loc_1DF14:
                rts
loc_1DF16:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1DF5C(PC, D0), D1
                jsr     loc_1DF5C(PC, D1)
                lea     (loc_1DFBC), A1
                bsr     J_AnimateSprite_07      ; loc_1DFFC
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_1DF46
                bra     J_DisplaySprite_0E      ; loc_1DFF0
loc_1DF46:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   loc_1DF58
                bclr    #$07, $02(A2, D0)
loc_1DF58:
                bra     J_DeleteObject_22       ; loc_1DFF6
loc_1DF5C:               
                ori.b   #$28, D4
                subq.w  #$01, $0030(A0)
                bpl.s   loc_1DF82
                addq.b  #$02, $0025(A0)
                move.w  #$FF80, $0010(A0)
                move.b  #$01, $001C(A0)
                bchg    #0, $0022(A0)
                bne.s   loc_1DF82
                neg.w   $0010(A0)
loc_1DF82:
                rts
                bsr     J_SpeedToPos_0C         ; loc_1E008
                jsr     ObjHitFloor             ; loc_13898
                cmpi.w  #$FFF8, D1
                blt.s   loc_1DFA0
                cmpi.w  #$000C, D1
                bge.s   loc_1DFA0
                add.w   D1, $000C(A0)
                rts
loc_1DFA0:
                subq.b  #$02, $0025(A0)
                move.w  #$003B, $0030(A0)
                move.w  #$0000, $0010(A0)
                move.b  #$00, $001C(A0)
                rts
loc_1DFB8:
                bra     J_DeleteObject_22       ; loc_1DFF6  
loc_1DFBC:
                dc.w    loc_1DFC0-loc_1DFBC
                dc.w    loc_1DFC3-loc_1DFBC
loc_1DFC0:                                 
                dc.b    $09, $01, $FF 
loc_1DFC3:
                dc.b    $09, $00, $01, $02, $01, $FF, $00  
Dinobot_Mappings:                
loc_1DFCA:
                dc.w    loc_1DFD0-loc_1DFCA
                dc.w    loc_1DFDA-loc_1DFCA
                dc.w    loc_1DFE4-loc_1DFCA
loc_1DFD0:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_1DFDA:
                dc.w    $0001
                dc.l    $F00F0010, $0008FFF0
loc_1DFE4:
                dc.w    $0001
                dc.l    $F00F0020, $0010FFF0                               
;=============================================================================== 
; Object 0x4F - Hidden Palace - Dinobot 
; [ End ]                         
;===============================================================================   
                dc.w    $0000                   ; Filler                
J_DisplaySprite_0E: ; loc_1DFF0:
                jmp     DisplaySprite           ; loc_D3C2
J_DeleteObject_22: ; loc_1DFF6:
                jmp     DeleteObject            ; loc_D3B4
J_AnimateSprite_07: ; loc_1DFFC:
                jmp     AnimateSprite           ; loc_D412
J_ObjectFall_02: ; loc_1E002:
                jmp     ObjectFall              ; loc_D24E  
J_SpeedToPos_0C: ; loc_1E008:
                jmp     SpeedToPos              ; loc_D27A  
                dc.w    $0000                   ; Filler 
;=============================================================================== 
; Object 0x50 - Oil Ocean - Aquis (Seahorse)  
; [ Begin ]                         
;===============================================================================  
Obj_0x50_Aquis: ; loc_1E010:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1E01E(PC, D0), D1
                jmp     loc_1E01E(PC, D1)
loc_1E01E:
                dc.w    loc_1E02A-loc_1E01E
                dc.w    loc_1E0E2-loc_1E01E
                dc.w    loc_1E10E-loc_1E01E
                dc.w    loc_1E138-loc_1E01E
                dc.w    loc_1E31A-loc_1E01E
                dc.w    loc_1E356-loc_1E01E
loc_1E02A:
                addq.b  #$02, $0024(A0)
                move.l  #Aquis_Mappings, $0004(A0) ; loc_1E4E0
                move.w  #$2570, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.w  #$FF00, $0010(A0)
                move.b  $0028(A0), D0
                move.b  D0, D1
                andi.w  #$00F0, D1
                lsl.w   #$04, D1
                move.w  D1, $002E(A0)
                move.w  D1, $0030(A0)
                andi.w  #$000F, D0
                lsl.w   #$04, D0
                subq.w  #$01, D0
                move.w  D0, $0032(A0)
                move.w  D0, $0034(A0)
                move.w  $000C(A0), $002A(A0)
                bsr     J_SingleObjLoad_07   ; loc_1E87C
                bne.s   loc_1E0E2
                move.b  #$50, $0000(A1)
                move.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$000A, $0008(A1)
                addi.w  #$FFFA, $000C(A1)
                move.l  #Aquis_Mappings, $0004(A1) ; loc_1E4E0
                move.w  #$24E0, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  #$03, $001C(A1)
                move.l  A1, $0036(A0)
                move.l  A0, $0036(A1)
                bset    #$06, $0022(A0)
loc_1E0E2:
                lea     (loc_1E4A8), A1
                bsr     J_AnimateSprite_08      ; loc_1E888
                move.w  #$039C, (Water_Level_1).w
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1E108(PC, D0), D1
                jsr     loc_1E108(PC, D1)
                bsr     loc_1E2E0
                bra     J_MarkObjGone_15        ; loc_1E882
loc_1E108:
                dc.w    loc_1E14E-loc_1E108
                dc.w    loc_1E160-loc_1E108
                dc.w    loc_1E16E-loc_1E108
loc_1E10E:
                move.l  $0036(A0), A1
                tst.b   (A1)
                beq     J_DeleteObject_23       ; loc_1E876
                cmpi.b  #$50, (A1)
                bne     J_DeleteObject_23       ; loc_1E876
                btst    #$07, $0022(A1)
                bne     J_DeleteObject_23       ; loc_1E876
                lea     (loc_1E4A8), A1
                bsr     J_AnimateSprite_08      ; loc_1E888
                bra     J_DisplaySprite_0F      ; loc_1E870
loc_1E138:
                bsr     loc_1E404
                bsr     J_SpeedToPos_0D         ; loc_1E894
                lea     (loc_1E4A8), A1
                bsr     J_AnimateSprite_08      ; loc_1E888
                bra     J_MarkObjGone_15        ; loc_1E882
loc_1E14E:
                bsr     J_SpeedToPos_0D         ; loc_1E894
                bsr     loc_1E3E6
                bsr     loc_1E28C
                bsr     loc_1E224
                rts
loc_1E160:
                bsr     J_SpeedToPos_0D         ; loc_1E894
                bsr     loc_1E3E6
                bsr     loc_1E2AE
                rts
loc_1E16E:
                bsr     J_ObjectFall_03         ; loc_1E88E
                bsr     loc_1E3E6
                bsr     loc_1E180
                bsr     loc_1E1FC
                rts
loc_1E180:
                tst.b   $002D(A0)
                bne.s   loc_1E18C
                tst.w   $0012(A0)
                bpl.s   loc_1E18E
loc_1E18C:
                rts
loc_1E18E:
                st      $002D(A0)
                bsr     J_SingleObjLoad_07   ; loc_1E87C
                bne.s   loc_1E1FA
                move.b  #$50, $0000(A1)
                move.b  #$06, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  #Aquis_Mappings, $0004(A1) ; loc_1E4E0
                move.w  #$24E0, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$E5, $0020(A1)
                move.b  #$02, $001C(A1)
                move.w  #$000C, D0
                move.w  #$0010, D1
                move.w  #$FD00, D2
                btst    #$00, $0022(A0)
                beq.s   loc_1E1EE
                neg.w   D1
                neg.w   D2
loc_1E1EE:
                sub.w   D0, $000C(A1)
                sub.w   D1, $0008(A1)
                move.w  D2, $0010(A1)
loc_1E1FA:
                rts
loc_1E1FC:
                move.w  $000C(A0), D0
                cmp.w   (Water_Level_1).w, D0
                blt.s   loc_1E222
                move.b  #$02, $0025(A0)
                move.b  #$00, $001C(A0)
                move.w  $0030(A0), $002E(A0)
                move.w  #$0040, $0012(A0)
                sf      $002D(A0)
loc_1E222:
                rts
loc_1E224:
                tst.b   $002C(A0)
                beq.s   loc_1E28A
                move.w  ($FFFFB008).w, D0
                move.w  ($FFFFB00C).w, D1
                sub.w   $000C(A0), D1
                bpl.s   loc_1E28A
                cmpi.w  #$FFD0, D1
                blt.s   loc_1E28A
                sub.w   $0008(A0), D0
                cmpi.w  #$0048, D0
                bgt.s   loc_1E28A
                cmpi.w  #$FFB8, D0
                blt.s   loc_1E28A
                tst.w   D0
                bpl.s   loc_1E262
                cmpi.w  #$FFD8, D0
                bgt.s   loc_1E28A
                btst    #$00, $0022(A0)
                bne.s   loc_1E28A
                bra.s   loc_1E270
loc_1E262:
                cmpi.w  #$0028, D0
                blt.s   loc_1E28A
                btst    #$00, $0022(A0)
                beq.s   loc_1E28A
loc_1E270:
                moveq   #$20, D0
                cmp.w   $0032(A0), D0
                bgt.s   loc_1E28A
                move.b  #$04, $0025(A0)
                move.b  #$01, $001C(A0)
                move.w  #$FC00, $0012(A0)
loc_1E28A:
                rts
loc_1E28C:
                subq.w  #$01, $002E(A0)
                bne.s   loc_1E2AC
                move.w  $0030(A0), $002E(A0)
                addq.b  #$02, $0025(A0)
                move.w  #$FFC0, D0
                tst.b   $002C(A0)
                beq.s   loc_1E2A8
                neg.w   D0
loc_1E2A8:
                move.w  D0, $0012(A0)
loc_1E2AC:
                rts
loc_1E2AE:
                move.w  $000C(A0), D0
                tst.b   $002C(A0)
                bne.s   loc_1E2CC
                cmp.w   (Water_Level_1).w, D0
                bgt.s   loc_1E2CA
                subq.b  #$02, $0025(A0)
                st      $002C(A0)
                clr.w   $0012(A0)
loc_1E2CA:
                rts
loc_1E2CC:
                cmp.w   $002A(A0), D0
                blt.s   loc_1E2CA
                subq.b  #$02, $0025(A0)
                sf      $002C(A0)
                clr.w   $0012(A0)
                rts
loc_1E2E0:
                moveq   #$0A, D0
                moveq   #Debug_mode_flag, D1
                move.l  $0036(A0), A1
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0023(A0), $0023(A1)
                move.b  $0001(A0), $0001(A1)
                btst    #$00, $0022(A1)
                beq.s   loc_1E310
                neg.w   D0
loc_1E310:
                add.w   D0, $0008(A1)
                add.w   D1, $000C(A1)
                rts
loc_1E31A:
                bsr     J_ObjectFall_03         ; loc_1E88E
                bsr     loc_1E330
                lea     (loc_1E4A8), A1
                bsr     J_AnimateSprite_08      ; loc_1E888
                bra     J_MarkObjGone_15        ; loc_1E882
loc_1E330:
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_1E34A
                add.w   D1, $000C(A0)
                move.w  $0012(A0), D0
                asr.w   #$01, D0
                neg.w   D0
                move.w  D0, $0012(A0)
loc_1E34A:
                subi.b  #$01, $0021(A0)
                beq     J_DeleteObject_23       ; loc_1E876
                rts
loc_1E356:
                bsr     loc_1E3A6
                tst.b   $0025(A0)
                beq.s   loc_1E396
                subi.w  #$0001, $002C(A0)
                beq     J_DeleteObject_23       ; loc_1E876
                move.w  ($FFFFB008).w, $0008(A0)
                move.w  ($FFFFB00C).w, $000C(A0)
                addi.w  #$000C, $000C(A0)
                subi.b  #$01, $002A(A0)
                bne.s   loc_1E398
                move.b  #$03, $002A(A0)
                bchg    #0, $0022(A0)
                bchg    #0, $0001(A0)
loc_1E396:
                rts
loc_1E398:
                lea     (loc_1E4A8), A1
                bsr     J_AnimateSprite_08      ; loc_1E888
                bra     J_DisplaySprite_0F      ; loc_1E870
loc_1E3A6:
                tst.b   $0025(A0)
                bne.s   loc_1E3E4
                move.b  ($FFFFB024).w, D0
                cmpi.b  #$02, D0
                bne.s   loc_1E3E4
                move.w  ($FFFFB008).w, $0008(A0)
                move.w  ($FFFFB00C).w, $000C(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$05, $001C(A0)
                st      $0025(A0)
                move.w  #$012C, $002C(A0)
                move.b  #$03, $002A(A0)
loc_1E3E4:
                rts
loc_1E3E6:
                subq.w  #$01, $0032(A0)
                bpl.s   loc_1E402
                move.w  $0034(A0), $0032(A0)
                neg.w   $0010(A0)
                bchg    #0, $0022(A0)
                move.b  #$01, $001D(A0)
loc_1E402:
                rts
loc_1E404:
                tst.b   $0021(A0)
                beq     loc_1E4A6
                moveq   #$02, D3
loc_1E40E:                
                bsr     J_SingleObjLoad_07   ; loc_1E87C
                bne.s   loc_1E480
                move.b  $0000(A0), $0000(A1)
                move.b  #$08, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  #$24E0, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.w  #$FF00, $0012(A1)
                move.b  #$04, $001C(A1)
                move.b  #$78, $0021(A1)
                cmpi.w  #$0001, D3
                beq.s   loc_1E47A
                blt.s   loc_1E46C
                move.w  #$00C0, $0010(A1)
                addi.w  #$FF40, $0012(A1)
                bra.s   loc_1E480
loc_1E46C:
                move.w  #$FF00, $0010(A1)
                addi.w  #$FFC0, $0012(A1)
                bra.s   loc_1E480
loc_1E47A:
                move.w  #$0040, $0010(A1)
loc_1E480:
                dbra    D3, loc_1E40E
                bsr     J_SingleObjLoad_07   ; loc_1E87C
                bne.s   loc_1E4A2
                move.b  $0000(A0), $0000(A1)
                move.b  #$0A, $0024(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  #$24E0, $0002(A1)
loc_1E4A2:
                bra     J_DeleteObject_23       ; loc_1E876
loc_1E4A6:
                rts    
loc_1E4A8:
                dc.w    loc_1E4B8-loc_1E4A8
                dc.w    loc_1E4BB-loc_1E4A8
                dc.w    loc_1E4C3-loc_1E4A8
                dc.w    loc_1E4C9-loc_1E4A8
                dc.w    loc_1E4CD-loc_1E4A8
                dc.w    loc_1E4D0-loc_1E4A8
                dc.w    loc_1E4D3-loc_1E4A8
                dc.w    loc_1E4D7-loc_1E4A8
loc_1E4B8:
                dc.b    $0E, $00, $FF
loc_1E4BB:
                dc.b    $05, $03, $04, $03, $04, $03, $04, $FF
loc_1E4C3:
                dc.b    $03, $05, $06, $07, $06, $FF
loc_1E4C9:
                dc.b    $03, $01, $02, $FF
loc_1E4CD:
                dc.b    $01, $05, $FF
loc_1E4D0:
                dc.b    $0E, $08, $FF
loc_1E4D3:
                dc.b    $01, $09, $0A, $FF
loc_1E4D7:
                dc.b    $05, $0B, $0C, $0B, $0C, $0B, $0C, $FF, $00
Aquis_Mappings:                
loc_1E4E0:
                dc.w    loc_1E4FA-loc_1E4E0
                dc.w    loc_1E514-loc_1E4E0
                dc.w    loc_1E51E-loc_1E4E0
                dc.w    loc_1E528-loc_1E4E0
                dc.w    loc_1E54A-loc_1E4E0
                dc.w    loc_1E56C-loc_1E4E0
                dc.w    loc_1E576-loc_1E4E0
                dc.w    loc_1E580-loc_1E4E0
                dc.w    loc_1E58A-loc_1E4E0
                dc.w    loc_1E594-loc_1E4E0
                dc.w    loc_1E5B6-loc_1E4E0
                dc.w    loc_1E5D8-loc_1E4E0
                dc.w    loc_1E602-loc_1E4E0
loc_1E4FA:
                dc.w    $0003
                dc.l    $E80D0000, $0000FFF0, $F8090016, $000BFFF8
                dc.l    $08050024, $0012FFF8
loc_1E514:
                dc.w    $0001
                dc.l    $F8050028, $0014FFF8
loc_1E51E:
                dc.w    $0001
                dc.l    $F805002C, $0016FFF8
loc_1E528:
                dc.w    $0004
                dc.l    $E8090008, $0004FFF0, $E801000E, $00070008
                dc.l    $F8090016, $000BFFF8, $08050024, $0012FFF8
loc_1E54A:
                dc.w    $0004
                dc.l    $E8090010, $0008FFF0, $E801000E, $00070008
                dc.l    $F8090016, $000BFFF8, $08050024, $0012FFF8
loc_1E56C:
                dc.w    $0001
                dc.l    $F8010030, $0018FFFC
loc_1E576:
                dc.w    $0001
                dc.l    $F8010032, $0019FFFC
loc_1E580:
                dc.w    $0001
                dc.l    $F8010034, $001AFFFC
loc_1E58A:
                dc.w    $0001
                dc.l    $F80D0036, $001BFFF0
loc_1E594:
                dc.w    $0004
                dc.l    $E80D0000, $0000FFF0, $F805001C, $000EFFF8
                dc.l    $F8010020, $00100008, $08050024, $0012FFF8
loc_1E5B6:
                dc.w    $0004
                dc.l    $E80D0000, $0000FFF0, $F805001C, $000EFFF8
                dc.l    $F8010022, $00110008, $08050024, $0012FFF8
loc_1E5D8:
                dc.w    $0005
                dc.l    $E8090008, $0004FFF0, $E801000E, $00070008
                dc.l    $F805001C, $000EFFF8, $F8010020, $00100008
                dc.l    $08050024, $0012FFF8
loc_1E602:
                dc.w    $0005
                dc.l    $E8090010, $0008FFF0, $E801000E, $00070008
                dc.l    $F805001C, $000EFFF8, $F8010022, $00110008
                dc.l    $08050024, $0012FFF8                           
;=============================================================================== 
; Object 0x50 - Oil Ocean - Aquis (Seahorse)  
; [ End ]                         
;===============================================================================  
;=============================================================================== 
; Object 0x51 - Oil Ocean - Aquis (Seahorse)  
; [ Begin ]                         
;===============================================================================  
Obj_0x51_Aquis: ; loc_1E62C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1E63A(PC, D0), D1
                jmp     loc_1E63A(PC, D1)
loc_1E63A:
                dc.w    loc_1E646-loc_1E63A
                dc.w    loc_1E6A4-loc_1E63A
                dc.w    loc_1E6C8-loc_1E63A
loc_1E640:
                dc.w    $0000, $FCE0, $FD1C
loc_1E646:
                addq.b  #$02, $0024(A0)
                move.l  #Aquis_Mappings, $0004(A0) ; loc_1E4E0
                move.w  #$2570, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$06, $001C(A0)
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                move.w  D0, D1
                lsl.w   #$05, D1
                subq.w  #$01, D1
                move.w  D1, $0032(A0)
                move.w  D1, $0034(A0)
                move.w  $000C(A0), $002A(A0)
                move.w  $000C(A0), $002E(A0)
                addi.w  #$0060, $002E(A0)
                move.w  #$FF00, $0010(A0)
loc_1E6A4:
                lea     loc_1E4A8(PC), A1
                bsr     J_AnimateSprite_08      ; loc_1E888
                move.w  #$039C, (Water_Level_1).w
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1E6C4(PC, D0), D1
                jsr     loc_1E6C4(PC, D1)
                bra     J_MarkObjGone_15        ; loc_1E882
loc_1E6C4:
                dc.w    loc_1E6DC-loc_1E6C4
                dc.w    loc_1E6F2-loc_1E6C4
loc_1E6C8:
                bsr     loc_1E404
                bsr     J_SpeedToPos_0D         ; loc_1E894
                lea     loc_1E4A8(PC), A1
                bsr     J_AnimateSprite_08      ; loc_1E888
                bra     J_MarkObjGone_15        ; loc_1E882
loc_1E6DC:
                bsr     J_SpeedToPos_0D         ; loc_1E894
                bsr     loc_1E3E6
                bsr     loc_1E72E
                bsr     loc_1E810
                bsr     loc_1E780
                rts
loc_1E6F2:
                bsr     J_SpeedToPos_0D         ; loc_1E894
                bsr     loc_1E3E6
                bsr     loc_1E72E
                bsr     loc_1E810
                bsr     loc_1E708
                rts
loc_1E708:
                subq.w  #$01, $0030(A0)
                beq.s   loc_1E71C
                move.w  $0030(A0), D0
                cmpi.w  #$0012, D0
                beq     loc_1E7A6
                rts
loc_1E71C:
                subq.b  #$02, $0025(A0)
                move.b  #$06, $001C(A0)
                move.w  #$00B4, $0030(A0)
                rts
loc_1E72E:
                sf      $002D(A0)
                sf      $002C(A0)
                sf      $0036(A0)
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                bpl.s   loc_1E74E
                btst    #$00, $0022(A0)
                bne.s   loc_1E756
                bra.s   loc_1E75A
loc_1E74E:
                btst    #$00, $0022(A0)
                bne.s   loc_1E75A
loc_1E756:
                st      $002C(A0)
loc_1E75A:
                move.w  ($FFFFB00C).w, D0
                sub.w   $000C(A0), D0
                cmpi.w  #$FFFC, D0
                blt.s   loc_1E77E
                cmpi.w  #$0004, D0
                bgt.s   loc_1E77A
                st      $002D(A0)
                move.w  #$0000, $0012(A0)
                rts
loc_1E77A:
                st      $0036(A0)
loc_1E77E:
                rts
loc_1E780:
                tst.b   $002C(A0)
                bne.s   loc_1E7A4
                subq.w  #$01, $0030(A0)
                bgt.s   loc_1E7A4
                tst.b   $002D(A0)
                beq.s   loc_1E7A4
                move.b  #$07, $001C(A0)
                move.w  #$0024, $0030(A0)
                addi.b  #$02, $0025(A0)
loc_1E7A4:
                rts
loc_1E7A6:
                bsr     J_SingleObjLoad_07   ; loc_1E87C
                bne.s   loc_1E80E
                move.b  #$51, $0000(A1)
                move.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  #Aquis_Mappings, $0004(A1) ; loc_1E4E0
                move.w  #$24E0, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$02, $001C(A1)
                move.b  #$E5, $0020(A1)
                move.w  #$000C, D0
                move.w  #$0010, D1
                move.w  #$FD00, D2
                btst    #$00, $0022(A0)
                beq.s   loc_1E802
                neg.w   D1
                neg.w   D2
loc_1E802:
                sub.w   D0, $000C(A1)
                sub.w   D1, $0008(A1)
                move.w  D2, $0010(A1)
loc_1E80E:
                rts
loc_1E810:
                tst.b   $002D(A0)
                bne.s   loc_1E86E
                tst.b   $0036(A0)
                beq.s   loc_1E840
                move.w  $002E(A0), D0
                cmp.w   $000C(A0), D0
                ble.s   loc_1E864
                tst.b   $002C(A0)
                beq.s   loc_1E838
                move.w  $002A(A0), D0
                cmp.w   $000C(A0), D0
                bge.s   loc_1E864
                rts
loc_1E838:
                move.w  #$0180, $0012(A0)
                rts
loc_1E840:
                move.w  $002A(A0), D0
                cmp.w   $000C(A0), D0
                bge.s   loc_1E864
                tst.b   $002C(A0)
                beq.s   loc_1E85C
                move.w  $002E(A0), D0
                cmp.w   $000C(A0), D0
                ble.s   loc_1E864
                rts
loc_1E85C:
                move.w  #$FE80, $0012(A0)
                rts
loc_1E864:
                move.w  D0, $000C(A0)
                move.w  #$0000, $0012(A0)
loc_1E86E:
                rts
;=============================================================================== 
; Object 0x51 - Oil Ocean - Aquis (Seahorse)  
; [ End ]                         
;===============================================================================  
J_DisplaySprite_0F: ; loc_1E870:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_23: ; loc_1E876:
                jmp     DeleteObject            ; (loc_D3B4)
J_SingleObjLoad_07: ; loc_1E87C:
                jmp     SingleObjLoad        ; (loc_E772)
J_MarkObjGone_15: ; loc_1E882:
                jmp     MarkObjGone             ; (loc_D2A0)
J_AnimateSprite_08: ; loc_1E888:
                jmp     AnimateSprite           ; (loc_D412)
J_ObjectFall_03: ; loc_1E88E:
                jmp     ObjectFall              ; (loc_D24E)
J_SpeedToPos_0D: ; loc_1E894:
                jmp     SpeedToPos              ; (loc_D27A)
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x4B - Green Hill - Buzz Bomber  
; [ Begin ]                         
;===============================================================================                  
Obj_0x4B_Buzz_Bomber: ; loc_1E89C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1E8AA(PC, D0), D1
                jmp     loc_1E8AA(PC, D1)
loc_1E8AA:
                dc.w    loc_1E8FC-loc_1E8AA
                dc.w    loc_1E9A8-loc_1E8AA
                dc.w    loc_1E8C4-loc_1E8AA
                dc.w    loc_1E8B2-loc_1E8AA
loc_1E8B2:
                bsr     J_SpeedToPos_0E         ; loc_1EBB0
                lea     (loc_1EAF2), A1
                bsr     J_AnimateSprite_09      ; loc_1EB98
                bra     loc_1EBA4
loc_1E8C4:
                move.l  $002A(A0), A1
                tst.b   (A1)
                beq     J_DeleteObject_24       ; loc_1EB8C
                tst.w   $0030(A1)
                bmi.s   loc_1E8D6
                rts
loc_1E8D6:
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                lea     (loc_1EAF2), A1
                bsr     J_AnimateSprite_09      ; loc_1EB98
                bra     loc_1EBA4
loc_1E8FC:
                move.l  #Buzz_Bomber_Mappings, $0004(A0) ; loc_1EB0E
                move.w  #$03E6, $0002(A0)
                bsr     J_Adjust2PArtPointer_20 ; loc_1EBAA
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$18, $0017(A0)
                move.b  #$03, $0018(A0)
                addq.b  #$02, $0024(A0)
                bsr     J_SingleObjLoad2_0B  ; loc_1EB92
                bne.s   loc_1E9A6
                move.b  #$4B, $0000(A1)
                move.b  #$04, $0024(A1)
                move.l  #Buzz_Bomber_Mappings, $0004(A1) ; loc_1EB0E
                move.w  #$03E6, $0002(A1)
                bsr     J_Adjust2PArtPointer2_03 ; loc_1EB9E
                move.b  #$04, $0018(A1)
                move.b  #$10, $0019(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  #$01, $001C(A1)
                move.l  A0, $002A(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$0100, $002E(A0)
                move.w  #$FF00, $0010(A0)
                btst    #$00, $0001(A0)
                beq.s   loc_1E9A6
                neg.w   $0010(A0)
loc_1E9A6:
                rts
loc_1E9A8:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1E9C4(PC, D0), D1
                jsr     loc_1E9C4(PC, D1)
                lea     (loc_1EAF2), A1
                bsr     J_AnimateSprite_09      ; loc_1EB98
                bra     loc_1EBA4
loc_1E9C4:
                dc.w    loc_1E9C8-loc_1E9C4
                dc.w    loc_1EA58-loc_1E9C4
loc_1E9C8:
                bsr     loc_1EA0A
                subq.w  #$01, $0030(A0)
                move.w  $0030(A0), D0
                cmpi.w  #$000F, D0
                beq.s   loc_1E9EE
                tst.w   D0
                bpl.s   loc_1E9EC
                subq.w  #$01, $002E(A0)
                bgt     J_SpeedToPos_0E         ; loc_1EBB0
                move.w  #$001E, $0030(A0)
loc_1E9EC:
                rts
loc_1E9EE:
                sf      $0032(A0)
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
                bchg    #0, $0022(A0)
                move.w  #$0100, $002E(A0)
                rts
loc_1EA0A:
                tst.b   $0032(A0)
                bne     loc_1EA56
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                move.w  D0, D1
                bpl.s   loc_1EA20
                neg.w   D0
loc_1EA20:
                cmpi.w  #$0028, D0
                blt.s   loc_1EA56
                cmpi.w  #$0030, D0
                bgt.s   loc_1EA56
                tst.w   D1
                bpl.s   loc_1EA3A
                btst    #$00, $0001(A0)
                beq.s   loc_1EA56
                bra.s   loc_1EA42
loc_1EA3A:
                btst    #$00, $0001(A0)
                bne.s   loc_1EA56
loc_1EA42:
                st      $0032(A0)
                addq.b  #$02, $0025(A0)
                move.b  #$03, $001C(A0)
                move.w  #$0032, $0034(A0)
loc_1EA56:
                rts
loc_1EA58:
                move.w  $0034(A0), D0
                subq.w  #$01, D0
                blt.s   loc_1EA6C
                move.w  D0, $0034(A0)
                cmpi.w  #$0014, D0
                beq.s   loc_1EA72
                rts
loc_1EA6C:
                subq.b  #$02, $0025(A0)
                rts
loc_1EA72:
                jsr     SingleObjLoad2      ; loc_E788
                bne.s   loc_1EAEC
                move.b  #$4B, $0000(A1)
                move.b  #$06, $0024(A1)
                move.l  #Buzz_Bomber_Mappings, $0004(A1) ; loc_1EB0E
                move.w  #$03E6, $0002(A1)
                bsr     J_Adjust2PArtPointer2_03 ; loc_1EB9E
                move.b  #$04, $0018(A1)
                move.b  #$98, $0020(A1)
                move.b  #$10, $0019(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  #$02, $001C(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$0018, $000C(A1)
                move.w  #$000D, D0
                move.w  #$0180, $0012(A1)
                move.w  #$FE80, $0010(A1)
                btst    #$00, $0001(A1)
                beq.s   loc_1EAEC
                neg.w   $0010(A1)
                neg.w   D0
loc_1EAEC:
                add.w   D0, $0008(A1)
                rts                
loc_1EAF2:
                dc.w    loc_1EAFA-loc_1EAF2
                dc.w    loc_1EAFD-loc_1EAF2
                dc.w    loc_1EB01-loc_1EAF2
                dc.w    loc_1EB05-loc_1EAF2
loc_1EAFA:                
                dc.b    $0F, $00, $FF                         
loc_1EAFD:
                dc.b    $02, $03, $04, $FF
loc_1EB01:                
                dc.b    $03, $05, $06, $FF
loc_1EB05:                
                dc.b    $09, $01, $01, $01, $01, $01, $FD, $00, $00 
Buzz_Bomber_Mappings:                    
loc_1EB0E:
                dc.w    loc_1EB1C-loc_1EB0E
                dc.w    loc_1EB2E-loc_1EB0E
                dc.w    loc_1EB48-loc_1EB0E
                dc.w    loc_1EB62-loc_1EB0E
                dc.w    loc_1EB6C-loc_1EB0E
                dc.w    loc_1EB76-loc_1EB0E
                dc.w    loc_1EB80-loc_1EB0E
loc_1EB1C:
                dc.w    $0002
                dc.l    $F8090000, $0000FFE8, $F8090006, $00030000
loc_1EB2E:
                dc.w    $0003
                dc.l    $F8090000, $0000FFE8, $F805000C, $00060000
                dc.l    $08050010, $00080002
loc_1EB48:
                dc.w    $0003
                dc.l    $F8090000, $0000FFE8, $F805000C, $00060000
                dc.l    $08050014, $000A0002
loc_1EB62:
                dc.w    $0001
                dc.l    $F0010014, $000A0004
loc_1EB6C:
                dc.w    $0001
                dc.l    $F0010016, $000B0004
loc_1EB76:
                dc.w    $0001
                dc.l    $F8010018, $000CFFF4
loc_1EB80:
                dc.w    $0001
                dc.l    $F801001A, $000DFFF4                
;=============================================================================== 
; Object 0x4B - Green Hill - Buzz Bomber  
; [ End ]                         
;===============================================================================  
                dc.w    $0000                   ; Filler
J_DeleteObject_24: ; loc_1EB8C:
                jmp     DeleteObject            ; (loc_D3B4)
J_SingleObjLoad2_0B: ; loc_1EB92:
                jmp     SingleObjLoad2      ; loc_E788
J_AnimateSprite_09: ; loc_1EB98:
                jmp     AnimateSprite           ; loc_D412
J_Adjust2PArtPointer2_03: ; loc_1EB9E:
                jmp     Adjust2PArtPointer2   ; loc_DC4C
loc_1EBA4:
                jmp     loc_D340
J_Adjust2PArtPointer_20: ; loc_1EBAA:
                jmp     Adjust2PArtPointer     ; loc_DC30
J_SpeedToPos_0E: ; loc_1EBB0:
                jmp     SpeedToPos              ; loc_D27A
                dc.w    $0000                   ; Filler                
;=============================================================================== 
; Object 0x4A - Oil Ocean - Octus
; [ Begin ]                         
;===============================================================================                 
Obj_0x4A_Octus: ; loc_1EBB8:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1EBC6(PC, D0), D1
                jmp     loc_1EBC6(PC, D1)
loc_1EBC6:          
                dc.w    loc_1EBF6-loc_1EBC6
                dc.w    loc_1EC5C-loc_1EBC6
                dc.w    loc_1EBEA-loc_1EBC6
                dc.w    loc_1EBCE-loc_1EBC6
loc_1EBCE:
                subi.w  #$0001, $002C(A0)
                bmi.s   loc_1EBD8
                rts
loc_1EBD8:
                bsr     J_ObjectFall_04         ; loc_1EE60
loc_1EBDC:
                lea     (loc_1EDAA), A1
                bsr     J_AnimateSprite_0A      ; loc_1EE5A
                bra     J_MarkObjGone_16        ; loc_1EE54
loc_1EBEA:
                subq.w  #$01, $002C(A0)
                beq     J_DeleteObject_25       ; loc_1EE4E
                bra     J_DisplaySprite_10      ; loc_1EE48
loc_1EBF6:
                move.l  #Octus_Mappings, $0004(A0) ; loc_1EDBC
                move.w  #$238A, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$08, $0017(A0)
                bsr     J_ObjectFall_04         ; loc_1EE60
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_1EC54
                add.w   D1, $000C(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bpl.s   loc_1EC54
loc_1EC4E:
                bchg    #0, $0022(A0)
loc_1EC54:
                move.w  $000C(A0), $002A(A0)
                rts
loc_1EC5C:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1EC78(PC, D0), D1
                jsr     loc_1EC78(PC, D1)
                lea     (loc_1EDAA), A1
                bsr     J_AnimateSprite_0A      ; loc_1EE5A
                bra     J_MarkObjGone_16        ; loc_1EE54
loc_1EC78:
                dc.w    loc_1EC80-loc_1EC78
                dc.w    loc_1ECA0-loc_1EC78
                dc.w    loc_1ECC2-loc_1EC78
                dc.w    loc_1ED94-loc_1EC78
loc_1EC80:
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                cmpi.w  #$0080, D0
                bgt.s   loc_1EC9E
                cmpi.w  #$FF80, D0
                blt.s   loc_1EC9E
                addq.b  #$02, $0025(A0)
                move.b  #$01, $001C(A0)
loc_1EC9E:
                rts
loc_1ECA0:
                subi.l  #$00018000, $000C(A0)
                move.w  $002A(A0), D0
                sub.w   $000C(A0), D0
                cmpi.w  #$0020, D0
                ble.s   loc_1ECC0
                addq.b  #$02, $0025(A0)
                move.w  #$0000, $002C(A0)
loc_1ECC0:
                rts
loc_1ECC2:
                subi.w  #$0001, $002C(A0)
                beq     loc_1ED8E
                bpl     loc_1ED8C
                move.w  #$001E, $002C(A0)
                jsr     SingleObjLoad        ; (loc_E772)
                bne.s   loc_1ED28
                move.b  #$4A, $0000(A1)
                move.b  #$04, $0024(A1)
                move.l  #Octus_Mappings, $0004(A1) ; loc_1EDBC
                move.b  #$04, $001A(A1)
                move.w  #$24C6, $0002(A1)
                move.b  #$03, $0018(A1)
                move.b  #$10, $0019(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$001E, $002C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0022(A0), $0022(A1)
loc_1ED28:
                jsr     SingleObjLoad        ; (loc_E772)
                bne.s   loc_1ED8C
                move.b  #$4A, $0000(A1)
                move.b  #$06, $0024(A1)
                move.l  #Octus_Mappings, $0004(A1) ; loc_1EDBC
                move.w  #$24C6, $0002(A1)
                move.b  #$04, $0018(A1)
                move.b  #$10, $0019(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$000F, $002C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  #$02, $001C(A1)
                move.w  #$FA80, $0010(A1)
                btst    #$00, $0001(A1)
                beq.s   loc_1ED8C
                neg.w   $0010(A1)
loc_1ED8C:
                rts
loc_1ED8E:
                addq.b  #$02, $0025(A0)
                rts
loc_1ED94:
                move.w  #$FFFA, D0
                btst    #$00, $0001(A0)
                beq.s   loc_1EDA2
                neg.w   D0
loc_1EDA2:
                add.w   D0, $0008(A0)
                bra     J_MarkObjGone_16        ; loc_1EE54  
loc_1EDAA:
                dc.w    loc_1EDB0-loc_1EDAA
                dc.w    loc_1EDB3-loc_1EDAA
                dc.w    loc_1EDB8-loc_1EDAA
loc_1EDB0:
                dc.b    $0F, $00, $FF
loc_1EDB3:
                dc.b    $03, $01, $02, $03, $FF
loc_1EDB8:
                dc.b    $02, $05, $06, $FF
Octus_Mappings:                
loc_1EDBC:
                dc.w    loc_1EDCA-loc_1EDBC
                dc.w    loc_1EDDC-loc_1EDBC
                dc.w    loc_1EDF6-loc_1EDBC
                dc.w    loc_1EE10-loc_1EDBC
                dc.w    loc_1EE2A-loc_1EDBC
                dc.w    loc_1EE34-loc_1EDBC
                dc.w    loc_1EE3E-loc_1EDBC
loc_1EDCA:
                dc.w    $0002
                dc.l    $F00D0000, $0000FFF0, $000D0008, $0004FFF0
loc_1EDDC:
                dc.w    $0003
                dc.l    $F00D0000, $0000FFF0, $00090010, $0008FFE8
                dc.l    $00090016, $000B0000
loc_1EDF6:
                dc.w    $0003
                dc.l    $F00D0000, $0000FFF0, $0009001C, $000EFFE8
                dc.l    $00090022, $00110000
loc_1EE10:
                dc.w    $0003
                dc.l    $F00D0000, $0000FFF0, $00090028, $0014FFE8
                dc.l    $0009002E, $00170000
loc_1EE2A:
                dc.w    $0001
                dc.l    $F0010034, $001AFFF7
loc_1EE34:
                dc.w    $0001
                dc.l    $F2010036, $001BFFF0
loc_1EE3E:
                dc.w    $0001
                dc.l    $F2010038, $001CFFF0                                         
;=============================================================================== 
; Object 0x4A - Oil Ocean - Octus
; [ End ]                         
;===============================================================================    
J_DisplaySprite_10: ; loc_1EE48:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_25: ; loc_1EE4E:
                jmp     DeleteObject            ; (loc_D3B4)
J_MarkObjGone_16: ; loc_1EE54:
                jmp     MarkObjGone             ; (loc_D2A0)
J_AnimateSprite_0A: ; loc_1EE5A:
                jmp     AnimateSprite           ; (loc_D412)
J_ObjectFall_04: ; loc_1EE60:
                jmp     ObjectFall              ; (loc_D24E)
                dc.w    $0000                   ; Filler 
;=============================================================================== 
; Object 0x4C - Hidden Palace - Batbot
; [ Begin ]                         
;=============================================================================== 
Obj_0x4C_Batbot: ; loc_1EE68:  
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1EE76(PC, D0), D1
                jmp     loc_1EE76(PC, D1)
loc_1EE76:
                dc.w    loc_1EE7C-loc_1EE76
                dc.w    loc_1EEBA-loc_1EE76
                dc.w    loc_1EF28-loc_1EE76
loc_1EE7C:                
                move.l  #Batbot_Mappings, $0004(A0)  ; loc_1F106
                move.w  #$2530, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$08, $0017(A0)
                addq.b  #$02, $0024(A0)
                move.w  $000C(A0), $002E(A0)
                rts
loc_1EEBA:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1EEDA(PC, D0), D1
                jsr     loc_1EEDA(PC, D1)
                bsr     loc_1EEE0
                lea     (loc_1F0D2), A1
                bsr     J_AnimateSprite_0B      ; loc_1F2E2
                bra     J_MarkObjGone_17        ; loc_1F2DC
loc_1EEDA:
                dc.w    loc_1F046-loc_1EEDA
                dc.w    loc_1F07E-loc_1EEDA
                dc.w    loc_1F08A-loc_1EEDA                
loc_1EEE0:
                move.b  $003F(A0), D0
                jsr     CalcSine                ; loc_320A
                asr.w   #$06, D0
                add.w   $002E(A0), D0
                move.w  D0, $000C(A0)
                addq.b  #$04, $003F(A0)
                rts
loc_1EEFA:                
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                cmpi.w  #$0080, D0
                bgt.s   loc_1EF26
                cmpi.w  #$FF80, D0
                blt.s   loc_1EF26
                move.b  #$04, $0025(A0)
                move.b  #$02, $001C(A0)
                move.w  #$0008, $002A(A0)
                move.b  #$00, $003E(A0)
loc_1EF26:
                rts
loc_1EF28:
                bsr     loc_1F026
                bsr     loc_1EFC8
                bsr     loc_1EF48
                bsr     J_SpeedToPos_0F         ; loc_1F2E8
                lea     (loc_1F0D2), A1
                bsr     J_AnimateSprite_0B      ; loc_1F2E2
                bra     J_MarkObjGone_17        ; loc_1F2DC
                rts
loc_1EF48:
                tst.b   $003D(A0)
                beq.s   loc_1EF5A
                bset    #$00, $0001(A0)
                bset    #$00, $0022(A0)
loc_1EF5A:
                rts
loc_1EF5C:                
                subi.w  #$0001, $002C(A0)
                bpl.s   loc_1EFA6
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                cmpi.w  #$0060, D0
                bgt.s   loc_1EFA8
                cmpi.w  #$FFA0, D0
                blt.s   loc_1EFA8
                tst.w   D0
                bpl.s   loc_1EF80
                st      $003D(A0)
loc_1EF80:
                move.b  #$40, $003F(A0)
                move.w  #$0400, $0014(A0)
                move.b  #$04, $0024(A0)
                move.b  #$03, $001C(A0)
                move.w  #$000C, $002A(A0)
                move.b  #$01, $003E(A0)
                moveq   #$00, D0
loc_1EFA6:
                rts
loc_1EFA8:
                cmpi.w  #$0080, D0
                bgt.s   loc_1EFB4
                cmpi.w  #$FF80, D0
                bgt.s   loc_1EFA6
loc_1EFB4:
                move.b  #$01, $001C(A0)
                move.b  #$00, $0025(A0)
                move.w  #$0018, $002A(A0)
                rts
loc_1EFC8:
                tst.b   $003D(A0)
                bne.s   loc_1EFE2
                moveq   #$00, D0
                move.b  $003F(A0), D0
                cmpi.w  #$00C0, D0
                bge.s   loc_1EFF6
                addq.b  #$02, D0
                move.b  D0, $003F(A0)
                rts
loc_1EFE2:
                moveq   #$00, D0
                move.b  $003F(A0), D0
                cmpi.w  #$00C0, D0
                beq.s   loc_1EFF6
                subq.b  #$02, D0
                move.b  D0, $003F(A0)
                rts
loc_1EFF6:
                sf      $003D(A0)
                move.b  #$00, $001C(A0)
                move.b  #$02, $0024(A0)
                move.b  #$00, $0025(A0)
                move.w  #$0018, $002A(A0)
                move.b  #$01, $001C(A0)
                bclr    #$00, $0001(A0)
                bclr    #$00, $0022(A0)
                rts
loc_1F026:
                move.b  $003F(A0), D0
                jsr     CalcSine                ; loc_320A
                muls.w  $0014(A0), D1
                asr.l   #$08, D1
                move.w  D1, $0010(A0)
                muls.w  $0014(A0), D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
                rts
loc_1F046:
                subi.w  #$0001, $002A(A0)
                bpl.s   loc_1F07C
                bsr     loc_1EEFA
                beq.s   loc_1F07C
                jsr     PseudoRandomNumber      ; loc_31E4
                andi.b  #$FF, D0
                bne.s   loc_1F07C
                move.w  #$0018, $002A(A0)
                move.w  #$001E, $002C(A0)
                addq.b  #$02, $0025(A0)
                move.b  #$01, $001C(A0)
                move.b  #$00, $003E(A0)
loc_1F07C:
                rts
loc_1F07E:
                subq.b  #$01, $002A(A0)
                bpl.s   loc_1F088
                subq.b  #$02, $0025(A0)
loc_1F088:
                rts
loc_1F08A:
                bsr     loc_1EF5C
                beq.s   loc_1F0D0
                subi.w  #$0001, $002A(A0)
                bne.s   loc_1F0D0
                move.b  $003E(A0), D0
                beq.s   loc_1F0B8
                move.b  #$00, $003E(A0)
                move.w  #$0008, $002A(A0)
                bset    #$00, $0001(A0)
                bset    #$00, $0022(A0)
                rts
loc_1F0B8:
                move.b  #$01, $003E(A0)
                move.w  #$000C, $002A(A0)
                bclr    #$00, $0001(A0)
                bclr    #$00, $0022(A0)
loc_1F0D0:
                rts
loc_1F0D2:
                dc.w    loc_1F0DA-loc_1F0D2
                dc.w    loc_1F0DE-loc_1F0D2
                dc.w    loc_1F0ED-loc_1F0D2
                dc.w    loc_1F0FE-loc_1F0D2
loc_1F0DA:  
                dc.b    $01, $00, $05, $FF
loc_1F0DE:
                dc.b    $01, $01, $06, $01, $06, $02, $07, $02, $07, $01, $06, $01, $06, $FD, $00
loc_1F0ED:
                dc.b    $01, $01, $06, $01, $06, $02, $07, $03, $08, $04, $09, $04, $09, $03, $08, $FE
                dc.b    $0A
loc_1F0FE:
                dc.b    $03, $0A, $0B, $0C, $0D, $0E, $FF, $00
Batbot_Mappings:                
loc_1F106:
                dc.w    loc_1F124-loc_1F106
                dc.w    loc_1F146-loc_1F106
                dc.w    loc_1F168-loc_1F106
                dc.w    loc_1F18A-loc_1F106
                dc.w    loc_1F1AC-loc_1F106
                dc.w    loc_1F1C6-loc_1F106
                dc.w    loc_1F1E8-loc_1F106
                dc.w    loc_1F20A-loc_1F106
                dc.w    loc_1F22C-loc_1F106
                dc.w    loc_1F24E-loc_1F106
                dc.w    loc_1F268-loc_1F106
                dc.w    loc_1F282-loc_1F106
                dc.w    loc_1F29C-loc_1F106
                dc.w    loc_1F2AE-loc_1F106
                dc.w    loc_1F2C0-loc_1F106
loc_1F124:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $00050004, $0002FFF8
                dc.l    $F00B0008, $00040005, $F00B0808, $0804FFE3
loc_1F146:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $00050004, $0002FFF8
                dc.l    $F60D0014, $000A0005, $F60D0814, $080AFFDB
loc_1F168:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $00050004, $0002FFF8
                dc.l    $F80D001C, $000E0004, $F80D081C, $080EFFDC
loc_1F18A:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $00050004, $0002FFF8
                dc.l    $F8050024, $0012FFEC, $F8050028, $00140004
loc_1F1AC:
                dc.w    $0003
                dc.l    $F801002C, $00160000, $F0050000, $0000FFF8
                dc.l    $00050004, $0002FFF8
loc_1F1C6:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $0005002E, $0017FFF8
                dc.l    $F00B0008, $00040005, $F00B0808, $0804FFE3
loc_1F1E8:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $0005002E, $0017FFF8
                dc.l    $F60D0014, $000A0005, $F60D0814, $080AFFDB
loc_1F20A:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $0005002E, $0017FFF8
                dc.l    $F80D001C, $000E0004, $F80D081C, $080EFFDC
loc_1F22C:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $0005002E, $0017FFF8
                dc.l    $F8050028, $00140004, $F8050024, $0012FFEC
loc_1F24E:
                dc.w    $0003
                dc.l    $F801002C, $00160000, $F0050000, $0000FFF8
                dc.l    $0005002E, $0017FFF8
loc_1F268:
                dc.w    $0003
                dc.l    $F0070032, $0019FFF8, $F80D001C, $000E0004
                dc.l    $F80D081C, $080EFFDC
loc_1F282:
                dc.w    $0003
                dc.l    $F0070032, $0019FFF8, $F8050028, $00140004
                dc.l    $F8050024, $0012FFEC
loc_1F29C:
                dc.w    $0002
                dc.l    $F801002C, $00160000, $F0070032, $0019FFF8
loc_1F2AE:
                dc.w    $0002
                dc.l    $F801082C, $0816FFF8, $F0070032, $0019FFF8
loc_1F2C0:
                dc.w    $0003
                dc.l    $F0070032, $0019FFF8, $F8050828, $0814FFEC
                dc.l    $F8050824, $08120004   
;=============================================================================== 
; Object 0x4C - Hidden Palace - Batbot
; [ End ]                         
;===============================================================================                
                dc.w    $0000                   ; Filler
J_MarkObjGone_17: ; loc_1F2DC:
                jmp     MarkObjGone             ; loc_D2A0
J_AnimateSprite_0B: ; loc_1F2E2:
                jmp     AnimateSprite           ; loc_D412
J_SpeedToPos_0F: ; loc_1F2E8:
                jmp     SpeedToPos              ; loc_D27A
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x4E - (Desert Level) - Crocobot 
; [ Begin ]                         
;===============================================================================                   
Obj_0x4E_Crocobot: ; loc_1F2F0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1F2FE(PC, D0), D1
                jmp     loc_1F2FE(PC, D1)
loc_1F2FE:
                dc.w    loc_1F302-loc_1F2FE
                dc.w    loc_1F352-loc_1F2FE
loc_1F302:
                move.l  #Crocobot_Mappings, $0004(A0) ; loc_1F420
                move.w  #$2300, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$08, $0017(A0)
                bsr     J_ObjectFall_05         ; loc_1F5DC
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_1F350
                add.w   D1, $000C(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
loc_1F350:
                rts
loc_1F352:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1F36E(PC, D0), D1
                jsr     loc_1F36E(PC, D1)
                lea     (loc_1F406), A1
                bsr     J_AnimateSprite_0C      ; loc_1F5D6
                bra     J_MarkObjGone_18        ; loc_1F5D0
loc_1F36E:
                dc.w    loc_1F372-loc_1F36E
                dc.w    loc_1F396-loc_1F36E
loc_1F372:
                subq.w  #$01, $0030(A0)
                bpl.s   loc_1F394
                addq.b  #$02, $0025(A0)
                move.w  #$FF40, $0010(A0)
                move.b  #$00, $001C(A0)
                bchg    #0, $0022(A0)
                bne.s   loc_1F394
                neg.w   $0010(A0)
loc_1F394:
                rts
loc_1F396:
                bsr     loc_1F3CE
                bsr     J_SpeedToPos_10         ; loc_1F5E2
                jsr     ObjHitFloor             ; (loc_13898)
                cmpi.w  #$FFF8, D1
                blt.s   loc_1F3B6
                cmpi.w  #$000C, D1
                bge.s   loc_1F3B6
                add.w   D1, $000C(A0)
                rts
loc_1F3B6:
                subq.b  #$02, $0025(A0)
                move.w  #$003B, $0030(A0)
                move.w  #$0000, $0010(A0)
                move.b  #$01, $001C(A0)
                rts
loc_1F3CE:
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bmi.s   loc_1F3E8
                cmpi.w  #$0040, D0
                bgt.s   loc_1F3FE
                btst    #$00, $0022(A0)
                beq.s   loc_1F3F6
                rts
loc_1F3E8:
                cmpi.w  #$FFC0, D0
                blt.s   loc_1F3FE
                btst    #$00, $0022(A0)
                beq.s   loc_1F3FE
loc_1F3F6:
                move.b  #$02, $001C(A0)
                rts
loc_1F3FE:
                move.b  #$00, $001C(A0)
                rts        

loc_1F406:
                dc.w    loc_1F40C-loc_1F406
                dc.w    loc_1F414-loc_1F406
                dc.w    loc_1F417-loc_1F406
loc_1F40C:
                dc.b    $03, $00, $04, $02, $03, $01, $05, $FF
loc_1F414:
                dc.b    $0F, $00, $FF
loc_1F417:
                dc.b    $03, $06, $0A, $08, $09, $07, $0B, $FF, $00
Crocobot_Mappings:                
loc_1F420:
                dc.w    loc_1F438-loc_1F420
                dc.w    loc_1F45A-loc_1F420
                dc.w    loc_1F47C-loc_1F420
                dc.w    loc_1F49E-loc_1F420
                dc.w    loc_1F4C0-loc_1F420
                dc.w    loc_1F4E2-loc_1F420
                dc.w    loc_1F504-loc_1F420
                dc.w    loc_1F526-loc_1F420
                dc.w    loc_1F548-loc_1F420
                dc.w    loc_1F56A-loc_1F420
                dc.w    loc_1F58C-loc_1F420
                dc.w    loc_1F5AE-loc_1F420
loc_1F438:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050020, $0010000C
loc_1F45A:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050024, $0012000C
loc_1F47C:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050028, $0014000C
loc_1F49E:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050020, $0010000C
loc_1F4C0:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050024, $0012000C
loc_1F4E2:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050028, $0014000C
loc_1F504:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050020, $0010000C
loc_1F526:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050024, $0012000C
loc_1F548:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050028, $0014000C
loc_1F56A:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050020, $0010000C
loc_1F58C:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050024, $0012000C
loc_1F5AE:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050028, $0014000C                
;=============================================================================== 
; Object 0x4E - (Desert Level) - Crocobot 
; [ End ]                         
;===============================================================================                 
J_MarkObjGone_18: ; loc_1F5D0:
                jmp     MarkObjGone             ; (loc_D2A0)
J_AnimateSprite_0C: ; loc_1F5D6:
                jmp     AnimateSprite           ; (loc_D412)
J_ObjectFall_05: ; loc_1F5DC:
                jmp     ObjectFall              ; (loc_D24E)
J_SpeedToPos_10: ; loc_1F5E2:
                jmp     SpeedToPos              ; (loc_D27A)                 
;=============================================================================== 
; Object 0x53 - Green Hill - Chopper
; [ Begin ]                         
;===============================================================================                  
Obj_0x53_Chopper: ; loc_1F5E8: 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1F5FA(PC, D0), D1
                jsr     loc_1F5FA(PC, D1)
                bra     J_MarkObjGone_19        ; loc_1F6D0
loc_1F5FA:
                dc.w    loc_1F5FE-loc_1F5FA
                dc.w    loc_1F638-loc_1F5FA
loc_1F5FE:
                addq.b  #$02, $0024(A0)
                move.l  #Chopper_Mappings, $0004(A0) ; loc_1F696
                move.w  #$041C, $0002(A0)
                bsr     J_Adjust2PArtPointer_21 ; loc_1F6DC
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$09, $0020(A0)
                move.b  #$10, $0019(A0)
                move.w  #$FC00, $0012(A0)
                move.w  $000C(A0), $0030(A0)
loc_1F638:
                lea     (loc_1F684), A1
                bsr     J_AnimateSprite_0D      ; loc_1F6D6
                bsr     J_SpeedToPos_11         ; loc_1F6E2
                addi.w  #$0018, $0012(A0)
                move.w  $0030(A0), D0
                cmp.w   $000C(A0), D0
                bcc.s   loc_1F660
                move.w  D0, $000C(A0)
                move.w  #$FB00, $0012(A0)
loc_1F660:
                move.b  #$01, $001C(A0)
                subi.w  #$00C0, D0
                cmp.w   $000C(A0), D0
                bcc.s   loc_1F682
                move.b  #$00, $001C(A0)
                tst.w   $0012(A0)
                bmi.s   loc_1F682
                move.b  #$02, $001C(A0)
loc_1F682:
                rts
loc_1F684:
                dc.w    loc_1F68A-loc_1F684
                dc.w    loc_1F68E-loc_1F684
                dc.w    loc_1F692-loc_1F684
loc_1F68A:
                dc.b    $07, $00, $01, $FF
loc_1F68E:
                dc.b    $03, $00, $01, $FF
loc_1F692:
                dc.b    $07, $00, $FF, $00
Chopper_Mappings:                
loc_1F696:
                dc.w    loc_1F69A-loc_1F696
                dc.w    loc_1F6B4-loc_1F696
loc_1F69A:
                dc.w    $0003
                dc.l    $F0050000, $0000FFF4, $F0010004, $00020004
                dc.l    $0009000A, $0005FFF4
loc_1F6B4:
                dc.w    $0003
                dc.l    $F0050000, $0000FFF4, $F0050006, $00030002
                dc.l    $00090010, $0008FFF4                  
;=============================================================================== 
; Object 0x53 - Green Hill - Chopper
; [ End ]                         
;=============================================================================== 
                dc.w    $0000                   ; Filler  
J_MarkObjGone_19: ; loc_1F6D0:
                jmp     MarkObjGone             ; loc_D2A0
J_AnimateSprite_0D: ; loc_1F6D6:
                jmp     AnimateSprite           ; loc_D412
J_Adjust2PArtPointer_21: ; loc_1F6DC:
                jmp     Adjust2PArtPointer     ; loc_DC30
J_SpeedToPos_11: ; loc_1F6E2:
                jmp     SpeedToPos              ; loc_D27A  
;=============================================================================== 
; Object 0x54 - Green Hill - Motobug
; [ Begin ]                         
;===============================================================================  
Obj_0x54_Motobug: ; loc_1F6E8:                 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1F6F6(PC, D0), D1
                jmp     loc_1F6F6(PC, D1)
loc_1F6F6:                
                dc.w    loc_1F700-loc_1F6F6
                dc.w    loc_1F7A0-loc_1F6F6
                dc.w    loc_1F8CC-loc_1F6F6
                dc.w    loc_1F904-loc_1F6F6
                dc.w    loc_1F88A-loc_1F6F6
loc_1F700:
                move.l  #Motobug_Mappings, $0004(A0) ; loc_1F938
                move.w  #$0402, $0002(A0)
                bsr     J_Adjust2PArtPointer_22 ; loc_1F98A
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$0E, $0017(A0)
                bsr     J_SingleObjLoad2_0C  ; loc_1F972
                bne.s   loc_1F788
                move.b  #$54, $0000(A1)
                move.b  #$06, $0024(A1)
                move.l  #Motobug_Mappings, $0004(A1) ; loc_1F938
                move.w  #$2402, $0002(A1)
                bsr     J_Adjust2PArtPointer2_04 ; loc_1F97E
                move.b  #$03, $0018(A1)
                move.b  #$10, $0019(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0001(A0), $0001(A1)
                move.l  A0, $002A(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  #$02, $001A(A1)
loc_1F788:
                addq.b  #$02, $0024(A0)
                move.w  #$FF80, D0
                btst    #$00, $0022(A0)
                beq.s   loc_1F79A
                neg.w   D0
loc_1F79A:
                move.w  D0, $0010(A0)
                rts
loc_1F7A0:
                bsr     loc_1F7E8
                bsr     J_SpeedToPos_12         ; loc_1F996
                jsr     ObjHitFloor             ; loc_13898
                cmpi.w  #$FFF8, D1
                blt.s   loc_1F7CC
                cmpi.w  #$000C, D1
                bge.s   loc_1F7CC
                add.w   D1, $000C(A0)
                lea     (loc_1F92C), A1
                bsr     J_AnimateSprite_0E      ; loc_1F978
                bra     loc_1F984
loc_1F7CC:
                addq.b  #$02, $0024(A0)
                move.w  #$0014, $0030(A0)
                st      $0034(A0)
                lea     (loc_1F92C), A1
                bsr     J_AnimateSprite_0E      ; loc_1F978
                bra     loc_1F984
loc_1F7E8:
                tst.b   $0035(A0)
                bne.s   loc_1F82A
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                cmpi.w  #$0064, D0
                bgt.s   loc_1F82A
                cmpi.w  #$FF9C, D0
                blt.s   loc_1F82A
                tst.w   D0
                bmi.s   loc_1F810
                btst    #$00, $0022(A0)
                beq.s   loc_1F82A
                bra.s   loc_1F818
loc_1F810:
                btst    #$00, $0022(A0)
                bne.s   loc_1F82A
loc_1F818:
                move.w  $0010(A0), D0
                asl.w   #$02, D0
                move.w  D0, $0010(A0)
                st      $0035(A0)
                bsr     loc_1F82C
loc_1F82A:
                rts
loc_1F82C:
                bsr     J_SingleObjLoad2_0C  ; loc_1F972
                bne.s   loc_1F888
                move.b  #$54, $0000(A1)
                move.b  #$08, $0024(A1)
                move.l  #Buzz_Bomber_Mappings, $0004(A1) ; loc_1EB0E
                move.w  #$03E6, $0002(A1)
                bsr     J_Adjust2PArtPointer2_04 ; loc_1F97E
                move.b  #$04, $0018(A1)
                move.b  #$10, $0019(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0001(A0), $0001(A1)
                move.l  A0, $002A(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                addq.w  #$07, $000C(A1)
                addi.w  #$000D, $0008(A1)
                move.b  #$01, $001C(A1)
loc_1F888:
                rts
loc_1F88A:
                move.l  $002A(A0), A1
                cmpi.b  #$54, (A1)
                bne     J_DeleteObject_26       ; loc_1F96C
                tst.b   $0034(A1)
                bne     J_DeleteObject_26       ; loc_1F96C
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                addq.w  #$07, $000C(A0)
                moveq   #$0D, D0
                btst    #$00, $0022(A0)
                beq.s   loc_1F8BA
                neg.w   D0
loc_1F8BA:
                add.w   D0, $0008(A0)
                lea     (loc_1EAF2), A1
                bsr     J_AnimateSprite_0E      ; loc_1F978
                bra     loc_1F984
loc_1F8CC:
                subi.w  #$0001, $0030(A0)
                bpl     loc_1F984
                neg.w   $0010(A0)
                bsr     J_ObjectFall_06         ; loc_1F990
                move.w  $0010(A0), D0
                asr.w   #$02, D0
                move.w  D0, $0010(A0)
                bchg    #0, $0022(A0)
                bchg    #0, $0001(A0)
                subq.b  #$02, $0024(A0)
                sf      $0034(A0)
                sf      $0035(A0)
                bra     loc_1F984
loc_1F904:
                move.l  $002A(A0), A1
                cmpi.b  #$54, (A1)
                bne     J_DeleteObject_26       ; loc_1F96C
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                bra     loc_1F984
loc_1F92C:
                dc.w    loc_1F930-loc_1F92C
                dc.w    loc_1F934-loc_1F92C
loc_1F930:
                dc.b    $05, $00, $01, $FF
loc_1F934:
                dc.b    $01, $00, $01, $FF
Motobug_Mappings:                
loc_1F938:
                dc.w    loc_1F93E-loc_1F938
                dc.w    loc_1F950-loc_1F938
                dc.w    loc_1F962-loc_1F938
loc_1F93E:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $01090014, $000AFFF4
loc_1F950:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $01091014, $100AFFF4
loc_1F962:
                dc.w    $0001
                dc.l    $FA050010, $0008FFE9                     
;=============================================================================== 
; Object 0x54 - Green Hill - Motobug
; [ End ]                         
;=============================================================================== 
J_DeleteObject_26: ; loc_1F96C:
                jmp     DeleteObject            ; loc_D3B4
J_SingleObjLoad2_0C: ; loc_1F972:
                jmp     SingleObjLoad2      ; loc_E788
J_AnimateSprite_0E: ; loc_1F978:
                jmp     AnimateSprite           ; loc_D412
J_Adjust2PArtPointer2_04: ; loc_1F97E:
                jmp     Adjust2PArtPointer2   ; loc_DC4C
loc_1F984:
                jmp     loc_D340
J_Adjust2PArtPointer_22: ; loc_1F98A:
                jmp     Adjust2PArtPointer     ; loc_DC30
J_ObjectFall_06: ; loc_1F990:
                jmp     ObjectFall              ; loc_D24E
J_SpeedToPos_12: ; loc_1F996:
                jmp     SpeedToPos              ; loc_D27A   
;=============================================================================== 
; Object 0x57 - 
; [ Begin ]                         
;===============================================================================                    
Obj_0x57: ; loc_1F99C:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1F9AA(PC, D0), D1
                jmp     loc_1F9AA(PC, D1)
loc_1F9AA:
                dc.w    loc_1F9B6-loc_1F9AA
                dc.w    loc_1F9DC-loc_1F9AA
                dc.w    loc_1FA38-loc_1F9AA
                dc.w    loc_1FA6A-loc_1F9AA
                dc.w    loc_1FA94-loc_1F9AA
                dc.w    loc_1FAAE-loc_1F9AA
loc_1F9B6:
                move.b  #$00, $0020(A0)
                cmpi.w  #$29D0, $0008(A0)
                ble.s   loc_1F9CE
                subi.w  #$0001, $0008(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1F9CE:
                move.w  #$29D0, $0008(A0)
                addq.b  #$02, $0025(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1F9DC:
                moveq   #$00, D0
                move.b  $002C(A0), D0
                move.w  loc_1F9EA(PC, D0), D1
                jmp     loc_1F9EA(PC, D1)
loc_1F9EA:
                dc.w    loc_1F9EE-loc_1F9EA
                dc.w    loc_1FA14-loc_1F9EA
loc_1F9EE:
                cmpi.w  #$041E, $000C(A0)
                bge.s   loc_1FA00
                addi.w  #$0001, $000C(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FA00:
                addq.b  #$02, $002C(A0)
                bset    #$00, $002D(A0)
                move.w  #$003C, $002A(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FA14:
                subi.w  #$0001, $002A(A0)
                bpl     J_DisplaySprite_11      ; loc_202DC
                move.w  #$FE00, $0010(A0)
                addq.b  #$02, $0025(A0)
                move.b  #$0F, $0020(A0)
                bset    #$01, $002D(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FA38:
                bsr     loc_1FBA8
                bsr     loc_1FB86
                move.w  $002E(A0), D0
                lsr.w   #$01, D0
                subi.w  #$0014, D0
                move.w  D0, $000C(A0)
                move.w  #$0000, $002E(A0)
                move.l  $0008(A0), D2
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.l  D2, $0008(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FA6A:
                subq.w  #$01, $003C(A0)
                dc.w    $6A00, $0000
                bset    #$00, $0022(A0)
                bclr    #$07, $0022(A0)
                clr.w   $0010(A0)
                addq.b  #$02, $0025(A0)
                move.w  #$FFDA, $003C(A0)
                move.w  #$000C, $002A(A0)
                rts
loc_1FA94:
                addq.w  #$01, $000C(A0)
                subq.w  #$01, $002A(A0)
                bpl     J_DisplaySprite_11      ; loc_202DC
                addq.b  #$02, $0025(A0)
                move.b  #$00, $002C(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FAAE:
                moveq   #$00, D0
                move.b  $002C(A0), D0
                move.w  loc_1FAC0(PC, D0), D1
                jsr     loc_1FAC0(PC, D1)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FAC0:
                dc.w    loc_1FAC6-loc_1FAC0
                dc.w    loc_1FB3E-loc_1FAC0
                dc.w    loc_1FB58-loc_1FAC0
loc_1FAC6:
                bclr    #$00, $002D(A0)
                bsr     J_SingleObjLoad2_0D ; loc_202EE
                bne     J_DisplaySprite_11      ; loc_202DC
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #Obj_0x57_Mappings, $0004(A1) ; loc_20168
                move.w  #$2540, $0002(A1)
                bsr     J_Adjust2PArtPointer2_05 ; loc_202FA
                move.b  #$04, $0001(A1)
                move.b  #$20, $0019(A1)
                move.b  #$04, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addi.w  #$000C, $000C(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  #$08, $0024(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0010, $002A(A1)
                move.w  #$0032, $002A(A0)
                addq.b  #$02, $002C(A0)
                rts
loc_1FB3E:
                subi.w  #$0001, $002A(A0)
                bpl.s   loc_1FB56
                bset    #$02, $002D(A0)
                move.w  #$0060, $002A(A0)
                addq.b  #$02, $002C(A0)
loc_1FB56:
                rts
loc_1FB58:
                subq.w  #$01, $000C(A0)
                subi.w  #$0001, $002A(A0)
                bpl.s   loc_1FB84
                addq.w  #$01, $000C(A0)
                addq.w  #$02, $0008(A0)
                cmpi.w  #$2B08, $0008(A0)
                bcs.s   loc_1FB84
                tst.b   ($FFFFF7A7).w
                bne.s   loc_1FB84
                move.b  #$01, ($FFFFF7A7).w
                bra     J_DeleteObject_27       ; loc_202E2
loc_1FB84:
                rts
loc_1FB86:
                move.w  $0008(A0), D0
                cmpi.w  #$2720, D0
                ble.s   loc_1FB96
                cmpi.w  #$2B08, D0
                blt.s   loc_1FBA6
loc_1FB96:
                bchg    #0, $0022(A0)
                bchg    #0, $0001(A0)
                neg.w   $0010(A0)
loc_1FBA6:
                rts
loc_1FBA8:
                cmpi.b  #$06, $0025(A0)
                bcc.s   loc_1FBEE
                tst.b   $0022(A0)
                bmi.s   loc_1FBF0
                tst.b   $0020(A0)
                bne.s   loc_1FBEE
                tst.b   $003E(A0)
                bne.s   loc_1FBD2
                move.b  #$20, $003E(A0)
                move.w  #$00AC, D0
                jsr     (PlaySound)              ; loc_14C6
loc_1FBD2:
                lea     ($FFFFFB22).w, A1
                moveq   #$00, D0
                tst.w   (A1)
                bne.s   loc_1FBE0
                move.w  #$0EEE, D0
loc_1FBE0:
                move.w  D0, (A1)
                subq.b  #$01, $003E(A0)
                bne.s   loc_1FBEE
                move.b  #$0F, $0020(A0)
loc_1FBEE:
                rts
loc_1FBF0:
                moveq   #$64, D0
                bsr     AddPoints               ; loc_22FD0
                move.b  #$06, $0025(A0)
                move.w  #$00B3, $003C(A0)
                bset    #$03, $002D(A0)
                rts                       
;=============================================================================== 
; Object 0x57 - 
; [ End ]                         
;===============================================================================   

;=============================================================================== 
; Object 0x58 - 
; [ Begin ]                         
;===============================================================================  
Obj_0x58: ; loc_1FC0A:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_1FC18(PC, D0), D1
                jmp     loc_1FC18(PC, D1)
loc_1FC18:
                dc.w    loc_1FC46-loc_1FC18
                dc.w    loc_1FCCC-loc_1FC18
                dc.w    loc_1FD1E-loc_1FC18
                dc.w    loc_1FE00-loc_1FC18
                dc.w    loc_1FC22-loc_1FC18
loc_1FC22:
                subi.w  #$0001, $000C(A0)
                subi.w  #$0001, $002A(A0)
                bpl     J_DisplaySprite_11      ; loc_202DC
                move.b  #$00, $0024(A0)
                lea     (loc_2012E), A1
                bsr     J_AnimateSprite_0F      ; loc_202F4
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FC46:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1FC54(PC, D0), D1
                jmp     loc_1FC54(PC, D1)
loc_1FC54:
                dc.w    loc_1FC58-loc_1FC54
                dc.w    loc_1FCA2-loc_1FC54
loc_1FC58:
                move.l  $0034(A0), A1
                cmpi.b  #$55, (A1)
                bne     J_DeleteObject_27       ; loc_202E2
                btst    #$00, $002D(A1)
                beq.s   loc_1FC7C
                move.b  #$01, $001C(A0)
                move.w  #$0018, $002A(A0)
                addq.b  #$02, $0025(A0)
loc_1FC7C:
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                lea     (loc_2012E), A1
                bsr     J_AnimateSprite_0F      ; loc_202F4
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FCA2:
                subi.w  #$0001, $002A(A0)
                bpl.s   loc_1FCBE
                cmpi.w  #$FFF0, $002A(A0)
                ble     J_DeleteObject_27       ; loc_202E2
                addi.w  #$0001, $000C(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FCBE:
                lea     (loc_2012E), A1
                bsr     J_AnimateSprite_0F      ; loc_202F4
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FCCC:
                move.l  $0034(A0), A1
                cmpi.b  #$55, (A1)
                bne     J_DeleteObject_27       ; loc_202E2
                btst    #$01, $002D(A1)
                beq     J_DisplaySprite_11      ; loc_202DC
                btst    #$02, $002D(A1)
                bne     loc_1FD0E
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                addi.w  #$0008, $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FD0E:
                move.b  #$08, $001A(A0)
                move.b  #$00, $0018(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FD1E:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  loc_1FD2C(PC, D0), D1
                jmp     loc_1FD2C(PC, D1)
loc_1FD2C:
                dc.w    loc_1FD34-loc_1FD2C
                dc.w    loc_1FD52-loc_1FD2C
                dc.w    loc_1FDB2-loc_1FD2C
                dc.w    loc_1FDDE-loc_1FD2C
loc_1FD34:
                move.l  $0034(A0), A1
                cmpi.b  #$55, (A1)
                bne     J_DeleteObject_27       ; loc_202E2
                btst    #$01, $002D(A1)
                beq     J_DisplaySprite_11      ; loc_202DC
                addq.b  #$02, $0025(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FD52:
                move.l  $0034(A0), A1
                cmpi.b  #$55, (A1)
                bne     J_DeleteObject_27       ; loc_202E2
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                tst.b   $0022(A0)
                bpl.s   loc_1FD74
                addq.b  #$02, $0025(A0)
loc_1FD74:
                bsr     loc_1FB86
                bsr     J_ObjectFall_07         ; loc_20306
                jsr     ObjHitFloor             ; (loc_13898)
                tst.w   D1
                bpl.s   loc_1FD8A
                add.w   D1, $000C(A0)
loc_1FD8A:
                move.w  #$0100, $0012(A0)
                cmpi.b  #$01, $0018(A0)
                bne.s   loc_1FDA4
                move.w  $000C(A0), D0
                move.l  $0034(A0), A1
                add.w   D0, $002E(A1)
loc_1FDA4:
                lea     (loc_2023C), A1
                bsr     J_AnimateSprite_0F      ; loc_202F4
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FDB2:
                subi.w  #$0001, $002A(A0)
                bpl     J_DisplaySprite_11      ; loc_202DC
                addq.b  #$02, $0025(A0)
                move.w  #$000A, $002A(A0)
                move.w  #$FD00, $0012(A0)
                cmpi.b  #$01, $0018(A0)
                beq     J_DisplaySprite_11      ; loc_202DC
                neg.w   $0010(A0)
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FDDE:
                subq.w  #$01, $002A(A0)
                bpl     J_DisplaySprite_11      ; loc_202DC
                bsr     J_ObjectFall_07         ; loc_20306
                bsr     J_ObjHitFloor_01        ; loc_20300
                tst.w   D1
                bpl.s   loc_1FDFC
                move.w  #$FE00, $0012(A0)
                add.w   D1, $000C(A0)
loc_1FDFC:
                bra     J_MarkObjGone_1A        ; loc_202E8
loc_1FE00:
                move.l  $0034(A0), A1
                cmpi.b  #$55, (A1)
                bne     J_DeleteObject_27       ; loc_202E2
                btst    #$03, $002D(A1)
                bne.s   loc_1FE66
                bsr     loc_1FE86
                btst    #$01, $002D(A1)
                beq     J_DisplaySprite_11      ; loc_202DC
                move.b  #$8B, $0020(A0)
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                addi.w  #$0010, $000C(A0)
                move.w  #$FFCA, D0
                btst    #$00, $0022(A0)
                beq.s   loc_1FE54
                neg.w   D0
loc_1FE54:
                add.w   D0, $0008(A0)
                lea     (loc_2023C), A1
                bsr     J_AnimateSprite_0F      ; loc_202F4
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FE66:
                move.w  #$FFFD, D0
                btst    #$00, $0022(A0)
                beq.s   loc_1FE74
                neg.w   D0
loc_1FE74:
                add.w   D0, $0008(A0)
                lea     (loc_2023C), A1
                bsr     J_AnimateSprite_0F      ; loc_202F4
                bra     J_DisplaySprite_11      ; loc_202DC
loc_1FE86:
                cmpi.b  #$01, $0021(A1)
                beq.s   loc_1FE90
                rts
loc_1FE90:
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bpl.s   loc_1FEA4
                btst    #$00, $0022(A1)
                bne.s   loc_1FEAE
                rts
loc_1FEA4:
                btst    #$00, $0022(A1)
                beq.s   loc_1FEAE
                rts
loc_1FEAE:
                bset    #$03, $002D(A1)
                rts  
loc_1FEB6:
                jsr     SingleObjLoad2      ; (loc_E788)
                bne.s   loc_1FF2E
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #loc_20250, $0004(A1)
                move.w  #$24C0, $0002(A1)
                bsr     J_Adjust2PArtPointer2_05 ; loc_202FA
                move.b  #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$01, $0018(A1)
                move.b  #$10, $0016(A1)
                move.b  #$10, $0017(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addi.w  #$001C, $0008(A1)
                addi.w  #$000C, $000C(A1)
                move.w  #$FE00, $0010(A1)
                move.b  #$04, $0024(A1)
                move.b  #$04, $001A(A1)
                move.b  #$01, $001C(A1)
                move.w  #$0016, $002A(A1)
loc_1FF2E:
                jsr     SingleObjLoad2      ; (loc_E788)
                bne.s   loc_1FFA6
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #loc_20250, $0004(A1)
                move.w  #$24C0, $0002(A1)
                bsr     J_Adjust2PArtPointer2_05 ; loc_202FA
                move.b  #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$01, $0018(A1)
                move.b  #$10, $0016(A1)
                move.b  #$10, $0017(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addi.w  #$FFF4, $0008(A1)
                addi.w  #$000C, $000C(A1)
                move.w  #$FE00, $0010(A1)
                move.b  #$04, $0024(A1)
                move.b  #$04, $001A(A1)
                move.b  #$01, $001C(A1)
                move.w  #$004B, $002A(A1)
loc_1FFA6:
                jsr     SingleObjLoad2      ; (loc_E788)
                bne.s   loc_2001E
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #loc_20250, $0004(A1)
                move.w  #$24C0, $0002(A1)
                bsr     J_Adjust2PArtPointer2_05 ; loc_202FA
                move.b  #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$02, $0018(A1)
                move.b  #$10, $0016(A1)
                move.b  #$10, $0017(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addi.w  #$FFD4, $0008(A1)
                addi.w  #$000C, $000C(A1)
                move.w  #$FE00, $0010(A1)
                move.b  #$04, $0024(A1)
                move.b  #$06, $001A(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0030, $002A(A1)
loc_2001E:
                jsr     SingleObjLoad2      ; (loc_E788)
                bne.s   loc_2007E
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #loc_20250, $0004(A1)
                move.w  #$24C0, $0002(A1)
                bsr     J_Adjust2PArtPointer2_05 ; loc_202FA
                move.b  #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$01, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addi.w  #$FFCA, $0008(A1)
                addi.w  #$0008, $000C(A1)
                move.b  #$06, $0024(A1)
                move.b  #$01, $001A(A1)
                move.b  #$00, $001C(A1)
loc_2007E:
                rts                
loc_20080:
                jsr     SingleObjLoad2      ; (loc_E788)
                bne.s   loc_200C8
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #loc_20250, $0004(A1)
                move.w  #$04C0, $0002(A1)
                bsr     J_Adjust2PArtPointer2_05 ; loc_202FA
                move.b  #$04, $0001(A1)
                move.b  #$20, $0019(A1)
                move.b  #$02, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                move.b  #$02, $0024(A1)
loc_200C8:
                bsr     loc_1FEB6
                subi.w  #$0008, $0038(A0)
                move.w  #$2A00, $0008(A0)
                move.w  #$02C0, $000C(A0)
                jsr     SingleObjLoad2      ; (loc_E788)
                bne.s   loc_2012C
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #loc_20168, $0004(A1)
                move.w  #$2540, $0002(A1)
                bsr     J_Adjust2PArtPointer2_05 ; loc_202FA
                move.b  #$04, $0001(A1)
                move.b  #$20, $0019(A1)
                move.b  #$04, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                move.w  #$001E, $002A(A1)
                move.b  #$00, $0024(A1)
loc_2012C:
                rts                
loc_2012E:
                dc.w    loc_20134-loc_2012E
                dc.w    loc_20138-loc_2012E
                dc.w    loc_2014E-loc_2012E
loc_20134:
                dc.b    $01, $05, $06, $FF
loc_20138:
                dc.b    $01, $01, $01, $01, $02, $02, $02, $03, $03, $03, $04, $04, $04, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $FF
loc_2014E:
                dc.b    $01, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $03, $03, $03, $02
                dc.b    $02, $02, $01, $01, $01, $05, $06, $FE, $02, $00               
Obj_0x57_Mappings:
loc_20168:
                dc.w    loc_20176-loc_20168
                dc.w    loc_20180-loc_20168
                dc.w    loc_201AA-loc_20168
                dc.w    loc_201D4-loc_20168
                dc.w    loc_201EE-loc_20168
                dc.w    loc_20208-loc_20168
                dc.w    loc_20222-loc_20168
loc_20176:
                dc.w    $0001
                dc.l    $D8050000, $00000002
loc_20180:
                dc.w    $0005
                dc.l    $D8050004, $00020002, $D80D000C, $00060012
                dc.l    $D80D000C, $00060032, $D80D000C, $0006FFE2
                dc.l    $D80D000C, $0006FFC2
loc_201AA:
                dc.w    $0005
                dc.l    $D8050004, $00020002, $D80D000C, $00060012
                dc.l    $D8050008, $00040032, $D80D000C, $0006FFE2
                dc.l    $D8050008, $0004FFD2
loc_201D4:
                dc.w    $0003
                dc.l    $D8050004, $00020002, $D80D000C, $00060012
                dc.l    $D80D000C, $0006FFE2
loc_201EE:
                dc.w    $0003
                dc.l    $D8050004, $00020002, $D8050008, $00040012
                dc.l    $D8050008, $0004FFF2
loc_20208:
                dc.w    $0003
                dc.l    $D8050000, $00000002, $D80D000C, $00060012
                dc.l    $D80D000C, $00060032
loc_20222:
                dc.w    $0003
                dc.l    $D8050004, $00020002, $D80D000C, $0006FFE2
                dc.l    $D80D000C, $0006FFC2     
loc_2023C:
                dc.w    loc_20242-loc_2023C
                dc.w    loc_20247-loc_2023C
                dc.w    loc_2024B-loc_2023C
loc_20242:
                dc.b    $05, $01, $02, $03, $FF
loc_20247:
                dc.b    $01, $04, $05, $FF
loc_2024B:
                dc.b    $01, $06, $07, $FF, $00 

loc_20250:
                dc.w    loc_20262-loc_20250
                dc.w    loc_2027C-loc_20250
                dc.w    loc_20286-loc_20250
                dc.w    loc_20290-loc_20250
                dc.w    loc_2029A-loc_20250
                dc.w    loc_202A4-loc_20250
                dc.w    loc_202AE-loc_20250
                dc.w    loc_202B8-loc_20250
                dc.w    loc_202C2-loc_20250
loc_20262:
                dc.w    $0003
                dc.l    $F00F0000, $0000FFD0, $F00F0010, $0008FFF0
                dc.l    $F00F0020, $00100010
loc_2027C:
                dc.w    $0001
                dc.l    $F00F0030, $0018FFF0
loc_20286:
                dc.w    $0001
                dc.l    $F00F0040, $0020FFF0
loc_20290:
                dc.w    $0001
                dc.l    $F00F0050, $0028FFF0
loc_2029A:
                dc.w    $0001
                dc.l    $F00F0060, $0030FFF0
loc_202A4:
                dc.w    $0001
                dc.l    $F00F1060, $1030FFF0
loc_202AE:
                dc.w    $0001
                dc.l    $F00F0070, $0038FFF0
loc_202B8:
                dc.w    $0001
                dc.l    $F00F1070, $1038FFF0
loc_202C2:
                dc.w    $0003
                dc.l    $F00F8000, $8000FFD0, $F00F8010, $8008FFF0
                dc.l    $F00F8020, $80100010                                       
;=============================================================================== 
; Object 0x58 - 
; [ End ]                         
;===============================================================================    
J_DisplaySprite_11: ; loc_202DC:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_27: ; loc_202E2:
                jmp     DeleteObject            ; (loc_D3B4)
J_MarkObjGone_1A: ; loc_202E8:
                jmp     MarkObjGone             ; (loc_D2A0)
J_SingleObjLoad2_0D: ; loc_202EE:
                jmp     SingleObjLoad2      ; (loc_E788)
J_AnimateSprite_0F: ; loc_202F4:
                jmp     AnimateSprite           ; (loc_D412)
J_Adjust2PArtPointer2_05: ; loc_202FA:
                jmp     Adjust2PArtPointer2   ; (loc_DC4C)
J_ObjHitFloor_01: ; loc_20300:
                jmp     ObjHitFloor             ; (loc_13898)
J_ObjectFall_07: ; loc_20306:
                jmp     ObjectFall              ; (loc_D24E)
;=============================================================================== 
; Object 0x55 - Ghz Boss
; [ Begin ]                         
;===============================================================================                 
Obj_0x55_Ghz_Boss: ; loc_2030C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_2031A(PC, D0), D1
                jmp     loc_2031A(PC, D1)
loc_2031A:
                dc.w    loc_20324-loc_2031A
                dc.w    loc_2044E-loc_2031A
                dc.w    loc_2048C-loc_2031A
                dc.w    loc_204BE-loc_2031A
                dc.w    loc_20560-loc_2031A
loc_20324:
                move.l  #Ghz_Boss_Mappings, $0004(A0) ; loc_206BA
                move.w  #$2400, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.b  #$03, $0018(A0)
                move.b  #$0F, $0020(A0)
                move.b  #$08, $0021(A0)
                addq.b  #$02, $0024(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0038(A0)
                move.b  $0028(A0), D0
                cmpi.b  #$81, D0
                bne.s   loc_20370
                addi.w  #$0060, $0002(A0)
loc_20370:
                bsr     J_Adjust2PArtPointer_23 ; loc_2073A
                jsr     SingleObjLoad2      ; (loc_E788)
                bne     loc_20434
                move.b  #$55, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  A1, $0034(A0)
                move.l  #Ghz_Boss_Mappings, $0004(A1) ; loc_206BA
                move.w  #$0400, $0002(A1)
                move.b  #$04, $0001(A1)
                move.b  #$20, $0019(A1)
                move.b  #$03, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addq.b  #$04, $0024(A1)
                move.b  #$01, $001C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0028(A0), D0
                cmpi.b  #$81, D0
                bne.s   loc_203D8
                addi.w  #$0060, $0002(A1)
loc_203D8:
                bsr     J_Adjust2PArtPointer2_06 ; loc_20734
                tst.b   $0028(A0)
                bmi.s   loc_20434
                jsr     SingleObjLoad2      ; (loc_E788)
                bne.s   loc_20434
                move.b  #$55, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #Ghz_Boss_Mappings_1, $0004(A1) ; loc_20612
                move.w  #$04D0, $0002(A1)
                bsr     J_Adjust2PArtPointer2_06 ; loc_20734
                move.b  #$01, $001E(A0)
                move.b  #$04, $0001(A1)
                move.b  #$20, $0019(A1)
                move.b  #$03, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addq.b  #$06, $0024(A1)
                move.b  $0001(A0), $0001(A1)
loc_20434:
                move.b  $0028(A0), D0
                andi.w  #$007F, D0
                add.w   D0, D0
                add.w   D0, D0
                move.l  loc_20446(PC, D0), A1
                jmp     (A1)
loc_20446:
                dc.l    $00000000
                dc.l    loc_20080 
loc_2044E:
                move.b  $0028(A0), D0
                andi.w  #$007F, D0
                add.w   D0, D0
                add.w   D0, D0
                move.l  loc_20484(PC, D0), A1
                jsr     (A1)
                lea     (loc_206AE), A1
                jsr     AnimateSprite           ; (loc_D412)
                move.b  $0022(A0), D0
                andi.b  #$03, D0
                andi.b  #$FC, $0001(A0)
                or.b    D0, $0001(A0)
                jmp     DisplaySprite           ; (loc_D3C2)
loc_20484:
                dc.l    $00000000
                dc.l    Obj_0x57  ; loc_1F99C
loc_2048C:
                move.l  $0034(A0), A1
                move.l  $0008(A1), $0008(A0)
                move.l  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                move.l  #loc_206AE, A1
                jsr     AnimateSprite           ; (loc_D412)
                jmp     DisplaySprite           ; (loc_D3C2)                   
loc_204BA:
                dc.b    $00, $FF, $01, $00
loc_204BE:
                btst    #$07, $0022(A0)
                bne.s   loc_20512
                move.l  $0034(A0), A1
                move.l  $0008(A1), $0008(A0)
                move.l  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                subq.b  #$01, $001E(A0)
                bpl.s   loc_20506
                move.b  #$01, $001E(A0)
                move.b  $002A(A0), D0
                addq.b  #$01, D0
                cmpi.b  #$02, D0
                ble.s   loc_204FC
                moveq   #$00, D0
loc_204FC:
                move.b  loc_204BA(PC, D0), $001A(A0)
                move.b  D0, $002A(A0)
loc_20506:
                cmpi.b  #$FF, $001A(A0)
                bne     J_DisplaySprite_12      ; loc_20728
                rts
loc_20512:
                move.l  $0034(A0), A1
                btst    #$06, $002E(A1)
                bne.s   loc_20520
                rts
loc_20520:
                addq.b  #$02, $0024(A0)
                move.l  #Ghz_Boss_Mappings_2, $0004(A0) ; loc_2062A
                move.w  #$04D8, $0002(A0)
                bsr     J_Adjust2PArtPointer_23 ; loc_2073A
                move.b  #$00, $001A(A0)
                move.b  #$05, $001E(A0)
                move.l  $0034(A0), A1
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                addi.w  #$0004, $000C(A0)
                subi.w  #$0028, $0008(A0)
                rts
loc_20560:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_205A2
                move.b  #$05, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$04, $001A(A0)
                bne     loc_205A2
                move.b  #$00, $001A(A0)
                move.l  $0034(A0), A1
                move.b  (A1), D0
                beq     J_DeleteObject_28       ; loc_2072E
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                addi.w  #$0004, $000C(A0)
                subi.w  #$0028, $0008(A0)
loc_205A2:
                bra     J_DisplaySprite_12      ; loc_20728
;=============================================================================== 
; Object 0x55 - Ghz Boss
; [ End ]                         
;===============================================================================                                        
;=============================================================================== 
; Object 0x56 - Ghz Boss
; [ Begin ]                         
;===============================================================================  
Obj_0x56: ; loc_205A6:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_205B4(PC, D0), D1
                jmp     loc_205B4(PC, D1)
loc_205B4:
                dc.w    loc_205B8-loc_205B4
                dc.w    loc_205F4-loc_205B4
loc_205B8:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x56_Mappings, $0004(A0) ; loc_2065A
                move.w  #$05A0, $0002(A0)
                bsr     J_Adjust2PArtPointer_23 ; loc_2073A
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$00, $0020(A0)
                move.b  #$0C, $0019(A0)
                move.b  #$07, $001E(A0)
                move.b  #$00, $001A(A0)
                rts
loc_205F4:
                subq.b  #$01, $001E(A0)
                bpl.s   loc_2060E
                move.b  #$07, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$07, $001A(A0)
                beq     J_DeleteObject_28       ; loc_2072E
loc_2060E:
                bra     J_DisplaySprite_12      ; loc_20728
Ghz_Boss_Mappings_1: 
loc_20612:
                dc.w    loc_20616-loc_20612
                dc.w    loc_20620-loc_20612
loc_20616:
                dc.w    $0001
                dc.l    $00050000, $0000001C
loc_20620:
                dc.w    $0001
                dc.l    $00050004, $0002001C
Ghz_Boss_Mappings_2: 
loc_2062A:
                dc.w    loc_20632-loc_2062A
                dc.w    loc_2063C-loc_2062A
                dc.w    loc_20646-loc_2062A
                dc.w    loc_20650-loc_2062A
loc_20632:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
loc_2063C:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
loc_20646:
                dc.w    $0001
                dc.l    $F8050008, $0004FFF8
loc_20650:
                dc.w    $0001
                dc.l    $F805000C, $0006FFF8    
Obj_0x56_Mappings:
loc_2065A:
                dc.w    loc_20668-loc_2065A
                dc.w    loc_20672-loc_2065A
                dc.w    loc_2067C-loc_2065A
                dc.w    loc_20686-loc_2065A
                dc.w    loc_20690-loc_2065A
                dc.w    loc_2069A-loc_2065A
                dc.w    loc_206A4-loc_2065A
loc_20668:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
loc_20672:
                dc.w    $0001
                dc.l    $F00F0004, $0002FFF0
loc_2067C:
                dc.w    $0001
                dc.l    $F00F0014, $000AFFF0
loc_20686:
                dc.w    $0001
                dc.l    $F00F0024, $0012FFF0
loc_20690:
                dc.w    $0001
                dc.l    $F00F0034, $001AFFF0
loc_2069A:
                dc.w    $0001
                dc.l    $F00F0044, $0022FFF0
loc_206A4:
                dc.w    $0001
                dc.l    $F00F0054, $002AFFF0                           
loc_206AE:
                dc.w    loc_206B2-loc_206AE
                dc.w    loc_206B5-loc_206AE
loc_206B2:
                dc.b    $0F, $00, $FF
loc_206B5:
                dc.b    $07, $01, $02, $FF, $00 
Ghz_Boss_Mappings:                 
loc_206BA:
                dc.w    loc_206C0-loc_206BA
                dc.w    loc_206E2-loc_206BA
                dc.w    loc_20704-loc_206BA
loc_206C0:
                dc.w    $0004
                dc.l    $F8050000, $0000FFE0, $08050004, $0002FFE0
                dc.l    $F80F0008, $0004FFF0, $F8070018, $000C0010
loc_206E2:
                dc.w    $0004
                dc.l    $E8050028, $0014FFE0, $E80D0030, $0018FFF0
                dc.l    $E8050024, $00120010, $D8050020, $00100002
loc_20704:
                dc.w    $0004
                dc.l    $E8050028, $0014FFE0, $E80D0038, $001CFFF0
                dc.l    $E8050024, $00120010, $D8050020, $00100002                              
;=============================================================================== 
; Object 0x56 - Ghz Boss
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler
J_DisplaySprite_12: ; loc_20728:
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_28: ; loc_2072E:
                jmp     DeleteObject            ; (loc_D3B4)
J_Adjust2PArtPointer2_06: ; loc_20734:
                jmp     Adjust2PArtPointer2   ; (loc_DC4C)
J_Adjust2PArtPointer_23: ; loc_2073A:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
;=============================================================================== 
; Object 0x8A - Credits - Sonic 1 Leftover
; [ Begin ]                         
;=============================================================================== 
Obj_0x8A_Credits: ; loc_20740:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_2074E(PC, D0), D1
                jmp     loc_2074E(PC, D1)
loc_2074E:
                dc.w    loc_20752-loc_2074E
                dc.w    loc_207C0-loc_2074E
loc_20752:
                addq.b  #$02, $0024(A0)
                move.w  #$0120, $0008(A0)
                move.w  #$00F0, $000A(A0)
                move.l  #Credits_Mappings, $0004(A0) ; loc_207C6
                move.w  #$05A0, $0002(A0)
                bsr     J_Adjust2PArtPointer_24 ; loc_20E54
                move.w  ($FFFFFFF4).w, D0
                move.b  D0, $001A(A0)
                move.b  #$00, $0001(A0)
                move.b  #$00, $0018(A0)
                cmpi.b  #$04, ($FFFFF600).w
                bne.s   loc_207C0
                move.w  #$0300, $0002(A0)
                bsr     J_Adjust2PArtPointer_24 ; loc_20E54
                move.b  #$0A, $001A(A0)
                tst.b   ($FFFFFFD3).w
                beq.s   loc_207C0
                cmpi.b  #$72, ($FFFFF604).w
                bne.s   loc_207C0
                move.w  #$0EEE, ($FFFFFBC0).w
                move.w  #$0880, ($FFFFFBC2).w
                jmp     DeleteObject            ; (loc_D3B4)
loc_207C0:
                jmp     DisplaySprite           ; (loc_D3C2)
Credits_Mappings:                
loc_207C6:                      
                dc.w    loc_207DC-loc_207C6
                dc.w    loc_2084E-loc_207C6
                dc.w    loc_208D0-loc_207C6
                dc.w    loc_20922-loc_207C6
                dc.w    loc_209E4-loc_207C6
                dc.w    loc_20A86-loc_207C6
                dc.w    loc_20B58-loc_207C6
                dc.w    loc_20C12-loc_207C6
                dc.w    loc_20D0C-loc_207C6
                dc.w    loc_20D86-loc_207C6
                dc.w    loc_20DC8-loc_207C6
loc_207DC:
                dc.w    $000E
                dc.l    $F805002E, $0017FF88, $F8050026, $0013FF98
                dc.l    $F805001A, $000DFFA8, $F8010046, $0023FFB8
                dc.l    $F805001E, $000FFFC0, $F805003E, $001FFFD8
                dc.l    $F805000E, $0007FFE8, $F8050004, $0002FFF8
                dc.l    $F8090008, $00040008, $F805002E, $00170028
                dc.l    $F805003E, $001F0038, $F8050004, $00020048
                dc.l    $F805005C, $002E0058, $F805005C, $002E0068
loc_2084E:
                dc.w    $0010
                dc.l    $D8050000, $0000FF80, $D8050004, $0002FF90
                dc.l    $D8090008, $0004FFA0, $D805000E, $0007FFB4
                dc.l    $D8050012, $0009FFD0, $D8050016, $000BFFE0
                dc.l    $D8050004, $0002FFF0, $D805001A, $000D0000
                dc.l    $0805001E, $000FFFC8, $08050004, $0002FFD8
                dc.l    $08050022, $0011FFE8, $08050026, $0013FFF8
                dc.l    $08050016, $000B0008, $0805002A, $00150020
                dc.l    $08050004, $00020030, $0805002E, $00170044
loc_208D0:
                dc.w    $000A
                dc.l    $D8050012, $0009FF80, $D8050022, $0011FF90
                dc.l    $D8050026, $0013FFA0, $D8050000, $0000FFB0
                dc.l    $D8050022, $0011FFC0, $D8050004, $0002FFD0
                dc.l    $D8090008, $0004FFE0, $0805002A, $0015FFE8
                dc.l    $08050032, $0019FFF8, $08050036, $001B0008
loc_20922:
                dc.w    $0018
                dc.l    $D805001E, $000FFF88, $D805003A, $001DFF98
                dc.l    $D8050004, $0002FFA8, $D8050022, $0011FFB8
                dc.l    $D8050004, $0002FFC8, $D805001E, $000FFFD8
                dc.l    $D805003E, $001FFFE8, $D805000E, $0007FFF8
                dc.l    $D8050022, $00110008, $D8050042, $00210020
                dc.l    $D805000E, $00070030, $D805002E, $00170040
                dc.l    $D8010046, $00230050, $D8050000, $00000058
                dc.l    $D805001A, $000D0068, $08050048, $0024FFC0
                dc.l    $08010046, $0023FFD0, $08050000, $0000FFD8
                dc.l    $08010046, $0023FFE8, $0805002E, $0017FFF0
                dc.l    $08050016, $000B0000, $08050004, $00020010
                dc.l    $0805001A, $000D0020, $08050042, $00210030
loc_209E4:
                dc.w    $0014
                dc.l    $D0050042, $0021FFA0, $D005000E, $0007FFB0
                dc.l    $D005002E, $0017FFC0, $D0010046, $0023FFD0
                dc.l    $D0050000, $0000FFD8, $D005001A, $000DFFE8
                dc.l    $0005004C, $0026FFE8, $00010046, $0023FFF8
                dc.l    $0005001A, $000D0004, $0005002A, $00150014
                dc.l    $00050004, $00020024, $20050012, $0009FFD0
                dc.l    $2005003A, $001DFFE0, $2005000E, $0007FFF0
                dc.l    $2005001A, $000D0000, $20010046, $00230010
                dc.l    $20050050, $00280018, $20050022, $00110030
                dc.l    $20010046, $00230040, $2005000E, $00070048
loc_20A86:
                dc.w    $001A
                dc.l    $D805002E, $0017FF98, $D8050026, $0013FFA8
                dc.l    $D8050032, $0019FFB8, $D805001A, $000DFFC8
                dc.l    $D8050054, $002AFFD8, $D8050012, $0009FFF8
                dc.l    $D8050022, $00110008, $D8050026, $00130018
                dc.l    $D8050042, $00210028, $D8050032, $00190038
                dc.l    $D805001E, $000F0048, $D805000E, $00070058
                dc.l    $08090008, $0004FF88, $08050004, $0002FF9C
                dc.l    $0805002E, $0017FFAC, $08050004, $0002FFBC
                dc.l    $0805003E, $001FFFCC, $08050026, $0013FFDC
                dc.l    $0805001A, $000DFFF8, $08050004, $00020008
                dc.l    $08050058, $002C0018, $08050004, $00020028
                dc.l    $08090008, $00040038, $08050032, $0019004C
                dc.l    $08050022, $0011005C, $08050004, $0002006C
loc_20B58:
                dc.w    $0017
                dc.l    $D005002E, $0017FF98, $D0050026, $0013FFA8
                dc.l    $D0050032, $0019FFB8, $D005001A, $000DFFC8
                dc.l    $D0050054, $002AFFD8, $D0050012, $0009FFF8
                dc.l    $D0050022, $00110008, $D0050026, $00130018
                dc.l    $D0050000, $00000028, $D0050022, $00110038
                dc.l    $D0050004, $00020048, $D0090008, $00040058
                dc.l    $0005004C, $0026FFD0, $00010046, $0023FFE0
                dc.l    $00090008, $0004FFE8, $00010046, $0023FFFC
                dc.l    $0005003E, $001F0004, $00050004, $00020014
                dc.l    $20090008, $0004FFD0, $20050004, $0002FFE4
                dc.l    $2005001E, $000FFFF4, $20050058, $002C0004
                dc.l    $2005002A, $00150014
loc_20C12:
                dc.w    $001F
                dc.l    $D805002E, $0017FF80, $D8050012, $0009FF90
                dc.l    $D805000E, $0007FFA0, $D805001E, $000FFFB0
                dc.l    $D8010046, $0023FFC0, $D8050004, $0002FFC8
                dc.l    $D8050016, $000BFFD8, $D805003E, $001FFFF8
                dc.l    $D805003A, $001D0008, $D8050004, $00020018
                dc.l    $D805001A, $000D0028, $D8050058, $002C0038
                dc.l    $D805002E, $00170048, $0005005C, $002EFFB0
                dc.l    $00050032, $0019FFC0, $0005004C, $0026FFD0
                dc.l    $00010046, $0023FFE0, $00050026, $0013FFE8
                dc.l    $00090008, $00040000, $00010046, $00230014
                dc.l    $0005001A, $000D001C, $0005000E, $0007002C
                dc.l    $00050000, $0000003C, $00010046, $0023004C
                dc.l    $0005002E, $00170054, $0005003A, $001D0064
                dc.l    $00010046, $00230074, $20050012, $0009FFF8
                dc.l    $20050004, $00020008, $20050012, $00090018
                dc.l    $20050004, $00020028
loc_20D0C:
                dc.w    $000F
                dc.l    $F8050012, $0009FF80, $F8050022, $0011FF90
                dc.l    $F805000E, $0007FFA0, $F805002E, $0017FFB0
                dc.l    $F805000E, $0007FFC0, $F805001A, $000DFFD0
                dc.l    $F805003E, $001FFFE0, $F805000E, $0007FFF0
                dc.l    $F8050042, $00210000, $F8050048, $00240018
                dc.l    $F805002A, $00150028, $F805002E, $00170040
                dc.l    $F805000E, $00070050, $F8050000, $00000060
                dc.l    $F8050004, $00020070
loc_20D86:
                dc.w    $0008
                dc.l    $3005003E, $001FFFC0, $30050022, $0011FFD0
                dc.l    $3005002A, $0015FFE0, $30050004, $0002FFF8
                dc.l    $30050000, $00000008, $30050004, $00020018
                dc.l    $30010046, $00230028, $3005001A, $000D0030
loc_20DC8:
                dc.w    $0011
                dc.l    $E805002E, $0017FFB4, $E8050026, $0013FFC4
                dc.l    $E805001A, $000DFFD4, $E8010046, $0023FFE4
                dc.l    $E805001E, $000FFFEC, $E805003E, $001F0004
                dc.l    $E805000E, $00070014, $E8050004, $00020024
                dc.l    $E8090008, $00040034, $00050012, $0009FFC0
                dc.l    $00050022, $0011FFD0, $0005000E, $0007FFE0
                dc.l    $0005002E, $0017FFF0, $0005000E, $00070000
                dc.l    $0005001A, $000D0010, $0005003E, $001F0020
                dc.l    $0005002E, $00170030
;=============================================================================== 
; Object 0x8A - Credits - Sonic 1 Leftover
; [ End ]                         
;=============================================================================== 
                nop                             ; Filler
J_Adjust2PArtPointer_24: ; loc_20E54:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
                dc.w     $0000                  ; Filler
;=============================================================================== 
; Object 0x3E - Egg Prison / Animals Container
; [ Begin ]                         
;=============================================================================== 
Obj_0x3E_Egg_Prison: ; loc_20E5C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_20E88(PC, D0), D1
                jsr     loc_20E88(PC, D1)
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_29       ; loc_20E82
                jmp     DisplaySprite           ; (loc_D3C2)
J_DeleteObject_29: ; loc_20E82:
                jmp     DeleteObject            ; (loc_D3B4)
loc_20E88:
                dc.w    loc_20EA8-loc_20E88
                dc.w    loc_20EF6-loc_20E88
                dc.w    loc_20F32-loc_20E88
                dc.w    loc_20F9A-loc_20E88
                dc.w    loc_20F9A-loc_20E88
                dc.w    loc_20F9A-loc_20E88
                dc.w    loc_21032-loc_20E88
                dc.w    loc_21082-loc_20E88
loc_20E98:
                dc.w    $0220, $0400, $040C, $0501, $0610, $0403, $0810, $0305
loc_20EA8:
                move.l  #loc_210AC, $0004(A0)
                move.w  #$049D, $0002(A0)
                bsr     J_Adjust2PArtPointer_25 ; loc_21158
                move.b  #$04, $0001(A0)
                move.w  $000C(A0), $0030(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsl.w   #$02, D0
                lea     loc_20E98(PC, D0), A1
                move.b  (A1)+, $0024(A0)
                move.b  (A1)+, $0019(A0)
                move.b  (A1)+, $0018(A0)
                move.b  (A1)+, $001A(A0)
                cmpi.w  #$0008, D0
                bne.s   loc_20EF4
                move.b  #$06, $0020(A0)
                move.b  #$08, $0021(A0)
loc_20EF4:
                rts
loc_20EF6:
                cmpi.b  #$02, ($FFFFF7A7).w
                beq.s   loc_20F14
                move.w  #$002B, D1
                move.w  #$0018, D2
                move.w  #$0018, D3
                move.w  $0008(A0), D4
                jmp     SolidObject             ; (loc_F4A0)
loc_20F14:
                tst.b   $0025(A0)
                beq.s   loc_20F2A
                clr.b   $0025(A0)
                bclr    #$03, ($FFFFB022).w
                bset    #$01, ($FFFFB022).w
loc_20F2A:
                move.b  #$02, $001A(A0)
                rts
loc_20F32:
                move.w  #$0017, D1
                move.w  #$0008, D2
                move.w  #$0008, D3
                move.w  $0008(A0), D4
                jsr     SolidObject             ; (loc_F4A0)
                lea     (loc_210A4), A1
                jsr     AnimateSprite           ; (loc_D412)
                move.w  $0030(A0), $000C(A0)
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   loc_20F98
                addq.w  #$08, $000C(A0)
                move.b  #$0A, $0024(A0)
                move.w  #$003C, $001E(A0)
                clr.b   ($FFFFFE1E).w
                clr.b   ($FFFFF7AA).w
                move.b  #$01, ($FFFFF7CC).w
                move.w  #$0800, ($FFFFF602).w
                clr.b   $0025(A0)
                bclr    #$03, ($FFFFB022).w
                bset    #$01, ($FFFFB022).w
loc_20F98:
                rts
loc_20F9A:
                moveq   #$07, D0
                and.b   ($FFFFFE0F).w, D0
                bne.s   loc_20FD8
                jsr     SingleObjLoad        ; (loc_E772)
                bne.s   loc_20FD8
                move.b  #$3F, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                jsr     PseudoRandomNumber      ; loc_31E4
                moveq   #$00, D1
                move.b  D0, D1
                lsr.b   #$02, D1
                subi.w  #$0020, D1
                add.w   D1, $0008(A1)
                lsr.w   #$08, D0
                lsr.b   #$03, D0
                add.w   D0, $000C(A1)
loc_20FD8:
                subq.w  #$01, $001E(A0)
                beq.s   loc_20FE0
                rts
loc_20FE0:
                move.b  #$02, ($FFFFF7A7).w
                move.b  #$0C, $0024(A0)
                move.b  #$06, $001A(A0)
                move.w  #$0096, $001E(A0)
                addi.w  #$0020, $000C(A0)
                moveq   #$07, D6
                move.w  #$009A, D5
                moveq   #-$1C, D4    
loc_21006:                            
                jsr     SingleObjLoad        ; (loc_E772)
                bne.s   loc_21030
                move.b  #$28, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                add.w   D4, $0008(A1)
                addq.w  #$07, D4
                move.w  D5, $0036(A1)
                subq.w  #$08, D5
                dbra    D6, loc_21006
loc_21030:
                rts
loc_21032:
                moveq   #$07, D0
                and.b   ($FFFFFE0F).w, D0
                bne.s   loc_21070
                jsr     SingleObjLoad        ; (loc_E772)
                bne.s   loc_21070
                move.b  #$28, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                jsr     PseudoRandomNumber      ; loc_31E4
                andi.w  #$001F, D0
                subq.w  #$06, D0
                tst.w   D1
                bpl.s   loc_21066
                neg.w   D0
loc_21066:
                add.w   D0, $0008(A1)
                move.w  #$000C, $0036(A1)
loc_21070:
                subq.w  #$01, $001E(A0)
                bne.s   loc_21080
                addq.b  #$02, $0024(A0)
                move.w  #$00B4, $001E(A0)
loc_21080:
                rts
loc_21082:
                moveq   #$3E, D0
                moveq   #$28, D1
                moveq   #$40, D2
                lea     ($FFFFB040).w, A1
loc_2108C:                
                cmp.b   (A1), D1
                beq.s   loc_210A2
                adda.w  D2, A1
                dbra    D0, loc_2108C
                jsr     (loc_F352)
                jmp     DeleteObject            ; (loc_D3B4)
loc_210A2:
                rts                        
loc_210A4:                
                dc.w    loc_210A8-loc_210A4
                dc.w    loc_210A8-loc_210A4
loc_210A8:
                dc.b    $02, $01, $03, $FF

loc_210AC:
                dc.w    loc_210BA-loc_210AC
                dc.w    loc_210F4-loc_210AC
                dc.w    loc_210FE-loc_210AC
                dc.w    loc_21130-loc_210AC
                dc.w    loc_2113A-loc_210AC
                dc.w    loc_2114C-loc_210AC
                dc.w    loc_21156-loc_210AC
loc_210BA:
                dc.w    $0007
                dc.l    $E00C2000, $2000FFF0, $E80D2004, $2002FFE0
                dc.l    $E80D200C, $20060000, $F80E2014, $200AFFE0
                dc.l    $F80E2020, $20100000, $100D202C, $2016FFE0
                dc.l    $100D2034, $201A0000
loc_210F4:
                dc.w    $0001
                dc.l    $F809003C, $001EFFF4
loc_210FE:
                dc.w    $0006
                dc.l    $00082042, $2021FFE0, $080C2045, $2022FFE0
                dc.l    $00042049, $20240010, $080C204B, $20250000
                dc.l    $100D202C, $2016FFE0, $100D2034, $201A0000
loc_21130:
                dc.w    $0001
                dc.l    $F809004F, $0027FFF4
loc_2113A:
                dc.w    $0002
                dc.l    $E80E2055, $202AFFF0, $000E2061, $2030FFF0
loc_2114C:
                dc.w    $0001
                dc.l    $F007206D, $2036FFF8
loc_21156:
                dc.w    $0000                                
;=============================================================================== 
; Object 0x3E - Egg Prison / Animals Container
; [ End ]                         
;=============================================================================== 
J_Adjust2PArtPointer_25: ; loc_21158:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
                dc.w    $0000                   ; Filler
                
;=============================================================================== 
; Sub Routine TouchResponse
; [ Begin ]                         
;===============================================================================  
TouchResponse: ; loc_21160:   
                nop
                bsr     loc_21502
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                subi.w  #$0008, D2
                moveq   #$00, D5
                move.b  $0016(A0), D5
                subq.b  #$03, D5
                sub.w   D5, D3
                cmpi.b  #$39, $001A(A0)
                bne.s   loc_2118A
                addi.w  #$000C, D3
                moveq   #$0A, D5
loc_2118A:
                move.w  #$0010, D4
                add.w   D5, D5
                lea     ($FFFFB800).w, A1
                move.w  #$005F, D6
loc_21198:
                move.b  $0020(A1), D0
                bne.s   Touch_Height            ; loc_211F8
loc_2119E:                
                lea     $0040(A1), A1
                dbra    D6, loc_21198  
                moveq   #$00, D0
Touch_Sizes: ; loc_211A8:                
                rts  
                dc.b    $14, $14, $0C, $14, $14, $0C, $04, $10, $0C, $12, $10, $10, $06, $06, $18, $0C
                dc.b    $0C, $10, $10, $0C, $08, $08, $14, $10, $14, $08, $0E, $0E, $18, $18, $28, $10
                dc.b    $10, $18, $08, $10, $20, $70, $40, $20, $80, $20, $20, $20, $08, $08, $04, $04
                dc.b    $20, $08, $0C, $0C, $08, $04, $18, $04, $28, $04, $04, $08, $04, $18, $04, $28
                dc.b    $04, $20, $18, $18, $0C, $18, $48, $08, $18, $28, $10, $04, $20, $02
;===============================================================================
Touch_Height: ; loc_211F8:
                andi.w  #$003F, D0
                add.w   D0, D0
                lea     Touch_Sizes(PC, D0), A2 ; loc_211A8
                moveq   #$00, D1
                move.b  (A2)+, D1
                move.w  $0008(A1), D0
                sub.w   D1, D0
                sub.w   D2, D0
                bcc.s   loc_2121A
                add.w   D1, D1
                add.w   D1, D0
                bcs.s   loc_21220
                bra     loc_2119E
loc_2121A:                
                cmp.w   D4, D0
                bhi     loc_2119E
loc_21220:                
                moveq   #$00, D1
                move.b  (A2)+, D1
                move.w  $000C(A1), D0
                sub.w   D1, D0
                sub.w   D3, D0
                bcc.s   loc_21238
                add.w   D1, D1
                add.w   D1, D0
                bcs.s   loc_2123E
                bra     loc_2119E                
loc_21238:
                cmp.w   D5, D0
                bhi     loc_2119E
loc_2123E:
                move.b  $0020(A1), D1
                andi.b  #$C0, D1
                beq     loc_212B8
                cmpi.b  #$C0, D1
                beq     Touch_Special           ; loc_2147A
                tst.b   D1
                bmi     loc_21370
                move.b  $0020(A1), D0
                andi.b  #$3F, D0
                cmpi.b  #$06, D0
                beq.s   loc_21278
                cmpi.w  #$005A, $0030(A0)
                bcc     loc_21276
                move.b  #$04, $0024(A1)
loc_21276:                
                rts
loc_21278:                
                tst.w   $0012(A0)
                bpl.s   loc_212A4
                move.w  $000C(A0), D0
                subi.w  #$0010, D0
                cmp.w   $000C(A1), D0  
                bcs.s   loc_212B6
                neg.w   $0012(A0)
                move.w  #$FE80, $0012(A1)
                tst.b   $0025(A1)
                bne.s   loc_212B6
                move.b  #$04, $0025(A1)
                rts
loc_212A4:
                cmpi.b  #$02, $001C(A0)
                bne.s   loc_212B6
                neg.w   $0012(A0)
                move.b  #$04, $0024(A1)
loc_212B6:
                rts
loc_212B8:
                tst.b   ($FFFFFE2D).w
                bne.s   loc_212D0
                cmpi.b  #$09, $001C(A0)
                beq.s   loc_212D0
                cmpi.b  #$02, $001C(A0)
                bne     loc_21370
loc_212D0:
                tst.b   $0021(A1)
                beq.s   Touch_KillEnemy         ; loc_212FA
                neg.w   $0010(A0)
                neg.w   $0012(A0)
                asr.w   $0010(A0)
                asr.w   $0012(A0)
                move.b  #$00, $0020(A1)
                subq.b  #$01, $0021(A1)
                bne.s   loc_212F8
                bset    #$07, $0022(A1)
loc_212F8:
                rts
;===============================================================================                
Touch_KillEnemy: ; loc_212FA:
                bset    #$07, $0022(A1)
                moveq   #$00, D0
                move.w  ($FFFFF7D0).w, D0
                addq.w  #$02, ($FFFFF7D0).w
                cmpi.w  #$0006, D0
                bcs.s   loc_21312
                moveq   #$06, D0
loc_21312:
                move.w  D0, $003E(A1)
                move.w  Enemy_Points(PC, D0), D0 ; loc_21362
                cmpi.w  #$0020, ($FFFFF7D0).w
                bcs.s   loc_2132C
                move.w  #$03E8, D0
                move.w  #$000A, $003E(A1)
loc_2132C:
                bsr     AddPoints               ; loc_22FD0                
                move.b  #$27, $0000(A1)
                move.b  #$00, $0024(A1)
                tst.w   $0012(A0)
                bmi.s   loc_21352
                move.w  $000C(A0), D0
                cmp.w   $000C(A1), D0
                bcc.s   loc_2135A
                neg.w   $0012(A0)
                rts
loc_21352:
                addi.w  #$0100, $0012(A0)
                rts
loc_2135A:
                subi.w  #$0100, $0012(A0)
                rts                                
Enemy_Points: ; loc_21362:
                dc.w    $000A, $0014, $0032, $0064
loc_2136A:
                bset    #$07, $0022(A1)                                
loc_21370:
                tst.b   ($FFFFFE2D).w
                beq.s   Touch_Hurt              ; loc_2137A
loc_21376:                
                moveq   #-1, D0
                rts
;===============================================================================                
Touch_Hurt: ; loc_2137A:
                nop
                tst.w   $0030(A0)
                bne.s   loc_21376
                move.l  A1, A2  

;=============================================================================== 
; Sub Routine HurtSonic
; [ Begin ]                         
;===============================================================================                 
HurtSonic: ; loc_21384:
                tst.b   ($FFFFFE2C).w
                bne.s   HurtShield              ; loc_213AC
                tst.w   ($FFFFFE20).w
                beq     Hurt_NoRings            ; loc_2141A
                jsr     SingleObjLoad        ; loc_E772
                bne.s   HurtShield              ; loc_213AC
                move.b  #$37, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
HurtShield: ; loc_213AC:
                move.b  #$00, ($FFFFFE2C).w
                move.b  #$04, $0024(A0)
                bsr     J_Sonic_ResetOnFloor_00 ; loc_214FC
                bset    #$01, $0022(A0)
                move.w  #$FC00, $0012(A0)
                move.w  #$FE00, $0010(A0)
                btst    #$06, $0022(A0)
                beq.s   Hurt_Reverse            ; loc_213E2
                move.w  #$FE00, $0012(A0)
                move.w  #$FF00, $0010(A0)
Hurt_Reverse: ; loc_213E2:
                move.w  $0008(A0), D0
                cmp.w   $0008(A2), D0
                bcs.s   Hurt_ChkSpikes          ; loc_213F0 
                neg.w   $0010(A0)
Hurt_ChkSpikes: ; loc_213F0:
                move.w  #$0000, $0014(A0)
                move.b  #$1A, $001C(A0)
                move.w  #$0078, $0030(A0)
                move.w  #$00A3, D0
                cmpi.b  #$36, (A2)
                bne.s   loc_21410
                move.w  #$00A6, D0
loc_21410:
                jsr     (PlaySound)              ; loc_14C6
                moveq   #-1, D0
                rts
Hurt_NoRings: ; loc_2141A:
                tst.w   (Debug_mode_flag).w
                bne     HurtShield              ; loc_213AC 
;=============================================================================== 
; Sub Routine HurtSonic
; [ End ]                         
;===============================================================================  
                       
;=============================================================================== 
; Sub Routine KillSonic
; [ Begin ]                         
;===============================================================================                  
KillSonic: ; loc_21422:
                tst.w   (Debug_placement_mode).w
                bne.s   Kill_NoDeath            ; loc_21476
                move.b  #$00, ($FFFFFE2D).w
                move.b  #$06, $0024(A0)
                bsr     J_Sonic_ResetOnFloor_00 ; loc_214FC
                bset    #1, $0022(A0)
                move.w  #$F900, $0012(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0014(A0)
                move.w  $000C(A0), $0038(A0)
                move.b  #$18, $001C(A0)
                bset    #7, $0002(A0)
                move.w  #$00A3, D0
                cmpi.b  #$36, (A2)
                bne.s   loc_21470
                move.w  #$00A6, D0   
loc_21470:
                jsr     (PlaySound)              ; loc_14C6
Kill_NoDeath ; loc_21476:                
                moveq   #-1, D0
                rts
;=============================================================================== 
; Sub Routine KillSonic
; [ End ]                         
;===============================================================================
                   
Touch_Special: ; loc_2147A:
                move.b  $0020(A1), D1
                andi.b  #$3F, D1
                cmpi.b  #$0B, D1
                beq.s   Touch_Caterkiller       ; loc_214AE
                cmpi.b  #$0C, D1
                beq.s   Touch_Yadrin            ; loc_214B2
                cmpi.b  #$14, D1
                beq.s   Touch_D7                ; loc_214E4
                cmpi.b  #$15, D1
                beq.s   Touch_D7                ; loc_214E4
                cmpi.b  #$16, D1
                beq.s   Touch_D7                ; loc_214E4
                cmpi.b  #$17, D1
                beq.s   Touch_D7                ; loc_214E4
                cmpi.b  #$21, D1
                beq.s   Touch_E1                ; loc_214F6
                rts
Touch_Caterkiller: ; loc_214AE:
                bra     loc_2136A
Touch_Yadrin: ; loc_214B2:
                sub.w   D0, D5
                cmpi.w  #$0008, D5
                bcc.s   loc_214E0
                move.w  $0008(A1), D0
                subq.w  #$04, D0
                btst    #$00, $0022(A1)
                beq.s   loc_214CC
                subi.w  #$0010, D0
loc_214CC:
                sub.w   D2, D0
                bcc.s   loc_214D8
                addi.w  #$0018, D0
                bcs.s   loc_214DC
                bra.s   loc_214E0
loc_214D8:
                cmp.w   D4, D0
                bhi.s   loc_214E0
loc_214DC:
                bra     loc_21370
loc_214E0:
                bra     loc_212B8
Touch_D7: ; loc_214E4:
                move.w  A0, D1
                subi.w  #$B000, D1
                beq.s   loc_214F0
                addq.b  #$01, $0021(A1)
loc_214F0:
                addq.b  #$01, $0021(A1)
                rts
Touch_E1: ; loc_214F6:                
                addq.b  #$01, $0021(A1)
                rts              
J_Sonic_ResetOnFloor_00: ; loc_214FC:
                jmp     Sonic_ResetOnFloor      ; loc_1090C
loc_21502:
                jmp     TouchRings              ; loc_DF6C 
;=============================================================================== 
; Sub Routine TouchResponse
; [ End ]                         
;=============================================================================== 
                
;===============================================================================
; Special Stage - Sub-routine
; [ Begin ]              
;===============================================================================
S1_SS_Show_Layout: ; loc_21508:
                bsr     loc_2164A
                bsr     loc_2188A
                move.w  D5, -(A7)
                lea     ($FFFF8000).w, A1
                move.b  ($FFFFF750).w, D0
                andi.b  #$FC, D0
                jsr     CalcSine                ; loc_320A
                move.w  D0, D4
                move.w  D1, D5
                muls.w  #$0018, D4
                muls.w  #$0018, D5
                moveq   #$00, D2
                move.w  ($FFFFEE00).w, D2
                divu.w  #$0018, D2
                swap.w  D2
                neg.w   D2
                addi.w  #$FF4C, D2
                moveq   #$00, D3
                move.w  ($FFFFEE04).w, D3
                divu.w  #$0018, D3
                swap.w  D3
                neg.w   D3
                addi.w  #$FF4C, D3
                move.w  #$000F, D7
loc_21558:                
                movem.w D0-D2, -(A7)
                movem.w D0/D1, -(A7)
                neg.w   D0
                muls.w  D2, D1
                muls.w  D3, D0
                move.l  D0, D6
                add.l   D1, D6
                movem.w (A7)+, D0/D1
                muls.w  D2, D0
                muls.w  D3, D1
                add.l   D0, D1
                move.l  D6, D2
                move.w  #$000F, D6
loc_2157A:                
                move.l  D2, D0
                asr.l   #$08, D0
                move.w  D0, (A1)+
                move.l  D1, D0
                asr.l   #$08, D0
                move.w  D0, (A1)+
                add.l   D5, D2
                add.l   D4, D1
                dbra    D6, loc_2157A
                movem.w (A7)+, D0-D2
                addi.w  #$0018, D3
                dbra    D7, loc_21558
                move.w  (A7)+, D5
                lea     ($FFFF0000), A0
                moveq   #$00, D0
                move.w  ($FFFFEE04).w, D0
                divu.w  #$0018, D0
                mulu.w  #$0080, D0
                adda.l  D0, A0
                moveq   #$00, D0
                move.w  ($FFFFEE00).w, D0
                divu.w  #$0018, D0
                adda.w  D0, A0
                lea     ($FFFF8000).w, A4
                move.w  #$000F, D7
loc_215C6:                
                move.w  #$000F, D6
loc_215CA:                
                moveq   #$00, D0
                move.b  (A0)+, D0
                beq.s   loc_21622
                cmpi.b  #$4E, D0
                bhi.s   loc_21622
                move.w  (A4), D3
                addi.w  #$0120, D3
                cmpi.w  #$0070, D3
                bcs.s   loc_21622
                cmpi.w  #$01D0, D3
                bcc.s   loc_21622
                move.w  $0002(A4), D2
                addi.w  #$00F0, D2
                cmpi.w  #$0070, D2
                bcs.s   loc_21622
                cmpi.w  #$0170, D2
                bcc.s   loc_21622
                lea     ($FFFF4000), A5
                lsl.w   #$03, D0
                lea     $00(A5, D0), A5
                move.l  (A5)+, A1
                move.w  (A5)+, D1
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.w  (A5)+, A3
                moveq   #$00, D1
                move.b  (A1)+, D1
                subq.b  #$01, D1
                bmi.s   loc_21622
                jsr     (loc_D6F0)
loc_21622:
                addq.w  #$04, A4
                dbra    D6, loc_215CA
                lea     $0070(A0), A0
                dbra    D7, loc_215C6
                move.b  D5, ($FFFFF62C).w
                cmpi.b  #$50, D5
                beq.s   loc_21642
                move.l  #$00000000, (A2)
                rts
loc_21642:
                move.b  #$00, -5(A2)
                rts  
loc_2164A:
                lea     ($FFFF400C), A1
                moveq   #$00, D0
                move.b  ($FFFFF750).w, D0
                lsr.b   #$02, D0
                andi.w  #$000F, D0
                moveq   #$23, D1
loc_2165E:                
                move.w  D0, (A1)
                addq.w  #$08, A1
                dbra    D1, loc_2165E
                lea     ($FFFF4005), A1
                subq.b  #$01, ($FFFFFEC2).w
                bpl.s   loc_21682
                move.b  #$07, ($FFFFFEC2).w
                addq.b  #$01, ($FFFFFEC3).w
                andi.b  #$03, ($FFFFFEC3).w
loc_21682:
                move.b  ($FFFFFEC3).w, $01D0(A1)
                subq.b  #$01, ($FFFFFEC4).w
                bpl.s   loc_2169E
                move.b  #$07, ($FFFFFEC4).w
                addq.b  #$01, ($FFFFFEC5).w
                andi.b  #$01, ($FFFFFEC5).w
loc_2169E:
                move.b  ($FFFFFEC5).w, D0
                move.b  D0, $0138(A1)
                move.b  D0, $0160(A1)
                move.b  D0, $0148(A1)
                move.b  D0, $0150(A1)
                move.b  D0, $01D8(A1)
                move.b  D0, $01E0(A1)
                move.b  D0, $01E8(A1)
                move.b  D0, $01F0(A1)
                move.b  D0, $01F8(A1)
                move.b  D0, $0200(A1)
                subq.b  #$01, ($FFFFFEC6).w
                bpl.s   loc_216E0
                move.b  #$04, ($FFFFFEC6).w
                addq.b  #$01, ($FFFFFEC7).w
                andi.b  #$03, ($FFFFFEC7).w
loc_216E0:
                move.b  ($FFFFFEC7).w, D0
                move.b  D0, $0168(A1)
                move.b  D0, $0170(A1)
                move.b  D0, $0178(A1)
                move.b  D0, $0180(A1)
                subq.b  #$01, ($FFFFFEC0).w
                bpl.s   loc_2170A
                move.b  #$07, ($FFFFFEC0).w
                subq.b  #$01, ($FFFFFEC1).w
                andi.b  #$07, ($FFFFFEC1).w
loc_2170A:
                lea     ($FFFF4016), A1
                lea     (S1SS_WaRiVramSet), A0  ; loc_217F4
                moveq   #$00, D0
                move.b  ($FFFFFEC1).w, D0
                add.w   D0, D0
                lea     $00(A0, D0), A0
                move.w  (A0), (A1)
                move.w  $0002(A0), $0008(A1)
                move.w  $0004(A0), $0010(A1)
                move.w  $0006(A0), $0018(A1)
                move.w  $0008(A0), $0020(A1)
                move.w  $000A(A0), $0028(A1)
                move.w  $000C(A0), $0030(A1)
                move.w  $000E(A0), $0038(A1)
                adda.w  #$0020, A0
                adda.w  #$0048, A1
                move.w  (A0), (A1)
                move.w  $0002(A0), $0008(A1)
                move.w  $0004(A0), $0010(A1)
                move.w  $0006(A0), $0018(A1)
                move.w  $0008(A0), $0020(A1)
                move.w  $000A(A0), $0028(A1)
                move.w  $000C(A0), $0030(A1)
                move.w  $000E(A0), $0038(A1)
                adda.w  #$0020, A0
                adda.w  #$0048, A1
                move.w  (A0), (A1)
                move.w  $0002(A0), $0008(A1)
                move.w  $0004(A0), $0010(A1)
                move.w  $0006(A0), $0018(A1)
                move.w  $0008(A0), $0020(A1)
                move.w  $000A(A0), $0028(A1)
                move.w  $000C(A0), $0030(A1)
                move.w  $000E(A0), $0038(A1)
                adda.w  #$0020, A0
                adda.w  #$0048, A1
                move.w  (A0), (A1)
                move.w  $0002(A0), $0008(A1)
                move.w  $0004(A0), $0010(A1)
                move.w  $0006(A0), $0018(A1)
                move.w  $0008(A0), $0020(A1)
                move.w  $000A(A0), $0028(A1)
                move.w  $000C(A0), $0030(A1)
                move.w  $000E(A0), $0038(A1)
                adda.w  #$0020, A0
                adda.w  #$0048, A1
                rts   
S1SS_WaRiVramSet: ; loc_217F4:
                dc.w    $0142, $6142, $0142, $0142, $0142, $0142, $0142, $6142
                dc.w    $0142, $6142, $0142, $0142, $0142, $0142, $0142, $6142
                dc.w    $2142, $0142, $2142, $2142, $2142, $2142, $2142, $0142
                dc.w    $2142, $0142, $2142, $2142, $2142, $2142, $2142, $0142
                dc.w    $4142, $2142, $4142, $4142, $4142, $4142, $4142, $2142
                dc.w    $4142, $2142, $4142, $4142, $4142, $4142, $4142, $2142
                dc.w    $6142, $4142, $6142, $6142, $6142, $6142, $6142, $4142
                dc.w    $6142, $4142, $6142, $6142, $6142, $6142, $6142, $4142                
loc_21874:
                lea     ($FFFF4400), A2
                move.w  #$001F, D0
loc_2187E:                
                tst.b   (A2)
                beq.s   loc_21888
                addq.w  #$08, A2
                dbra    D0, loc_2187E
loc_21888:
                rts
loc_2188A:               
                lea     ($FFFF4400), A0
                move.w  #$001F, D7
loc_21894:                
                moveq   #$00, D0
                move.b  (A0), D0
                beq.s   loc_218A2
                lsl.w   #$02, D0
                move.l  S1SS_AniIndex-$04(PC, D0), A1 ; loc_218AA
                jsr     (A1)
loc_218A2:
                addq.w  #$08, A0
                dbra    D7, loc_21894
                rts 
;===============================================================================                
S1SS_AniIndex: ; loc_218AA: 
                dc.l    loc_218C2
                dc.l    loc_218F2
                dc.l    loc_21928
                dc.l    loc_21958
                dc.l    loc_2198E
                dc.l    loc_219CE
loc_218C2:
                subq.b  #$01, $0002(A0)
                bpl.s   loc_218EA
                move.b  #$05, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  loc_218EC(PC, D0), D0
                move.b  D0, (A1)
                bne.s   loc_218EA
                clr.l   (A0)
                clr.l   $0004(A0)                
loc_218EA:
                rts
loc_218EC:
                dc.b    $42, $43, $44, $45, $00, $00
loc_218F2:
                subq.b  #$01, $0002(A0)
                bpl.s   loc_21920
                move.b  #$07, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  loc_21922(PC, D0), D0
                bne.s   loc_2191E
                clr.l   (A0)
                clr.l   $0004(A0)
                move.b  #$25, (A1)
                rts
loc_2191E:
                move.b  D0, (A1)
loc_21920:
                rts
loc_21922:
                dc.b    $32, $33, $32, $33, $00, $00
loc_21928:
                subq.b  #$01, $0002(A0)
                bpl.s   loc_21950
                move.b  #$05, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  loc_21952(PC, D0), D0
                move.b  D0, (A1)
                bne.s   loc_21950
                clr.l   (A0)
                clr.l   $0004(A0)
loc_21950:
                rts
loc_21952:
                dc.b    $46, $47, $48, $49, $00, $00
loc_21958:
                subq.b  #$01, $0002(A0)
                bpl.s   loc_21986
                move.b  #$07, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  loc_21988(PC, D0), D0
                bne.s   loc_21984
                clr.l   (A0)
                clr.l   $0004(A0)
                move.b  #$2B, (A1)
                rts
loc_21984:
                move.b  D0, (A1)
loc_21986:
                rts
loc_21988:
                dc.b    $2B, $31, $2B, $31, $00, $00
loc_2198E:
                subq.b  #$01, $0002(A0)
                bpl.s   loc_219C6
                move.b  #$05, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  loc_219C8(PC, D0), D0
                move.b  D0, (A1)
                bne.s   loc_219C6
                clr.l   (A0)
                clr.l   $0004(A0)
                move.b  #$04, ($FFFFB024).w
                move.w  #$00A8, D0
                jsr     (PlaySound)              ; loc_14C6
loc_219C6:
                rts
loc_219C8:
                dc.b    $46, $47, $48, $49, $00, $00
loc_219CE:
                subq.b  #$01, $0002(A0)
                bpl.s   loc_219FA
                move.b  #$01, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  loc_219FC(PC, D0), D0
                move.b  D0, (A1)
                bne.s   loc_219FA
                move.b  $0004(A0), (A1)
                clr.l   (A0)
                clr.l   $0004(A0)
loc_219FA:
                rts    
loc_219FC:                           
                dc.b    $4B, $4C, $4D, $4E, $4B, $4C, $4D, $4E, $00, $00                
S1SS_LayoutIndex: ; loc_21A06:                
                dc.l    Special_Stage_1   ; loc_31CEA                             
                dc.l    Special_Stage_2   ; loc_31F64
                dc.l    Special_Stage_3   ; loc_32376        
                dc.l    Special_Stage_4   ; loc_326D2
                dc.l    Special_Stage_5   ; loc_32BAC
                dc.l    Special_Stage_6   ; loc_3305C
S1SS_StartLoc: ; loc_21A1E:
                dc.l    $03D002E0   ; Sonic Start Position in Special Stage 1
                dc.l    $03280574   ; Sonic Start Position in Special Stage 2
                dc.l    $04E402E0   ; Sonic Start Position in Special Stage 3
                dc.l    $03AD02E0   ; Sonic Start Position in Special Stage 4
                dc.l    $034006B8   ; Sonic Start Position in Special Stage 5
                dc.l    $049B0358   ; Sonic Start Position in Special Stage 6
S1_Special_Stage_Load: ; loc_21A36:
                moveq   #$00, D0
                move.b  ($FFFFFE16).w, D0
                addq.b  #$01, ($FFFFFE16).w
                cmpi.b  #$06, ($FFFFFE16).w
                bcs.s   loc_21A4E
                move.b  #$00, ($FFFFFE16).w
loc_21A4E:
                cmpi.b  #$06, ($FFFFFE57).w
                beq.s   loc_21A70
                moveq   #$00, D1
                move.b  ($FFFFFE57).w, D1
                subq.b  #$01, D1
                bcs.s   loc_21A70
                lea     ($FFFFFE58).w, A3
loc_21A64:                
                cmp.b   $00(A3, D1), D0
                bne.s   loc_21A6C
                bra.s   S1_Special_Stage_Load   ; loc_21A36
loc_21A6C:
                dbra    D1, loc_21A64
loc_21A70:
                lsl.w   #$02, D0
                lea     S1SS_StartLoc(PC, D0), A1 ; loc_21A1E
                move.w  (A1)+, ($FFFFB008).w
                move.w  (A1)+, ($FFFFB00C).w
                move.l  S1SS_LayoutIndex(PC, D0), A0 ; loc_21A06
                lea     ($FFFF4000), A1
                move.w  #$0000, D0
                jsr     EniDec               ; loc_18DA
                lea     ($FFFF0000), A1
                move.w  #$0FFF, D0
loc_21A9C:                
                clr.l   (A1)+
                dbra    D0, loc_21A9C
                lea     ($FFFF1020), A1
                lea     ($FFFF4000), A0
                moveq   #$3F, D1
loc_21AB0:                
                moveq   #$3F, D2
loc_21AB2:                
                move.b  (A0)+, (A1)+
                dbra    D2, loc_21AB2
                lea     $0040(A1), A1
                dbra    D1, loc_21AB0
                lea     ($FFFF4008), A1
                lea     (loc_21AF2), A0
                moveq   #$4D, D1
loc_21ACE:                
                move.l  (A0)+, (A1)+
                move.w  #$0000, (A1)+
                move.b  -4(A0), -1(A1)
                move.w  (A0)+, (A1)+
                dbra    D1, loc_21ACE
                lea     ($FFFF4400), A1
                move.w  #$003F, D1
loc_21AEA:                
                clr.l   (A1)+
                dbra    D1, loc_21AEA
                rts
loc_21AF2:
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6                 
                dc.w    $0142 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0142 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0142 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0142 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $2142 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $4142                      
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $4142 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $4142   
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $6142   
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $6142   
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $6142   
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $6142  
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $6142 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $6142 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $6142 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $6142 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $6142  
                dc.l    S1_Obj_0x47_Mappings ; loc_1401E
                dc.w    $023B
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0570
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0251
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0370
                dc.l    SS_Up_Mappings          ; loc_21CFA
                dc.w    $0263
                dc.l    SS_Down_Mappings        ; loc_21D0A
                dc.w    $0263
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6                
                dc.w    $22F0
                dc.l    SS_Red_White_Ball_Mappings ; loc_21CDA
                dc.w    $0470
                dc.l    SS_Red_White_Ball_Mappings ; loc_21CDA
                dc.w    $05F0
                dc.l    SS_Red_White_Ball_Mappings ; loc_21CDA
                dc.w    $65F0
                dc.l    SS_Red_White_Ball_Mappings ; loc_21CDA
                dc.w    $25F0
                dc.l    SS_Red_White_Ball_Mappings ; loc_21CDA
                dc.w    $45F0
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $02F0
                dc.l    (($01<<$18)|S1_Obj_0x47_Mappings) ; loc_1401E
                dc.w    $023B
                dc.l    (($02<<$18)|S1_Obj_0x47_Mappings) ; loc_1401E
                dc.w    $023B 
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0797
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $07A0
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $07A9
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $0797
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $07A0
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $07A9
                dc.l    Rings_Mappings          ; loc_B036
                dc.w    $27B2
                dc.l    SS_Emerald_Mappings     ; loc_21D22
                dc.w    $0770
                dc.l    SS_Emerald_Mappings     ; loc_21D22
                dc.w    $2770
                dc.l    SS_Emerald_Mappings     ; loc_21D22
                dc.w    $4770
                dc.l    SS_Emerald_Mappings     ; loc_21D22                   
                dc.w    $6770
                dc.l    SS_Red_Emerald_Mappings ; loc_21D1A
                dc.w    $0770
                dc.l    SS_Gray_Emerald_Mappings ; loc_21D1E
                dc.w    $0770
                dc.l    SS_Reverse_Goal_Mappings ; loc_21CC6
                dc.w    $04F0
                dc.l    (($04<<$18)|Rings_Mappings) ; loc_B036
                dc.w    $27B2
                dc.l    (($05<<$18)|Rings_Mappings) ; loc_B036                   
                dc.w    $27B2
                dc.l    (($06<<$18)|Rings_Mappings) ; loc_B036  
                dc.w    $27B2
                dc.l    (($07<<$18)|Rings_Mappings) ; loc_B036 
                dc.w    $27B2
                dc.l    SS_Red_White_Ball_Mappings ; loc_21CDA
                dc.w    $23F0
                dc.l    (($01<<$18)|SS_Red_White_Ball_Mappings) ; loc_21CDA
                dc.w    $23F0
                dc.l    (($02<<$18)|SS_Red_White_Ball_Mappings) ; loc_21CDA
                dc.w    $23F0
                dc.l    (($03<<$18)|SS_Red_White_Ball_Mappings) ; loc_21CDA
                dc.w    $23F0  
                dc.l    (($02<<$18)|SS_Reverse_Goal_Mappings) ; loc_21CC6
                dc.w    $04F0
                dc.l    SS_Red_White_Ball_Mappings ; loc_21CDA                  
                dc.w    $05F0                   
                dc.l    SS_Red_White_Ball_Mappings ; loc_21CDA 
                dc.w    $65F0
                dc.l    SS_Red_White_Ball_Mappings ; loc_21CDA 
                dc.w    $25F0
                dc.l    SS_Red_White_Ball_Mappings ; loc_21CDA 
                dc.w    $45F0     
SS_Reverse_Goal_Mappings: ; loc_21CC6:   
                dc.w    loc_21CCC-SS_Reverse_Goal_Mappings
                dc.w    loc_21CD2-SS_Reverse_Goal_Mappings
                dc.w    loc_21CD8-SS_Reverse_Goal_Mappings
loc_21CCC:
                dc.b    $01
                dc.b    $F4, $0A, $00, $00, $F4        ; Sonic 1 Mappings Format
loc_21CD2:
                dc.b    $01
                dc.b    $F4, $0A, $00, $09, $F4        ; Sonic 1 Mappings Format
loc_21CD8:
                dc.b    $00
                dc.b    $00                     ; Filler     
SS_Red_White_Ball_Mappings: ; loc_21CDA:
                dc.w    loc_21CE2-SS_Red_White_Ball_Mappings
                dc.w    loc_21CE8-SS_Red_White_Ball_Mappings
                dc.w    loc_21CEE-SS_Red_White_Ball_Mappings
                dc.w    loc_21CF4-SS_Red_White_Ball_Mappings
loc_21CE2:
                dc.b    $01
                dc.b    $F4, $0A, $00, $00, $F4        ; Sonic 1 Mappings Format
loc_21CE8:
                dc.b    $01
                dc.b    $F4, $0A, $08, $00, $F4        ; Sonic 1 Mappings Format
loc_21CEE:
                dc.b    $01
                dc.b    $F4, $0A, $18, $00, $F4        ; Sonic 1 Mappings Format
loc_21CF4:
                dc.b    $01
                dc.b    $F4, $0A, $10, $00, $F4        ; Sonic 1 Mappings Format   
SS_Up_Mappings: ; loc_21CFA:
                dc.w    loc_21CFE-SS_Up_Mappings
                dc.w    loc_21D04-SS_Up_Mappings
loc_21CFE:
                dc.b    $01
                dc.b    $F4, $0A, $00, $00, $F4        ; Sonic 1 Mappings Format
loc_21D04:
                dc.b    $01
                dc.b    $F4, $0A, $00, $12, $F4        ; Sonic 1 Mappings Format 
SS_Down_Mappings: ; loc_21D0A:
                dc.w    loc_21D0E-SS_Down_Mappings
                dc.w    loc_21D14-SS_Down_Mappings
loc_21D0E:
                dc.b    $01
                dc.b    $F4, $0A, $00, $09, $F4        ; Sonic 1 Mappings Format 
loc_21D14:
                dc.b    $01
                dc.b    $F4, $0A, $00, $12, $F4        ; Sonic 1 Mappings Format
SS_Red_Emerald_Mappings: ; loc_21D1A:
                dc.w    loc_21D26-SS_Red_Emerald_Mappings
                dc.w    loc_21D38-SS_Red_Emerald_Mappings
SS_Gray_Emerald_Mappings: ; loc_21D1E:
                dc.w    loc_21D2C-SS_Gray_Emerald_Mappings
                dc.w    loc_21D38-SS_Gray_Emerald_Mappings                
SS_Emerald_Mappings: ; loc_21D22:  {Blue / Yellow / Purple / Green}  
                dc.w    loc_21D32-SS_Emerald_Mappings
                dc.w    loc_21D38-SS_Emerald_Mappings
loc_21D26:
                dc.b    $01
                dc.b    $F8, $05, $00, $00, $F8        ; Sonic 1 Mappings Format   
loc_21D2C:
                dc.b    $01
                dc.b    $F8, $05, $00, $04, $F8        ; Sonic 1 Mappings Format                
loc_21D32:
                dc.b    $01
                dc.b    $F8, $05, $00, $08, $F8        ; Sonic 1 Mappings Format
loc_21D38:
                dc.b    $01
                dc.b    $F8, $05, $00, $0C, $F8        ; Sonic 1 Mappings Format                                                       
;===============================================================================
; Special Stage - Sub-routine
; [ End ]              
;===============================================================================  
                nop                             ; Filler                        
;=============================================================================== 
; Object 0x09 - Sonic In Special Stage
; [ Begin ]                         
;===============================================================================                 
Obj_0x09_Sonic_In_Special_Stage: ; loc_21D40:
                tst.w   (Debug_placement_mode).w
                beq.s   Sonic_In_SS_Normal      ; loc_21D4E
                bsr     S1SS_FixCamera          ; loc_21F76
                bra     DebugMode              ; loc_23B70
Sonic_In_SS_Normal: ; loc_21D4E:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_21D5C(PC, D0), D1
                jmp     loc_21D5C(PC, D1)
loc_21D5C:                
                dc.w    loc_21D64-loc_21D5C
                dc.w    loc_21DA4-loc_21D5C
                dc.w    loc_21FA0-loc_21D5C
                dc.w    loc_21FF4-loc_21D5C
loc_21D64:
                addq.b  #$02, $0024(A0)    
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.l  #MapUnc_Sonic, $0004(A0) ; loc_614C0
                move.w  #$0780, $0002(A0)
                bsr     J_Adjust2PArtPointer_26 ; loc_223E4
                move.b  #$04, $0001(A0)
                move.b  #$00, $0018(A0)
                move.b  #$02, $001C(A0)
                bset    #$02, $0022(A0)
                bset    #$01, $0022(A0)
loc_21DA4:
                tst.w   (Debug_mode_flag).w
                beq.s   loc_21DB8
                btst    #$04, ($FFFFF605).w
                beq.s   loc_21DB8
                move.w  #$0001, (Debug_placement_mode).w
loc_21DB8:
                move.b  #$00, $0030(A0)
                moveq   #$00, D0
                move.b  $0022(A0), D0
                andi.w  #$0002, D0
                move.w  SonicInSS_Modes(PC, D0), D1 ; loc_21DDC
                jsr     SonicInSS_Modes(PC, D1)     ; loc_21DDC
                jsr     LoadSonicDynPLC  ; (loc_10DDC)
                jmp     DisplaySprite           ; (loc_D3C2)
SonicInSS_Modes: ; loc_21DDC:
                dc.w    SonicInSS_OnWall-SonicInSS_Modes ; loc_21DE0
                dc.w    SonicInSS_InAir-SonicInSS_Modes  ; loc_21DEE
SonicInSS_OnWall: ; loc_21DE0:
                bsr     SonicInSS_Jump          ; loc_21F16
                bsr     SonicInSS_Move          ; loc_21E20
                bsr     SonicInSS_Fall          ; loc_22016
                bra.s   SonicInSS_Display       ; loc_21DFA
SonicInSS_InAir: ; loc_21DEE:
                bsr     SonicInSS_Null          ; loc_21F5A
                bsr     SonicInSS_Move          ; loc_21E20
                bsr     SonicInSS_Fall          ; loc_22016
SonicInSS_Display: ; loc_21DFA:
                bsr     SonicInSS_ChkItems      ; loc_22112
                bsr     SonicInSS_ChkItems2     ; loc_2224E
                jsr     SpeedToPos              ; (loc_D27A)
                bsr     S1SS_FixCamera          ; loc_21F76
                move.w  ($FFFFF750).w, D0
                add.w   ($FFFFF752).w, D0
                move.w  D0, ($FFFFF750).w
                jsr     Sonic_Animate           ; (loc_10AB2)
                rts
SonicInSS_Move: ; loc_21E20:
                btst    #$02, ($FFFFF602).w
                beq.s   loc_21E2C
                bsr     SonicInSS_MoveLeft          ; loc_21EB8
loc_21E2C:
                btst    #$03, ($FFFFF602).w
                beq.s   loc_21E38
                bsr     SonicInSS_MoveRight     ; loc_21EE8
loc_21E38:
                move.b  ($FFFFF602).w, D0
                andi.b  #$0C, D0
                bne.s   loc_21E68
                move.w  $0014(A0), D0
                beq.s   loc_21E68
                bmi.s   loc_21E5A
                subi.w  #$000C, D0
                bcc.s   loc_21E54
                move.w  #$0000, D0
loc_21E54:
                move.w  D0, $0014(A0)
                bra.s   loc_21E68
loc_21E5A:
                addi.w  #$000C, D0
                bcc.s   loc_21E64
                move.w  #$0000, D0
loc_21E64:
                move.w  D0, $0014(A0)
loc_21E68:
                move.b  ($FFFFF750).w, D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                neg.b   D0
                jsr     CalcSine                ; loc_320A
                muls.w  $0014(A0), D1
                add.l   D1, $0008(A0)
                muls.w  $0014(A0), D0
                add.l   D0, $000C(A0)
                movem.l D0/D1, -(A7)
                move.l  $000C(A0), D2
                move.l  $0008(A0), D3
                bsr     loc_220A8
                beq.s   loc_21EB2
                movem.l (A7)+, D0/D1
                sub.l   D1, $0008(A0)
                sub.l   D0, $000C(A0)
                move.w  #$0000, $0014(A0)
                rts
loc_21EB2:
                movem.l (A7)+, D0/D1
                rts
                
;=============================================================================== 
; Sub Routine SonicInSS_MoveLeft
; [ Begin ]                         
;===============================================================================                 
SonicInSS_MoveLeft: ; loc_21EB8:
                bset    #$00, $0022(A0)
                move.w  $0014(A0), D0
                beq.s   loc_21EC6
                bpl.s   loc_21EDA
loc_21EC6:
                subi.w  #$000C, D0
                cmpi.w  #$F800, D0
                bgt.s   loc_21ED4
                move.w  #$F800, D0
loc_21ED4:
                move.w  D0, $0014(A0)
                rts
loc_21EDA:
                subi.w  #$0040, D0
                bcc.s   loc_21EE2
                nop
loc_21EE2:
                move.w  D0, $0014(A0)
                rts
;=============================================================================== 
; Sub Routine SonicInSS_MoveLeft
; [ End ]                         
;===============================================================================                 

;=============================================================================== 
; Sub Routine SonicInSS_MoveRight
; [ Begin ]                         
;===============================================================================                 
SonicInSS_MoveRight: ; loc_21EE8:
                bclr    #$00, $0022(A0)
                move.w  $0014(A0), D0
                bmi.s   loc_21F08
                addi.w  #$000C, D0
                cmpi.w  #$0800, D0
                blt.s   loc_21F02
                move.w  #$0800, D0
loc_21F02:
                move.w  D0, $0014(A0)
                bra.s   loc_21F14
loc_21F08:
                addi.w  #$0040, D0
                bcc.s   loc_21F10
                nop
loc_21F10:
                move.w  D0, $0014(A0)
loc_21F14:
                rts
;=============================================================================== 
; Sub Routine SonicInSS_MoveRight
; [ End ]                         
;===============================================================================
                 
;=============================================================================== 
; Sub Routine SonicInSS_Jump
; [ Begin ]                         
;===============================================================================                 
SonicInSS_Jump: ; loc_21F16:
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq.s   loc_21F58
                move.b  ($FFFFF750).w, D0
                andi.b  #$FC, D0
                neg.b   D0
                subi.b  #$40, D0
                jsr     CalcSine                ; loc_320A
                muls.w  #$0680, D1
                asr.l   #$08, D1
                move.w  D1, $0010(A0)
                muls.w  #$0680, D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
                bset    #$01, $0022(A0)
                move.w  #$00A0, D0
                jsr     (PlaySound)              ; loc_14C6
loc_21F58:
                rts
;=============================================================================== 
; Sub Routine SonicInSS_Jump
; [ End ]                         
;===============================================================================                 

;=============================================================================== 
; Sub Routine SonicInSS_Null
; [ Begin ]                         
;===============================================================================                 
SonicInSS_Null: ; loc_21F5A:   
                rts
;=============================================================================== 
; Sub Routine SonicInSS_Null
; [ End ]                         
;===============================================================================                 

                move.w  #$FC00, D1
                cmp.w   $0012(A0), D1
                ble.s   loc_21F74
                move.b  ($FFFFF602).w, D0
                andi.b  #$70, D0
                bne.s   loc_21F74
                move.w  D1, $0012(A0)
loc_21F74:
                rts
                
;=============================================================================== 
; Sub Routine S1SS_FixCamera
; [ Begin ]                         
;===============================================================================  
S1SS_FixCamera: ; loc_21F76:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                move.w  ($FFFFEE00).w, D0
                subi.w  #$00A0, D3
                bcs.s   loc_21F8E
                sub.w   D3, D0
                sub.w   D0, ($FFFFEE00).w
loc_21F8E:
                move.w  ($FFFFEE04).w, D0
                subi.w  #$0070, D2
                bcs.s   loc_21F9E
                sub.w   D2, D0
                sub.w   D0, ($FFFFEE04).w
loc_21F9E:
                rts
;=============================================================================== 
; Sub Routine S1SS_FixCamera
; [ End ]                         
;===============================================================================                  
loc_21FA0:
                addi.w  #$0040, ($FFFFF752).w
                cmpi.w  #$1800, ($FFFFF752).w
                bne.s   loc_21FB4
                move.b  #$0C, ($FFFFF600).w
loc_21FB4:
                cmpi.w  #$3000, ($FFFFF752).w
                blt.s   loc_21FD2
                move.w  #$0000, ($FFFFF752).w
                move.w  #$4000, ($FFFFF750).w
                addq.b  #$02, $0024(A0)
                move.w  #$003C, $0038(A0)
loc_21FD2:
                move.w  ($FFFFF750).w, D0
                add.w   ($FFFFF752).w, D0
                move.w  D0, ($FFFFF750).w
                jsr     Sonic_Animate           ; (loc_10AB2)
                jsr     LoadSonicDynPLC  ; (loc_10DDC)
                bsr     S1SS_FixCamera          ; loc_21F76
                jmp     DisplaySprite           ; (loc_D3C2)
loc_21FF4:
                subq.w  #$01, $0038(A0)
                bne.s   loc_22000
                move.b  #$0C, ($FFFFF600).w
loc_22000:
                jsr     Sonic_Animate           ; (loc_10AB2)
                jsr     LoadSonicDynPLC  ; (loc_10DDC)
                bsr     S1SS_FixCamera          ; loc_21F76
                jmp     DisplaySprite           ; (loc_D3C2)
                
;=============================================================================== 
; Sub Routine SonicInSS_Fall
; [ Begin ]                         
;===============================================================================                  
SonicInSS_Fall: ; loc_22016:
                move.l  $000C(A0), D2
                move.l  $0008(A0), D3
                move.b  ($FFFFF750).w, D0
                andi.b  #$FC, D0
                jsr     CalcSine                ; loc_320A
                move.w  $0010(A0), D4
                ext.l   D4
                asl.l   #$08, D4
                muls.w  #$002A, D0
                add.l   D4, D0
                move.w  $0012(A0), D4
                ext.l   D4
                asl.l   #$08, D4
                muls.w  #$002A, D1
                add.l   D4, D1
                add.l   D0, D3
                bsr     loc_220A8
                beq.s   loc_22070
                sub.l   D0, D3
                moveq   #$00, D0
                move.w  D0, $0010(A0)
                bclr    #$01, $0022(A0)
                add.l   D1, D2
                bsr     loc_220A8
                beq.s   loc_22086
                sub.l   D1, D2
                moveq   #$00, D1
                move.w  D1, $0012(A0)
                rts
loc_22070:
                add.l   D1, D2
                bsr     loc_220A8
                beq.s   loc_22094
                sub.l   D1, D2
                moveq   #$00, D1
                move.w  D1, $0012(A0)
                bclr    #$01, $0022(A0)
loc_22086:
                asr.l   #$08, D0
                asr.l   #$08, D1
                move.w  D0, $0010(A0)
                move.w  D1, $0012(A0)
                rts
loc_22094:
                asr.l   #$08, D0
                asr.l   #$08, D1
                move.w  D0, $0010(A0)
                move.w  D1, $0012(A0)
                bset    #$01, $0022(A0)
                rts
;=============================================================================== 
; Sub Routine SonicInSS_Fall
; [ End ]                         
;===============================================================================  
                
loc_220A8:
                lea     ($FFFF0000), A1
                moveq   #$00, D4
                swap.w  D2
                move.w  D2, D4
                swap.w  D2
                addi.w  #$0044, D4
                divu.w  #$0018, D4
                mulu.w  #$0080, D4
                adda.l  D4, A1
                moveq   #$00, D4
                swap.w  D3
                move.w  D3, D4
                swap.w  D3
                addi.w  #$0014, D4
                divu.w  #$0018, D4
                adda.w  D4, A1
                moveq   #$00, D5
                move.b  (A1)+, D4
                bsr.s   loc_220F0
                move.b  (A1)+, D4
                bsr.s   loc_220F0
                adda.w  #$007E, A1
                move.b  (A1)+, D4
                bsr.s   loc_220F0
                move.b  (A1)+, D4
                bsr.s   loc_220F0
                tst.b   D5
                rts
loc_220F0:
                beq.s   loc_22104
                cmpi.b  #$28, D4
                beq.s   loc_22104
                cmpi.b  #$3A, D4
                bcs.s   loc_22106
                cmpi.b  #$4B, D4
                bcc.s   loc_22106
loc_22104:
                rts
loc_22106:
                move.b  D4, $0030(A0)
                move.l  A1, $0032(A0)                
                moveq   #-1, D5
                rts
                
;=============================================================================== 
; Sub Routine SonicInSS_ChkItems
; [ Begin ]                         
;===============================================================================                  
SonicInSS_ChkItems: ; loc_22112:
                lea     ($FFFF0000), A1
                moveq   #$00, D4
                move.w  $000C(A0), D4
                addi.w  #$0050, D4
                divu.w  #$0018, D4
                mulu.w  #$0080, D4
                adda.l  D4, A1
                moveq   #$00, D4
                move.w  $0008(A0), D4
                addi.w  #$0020, D4
                divu.w  #$0018, D4
                adda.w  D4, A1
                move.b  (A1), D4
                bne.s   loc_2214C
                tst.b   $003A(A0)
                bne     loc_2221C
                moveq   #$00, D4
                rts
loc_2214C:
                cmpi.b  #$3A, D4
                bne.s   loc_22188
                bsr     loc_21874
                bne.s   loc_22160
                move.b  #$01, (A2)
                move.l  A1, $0004(A2)
loc_22160:
                jsr     (CollectRing)
                cmpi.w  #$0032, ($FFFFFE20).w
                bcs.s   loc_22184
                bset    #$00, ($FFFFFE1B).w
                bne.s   loc_22184
                addq.b  #$01, ($FFFFFE18).w
                move.w  #$00BF, D0
                jsr     (PlayMusic)            ; loc_14C0
loc_22184:
                moveq   #$00, D4
                rts
loc_22188:
                cmpi.b  #$28, D4
                bne.s   loc_221B2
                bsr     loc_21874
                bne.s   loc_2219C
                move.b  #$03, (A2)
                move.l  A1, $0004(A2)
loc_2219C:
                addq.b  #$01, ($FFFFFE12).w
                addq.b  #$01, ($FFFFFE1C).w
                move.w  #$0088, D0
                jsr     (PlayMusic)            ; loc_14C0
                moveq   #$00, D4
                rts
loc_221B2:
                cmpi.b  #$3B, D4
                bcs.s   loc_221F8
                cmpi.b  #$40, D4
                bhi.s   loc_221F8
                bsr     loc_21874
                bne.s   loc_221CC
                move.b  #$05, (A2)
                move.l  A1, $0004(A2)
loc_221CC:
                cmpi.b  #$06, ($FFFFFE57).w
                beq.s   loc_221EA
                subi.b  #$3B, D4
                moveq   #$00, D0
                move.b  ($FFFFFE57).w, D0
                lea     ($FFFFFE58).w, A2
                move.b  D4, $00(A2, D0)
                addq.b  #$01, ($FFFFFE57).w
loc_221EA:
                move.w  #$0093, D0
                jsr     (PlaySound)              ; loc_14C6
                moveq   #$00, D4
                rts
loc_221F8:
                cmpi.b  #$41, D4
                bne.s   loc_22204
                move.b  #$01, $003A(A0)
loc_22204:
                cmpi.b  #$4A, D4
                bne.s   loc_22218
                cmpi.b  #$01, $003A(A0)
                bne.s   loc_22218
                move.b  #$02, $003A(A0)
loc_22218:                  
                moveq   #-1, D4
                rts
loc_2221C:
                cmpi.b  #$02, $003A(A0)
                bne.s   loc_22246
                lea     ($FFFF1020), A1
                moveq   #$3F, D1
loc_2222C:                
                moveq   #$3F, D2
loc_2222E:                
                cmpi.b  #$41, (A1)
                bne.s   loc_22238
                move.b  #$2C, (A1)
loc_22238:
                addq.w  #$01, A1
                dbra    D2, loc_2222E
                lea     $0040(A1), A1
                dbra    D1, loc_2222C
loc_22246:
                clr.b   $003A(A0)
                moveq   #$00, D4
                rts
;=============================================================================== 
; Sub Routine SonicInSS_ChkItems
; [ End ]                         
;===============================================================================                  

;=============================================================================== 
; Sub Routine SonicInSS_ChkItems2
; [ Begin ]                         
;===============================================================================                  
SonicInSS_ChkItems2: ; loc_2224E:
                move.b  $0030(A0), D0
                bne.s   loc_2226E
                subq.b  #$01, $0036(A0)
                bpl.s   loc_22260
                move.b  #$00, $0036(A0)
loc_22260:
                subq.b  #$01, $0037(A0)
                bpl.s   loc_2226C
                move.b  #$00, $0037(A0)
loc_2226C:
                rts
loc_2226E:
                cmpi.b  #$25, D0
                bne.s   loc_222E6
                move.l  $0032(A0), D1
                subi.l  #$FFFF0001, D1
                move.w  D1, D2
                andi.w  #$007F, D1
                mulu.w  #$0018, D1
                subi.w  #$0014, D1
                lsr.w   #$07, D2
                andi.w  #$007F, D2
                mulu.w  #$0018, D2
                subi.w  #$0044, D2
                sub.w   $0008(A0), D1
                sub.w   $000C(A0), D2
                jsr     CalcAngle               ; loc_34A2
                jsr     CalcSine                ; loc_320A
                muls.w  #$F900, D1
                asr.l   #$08, D1
                move.w  D1, $0010(A0)
                muls.w  #$F900, D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
                bset    #$01, $0022(A0)
                bsr     loc_21874
                bne.s   loc_222DC
                move.b  #$02, (A2)
                move.l  $0032(A0), D0
                subq.l  #$01, D0
                move.l  D0, $0004(A2)
loc_222DC:
                move.w  #$00B4, D0
                jmp     (PlaySound)              ; loc_14C6
loc_222E6:
                cmpi.b  #$27, D0
                bne.s   loc_222FC
                addq.b  #$02, $0024(A0)
                move.w  #$00A8, D0
                jsr     (PlaySound)              ; loc_14C6
                rts
loc_222FC:
                cmpi.b  #$29, D0
                bne.s   loc_22330
                tst.b   $0036(A0)
                bne     loc_223E0
                move.b  #$1E, $0036(A0)
                btst    #$06, ($FFFFF753).w
                beq.s   loc_22326
                asl.w   ($FFFFF752).w
                move.l  $0032(A0), A1
                subq.l  #$01, A1
                move.b  #$2A, (A1)
loc_22326:
                move.w  #$00A9, D0
                jmp     (PlaySound)              ; loc_14C6
loc_22330:
                cmpi.b  #$2A, D0
                bne.s   loc_22364
                tst.b   $0036(A0)
                bne     loc_223E0
                move.b  #$1E, $0036(A0)
                btst    #$06, ($FFFFF753).w
                bne.s   loc_2235A
                asr.w   ($FFFFF752).w
                move.l  $0032(A0), A1
                subq.l  #$01, A1
                move.b  #$29, (A1)
loc_2235A:
                move.w  #$00A9, D0
                jmp     (PlaySound)              ; loc_14C6
loc_22364:
                cmpi.b  #$2B, D0
                bne.s   loc_2239A
                tst.b   $0037(A0)
                bne     loc_223E0
                move.b  #$1E, $0037(A0)
                bsr     loc_21874
                bne.s   loc_2238C
                move.b  #$04, (A2)
                move.l  $0032(A0), D0
                subq.l  #$01, D0
                move.l  D0, $0004(A2)
loc_2238C:
                neg.w   ($FFFFF752).w
                move.w  #$00A9, D0
                jmp     (PlaySound)              ; loc_14C6
loc_2239A:
                cmpi.b  #$2D, D0
                beq.s   loc_223B2
                cmpi.b  #$2E, D0
                beq.s   loc_223B2
                cmpi.b  #$2F, D0
                beq.s   loc_223B2
                cmpi.b  #$30, D0
                bne.s   loc_223E0
loc_223B2:
                bsr     loc_21874
                bne.s   loc_223D6
                move.b  #$06, (A2)
                move.l  $0032(A0), A1
                subq.l  #$01, A1
                move.l  A1, $0004(A2)
                move.b  (A1), D0
                addq.b  #$01, D0
                cmpi.b  #$30, D0
                bls.s   loc_223D2
                clr.b   D0
loc_223D2:
                move.b  D0, $0004(A2)
loc_223D6:
                move.w  #$00BA, D0
                jmp     (PlaySound)              ; loc_14C6
loc_223E0:
                rts
;=============================================================================== 
; Sub Routine SonicInSS_ChkItems2
; [ Begin ]                         
;===============================================================================                  
                
;=============================================================================== 
; Object 0x09 - Sonic In Special Stage
; [ End ]                         
;===============================================================================  
                
;=============================================================================== 
; Object 0x10
; [ Begin ]                         
;===============================================================================                                 
Obj_0x10: 
loc_223E2:
                rts   
;=============================================================================== 
; Object 0x10
; [ End ]                         
;===============================================================================                 
J_Adjust2PArtPointer_26: ; loc_223E4:                                
                jmp     Adjust2PArtPointer     ; (loc_DC30)
                dc.w    $0000                   ; Filler
                
                
Dynamic_Art_Cues: ; loc_223EC: ; Dynamic reload sprites routine
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  loc_2240A(PC, D0), D1
                lea     loc_22408(PC, D1), A2
                move.w  loc_22408(PC, D0), D0
                jmp     loc_22408(PC, D0)
                rts 
loc_22408:        ; Dynamic_Normal => loc_22630
                dc.w    Dynamic_Normal-loc_22408 ; Green Hill               
loc_2240A:
                dc.w    loc_22698-loc_22408 ; Green Hill                
                dc.w    loc_2244C-loc_22408 ; Null
                dc.w    loc_22866-loc_22408 ; Null
                dc.w    loc_2244C-loc_22408 ; Wood (Null)
                dc.w    loc_22866-loc_22408 ; Wood (Null)
                dc.w    loc_2244C-loc_22408 ; Null
                dc.w    loc_22866-loc_22408 ; Null
                dc.w    Dynamic_Normal-loc_22408 ; Metropolis
                dc.w    loc_226FC-loc_22408 ; Metropolis
                dc.w    Dynamic_Normal-loc_22408 ; Metropolis
                dc.w    loc_226FC-loc_22408 ; Metropolis
                dc.w    loc_2244C-loc_22408 ; Null
                dc.w    loc_22866-loc_22408 ; Null
                dc.w    loc_2244E-loc_22408 ; Hill Top 
                dc.w    loc_22754-loc_22408 ; Hill Top 
                dc.w    Dynamic_Normal-loc_22408 ; Hidden Palace
                dc.w    loc_227B8-loc_22408 ; Hidden Palace
                dc.w    loc_2244C-loc_22408 ; Null
                dc.w    loc_22866-loc_22408 ; Null
                dc.w    Dynamic_Normal-loc_22408 ; Oil Ocean
                dc.w    loc_227E4-loc_22408 ; Oil Ocean
                dc.w    loc_2244C-loc_22408 ; Dust Hill
                dc.w    loc_22866-loc_22408 ; Dust Hill
                dc.w    loc_2244C-loc_22408 ; Casino Night
                dc.w    loc_22866-loc_22408 ; Casino Night
                dc.w    Dynamic_Normal-loc_22408 ; Chemical Plant
                dc.w    CPz_Animate-loc_22408 ; Chemical Plant ; loc_2282A
                dc.w    loc_2244C-loc_22408 ; Genocide City (Null)
                dc.w    loc_22866-loc_22408 ; Genocide City (Null)
                dc.w    Dynamic_Normal-loc_22408 ; Neo Green Hill
                dc.w    loc_2283C-loc_22408 ; Neo Green Hill
                dc.w    loc_2244C-loc_22408 ; Death Egg (Null)
                dc.w    loc_22866-loc_22408 ; Death Egg (Null)
loc_2244C:
                rts       
loc_2244E:
                tst.w   ($FFFFFFD8).w
                bne     Dynamic_Normal          ; loc_22630
                lea     ($FFFFF7F0).w, A3
                moveq   #$00, D0
                move.w  ($FFFFEE00).w, D1
                neg.w   D1
                asr.w   #$03, D1
                move.w  ($FFFFEE00).w, D0
                lsr.w   #$04, D0
                add.w   D1, D0
                subi.w  #$0010, D0
                divu.w  #$0030, D0
                swap.w  D0
                cmp.b   $0001(A3), D0
                beq.s   loc_224C0
                move.b  D0, $0001(A3)
                move.w  D0, D2
                andi.w  #$0007, D0
                add.w   D0, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                andi.w  #$0038, D2
                lsr.w   #$02, D2
                add.w   D2, D0
                lea     loc_224C4(PC, D0), A4
                moveq   #$05, D5
                move.w  #$A000, D4
loc_224A4:
                moveq   #-1, D1
                move.w  (A4)+, D1
                andi.l  #$00FFFFFF, D1
                move.w  D4, D2
                moveq   #$40, D3
                jsr     QueueDMATransfer           ; loc_156C
                addi.w  #$0080, D4
                dbra    D5, loc_224A4
loc_224C0:
                bra     loc_22584                 
loc_224C4:
                dc.w    $0080, $0280, $0380, $0580, $0600, $0880, $0080, $0280
                dc.w    $0380, $0580, $0600, $0880, $0980, $0A80, $0B80, $0C80
                dc.w    $0E80, $0F00, $0980, $0A80, $0B80, $0C80, $0E80, $0F00
                dc.w    $1080, $1180, $1200, $1280, $1300, $1380, $1080, $1180
                dc.w    $1200, $1280, $1300, $1380, $1400, $1480, $1500, $1600
                dc.w    $1900, $1D00, $1400, $1480, $1500, $1600, $1900, $1D00
                dc.w    $1D80, $1E00, $2280, $2400, $2580, $2600, $1D80, $1E00
                dc.w    $2280, $2400, $2580, $2600, $2680, $2780, $2B00, $3280
                dc.w    $3600, $3680, $2680, $2780, $2B00, $3280, $3600, $3680
                dc.w    $3C80, $3D00, $3F00, $3F80, $4080, $4480, $3C80, $3D00
                dc.w    $3F00, $3F80, $4080, $4480, $4580, $4880, $4900, $4B80
                dc.w    $4C80, $4D80, $4580, $4880, $4900, $4B80, $4C80, $4D80                 
loc_22584:
                lea     ($FFFFA800).w, A1
                move.w  ($FFFFEE00).w, D2
                neg.w   D2
                asr.w   #$03, D2
                move.l  A2, -(A7)
                lea     (Hill_Top_Background_Unc), A0 ; loc_28C2A
                lea     ($FFFF7C00), A2
                moveq   #$0F, D1
loc_225A0:
                move.w  (A1)+, D0
                neg.w   D0
                add.w   D2, D0
                andi.w  #$001F, D0
                lsr.w   #$01, D0
                bcc.s   loc_225B2
                addi.w  #$0200, D0
loc_225B2:
                lea     $00(A0, D0), A4
                lsr.w   #$01, D0
                bcs.s   loc_225DC
                move.l  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.l  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.l  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.l  (A4)+, (A2)+
                suba.w  #$00C0, A2
                adda.w  #$0020, A0
                dbra    D1, loc_225A0  
                bra.s   loc_22614
loc_225DC:
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                suba.w  #$00C0, A2
                adda.w  #$0020, A0
                dbra    D1, loc_225A0
loc_22614:
                move.l  #$00FF7C00, D1
                move.w  #$A300, D2
                move.w  #$0080, D3
                jsr     QueueDMATransfer           ; loc_156C
                move.l  (A7)+, A2
                addq.w  #$02, A3
                bra     loc_22634                            
Dynamic_Normal: ; loc_22630:
                lea     ($FFFFF7F0).w, A3
loc_22634:                
                move.w  (A2)+, D6
loc_22636:
                subq.b  #$01, (A3)
                bpl.s   loc_2267C
                moveq   #$00, D0
                move.b  $0001(A3), D0
                cmp.b   $0006(A2), D0
                bcs.s   loc_2264C
                moveq   #$00, D0
                move.b  D0, $0001(A3)
loc_2264C:
                addq.b  #$01, $0001(A3)
                move.b  (A2), (A3)
                bpl.s   loc_2265A
                add.w   D0, D0
                move.b  $09(A2, D0), (A3)
loc_2265A:
                move.b  $08(A2, D0), D0
                lsl.w   #$05, D0
                move.w  $0004(A2), D2
                move.l  (A2), D1
                andi.l  #$00FFFFFF, D1
                add.l   D0, D1
                moveq   #$00, D3
                move.b  $0007(A2), D3
                lsl.w   #$04, D3
                jsr     QueueDMATransfer           ; loc_156C
loc_2267C:
                move.b  $0006(A2), D0
                tst.b   (A2)
                bpl.s   loc_22686
                add.b   D0, D0
loc_22686:                
                addq.b  #$01, D0
                andi.w  #$00FE, D0
                lea     $08(A2, D0), A2
                addq.w  #$02, A3
                dbra    D6, loc_22636
                rts   
loc_22698: ; Green Hill Dynamic Reload Sprites                  
                dc.w    $0004                   ; Total of Animations
                dc.l    ($FF<<$18)|Ghz_Flower_1 ; loc_28000
                dc.w    $7280                   ; VRam 
                dc.w    $0602                   ; Frames/Tiles
                dc.w    $007F, $0213, $0007, $0207, $0007, $0207 ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Flower_2 ; loc_28080                  
                dc.w    $72C0                   ; VRam
                dc.w    $0802                   ; Frames/Tiles
                dc.w    $027F, $000B, $020B, $000B, $0205, $0005, $0205, $0005 ; Frame Load/Frame Time
                dc.l    ($07<<$18)|Ghz_Flower_3 ; loc_28100  
                dc.w    $7300                   ; VRam
                dc.w    $0202                   ; Frames/Tiles
                dc.w    $0002                   ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Flower_4 ; loc_28180    
                dc.w    $7340                   ; VRam
                dc.w    $0802                   ; Frames/Tiles
                dc.w    $007F, $0207, $0007, $0207, $0007, $020B, $000B, $020B ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Dyn_Wall ; loc_28200  
                dc.w    $7380                   ; VRam
                dc.w    $0602                   ; Frames/Tiles
                dc.w    $0017, $0209, $040B, $0617, $040B, $0209 ; Frame Load/Frame Time
loc_226FC: ; Metropolis Dynamic Reload Sprites   
                dc.w    $0005                   ; Total of Animations
                dc.l    Mz_Spinnig_Cylinder     ; loc_2902A  
                dc.w    $6980                   ; VRam
                dc.w    $0810                   ; Frames/Tiles
                dc.w    $0010, $2030, $4050, $6070 ; Frame Load/Frame Time
                dc.l    ($0D<<$18)|Mz_Lava      ; loc_2A02A:
                dc.w    $6800                   ; VRam
                dc.w    $060C                   ; Frames/Tiles
                dc.w    $000C, $1824, $180C     ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Mz_Pistons   ; loc_2A06A:
                dc.w    $6B80                   ; VRam
                dc.w    $0406                   ; Frames/Tiles
                dc.w    $0013, $0607, $0C13, $0607 ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Mz_Pistons   ; loc_2A06A:
                dc.w    $6C40                   ; VRam
                dc.w    $0406                   ; Frames/Tiles
                dc.w    $0C13, $0607, $0013, $0607 ; Frame Load/Frame Time
                dc.l    ($05<<$18)|Mz_Drills    ; loc_2A86A:
                dc.w    $6D00                   ; VRam
                dc.w    $0408                   ; Frames/Tiles
                dc.w    $0008, $1018            ; Frame Load/Frame Time
                dc.l    ($05<<$18)|Mz_Drills    ; loc_2A86A:
                dc.w    $6E00                   ; VRam
                dc.w    $0408                   ; Frames/Tiles
                dc.w    $0008, $1018            ; Frame Load/Frame Time
loc_22754: ; Hill Top Dynamic Reload Sprites  
                dc.w    $0004                   ; Total of Animations
                dc.l    ($FF<<$18)|Ghz_Flower_1 ; loc_28000
                dc.w    $7280                   ; VRam 
                dc.w    $0602                   ; Frames/Tiles
                dc.w    $007F, $0213, $0007, $0207, $0007, $0207 ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Flower_2 ; loc_28080                  
                dc.w    $72C0                   ; VRam
                dc.w    $0802                   ; Frames/Tiles
                dc.w    $027F, $000B, $020B, $000B, $0205, $0005, $0205, $0005 ; Frame Load/Frame Time
                dc.l    ($07<<$18)|Ghz_Flower_3 ; loc_28100  
                dc.w    $7300                   ; VRam
                dc.w    $0202                   ; Frames/Tiles
                dc.w    $0002                   ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Flower_4 ; loc_28180    
                dc.w    $7340                   ; VRam
                dc.w    $0802                   ; Frames/Tiles
                dc.w    $007F, $0207, $0007, $0207, $0007, $020B, $000B, $020B ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Dyn_Wall ; loc_28200  
                dc.w    $7380                   ; VRam
                dc.w    $0602                   ; Frames/Tiles
                dc.w    $0017, $0209, $040B, $0617, $040B, $0209 ; Frame Load/Frame Time
loc_227B8: ; Hidden Palace Dynamic Reload Sprites  
                dc.w    $0002                   ; Total of Animations
                dc.l    ($08<<$18)|HPz_Orbs     ; loc_2B46A
                dc.w    $5D00                   ; VRam
                dc.w    $0608                   ; Frames/Tiles
                dc.w    $0000, $0810, $1008     ; Frame Load/Frame Time                 
                dc.l    ($08<<$18)|HPz_Orbs     ; loc_2B46A
                dc.w    $5E00                   ; VRam
                dc.w    $0608                   ; Frames/Tiles
                dc.w    $0810, $1008, $0000     ; Frame Load/Frame Time
                dc.l    ($08<<$18)|HPz_Orbs     ; loc_2B46A
                dc.w    $5F00                   ; VRam
                dc.w    $0608                   ; Frames/Tiles
                dc.w    $1008, $0000, $0810     ; Frame Load/Frame Time    
loc_227E4: ; Oil Ocean Dynamic Reload Sprites              
                dc.w    $0004                   ; Total of Animations
                dc.l    ($FF<<$18)|OOz_Red_Balls ; loc_2B76A
                dc.w    $5A00                   ; VRam
                dc.w    $0404                   ; Frames/Tiles
                dc.w    $000B, $0405, $0809, $0403 ; Frame Load/Frame Time 
                dc.l    ($06<<$18)|OOz_Rotating_Square_1 ; loc_2B8EA
                dc.w    $5A80                   ; VRam
                dc.w    $0404                   ; Frames/Tiles
                dc.w    $0004, $080C            ; Frame Load/Frame Time
                dc.l    ($06<<$18)|OOz_Rotating_Square_2 ; loc_2BAEA
                dc.w    $5B00                   ; VRam
                dc.w    $0404                   ; Frames/Tiles
                dc.w    $0004, $080C            ; Frame Load/Frame Time
                dc.l    ($11<<$18)|OOz_Oil_1    ; loc_2BCEA
                dc.w    $5B80                   ; VRam
                dc.w    $0610                   ; Frames/Tiles
                dc.w    $0010, $2030, $2010     ; Frame Load/Frame Time
                dc.l    ($11<<$18)|OOz_Oil_2 ; loc_2C4EA
                dc.w    $5D80                   ; VRam
                dc.w    $0610                   ; Frames/Tiles
                dc.w    $0010, $2030, $2010     ; Frame Load/Frame Time
CPz_Animate: ; loc_2282A: ; Chemical Plant Dynamic Reload Sprites              
                dc.w    $0000                   ; Total of Animations
                dc.l    ($04<<$18)|CPz_Dyn_Background ; loc_2CCEA:
                dc.w    $6E00                   ; VRam
                dc.w    $0802                   ; Frames/Tiles
                dc.w    $0002, $0406, $080A, $0C0E ; Frame Load/Frame Time
loc_2283C: ; Neo Green Hill Dynamic Reload Sprites 
                dc.w    $0003                   ; Total of Animations
                dc.l    ($05<<$18)|NGHz_Water_Falls_1 ; loc_2CEEA
                dc.w    $7F80                   ; VRam
                dc.w    $0204                   ; Frames/Tiles    
                dc.w    $0004                   ; Frame Load/Frame Time
                dc.l    ($05<<$18)|NGHz_Water_Falls_1 ; loc_2CEEA
                dc.w    $7F00                   ; VRam
                dc.w    $0204                   ; Frames/Tiles    
                dc.w    $0400                   ; Frame Load/Frame Time
                dc.l    ($05<<$18)|NGHz_Water_Falls_2 ; loc_2CFEA
                dc.w    $7E80                   ; VRam
                dc.w    $0204                   ; Frames/Tiles 
                dc.w    $0004                   ; Frame Load/Frame Time
                dc.l    ($05<<$18)|NGHz_Water_Falls_3 ; loc_2D0EA
                dc.w    $7E00                   ; VRam
                dc.w    $0204                   ; Frames/Tiles 
                dc.w    $0004                   ; Frame Load/Frame Time               
loc_22866:
                cmpi.b  #$0D, ($FFFFFE10).w
                beq.s   loc_22870
loc_2286E:
                rts
loc_22870:
                move.w  ($FFFFEE00).w, D0
                cmpi.w  #$1940, D0
                bcs.s   loc_2286E  
                cmpi.w  #$1F80, D0
                bcc.s   loc_2286E
                subq.b  #$01, ($FFFFF721).w
                bpl.s   loc_2286E
                move.b  #$07, ($FFFFF721).w
                move.b  #$01, ($FFFFF720).w
                lea     ($FFFF7500), A1
                bsr.s   loc_228A0
                lea     ($FFFF7D00), A1
loc_228A0:
                move.w  #$0007, D1
loc_228A4:
                move.w  (A1), D0
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0072(A1), (A1)+
                adda.w  #$0070, A1
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0072(A1), (A1)+
                adda.w  #$0070, A1
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0072(A1), (A1)+
                adda.w  #$0070, A1
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  D0, (A1)+
                suba.w  #$0180, A1
                dbra    D1, loc_228A4
                rts    
Load_16x16_Mappings_For_Dyn_Sprites: ; loc_2293A: ; Load 16x16 mappings used by dynamic reload sprites...
                cmpi.b  #$07, ($FFFFFE10).w
                bne.s   loc_22952
                bsr     loc_22D62
                move.b  #$FF, ($FFFFF7F1).w
                move.w  #$FFFF, ($FFFFA820).w
loc_22952:
                cmpi.b  #$0D, ($FFFFFE10).w
                bne.s   loc_22960
                move.b  #$FF, ($FFFFF7F1).w
loc_22960:
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                move.w  Map16Delta_Index(PC, D0), D0 ; loc_229A2
                lea     Map16Delta_Index(PC, D0), A0 ; loc_229A2
                tst.w   (A0)
                beq.s   loc_22988
                lea     ($FFFF9000).w, A1
                adda.w  (A0)+, A1
                move.w  (A0)+, D1
                tst.w   ($FFFFFFD8).w
                bne.s   loc_2298A
loc_22982:
                move.w  (A0)+, (A1)+
                dbra    D1, loc_22982
loc_22988:
                rts
loc_2298A:
                move.w  (A0)+, D0
                move.w  D0, D1
                andi.w  #$F800, D0
                andi.w  #$07FF, D1
                lsr.w   #$01, D1
                or.w    D1, D0
                move.w  D0, (A1)+
                dbra    D1, loc_2298A
                rts
Map16Delta_Index: ; loc_229A2:                    
                dc.w    Map16Delta_GHz-Map16Delta_Index  ; loc_229C4 - Green Hill 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; loc_22D60 - Null
                dc.w    Map16Delta_Null-Map16Delta_Index ; loc_22D60 - Wood (Null)
                dc.w    Map16Delta_Null-Map16Delta_Index ; loc_22D60 - Null
                dc.w    Map16Delta_Mz-Map16Delta_Index   ; loc_22A40 - Metropolis 16x16 mappings
                dc.w    Map16Delta_Mz-Map16Delta_Index   ; loc_22A40 - Metropolis 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; loc_22D60 - Null
                dc.w    Map16Delta_GHz-Map16Delta_Index  ; loc_229C4 - Hill Top 16x16 mappings
                dc.w    Map16Delta_HPz-Map16Delta_Index  ; loc_22B14 - Hidden Palace 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; loc_22D60 - Null
                dc.w    Map16Delta_OOz-Map16Delta_Index  ; loc_22C08 - Oil Ocean 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; loc_22D60 - Dust Hill (Null)
                dc.w    Map16Delta_CNz-Map16Delta_Index  ; loc_22C6C - Casino Night 16x16 mappings
                dc.w    Map16Delta_CPz-Map16Delta_Index  ; loc_22D10 - Chemical Plant 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; loc_22D60 - Genocide City (Null)
                dc.w    Map16Delta_NGHz-Map16Delta_Index ; loc_22D1C - Neo Green Hill 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; loc_22D60 - Death Egg (Null)                  
;===============================================================================
; Green Hill Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================
Map16Delta_GHz: ; loc_229C4: ; Green Hill / Hill Top 16x16 mappings used by dynamic reload sprites...                
                dc.w    $1788 ; Ram Address to start loading ($1788+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $003B ; Number of words to load in Ram Array ($0000..$003B) -> move.w  (A0)+, D1
                dc.w    $4500, $4504, $4501, $4505, $4508, $450C, $4509, $450D
                dc.w    $4510, $4514, $4511, $4515, $4502, $4506, $4503, $4507
                dc.w    $450A, $450E, $450B, $450F, $4512, $4516, $4513, $4517
                dc.w    $6518, $651A, $6519, $651B, $651C, $651E, $651D, $651F
                dc.w    $439C, $4B9C, $439D, $4B9D, $4158, $439C, $4159, $439D
                dc.w    $4B9C, $4958, $4B9D, $4959, $6394, $6B94, $6395, $6B95
                dc.w    $E396, $EB96, $E397, $EB97, $6398, $6B98, $6399, $6B99
                dc.w    $E39A, $EB9A, $E39B, $EB9B
;===============================================================================
; Green Hill Mappings 16x16 Delta  
; [ End ]
;===============================================================================  

;===============================================================================
; Metropolis Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================              
Map16Delta_Mz: ; loc_22A40: ; Metropolis 16x16 mappings used by dynamic reload sprites...  
                dc.w    $1730 ; Ram Address to start loading ($1730+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $0067 ; Number of words to load in Ram Array ($0000..$0067) -> move.w  (A0)+, D1
                dc.w    $235C, $2B5C, $235D, $2B5D, $235E, $2B5E, $235F, $2B5F
                dc.w    $635A, $635A, $635B, $635B, $6358, $6358, $6359, $6359
                dc.w    $6356, $6356, $6357, $6357, $6354, $6354, $6355, $6355
                dc.w    $6352, $6352, $6353, $6353, $6350, $6350, $6351, $6351
                dc.w    $634E, $634E, $634F, $634F, $634C, $634C, $634D, $634D
                dc.w    $2360, $2B60, $2361, $2B61, $2362, $2B62, $2363, $2B63
                dc.w    $2364, $2B64, $2365, $2B65, $2366, $2B66, $2367, $2B67
                dc.w    $0000, $0000, $4340, $4341, $0000, $0000, $4342, $4343
                dc.w    $4344, $4345, $4348, $4349, $4346, $4347, $434A, $434B
                dc.w    $E35A, $E35A, $E35B, $E35B, $E358, $E358, $E359, $E359
                dc.w    $E356, $E356, $E357, $E357, $E354, $E354, $E355, $E355
                dc.w    $E352, $E352, $E353, $E353, $E350, $E350, $E351, $E351
                dc.w    $E34E, $E34E, $E34F, $E34F, $E34C, $E34C, $E34D, $E34D
;===============================================================================
; Metropolis Mappings 16x16 Delta  
; [ End ]
;=============================================================================== 

;===============================================================================
; Hidden Palace Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================                   
Map16Delta_HPz: ; loc_22B14: ; Hidden Palace 16x16 mappings used by dynamic reload sprites...  
                dc.w    $1710 ; Ram Address to start loading ($1710+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $0077 ; Number of words to load in Ram Array ($0000..$0077) -> move.w  (A0)+, D1
                dc.w    $62E8, $62E9, $62EA, $62EB, $62EC, $62ED, $62EE, $62EF
                dc.w    $62F0, $62F1, $62F2, $62F3, $62F4, $62F5, $62F6, $62F7
                dc.w    $62F8, $62F9, $62FA, $62FB, $62FC, $62FD, $62FE, $62FF
                dc.w    $42E8, $42E9, $42EA, $42EB, $42EC, $42ED, $42EE, $42EF
                dc.w    $42F0, $42F1, $42F2, $42F3, $42F4, $42F5, $42F6, $42F7
                dc.w    $42F8, $42F9, $42FA, $42FB, $42FC, $42FD, $42FE, $42FF
                dc.w    $0000, $62E8, $0000, $62EA, $62E9, $62EC, $62EB, $62EE
                dc.w    $62ED, $0000, $62EF, $0000, $0000, $62F0, $0000, $62F2
                dc.w    $62F1, $62F4, $62F3, $62F6, $62F5, $0000, $62F7, $0000
                dc.w    $0000, $62F8, $0000, $62FA, $62F9, $62FC, $62FB, $62FE
                dc.w    $62FD, $0000, $62FF, $0000, $0000, $42E8, $0000, $42EA
                dc.w    $42E9, $42EC, $42EB, $42EE, $42ED, $0000, $42EF, $0000
                dc.w    $0000, $42F0, $0000, $42F2, $42F1, $42F4, $42F3, $42F6
                dc.w    $42F5, $0000, $42F7, $0000, $0000, $42F8, $0000, $42FA
                dc.w    $42F9, $42FC, $42FB, $42FE, $42FD, $0000, $42FF, $0000
;===============================================================================
; Hidden Palace Mappings 16x16 Delta  
; [ End ]
;===============================================================================  

;===============================================================================
; Oil Ocean Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================                  
Map16Delta_OOz: ; loc_22C08: ; Oil Ocean 16x16 mappings used by dynamic reload sprites...                
                dc.w    $17A0 ; Ram Address to start loading ($17A0+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $002F ; Number of words to load in Ram Array ($0000..$002F) -> move.w  (A0)+, D1
                dc.w    $82D0, $82D2, $82D1, $82D3, $E2D4, $E2D5, $E2D6, $E2D7
                dc.w    $0000, $62D8, $0000, $62DA, $62D9, $0000, $62DB, $0000
                dc.w    $C2DC, $C2DD, $C2E4, $C2E5, $C2DE, $C2DF, $C2E6, $C2E7
                dc.w    $C2E0, $C2E1, $C2E8, $C2E9, $C2E2, $C2E3, $C2EA, $C2EB
                dc.w    $C2EC, $C2ED, $C2F4, $C2F5, $C2EE, $C2EF, $C2F6, $C2F7
                dc.w    $C2F0, $C2F1, $C2F8, $C2F9, $C2F2, $C2F3, $C2FA, $C2FB
;===============================================================================
; Oil Ocean Mappings 16x16 Delta  
; [ End ]
;===============================================================================   

;===============================================================================
; Casino Night Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================                   
Map16Delta_CNz: ; loc_22C6C: ; Casino Night 16x16 mappings used by dynamic reload sprites...  
                dc.w    $1760 ; Ram Address to start loading ($1760+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $004F ; Number of words to load in Ram Array ($0000..$004F) -> move.w  (A0)+, D1
                dc.w    $43D2, $43D4, $43D3, $43D5, $4BD4, $43D6, $4BD5, $43D7
                dc.w    $53D3, $53D5, $53D2, $53D4, $5BD5, $5BD3, $5BD4, $5BD2
                dc.w    $43D8, $43DA, $43D9, $43DB, $4BDA, $4BD8, $4BDB, $4BD9
                dc.w    $43DC, $43DE, $43DD, $43DF, $4BDE, $4BDC, $4BDF, $4BDD
                dc.w    $43E0, $43E2, $43E1, $43E3, $4BE2, $4BE0, $4BE3, $4BE1
                dc.w    $43E4, $43E6, $43E5, $43E7, $4BE6, $4BE4, $4BE7, $4BE5
                dc.w    $63E8, $63EA, $63E9, $63EB, $63EC, $63EE, $63ED, $63EF
                dc.w    $63F0, $63F2, $63F1, $63F3, $63F4, $63F6, $63F5, $63F7
                dc.w    $7BF7, $7BF5, $7BF6, $7BF4, $63F8, $63FA, $63F9, $63FB
                dc.w    $6BF6, $6BF4, $6BF7, $6BF5, $7BEB, $7BE9, $7BEA, $7BE8
;===============================================================================
; Casino Night Mappings 16x16 Delta  
; [ End ]
;===============================================================================   

;===============================================================================
; Chemical Plant Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================                 
Map16Delta_CPz: ; loc_22D10: ; Chemical Plant 16x16 mappings used by dynamic reload sprites...
                dc.w    $17F8 ; Ram Address to start loading ($17F8+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $0003 ; Number of words to load in Ram Array ($0000..$0003) -> move.w  (A0)+, D1
                dc.w    $4370, $4371, $4370, $4371
;===============================================================================
; Chemical Plant Mappings 16x16 Delta  
; [ End ]
;===============================================================================  

;===============================================================================
; Neo Green Hill Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================  
Map16Delta_NGHz: ; loc_22D1C: ; Neo Green Hill 16x16 mappings used by dynamic reload sprites...               
                dc.w    $17C0 ; Ram Address to start loading ($17C0+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $001F ; Number of words to load in Ram Array ($0000..$001F) -> move.w  (A0)+, D1
                dc.w    $C3F0, $C3F1, $C3F2, $C3F3, $C3F4, $C3F5, $C3F6, $C3F7
                dc.w    $C3F8, $C3F9, $C3FA, $C3FB, $C3FC, $C3FD, $C3FE, $C3FF
                dc.w    $43F0, $43F1, $43F2, $43F3, $43F4, $43F5, $43F6, $43F7
                dc.w    $43F8, $43F9, $43FA, $43FB, $43FC, $43FD, $43FE, $43FF
;===============================================================================
; Neo Green Hill Mappings 16x16 Delta  
; [ End ]
;===============================================================================
                  
;===============================================================================
; Null Mappings 16x16 Delta  
; [ Begin ]
;=============================================================================== 
Map16Delta_Null: ; loc_22D60:
                dc.w    $0000 ; Null
;===============================================================================
; Null Mappings 16x16 Delta  
; [ End ]
;===============================================================================                 
                
loc_22D62: ; Load Hill Top 8x8 Extra Background Tiles In To Ram               
                lea     (Hill_Top_Background), A0 ; loc_28300
                lea     ($FFFFB800).w, A4
                bsr     loc_22DF4
                lea     ($FFFFB800).w, A1
                lea     (loc_22D94), A4
                moveq   #$00, D2
                moveq   #$2F, D3
loc_22D7E:
                moveq   #-1, D0
                move.w  (A4)+, D0
                move.l  D0, A2
                moveq   #$1F, D1
loc_22D86:
                move.l  (A1), (A2)+
                move.l  D2, (A1)+
                dbra    D1, loc_22D86
                dbra    D3, loc_22D7E
                rts  
loc_22D94:
                dc.w    $0080, $0280, $0380, $0580, $0600, $0880, $0980, $0A80
                dc.w    $0B80, $0C80, $0E80, $0F00, $1080, $1180, $1200, $1280
                dc.w    $1300, $1380, $1400, $1480, $1500, $1600, $1900, $1D00
                dc.w    $1D80, $1E00, $2280, $2400, $2580, $2600, $2680, $2780
                dc.w    $2B00, $3280, $3600, $3680, $3C80, $3D00, $3F00, $3F80
                dc.w    $4080, $4480, $4580, $4880, $4900, $4B80, $4C80, $4D80
loc_22DF4:
                jmp     NemDec_ToRAM        ; loc_160E 
                dc.w    $0000 ; Filler    
Obj_0x21_Head_Up_Display: ; loc_22DFC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  loc_22E0A(PC, D0), D1
                jmp     loc_22E0A(PC, D1)
loc_22E0A:
                dc.w    loc_22E0E-loc_22E0A
                dc.w    loc_22E3C-loc_22E0A
loc_22E0E:
                addq.b  #$02, $0024(A0)
                move.w  #$0090, $0008(A0)
                move.w  #$0108, $000A(A0)
                move.l  #Head_Up_Display_Mappings, $0004(A0) ; loc_22E80
                move.w  #$06CA, $0002(A0)
                bsr     J_Adjust2PArtPointer_27 ; loc_23B68
                move.b  #$00, $0001(A0)
                move.b  #$00, $0018(A0)
loc_22E3C:
                tst.w   ($FFFFFE20).w
                beq.s   loc_22E60
                moveq   #$00, D0
                btst    #$03, ($FFFFFE05).w
                bne.s   loc_22E56
                cmpi.b  #$09, ($FFFFFE23).w
                bne.s   loc_22E56
                addq.w  #$02, D0
loc_22E56:
                move.b  D0, $001A(A0)
                jmp     DisplaySprite           ; loc_D3C2
loc_22E60:
                moveq   #$00, D0
                btst    #$03, ($FFFFFE05).w
                bne.s   loc_22E76
                addq.w  #$01, D0
                cmpi.b  #$09, ($FFFFFE23).w
                bne.s   loc_22E76
                addq.w  #$02, D0
loc_22E76:
                move.b  D0, $001A(A0)
                jmp     DisplaySprite           ; loc_D3C2  
Head_Up_Display_Mappings: ; loc_22E80:
                dc.w    HUD_Map_01-Head_Up_Display_Mappings
                dc.w    HUD_Map_02-Head_Up_Display_Mappings
                dc.w    HUD_Map_03-Head_Up_Display_Mappings 
                dc.w    HUD_Map_04-Head_Up_Display_Mappings
HUD_Map_01: ; loc_22E88:
                dc.w    $000A
                dc.l    $800DA000, $A0000000, $800DA018, $A00C0020
                dc.l    $800DA020, $A0100040, $900DA010, $A0080000
                dc.l    $900DA028, $A0140028, $A00DA008, $A0040000
                dc.l    $A001A000, $A0000020, $A009A030, $A0180030
                dc.l    $4005810A, $80850000, $400DA10E, $A0870010
HUD_Map_02: ; loc_22EDA:                
                dc.w    $000A
                dc.l    $800DA000, $A0000000, $800DA018, $A00C0020
                dc.l    $800DA020, $A0100040, $900DA010, $A0080000
                dc.l    $900DA028, $A0140028, $A00D8008, $80040000
                dc.l    $A0018000, $80000020, $A009A030, $A0180030
                dc.l    $4005810A, $80850000, $400DA10E, $A0870010
HUD_Map_03: ; loc_22F2C:
                dc.w    $000A   
                dc.l    $800DA000, $A0000000, $800DA018, $A00C0020
                dc.l    $800DA020, $A0100040, $900D8010, $80080000
                dc.l    $900DA028, $A0140028, $A00DA008, $A0040000
                dc.l    $A001A000, $A0000020, $A009A030, $A0180030
                dc.l    $4005810A, $80850000, $400DA10E, $A0870010  
HUD_Map_04: ; loc_22F7E:                       
                dc.w    $000A             
                dc.l    $800DA000, $A0000000, $800DA018, $A00C0020
                dc.l    $800DA020, $A0100040, $900D8010, $80080000
                dc.l    $900DA028, $A0140028, $A00D8008, $80040000
                dc.l    $A0018000, $80000020, $A009A030, $A0180030
                dc.l    $4005810A, $80850000, $400DA10E, $A0870010
;===============================================================================
; AddPoints - Sub-routine
; [ Begin ]              
;===============================================================================                
AddPoints: ; loc_22FD0:
                move.b  #$01, ($FFFFFE1F).w
                lea     ($FFFFFE26).w, A3
                add.l   D0, (A3)
                move.l  #$000F423F, D1
                cmp.l   (A3), D1  
                bhi.s   loc_22FE8
                move.l  D1, (A3)
loc_22FE8:
                move.l  (A3), D0
                cmp.l   ($FFFFFFC0).w, D0
                bcs.s   loc_23010
                addi.l  #$00001388, ($FFFFFFC0).w
                tst.b   ($FFFFFFF8).w
                bmi.s   loc_23010
                addq.b  #$01, ($FFFFFE12).w
                addq.b  #$01, ($FFFFFE1C).w
                move.w  #$0088, D0           ; +1UP Sound - Sonic 1 LeftOver
                jmp     (PlayMusic)            ; loc_14C0
loc_23010:
                rts
HudUpdate: ; loc_23012:
                nop
                lea     ($00C00000), A6
                tst.w   (Debug_mode_flag).w
                bne     loc_23104
                tst.b   ($FFFFFE1F).w
                beq.s   loc_2303A
                clr.b   ($FFFFFE1F).w
                move.l  #$5C800003, D0
                move.l  ($FFFFFE26).w, D1
                bsr     loc_23250
loc_2303A:
                tst.b   ($FFFFFE1D).w
                beq.s   loc_2305A
                bpl.s   loc_23046
                bsr     loc_23170
loc_23046:
                clr.b   ($FFFFFE1D).w
                move.l  #$5F400003, D0
loc_23050:                
                moveq   #$00, D1
                move.w  ($FFFFFE20).w, D1
                bsr     loc_23246
loc_2305A:
                tst.b   ($FFFFFE1E).w
                beq.s   loc_230B6 
                tst.w   ($FFFFF63A).w
                bne.s   loc_230B6
                lea     ($FFFFFE22).w, A1
                cmpi.l  #$00093B3B, (A1)+
                nop
                addq.b  #1, -(A1)
                cmpi.b  #$3C, (A1)
                bcs.s   loc_230B6
                move.b  #$00, (A1)
                addq.b  #1, -(A1)
                cmpi.b  #$3C, (A1)
                bcs.s   loc_23096
                move.b  #$00, (A1)
                addq.b  #1, -(A1)
                cmpi.b  #$09, (A1)
                bcs.s   loc_23096
                move.b  #$09, (A1)
loc_23096:
                move.l  #$5E400003, D0
                moveq   #$00, D1
                move.b  ($FFFFFE23).w, D1
                bsr     loc_2331E
                move.l  #$5EC00003, D0
                moveq   #$00, D1
                move.b  ($FFFFFE24).w, D1
                bsr     loc_23326
loc_230B6:                
                tst.b   ($FFFFFE1C).w
                beq.s   loc_230C4
                clr.b   ($FFFFFE1C).w
                bsr     loc_233DE
loc_230C4:
                tst.b   ($FFFFF7D6).w
                beq.s   loc_230EC
                clr.b   ($FFFFF7D6).w
                move.l  #$6E000002, ($00C00004)
                moveq   #$00, D1
                move.w  ($FFFFF7D2).w, D1
                bsr     loc_2337E
                moveq   #$00, D1
                move.w  ($FFFFF7D4).w, D1
                bsr     loc_2337E
loc_230EC:              
                rts  
Sub_Time_Over: ; loc_230EE:
                clr.b   ($FFFFFE1E).w
                lea     ($FFFFB000).w, A0
                move.l  A0, A2
                bsr     KillSonic               ; loc_21422
                move.b  #$01, ($FFFFFE1A).w
                rts                
loc_23104:
                bsr     loc_231DC
                tst.b   ($FFFFFE1D).w
                beq.s   loc_23128
                bpl.s   loc_23114
                bsr     loc_23170
loc_23114:
                clr.b   ($FFFFFE1D).w
                move.l  #$5F400003, D0
                moveq   #$00, D1
                move.w  ($FFFFFE20).w, D1
                bsr     loc_23246
loc_23128:
                move.l  #$5EC00003, D0
                moveq   #$00, D1
                move.b  ($FFFFF62C).w, D1
                bsr     loc_23326
                tst.b   ($FFFFFE1C).w
                beq.s   loc_23146
                clr.b   ($FFFFFE1C).w
                bsr     loc_233DE
loc_23146:
                tst.b   ($FFFFF7D6).w
                beq.s   loc_2316E
                clr.b   ($FFFFF7D6).w   
                move.l  #$6E000002, ($00C00004)
                moveq   #$00, D1
                move.w  ($FFFFF7D2).w, D1
                bsr     loc_2337E
                moveq   #$00, D1
                move.w  ($FFFFF7D4).w, D1
                bsr     loc_2337E
loc_2316E:                
                rts
loc_23170:
                move.l  #$5F400003, ($00C00004)
                lea     loc_231D8(PC), A2
                move.w  #$0002, D2
                bra.s   loc_231A0
Head_Up_Display_Base: ; loc_23184: ; HUD routine               
                lea     ($00C00000), A6
                bsr     loc_233DE
                move.l  #$5C400003, ($00C00004)
                lea     loc_231CC(PC), A2
                move.w  #$000E, D2
loc_231A0:
                lea     loc_23448(PC), A1
loc_231A4:                
                move.w  #$000F, D1
                move.b  (A2)+, D0
                bmi.s   loc_231C0  
                ext.w   D0
                lsl.w   #5, D0
                lea     $00(A1, D0), A3                   
loc_231B4:
                move.l  (A3)+, (A6)
                dbra    D1, loc_231B4
loc_231BA:                
                dbra    D2, loc_231A4
                rts 
loc_231C0:
                move.l  #$00000000, (A6)
                dbra    D1, loc_231C0
                bra.s   loc_231BA            
loc_231CC:
                dc.l    $16FFFFFF, $FFFFFF00, $00140000
loc_231D8:
                dc.l    $FFFF0000
loc_231DC:
                move.l  #$5C400003, ($00C00004)
                move.w  ($FFFFEE00).w, D1
                lsr.w   #7, D1
                move.w  ($FFFFFE04).w, D1
                lsr.w   #6, D1
                swap.w  D1
                move.w  ($FFFFB008).w, D1 
                bsr.s   loc_2320E
                move.w  ($FFFFEE04).w, D1
                move.w  ($FFFFEE08).w, D1
                lsr.w   #7, D1
                move.b  ($FFFFFE78).w, D1
                swap.w  D1
                move.w  ($FFFFB00C).w, D1
loc_2320E:
                moveq   #$07, D6
                lea     (loc_23888), A1
loc_23216:                
                rol.w   #4, D1
                move.w  D1, D2
                andi.w  #$000F, D2
                cmpi.w  #$000A, D2
                bcs.s   loc_23228
                addi.w  #$0007, D2
loc_23228:
                lsl.w   #5, D2
                lea     $00(A1, D2), A3
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                swap.w  D1
                dbra    D6, loc_23216
                rts
loc_23246:
                lea     (loc_23312), A2
                moveq   #$02, D6
                bra.s   loc_23258
loc_23250:
                lea     (loc_23306), A2
                moveq   #$05, D6
loc_23258:
                moveq   #$00, D4
                lea     loc_23448(PC), A1
loc_2325E:                
                moveq   #$00, D2
                move.l  (A2)+, D3
loc_23262:                
                sub.l   D3, D1
                bcs.s   loc_2326A
                addq.w  #1, D2
                bra.s   loc_23262
loc_2326A:
                add.l   D3, D1
                tst.w   D2
                beq.s   loc_23274
                move.w  #$0001, D4
loc_23274:
                tst.w   D4
                beq.s   loc_232A2
                lsl.w   #6, D2
                move.l  D0, $0004(A6)
                lea     $00(A1, D2), A3
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
loc_232A2:                
                addi.l  #$00400000, D0
                dbra    D6, loc_2325E
                rts 
; loc_232AE:
                move.l  #$5F800003, ($00C00004)
                lea     ($00C00000), A6
                lea     (loc_23316), A2
                moveq   #$01, D6
                moveq   #$00, D4
                lea     loc_23448(PC), A1
loc_232CC:                
                moveq   #$00, D2
                move.l  (A2)+, D3
loc_232D0:                
                sub.l   D3, D1
                bcs.s   loc_232D8
                addq.w  #$01, D2
                bra.s   loc_232D0
loc_232D8:
                add.l   D3, D1
                lsl.w   #$06, D2
                lea     $00(A1, D2), A3
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                dbra    D6, loc_232CC
                rts                   
loc_23306:
                dc.l    $000186A0
;loc_2330A:                
                dc.l    $00002710
loc_2330E:                
                dc.l    $000003E8
loc_23312:                 
                dc.l    $00000064
loc_23316:
                dc.l    $0000000A 
loc_2331A:
                dc.l    $00000001                                  
loc_2331E: 
                lea     loc_2331A(PC), A2 
                moveq   #$00, D6
                bra.s   loc_2332C
loc_23326:                
                lea     loc_23316(PC), A2  
                moveq   #$01, D6
loc_2332C:                
                moveq   #$00, D4 
                lea     loc_23448(PC), A1
loc_23332:                
                moveq   #$00, D2
                move.l  (A2)+, D3
loc_23336:                
                sub.l   D3, D1
                bcs.s   loc_2333E
                addq.w  #1, D2
                bra.s   loc_23336
loc_2333E:                      
                add.l   D3, D1
                tst.w   D2
                beq.s   loc_23348
                move.w  #$0001, D4
loc_23348:
                lsl.w   #6, D2
                move.l  D0, $0004(A6)
                lea     $00(A1, D2), A3
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                addi.l  #$00400000, D0
                dbra    D6, loc_23332
                rts   
loc_2337E:                   
                lea     loc_2330E(PC), A2 
                moveq   #$03, D6
                moveq   #$00, D4
                lea     loc_23448(PC), A1
loc_2338A:                
                moveq   #$00, D2
                move.l  (A2)+, D3
loc_2338E:                
                sub.l   D3, D1
                bcs.s   loc_23396
                addq.w  #1, D2
                bra.s   loc_2338E 
loc_23396:
                add.l   D3, D1
                tst.w   D2
                beq.s   loc_233A0
                move.w  #$0001, D4                  
loc_233A0:
                tst.w   D4
                beq.s   loc_233D0
                lsl.w   #6, D2
                lea     $00(A1, D2), A3                
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
loc_233CA:                
                dbra    D6, loc_2338A
                rts   
loc_233D0:
                moveq   #$0F, D5
loc_233D2:                
                move.l  #$00000000, (A6)
                dbra    D5, loc_233D2
                bra.s   loc_233CA              
loc_233DE:
                move.l  #$7BA00003, D0
                moveq   #$00, D1
                move.b  ($FFFFFE12).w, D1
                lea     loc_23316(PC), A2               
                moveq   #$01, D6
                moveq   #$00, D4
                lea     loc_23748(PC), A1
loc_233F6:                
                move.l  D0, $0004(A6)
                moveq   #$00, D2
                move.l  (A2)+, D3
loc_233FE:                
                sub.l   D3, D1
                bcs.s   loc_23406
                addq.w  #$01, D2
                bra.s   loc_233FE
loc_23406:
                add.l   D3, D1
                tst.w   D2
                beq.s   loc_23410
                move.w  #$0001, D4
loc_23410:
                tst.w   D4
                beq.s   loc_23436
loc_23414:                
                lsl.w   #$05, D2
                lea     $00(A1, D2), A3
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
loc_2342A:
                addi.l  #$00400000, D0
                dbra    D6, loc_233F6
                rts
loc_23436:
                tst.w   D6
                beq.s   loc_23414
                moveq   #$07, D5
loc_2343C:                
                move.l  #$00000000, (A6)
                dbra    D5, loc_2343C
                bra.s   loc_2342A                                     
loc_23448:  
                incbin  'data\sprites\bignumbr.dat' 
loc_23748:                
                incbin  'data\sprites\smallnum.dat'             
loc_23888:
                incbin  'data\sprites\debugnum.dat'
J_Adjust2PArtPointer_27: ; loc_23B68:
                jmp     Adjust2PArtPointer     ; loc_DC30
                dc.w    $0000                   ; Filler
DebugMode: ; loc_23B70: ; Debug Mode Routine                 
                moveq   #$00, D0
                move.b  (Debug_placement_mode).w, D0
                move.w  loc_23B7E(PC, D0), D1
                jmp     loc_23B7E(PC, D1)
loc_23B7E:
                dc.w    loc_23B82-loc_23B7E
                dc.w    loc_23BEC-loc_23B7E
loc_23B82:
                addq.b  #$02, (Debug_placement_mode).w
                move.w  ($FFFFEECC).w, ($FFFFFEF0).w
                move.w  ($FFFFEEC6).w, ($FFFFFEF2).w
                andi.w  #$07FF, ($FFFFB00C).w
                andi.w  #$07FF, ($FFFFEE04).w
                andi.w  #$07FF, ($FFFFEE0C).w
                move.b  #$00, $001A(A0)
                move.b  #$00, $001C(A0)
                cmpi.b  #$10, ($FFFFF600).w
                bne.s   loc_23BBC
                moveq   #$06, D0
                bra.s   loc_23BC2
loc_23BBC:
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
loc_23BC2:
                lea     (Debug_Index), A2   ;loc_23DBE 
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D6
                cmp.b   ($FFFFFE06).w, D6
                bhi.s   loc_23BDC
                move.b  #$00, ($FFFFFE06).w
loc_23BDC:
                bsr     loc_23D9E
                move.b  #$0C, ($FFFFFE0A).w
                move.b  #$01, ($FFFFFE0B).w
loc_23BEC:
                moveq   #$06, D0
                cmpi.b  #$10, ($FFFFF600).w
                beq.s   loc_23BFC
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
loc_23BFC:
                lea     (Debug_Index), A2 ; loc_23DBE
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D6
                bsr     loc_23C14
                jmp     DisplaySprite           ; (loc_D3C2)
loc_23C14:
                moveq   #$00, D4
                move.w  #$0001, D1
                move.b  ($FFFFF605).w, D4
                andi.w  #$000F, D4
                bne.s   loc_23C56
                move.b  ($FFFFF604).w, D0
                andi.w  #$000F, D0
                bne.s   loc_23C3E
                move.b  #$0C, ($FFFFFE0A).w
                move.b  #$0F, ($FFFFFE0B).w
                bra     loc_23CBA
loc_23C3E:
                subq.b  #$01, ($FFFFFE0A).w
                bne.s   loc_23C5A
                move.b  #$01, ($FFFFFE0A).w
                addq.b  #$01, ($FFFFFE0B).w
                bne.s   loc_23C56
                move.b  #$FF, ($FFFFFE0B).w
loc_23C56:
                move.b  ($FFFFF604).w, D4
loc_23C5A:
                moveq   #$00, D1
                move.b  ($FFFFFE0B).w, D1
                addq.w  #$01, D1
                swap.w  D1
                asr.l   #$04, D1
                move.l  $000C(A0), D2
                move.l  $0008(A0), D3
                btst    #$00, D4
                beq.s   loc_23C84
                sub.l   D1, D2
                moveq   #$00, D0
                move.w  ($FFFFEECC).w, D0
                swap.w  D0
                cmp.l   D0, D2
                bge.s   loc_23C84
                move.l  D0, D2
loc_23C84:
                btst    #$01, D4
                beq.s   loc_23C9E
                add.l   D1, D2
                moveq   #$00, D0
                move.w  ($FFFFEEC6).w, D0
                addi.w  #$00DF, D0
                swap.w  D0
                cmp.l   D0, D2
                blt.s   loc_23C9E
                move.l  D0, D2
loc_23C9E:
                btst    #$02, D4
                beq.s   loc_23CAA
                sub.l   D1, D3
                bcc.s   loc_23CAA
                moveq   #$00, D3
loc_23CAA:
                btst    #$03, D4
                beq.s   loc_23CB2
                add.l   D1, D3
loc_23CB2:
                move.l  D2, $000C(A0)
                move.l  D3, $0008(A0)
loc_23CBA:
                btst    #$06, ($FFFFF604).w
                beq.s   loc_23CF2
                btst    #$05, ($FFFFF605).w
                beq.s   loc_23CD6
                subq.b  #$01, ($FFFFFE06).w
                bcc.s   loc_23CEE
                add.b   D6, ($FFFFFE06).w
                bra.s   loc_23CEE
loc_23CD6:
                btst    #$06, ($FFFFF605).w
                beq.s   loc_23CF2
                addq.b  #$01, ($FFFFFE06).w
                cmp.b   ($FFFFFE06).w, D6
                bhi.s   loc_23CEE
                move.b  #$00, ($FFFFFE06).w
loc_23CEE:
                bra     loc_23D9E
loc_23CF2:
                btst    #$05, ($FFFFF605).w
                beq.s   loc_23D36
                jsr     SingleObjLoad        ; (loc_E772)
                bne.s   loc_23D36
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $0004(A0), $0000(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0001(A0), $0022(A1)
                andi.b  #$7F, $0022(A1)
                moveq   #$00, D0
                move.b  ($FFFFFE06).w, D0
                lsl.w   #$03, D0
                move.b  $04(A2, D0), $0028(A1)
                rts
loc_23D36:
                btst    #$04, ($FFFFF605).w
                beq.s   loc_23D9C
                moveq   #$00, D0
                move.w  D0, (Debug_placement_mode).w
                move.l  #MapUnc_Sonic, ($FFFFB004).w ; loc_614C0
                move.w  #$0780, ($FFFFB002).w
                tst.w   ($FFFFFFD8).w
                beq.s   loc_23D5E
                move.w  #$03C0, ($FFFFB002).w
loc_23D5E:
                move.b  D0, ($FFFFB01C).w
                move.w  D0, $000A(A0)
                move.w  D0, $000E(A0)
                move.w  $0008(A0), ($FFFFB048).w
                move.w  $000C(A0), ($FFFFB04C).w
                move.w  ($FFFFFEF0).w, ($FFFFEECC).w
                move.w  ($FFFFFEF2).w, ($FFFFEEC6).w
                cmpi.b  #$10, ($FFFFF600).w
                bne.s   loc_23D9C
                move.b  #$02, ($FFFFB01C).w
                bset    #$02, ($FFFFB022).w
                bset    #$01, ($FFFFB022).w
loc_23D9C:
                rts
loc_23D9E:
                moveq   #$00, D0
                move.b  ($FFFFFE06).w, D0
                lsl.w   #$03, D0
                move.l  $00(A2, D0), $0004(A0)
                move.w  $06(A2, D0), $0002(A0)
                move.b  $05(A2, D0), $001A(A0)
                bsr     J_Adjust2PArtPointer_28 ; loc_2434C
                rts
Debug_Index: ; loc_23DBE:                  
                dc.w    Debug_GHz-Debug_Index   ; Green Hill
                dc.w    Debug_Null-Debug_Index  ; Null
                dc.w    Debug_Null-Debug_Index  ; Wood
                dc.w    Debug_Null-Debug_Index  ; Null
                dc.w    Debug_Mz-Debug_Index    ; Metropolis
                dc.w    Debug_Mz-Debug_Index    ; Metropolis
                dc.w    Debug_Null-Debug_Index  ; Null
                dc.w    Debug_HTz-Debug_Index   ; Hill Top
                dc.w    Debug_HPz-Debug_Index   ; Hidden Palace
                dc.w    Debug_Null-Debug_Index  ; Null
                dc.w    Debug_OOz-Debug_Index   ; Oil Ocean
                dc.w    Debug_DHz-Debug_Index   ; Dust Hill
                dc.w    Debug_CNz-Debug_Index   ; Casino Night
                dc.w    Debug_CPz-Debug_Index   ; Chemical Plant
                dc.w    Debug_Null-Debug_Index  ; Genocide City
                dc.w    Debug_NGHz-Debug_Index  ; Neo Green Hill
                dc.w    Debug_Null-Debug_Index  ; Death Egg
Debug_Null: ; loc_23DE0:  ; Null
                dc.w    $0002
                dc.l    ($25<<$18)|Rings_Mappings              ; loc_B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; loc_B6D2
                dc.b    $00, $00, $06, $80
Debug_GHz: ; loc_23DF2:  ; Green Hill
                dc.w    $0012                          
                dc.l    ($25<<$18)|Rings_Mappings              ; loc_B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; loc_B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($79<<$18)|Lamp_Post_Mappings          ; loc_13D8E
                dc.b    $01, $00, $04, $7C
                dc.l    ($03<<$18)|Obj03_MapUnc_147D0       ; loc_147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($49<<$18)|Waterfall_Mappings          ; loc_15404
                dc.b    $00, $00, $23, $AE
                dc.l    ($49<<$18)|Waterfall_Mappings          ; loc_15404                
                dc.b    $02, $03, $23, $AE
                dc.l    ($49<<$18)|Waterfall_Mappings          ; loc_15404 
                dc.b    $04, $05, $23, $AE
                dc.l    ($18<<$18)|Ghz_Platform_Mappings       ; loc_9078
                dc.b    $01, $00, $40, $00
                dc.l    ($18<<$18)|Ghz_Platform_Mappings       ; loc_9078
                dc.b    $9A, $01, $40, $00
                dc.l    ($36<<$18)|Spike_Mappings              ; loc_CBA0
                dc.b    $00, $00, $24, $34
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $81, $00, $04, $5C
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $90, $03, $04, $70
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $A0, $06, $04, $5C
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $30, $07, $04, $3C
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $40, $0A, $04, $3C
                dc.l    ($4B<<$18)|Buzz_Bomber_Mappings        ; loc_1EB0E
                dc.b    $00, $00, $03, $E6
                dc.l    ($54<<$18)|Motobug_Mappings            ; loc_1F938
                dc.b    $00, $00, $04, $02
                dc.l    ($53<<$18)|Chopper_Mappings            ; loc_1F696                
                dc.b    $00, $00, $04, $1C
                dc.l    ($4F<<$18)|Dinobot_Mappings            ; loc_1DFCA  ; Out of Pointers
                dc.b    $00, $00, $05, $00
                dc.l    ($52<<$18)|Piranha_Mappings            ; loc_1DE66  ; Out of Pointers
                dc.b    $00, $00, $25, $30
                dc.l    ($50<<$18)|Aquis_Mappings              ; loc_1E4E0  ; Out of Pointers
                dc.b    $00, $00, $25, $70
                dc.l    ($51<<$18)|Aquis_Mappings              ; loc_1E4E0  ; Out of Pointers
                dc.b    $00, $00, $25, $70
                dc.l    ($4D<<$18)|Rhinobot_Mappings           ; loc_1DAEE  ; Out of Pointers
                dc.b    $00, $00, $23, $C4
                dc.l    ($4B<<$18)|Buzz_Bomber_Mappings        ; loc_1EB0E  ; Out of Pointers
                dc.b    $00, $00, $03, $2C
                dc.l    ($4E<<$18)|Crocobot_Mappings           ; loc_1F420  ; Out of Pointers
                dc.b    $00, $00, $23, $00
                dc.l    ($4C<<$18)|Batbot_Mappings             ; loc_1F106  ; Out of Pointers
                dc.b    $00, $00, $23, $50
                dc.l    ($4A<<$18)|Octus_Mappings              ; loc_1EDBC  ; Out of Pointers
                dc.b    $00, $00, $23, $8A
Debug_Mz: ; loc_23ECC:  ; Metropolis
                dc.w    $001C
                dc.l    ($25<<$18)|Rings_Mappings              ; loc_B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; loc_B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($79<<$18)|Lamp_Post_Mappings          ; loc_13D8E
                dc.b    $01, $00, $04, $7C
                dc.l    ($03<<$18)|Obj03_MapUnc_147D0       ; loc_147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($42<<$18)|Steam_Vent_Mappings         ; loc_1A7FE                 
                dc.b    $01, $07, $60, $00
                dc.l    ($64<<$18)|Piston_Mappings             ; loc_1A9F0
                dc.b    $01, $00, $20, $00
                dc.l    ($64<<$18)|Piston_Mappings             ; loc_1A9F0
                dc.b    $11, $01, $20, $00
                dc.l    ($65<<$18)|Mz_Platform_Mappings        ; loc_1AE2C
                dc.b    $80, $00, $60, $00
                dc.l    ($65<<$18)|Mz_Platform_Mappings        ; loc_1AE2C
                dc.b    $13, $01, $60, $00
                dc.l    ($47<<$18)|Switch_Mappings             ; loc_18E3E
                dc.b    $00, $02, $04, $24
                dc.l    ($2D<<$18)|Automatic_Door_Mappings     ; loc_9E1E
                dc.b    $01, $01, $60, $00
                dc.l    ($66<<$18)|Spring_Wall_Mappings        ; loc_1B084
                dc.b    $01, $00, $86, $80
                dc.l    ($66<<$18)|Spring_Wall_Mappings        ; loc_1B084
                dc.b    $11, $01, $86, $80
                dc.l    ($68<<$18)|Block_Arrow_Mappings        ; loc_1B6DC
                dc.b    $00, $04, $64, $14
                dc.l    ($69<<$18)|Screw_Nut_Mappings          ; loc_1B9A6
                dc.b    $04, $00, $25, $00
                dc.l    ($6A<<$18)|Mz_Platform_Mappings        ; loc_1AE2C
                dc.b    $00, $01, $60, $00
                dc.l    ($6B<<$18)|Mz_Platform_Mappings        ; loc_1AE2C
                dc.b    $01, $01, $60, $00
                dc.l    ($6D<<$18)|Block_Arrow_Mappings        ; loc_1B6DC
                dc.b    $00, $00, $24, $1C
                dc.l    ($6E<<$18)|Machine_Mappings            ; loc_1C464
                dc.b    $00, $00, $60, $00
                dc.l    ($6E<<$18)|Machine_Mappings            ; loc_1C464
                dc.b    $10, $01, $60, $00
                dc.l    ($6E<<$18)|Machine_Mappings            ; loc_1C464
                dc.b    $20, $02, $60, $00
                dc.l    ($6F<<$18)|Parallelogram_Elevator_Mappings ; loc_1C7BE
                dc.b    $00, $00, $65, $3F
                dc.l    ($70<<$18)|Rotating_Gears_Mappings     ; loc_1CA16
                dc.b    $10, $00, $E3, $78
                dc.l    ($71<<$18)|Lava_Bubble_Mappings        ; loc_9BBE
                dc.b    $22, $05, $45, $36
                dc.l    ($1C<<$18)|loc_9B9A
                dc.b    $00, $00, $43, $FD
                dc.l    ($1C<<$18)|loc_9B9A
                dc.b    $01, $01, $43, $FD
                dc.l    ($1C<<$18)|loc_9B9A
                dc.b    $03, $02, $23, $FD
                dc.l    ($65<<$18)|Mz_Platform_Mappings        ; loc_1AE2C
                dc.b    $B0, $00, $60, $00
Debug_HTz: ; loc_23FAE:  ; Hill Top
                dc.w    $0019
                dc.l    ($25<<$18)|Rings_Mappings              ; loc_B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; loc_B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($79<<$18)|Lamp_Post_Mappings          ; loc_13D8E
                dc.b    $01, $00, $04, $7C
                dc.l    ($03<<$18)|Obj03_MapUnc_147D0       ; loc_147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($18<<$18)|Ghz_Platform_Mappings       ; loc_9078                    
                dc.b    $01, $00, $40, $00
                dc.l    ($18<<$18)|Ghz_Platform_Mappings       ; loc_9078  
                dc.b    $9A, $01, $40, $00
                dc.l    ($36<<$18)|Spike_Mappings              ; loc_CBA0
                dc.b    $00, $00, $24, $34
                dc.l    ($14<<$18)|See_Saw_Mappings            ; loc_15F54
                dc.b    $00, $00, $03, $C6
                dc.l    ($2D<<$18)|Automatic_Door_Mappings     ; loc_9E1E
                dc.b    $00, $00, $24, $26
                dc.l    ($2F<<$18)|Breakable_Floor_Mappings    ; loc_1786A
                dc.b    $00, $00, $C0, $00
                dc.l    ($20<<$18)|Fireball_Mappings           ; loc_173D0
                dc.b    $44, $02, $84, $16                   
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $81, $00, $04, $5C                  
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $90, $03, $04, $70                  
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $A0, $06, $04, $5C                     
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $30, $07, $04, $3C                    
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $40, $0A, $04, $3C
                dc.l    ($16<<$18)|Teleferics_Mappings         ; loc_1611E
                dc.b    $00, $00, $43, $E6
                dc.l    ($1C<<$18)|Teleferics_Mappings         ; loc_1611E
                dc.b    $04, $03, $43, $E6
                dc.l    ($1C<<$18)|Teleferics_Mappings         ; loc_1611E
                dc.b    $05, $04, $43, $E6
                dc.l    ($1C<<$18)|loc_9B3A
                dc.b    $07, $00, $40, $00
                dc.l    ($1C<<$18)|loc_9B3A
                dc.b    $08, $01, $40, $00
                dc.l    ($32<<$18)|Rock_Mappings               ; loc_179C2
                dc.b    $00, $00, $43, $B2
                dc.l    ($31<<$18)|Lava_Attributes_Mappings    ; loc_15612
                dc.b    $00, $00, $86, $80
                dc.l    ($31<<$18)|Lava_Attributes_Mappings    ; loc_15612
                dc.b    $01, $01, $86, $80
                dc.l    ($31<<$18)|Lava_Attributes_Mappings    ; loc_15612
                dc.b    $02, $02, $86, $80
Debug_HPz: ; loc_24078:  ; Hidden Palace
                dc.w    $0008
                dc.l    ($25<<$18)|Rings_Mappings              ; loc_B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; loc_B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($71<<$18)|Hpz_Orbs_Mappings           ; loc_9AFA
                dc.b    $11, $03, $E3, $5A
                dc.l    ($13<<$18)|Hpz_Waterfalls_Mappings     ; loc_14CF4
                dc.b    $04, $04, $E3, $15
                dc.l    ($1A<<$18)|HPz_Collapsing_Platforms_Mappings ; loc_9858
                dc.b    $00, $00, $43, $4A
                dc.l    ($03<<$18)|Obj03_MapUnc_147D0       ; loc_147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($4F<<$18)|Dinobot_Mappings            ; loc_1DFCA  
                dc.b    $00, $00, $05, $00
                dc.l    ($4C<<$18)|Batbot_Mappings             ; loc_1F106  
                dc.b    $00, $00, $25, $30
                dc.l    ($52<<$18)|Piranha_Mappings            ; loc_1DE66  ; Out of Pointers
                dc.b    $00, $00, $25, $30
                dc.l    ($50<<$18)|Aquis_Mappings              ; loc_1E4E0  ; Out of Pointers
                dc.b    $00, $00, $25, $70
                dc.l    ($51<<$18)|Aquis_Mappings              ; loc_1E4E0  ; Out of Pointers
                dc.b    $00, $00, $25, $70                 
                dc.l    ($4D<<$18)|Rhinobot_Mappings           ; loc_1DAEE  ; Out of Pointers
                dc.b    $00, $00, $23, $C4                   
                dc.l    ($4B<<$18)|Buzz_Bomber_Mappings        ; loc_1EB0E  ; Out of Pointers
                dc.b    $00, $00, $03, $2C                  
                dc.l    ($4E<<$18)|Crocobot_Mappings           ; loc_1F420  ; Out of Pointers
                dc.b    $00, $00, $23, $00                  
                dc.l    ($4A<<$18)|Octus_Mappings              ; loc_1EDBC  ; Out of Pointers
                dc.b    $00, $00, $23, $8A
Debug_OOz: ; loc_240F2:  ; Oil Ocean
                dc.w    $0010
                dc.l    ($25<<$18)|Rings_Mappings              ; loc_B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; loc_B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($33<<$18)|Touch_Booster_Mappings      ; loc_17EE2
                dc.b    $01, $00, $63, $2C
                dc.l    ($43<<$18)|Giant_Spikeball_Mappings    ; loc_1808E
                dc.b    $00, $00, $C3, $0C
                dc.l    ($19<<$18)|Elevator_Mappings           ; loc_16412
                dc.b    $23, $02, $63, $00
                dc.l    ($45<<$18)|Spring_Push_Boost_Mappings  ; loc_185C2
                dc.b    $02, $00, $43, $C5
                dc.l    ($45<<$18)|Spring_Push_Boost_Mappings  ; loc_185C2
                dc.b    $12, $0A, $43, $C5
                dc.l    ($46<<$18)|Spring_Ball_Mappings        ; loc_18CFA
                dc.b    $00, $01, $63, $54 
                dc.l    ($47<<$18)|Switch_Mappings             ; loc_18E3E
                dc.b    $00, $02, $04, $24
                dc.l    ($15<<$18)|Swing_Platforms_Mappings    ; loc_8AD8
                dc.b    $88, $01, $43, $E3
                dc.l    ($3D<<$18)|Break_Boost_Mappings        ; loc_1916E
                dc.b    $00, $00, $63, $32
                dc.l    ($48<<$18)|Cannon_Mappings             ; loc_194CA
                dc.b    $80, $00, $63, $68
                dc.l    ($48<<$18)|Cannon_Mappings             ; loc_194CA
                dc.b    $81, $01, $63, $68
                dc.l    ($48<<$18)|Cannon_Mappings             ; loc_194CA
                dc.b    $82, $02, $63, $68
                dc.l    ($48<<$18)|Cannon_Mappings             ; loc_194CA
                dc.b    $83, $03, $63, $68
                dc.l    ($1F<<$18)|OOz_Collapsing_Platforms_Mappings ; loc_9902
                dc.b    $00, $00, $63, $9D
                dc.l    ($1C<<$18)|loc_9B6A                              ; Out of Pointers
                dc.b    $0A, $00, $43, $46
                dc.l    ($1C<<$18)|loc_9B6A                              ; Out of Pointers
                dc.b    $0B, $01, $43, $46
                dc.l    ($1C<<$18)|loc_9B6A                              ; Out of Pointers
                dc.b    $0C, $02, $43, $46
                dc.l    ($1C<<$18)|loc_9B6A                              ; Out of Pointers
                dc.b    $0D, $03, $43, $46
Debug_DHz: ; loc_24194:  ; Dust Hill
                dc.w    $0010
                dc.l    ($25<<$18)|Rings_Mappings              ; loc_B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; loc_B6D2
                dc.b    $00, $00, $06, $80
                dc.l    ($15<<$18)|Dhz_Swing_Platforms_Mappings ; loc_8B46
                dc.b    $48, $02, $00, $00
                dc.l    ($1F<<$18)|Dhz_Collapsing_Platforms_Mappings ; loc_9942
                dc.b    $00, $00, $63, $F4
                dc.l    ($73<<$18)|Rotating_Rings_Mappings     ; loc_1CE1C
                dc.b    $F5, $00, $26, $BC
                dc.l    ($6A<<$18)|Rotating_Boxes_Mappings     ; loc_1BCB0
                dc.b    $18, $00, $63, $D4
                dc.l    ($2A<<$18)|Up_Down_Pillar_Mappings     ; loc_9CAE
                dc.b    $00, $00, $40, $00
                dc.l    ($36<<$18)|Spike_Mappings              ; loc_CBA0
                dc.b    $00, $00, $24, $34
                dc.l    ($36<<$18)|Spike_Mappings              ; loc_CBA0
                dc.b    $40, $04, $24, $34
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $81, $00, $04, $5C
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $90, $03, $04, $70
                dc.l    ($40<<$18)|Diagonal_Spring_Mappings    ; loc_1A58A
                dc.b    $01, $00, $04, $40
                dc.l    ($74<<$18)|Invisible_Block_Mappings    ; loc_156B2
                dc.b    $11, $00, $86, $80
                dc.l    ($75<<$18)|Spikeball_Chain_Mappings    ; loc_1D00A
                dc.b    $18, $02, $20, $00
                dc.l    ($76<<$18)|Platform_Spikes_Mappings    ; loc_1D1BA
                dc.b    $00, $00, $00, $00
                dc.l    ($77<<$18)|Dhz_Bridge_Mappings         ; loc_1D2E0
                dc.b    $01, $00, $64, $3C
Debug_CNz: ; loc_24216:  ; Casino Night
                dc.w    $0002
                dc.l    ($25<<$18)|Rings_Mappings              ; loc_B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; loc_B6D2
                dc.b    $00, $00, $06, $80
Debug_CPz: ; loc_24228:  ; Chemical Plant
                dc.w    $0013
                dc.l    ($25<<$18)|Rings_Mappings              ; loc_B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; loc_B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($0B<<$18)|Open_Close_Platform_Mappings ; loc_14996
                dc.b    $70, $00, $E3, $B0
                dc.l    ($1B<<$18)|Speed_Booster_Mappings      ; loc_1658A
                dc.b    $00, $00, $E3, $9C
                dc.l    ($1D<<$18)|Worms_Mappings              ; loc_16702
                dc.b    $15, $00, $E4, $3C
                dc.l    ($19<<$18)|Elevator_Mappings           ; loc_16412
                dc.b    $06, $00, $63, $A0
                dc.l    ($2D<<$18)|Automatic_Door_Mappings     ; loc_9E1E
                dc.b    $02, $02, $23, $94
                dc.l    ($32<<$18)|Tunel_Obstacule_Mappings    ; loc_179F6
                dc.b    $00, $00, $64, $30
                dc.l    ($6B<<$18)|Block_Mappings              ; loc_1BF4A
                dc.b    $10, $00, $64, $18
                dc.l    ($78<<$18)|Block_Mappings              ; loc_1BF4A
                dc.b    $00, $00, $64, $18        
                dc.l    ($7A<<$18)|Platform_Horizontal_Mappings ; loc_1D72C
                dc.b    $00, $00, $E4, $18
                dc.l    ($7B<<$18)|Spring_Tubes_Mappings       ; loc_1D920
                dc.b    $02, $00, $03, $E0
                dc.l    ($03<<$18)|Obj03_MapUnc_147D0       ; loc_147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($03<<$18)|Obj03_MapUnc_147D0       ; loc_147D0
                dc.b    $0D, $05, $26, $BC
                dc.l    ($36<<$18)|Spike_Mappings              ; loc_CBA0
                dc.b    $00, $00, $24, $34
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $81, $00, $04, $5C  
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $90, $03, $04, $70                                  
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $A0, $06, $04, $5C       
                dc.l    ($40<<$18)|Diagonal_Spring_Mappings    ; loc_1A58A
                dc.b    $01, $00, $04, $40
Debug_NGHz: ; loc_242C2:  ; Neo Green Hill
                dc.w    $0011
                dc.l    ($25<<$18)|Rings_Mappings              ; loc_B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; loc_B6D2
                dc.b    $00, $00, $06, $80
                dc.l    ($15<<$18)|Nghz_Swing_Platforms_Mappings ; loc_8B0E
                dc.b    $88, $02, $00, $00
                dc.l    ($18<<$18)|Nghz_Platform_Mappings      ; loc_90D0
                dc.b    $01, $00, $40, $00
                dc.l    ($18<<$18)|Nghz_Platform_Mappings      ; loc_90D0
                dc.b    $9A, $01, $40, $00
                dc.l    ($22<<$18)|Arrow_Shooter_Mappings     ; loc_197C6
                dc.b    $00, $01, $04, $17
                dc.l    ($23<<$18)|Pillar_Mappings             ; loc_199AA
                dc.b    $00, $00, $20, $00
                dc.l    ($2B<<$18)|Breakable_Pillar_Mappings   ; loc_19C30
                dc.b    $00, $00, $20, $00
                dc.l    ($2C<<$18)|Lava_Attributes_Mappings    ; loc_15612
                dc.b    $00, $00, $86, $80
                dc.l    ($2C<<$18)|Lava_Attributes_Mappings    ; loc_15612
                dc.b    $01, $01, $86, $80
                dc.l    ($2C<<$18)|Lava_Attributes_Mappings    ; loc_15612
                dc.b    $02, $02, $86, $80
                dc.l    ($40<<$18)|Diagonal_Spring_Mappings    ; loc_1A58A
                dc.b    $01, $00, $04, $40                  
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70                  
                dc.b    $81, $00, $04, $5C                  
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70                  
                dc.b    $90, $03, $04, $70    
                dc.l    ($41<<$18)|Spring_Mappings             ; loc_EF70
                dc.b    $A0, $06, $04, $5C    
                dc.l    ($03<<$18)|Obj03_MapUnc_147D0       ; loc_147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($36<<$18)|Spike_Mappings              ; loc_CBA0
                dc.b    $00, $00, $24, $34
J_Adjust2PArtPointer_28: ; loc_2434C:
                jmp     Adjust2PArtPointer     ; (loc_DC30)
                dc.w    $0000                   ; Filler
TilesMainTable: ; loc_24354:  
                dc.l    ($04<<$18)|Green_Hill_8x8_Tiles   ; loc_81C00 $04 = Sprite Pointer in 0x024420 
                dc.l    ($05<<$18)|Green_Hill_16x16_Map   ; loc_80C60 $05 = Sprite Pointer in 0x024420
                dc.l    ($04<<$18)|Green_Hill_128x128_Map ; loc_8692E $04 = Palette Pointer in 0x00294E
                dc.l    ($06<<$18)|Green_Hill_8x8_Tiles   ; loc_81C00 $06 = Sprite Pointer in 0x024420 
                dc.l    ($07<<$18)|Green_Hill_16x16_Map   ; loc_80C60 $07 = Sprite Pointer in 0x024420
                dc.l    ($05<<$18)|Green_Hill_128x128_Map ; loc_8692E $05 = Palette Pointer in 0x00294E
                dc.l    ($08<<$18)|Wood_8x8_Tiles         ; loc_8AB2E $08 = Sprite Pointer in 0x024420 
                dc.l    ($09<<$18)|Wood_16x16_Map         ; loc_89B8E $09 = Sprite Pointer in 0x024420
                dc.l    ($06<<$18)|Wood_128x128_Map       ; loc_8E826 $06 = Palette Pointer in 0x00294E
                dc.l    ($0A<<$18)|Green_Hill_8x8_Tiles   ; loc_81C00 $0A = Sprite Pointer in 0x024420 
                dc.l    ($0B<<$18)|Green_Hill_16x16_Map   ; loc_80C60 $0B = Sprite Pointer in 0x024420
                dc.l    ($07<<$18)|Green_Hill_128x128_Map ; loc_8692E $07 = Palette Pointer in 0x00294E
                dc.l    ($0C<<$18)|Metropolis_8x8_Tiles   ; loc_91716 $0C = Sprite Pointer in 0x024420 
                dc.l    ($0D<<$18)|Metropolis_16x16_Map   ; loc_90456 $0D = Sprite Pointer in 0x024420
                dc.l    ($08<<$18)|Metropolis_128x128_Map ; loc_94C56 $08 = Palette Pointer in 0x00294E
                dc.l    ($0C<<$18)|Metropolis_8x8_Tiles   ; loc_91716 $0C = Sprite Pointer in 0x024420 
                dc.l    ($0D<<$18)|Metropolis_16x16_Map   ; loc_90456 $0D = Sprite Pointer in 0x024420
                dc.l    ($08<<$18)|Metropolis_128x128_Map ; loc_94C56 $08 = Palette Pointer in 0x00294E
                dc.l    ($10<<$18)|Green_Hill_8x8_Tiles   ; loc_81C00 $10 = Sprite Pointer in 0x024420 
                dc.l    ($11<<$18)|Green_Hill_16x16_Map   ; loc_80C60 $11 = Sprite Pointer in 0x024420
                dc.l    ($0A<<$18)|Green_Hill_128x128_Map ; loc_8692E $0A = Palette Pointer in 0x00294E
                dc.l    ($12<<$18)|Green_Hill_8x8_Tiles   ; loc_81C00 $12 = Sprite Pointer in 0x024420 
                dc.l    ($13<<$18)|Green_Hill_16x16_Map   ; loc_80C60 $13 = Sprite Pointer in 0x024420
                dc.l    ($0B<<$18)|Green_Hill_128x128_Map ; loc_8692E $0B = Palette Pointer in 0x00294E
                dc.l    ($14<<$18)|Hidden_Palace_8x8_Tiles   ; loc_98B76 $14 = Sprite Pointer in 0x024420 
                dc.l    ($15<<$18)|Hidden_Palace_16x16_Map   ; loc_97596 $15 = Sprite Pointer in 0x024420
                dc.l    ($0C<<$18)|Hidden_Palace_128x128_Map ; loc_9B9F8 $0C = Palette Pointer in 0x00294E
                dc.l    ($16<<$18)|Green_Hill_8x8_Tiles   ; loc_81C00 $16 = Sprite Pointer in 0x024420 
                dc.l    ($17<<$18)|Green_Hill_16x16_Map   ; loc_80C60 $17 = Sprite Pointer in 0x024420
                dc.l    ($0D<<$18)|Green_Hill_128x128_Map ; loc_8692E $0D = Palette Pointer in 0x00294E
                dc.l    ($18<<$18)|Oil_Ocean_8x8_Tiles    ; loc_9ED58 $18 = Sprite Pointer in 0x024420 
                dc.l    ($19<<$18)|Oil_Ocean_16x16_Map    ; loc_9D778 $19 = Sprite Pointer in 0x024420
                dc.l    ($0E<<$18)|Oil_Ocean_128x128_Map  ; loc_A1A58 $0E = Palette Pointer in 0x00294E
                dc.l    ($1A<<$18)|Dust_Hill_8x8_Tiles    ; loc_A5248 $1A = Sprite Pointer in 0x024420 
                dc.l    ($1B<<$18)|Dust_Hill_16x16_Map    ; loc_A3F88 $1B = Sprite Pointer in 0x024420
                dc.l    ($0F<<$18)|Dust_Hill_128x128_Map  ; loc_A8B6A $0F = Palette Pointer in 0x00294E
                dc.l    ($1C<<$18)|Casino_Night_8x8_Tiles   ; loc_ABF2A $1C = Sprite Pointer in 0x024420 
                dc.l    ($1D<<$18)|Casino_Night_16x16_Map   ; loc_AB5CA $1D = Sprite Pointer in 0x024420
                dc.l    ($10<<$18)|Casino_Night_128x128_Map ; loc_AF026 $10 = Palette Pointer in 0x00294E
                dc.l    ($1E<<$18)|Chemical_Plant_8x8_Tiles   ; loc_B2506 $1E = Sprite Pointer in 0x024420 
                dc.l    ($1F<<$18)|Chemical_Plant_16x16_Map   ; loc_B0F26 $1F = Sprite Pointer in 0x024420
                dc.l    ($11<<$18)|Chemical_Plant_128x128_Map ; loc_B6058 $11 = Palette Pointer in 0x00294E
                dc.l    ($20<<$18)|Green_Hill_8x8_Tiles   ; loc_81C00 $20 = Sprite Pointer in 0x024420 
                dc.l    ($21<<$18)|Green_Hill_16x16_Map   ; loc_80C60 $21 = Sprite Pointer in 0x024420
                dc.l    ($12<<$18)|Green_Hill_128x128_Map ; loc_8692E $12 = Palette Pointer in 0x00294E
                dc.l    ($22<<$18)|Neo_Green_Hill_8x8_Tiles   ; loc_B9E58 $22 = Sprite Pointer in 0x024420 
                dc.l    ($23<<$18)|Neo_Green_Hill_16x16_Map   ; loc_B8558 $23 = Sprite Pointer in 0x024420
                dc.l    ($13<<$18)|Neo_Green_Hill_128x128_Map ; loc_BF568 $13 = Palette Pointer in 0x00294E
                dc.l    ($24<<$18)|Green_Hill_8x8_Tiles   ; loc_81C00 $24 = Sprite Pointer in 0x024420 
                dc.l    ($25<<$18)|Green_Hill_16x16_Map   ; loc_80C60 $25 = Sprite Pointer in 0x024420
                dc.l    ($14<<$18)|Green_Hill_128x128_Map ; loc_8692E $14 = Palette Pointer in 0x00294E
ArtLoadCues: ; loc_24420:
                dc.w    Standard_Sprites_1-ArtLoadCues ; $00
                dc.w    Standard_Sprites_2-ArtLoadCues ; $01
                dc.w    Standard_Sprites_3-ArtLoadCues ; $02                
                dc.w    Standard_Sprites_4-ArtLoadCues ; $03
                dc.w    Green_Hill_Sprites_1-ArtLoadCues ; $04 - Green Hill
                dc.w    Green_Hill_Sprites_2-ArtLoadCues ; $05 - Green Hill                
                dc.w    Wood_Sprites_1-ArtLoadCues ; $06 
                dc.w    Wood_Sprites_1-ArtLoadCues ; $07 
                dc.w    Wood_Sprites_1-ArtLoadCues ; $08 
                dc.w    Wood_Sprites_2-ArtLoadCues ; $09  
                dc.w    Metropolis_Sprites_1-ArtLoadCues ; $0A  
                dc.w    Metropolis_Sprites_1-ArtLoadCues ; $0B
                dc.w    Metropolis_Sprites_1-ArtLoadCues ; $0C
                dc.w    Metropolis_Sprites_2-ArtLoadCues ; $0D                
                dc.w    Hill_Top_Sprites_1-ArtLoadCues ; $0E
                dc.w    Hill_Top_Sprites_1-ArtLoadCues ; $0F 
                dc.w    Hill_Top_Sprites_1-ArtLoadCues ; $10
                dc.w    Hill_Top_Sprites_1-ArtLoadCues ; $11
                dc.w    Hill_Top_Sprites_1-ArtLoadCues ; $12                
                dc.w    Hill_Top_Sprites_2-ArtLoadCues ; $13
                dc.w    Hidden_Palace_Sprites_1-ArtLoadCues ; $14 
                dc.w    Hidden_Palace_Sprites_2-ArtLoadCues ; $15                
                dc.w    Oil_Ocean_Sprites_1-ArtLoadCues ; $16 
                dc.w    Oil_Ocean_Sprites_1-ArtLoadCues ; $17 
                dc.w    Oil_Ocean_Sprites_1-ArtLoadCues ; $18 
                dc.w    Oil_Ocean_Sprites_2-ArtLoadCues ; $19  
                dc.w    Dust_Hill_Sprites_1-ArtLoadCues ; $1A  
                dc.w    Dust_Hill_Sprites_2-ArtLoadCues ; $1B
                dc.w    Casino_Night_Sprites_1-ArtLoadCues ; $1C
                dc.w    Casino_Night_Sprites_2-ArtLoadCues ; $1D                
                dc.w    Chemical_Plant_Sprites_1-ArtLoadCues ; $1E
                dc.w    Chemical_Plant_Sprites_2-ArtLoadCues ; $1F 
                dc.w    Neo_Green_Hill_Sprites_1-ArtLoadCues ; $20
                dc.w    Neo_Green_Hill_Sprites_1-ArtLoadCues ; $21
                dc.w    Neo_Green_Hill_Sprites_1-ArtLoadCues ; $22                
                dc.w    Neo_Green_Hill_Sprites_2-ArtLoadCues ; $23
                dc.w    End_Level_Results_Sprites-ArtLoadCues ; $24 
                dc.w    End_Level_Results_Sprites-ArtLoadCues ; $25                
                dc.w    End_Level_Results_Sprites-ArtLoadCues ; $26 
                dc.w    End_Level_Sprites-ArtLoadCues ; $27 
                dc.w    Green_Hill_Boss-ArtLoadCues ; $28 
                dc.w    Green_Hill_Boss-ArtLoadCues ; $29  
                dc.w    Green_Hill_Boss-ArtLoadCues ; $2A  
                dc.w    Green_Hill_Boss-ArtLoadCues ; $2B
                dc.w    Green_Hill_Boss-ArtLoadCues ; $2C          
Standard_Sprites_1:  
loc_2447A: 
                dc.w    (((loc_2449A-loc_2447A-$02)/$06)-$01)
                dc.l    Lamp_Post               ; loc_79278: 
                dc.w    $8F80 
                dc.l    Head_up_display_Sprites ; loc_78A12
                dc.w    $D940   
                dc.l    Head_up_display_Sonic   ; loc_78B1A 
                dc.w    $FA80  
                dc.l    Rings                   ; loc_78C30: 
                dc.w    $D780  
                dc.l    Enemy_Points_Spr        ; loc_7919E:  
                dc.w    $9580                
loc_2449A:  
Standard_Sprites_2:           
                dc.w    (((loc_244AE-loc_2449A-$02)/$06)-$01)
                dc.l    Monitors                ; loc_78D24
                dc.w    $D000
                dc.l    Shield                  ; loc_6DF8E 
                dc.w    $97C0
                dc.l    Invencibility_Stars     ; loc_6E114
                dc.w    $9BC0
loc_244AE:   
Standard_Sprites_3:           
                dc.w    (((loc_244C2-loc_244AE-$02)/$06)-$01)
                dc.l    Explosion               ; loc_7F012
                dc.w    $B400  
                dc.l    Rabbit                  ; loc_80348
                dc.w    $B000 
                dc.l    White_Bird              ; loc_804A0 
                dc.w    $B240
Standard_Sprites_4:  
loc_244C2:
                dc.w    (((loc_244CA-loc_244C2-$02)/$06)-$01)
                dc.l    Game_Time_Over          ; loc_7F678
                dc.w    $ABC0
Green_Hill_Sprites_1:   
loc_244CA:
                dc.w    (((loc_244FC-loc_244CA-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Green_Hill_8x8_Tiles    ; loc_81C00
                dc.w    $0000                    
                dc.l    Ghz_Waterfall           ; loc_73B3C
                dc.w    $75C0 
                dc.l    Ghz_Bridge              ; loc_73D90  
                dc.w    $78C0    
                dc.l    FireBall                ; loc_739C6  
                dc.w    $79C0 
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680   
                dc.l    Diagonal_Spring         ; loc_7883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00
Green_Hill_Sprites_2:                  
loc_244FC: 
                dc.w    (((loc_24510-loc_244FC-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Ghz_Buzzer_Bomber       ; loc_7A4BC
                dc.w    $7CC0 
                dc.l    Ghz_Motobug             ; loc_7C514
                dc.w    $8040   
                dc.l    Ghz_Chopper             ; loc_7CA92
                dc.w    $8380    
Wood_Sprites_1:   
loc_24510:
                dc.w    (((loc_24518-loc_24510-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Wood_8x8_Tiles          ; loc_8AB2E
                dc.w    $0000     
Wood_Sprites_2: 
loc_24518: 
                dc.w    (((loc_24532-loc_24518-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680 
                dc.l    Diagonal_Spring         ; loc_7883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00                   
Metropolis_Sprites_1:   
loc_24532:
                dc.w    (((loc_2456A-loc_24532-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Metropolis_8x8_Tiles    ; loc_91716
                dc.w    $0000 
                dc.l    Mz_Teleport             ; loc_75382
                dc.w    $6780   
                dc.l    Mz_Rotating_Gear        ; loc_7461C
                dc.w    $6F00 
                dc.l    Mz_Machine_Ball         ; loc_74A74
                dc.w    $7E00   
                dc.l    loc_74EE2
                dc.w    $7F20  
                dc.l    loc_751FE
                dc.w    $7FA0
                dc.l    Mz_Steam                ; loc_74BEA  
                dc.w    $80A0
                dc.l    Mz_Block                ; loc_74B1C  
                dc.w    $8280
                dc.l    Mz_Harpoon              ; loc_74CF4
                dc.w    $8380
loc_2456A: 
Metropolis_Sprites_2: 
                dc.w    (((loc_245A2-loc_2456A-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Switch                  ; loc_78580
                dc.w    $8480     
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680 
                dc.l    Diagonal_Spring         ; loc_7883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00   
                dc.l    Mz_Screw_Nut            ; loc_74DB6
                dc.w    $A000
                dc.l    Mz_Lava_Bubble          ; loc_74E2C
                dc.w    $A6C0 
                dc.l    Mz_Parallelogram_Elevator  ; loc_74F52    
                dc.w    $A7E0  
                dc.l    Mz_Mini_Gear            ; loc_752A0
                dc.w    $ABE0       
Hill_Top_Sprites_1:   
loc_245A2:
                dc.w    (((loc_245E0-loc_245A2-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Green_Hill_8x8_Tiles    ; loc_81C00
                dc.w    $0000 
                dc.l    Hill_Top_8x8_Tiles      ; loc_85200
                dc.w    $3F80
                dc.l    FireBall                ; loc_739C6  
                dc.w    $73C0   
                dc.l    Htz_Rock                ; loc_7447A
                dc.w    $7640   
                dc.l    Htz_See_saw             ; loc_741D4
                dc.w    $78C0 
                dc.l    Htz_See_saw_badnick     ; loc_745B0 
                dc.w    $7BC0 
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680                
                dc.l    Diagonal_Spring         ; loc_7883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00 
Hill_Top_Sprites_2:                   
loc_245E0: 
                dc.w    (((loc_245F4-loc_245E0-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Htz_Teleferic           ; loc_73E68 
                dc.w    $7CC0 
                dc.l    Htz_Lava_Bubble         ; loc_73C42
                dc.w    $82C0 
                dc.l    Htz_Automatic_Door      ; loc_7415C 
                dc.w    $84C0 
Hidden_Palace_Sprites_1:   
loc_245F4:
                dc.w    (((loc_24626-loc_245F4-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Hidden_Palace_8x8_Tiles ; loc_98B76
                dc.w    $0000 
                dc.l    Hpz_Bridge              ; loc_7538E 
                dc.w    $6000 
                dc.l    Hpz_Waterfall           ; loc_75506
                dc.w    $62A0 
                dc.l    Hpz_Platform            ; loc_75ADA
                dc.w    $6940     
                dc.l    Hpz_Orbs_Comp           ; loc_75B9A   
                dc.w    $6B40 
                dc.l    Hpz_Unknow_Platform     ; loc_75DD6   
                dc.w    $6F80 
                dc.l    Hpz_Emerald             ; loc_75868
                dc.w    $7240  
                dc.l    Water_Surface           ; loc_777D2  
                dc.w    $8000  
Hidden_Palace_Sprites_2:                                        
loc_24626: 
                dc.w   (((loc_2463A-loc_24626-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Hpz_Dinobot             ; loc_7B114 
                dc.w    $A000 
                dc.l    Hpz_Batbot              ; loc_7A6A2
                dc.w    $A600                  
loc_2463A: ; Not all sprites are loaded in to VRam               
                dc.l    Hpz_Crocobot            ; loc_7A11A ; Left Over 
                dc.w    $6000 
                dc.l    Ghz_Buzzer_Bomber       ; loc_7A4BC
                dc.w    $6580  
                dc.l    Hpz_Batbot              ; loc_7A6A2
                dc.w    $6A00  
                dc.l    Hpz_Rhinobot            ; loc_7AD18 ; Left Over
                dc.w    $7880 
                dc.l    Hpz_Dinobot             ; loc_7B114 
                dc.w    $A000 
                dc.l    Hpz_Piranha             ; loc_7B4EA ; Left Over
                dc.w    $A600   
Oil_Ocean_Sprites_1:   
loc_24658:
                dc.w    (((loc_24684-loc_24658-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Oil_Ocean_8x8_Tiles     ; loc_9ED58
                dc.w    $0000
                dc.l    OOz_Elevator            ; loc_75F70
                dc.w    $6000   
                dc.l    OOz_Giant_Spikeball     ; loc_76060
                dc.w    $6180 
                dc.l    OOz_Touch_Boost_Up      ; loc_76258
                dc.w    $6580  
                dc.l    OOz_Break_Boost         ; loc_762EE
                dc.w    $6640 
                dc.l    OOz_Oil                 ; loc_7635A
                dc.w    $66C0    
                dc.l    OOz_Tube_Oil            ; loc_764D6
                dc.w    $68C0                  
Oil_Ocean_Sprites_2:    
loc_24684: 
                dc.w    (((loc_246C2-loc_24684-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    OOz_Ball                ; loc_76602 
                dc.w    $6A80 
                dc.l    OOz_Cannon              ; loc_76722
                dc.w    $6D00 
                dc.l    OOz_Collapsing_Platform ; loc_76A12
                dc.w    $73A0  
                dc.l    OOz_Spring_Push_Boost   ; loc_76CA6
                dc.w    $78A0       
                dc.l    OOz_Swing_Platform      ; loc_76E68
                dc.w    $7C60 
                dc.l    Switch                  ; loc_78580
                dc.w    $8480   
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680   
                dc.l    Diagonal_Spring         ; loc_7883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00 
Dust_Hill_Sprites_1:   
loc_246C2:
                dc.w    (((loc_246E2-loc_246C2-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Dust_Hill_8x8_Tiles     ; loc_A5248
                dc.w    $0000 
                dc.l    Dhz_Box                 ; loc_7708A
                dc.w    $7A80  
                dc.l    Dhz_Collapsing_Platform ; loc_772C8
                dc.w    $7E80     
                dc.l    Dhz_Vines               ; loc_77472
                dc.w    $81C0   
                dc.l    Dhz_Vines_1             ; loc_7756A
                dc.w    $83C0 
Dust_Hill_Sprites_2:  
loc_246E2:      
                dc.w    (((loc_24708-loc_246E2-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Dhz_Horizontal_Spikes   ; loc_79A44        
                dc.w    $8580 
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680   
                dc.l    Dhz_Bridge              ; loc_77614
                dc.w    $8780  
                dc.l    Diagonal_Spring_1       ; loc_798F4
                dc.w    $8800  
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00   
Casino_Night_Sprites_1:   
loc_24708:
                dc.w    (((loc_24716-loc_24708-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Casino_Night_8x8_Tiles  ; loc_ABF2A
                dc.w    $0000                   
                dc.l    Cnz_Cards               ; loc_AEF3C
                dc.w    $7A00   
Casino_Night_Sprites_2:  
loc_24716: 
                dc.w    (((loc_24730-loc_24716-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680   
                dc.l    Diagonal_Spring         ; loc_7883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00                 
Chemical_Plant_Sprites_1:   
loc_24730:
                dc.w    (((loc_2476E-loc_24730-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Chemical_Plant_8x8_Tiles ; loc_B2506
                dc.w    $0000 
                dc.l    Cpz_Metal_Structure     ; loc_77A1C  
                dc.w    $6E60
                dc.l    Cpz_Automatic_Door      ; loc_77C66
                dc.w    $7280 
                dc.l    Cpz_Speed_Booster       ; loc_77942
                dc.w    $7380
                dc.l    Cpz_Elevator            ; loc_77684
                dc.w    $7400  
                dc.l    Cpz_Open_Close_Platform ; loc_77CD2 
                dc.w    $7600  
                dc.l    Cpz_Spring_Tubes        ; loc_78074
                dc.w    $7C00   
                dc.l    Water_Surface           ; loc_777D2  
                dc.w    $8000
                dc.l    Cpz_Platforms           ; loc_77EB4
                dc.w    $8300 
                dc.l    loc_77C26
                dc.w    $8600 
Chemical_Plant_Sprites_2:      
loc_2476E:
                dc.w    (((loc_24794-loc_2476E-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Air_Bubbles_Numbers     ; loc_79AC0
                dc.w    $A000 
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680  
                dc.l    Cpz_Worms               ; loc_779AA
                dc.w    $8780  
                dc.l    Diagonal_Spring_1       ; loc_798F4
                dc.w    $8800  
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00      
Neo_Green_Hill_Sprites_1:   
loc_24794:
                dc.w    (((loc_247B4-loc_24794-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Neo_Green_Hill_8x8_Tiles ; loc_B9E58
                dc.w    $0000 
                dc.l    Nghz_Water_Surface      ; loc_78270
                dc.w    $8000   
                dc.l    Nghz_Leaves             ; loc_78356
                dc.w    $8200    
                dc.l    Nghz_Arrow_Shooter      ; loc_783E2
                dc.w    $82E0  
                dc.l    Nghz_Water_Splash       ; loc_78540
                dc.w    $8500  
Neo_Green_Hill_Sprites_2:                                       
loc_247B4:
                dc.w    (((loc_247D4-loc_247B4-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Air_Bubbles_Numbers     ; loc_79AC0
                dc.w    $A000 
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680   
                dc.l    Diagonal_Spring_1       ; loc_798F4
                dc.w    $8800   
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00    
End_Level_Results_Sprites:                 
loc_247D4:  
                dc.w    (((loc_247DC-loc_247D4-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Title_Cards             ; loc_7EA04    
                dc.w    $B000   
End_Level_Sprites:                                
loc_247DC:
                dc.w    (((loc_247E4-loc_247DC-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto                  
                dc.l    End_Panel               ; loc_7931E 
                dc.w    $8680
loc_247E4: ; Not all sprites are loaded in to VRam                   
                dc.l    Hidden_Points           ; loc_7FB5C
                dc.w    $96C0
                dc.l    Big_Ring_Flash          ; loc_7F9E8
                dc.w    $8C40
Green_Hill_Boss:
loc_247F0:   
                dc.w    (((loc_24804-loc_247F0-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Robotnik_Ship           ; loc_7CC9E 
                dc.w    $8C00
                dc.l    Ghz_Boss_Car            ; loc_7E124
                dc.w    $9800
                dc.l    Ghz_Boss_Blades         ; loc_7E910
                dc.w    $A800 
loc_24804: ; Not all sprites are loaded in to VRam  
                dc.l    Robotnik_Ship           ; loc_7CC9E 
                dc.w    $8000
                dc.l    Cpz_Boss                ; loc_7D3DA   
                dc.w    $8C00
                dc.l    Ship_Boost              ; loc_7DFC0 
                dc.w    $9A00 
                dc.l    Boss_Smoke              ; loc_7E03E 
                dc.w    $9B00 
                dc.l    Ghz_Boss_Car            ; loc_7E124
                dc.w    $9D00
                dc.l    Ghz_Boss_Blades         ; loc_7E910
                dc.w    $AD00                 
                dc.w    (Diagonal_Spring_1&$FFFF) ; loc_798F4 ; Left over from previous build
                dc.w    $8800                   
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00  
loc_24838:                
                dc.w    (((loc_24840-loc_24838-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto 
                dc.l    Title_Cards             ; loc_7EA04    
                dc.w    $B000   
loc_24840:  
                dc.w    (((loc_24848-loc_24840-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    End_Panel               ; loc_7931E 
                dc.w    $8680
loc_24848:     
                dc.l    Hidden_Points           ; loc_7FB5C
                dc.w    $96C0
                dc.l    Big_Ring_Flash          ; loc_7F9E8
                dc.w    $8C40
loc_24854:                   
                dc.w    (((loc_24868-loc_24854-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Robotnik_Ship           ; loc_7CC9E 
                dc.w    $8C00
                dc.l    Ghz_Boss_Car            ; loc_7E124
                dc.w    $9800
                dc.l    Ghz_Boss_Blades         ; loc_7E910
                dc.w    $A800 
loc_24868:                  
                dc.l    Robotnik_Ship           ; loc_7CC9E 
                dc.w    $8000
                dc.l    Cpz_Boss                ; loc_7D3DA   
                dc.w    $8C00
                dc.l    Ship_Boost              ; loc_7DFC0 
                dc.w    $9A00 
                dc.l    Boss_Smoke              ; loc_7E03E 
                dc.w    $9B00 
                dc.l    Ghz_Boss_Car            ; loc_7E124
                dc.w    $9D00
                dc.l    Ghz_Boss_Blades         ; loc_7E910
                dc.w    $AD00
                dc.w    (Boss_Smoke&$FFFF)      ; loc_7E03E ; Left over from previous build
                dc.w    $9B00 
                dc.l    Ghz_Boss_Car            ; loc_7E124
                dc.w    $9D00
                dc.l    Ghz_Boss_Blades         ; loc_7E910
                dc.w    $AD00
                dc.l    Dhz_Bridge              ; loc_77614
                dc.w    $8780
                dc.l    (Diagonal_Spring_1-$0188) ; loc_7976C ; Left over from previous build
                dc.w    $8800  
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80 
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00 
Casino_Night_Sprites_Previous_Build_1:                 
loc_248B4:
                dc.w    (((loc_248C2-loc_248B4-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto 
                dc.l    Casino_Night_8x8_Tiles-$07E2 ; loc_AB748 ; Left over from previous build
                dc.w    $0000
                dc.l    Cnz_Cards-$07E2              ; loc_AE75A ; Left over from previous build
                dc.w    $7A00 
Casino_Night_Sprites_Previous_Build_2:                   
loc_248C2:     
                dc.w    (((loc_248DC-loc_248C2-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680   
                dc.l    Diagonal_Spring         ; loc_7883E
                dc.w    $8780   
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80 
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00 
Chemical_Plant_Sprites_Previous_Build_1:                  
loc_248DC:                 
                dc.w    (((loc_2491A-loc_248DC-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Chemical_Plant_8x8_Tiles-$07E2 ; loc_B1D24
                dc.w    $0000 
                dc.l    Cpz_Metal_Structure     ; loc_77A1C  
                dc.w    $6E60
                dc.l    Cpz_Automatic_Door      ; loc_77C66
                dc.w    $7280 
                dc.l    Cpz_Speed_Booster       ; loc_77942
                dc.w    $7380
                dc.l    Cpz_Elevator            ; loc_77684
                dc.w    $7400  
                dc.l    Cpz_Open_Close_Platform ; loc_77CD2 
                dc.w    $7600  
                dc.l    Cpz_Spring_Tubes        ; loc_78074
                dc.w    $7C00   
                dc.l    Water_Surface           ; loc_777D2  
                dc.w    $8000
                dc.l    Cpz_Platforms           ; loc_77EB4
                dc.w    $8300 
                dc.l    loc_77C26
                dc.w    $8600 
Chemical_Plant_Sprites_Previous_Build_2:                                   
loc_2491A: 
                dc.w    (((loc_2493A-loc_2491A-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680  
                dc.l    Cpz_Worms               ; loc_779AA
                dc.w    $8780                         
                dc.l    (Diagonal_Spring_1-$0188) ; loc_7976C 
                dc.w    $8800  
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00   
Neo_Green_Hill_Sprites_Previous_Build_1:                    
loc_2493A:      
                dc.w    (((loc_2495A-loc_2493A-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Neo_Green_Hill_8x8_Tiles-$07D2 ; loc_B9686
                dc.w    $0000
                dc.l    Nghz_Water_Surface      ; loc_78270
                dc.w    $8000   
                dc.l    Nghz_Leaves             ; loc_78356
                dc.w    $8200    
                dc.l    Nghz_Arrow_Shooter      ; loc_783E2
                dc.w    $82E0  
                dc.l    Nghz_Water_Splash       ; loc_78540
                dc.w    $8500  
Neo_Green_Hill_Sprites_Previous_Build_2:                  
loc_2495A:    
                dc.w    (((loc_24974-loc_2495A-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Spikes                  ; loc_7914E
                dc.w    $8680   
                dc.l    (Diagonal_Spring_1-$0188) ; loc_7976C 
                dc.w    $8800   
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00   
End_Level_Results_Sprites_Previous_Build:                    
loc_24974:  
                dc.w    (((loc_2497C-loc_24974-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Title_Cards-$07E2       ; loc_7E222    
                dc.w    $B000  
End_Level_Sprites_Previous_Build:                                
loc_2497C: 
                dc.w    (((loc_24990-loc_2497C-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto                  
                dc.l    End_Panel               ; loc_7931E 
                dc.w    $D000
                dc.l    Hidden_Points-$07E2     ; loc_7F37A
                dc.w    $96C0
                dc.l    Big_Ring_Flash-$07E2    ; loc_7F206
                dc.w    $8C40
Green_Hill_Boss_Previous_Build:
loc_24990: 
                dc.w    (((loc_249A4-loc_24990-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Robotnik_Ship-$07E2     ; loc_7C4BC 
                dc.w    $8C00
                dc.l    Ghz_Boss_Car-$07E2      ; loc_7D942
                dc.w    $9800
                dc.l    Ghz_Boss_Blades-$07E2   ; loc_7E12E
                dc.w    $A800 
loc_249A4:                
                dc.l    Robotnik_Ship-$07E2     ; loc_7C4BC 
                dc.w    $8000                   
                dc.l    Cpz_Boss-$07E2          ; loc_7CBF8   
                dc.w    $8C00                 
                dc.l    Ship_Boost-$07E2        ; loc_7D7DE 
                dc.w    $9A00                   
                dc.l    Boss_Smoke-$07E2        ; loc_7D85C 
                dc.w    $9B00 
                dc.l    Ghz_Boss_Car-$07E2      ; loc_7D942
                dc.w    $9D00                   
                dc.l    Ghz_Boss_Blades-$07E2   ; loc_7E12E
                dc.w    $AD00   
                dc.w    $8680               
                dc.l    (Diagonal_Spring_1-$0188) ; loc_7976C 
                dc.w    $8800  
                dc.l    Vertical_Spring         ; loc_78658
                dc.w    $8B80 
                dc.l    Horizontal_Spring       ; loc_78774
                dc.w    $8E00 
loc_249DC:  
                dc.w    (((loc_249E4-loc_249DC-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Title_Cards-$07E2       ; loc_7E222    
                dc.w    $B000  
loc_249E4: 
                dc.w    (((loc_249F8-loc_249E4-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto                  
                dc.l    End_Panel               ; loc_7931E 
                dc.w    $D000
                dc.l    Hidden_Points-$07E2     ; loc_7F37A
                dc.w    $96C0
                dc.l    Big_Ring_Flash-$07E2    ; loc_7F206
                dc.w    $8C40 
loc_249F8: 
                dc.w    (((loc_24A0C-loc_249F8-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Robotnik_Ship-$07E2     ; loc_7C4BC 
                dc.w    $8C00
                dc.l    Ghz_Boss_Car-$07E2      ; loc_7D942
                dc.w    $9800
                dc.l    Ghz_Boss_Blades-$07E2   ; loc_7E12E
                dc.w    $A800 
loc_24A0C: 
                dc.l    Robotnik_Ship-$07E2     ; loc_7C4BC 
                dc.w    $8000                   
                dc.l    Cpz_Boss-$07E2          ; loc_7CBF8   
                dc.w    $8C00                 
                dc.l    Ship_Boost-$07E2        ; loc_7D7DE 
                dc.w    $9A00                   
                dc.l    Boss_Smoke-$07E2        ; loc_7D85C 
                dc.w    $9B00 
                dc.l    Ghz_Boss_Car-$07E2      ; loc_7D942
                dc.w    $9D00                   
                dc.l    Ghz_Boss_Blades-$07E2   ; loc_7E12E
                dc.w    $AD00                  
Unknow_Data_0x024A30:
loc_24A30:
                dc.b    $00, $78, $00, $06, $00, $07, $00, $06, $00, $10, $80, $06, $03, $0A, $06, $00
                dc.b    $07, $08, $60, $00, $06, $66, $88, $89, $07, $01, $10, $06, $0A, $01, $07, $00
                dc.b    $01, $10, $00, $11, $10, $00, $70, $02, $06, $77, $00, $11, $11, $66, $77, $03
                dc.b    $01, $07, $03, $01, $17, $03, $02, $9F, $10, $02, $02, $01, $10, $02, $01, $01
                dc.b    $02, $02, $09, $61, $02, $0A, $18, $66, $09, $EF, $87, $00, $97, $10, $6F, $76
                dc.b    $02, $0C, $10, $10, $77, $11, $06, $00, $17, $00, $10, $00, $01, $10, $02, $2D
                dc.b    $01, $01, $01, $61, $11, $06, $10, $77, $86, $17, $78, $88, $F7, $11, $0F, $07
                dc.b    $77, $00, $66, $FF, $17, $61, $01, $06, $07, $70, $67, $71, $16, $10, $76, $11
                dc.b    $10, $01, $10, $61, $06, $00, $61, $77, $E8, $9E, $9E, $E9, $77, $03, $0C, $F0
                dc.b    $07, $10, $00, $7F, $00, $01, $00, $17, $F0, $77, $61, $02, $0E, $77, $07, $67
                dc.b    $87, $11, $67, $F8, $11, $00, $01, $E9, $86, $66, $11, $02, $02, $07, $11, $05
                dc.b    $02, $E0, $71, $05, $01, $0E, $05, $0C, $71, $00, $E0, $77, $70, $00, $77, $77
                dc.b    $70, $16, $00, $70, $02, $01, $10, $02, $08, $07, $00, $07, $07, $00, $01, $00
                dc.b    $70, $04, $0E, $70, $00, $10, $00, $07, $00, $01, $07, $00, $10, $00, $11, $66
                dc.b    $71, $03, $02, $07, $11, $02, $01, $70, $04, $01, $01, $03, $01, $10, $02, $01
                dc.b    $70, $03, $01, $07, $03, $04, $61, $00, $01, $16, $0A, $02, $10, $70, $02, $01
                dc.b    $07, $02, $01, $01, $04, $01, $70, $05, $04, $60, $01, $76, $66, $10, $01, $70
                dc.b    $09, $06, $11, $00, $98, $88, $67, $10, $0B, $03, $01, $00, $0E, $05, $05, $70
                dc.b    $00, $E0, $07, $07, $04, $04, $88, $76, $61, $66, $05, $01, $10, $18, $04, $16
                dc.b    $66, $00, $01, $02, $05, $01, $10, $70, $00, $01, $04, $01, $07, $0B, $01, $07
                dc.b    $02, $08, $66, $00, $66, $76, $00, $70, $01, $10, $02, $01, $10, $02, $02, $07
                dc.b    $01, $07, $02, $71, $01, $03, $01, $11, $03, $04, $10, $66, $66, $61, $08, $01
                dc.b    $11, $03, $01, $10, $10, $05, $01, $66, $88, $89, $17, $03, $02, $77, $70, $02
                dc.b    $03, $70, $00, $E0, $05, $01, $70, $07, $02, $07, $70, $02, $06, $07, $76, $68
                dc.b    $88, $07, $01, $08, $01, $10, $02, $01, $70, $04, $01, $01, $02, $03, $07, $00
                dc.b    $10, $02, $06, $70, $01, $66, $66, $61, $11, $09, $05, $01, $10, $00, $10, $67
                dc.b    $02, $02, $06, $07, $02, $02, $70, $70, $02, $14, $07, $00, $10, $00, $FF, $8F
                dc.b    $FF, $EE, $87, $00, $10, $70, $18, $F7, $76, $F8, $01, $78, $FF, $07, $02, $08
                dc.b    $70, $70, $00, $10, $00, $01, $00, $01, $04, $10, $17, $10, $EE, $9E, $E8, $91
                dc.b    $77, $07, $88, $80, $88, $88, $61, $11, $01, $11, $02, $01, $10, $0F, $01, $10
                dc.b    $03, $01, $10, $1B, $03, $61, $10, $11, $02, $01, $10, $04, $08, $10, $00, $07
                dc.b    $10, $01, $01, $E0, $71, $03, $06, $07, $10, $00, $0E, $00, $71, $02, $07, $E0
                dc.b    $07, $01, $88, $86, $77, $16, $02, $03, $10, $00, $10, $03, $01, $01, $03, $01
                dc.b    $70, $08, $04, $10, $01, $07, $77, $03, $05, $76, $10, $00, $11, $70, $0A, $01
                dc.b    $01, $03, $02, $01, $01, $03, $01, $70, $03, $02, $07, $10, $02, $04, $66, $11
                dc.b    $66, $66, $05, $01, $17, $06, $01, $11, $03, $01, $10, $04, $01, $70, $06, $04
                dc.b    $11, $66, $66, $66, $10, $01, $71, $0B, $01, $61, $1A, $01, $01, $03, $05, $10
                dc.b    $22, $22, $22, $33, $1C, $0B, $23, $23, $44, $44, $10, $00, $70, $00, $11, $01
                dc.b    $07, $03, $02, $10, $70, $02, $02, $01, $07, $03, $01, $10, $07, $04, $01, $66
                dc.b    $66, $61, $03, $01, $71, $06, $01, $07, $02, $03, $07, $70, $71, $02, $03, $11
                dc.b    $77, $10, $04, $01, $01, $02, $05, $01, $60, $00, $16, $10, $1B, $05, $17, $66
                dc.b    $66, $68, $9E, $04, $0B, $07, $70, $0E, $00, $70, $17, $00, $EE, $01, $01, $70
                dc.b    $03, $06, $07, $77, $00, $01, $01, $10, $02, $06, $10, $01, $98, $89, $88, $88
                dc.b    $08, $01, $E0, $03, $02, $0E, $E0, $02, $02, $70, $0E, $02, $01, $07, $07, $08
                dc.b    $97, $00, $99, $EE, $00, $07, $01, $70, $07, $01, $17, $03, $01, $01, $05, $02
                dc.b    $07, $01, $05, $06, $E0, $77, $11, $00, $07, $01, $02, $01, $70, $08, $01, $10
                dc.b    $0E, $04, $99, $86, $61, $11, $11, $01, $0E, $0A, $06, $99, $98, $61, $11, $00
                dc.b    $10, $1A, $08, $99, $86, $66, $10, $00, $0E, $00, $71, $03, $01, $07, $02, $01
                dc.b    $E0, $04, $01, $07, $0A, $0D, $0E, $00, $9E, $E9, $89, $70, $17, $00, $10, $10
                dc.b    $10, $77, $71, $02, $01, $07, $02, $01, $01, $04, $04, $07, $01, $01, $11, $03
                dc.b    $17, $10, $70, $07, $00, $77, $77, $66, $10, $70, $70, $10, $01, $00, $07, $01
                dc.b    $10, $07, $00, $70, $10, $00, $07, $70, $02, $05, $70, $10, $07, $00, $01, $04
                dc.b    $07, $10, $70, $00, $76, $77, $00, $07, $03, $01, $70, $18, $03, $76, $66, $66
                dc.b    $07, $09, $01, $00, $01, $00, $17, $00, $70, $11, $78, $02, $05, $7F, $80, $00
                dc.b    $07, $80, $02, $09, $08, $01, $10, $66, $6E, $FE, $E8, $00, $16, $02, $3C, $11
                dc.b    $78, $FF, $F0, $FF, $00, $11, $18, $00, $80, $10, $01, $11, $00, $01, $10, $01
                dc.b    $00, $01, $11, $10, $01, $00, $01, $FF, $FE, $EF, $FF, $70, $00, $61, $00, $0F
                dc.b    $FF, $87, $11, $81, $11, $00, $FF, $10, $01, $08, $00, $01, $10, $00, $11, $11
                dc.b    $10, $00, $10, $10, $00, $10, $01, $FF, $FE, $FE, $EE, $02, $03, $01, $01, $10
                dc.b    $02, $1A, $10, $71, $00, $10, $77, $87, $11, $07, $07, $08, $F7, $00, $71, $00
                dc.b    $08, $70, $00, $01, $10, $80, $00, $FF, $FE, $87, $00, $10, $02, $01, $10, $02
                dc.b    $08, $01, $00, $10, $01, $70, $00, $71, $07, $02, $01, $77, $03, $02, $10, $17
                dc.b    $02, $01, $07, $03, $04, $01, $11, $10, $16, $02, $02, $11, $77, $02, $02, $10
                dc.b    $07, $02, $02, $01, $70, $07, $01, $17, $08, $06, $10, $01, $00, $01, $01, $01
                dc.b    $07, $01, $10, $02, $01, $70, $0C, $01, $10, $02, $05, $70, $66, $88, $88, $10
                dc.b    $13, $02, $10, $0E, $02, $01, $07, $03, $04, $9E, $0E, $99, $98, $03, $01, $01
                dc.b    $0E, $01, $70, $06, $01, $E0, $02, $04, $89, $86, $61, $11, $05, $01, $10, $02
                dc.b    $01, $10, $13, $04, $99, $98, $61, $11, $02, $01, $07, $19, $04, $99, $98, $66
                dc.b    $11, $1C, $04, $99, $98, $88, $61, $0F, $01, $E7, $0C, $06, $89, $EE, $EE, $96
                dc.b    $00, $70, $03, $04, $70, $00, $71, $07, $03, $06, $07, $70, $00, $07, $11, $07
                dc.b    $03, $01, $17, $02, $02, $71, $07, $02, $06, $70, $11, $67, $00, $10, $01, $03
                dc.b    $01, $70, $07, $01, $77, $02, $03, $10, $00, $10, $02, $05, $70, $10, $70, $00
                dc.b    $07, $02, $04, $77, $07, $67, $70, $1D, $0E, $08, $99, $98, $00, $08, $11, $10
                dc.b    $00, $08, $00, $01, $00, $80, $11, $03, $02, $01, $01, $02, $01, $10, $02, $01
                dc.b    $80, $02, $19, $77, $7F, $F8, $88, $FF, $FE, $E8, $89, $10, $10, $11, $01, $00
                dc.b    $11, $01, $10, $01, $10, $01, $11, $11, $10, $11, $10, $01, $02, $1E, $01, $01
                dc.b    $00, $10, $10, $00, $88, $88, $00, $10, $89, $98, $00, $10, $11, $01, $01, $01
                dc.b    $10, $11, $00, $11, $10, $01, $10, $01, $11, $01, $11, $10, $02, $14, $10, $01
                dc.b    $01, $00, $10, $00, $88, $88, $00, $01, $99, $80, $FE, $01, $11, $80, $00, $10
                dc.b    $00, $80, $02, $09, $11, $08, $00, $10, $10, $00, $01, $00, $01, $04, $0A, $08
                dc.b    $77, $88, $8F, $F7, $77, $66, $00, $01, $11, $06, $01, $10, $07, $02, $01, $11
                dc.b    $02, $04, $10, $11, $10, $07, $02, $08, $71, $00, $70, $11, $61, $66, $61, $10
                dc.b    $17, $01, $10, $02, $06, $01, $00, $61, $00, $01, $11, $07, $01, $01, $0B, $03
                dc.b    $10, $07, $10, $05, $05, $07, $70, $78, $88, $9E, $05, $01, $E0, $02, $01, $70
                dc.b    $07, $01, $0E, $0B, $01, $E0, $02, $01, $EE, $06, $01, $0E, $0F, $01, $E0, $05
                dc.b    $03, $9E, $E9, $77, $02, $07, $70, $10, $70, $00, $01, $01, $07, $08, $01, $07
                dc.b    $02, $02, $10, $70, $07, $05, $01, $10, $00, $01, $01, $07, $02, $07, $10, $06
                dc.b    $02, $70, $01, $07, $01, $70, $02, $04, $16, $61, $11, $61, $03, $01, $07, $02
                dc.b    $01, $10, $04, $01, $70, $06, $01, $01, $08, $01, $07, $03, $02, $11, $10, $0B
                dc.b    $01, $01, $03, $01, $70, $08, $01, $10, $04, $05, $06, $66, $07, $00, $07, $02
                dc.b    $05, $01, $01, $70, $00, $70, $09, $02, $07, $E0, $06, $07, $10, $97, $71, $00
                dc.b    $10, $00, $10, $04, $02, $01, $07, $03, $01, $77, $07, $01, $01, $02, $02, $17
                dc.b    $70, $04, $04, $77, $66, $70, $71, $03, $0B, $70, $77, $70, $77, $01, $00, $77
                dc.b    $11, $00, $10, $01, $02, $06, $17, $70, $00, $10, $00, $10, $06, $07, $06, $01
                dc.b    $16, $66, $10, $01, $07, $03, $01, $10, $04, $01, $07, $06, $01, $17, $04, $01
                dc.b    $71, $04, $05, $66, $11, $07, $06, $07, $02, $0C, $77, $70, $11, $10, $71, $01
                dc.b    $00, $10, $10, $10, $00, $01, $02, $02, $01, $10, $06, $01, $01, $02, $08, $10
                dc.b    $00, $11, $66, $10, $00, $10, $70, $02, $02, $01, $07, $03, $01, $10, $03, $01
                dc.b    $01, $0C, $08, $88, $88, $66, $66, $00, $0E, $00, $70, $05, $01, $E0, $06, $03
                dc.b    $0E, $00, $07, $09, $05, $E7, $77, $61, $17, $07, $06, $01, $10, $09, $01, $70
                dc.b    $04, $02, $01, $07, $04, $04, $70, $00, $11, $16, $08, $03, $70, $07, $01, $07
                dc.b    $02, $70, $10, $08, $04, $66, $66, $61, $11, $1C, $04, $66, $10, $00, $01, $0C
                dc.b    $01, $07, $0F, $00, $0E, $F6, $0A, $00, $10, $00, $5F, $00, $11, $00, $5F, $00
                dc.b    $01, $04, $80, $8C, $60, $C6, $60, $C7, $00, $10, $00, $10, $80, $D6, $80, $D7
                dc.b    $00, $14, $00, $15, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11
                dc.b    $00, $10, $00, $10, $00, $17, $00, $16, $00, $15, $00, $14, $80, $D2, $80, $D2
                dc.b    $00, $10, $00, $10, $08, $93, $00, $92, $00, $10, $00, $10, $00, $B2, $08, $B3
                dc.b    $00, $10, $00, $10, $80, $D4, $80, $D4, $00, $10, $00, $10, $00, $16, $00, $16
                dc.b    $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11
                dc.b    $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16
                dc.b    $00, $10, $00, $10, $80, $D4, $80, $D4, $00, $10, $00, $10, $88, $F7, $88, $B7
                dc.b    $00, $50, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $45, $00, $16
                dc.b    $03, $07, $10, $00, $51, $00, $42, $00, $10, $02, $04, $08, $41, $08, $51, $03
                dc.b    $07, $10, $00, $52, $00, $41, $00, $10, $03, $2D, $16, $00, $55, $00, $10, $00
                dc.b    $10, $00, $12, $E8, $52, $00, $10, $E8, $50, $08, $31, $08, $31, $00, $10, $00
                dc.b    $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $00
                dc.b    $10, $00, $63, $00, $62, $00, $61, $02, $03, $08, $61, $08, $04, $5D, $61, $00
                dc.b    $72, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $08, $F1, $08, $F1, $80, $10, $80, $10, $80
                dc.b    $12, $80, $12, $80, $13, $00, $10, $80, $15, $00, $16, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $88, $13, $00
                dc.b    $12, $88, $11, $88, $10, $80, $10, $00, $91, $08, $31, $03, $38, $A1, $00, $A2
                dc.b    $00, $91, $00, $A2, $00, $22, $00, $91, $00, $16, $00, $25, $00, $10, $00, $12
                dc.b    $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $00, $12
                dc.b    $08, $27, $00, $10, $08, $25, $08, $24, $00, $16, $08, $22, $08, $A2, $00, $12
                dc.b    $08, $00, $08, $A1, $08, $02, $80, $AB, $C6, $00, $C7, $00, $10, $00, $12, $00
                dc.b    $30, $00, $30, $00, $10, $00, $10, $00, $F6, $00, $14, $00, $F0, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $00, $16, $08, $11, $00, $10, $00, $10, $08
                dc.b    $15, $08, $F2, $00, $10, $08, $F0, $00, $14, $00, $16, $00, $10, $00, $10, $00
                dc.b    $32, $00, $30, $00, $12, $00, $10, $08, $DD, $08, $DF, $00, $10, $00, $10, $00
                dc.b    $12, $00, $10, $00, $10, $00, $10, $00, $10, $08, $11, $00, $10, $00, $10, $01
                dc.b    $19, $09, $1E, $00, $43, $00, $47, $00, $50, $00, $51, $00, $52, $00, $53, $09
                dc.b    $4D, $09, $42, $00, $10, $00, $1F, $08, $48, $00, $49, $00, $30, $00, $30, $00
                dc.b    $10, $00, $10, $00, $11, $00, $11, $00, $6E, $08, $6F, $00, $22, $00, $22, $00
                dc.b    $20, $00, $22, $00, $26, $00, $24, $00, $26, $08, $27, $00, $24, $08, $25, $08
                dc.b    $27, $08, $25, $00, $24, $00, $26, $00, $24, $00, $24, $00, $22, $00, $22, $08
                dc.b    $2B, $08, $46, $03, $3F, $6C, $00, $5D, $00, $5E, $00, $1A, $00, $16, $00, $18
                dc.b    $08, $15, $00, $16, $00, $1A, $00, $73, $08, $7C, $00, $70, $00, $70, $00, $76
                dc.b    $00, $76, $00, $70, $00, $70, $00, $72, $00, $72, $00, $70, $00, $70, $08, $73
                dc.b    $08, $73, $00, $70, $00, $70, $00, $76, $00, $76, $00, $70, $00, $70, $00, $0C
                dc.b    $00, $4A, $00, $47, $02, $14, $08, $09, $08, $0A, $00, $24, $00, $24, $08, $27
                dc.b    $08, $27, $08, $25, $00, $24, $00, $2F, $08, $76, $03, $1F, $5B, $00, $5C, $00
                dc.b    $5D, $00, $30, $00, $30, $00, $32, $00, $32, $00, $30, $00, $30, $08, $33, $08
                dc.b    $33, $00, $30, $00, $30, $00, $36, $08, $6C, $08, $5B, $03, $35, $1B, $00, $6A
                dc.b    $00, $1B, $00, $10, $00, $3D, $00, $44, $00, $70, $00, $70, $00, $72, $08, $73
                dc.b    $00, $70, $00, $70, $00, $46, $00, $44, $00, $24, $00, $24, $00, $2D, $08, $50
                dc.b    $08, $00, $08, $7D, $08, $7E, $08, $7F, $00, $26, $00, $26, $08, $25, $00, $59
                dc.b    $08, $7D, $03, $0B, $3D, $08, $3D, $00, $70, $00, $70, $00, $4D, $08, $15, $03
                dc.b    $07, $30, $00, $59, $00, $68, $00, $30, $03, $2B, $75, $00, $1D, $00, $67, $00
                dc.b    $61, $00, $73, $00, $75, $00, $03, $00, $53, $00, $01, $08, $50, $00, $06, $08
                dc.b    $07, $08, $05, $08, $05, $00, $53, $00, $03, $00, $30, $00, $10, $00, $10, $08
                dc.b    $1B, $08, $7A, $00, $0B, $03, $2F, $10, $00, $02, $00, $18, $00, $90, $00, $28
                dc.b    $00, $96, $00, $2E, $00, $28, $00, $28, $00, $8F, $00, $89, $00, $8D, $00, $8B
                dc.b    $08, $2B, $08, $2B, $00, $28, $00, $28, $00, $2E, $00, $2E, $00, $28, $00, $90
                dc.b    $00, $20, $08, $92, $00, $10, $02, $81, $0E, $08, $15, $00, $0F, $00, $10, $00
                dc.b    $10, $00, $66, $00, $66, $00, $F0, $00, $F0, $00, $F0, $00, $F0, $00, $F2, $00
                dc.b    $F2, $00, $10, $00, $10, $00, $43, $00, $41, $08, $42, $08, $40, $00, $41, $00
                dc.b    $43, $08, $F2, $08, $F0, $00, $10, $00, $E1, $00, $A0, $00, $51, $00, $51, $00
                dc.b    $53, $00, $53, $00, $51, $00, $51, $00, $43, $00, $D9, $00, $CB, $00, $03, $00
                dc.b    $0C, $00, $89, $00, $86, $00, $30, $00, $30, $00, $32, $00, $32, $00, $30, $00
                dc.b    $30, $00, $26, $00, $26, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $08, $E7, $08, $E7, $00, $F2, $00, $F2, $00, $F2, $00, $F2, $00, $F0, $00
                dc.b    $F0, $00, $86, $00, $86, $00, $10, $00, $10, $08, $3E, $08, $37, $00, $10, $00
                dc.b    $E1, $00, $89, $00, $71, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $00, $06, $00, $06, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $08, $25, $08, $25, $00, $30, $00, $30, $00, $32, $00, $32, $00, $30, $00
                dc.b    $30, $00, $80, $00, $80, $00, $10, $00, $10, $00, $82, $00, $82, $00, $10, $00
                dc.b    $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $BA, $00, $BA, $00, $0C, $00
                dc.b    $03, $08, $D3, $08, $DC, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $08, $45, $08, $45, $00, $43, $00, $51, $00, $41, $00, $53, $00, $53, $00
                dc.b    $51, $00, $E3, $00, $E8, $00, $E1, $00, $10, $08, $C8, $08, $D9, $00, $B0, $00
                dc.b    $59, $00, $59, $00, $B1, $00, $5B, $03, $23, $72, $00, $C1, $00, $10, $00, $10
                dc.b    $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $C4, $00, $3D
                dc.b    $00, $D4, $00, $A3, $00, $2D, $00, $5B, $00, $F9, $08, $D4, $03, $1D, $2D, $08
                dc.b    $C5, $00, $3D, $00, $3D, $08, $C4, $00, $3B, $08, $C2, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $08, $D1, $00, $39, $03, $2F, $5B, $08, $E8
                dc.b    $08, $B2, $00, $59, $08, $B0, $08, $DA, $08, $10, $00, $8B, $00, $7B, $00, $0A
                dc.b    $00, $30, $00, $10, $00, $10, $00, $16, $00, $16, $00, $EC, $00, $ED, $88, $79
                dc.b    $88, $78, $08, $87, $00, $F0, $80, $EE, $88, $88, $00, $30, $03, $01, $10, $03
                dc.b    $01, $70, $02, $80, $F4, $80, $AF, $80, $FC, $00, $10, $00, $01, $00, $11, $00
                dc.b    $01, $00, $11, $00, $01, $00, $F5, $00, $F4, $00, $10, $00, $10, $81, $1B, $81
                dc.b    $1B, $00, $10, $00, $10, $00, $12, $00, $10, $00, $10, $00, $16, $00, $10, $00
                dc.b    $16, $00, $07, $00, $07, $89, $7D, $89, $7D, $00, $F0, $00, $F0, $89, $8A, $89
                dc.b    $8A, $00, $16, $00, $14, $00, $16, $00, $14, $00, $0B, $00, $0B, $00, $0B, $00
                dc.b    $0B, $00, $09, $00, $09, $00, $09, $08, $0A, $08, $10, $00, $10, $08, $10, $08
                dc.b    $13, $00, $0B, $00, $1A, $01, $08, $00, $3B, $01, $1B, $00, $10, $00, $3F, $00
                dc.b    $16, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $13, $08
                dc.b    $13, $00, $10, $00, $10, $00, $16, $09, $34, $00, $10, $09, $1B, $08, $77, $08
                dc.b    $5E, $00, $0C, $00, $0C, $00, $0E, $00, $0E, $00, $0C, $00, $0C, $00, $0E, $00
                dc.b    $0E, $00, $08, $00, $08, $00, $0A, $00, $57, $00, $08, $00, $55, $89, $D5, $89
                dc.b    $D5, $00, $30, $00, $30, $00, $32, $00, $32, $00, $30, $00, $30, $00, $12, $00
                dc.b    $12, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $80, $00
                dc.b    $80, $00, $10, $00, $10, $88, $33, $08, $31, $00, $10, $00, $10, $08, $09, $88
                dc.b    $0B, $00, $0C, $00, $03, $08, $17, $08, $18, $00, $22, $00, $22, $08, $25, $08
                dc.b    $2A, $00, $10, $00, $1F, $08, $1E, $08, $1F, $04, $2C, $08, $78, $08, $79, $00
                dc.b    $F2, $00, $F2, $00, $F2, $00, $F2, $00, $F0, $00, $F0, $08, $80, $00, $81, $00
                dc.b    $24, $00, $24, $08, $24, $00, $25, $00, $22, $00, $22, $88, $21, $88, $23, $00
                dc.b    $10, $00, $10, $E0, $1A, $E0, $19, $04, $0C, $68, $29, $68, $21, $00, $E1, $00
                dc.b    $10, $68, $C8, $68, $31, $80, $A4, $5C, $E0, $00, $E0, $00, $E0, $00, $E0, $00
                dc.b    $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00
                dc.b    $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00
                dc.b    $E0, $00, $60, $00, $E0, $00, $60, $00, $E0, $00, $60, $00, $E0, $00, $60, $00
                dc.b    $E0, $00, $20, $00, $E0, $00, $20, $00, $60, $0A, $E0, $09, $00, $10, $00, $10
                dc.b    $00, $12, $80, $10, $00, $22, $00, $22, $08, $25, $08, $2A, $00, $10, $00, $1F
                dc.b    $68, $1F, $68, $1E, $04, $1F, $E0, $0A, $E0, $09, $00, $10, $00, $10, $60, $1A
                dc.b    $40, $19, $80, $00, $A0, $00, $40, $00, $40, $00, $40, $00, $40, $00, $A0, $00
                dc.b    $A0, $00, $A0, $00, $A0, $1B, $01, $E0, $03, $43, $E0, $00, $80, $00, $10, $03
                dc.b    $80, $00, $10, $03, $C0, $00, $E0, $00, $C0, $00, $E0, $00, $C0, $00, $E0, $00
                dc.b    $C0, $00, $E0, $00, $C0, $00, $E0, $00, $C0, $00, $E0, $00, $E0, $00, $E0, $00
                dc.b    $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $40, $00
                dc.b    $E0, $00, $E0, $00, $60, $00, $80, $00, $E0, $00, $C0, $00, $20, $03, $01, $60
                dc.b    $03, $07, $60, $00, $40, $00, $60, $00, $40, $03, $27, $C0, $00, $20, $00, $C0
                dc.b    $00, $60, $00, $80, $00, $60, $00, $80, $00, $E0, $00, $20, $00, $E0, $00, $E0
                dc.b    $00, $80, $00, $20, $00, $80, $00, $E0, $00, $C0, $00, $20, $00, $C0, $00, $20
                dc.b    $00, $40, $03, $01, $40, $03, $01, $C0, $03, $01, $C0, $03, $15, $60, $00, $80
                dc.b    $00, $60, $00, $80, $00, $C0, $00, $E0, $00, $C0, $00, $60, $00, $E0, $00, $60
                dc.b    $00, $E0, $03, $01, $E0, $37, $11, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $11
                dc.b    $11, $11, $11, $00, $11, $11, $11, $11, $05, $02, $11, $11, $02, $02, $11, $11
                dc.b    $04, $01, $11, $03, $01, $11, $03, $07, $11, $11, $11, $00, $11, $11, $11, $05
                dc.b    $02, $11, $11, $02, $02, $11, $11, $06, $02, $11, $11, $02, $02, $11, $11, $07
                dc.b    $01, $01, $03, $01, $01, $0E, $08, $11, $11, $11, $00, $11, $11, $11, $11, $07
                dc.b    $01, $11, $06, $19, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $00, $11, $0F, $11
                dc.b    $11, $BB, $F0, $EE, $22, $99, $00, $FF, $CC, $33, $FF, $00, $FF, $19, $03, $FF
                dc.b    $FF, $FF, $02, $04, $FF, $FF, $00, $FF, $80, $D5, $09, $A2, $A8, $A1, $A1, $05
                dc.b    $A8, $A1, $A1, $A7, $24, $0B, $64, $65, $66, $67, $0C, $0C, $0C, $67, $68, $69
                dc.b    $6A, $08, $11, $A0, $A1, $A1, $A1, $04, $03, $03, $03, $06, $07, $04, $07, $04
                dc.b    $07, $04, $07, $04, $02, $02, $07, $04, $02, $02, $07, $04, $02, $0A, $07, $99
                dc.b    $9E, $A2, $24, $B1, $3C, $00, $81, $8A, $25, $0C, $8B, $8C, $00, $48, $C2, $C6
                dc.b    $4B, $04, $49, $4A, $4B, $4C, $0D, $21, $7B, $74, $75, $80, $FA, $F6, $0B, $FF
                dc.b    $F1, $F6, $0B, $0A, $F0, $F4, $F4, $F7, $F0, $F4, $F4, $F7, $F0, $F4, $F4, $F7
                dc.b    $2E, $2F, $81, $06, $24, $AF, $00, $84, $8A, $08, $18, $02, $03, $04, $05, $02
                dc.b    $03, $04, $05, $02, $03, $04, $05, $02, $03, $04, $05, $02, $03, $04, $05, $02
                dc.b    $03, $04, $05, $05, $0C, $8D, $8E, $8F, $90, $DC, $DC, $DC, $C4, $51, $52, $53
                dc.b    $54, $05, $2A, $A9, $AA, $AB, $AC, $04, $AA, $AB, $AC, $D6, $7C, $7D, $83, $FF
                dc.b    $FE, $FB, $04, $F4, $FE, $FB, $FA, $F3, $FF, $F9, $FF, $F3, $FF, $F9, $FF, $F3
                dc.b    $FF, $F9, $FF, $2D, $2C, $84, $FB, $D6, $2A, $00, $79, $78, $85, $06, $1A, $09
                dc.b    $0A, $0B, $0C, $04, $04, $0B, $0C, $04, $04, $0B, $0C, $04, $04, $0B, $0C, $04
                dc.b    $04, $0B, $0C, $04, $04, $0B, $0C, $0D, $0E, $07, $09, $40, $41, $42, $43, $04
                dc.b    $41, $42, $43, $44, $0D, $22, $7B, $71, $72, $88, $F2, $F3, $F4, $0F, $F9, $F3
                dc.b    $F4, $F5, $F8, $F9, $FB, $F0, $F8, $F9, $FB, $F0, $F8, $F9, $FB, $F0, $26, $27
                dc.b    $89, $02, $2F, $25, $00, $80, $81, $8A, $05, $1C, $10, $11, $12, $13, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $14, $15, $16, $17, $06, $09, $48, $49, $4A, $4B, $04, $49, $4A, $4B
                dc.b    $4C, $02, $07, $60, $61, $62, $00, $60, $61, $62, $02, $24, $73, $6C, $79, $7A
                dc.b    $05, $1B, $12, $16, $1B, $0F, $12, $16, $1B, $0F, $12, $16, $1B, $0F, $12, $16
                dc.b    $1B, $0F, $12, $16, $0F, $CD, $C5, $C3, $79, $39, $2A, $25, $00, $83, $84, $8A
                dc.b    $05, $1F, $18, $19, $1A, $1B, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $1B, $1A, $19, $1F, $07, $07
                dc.b    $07, $03, $09, $50, $51, $52, $53, $04, $51, $52, $53, $54, $02, $07, $55, $5F
                dc.b    $63, $00, $55, $5F, $63, $02, $25, $7B, $74, $81, $82, $05, $0B, $F1, $F6, $0B
                dc.b    $FF, $F1, $F6, $0B, $FF, $F1, $F6, $0B, $FF, $F1, $F6, $0B, $FF, $F1, $F6, $FF
                dc.b    $FD, $DE, $DB, $81, $FB, $D7, $D7, $85, $79, $79, $78, $85, $04, $1F, $20, $21
                dc.b    $22, $23, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $44, $44, $44, $27, $60, $61, $62, $04, $0A, $59
                dc.b    $5A, $5B, $00, $CC, $CC, $5B, $00, $95, $96, $09, $25, $7B, $7C, $84, $82, $FD
                dc.b    $FB, $F4, $FE, $FB, $04, $F4, $FE, $FB, $04, $F4, $FE, $FB, $04, $F4, $FE, $FB
                dc.b    $04, $F4, $FE, $02, $05, $DE, $D3, $84, $02, $2E, $2E, $8A, $80, $80, $81, $8A
                dc.b    $04, $1F, $28, $29, $2A, $2B, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $79, $72, $4D, $2F, $55, $5F
                dc.b    $63, $05, $09, $3F, $91, $92, $93, $AB, $91, $92, $93, $94, $09, $25, $7B, $71
                dc.b    $89, $82, $FD, $F6, $F9, $F3, $F4, $0F, $F9, $F3, $F4, $0F, $F9, $F3, $F4, $0F
                dc.b    $F9, $F3, $F4, $0F, $F9, $F3, $0F, $05, $C0, $C0, $89, $01, $33, $35, $8A, $83
                dc.b    $83, $84, $8A, $07, $02, $01, $06, $02, $02, $01, $06, $02, $02, $30, $37, $02
                dc.b    $02, $30, $37, $02, $02, $01, $06, $02, $02, $01, $06, $0A, $3A, $B9, $58, $44
                dc.b    $00, $B9, $58, $44, $40, $4E, $4F, $44, $40, $4E, $4F, $44, $73, $6C, $6D, $78
                dc.b    $0A, $16, $06, $14, $14, $02, $12, $16, $1B, $0F, $12, $16, $1B, $0F, $12, $16
                dc.b    $1B, $0F, $12, $16, $1B, $1B, $F3, $F5, $F7, $CF, $3B, $A4, $9A, $1E, $1E, $80
                dc.b    $BD, $01, $05, $BD, $BD, $BC, $B8, $05, $02, $08, $0F, $02, $02, $08, $0F, $02
                dc.b    $02, $31, $36, $02, $02, $31, $36, $02, $02, $08, $0F, $02, $02, $08, $0F, $04
                dc.b    $40, $40, $58, $44, $40, $18, $1C, $0C, $1C, $14, $44, $48, $5C, $4C, $48, $56
                dc.b    $57, $4C, $48, $56, $57, $4C, $7B, $74, $75, $80, $FA, $F6, $05, $F4, $F4, $02
                dc.b    $F1, $F6, $0B, $FF, $F1, $F6, $0B, $FF, $F1, $F6, $0B, $FF, $F1, $F6, $0B, $0A
                dc.b    $EB, $74, $E8, $C7, $28, $B6, $9D, $C7, $C6, $36, $80, $F4, $FF, $80, $80, $81
                dc.b    $8A, $04, $18, $32, $33, $34, $35, $32, $33, $34, $35, $32, $33, $34, $35, $32
                dc.b    $33, $34, $35, $32, $33, $34, $35, $32, $33, $34, $35, $03, $44, $48, $5C, $4C
                dc.b    $48, $14, $10, $1C, $76, $08, $4C, $50, $3E, $54, $45, $46, $47, $4D, $45, $46
                dc.b    $47, $4D, $7B, $7C, $7D, $83, $FF, $FE, $0D, $FF, $F9, $01, $F4, $FE, $FB, $04
                dc.b    $F4, $FE, $FB, $04, $F4, $FE, $FB, $04, $F4, $FE, $FB, $10, $EC, $7C, $E3, $23
                dc.b    $29, $B6, $9E, $C9, $C8, $35, $83, $F9, $BF, $BB, $BA, $BD, $FB, $01, $00, $F9
                dc.b    $F9, $02, $05, $F9, $F9, $00, $F9, $F9, $02, $02, $F9, $F9, $09, $13, $F9, $F9
                dc.b    $00, $03, $C7, $C7, $3E, $6A, $39, $53, $57, $6E, $6A, $53, $6F, $39, $53, $00
                dc.b    $38, $02, $02, $5A, $59, $02, $06, $5A, $66, $3E, $3E, $3E, $01, $19, $09, $D9
                dc.b    $DD, $A6, $03, $E0, $DD, $A6, $03, $39, $1C, $04, $82, $82, $82, $82, $1C, $04
                dc.b    $BB, $BB, $BB, $BB, $7A, $00, $0C, $D6, $0A, $00, $10, $00, $3D, $00, $11, $00
                dc.b    $3D, $00, $01, $04, $64, $61, $0D, $61, $0E, $00, $10, $00, $10, $00, $12, $08
                dc.b    $13, $00, $10, $00, $10, $00, $12, $08, $10, $00, $11, $08, $11, $00, $11, $08
                dc.b    $35, $00, $35, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $08
                dc.b    $17, $00, $10, $00, $10, $00, $11, $08, $12, $00, $10, $00, $10, $08, $13, $08
                dc.b    $13, $00, $10, $00, $10, $00, $15, $00, $17, $00, $10, $00, $10, $00, $12, $00
                dc.b    $37, $00, $10, $00, $35, $08, $13, $08, $13, $00, $10, $08, $04, $08, $11, $00
                dc.b    $05, $08, $04, $00, $10, $00, $22, $08, $37, $04, $04, $08, $EA, $08, $EA, $04
                dc.b    $02, $08, $EA, $08, $02, $08, $EA, $09, $1F, $5B, $00, $5A, $00, $5B, $00, $5A
                dc.b    $00, $55, $00, $54, $00, $55, $00, $54, $00, $57, $00, $56, $00, $57, $00, $56
                dc.b    $00, $51, $00, $50, $08, $BB, $00, $50, $04, $04, $08, $EA, $00, $5D, $03, $25
                dc.b    $30, $00, $5C, $00, $32, $00, $30, $00, $45, $00, $05, $00, $72, $00, $10, $00
                dc.b    $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $1E, $00, $1E, $00, $10, $00
                dc.b    $10, $00, $6F, $00, $6E, $05, $0D, $7B, $00, $7A, $00, $10, $00, $10, $00, $71
                dc.b    $00, $70, $00, $73, $03, $0D, $2D, $00, $2D, $00, $30, $00, $10, $00, $42, $08
                dc.b    $3D, $00, $10, $03, $2D, $B5, $08, $88, $00, $89, $00, $10, $00, $8B, $00, $12
                dc.b    $00, $10, $00, $10, $00, $1E, $00, $1E, $00, $10, $00, $10, $00, $12, $00, $8E
                dc.b    $00, $10, $00, $8C, $00, $16, $00, $16, $00, $10, $00, $10, $00, $12, $00, $90
                dc.b    $00, $10, $03, $03, $93, $00, $7D, $03, $1F, $F0, $00, $7C, $00, $F2, $00, $F0
                dc.b    $00, $F0, $00, $25, $00, $27, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10
                dc.b    $00, $10, $00, $1E, $00, $A0, $00, $10, $03, $15, $12, $00, $BC, $00, $10, $00
                dc.b    $10, $00, $16, $00, $16, $00, $10, $00, $10, $00, $12, $00, $B0, $00, $10, $03
                dc.b    $0D, $CD, $00, $59, $00, $F0, $08, $43, $00, $D6, $00, $1A, $08, $67, $02, $7E
                dc.b    $08, $F6, $08, $C8, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10
                dc.b    $00, $1E, $00, $1E, $00, $10, $00, $10, $00, $CF, $00, $12, $00, $CD, $00, $10
                dc.b    $00, $16, $00, $16, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10
                dc.b    $00, $FC, $00, $4F, $00, $10, $00, $30, $00, $A3, $00, $B7, $00, $30, $00, $B5
                dc.b    $00, $45, $00, $47, $00, $E9, $00, $10, $00, $EB, $00, $12, $00, $10, $00, $10
                dc.b    $00, $1E, $00, $1E, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $08, $13
                dc.b    $00, $16, $08, $15, $08, $1B, $08, $1B, $08, $19, $08, $19, $08, $1B, $00, $E2
                dc.b    $08, $66, $08, $1A, $00, $30, $00, $D7, $08, $0A, $00, $CD, $00, $10, $02, $04
                dc.b    $08, $B4, $08, $67, $03, $0F, $10, $00, $66, $00, $24, $00, $10, $00, $30, $00
                dc.b    $24, $00, $79, $00, $30, $03, $03, $78, $08, $48, $03, $0F, $30, $08, $49, $00
                dc.b    $04, $00, $30, $00, $10, $00, $04, $08, $76, $00, $10, $02, $14, $08, $D3, $00
                dc.b    $BD, $00, $10, $00, $70, $00, $08, $00, $72, $00, $70, $00, $70, $00, $CC, $00
                dc.b    $32, $03, $27, $0B, $00, $FC, $00, $09, $00, $0D, $00, $0F, $00, $0F, $00, $09
                dc.b    $00, $0D, $00, $0B, $08, $0A, $08, $0C, $00, $0B, $00, $0D, $00, $0D, $00, $0F
                dc.b    $00, $0F, $00, $0D, $00, $0D, $08, $F1, $00, $0B, $02, $0E, $08, $48, $08, $DC
                dc.b    $00, $70, $00, $30, $08, $13, $00, $EC, $00, $30, $02, $04, $08, $ED, $08, $72
                dc.b    $03, $27, $98, $00, $82, $00, $78, $00, $68, $00, $78, $00, $48, $00, $58, $00
                dc.b    $48, $00, $58, $08, $58, $08, $48, $08, $58, $08, $48, $08, $78, $08, $68, $08
                dc.b    $78, $08, $68, $08, $98, $00, $EA, $08, $98, $03, $0B, $37, $00, $DC, $00, $30
                dc.b    $00, $30, $00, $F7, $00, $F6, $04, $04, $08, $00, $08, $C4, $03, $07, $30, $00
                dc.b    $C5, $00, $EE, $00, $30, $02, $04, $68, $E2, $68, $0D, $1C, $05, $01, $00, $01
                dc.b    $00, $01, $03, $01, $01, $07, $03, $09, $00, $09, $1D, $03, $60, $00, $08, $05
                dc.b    $03, $69, $00, $01, $15, $03, $09, $00, $09, $1D, $03, $60, $00, $60, $07, $01
                dc.b    $68, $03, $09, $01, $00, $68, $00, $01, $00, $01, $00, $01, $09, $03, $09, $00
                dc.b    $09, $1D, $03, $60, $00, $60, $07, $01, $68, $05, $03, $68, $00, $01, $05, $01
                dc.b    $01, $07, $03, $69, $00, $69, $2D, $03, $68, $00, $68, $0D, $03, $68, $00, $68
                dc.b    $2D, $03, $68, $00, $68, $0D, $03, $61, $00, $61, $0D, $05, $61, $00, $61, $00
                dc.b    $61, $03, $01, $61, $03, $23, $61, $00, $61, $00, $61, $00, $61, $00, $61, $00
                dc.b    $61, $00, $61, $00, $61, $00, $61, $00, $61, $00, $61, $00, $61, $00, $61, $00
                dc.b    $61, $00, $61, $00, $61, $00, $61, $00, $61, $51, $01, $80, $07, $01, $80, $0F
                dc.b    $03, $80, $00, $80, $15, $03, $80, $00, $80, $15, $03, $60, $00, $60, $05, $03
                dc.b    $60, $00, $60, $19, $01, $60, $03, $01, $60, $2D, $01, $60, $03, $01, $60, $1D
                dc.b    $03, $60, $00, $60, $81, $2D, $49, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0
                dc.b    $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0
                dc.b    $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0
                dc.b    $00, $60, $00, $E0, $00, $60, $00, $E0, $00, $60, $00, $E0, $00, $60, $00, $E0
                dc.b    $00, $20, $00, $E0, $00, $20, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0
                dc.b    $03, $01, $E0, $03, $01, $60, $03, $01, $60, $0D, $01, $40, $03, $19, $40, $00
                dc.b    $80, $00, $A0, $00, $80, $00, $A0, $00, $40, $00, $40, $00, $40, $00, $40, $00
                dc.b    $A0, $00, $A0, $00, $A0, $00, $A0, $1B, $01, $E0, $03, $43, $E0, $00, $80, $00
                dc.b    $E0, $00, $80, $00, $E0, $00, $C0, $00, $E0, $00, $C0, $00, $E0, $00, $C0, $00
                dc.b    $E0, $00, $C0, $00, $E0, $00, $C0, $00, $E0, $00, $C0, $00, $E0, $00, $E0, $00
                dc.b    $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00
                dc.b    $40, $00, $E0, $00, $E0, $00, $60, $00, $80, $00, $E0, $00, $C0, $00, $20, $03
                dc.b    $01, $60, $03, $07, $60, $00, $40, $00, $60, $00, $40, $03, $27, $C0, $00, $20
                dc.b    $00, $C0, $00, $60, $00, $80, $00, $60, $00, $80, $00, $E0, $00, $20, $00, $E0
                dc.b    $00, $E0, $00, $80, $00, $20, $00, $80, $00, $E0, $00, $C0, $00, $20, $00, $C0
                dc.b    $00, $20, $00, $40, $03, $01, $40, $03, $01, $C0, $03, $01, $C0, $03, $15, $60
                dc.b    $00, $80, $00, $60, $00, $80, $00, $C0, $00, $E0, $00, $C0, $00, $60, $00, $E0
                dc.b    $00, $60, $00, $E0, $03, $01, $E0, $81, $3C, $04, $0D, $0D, $0D, $0D, $28, $04
                dc.b    $0D, $0D, $0D, $0D, $0D, $0A, $0D, $0D, $04, $0B, $01, $07, $09, $06, $01, $07
                dc.b    $02, $0E, $0E, $0C, $0F, $0E, $0E, $0C, $06, $08, $01, $07, $09, $06, $01, $07
                dc.b    $08, $08, $0E, $0C, $0F, $0E, $0E, $0C, $0F, $0E, $02, $04, $0D, $0D, $0D, $0D
                dc.b    $0D, $04, $0D, $0D, $0D, $0D, $06, $0C, $09, $08, $0B, $0A, $0C, $03, $0F, $0D
                dc.b    $05, $0B, $04, $07, $0A, $10, $09, $08, $0B, $0A, $0C, $03, $0F, $0D, $05, $0B
                dc.b    $04, $07, $0D, $0D, $0D, $0D, $0D, $10, $04, $0B, $0C, $0A, $09, $06, $01, $1A
                dc.b    $1C, $1F, $1E, $04, $1C, $1F, $1E, $19, $0A, $08, $09, $06, $01, $07, $09, $06
                dc.b    $01, $07, $04, $0A, $09, $06, $01, $07, $09, $06, $0C, $0A, $0D, $0D, $0D, $04
                dc.b    $0D, $0D, $0D, $0D, $03, $0A, $15, $14, $17, $16, $04, $04, $17, $16, $11, $10
                dc.b    $1B, $04, $0D, $0D, $0D, $0D, $0D, $04, $0D, $0D, $0D, $0D, $03, $0A, $2D, $2C
                dc.b    $2F, $2E, $04, $04, $2F, $2E, $29, $28, $05, $10, $0E, $0C, $0F, $0E, $0E, $0C
                dc.b    $0F, $0E, $09, $06, $01, $07, $09, $06, $01, $07, $06, $04, $0D, $0D, $0D, $0D
                dc.b    $0D, $04, $0D, $0D, $0D, $0D, $03, $0A, $25, $24, $27, $26, $04, $04, $27, $26
                dc.b    $21, $20, $03, $0C, $09, $08, $0B, $0A, $0C, $03, $0F, $0D, $05, $0B, $04, $07
                dc.b    $0C, $04, $0D, $0D, $0D, $0D, $0D, $1A, $03, $01, $02, $03, $0E, $0C, $0F, $33
                dc.b    $3C, $3F, $3E, $04, $04, $3F, $37, $3F, $39, $07, $12, $1C, $12, $15, $1B, $1A
                dc.b    $13, $12, $0C, $0A, $0E, $0C, $0F, $0E, $0E, $0C, $02, $03, $0D, $0D, $0D, $1A
                dc.b    $06, $07, $08, $06, $0F, $0D, $05, $3E, $30, $30, $36, $04, $04, $37, $36, $31
                dc.b    $30, $00, $2B, $2A, $23, $22, $2B, $2A, $23, $22, $0A, $0C, $09, $08, $0B, $0A
                dc.b    $0C, $03, $0F, $0D, $08, $06, $09, $0A, $0D, $04, $0D, $0D, $0D, $0D, $03, $19
                dc.b    $4D, $4C, $4F, $4E, $04, $04, $4F, $4E, $49, $48, $00, $3B, $3A, $33, $32, $3B
                dc.b    $3A, $3A, $34, $01, $07, $09, $06, $01, $07, $0C, $04, $0D, $0D, $0D, $0D, $0D
                dc.b    $04, $0D, $0D, $0D, $0D, $03, $13, $45, $44, $47, $46, $04, $04, $47, $46, $41
                dc.b    $40, $00, $4B, $4A, $43, $42, $4B, $4A, $43, $42, $12, $04, $0D, $0D, $0D, $0D
                dc.b    $0D, $04, $0D, $0D, $0D, $0D, $03, $13, $5D, $5C, $5F, $5E, $04, $04, $5F, $5E
                dc.b    $59, $58, $00, $5B, $5A, $55, $54, $5B, $5A, $55, $54, $12, $04, $0D, $0D, $0D
                dc.b    $0D, $80, $C4, $00, $00, $00, $0A, $20, $06, $66, $08, $88, $0C, $AA, $0E, $CC
                dc.b    $02, $46, $00, $08, $00, $0E, $04, $6A, $06, $8C, $08, $CE, $0E, $22, $0E, $62
                dc.b    $00, $00, $0E, $EE, $00, $00, $06, $22, $06, $44, $08, $66, $0A, $88, $0C, $CC
                dc.b    $02, $26, $04, $6E, $08, $AE, $00, $EE, $00, $0A, $02, $4C, $00, $6E, $00, $AE
                dc.b    $00, $00, $0E, $EE, $00, $00, $00, $26, $02, $48, $0A, $40, $0E, $60, $04, $44
                dc.b    $08, $66, $0A, $88, $00, $4E, $00, $CE, $00, $0A, $02, $82, $02, $C2, $04, $E2
                dc.b    $00, $00, $0E, $EE, $00, $00, $04, $EE, $04, $CE, $04, $8C, $02, $68, $00, $46
                dc.b    $02, $60, $0C, $88, $0C, $CA, $02, $28, $0E, $86, $02, $80, $00, $C0, $02, $E2
                dc.b    $00, $00, $0E, $EE, $20, $00, $00, $20, $05, $33, $33, $33, $33, $10, $02, $05
                dc.b    $01, $01, $07, $00, $10, $02, $01, $70, $05, $02, $01, $70, $02, $01, $10, $02
                dc.b    $0C, $10, $07, $00, $07, $01, $07, $77, $00, $77, $11, $00, $70, $02, $02, $10
                dc.b    $07, $02, $03, $01, $17, $77, $02, $01, $07, $03, $0E, $10, $11, $00, $11, $01
                dc.b    $00, $11, $00, $10, $33, $77, $77, $61, $22, $02, $0B, $70, $01, $00, $07, $01
                dc.b    $10, $00, $70, $10, $00, $70, $03, $08, $07, $01, $00, $03, $10, $00, $03, $30
                dc.b    $02, $09, $30, $00, $10, $01, $25, $55, $11, $10, $07, $02, $03, $01, $10, $70
                dc.b    $02, $01, $01, $05, $01, $33, $02, $03, $07, $00, $30, $04, $06, $01, $01, $55
                dc.b    $56, $67, $76, $0C, $01, $77, $02, $07, $07, $00, $70, $00, $70, $11, $17, $05
                dc.b    $05, $01, $66, $67, $00, $76, $05, $04, $77, $77, $70, $77, $02, $0A, $07, $00
                dc.b    $01, $11, $10, $01, $10, $00, $01, $10, $05, $06, $33, $30, $66, $66, $55, $56
                dc.b    $0C, $01, $77, $02, $07, $07, $00, $70, $00, $70, $11, $07, $03, $01, $10, $02
                dc.b    $03, $66, $67, $07, $02, $06, $07, $70, $11, $00, $70, $11, $02, $03, $01, $00
                dc.b    $03, $03, $03, $30, $70, $01, $07, $10, $70, $10, $30, $07, $70, $01, $12, $11
                dc.b    $11, $11, $11, $03, $33, $33, $33, $30, $13, $06, $22, $22, $22, $22, $11, $10
                dc.b    $02, $08, $30, $01, $11, $00, $03, $33, $30, $11, $02, $01, $03, $04, $01, $30
                dc.b    $08, $05, $25, $55, $55, $56, $07, $04, $03, $77, $00, $07, $02, $07, $70, $70
                dc.b    $10, $00, $07, $00, $01, $02, $01, $01, $08, $0B, $66, $70, $00, $01, $00, $07
                dc.b    $00, $11, $77, $70, $70, $02, $0F, $07, $00, $10, $11, $00, $77, $01, $00, $10
                dc.b    $07, $70, $33, $01, $00, $07, $04, $04, $33, $00, $11, $66, $09, $02, $03, $33
                dc.b    $02, $13, $30, $80, $33, $10, $00, $08, $80, $01, $30, $80, $08, $00, $03, $08
                dc.b    $00, $11, $00, $33, $BB, $04, $01, $03, $04, $01, $33, $02, $15, $03, $00, $33
                dc.b    $33, $30, $33, $00, $03, $03, $00, $33, $31, $80, $30, $00, $10, $A2, $21, $11
                dc.b    $00, $10, $02, $02, $07, $01, $02, $01, $07, $03, $17, $70, $01, $00, $77, $70
                dc.b    $10, $77, $77, $11, $07, $07, $01, $33, $74, $00, $13, $00, $40, $40, $00, $88
                dc.b    $00, $03, $04, $02, $10, $80, $02, $01, $03, $03, $01, $30, $03, $02, $01, $38
                dc.b    $02, $02, $03, $13, $03, $0F, $31, $44, $45, $54, $47, $01, $10, $00, $07, $15
                dc.b    $50, $10, $70, $50, $50, $04, $01, $07, $02, $03, $01, $00, $01, $02, $03, $70
                dc.b    $10, $05, $02, $0B, $03, $46, $66, $12, $30, $70, $10, $30, $00, $01, $03, $06
                dc.b    $02, $10, $30, $02, $01, $03, $03, $01, $30, $06, $07, $03, $33, $23, $00, $03
                dc.b    $30, $10, $06, $03, $03, $00, $30, $07, $03, $03, $00, $03, $02, $09, $33, $30
                dc.b    $00, $03, $33, $33, $30, $02, $33, $06, $01, $01, $02, $01, $30, $06, $01, $33
                dc.b    $06, $09, $01, $33, $00, $01, $10, $33, $00, $17, $01, $06, $01, $07, $02, $03
                dc.b    $01, $00, $01, $04, $05, $01, $01, $11, $00, $11, $02, $02, $11, $10, $04, $03
                dc.b    $03, $33, $33, $09, $01, $03, $02, $01, $10, $05, $0E, $30, $00, $01, $10, $03
                dc.b    $00, $10, $01, $10, $33, $01, $11, $06, $11, $06, $01, $07, $02, $01, $01, $06
                dc.b    $09, $01, $01, $10, $00, $11, $00, $01, $00, $10, $02, $08, $10, $11, $61, $10
                dc.b    $01, $00, $07, $01, $02, $0C, $70, $70, $10, $00, $07, $61, $11, $00, $11, $00
                dc.b    $01, $01, $02, $04, $33, $10, $00, $33, $02, $01, $03, $02, $02, $33, $30, $02
                dc.b    $01, $30, $03, $02, $03, $30, $03, $02, $03, $33, $02, $0A, $01, $00, $33, $33
                dc.b    $01, $11, $11, $00, $33, $11, $03, $02, $30, $10, $02, $02, $03, $01, $06, $01
                dc.b    $03, $02, $04, $33, $30, $00, $33, $02, $06, $11, $11, $11, $11, $00, $70, $03
                dc.b    $08, $77, $77, $77, $77, $16, $77, $77, $77, $04, $01, $01, $03, $01, $10, $02
                dc.b    $01, $70, $02, $0C, $07, $47, $00, $07, $74, $00, $07, $70, $40, $04, $74, $44
                dc.b    $02, $13, $62, $23, $34, $40, $11, $17, $70, $00, $11, $07, $00, $40, $30, $10
                dc.b    $70, $00, $33, $17, $70, $02, $04, $17, $04, $00, $13, $03, $03, $31, $17, $40
                dc.b    $02, $0E, $06, $21, $11, $03, $01, $03, $33, $00, $70, $11, $03, $00, $47, $70
                dc.b    $02, $03, $04, $43, $13, $03, $01, $31, $03, $01, $03, $04, $11, $12, $22, $22
                dc.b    $34, $03, $30, $01, $00, $88, $03, $00, $70, $00, $80, $00, $04, $80, $03, $18
                dc.b    $38, $80, $00, $40, $13, $03, $17, $00, $36, $21, $74, $00, $04, $70, $72, $11
                dc.b    $00, $47, $01, $33, $00, $04, $77, $10, $02, $02, $44, $71, $03, $01, $40, $03
                dc.b    $01, $07, $03, $01, $04, $05, $17, $05, $55, $44, $00, $50, $11, $77, $55, $11
                dc.b    $77, $11, $01, $77, $11, $03, $00, $01, $03, $30, $17, $10, $30, $88, $02, $01
                dc.b    $08, $02, $01, $03, $02, $08, $46, $65, $2B, $B8, $00, $07, $00, $03, $06, $01
                dc.b    $01, $08, $05, $10, $00, $07, $00, $01, $02, $06, $70, $00, $14, $55, $52, $11
                dc.b    $02, $01, $03, $04, $07, $01, $30, $00, $30, $11, $03, $33, $04, $01, $01, $02
                dc.b    $13, $01, $17, $00, $11, $10, $77, $01, $01, $12, $52, $22, $10, $30, $08, $00
                dc.b    $03, $08, $80, $80, $04, $04, $30, $80, $00, $80, $04, $01, $30, $02, $01, $80
                dc.b    $04, $04, $30, $88, $8B, $A2, $02, $02, $03, $10, $03, $01, $31, $07, $01, $03
                dc.b    $0C, $04, $33, $00, $03, $33, $02, $03, $03, $00, $10, $02, $06, $30, $10, $30
                dc.b    $00, $03, $01, $04, $01, $03, $03, $01, $10, $04, $0C, $30, $00, $01, $01, $12
                dc.b    $23, $00, $10, $00, $01, $00, $01, $05, $01, $01, $02, $03, $10, $00, $30, $07
                dc.b    $01, $03, $02, $05, $01, $33, $33, $31, $10, $02, $03, $03, $01, $10, $02, $06
                dc.b    $30, $10, $30, $00, $03, $01, $04, $01, $03, $03, $01, $10, $04, $05, $30, $00
                dc.b    $11, $13, $30, $05, $01, $11, $03, $01, $01, $03, $02, $30, $03, $02, $01, $03
                dc.b    $04, $02, $30, $30, $02, $02, $03, $03, $03, $02, $33, $03, $03, $01, $03, $17
                dc.b    $0B, $03, $22, $55, $54, $12, $10, $70, $01, $50, $01, $07, $02, $04, $30, $10
                dc.b    $00, $10, $02, $02, $70, $05, $04, $01, $30, $04, $12, $10, $70, $10, $66, $77
                dc.b    $11, $55, $77, $77, $11, $50, $11, $10, $70, $15, $33, $01, $07, $02, $03, $30
                dc.b    $10, $01, $03, $07, $70, $00, $30, $01, $00, $33, $33, $02, $18, $22, $14, $77
                dc.b    $70, $00, $50, $11, $77, $05, $11, $77, $11, $51, $77, $11, $03, $00, $01, $03
                dc.b    $30, $17, $10, $30, $88, $02, $01, $08, $02, $01, $03, $02, $14, $07, $65, $5D
                dc.b    $DD, $77, $77, $77, $77, $11, $11, $11, $11, $33, $33, $33, $30, $88, $88, $00
                dc.b    $03, $02, $01, $80, $07, $19, $80, $00, $DC, $C9, $14, $45, $71, $15, $50, $10
                dc.b    $07, $71, $01, $77, $11, $07, $17, $11, $00, $10, $00, $03, $30, $00, $71, $02
                dc.b    $04, $01, $00, $30, $03, $03, $13, $55, $66, $77, $41, $77, $77, $71, $15, $11
                dc.b    $10, $07, $01, $33, $01, $10, $77, $00, $30, $01, $06, $05, $33, $30, $10, $33
                dc.b    $30, $02, $04, $61, $30, $0B, $BA, $05, $01, $03, $04, $01, $08, $02, $01, $10
                dc.b    $02, $48, $17, $00, $30, $80, $00, $01, $03, $08, $00, $70, $10, $33, $54, $17
                dc.b    $76, $61, $00, $01, $00, $07, $00, $50, $10, $07, $00, $50, $17, $71, $05, $01
                dc.b    $70, $10, $00, $10, $01, $03, $50, $07, $10, $30, $01, $00, $03, $08, $67, $77
                dc.b    $65, $2A, $77, $70, $00, $70, $77, $77, $77, $77, $11, $00, $11, $07, $00, $11
                dc.b    $00, $11, $33, $33, $33, $00, $88, $88, $00, $33, $02, $07, $88, $00, $B8, $80
                dc.b    $00, $88, $03, $03, $02, $11, $38, $02, $19, $70, $03, $88, $00, $77, $10, $33
                dc.b    $88, $17, $71, $10, $33, $01, $70, $01, $10, $30, $10, $00, $10, $03, $32, $22
                dc.b    $30, $88, $02, $32, $31, $00, $80, $03, $01, $00, $80, $03, $33, $88, $00, $33
                dc.b    $30, $33, $33, $03, $30, $00, $33, $30, $08, $33, $00, $88, $80, $22, $22, $BB
                dc.b    $88, $11, $00, $10, $30, $00, $10, $01, $03, $30, $01, $00, $10, $03, $00, $07
                dc.b    $01, $00, $30, $17, $70, $88, $02, $01, $07, $04, $05, $88, $30, $10, $07, $03
                dc.b    $03, $15, $30, $01, $07, $07, $00, $10, $70, $00, $11, $07, $07, $77, $00, $07
                dc.b    $70, $11, $70, $11, $01, $03, $71, $02, $1A, $30, $01, $11, $10, $00, $11, $00
                dc.b    $10, $30, $00, $10, $01, $03, $33, $01, $00, $10, $00, $30, $07, $01, $00, $03
                dc.b    $17, $70, $88, $02, $01, $07, $04, $04, $88, $00, $31, $65, $02, $02, $03, $03
                dc.b    $04, $01, $33, $04, $07, $33, $33, $00, $11, $11, $10, $03, $02, $04, $10, $30
                dc.b    $00, $01, $02, $12, $22, $23, $33, $33, $30, $00, $33, $01, $03, $33, $00, $01
                dc.b    $00, $03, $33, $33, $33, $30, $03, $04, $88, $88, $00, $08, $03, $01, $80, $03
                dc.b    $0E, $BA, $AD, $DC, $44, $10, $07, $01, $00, $11, $00, $70, $10, $00, $10, $02
                dc.b    $01, $30, $0B, $01, $30, $03, $07, $03, $32, $26, $71, $30, $00, $30, $03, $01
                dc.b    $01, $02, $17, $03, $00, $70, $00, $30, $10, $01, $33, $01, $07, $00, $11, $10
                dc.b    $70, $15, $00, $77, $01, $00, $70, $65, $5C, $C9, $05, $01, $03, $04, $01, $08
                dc.b    $02, $01, $10, $02, $10, $17, $00, $30, $80, $00, $01, $03, $08, $00, $70, $10
                dc.b    $33, $CD, $D2, $23, $33, $05, $01, $08, $08, $01, $80, $03, $0E, $80, $03, $80
                dc.b    $08, $00, $33, $08, $80, $33, $30, $00, $33, $10, $33, $02, $08, $01, $10, $03
                dc.b    $01, $00, $13, $00, $10, $02, $0C, $30, $11, $10, $03, $03, $33, $01, $11, $30
                dc.b    $00, $30, $10, $02, $07, $03, $01, $30, $00, $33, $01, $30, $04, $01, $03, $03
                dc.b    $04, $30, $00, $10, $33, $02, $01, $07, $02, $2E, $11, $70, $11, $11, $07, $01
                dc.b    $00, $77, $70, $10, $36, $07, $77, $77, $00, $07, $00, $11, $05, $10, $70, $00
                dc.b    $05, $01, $07, $70, $50, $11, $77, $77, $01, $77, $00, $07, $17, $01, $11, $11
                dc.b    $00, $10, $33, $33, $17, $11, $30, $88, $0C, $0C, $01, $70, $13, $80, $50, $07
                dc.b    $01, $38, $05, $10, $70, $13, $02, $0E, $70, $10, $99, $45, $AA, $B3, $00, $80
                dc.b    $88, $88, $00, $08, $03, $38, $02, $02, $83, $03, $04, $06, $80, $00, $08, $30
                dc.b    $38, $80, $02, $03, $30, $08, $88, $02, $05, $32, $22, $33, $00, $01, $07, $0D
                dc.b    $01, $70, $03, $33, $17, $00, $10, $11, $00, $07, $01, $00, $70, $02, $09, $10
                dc.b    $70, $10, $70, $32, $AD, $CD, $DA, $08, $06, $24, $08, $08, $00, $08, $80, $30
                dc.b    $88, $83, $33, $03, $33, $31, $11, $11, $11, $10, $11, $07, $70, $11, $3B, $AD
                dc.b    $51, $01, $5D, $08, $30, $10, $00, $83, $01, $07, $00, $30, $10, $70, $02, $13
                dc.b    $11, $77, $70, $00, $33, $10, $07, $3B, $80, $01, $00, $88, $83, $01, $00, $A3
                dc.b    $30, $01, $22, $04, $01, $01, $02, $10, $30, $70, $10, $01, $13, $07, $01, $10
                dc.b    $01, $00, $77, $00, $11, $00, $07, $01, $03, $08, $10, $00, $DD, $52, $01, $66
                dc.b    $08, $03, $02, $24, $80, $30, $17, $00, $03, $11, $70, $00, $30, $11, $77, $70
                dc.b    $00, $33, $10, $07, $3B, $80, $01, $00, $88, $83, $01, $00, $A2, $20, $01, $22
                dc.b    $70, $01, $00, $30, $07, $00, $10, $03, $02, $06, $10, $00, $07, $01, $00, $03
                dc.b    $02, $05, $03, $30, $00, $10, $30, $02, $01, $03, $02, $18, $DA, $B8, $80, $03
                dc.b    $80, $00, $80, $30, $38, $88, $33, $00, $03, $33, $00, $11, $33, $00, $01, $07
                dc.b    $00, $33, $01, $17, $08, $05, $33, $22, $66, $66, $01, $02, $15, $10, $10, $07
                dc.b    $00, $05, $07, $70, $01, $50, $70, $01, $15, $00, $70, $01, $05, $00, $07, $00
                dc.b    $10, $50, $02, $04, $01, $00, $10, $70, $02, $04, $01, $07, $00, $05, $03, $01
                dc.b    $10, $02, $01, $70, $05, $01, $01, $05, $19, $70, $00, $10, $07, $00, $15, $66
                dc.b    $77, $77, $72, $00, $07, $00, $11, $01, $00, $70, $00, $10, $77, $77, $00, $07
                dc.b    $00, $07, $02, $04, $11, $11, $00, $71, $02, $05, $11, $10, $00, $33, $33, $04
                dc.b    $02, $11, $03, $02, $01, $01, $04, $01, $30, $06, $02, $01, $30, $02, $02, $10
                dc.b    $13, $02, $08, $31, $11, $33, $00, $03, $32, $33, $03, $0B, $01, $30, $06, $01
                dc.b    $03, $02, $0F, $03, $30, $00, $03, $30, $00, $01, $31, $11, $66, $66, $01, $00
                dc.b    $70, $01, $02, $01, $07, $09, $01, $01, $07, $0C, $10, $00, $07, $07, $70, $12
                dc.b    $25, $52, $00, $30, $08, $88, $05, $01, $30, $06, $03, $17, $13, $08, $03, $0A
                dc.b    $30, $80, $01, $71, $03, $08, $50, $00, $10, $30, $03, $01, $38, $04, $04, $05
                dc.b    $17, $00, $08, $02, $0A, $01, $30, $00, $51, $70, $13, $00, $05, $17, $01, $02
                dc.b    $08, $51, $67, $99, $91, $14, $46, $00, $08, $05, $03, $30, $00, $08, $02, $14
                dc.b    $88, $80, $03, $01, $30, $03, $30, $17, $03, $30, $11, $70, $11, $11, $77, $01
                dc.b    $10, $07, $11, $01, $02, $04, $05, $10, $10, $70, $03, $05, $01, $50, $51, $07
                dc.b    $05, $02, $06, $70, $10, $00, $05, $01, $50, $02, $01, $15, $03, $08, $14, $32
                dc.b    $21, $99, $07, $10, $38, $8B, $02, $08, $3B, $33, $00, $11, $03, $B8, $07, $70
                dc.b    $02, $1C, $10, $00, $13, $88, $51, $07, $01, $22, $05, $11, $77, $77, $12, $76
                dc.b    $77, $70, $31, $10, $07, $70, $31, $11, $07, $00, $03, $00, $10, $70, $02, $12
                dc.b    $10, $00, $03, $01, $00, $70, $21, $10, $77, $14, $77, $77, $11, $50, $00, $07
                dc.b    $77, $22, $04, $01, $01, $08, $1D, $17, $10, $01, $15, $00, $01, $10, $50, $51
                dc.b    $70, $07, $00, $05, $17, $70, $12, $22, $67, $00, $30, $11, $77, $00, $30, $10
                dc.b    $70, $00, $03, $01, $02, $24, $03, $01, $70, $07, $31, $17, $07, $71, $17, $70
                dc.b    $70, $13, $70, $07, $01, $30, $07, $61, $23, $00, $07, $10, $33, $33, $00, $01
                dc.b    $01, $11, $77, $11, $01, $10, $12, $33, $30, $01, $02, $03, $03, $30, $30, $02
                dc.b    $23, $03, $08, $88, $80, $00, $08, $BB, $B3, $22, $33, $01, $11, $07, $11, $10
                dc.b    $07, $77, $07, $77, $70, $70, $17, $00, $07, $01, $00, $70, $00, $10, $01, $07
                dc.b    $00, $03, $00, $10, $02, $0F, $16, $67, $07, $71, $77, $70, $00, $15, $70, $07
                dc.b    $70, $00, $11, $11, $07, $03, $03, $10, $00, $33, $05, $01, $10, $05, $0E, $25
                dc.b    $66, $66, $15, $07, $00, $10, $00, $10, $70, $01, $00, $01, $07, $02, $04, $30
                dc.b    $10, $70, $15, $04, $01, $30, $04, $07, $10, $00, $15, $00, $22, $25, $41, $02
                dc.b    $02, $08, $88, $02, $03, $80, $00, $10, $04, $04, $30, $80, $00, $01, $03, $1C
                dc.b    $70, $03, $08, $80, $00, $10, $30, $08, $52, $20, $12, $33, $00, $03, $10, $10
                dc.b    $80, $00, $31, $10, $08, $00, $03, $30, $00, $88, $00, $03, $06, $03, $88, $00
                dc.b    $80, $02, $05, $88, $3B, $BB, $AA, $AA, $02, $07, $11, $11, $00, $33, $33, $00
                dc.b    $03, $02, $17, $33, $00, $08, $88, $00, $33, $38, $80, $88, $03, $33, $38, $80
                dc.b    $80, $03, $03, $38, $A2, $22, $66, $13, $00, $77, $02, $02, $10, $70, $02, $0A
                dc.b    $01, $07, $00, $01, $30, $10, $70, $70, $03, $01, $02, $05, $80, $00, $07, $07
                dc.b    $80, $03, $1A, $44, $76, $00, $66, $00, $10, $77, $11, $01, $00, $77, $00, $10
                dc.b    $77, $11, $11, $07, $01, $00, $33, $00, $10, $33, $00, $70, $03, $02, $13, $01
                dc.b    $30, $00, $08, $32, $11, $11, $19, $00, $54, $44, $45, $05, $17, $77, $71, $51
                dc.b    $70, $11, $02, $05, $01, $30, $77, $00, $03, $08, $16, $30, $00, $01, $75, $66
                dc.b    $06, $11, $76, $66, $71, $76, $13, $33, $17, $10, $38, $80, $01, $03, $80, $08
                dc.b    $30, $0C, $10, $71, $9C, $CD, $56, $15, $41, $17, $77, $01, $00, $70, $11, $70
                dc.b    $07, $01, $33, $02, $02, $13, $08, $03, $02, $80, $07, $07, $15, $66, $07, $65
                dc.b    $DC, $11, $76, $66, $71, $76, $13, $33, $17, $10, $38, $80, $01, $33, $80, $08
                dc.b    $30, $80, $0B, $06, $83, $BA, $AA, $33, $00, $01, $02, $01, $03, $02, $01, $03
                dc.b    $06, $02, $07, $10, $03, $01, $01, $03, $02, $70, $03, $02, $07, $07, $03, $3B
                dc.b    $AD, $DD, $00, $80, $04, $07, $88, $80, $30, $88, $00, $08, $03, $04, $01, $30
                dc.b    $02, $01, $10, $03, $02, $01, $03, $02, $03, $67, $61, $33, $02, $05, $70, $03
                dc.b    $08, $00, $01, $05, $01, $80, $10, $04, $CD, $AB, $B8, $88, $03, $01, $80, $13
                dc.b    $01, $80, $04, $06, $8B, $BA, $AA, $30, $00, $01, $05, $01, $03, $06, $02, $07
                dc.b    $10, $03, $02, $01, $30, $02, $01, $70, $03, $05, $07, $30, $01, $00, $11, $06
                dc.b    $08, $70, $05, $30, $00, $01, $50, $00, $17, $02, $0F, $11, $70, $10, $00, $07
                dc.b    $00, $10, $00, $07, $70, $01, $50, $00, $07, $01, $02, $0E, $77, $01, $05, $00
                dc.b    $77, $77, $10, $11, $11, $00, $71, $33, $30, $10, $02, $02, $03, $01, $07, $19
                dc.b    $01, $00, $55, $22, $11, $15, $00, $70, $01, $03, $07, $70, $00, $11, $70, $01
                dc.b    $11, $11, $01, $10, $03, $33, $10, $03, $30, $02, $01, $30, $02, $01, $03, $02
                dc.b    $19, $08, $30, $08, $88, $80, $30, $08, $80, $00, $13, $33, $08, $88, $11, $11
                dc.b    $33, $00, $01, $11, $00, $33, $33, $33, $33, $33, $04, $02, $88, $80, $04, $06
                dc.b    $03, $23, $00, $08, $83, $11, $02, $06, $80, $00, $88, $88, $03, $11, $03, $01
                dc.b    $13, $02, $05, $30, $30, $00, $03, $33, $02, $01, $03, $02, $06, $33, $32, $22
                dc.b    $25, $11, $10, $02, $02, $11, $11, $02, $07, $03, $30, $10, $07, $30, $03, $01
                dc.b    $04, $01, $01, $06, $06, $01, $10, $23, $00, $32, $BB, $02, $01, $08, $0B, $12
                dc.b    $08, $00, $01, $30, $00, $80, $00, $03, $00, $08, $70, $11, $33, $00, $17, $01
                dc.b    $00, $52, $07, $01, $77, $02, $04, $01, $00, $51, $71, $04, $05, $10, $70, $05
                dc.b    $17, $77, $02, $0E, $51, $10, $01, $21, $9C, $C5, $67, $03, $80, $00, $01, $10
                dc.b    $00, $83, $02, $21, $08, $00, $10, $71, $30, $30, $00, $07, $13, $01, $07, $11
                dc.b    $71, $10, $71, $55, $17, $77, $15, $32, $60, $66, $49, $00, $10, $10, $00, $03
                dc.b    $07, $71, $38, $10, $31, $04, $32, $77, $12, $10, $31, $71, $77, $73, $17, $15
                dc.b    $11, $16, $71, $50, $55, $45, $DC, $91, $22, $03, $80, $00, $01, $30, $00, $83
                dc.b    $00, $10, $08, $00, $10, $71, $30, $30, $00, $07, $13, $01, $07, $11, $71, $10
                dc.b    $71, $55, $17, $77, $15, $12, $77, $00, $14, $03, $04, $77, $30, $00, $07, $02
                dc.b    $12, $10, $70, $11, $01, $00, $01, $00, $10, $00, $10, $03, $00, $01, $00, $30
                dc.b    $00, $10, $03, $03, $01, $30, $02, $02, $10, $30, $02, $12, $01, $03, $30, $11
                dc.b    $00, $10, $03, $00, $10, $01, $10, $33, $01, $00, $01, $00, $30, $10, $02, $07
                dc.b    $03, $01, $00, $45, $22, $03, $AA, $03, $01, $80, $05, $02, $70, $03, $05, $01
                dc.b    $51, $05, $01, $10, $02, $07, $07, $00, $08, $9C, $DD, $AB, $03, $02, $01, $08
                dc.b    $10, $01, $30, $02, $01, $80, $05, $04, $BB, $BA, $55, $61, $02, $02, $07, $70
                dc.b    $03, $05, $01, $00, $10, $70, $10, $02, $01, $01, $04, $05, $03, $01, $00, $10
                dc.b    $30, $04, $04, $10, $00, $66, $41, $02, $03, $70, $15, $11, $04, $03, $10, $07
                dc.b    $01, $04, $04, $30, $01, $00, $70, $04, $03, $03, $00, $10, $02, $03, $30, $00
                dc.b    $71, $02, $0F, $17, $10, $00, $31, $07, $11, $03, $01, $10, $70, $30, $33, $01
                dc.b    $00, $33, $04, $0B, $03, $01, $01, $00, $30, $10, $70, $30, $33, $22, $DC, $02
                dc.b    $01, $08, $05, $01, $03, $05, $12, $08, $00, $10, $30, $00, $80, $01, $03, $00
                dc.b    $08, $70, $10, $33, $00, $DA, $AB, $33, $03, $06, $02, $80, $03, $06, $01, $08
                dc.b    $04, $01, $80, $03, $02, $08, $88, $04, $04, $88, $88, $88, $30, $03, $01, $03
                dc.b    $04, $01, $30, $02, $02, $30, $03, $02, $0F, $03, $00, $33, $33, $00, $30, $00
                dc.b    $03, $80, $03, $00, $03, $80, $03, $01, $03, $01, $01, $02, $09, $30, $03, $00
                dc.b    $03, $00, $30, $01, $30, $33, $02, $03, $33, $00, $03, $07, $19, $30, $10, $11
                dc.b    $44, $76, $77, $05, $11, $17, $76, $51, $07, $61, $23, $00, $71, $33, $08, $17
                dc.b    $13, $08, $80, $01, $00, $80, $09, $10, $06, $65, $DD, $CC, $66, $67, $77, $11
                dc.b    $33, $32, $11, $77, $88, $00, $33, $10, $03, $02, $31, $08, $02, $02, $03, $80
                dc.b    $07, $17, $11, $14, $44, $55, $50, $51, $16, $77, $15, $17, $70, $11, $71, $70
                dc.b    $11, $BB, $00, $01, $3B, $00, $17, $00, $08, $07, $18, $30, $80, $67, $76, $74
                dc.b    $19, $77, $77, $11, $55, $11, $10, $77, $11, $33, $01, $10, $70, $80, $30, $01
                dc.b    $07, $00, $03, $02, $01, $08, $02, $01, $10, $04, $0A, $CC, $45, $11, $02, $10
                dc.b    $00, $70, $00, $01, $01, $02, $0E, $70, $10, $00, $03, $00, $01, $00, $10, $00
                dc.b    $70, $07, $01, $00, $07, $03, $08, $01, $70, $70, $15, $20, $25, $52, $30, $07
                dc.b    $17, $30, $03, $30, $00, $03, $00, $30, $03, $60, $30, $00, $31, $76, $13, $32
                dc.b    $01, $00, $71, $11, $03, $26, $60, $01, $03, $01, $70, $05, $0E, $30, $17, $00
                dc.b    $03, $01, $70, $00, $10, $10, $70, $07, $01, $11, $07, $02, $0C, $30, $10, $00
                dc.b    $70, $17, $67, $76, $62, $00, $07, $00, $03, $06, $01, $01, $08, $05, $10, $00
                dc.b    $07, $00, $01, $02, $06, $70, $00, $50, $11, $16, $77, $02, $12, $11, $77, $00
                dc.b    $11, $77, $11, $01, $77, $11, $03, $00, $01, $03, $30, $17, $10, $30, $88, $02
                dc.b    $01, $08, $02, $01, $03, $02, $17, $06, $74, $4C, $CD, $71, $10, $00, $10, $07
                dc.b    $71, $01, $77, $11, $07, $17, $11, $00, $10, $00, $03, $30, $00, $71, $02, $04
                dc.b    $01, $00, $30, $03, $03, $13, $55, $66, $77, $44, $77, $77, $71, $10, $11, $10
                dc.b    $07, $01, $33, $01, $10, $77, $00, $30, $01, $06, $05, $33, $30, $10, $33, $30
                dc.b    $02, $17, $22, $14, $47, $67, $50, $51, $16, $77, $15, $17, $70, $11, $71, $70
                dc.b    $11, $BB, $00, $01, $3B, $00, $17, $00, $08, $07, $18, $30, $80, $67, $76, $74
                dc.b    $19, $77, $77, $11, $55, $11, $10, $77, $11, $33, $01, $10, $70, $80, $30, $01
                dc.b    $07, $00, $03, $02, $01, $08, $02, $01, $10, $04, $14, $9C, $44, $66, $10, $51
                dc.b    $16, $77, $11, $17, $70, $11, $03, $70, $11, $03, $38, $01, $03, $38, $80, $02
                dc.b    $1A, $80, $00, $10, $30, $00, $08, $00, $08, $00, $80, $66, $5D, $DD, $44, $66
                dc.b    $67, $77, $11, $33, $32, $11, $77, $88, $00, $33, $10, $03, $02, $31, $08, $02
                dc.b    $02, $03, $80, $07, $10, $22, $55, $54, $11, $11, $67, $71, $50, $33, $32, $17
                dc.b    $15, $88, $00, $31, $70, $04, $01, $08, $03, $01, $80, $07, $07, $52, $30, $0B
                dc.b    $AC, $17, $03, $08, $02, $25, $10, $30, $88, $00, $71, $03, $30, $01, $07, $11
                dc.b    $03, $50, $10, $77, $61, $05, $01, $07, $71, $00, $01, $70, $10, $99, $45, $22
                dc.b    $30, $00, $80, $03, $31, $00, $08, $03, $32, $88, $88, $02, $29, $33, $33, $33
                dc.b    $00, $10, $00, $33, $00, $10, $33, $00, $08, $33, $00, $88, $80, $22, $23, $B8
                dc.b    $80, $11, $01, $03, $08, $00, $10, $10, $00, $33, $01, $01, $30, $00, $30, $10
                dc.b    $03, $00, $03, $00, $10, $88, $02, $01, $01, $06, $02, $31, $10, $08, $03, $88
                dc.b    $00, $30, $02, $13, $03, $00, $10, $33, $30, $01, $11, $10, $00, $01, $00, $10
                dc.b    $30, $03, $33, $16, $20, $15, $55, $02, $02, $10, $10, $04, $07, $70, $10, $10
                dc.b    $01, $07, $11, $70, $02, $0F, $77, $01, $55, $07, $01, $15, $00, $41, $15, $50
                dc.b    $00, $41, $14, $32, $19, $07, $11, $08, $00, $10, $71, $30, $01, $51, $07, $13
                dc.b    $15, $05, $10, $71, $50, $00, $51, $17, $02, $06, $05, $01, $11, $23, $34, $11
                dc.b    $03, $01, $10, $02, $08, $70, $00, $03, $10, $00, $01, $31, $07, $02, $14, $10
                dc.b    $70, $01, $05, $77, $01, $15, $50, $41, $15, $50, $00, $41, $62, $21, $99, $77
                dc.b    $10, $38, $8B, $02, $07, $3B, $33, $10, $11, $03, $B8, $01, $03, $10, $30, $10
                dc.b    $13, $88, $03, $01, $01, $22, $00, $30, $00, $77, $33, $30, $11, $66, $09, $02
                dc.b    $03, $33, $02, $13, $30, $80, $33, $10, $00, $08, $80, $01, $30, $80, $08, $00
                dc.b    $03, $08, $00, $11, $00, $33, $BB, $04, $01, $03, $04, $01, $33, $02, $15, $03
                dc.b    $00, $33, $33, $30, $33, $00, $03, $03, $00, $33, $31, $80, $30, $00, $10, $A2
                dc.b    $21, $11, $00, $10, $02, $02, $07, $01, $02, $01, $07, $03, $1C, $70, $01, $00
                dc.b    $77, $70, $10, $77, $77, $11, $07, $07, $01, $33, $71, $00, $13, $00, $01, $00
                dc.b    $12, $22, $00, $07, $00, $11, $77, $70, $70, $02, $0F, $07, $00, $10, $11, $00
                dc.b    $77, $01, $00, $10, $07, $70, $33, $01, $00, $07, $04, $04, $88, $33, $21, $67
                dc.b    $08, $03, $88, $00, $30, $02, $14, $03, $00, $10, $33, $30, $01, $11, $10, $00
                dc.b    $01, $00, $10, $00, $33, $33, $03, $3B, $88, $88, $03, $03, $02, $11, $38, $02
                dc.b    $19, $70, $03, $88, $00, $77, $10, $33, $88, $17, $71, $10, $33, $01, $70, $01
                dc.b    $10, $30, $10, $00, $10, $03, $32, $22, $30, $88, $02, $07, $31, $00, $80, $03
                dc.b    $01, $00, $80, $02, $10, $88, $00, $30, $00, $33, $33, $03, $33, $00, $33, $30
                dc.b    $00, $33, $00, $88, $88, $02, $05, $8B, $AC, $88, $00, $01, $02, $09, $80, $37
                dc.b    $65, $00, $80, $10, $00, $88, $03, $02, $12, $33, $30, $17, $15, $00, $33, $01
                dc.b    $00, $33, $08, $30, $00, $03, $3A, $21, $64, $00, $01, $05, $01, $03, $06, $02
                dc.b    $07, $10, $03, $02, $01, $30, $02, $01, $70, $03, $07, $07, $33, $3B, $AD, $DD
                dc.b    $00, $80, $04, $07, $88, $80, $30, $88, $00, $08, $03, $04, $01, $30, $02, $01
                dc.b    $10, $03, $02, $01, $03, $02, $04, $AA, $33, $32, $23, $02, $01, $01, $02, $02
                dc.b    $80, $30, $05, $05, $80, $08, $03, $11, $08, $04, $01, $80, $03, $01, $08, $02
                dc.b    $01, $30, $02, $02, $32, $30, $04, $01, $08, $02, $06, $30, $00, $80, $00, $03
                dc.b    $08, $03, $09, $30, $08, $00, $10, $00, $80, $88, $01, $03, $02, $06, $21, $01
                dc.b    $2A, $B8, $00, $01, $02, $01, $03, $02, $01, $03, $06, $02, $07, $10, $03, $01
                dc.b    $01, $03, $02, $70, $03, $02, $14, $07, $52, $77, $64, $44, $74, $61, $15, $00
                dc.b    $17, $77, $71, $50, $31, $71, $07, $15, $83, $06, $10, $0D, $09, $C5, $07, $02
                dc.b    $5C, $17, $01, $30, $80, $70, $0B, $01, $10, $05, $09, $30, $80, $00, $01, $03
                dc.b    $08, $BA, $AA, $33, $02, $05, $08, $00, $03, $00, $80, $02, $01, $08, $02, $01
                dc.b    $30, $03, $1C, $01, $80, $00, $03, $00, $80, $00, $30, $10, $80, $03, $01, $00
                dc.b    $42, $20, $02, $22, $06, $01, $03, $33, $00, $70, $11, $03, $50, $17, $70, $02
                dc.b    $03, $01, $16, $13, $03, $01, $61, $03, $01, $06, $02, $13, $11, $10, $17, $77
                dc.b    $66, $71, $03, $30, $01, $00, $88, $03, $00, $70, $00, $80, $00, $01, $80, $03
                dc.b    $2D, $38, $80, $00, $10, $13, $03, $17, $01, $66, $21, $71, $10, $01, $70, $77
                dc.b    $55, $00, $17, $01, $33, $01, $01, $77, $10, $00, $10, $11, $71, $10, $01, $10
                dc.b    $10, $07, $70, $01, $07, $00, $07, $00, $01, $70, $10, $70, $11, $11, $02, $10
                dc.b    $01, $11, $17, $70, $00, $11, $07, $00, $10, $30, $10, $70, $01, $33, $17, $70
                dc.b    $02, $04, $17, $01, $00, $13, $02, $09, $10, $61, $17, $11, $07, $71, $16, $76
                dc.b    $61, $04, $01, $03, $04, $01, $33, $02, $06, $03, $00, $33, $33, $30, $33, $02
                dc.b    $01, $03, $03, $08, $80, $00, $30, $00, $B3, $00, $03, $33, $10, $01, $33, $04
                dc.b    $01, $33, $04, $06, $33, $00, $33, $33, $33, $11, $03, $01, $11, $04, $01, $01
                dc.b    $03, $02, $01, $11, $03, $06, $10, $11, $11, $00, $01, $10, $03, $06, $01, $00
                dc.b    $33, $BB, $30, $06, $08, $02, $30, $88, $02, $01, $03, $04, $01, $30, $02, $01
                dc.b    $10, $03, $02, $01, $03, $02, $04, $11, $01, $56, $71, $03, $01, $77, $02, $01
                dc.b    $07, $02, $03, $10, $70, $11, $02, $01, $01, $03, $0D, $10, $03, $01, $01, $00
                dc.b    $30, $00, $10, $03, $00, $10, $00, $30, $02, $02, $10, $30, $02, $12, $01, $03
                dc.b    $30, $11, $00, $10, $03, $00, $10, $01, $10, $33, $01, $00, $01, $00, $30, $10
                dc.b    $02, $02, $03, $01, $03, $02, $30, $10, $02, $09, $30, $11, $00, $03, $01, $13
                dc.b    $33, $30, $10, $02, $01, $11, $02, $01, $11, $02, $1D, $13, $01, $11, $11, $01
                dc.b    $10, $33, $00, $11, $11, $33, $33, $BB, $11, $10, $30, $88, $30, $11, $03, $30
                dc.b    $03, $01, $10, $03, $00, $30, $01, $10, $02, $04, $10, $01, $30, $03, $02, $02
                dc.b    $13, $33, $02, $04, $20, $01, $67, $77, $03, $04, $77, $30, $00, $07, $02, $18
                dc.b    $10, $70, $11, $01, $00, $01, $00, $10, $00, $10, $03, $00, $01, $00, $30, $00
                dc.b    $10, $03, $00, $A2, $16, $02, $54, $83, $04, $01, $07, $02, $13, $31, $71, $07
                dc.b    $15, $17, $70, $10, $00, $70, $01, $71, $50, $41, $77, $15, $00, $05, $11, $50
                dc.b    $02, $0B, $50, $55, $54, $00, $05, $01, $10, $00, $05, $10, $11, $02, $05, $01
                dc.b    $BB, $00, $51, $1B, $02, $07, $10, $00, $0A, $05, $07, $1A, $A7, $02, $0E, $AA
                dc.b    $07, $41, $16, $EE, $44, $77, $11, $55, $00, $70, $77, $11, $50, $02, $0D, $70
                dc.b    $15, $00, $77, $77, $00, $77, $11, $17, $00, $71, $0B, $B0, $02, $01, $B0, $02
                dc.b    $1C, $16, $DC, $C5, $54, $06, $01, $03, $33, $10, $70, $11, $03, $00, $17, $70
                dc.b    $00, $01, $01, $16, $13, $70, $11, $10, $61, $07, $77, $01, $16, $02, $0E, $77
                dc.b    $01, $76, $66, $77, $77, $71, $11, $77, $01, $07, $77, $00, $10, $02, $0A, $11
                dc.b    $01, $00, $11, $00, $11, $01, $00, $01, $11, $02, $37, $11, $11, $00, $01, $11
                dc.b    $11, $00, $01, $10, $17, $10, $00, $11, $07, $10, $10, $10, $11, $11, $11, $11
                dc.b    $00, $11, $11, $11, $10, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
                dc.b    $11, $66, $76, $67, $10, $71, $11, $07, $00, $07, $77, $70, $00, $11, $11, $11
                dc.b    $11, $10, $03, $37, $11, $01, $01, $01, $11, $11, $11, $11, $11, $11, $11, $11
                dc.b    $31, $01, $01, $32, $01, $10, $00, $33, $82, $76, $10, $00, $08, $57, $71, $00
                dc.b    $80, $82, $67, $10, $38, $80, $07, $01, $13, $03, $17, $30, $36, $21, $74, $03
                dc.b    $15, $22, $51, $12, $33, $33, $00, $03, $33, $00, $33, $02, $17, $33, $30, $33
                dc.b    $08, $88, $03, $00, $38, $80, $80, $30, $03, $08, $B3, $30, $10, $30, $33, $00
                dc.b    $10, $03, $33, $16, $04, $01, $30, $03, $01, $03, $03, $2A, $33, $00, $01, $00
                dc.b    $01, $00, $10, $74, $01, $11, $07, $00, $11, $07, $70, $40, $00, $16, $56, $35
                dc.b    $00, $10, $31, $70, $00, $01, $10, $00, $11, $00, $07, $15, $00, $10, $01, $50
                dc.b    $33, $01, $01, $50, $00, $30, $04, $0A, $17, $10, $11, $46, $60, $73, $05, $17
                dc.b    $71, $11, $02, $02, $2B, $33, $02, $0A, $38, $88, $05, $10, $13, $88, $00, $53
                dc.b    $71, $33, $02, $02, $43, $61, $03, $06, $43, $34, $44, $44, $44, $17, $02, $07
                dc.b    $07, $01, $70, $00, $70, $00, $07, $03, $02, $10, $70, $02, $1B, $01, $07, $70
                dc.b    $30, $00, $10, $70, $03, $00, $01, $10, $55, $66, $66, $67, $77, $77, $77, $77
                dc.b    $01, $11, $11, $00, $10, $33, $00, $11, $02, $01, $33, $04, $01, $33, $04, $02
                dc.b    $10, $30, $02, $04, $32, $21, $11, $11, $0D, $05, $53, $50, $00, $43, $16, $02
                dc.b    $02, $17, $71, $02, $03, $54, $67, $15, $02, $03, $07, $77, $22, $02, $01, $01
                dc.b    $02, $03, $51, $70, $10, $02, $01, $07, $02, $03, $05, $10, $71, $02, $02, $51
                dc.b    $07, $03, $01, $11, $04, $04, $19, $99, $14, $47, $02, $20, $80, $03, $38, $00
                dc.b    $08, $00, $03, $80, $00, $80, $00, $38, $00, $08, $11, $03, $88, $00, $77, $11
                dc.b    $33, $88, $11, $77, $11, $23, $50, $11, $77, $76, $00, $01, $05, $02, $07, $05
                dc.b    $06, $01, $70, $06, $01, $07, $05, $04, $32, $76, $60, $10, $02, $02, $01, $11
                dc.b    $02, $02, $01, $11, $02, $02, $11, $11, $02, $02, $11, $11, $02, $0E, $11, $11
                dc.b    $00, $01, $11, $11, $00, $01, $11, $11, $32, $22, $32, $66, $1C, $04, $43, $32
                dc.b    $22, $66, $02, $02, $01, $11, $02, $02, $01, $11, $03, $01, $11, $03, $01, $11
                dc.b    $03, $01, $11, $03, $01, $11, $03, $25, $11, $71, $00, $10, $11, $11, $11, $11
                dc.b    $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
                dc.b    $11, $11, $11, $11, $11, $11, $11, $11, $11, $23, $26, $67, $10, $0D, $01, $50
                dc.b    $03, $01, $01, $04, $01, $07, $05, $2C, $22, $66, $71, $01, $00, $11, $11, $11
                dc.b    $00, $11, $11, $11, $00, $11, $11, $11, $00, $01, $11, $11, $00, $01, $11, $11
                dc.b    $00, $01, $11, $11, $00, $01, $11, $11, $21, $02, $BA, $32, $00, $03, $80, $88
                dc.b    $03, $10, $0B, $88, $02, $02, $03, $33, $03, $05, $30, $00, $30, $08, $03, $03
                dc.b    $0B, $80, $00, $01, $38, $08, $22, $30, $65, $99, $30, $10, $02, $05, $83, $00
                dc.b    $70, $00, $80, $03, $05, $23, $10, $04, $00, $11, $03, $01, $31, $03, $02, $83
                dc.b    $10, $02, $04, $80, $32, $13, $45, $03, $01, $70, $02, $01, $01, $03, $01, $30
                dc.b    $11, $04, $52, $23, $33, $24, $04, $01, $17, $03, $02, $50, $01, $05, $08, $08
                dc.b    $01, $00, $03, $00, $05, $70, $10, $04, $07, $38, $11, $61, $10, $03, $00, $30
                dc.b    $03, $01, $03, $02, $01, $88, $04, $02, $80, $30, $06, $02, $08, $03, $04, $15
                dc.b    $30, $AD, $BB, $00, $03, $17, $10, $33, $00, $01, $01, $10, $33, $00, $10, $01
                dc.b    $10, $00, $01, $00, $01, $02, $01, $11, $04, $01, $10, $03, $05, $01, $33, $30
                dc.b    $01, $16, $05, $05, $30, $10, $00, $33, $01, $02, $14, $11, $10, $00, $70, $70
                dc.b    $00, $07, $01, $77, $77, $70, $15, $07, $01, $01, $50, $33, $45, $40, $54, $03
                dc.b    $01, $17, $02, $01, $05, $04, $01, $10, $03, $01, $57, $03, $01, $04, $08, $20
                dc.b    $33, $44, $44, $33, $11, $67, $70, $77, $03, $31, $17, $70, $03, $8B, $31, $17
                dc.b    $10, $B8, $8B, $31, $71, $03, $B8, $83, $47, $61, $03, $B3, $04, $17, $11, $11
                dc.b    $02, $01, $70, $07, $01, $07, $02, $01, $01, $03, $01, $50, $0E, $24, $22, $27
                dc.b    $76, $01, $00, $01, $11, $11, $00, $01, $11, $11, $00, $01, $11, $11, $00, $11
                dc.b    $11, $11, $00, $11, $11, $11, $00, $11, $11, $11, $00, $11, $11, $11, $22, $23
                dc.b    $23, $26, $1C, $04, $44, $33, $22, $27, $03, $01, $01, $03, $01, $01, $03, $01
                dc.b    $01, $03, $01, $01, $03, $01, $01, $03, $01, $01, $04, $24, $66, $11, $10, $10
                dc.b    $00, $01, $11, $11, $00, $01, $11, $11, $00, $01, $11, $11, $00, $11, $11, $11
                dc.b    $00, $11, $11, $11, $00, $11, $11, $11, $00, $11, $11, $11, $22, $77, $60, $10
                dc.b    $06, $01, $07, $08, $02, $70, $05, $06, $03, $07, $00, $01, $02, $04, $37, $77
                dc.b    $76, $76, $02, $02, $11, $11, $02, $03, $01, $11, $01, $02, $05, $11, $00, $11
                dc.b    $00, $01, $02, $12, $11, $00, $07, $77, $00, $10, $71, $11, $77, $01, $DC, $CC
                dc.b    $DD, $AA, $33, $33, $33, $33, $08, $19, $03, $03, $03, $03, $33, $33, $33, $33
                dc.b    $33, $33, $33, $33, $33, $33, $33, $33, $03, $33, $03, $33, $00, $30, $00, $30
                dc.b    $30, $03, $03, $30, $00, $30, $03, $01, $30, $0D, $05, $88, $88, $8B, $AC, $88
                dc.b    $04, $01, $80, $03, $01, $80, $02, $06, $88, $00, $30, $00, $33, $33, $03, $01
                dc.b    $33, $02, $13, $33, $00, $30, $00, $11, $45, $21, $17, $00, $50, $00, $10, $00
                dc.b    $01, $70, $01, $00, $05, $17, $03, $02, $01, $77, $02, $2A, $01, $77, $00, $05
                dc.b    $17, $01, $00, $01, $70, $10, $19, $9D, $A2, $33, $08, $00, $08, $00, $30, $80
                dc.b    $00, $88, $13, $38, $80, $00, $01, $03, $38, $88, $77, $11, $13, $33, $66, $10
                dc.b    $01, $10, $00, $01, $11, $10, $04, $01, $33, $04, $01, $30, $02, $02, $80, $03
                dc.b    $02, $08, $80, $33, $00, $01, $33, $00, $01, $10, $02, $02, $01, $11, $04, $04
                dc.b    $01, $16, $72, $22, $02, $01, $15, $05, $01, $10, $04, $0E, $70, $15, $00, $77
                dc.b    $00, $50, $00, $77, $70, $40, $00, $11, $07, $04, $02, $03, $11, $67, $34, $02
                dc.b    $20, $01, $17, $30, $01, $00, $01, $03, $01, $11, $00, $80, $30, $10, $61, $08
                dc.b    $03, $31, $77, $00, $88, $00, $17, $88, $88, $00, $01, $55, $41, $12, $22, $70
                dc.b    $15, $02, $01, $07, $07, $02, $07, $15, $02, $01, $71, $03, $01, $01, $03, $01
                dc.b    $70, $03, $04, $34, $50, $54, $43, $1C, $0C, $32, $22, $66, $71, $00, $01, $11
                dc.b    $11, $00, $01, $11, $11, $02, $02, $11, $11, $02, $02, $11, $11, $02, $02, $11
                dc.b    $11, $02, $02, $01, $11, $02, $06, $01, $11, $32, $76, $60, $11, $1C, $04, $54
                dc.b    $17, $71, $10, $1C, $24, $66, $71, $00, $10, $11, $11, $11, $11, $01, $11, $11
                dc.b    $11, $01, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $01, $11, $11
                dc.b    $11, $01, $11, $11, $11, $23, $23, $23, $23, $1C, $04, $32, $22, $22, $32, $02
                dc.b    $02, $01, $11, $02, $02, $11, $11, $02, $02, $11, $11, $02, $21, $11, $11, $00
                dc.b    $01, $11, $11, $00, $01, $11, $11, $00, $01, $11, $11, $32, $26, $76, $67, $00
                dc.b    $51, $16, $77, $05, $17, $70, $11, $00, $70, $11, $BB, $51, $01, $3B, $03, $01
                dc.b    $08, $07, $18, $30, $80, $10, $76, $74, $19, $77, $77, $11, $55, $11, $10, $77
                dc.b    $11, $33, $01, $10, $70, $80, $30, $01, $07, $00, $03, $02, $01, $08, $02, $01
                dc.b    $10, $04, $05, $88, $88, $30, $16, $08, $02, $01, $70, $04, $0E, $08, $00, $01
                dc.b    $00, $30, $88, $30, $00, $03, $33, $17, $15, $11, $11, $02, $10, $07, $70, $17
                dc.b    $15, $34, $17, $10, $67, $00, $07, $01, $03, $00, $10, $00, $38, $0F, $01, $38
                dc.b    $04, $05, $11, $51, $10, $00, $88, $04, $03, $03, $00, $03, $03, $01, $10, $03
                dc.b    $05, $11, $00, $80, $30, $01, $06, $14, $03, $00, $88, $83, $33, $00, $88, $03
                dc.b    $33, $30, $80, $88, $80, $03, $38, $00, $08, $80, $13, $80, $02, $0C, $01, $3B
                dc.b    $88, $83, $10, $11, $33, $31, $01, $10, $11, $10, $02, $02, $07, $33, $09, $02
                dc.b    $10, $70, $03, $13, $01, $00, $01, $07, $05, $00, $10, $70, $10, $00, $77, $11
                dc.b    $50, $00, $66, $77, $22, $23, $11, $02, $11, $10, $77, $61, $11, $07, $70, $06
                dc.b    $67, $70, $17, $71, $01, $11, $01, $07, $10, $55, $02, $0B, $01, $00, $11, $07
                dc.b    $01, $00, $07, $64, $45, $00, $70, $03, $02, $01, $50, $02, $01, $15, $03, $01
                dc.b    $50, $11, $02, $05, $44, $1C, $04, $33, $22, $37, $76, $02, $02, $11, $11, $02
                dc.b    $02, $01, $11, $02, $02, $01, $11, $02, $02, $11, $11, $02, $02, $11, $11, $02
                dc.b    $02, $01, $11, $02, $06, $01, $11, $33, $27, $67, $10, $1C, $04, $05, $41, $77
                dc.b    $11, $1C, $24, $27, $76, $01, $10, $00, $11, $11, $11, $00, $11, $11, $11, $01
                dc.b    $11, $11, $11, $01, $11, $11, $11, $00, $11, $11, $11, $00, $11, $11, $11, $00
                dc.b    $11, $11, $11, $22, $23, $23, $23, $3C, $07, $54, $32, $21, $11, $00, $01, $03
                dc.b    $03, $01, $10, $02, $17, $70, $00, $30, $51, $00, $01, $03, $00, $07, $00, $10
                dc.b    $05, $10, $00, $13, $05, $17, $01, $30, $9C, $52, $20, $32, $08, $0C, $88, $00
                dc.b    $30, $10, $30, $00, $30, $11, $30, $00, $03, $30, $03, $0C, $03, $08, $88, $80
                dc.b    $00, $5D, $AB, $B0, $24, $07, $10, $38, $03, $01, $3B, $02, $05, $11, $03, $00
                dc.b    $07, $70, $02, $0C, $10, $00, $13, $00, $51, $07, $01, $65, $05, $11, $66, $50
                dc.b    $11, $06, $0A, $00, $10, $00, $80, $00, $11, $60, $80, $60, $01, $05, $81, $D3
                dc.b    $2C, $00, $2D, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $80
                dc.b    $33, $80, $93, $00, $10, $00, $10, $00, $B0, $00, $12, $00, $10, $00, $10, $00
                dc.b    $70, $00, $70, $00, $DD, $08, $DE, $80, $90, $88, $91, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $80, $9D, $80, $9F, $00, $10, $00, $10, $80
                dc.b    $53, $80, $51, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00
                dc.b    $1E, $00, $12, $00, $10, $00, $10, $00, $1E, $00, $16, $00, $10, $00, $10, $00
                dc.b    $3F, $00, $39, $00, $10, $00, $10, $00, $12, $00, $16, $00, $10, $00, $10, $00
                dc.b    $F7, $00, $30, $00, $10, $00, $10, $80, $99, $80, $5A, $00, $10, $00, $10, $80
                dc.b    $71, $80, $73, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00
                dc.b    $1E, $00, $12, $00, $10, $00, $10, $00, $1E, $00, $16, $00, $10, $00, $10, $00
                dc.b    $DA, $00, $D4, $00, $10, $00, $10, $00, $97, $00, $70, $00, $10, $00, $10, $00
                dc.b    $70, $00, $30, $00, $10, $00, $10, $80, $52, $80, $FD, $00, $10, $00, $10, $00
                dc.b    $12, $00, $16, $00, $10, $00, $10, $00, $16, $00, $12, $00, $10, $00, $10, $00
                dc.b    $12, $00, $1E, $00, $10, $00, $10, $00, $1E, $00, $12, $00, $10, $00, $10, $00
                dc.b    $12, $00, $16, $00, $10, $00, $10, $80, $7C, $80, $74, $00, $10, $00, $10, $00
                dc.b    $1E, $00, $12, $00, $10, $00, $10, $00, $58, $00, $58, $00, $10, $00, $10, $00
                dc.b    $12, $00, $16, $00, $10, $00, $10, $00, $16, $00, $12, $00, $10, $00, $10, $00
                dc.b    $12, $00, $1E, $00, $10, $00, $10, $00, $1E, $00, $12, $00, $10, $00, $10, $00
                dc.b    $B2, $00, $B6, $00, $BE, $00, $10, $00, $B8, $00, $12, $00, $10, $00, $10, $00
                dc.b    $10, $00, $11, $00, $10, $00, $10, $00, $DC, $00, $DD, $00, $10, $00, $10, $00
                dc.b    $12, $00, $16, $00, $10, $00, $10, $00, $16, $00, $12, $00, $10, $00, $10, $00
                dc.b    $16, $00, $12, $00, $10, $00, $10, $00, $14, $00, $1C, $00, $10, $00, $10, $00
                dc.b    $1E, $00, $12, $00, $10, $00, $10, $00, $3A, $00, $FF, $00, $10, $00, $10, $00
                dc.b    $9E, $00, $5B, $00, $10, $00, $10, $00, $5D, $00, $5F, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $00, $D7, $00, $D5, $00, $10, $00, $10, $00
                dc.b    $D1, $00, $32, $00, $10, $00, $D3, $00, $12, $00, $30, $00, $93, $00, $91, $00
                dc.b    $38, $00, $F7, $00, $DD, $00, $10, $00, $12, $00, $DD, $00, $10, $00, $DF, $00
                dc.b    $16, $00, $16, $00, $10, $00, $10, $00, $34, $00, $34, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $00, $10, $00
                dc.b    $F4, $00, $35, $03, $03, $C0, $08, $C0, $02, $02, $08, $C0, $03, $01, $C3, $03
                dc.b    $57, $75, $00, $B7, $20, $6B, $20, $6A, $00, $03, $00, $03, $20, $46, $20, $47
                dc.b    $00, $20, $00, $30, $80, $30, $80, $84, $00, $B4, $00, $10, $00, $B5, $00, $B7
                dc.b    $00, $B7, $00, $B5, $80, $A6, $80, $A6, $00, $30, $00, $30, $00, $32, $00, $32
                dc.b    $00, $30, $00, $30, $00, $6C, $00, $12, $00, $10, $00, $6E, $00, $6C, $00, $6C
                dc.b    $00, $70, $00, $71, $00, $2C, $00, $2D, $00, $10, $00, $10, $00, $3E, $00, $3E
                dc.b    $00, $10, $00, $10, $00, $D8, $00, $30, $03, $07, $10, $00, $EA, $00, $33, $00
                dc.b    $10, $03, $03, $FA, $00, $22, $03, $05, $10, $00, $DA, $00, $32, $05, $03, $DA
                dc.b    $00, $32, $03, $05, $10, $00, $DA, $00, $22, $04, $04, $61, $DA, $00, $33, $03
                dc.b    $07, $10, $61, $FA, $00, $23, $00, $10, $03, $1B, $32, $00, $13, $00, $10, $00
                dc.b    $10, $00, $3E, $00, $3E, $00, $10, $00, $1B, $00, $2D, $00, $20, $00, $10, $00
                dc.b    $10, $00, $11, $00, $16, $04, $04, $01, $9D, $01, $9D, $0B, $01, $0F, $03, $03
                dc.b    $0F, $08, $0F, $02, $02, $08, $F8, $03, $80, $A7, $10, $00, $C7, $00, $D3, $00
                dc.b    $F4, $00, $10, $00, $10, $00, $24, $00, $23, $00, $22, $00, $21, $00, $12, $00
                dc.b    $1E, $00, $10, $00, $10, $08, $1F, $08, $1F, $08, $11, $00, $10, $00, $2E, $08
                dc.b    $20, $08, $21, $08, $22, $00, $12, $00, $16, $00, $10, $00, $10, $08, $F7, $08
                dc.b    $F7, $00, $10, $00, $10, $00, $16, $00, $12, $00, $10, $00, $10, $00, $12, $00
Ghz_Flower_1:            ; loc_28000:
                incbin  'data\ghz\flower_1.dat'
Ghz_Flower_2:            ; loc_28080: 
                incbin  'data\ghz\flower_2.dat'
Ghz_Flower_3:            ; loc_28100:  
                incbin  'data\ghz\flower_3.dat'
Ghz_Flower_4:            ; loc_28180:         
                incbin  'data\ghz\flower_4.dat'                 
Ghz_Dyn_Wall:            ; loc_28200:
                incbin  'data\ghz\dyn_wall.dat'                
Hill_Top_Background:     ; loc_28300:
                incbin  'data\htz\backgnd.nem'
Hill_Top_Background_Unc: ; loc_28C2A:                
                incbin  'data\htz\backgnd.dat'                    
Mz_Spinnig_Cylinder:     ; loc_2902A:
                incbin  'data\mz\spin_cyl.dat'
Mz_Lava:                 ; loc_2A02A:
                incbin  'data\mz\lava.dat'  
Mz_Pistons:              ; loc_2A06A:
                incbin  'data\mz\pistons.dat' 
Mz_Drills:               ; loc_2A86A:
                incbin  'data\mz\drills.dat'                                               
HPz_Dyn_Background:      ; loc_2B06A: Unused - Left over from previous build
                incbin  'data\hpz\backgnd.dat' 
HPz_Orbs:                ; loc_2B46A:
                incbin  'data\hpz\orbs.dat' 
OOz_Red_Balls:           ; loc_2B76A:
                incbin  'data\ooz\red_ball.dat'  
OOz_Rotating_Square_1:   ; loc_2B8EA:
                incbin  'data\ooz\r_squar1.dat'                             
OOz_Rotating_Square_2:   ; loc_2BAEA:
                incbin  'data\ooz\r_squar2.dat'  
OOz_Oil_1:               ; loc_2BCEA:
                incbin  'data\ooz\oil_1.dat'   
OOz_Oil_2:               ; loc_2C4EA:
                incbin  'data\ooz\oil_2.dat'                                 
CPz_Dyn_Background:      ; loc_2CCEA:
                incbin  'data\cpz\backgnd.dat'  
NGHz_Water_Falls_1:      ; loc_2CEEA:
                incbin  'data\nghz\water_f1.dat'                
NGHz_Water_Falls_2:      ; loc_2CFEA:
                incbin  'data\nghz\water_f2.dat'                 
NGHz_Water_Falls_3:      ; loc_2D0EA:
                incbin  'data\nghz\water_f3.dat' 
;=============================================================================== 
; Colision Array
; [ Begin ]
;===============================================================================                 
AngleMap: ; loc_2D1EA:  
                incbin  'data\all\anglemap.dat' 
Colision_Array_1: ; loc_2D2EA: 
                incbin  'data\all\c_array1.dat' 
Colision_Array_2: ; loc_2E2EA: 
                incbin  'data\all\c_array2.dat' 
;=============================================================================== 
; Colision Array
; [ End ]
;===============================================================================                  
;=============================================================================== 
; 16x16 Colision Index
; [ Begin ]
;===============================================================================                                          
Green_Hill_Colision_1:     ; loc_2F2EA:                
                incbin  'data\ghz\ghz_col1.dat'
Green_Hill_Colision_2:     ; loc_2F5EA:                
                incbin  'data\ghz\ghz_col2.dat'
Wood_Colision:             ; loc_2F8EA:
                incbin  'data\wz\wz_col.dat' 
Metropolis_Colision:       ; loc_2FBEA:
                incbin  'data\mz\mz_col.dat' 
Hidden_Palace_Colision_1:  ; loc_2FEEA:                
                incbin  'data\hpz\hpz_col1.dat'
Hidden_Palace_Colision_2:  ; loc_301EA:                
                incbin  'data\hpz\hpz_col2.dat' 
Oil_Ocean_Colision:        ; loc_304EA:                
                incbin  'data\ooz\ooz_col.dat' 
Dust_Hill_Colision:        ; loc_307EA:                
                incbin  'data\dhz\dhz_col.dat'  
Casino_Night_Colision_1:   ; loc_30AEA:                
                incbin  'data\cnz\cnz_col1.dat'  
Casino_Night_Colision_2:   ; loc_30DEA:                
                incbin  'data\cnz\cnz_col2.dat'  
Chemical_Plant_Colision_1: ; loc_310EA:                
                incbin  'data\cpz\cpz_col1.dat' 
Chemical_Plant_Colision_2: ; loc_313EA:                
                incbin  'data\cpz\cpz_col2.dat' 
Neo_Green_Hill_Colision_1: ; loc_316EA:                
                incbin  'data\nghz\nghzcol1.dat'
Neo_Green_Hill_Colision_2: ; loc_319EA:                
                incbin  'data\nghz\nghzcol2.dat'                                                                                                                                                                              
;=============================================================================== 
; 16x16 Colision Index
; [ End ]
;===============================================================================                  
;=============================================================================== 
; Special Stage Layout
; [ Begin ]
;===============================================================================        
Special_Stage_1: ; loc_31CEA:
                IncBin  ".\data\ss\stage_1.eni"  
Special_Stage_2: ; loc_31F64:
                IncBin  ".\data\ss\stage_2.eni"  
Special_Stage_3: ; loc_32376:        
                IncBin  ".\data\ss\stage_3.eni"  
Special_Stage_4: ; loc_326D2:
                IncBin  ".\data\ss\stage_4.eni"  
Special_Stage_5: ; loc_32BAC:
                IncBin  ".\data\ss\stage_5.eni"  
Special_Stage_6: ; loc_3305C:
                IncBin  ".\data\ss\stage_6.eni"                                                               
;=============================================================================== 
; Special Stage Layout
; [ End ]
;===============================================================================  
;=============================================================================== 
; Level Layout
; [ Begin ]
;===============================================================================                  
Level_Layout: ; loc_3334E:                       
                dc.w    Ghz_1_Foreground-Level_Layout,Ghz_Background-Level_Layout ; $0000
                dc.w    Ghz_2_Foreground-Level_Layout,Ghz_Background-Level_Layout ; $0001                
                dc.w    Null_Layout_1-Level_Layout,Null_Layout_1-Level_Layout ; $0100
                dc.w    Null_Layout_1-Level_Layout,Null_Layout_1-Level_Layout ; $0101                
                dc.w    Wz_1_Foreground-Level_Layout,Wz_1_Background-Level_Layout ; $0200
                dc.w    Wz_2_Foreground-Level_Layout,Wz_2_Background-Level_Layout ; $0201
                dc.w    Null_Layout_2-Level_Layout,Null_Layout_2-Level_Layout ; $0300
                dc.w    Null_Layout_2-Level_Layout,Null_Layout_2-Level_Layout ; $0301
                dc.w    Mz_1_Foreground-Level_Layout,Mz_Background-Level_Layout ; $0400
                dc.w    Mz_2_Foreground-Level_Layout,Mz_Background-Level_Layout ; $0401
                dc.w    Mz_3_Foreground-Level_Layout,Mz_Background-Level_Layout ; $0500
                dc.w    Mz_3_Foreground-Level_Layout,Mz_Background-Level_Layout ; $0501                  
                dc.w    Null_Layout_3-Level_Layout,Null_Layout_3-Level_Layout ; $0600
                dc.w    Null_Layout_3-Level_Layout,Null_Layout_3-Level_Layout ; $0601
                dc.w    Htz_1_Foreground-Level_Layout,Htz_1_Background-Level_Layout ; $0700
                dc.w    Htz_2_Foreground-Level_Layout,Htz_2_Background-Level_Layout ; $0701
                dc.w    Hpz_Foreground-Level_Layout,Hpz_Background-Level_Layout ; $0800
                dc.w    Hpz_Foreground-Level_Layout,Hpz_Background-Level_Layout ; $0801
                dc.w    Null_Layout_4-Level_Layout,Null_Layout_4-Level_Layout ; $0900
                dc.w    Null_Layout_4-Level_Layout,Null_Layout_4-Level_Layout ; $0901
                dc.w    OOz_1_Foreground-Level_Layout,OOz_Background-Level_Layout ; $0A00
                dc.w    OOz_2_Foreground-Level_Layout,OOz_Background-Level_Layout ; $0A01
                dc.w    Dhz_1_Foreground-Level_Layout,Dhz_Background-Level_Layout ; $0B00
                dc.w    Dhz_2_Foreground-Level_Layout,Dhz_Background-Level_Layout ; $0B01
                dc.w    Cnz_1_Foreground-Level_Layout,Cnz_1_Background-Level_Layout ; $0C00
                dc.w    Cnz_2_Foreground-Level_Layout,Cnz_2_Background-Level_Layout ; $0C01
                dc.w    Cpz_1_Foreground-Level_Layout,Cpz_Background-Level_Layout ; $0D00
                dc.w    Cpz_2_Foreground-Level_Layout,Cpz_Background-Level_Layout ; $0D01
                dc.w    Null_Layout_5-Level_Layout,Null_Layout_5-Level_Layout ; $0E00
                dc.w    Null_Layout_5-Level_Layout,Null_Layout_5-Level_Layout ; $0E01
                dc.w    Nghz_1_Foreground-Level_Layout,Nghz_1_Background-Level_Layout ; $0F00
                dc.w    Nghz_2_Foreground-Level_Layout,Nghz_2_Background-Level_Layout ; $0F01
                dc.w    Null_Layout_6-Level_Layout,Null_Layout_6-Level_Layout ; $1000
                dc.w    Null_Layout_6-Level_Layout,Null_Layout_6-Level_Layout ; $1001                     
Ghz_1_Foreground:  ; loc_333D6:               
                incbin  'data\ghz\foreact1.dat'
Ghz_2_Foreground:  ; loc_33BD8:                
                incbin  'data\ghz\foreact2.dat'

Ghz_Background:    ; loc_343DA:            
                dc.b    $03, $01 ; x / y
                dc.b    $F8, $F9, $FA, $FB, $FC, $FD, $FE, $FF                 
Null_Layout_1:     ; loc_343E4:             
                dc.b    $00, $00, $00, $00                  
Wz_1_Foreground:   ; loc_343E8:           
                incbin  'data\wz\foreact1.dat'
Wz_2_Foreground:   ; loc_34BEA: 
                incbin  'data\wz\foreact2.dat'
Wz_1_Background:   ; loc_353EC: 
                incbin  'data\wz\backact1.dat'   
Wz_2_Background:   ; loc_35BEE:  
                incbin  'data\wz\backact2.dat'
Null_Layout_2:     ; loc_363F0:             
                dc.b    $00, $00, $00, $00                  
Mz_1_Foreground:   ; loc_363F4: 
                incbin  'data\mz\foreact1.dat'                                    
Mz_2_Foreground:   ; loc_36BF6: 
                incbin  'data\mz\foreact2.dat'   
Mz_Background:     ; loc_373F8:            
                dc.b    $05, $05 ; x / y
                dc.b    $60, $61, $62, $63, $64, $F2, $70, $71, $72, $73, $74, $60, $E0, $E1, $E2, $E3
                dc.b    $E4, $70, $F0, $F1, $F2, $F3, $F4, $E2, $62, $61, $60, $63, $64, $62, $72, $71
                dc.b    $70, $73, $74, $72                
Mz_3_Foreground:   ; loc_3741E:  
                incbin  'data\mz\foreact3.dat'               
Null_Layout_3:     ; loc_37C20:            
                dc.b    $00, $00, $00, $00                                                
Htz_1_Foreground:  ; loc_37C24: 
                incbin  'data\htz\foreact1.dat'
Htz_2_Foreground:  ; loc_38426:  
                incbin  'data\htz\foreact2.dat'              
Htz_1_Background:  ; loc_38C28:              
                incbin  'data\htz\backact1.dat'                                 
Htz_2_Background:  ; loc_3942A:               
                incbin  'data\htz\backact2.dat'                              
Hpz_Foreground:    ; loc_39C2C:  
                incbin  'data\hpz\foreact1.dat'                   
Hpz_Background:    ; loc_3942E:                             
                dc.b    $07, $08 ; x / y
                dc.b    $A3, $A3, $A3, $A3, $A3, $A3, $A3, $A3, $A0, $A1, $A0, $A1, $A0, $A1, $A0, $A1
                dc.b    $C0, $C1, $C2, $C3, $C4, $C5, $C6, $C7, $D0, $D1, $D2, $D3, $D4, $D5, $D6, $D7
                dc.b    $E0, $E1, $E2, $E3, $E4, $E5, $E6, $E7, $B0, $B1, $B0, $B1, $B0, $B1, $B0, $B1
                dc.b    $A2, $A2, $A2, $A2, $A2, $A2, $A2, $A2, $B2, $B2, $B2, $B2, $B2, $B2, $B2, $B2
                dc.b    $B2, $B2, $B2, $B2, $B2, $B2, $B2, $B2                  
Null_Layout_4:     ; loc_3A478:            
                dc.b    $00, $00, $00, $00                                          
OOz_1_Foreground:  ; loc_3A47C:  
                incbin  'data\ooz\foreact1.dat'                        
OOz_2_Foreground:  ; loc_3AC7E:   
                incbin  'data\ooz\foreact2.dat'                         
OOz_Background:    ; loc_3B480:             
                dc.b    $05, $03  ; x / y
                dc.b    $00, $00, $00, $00, $00, $00, $02, $4F, $02, $1F, $02, $1F, $49, $4A, $4B, $23
                dc.b    $54, $6C, $4C, $4D, $4E, $32, $5A, $74                  
Dhz_1_Foreground:  ; loc_3B49A:  
                incbin  'data\dhz\foreact1.dat'                
Dhz_2_Foreground:  ; loc_3BC9C:               
                incbin  'data\dhz\foreact2.dat'                
Dhz_Background:    ; loc_3C49E:              
                dc.b    $03, $03 ; x / y
                dc.b    $58, $5C, $63, $64, $65, $66, $6E, $6F, $73, $80, $86, $A3, $B0, $E7, $E8, $E9   
Cnz_1_Foreground:  ; loc_3C4B0:  
                incbin  'data\cnz\foreact1.dat' 
Cnz_2_Foreground:  ; loc_3CCB2:          
                incbin  'data\cnz\foreact2.dat'
Cnz_1_Background:  ; loc_3D4B4:
                incbin  'data\cnz\backact1.dat' 
Cnz_2_Background:  ; loc_3DCB6: 
                dc.b    $03, $01 ; x / y
                dc.b    $8B, $8C, $8D, $8E, $8F, $90, $91, $92
Cpz_1_Foreground:  ; loc_3DCC0:  
                incbin  'data\cpz\foreact1.dat'                
Cpz_2_Foreground:  ; loc_3E4C2: 
                incbin  'data\cpz\foreact2.dat'                
Cpz_Background:    ; loc_3ECC4: 
                dc.b    $05, $06 ; x / y
                dc.b    $A0, $A1, $A2, $00, $A4, $A5, $B0, $B1, $B2, $B3, $B4, $B5, $C0, $C1, $C2, $C3
                dc.b    $C4, $C5, $D0, $D1, $D2, $D3, $D4, $D5, $E0, $E1, $E2, $E3, $E4, $E5, $E0, $E3
                dc.b    $E2, $E3, $E4, $E5, $E0, $E4, $E2, $E1, $E4, $E5
Null_Layout_5:     ; loc_3ECF0:            
                dc.b    $00, $00, $00, $00      
Nghz_1_Foreground: ; loc_3ECF4:    
                incbin  'data\nghz\foreact1.dat'                
Nghz_2_Foreground: ; loc_3F4F6: 
                incbin  'data\nghz\foreact2.dat'                 
Nghz_1_Background: ; loc_3ECF8:  
                incbin  'data\nghz\backact1.dat'                 
Nghz_2_Background: ; loc_404FA:  
                incbin  'data\nghz\backact2.dat'                            
Null_Layout_6:     ; loc_40CFC:             
                dc.b    $00, $00, $00, $00    
;=============================================================================== 
; Level Object Layout
; [ End ]
;===============================================================================                    
loc_40D00: ; Big Ring - Left Over from Sonic 1                
                incbin  'data\sprites\bigring.dat'
loc_41940: ; Neo Green Hill Foreground Act 2 overwrite by Big Ring- Left Over from previous build ???                 
                incbin  'data\nghz\fgunused.dat'  
loc_41B72: ; Neo Green Hill Background Act 1 - Left Over from previous build ???                 
                incbin  'data\nghz\backact1.dat'                                
loc_42374: ; Neo Green Hill Background Act 2 - Left Over from previous build ???                 
                incbin  'data\nghz\bgunused.dat'  
loc_42B76: ; Filler for Null Level Layout - Left Over from previous build ???                                
                dc.b    $00, $00, $00, $00                                    
loc_42B7A: ; Another Big Ring - Left Over from Sonic 1  
                incbin  'data\sprites\bigring.dat'       
Unknow_Pallete_0x0437BA: ; loc_437BA:
                dc.w    $0000, $0262, $02A4, $04E8, $0000, $0EEE                
Unknow_Data_0x0437C6: ; loc_437C6:
                dc.b    $20, $00, $00, $2D, $01, $20, $02, $02, $02, $12, $03, $02, $C6, $20, $02, $03
                dc.b    $0B, $72, $20, $02, $06, $AD, $62, $02, $FF, $DC, $61, $02, $02, $01, $66, $02
                dc.b    $06, $07, $B1, $00, $02, $6A, $A0, $02, $01, $10, $02, $01, $21, $06, $09, $20
                dc.b    $00, $1A, $00, $12, $66, $1A, $AB, $16, $03, $01, $10, $03, $02, $10, $01, $03
                dc.b    $01, $01, $02, $52, $07, $01, $6D, $DD, $10, $67, $77, $DD, $01, $66, $BA, $00
                dc.b    $76, $06, $CD, $DD, $BB, $BC, $CD, $DD, $DD, $CB, $BA, $AA, $66, $06, $67, $77
                dc.b    $BB, $66, $66, $61, $00, $A1, $00, $70, $00, $B1, $07, $07, $0A, $01, $16, $60
                dc.b    $C1, $B0, $67, $76, $CB, $B6, $11, $67, $BC, $61, $17, $BA, $61, $16, $71, $00
                dc.b    $11, $00, $67, $DD, $00, $06, $66, $D6, $70, $16, $1B, $0B, $01, $11, $A0, $00
                dc.b    $60, $35, $FF, $FF, $76, $32, $02, $03, $AB, $66, $20, $02, $09, $A1, $10, $00
                dc.b    $B0, $A0, $02, $00, $6D, $77, $02, $06, $06, $76, $11, $20, $66, $AB, $02, $04
                dc.b    $42, $FF, $23, $02, $02, $06, $22, $16, $00, $02, $16, $6B, $02, $05, $7B, $A0
                dc.b    $00, $21, $10, $02, $05, $07, $A0, $00, $02, $11, $06, $16, $20, $16, $A0, $BC
                dc.b    $66, $11, $6B, $BC, $BB, $76, $16, $CB, $00, $B0, $61, $16, $00, $01, $17, $11
                dc.b    $00, $0A, $05, $01, $70, $02, $26, $01, $00, $DD, $DC, $61, $07, $DD, $DC, $CB
                dc.b    $BB, $BA, $AB, $BC, $DD, $67, $76, $60, $66, $11, $66, $66, $BB, $70, $70, $1A
                dc.b    $00, $77, $07, $1B, $00, $70, $76, $10, $A0, $44, $45, $56, $7D, $02, $02, $02
                dc.b    $20, $03, $01, $02, $16, $0A, $22, $33, $00, $02, $16, $66, $00, $21, $70, $10
                dc.b    $03, $05, $10, $02, $17, $00, $10, $03, $05, $11, $21, $70, $00, $11, $03, $0B
                dc.b    $11, $67, $00, $11, $0B, $BB, $BB, $AA, $A0, $A0, $A0, $02, $02, $0A, $AA, $03
                dc.b    $01, $AA, $03, $01, $AA, $03, $01, $AA, $03, $01, $AA, $02, $05, $01, $A0, $A0
                dc.b    $00, $11, $03, $01, $11, $03, $01, $11, $03, $01, $11, $03, $01, $11, $03, $01
                dc.b    $11, $03, $01, $11, $03, $0E, $FE, $FC, $F5, $54, $11, $31, $30, $01, $03, $00
                dc.b    $03, $01, $00, $10, $06, $06, $01, $00, $10, $00, $10, $F0, $02, $14, $01, $00
                dc.b    $01, $00, $03, $FF, $F0, $20, $B1, $2E, $F0, $10, $0B, $A2, $33, $20, $00, $0B
                dc.b    $BB, $BB, $10, $04, $22, $22, $22, $22, $04, $01, $20, $03, $01, $02, $04, $01
                dc.b    $20, $05, $05, $01, $00, $02, $00, $11, $03, $05, $11, $02, $FF, $DD, $DC, $02
                dc.b    $01, $A0, $02, $3D, $A0, $AA, $A0, $00, $10, $00, $0A, $00, $70, $00, $11, $02
                dc.b    $0A, $00, $07, $00, $11, $00, $70, $00, $27, $0A, $01, $32, $20, $CB, $71, $C6
                dc.b    $01, $07, $71, $0B, $70, $10, $16, $A0, $A1, $01, $11, $1A, $07, $10, $60, $66
                dc.b    $B0, $01, $10, $01, $70, $71, $71, $01, $17, $00, $16, $17, $7C, $BD, $DD, $71
                dc.b    $A0, $02, $01, $1A, $03, $03, $A0, $0A, $AA, $02, $73, $0A, $07, $A0, $A0, $00
                dc.b    $A6, $70, $1B, $BA, $01, $0A, $66, $67, $C1, $06, $DD, $D0, $16, $76, $00, $D1
                dc.b    $DD, $71, $00, $0C, $00, $76, $00, $0A, $0B, $70, $00, $06, $A6, $D6, $00, $D1
                dc.b    $10, $AB, $00, $07, $61, $7B, $00, $0A, $61, $16, $CD, $B0, $B0, $C7, $11, $00
                dc.b    $A0, $B1, $00, $0A, $10, $07, $10, $01, $00, $61, $17, $70, $70, $D6, $11, $77
                dc.b    $00, $A7, $1A, $B7, $01, $11, $60, $01, $10, $61, $0D, $0A, $01, $03, $76, $0A
                dc.b    $01, $10, $1B, $A1, $07, $72, $0B, $17, $0B, $10, $06, $61, $70, $00, $0D, $60
                dc.b    $AA, $10, $0A, $70, $B1, $70, $01, $11, $67, $12, $26, $66, $DC, $DF, $05, $02
                dc.b    $01, $A0, $06, $02, $01, $0A, $02, $07, $10, $A0, $BA, $21, $0A, $0A, $11, $03
                dc.b    $08, $01, $DC, $A0, $AA, $16, $00, $0A, $01, $04, $01, $77, $02, $01, $10, $02
                dc.b    $15, $A1, $07, $00, $AB, $10, $61, $10, $10, $06, $67, $16, $00, $66, $BA, $10
                dc.b    $01, $71, $00, $DD, $00, $0A, $0E, $02, $07, $7D, $02, $06, $67, $61, $D0, $00
                dc.b    $7A, $B7, $02, $04, $5F, $F4, $2F, $FD, $03, $01, $21, $02, $1E, $02, $17, $02
                dc.b    $22, $30, $16, $20, $11, $16, $67, $06, $70, $60, $10, $06, $77, $06, $77, $00
                dc.b    $10, $61, $16, $16, $60, $66, $71, $70, $00, $01, $10, $02, $1A, $10, $10, $66
                dc.b    $00, $11, $77, $76, $77, $07, $06, $01, $11, $61, $6B, $71, $60, $06, $AB, $66
                dc.b    $10, $0A, $B6, $17, $0D, $D0, $BD, $02, $01, $A0, $02, $1B, $AA, $A0, $00, $77
                dc.b    $D7, $DC, $00, $DD, $DD, $77, $D0, $AA, $AA, $AB, $1D, $77, $77, $BA, $60, $7D
                dc.b    $77, $61, $A0, $0A, $00, $60, $B7, $02, $03, $11, $10, $10, $03, $0C, $10, $11
                dc.b    $11, $10, $01, $75, $57, $71, $17, $20, $02, $27, $04, $0C, $10, $20, $00, $20
                dc.b    $12, $05, $44, $67, $00, $01, $01, $67, $02, $06, $67, $02, $10, $01, $02, $20
                dc.b    $02, $04, $20, $00, $02, $20, $06, $0F, $17, $07, $52, $22, $00, $46, $13, $33
                dc.b    $70, $11, $15, $00, $25, $77, $71, $02, $03, $22, $07, $50, $02, $01, $22, $07
                dc.b    $01, $02, $02, $07, $02, $56, $50, $11, $13, $66, $33, $02, $01, $01, $03, $01
                dc.b    $01, $04, $01, $07, $03, $01, $07, $03, $01, $07, $07, $09, $70, $00, $02, $7C
                dc.b    $16, $00, $02, $7A, $A6, $02, $02, $27, $A1, $03, $01, $6A, $02, $02, $02, $1B
                dc.b    $03, $01, $26, $03, $01, $02, $04, $05, $33, $32, $32, $24, $17, $04, $3B, $70
                dc.b    $11, $06, $66, $00, $17, $66, $B6, $10, $71, $B1, $CB, $A1, $0A, $0A, $1D, $C7
                dc.b    $BA, $DC, $22, $1B, $A7, $17, $5F, $DB, $70, $06, $A0, $01, $10, $10, $B0, $01
                dc.b    $10, $17, $6D, $D6, $01, $7A, $66, $11, $17, $B0, $B1, $71, $01, $00, $C1, $11
                dc.b    $17, $BA, $66, $67, $61, $67, $AD, $CB, $11, $6D, $02, $02, $A0, $7A, $02, $02
                dc.b    $01, $11, $02, $02, $07, $07, $02, $02, $01, $11, $03, $01, $71, $02, $02, $A0
                dc.b    $07, $05, $03, $0A, $17, $07, $03, $07, $07, $00, $01, $70, $01, $AA, $A7, $02
                dc.b    $08, $66, $60, $11, $01, $11, $11, $10, $76, $02, $14, $11, $12, $10, $00, $22
                dc.b    $20, $10, $17, $42, $00, $10, $61, $62, $00, $70, $76, $20, $00, $01, $02, $02
                dc.b    $02, $71, $20, $02, $01, $12, $03, $01, $20, $07, $04, $24, $FF, $FF, $55, $02
                dc.b    $10, $0A, $16, $00, $0A, $B6, $77, $00, $B1, $06, $61, $07, $01, $BA, $AA, $00
                dc.b    $1A, $02, $01, $07, $04, $01, $A0, $02, $0E, $60, $DA, $0B, $DB, $76, $6A, $00
                dc.b    $61, $16, $10, $0B, $BA, $10, $A0, $02, $01, $70, $03, $1A, $10, $A0, $00, $AB
                dc.b    $00, $1A, $AA, $10, $00, $01, $11, $00, $0B, $B0, $66, $BB, $A0, $A0, $06, $D0
                dc.b    $00, $16, $D1, $00, $0B, $6D, $02, $14, $B0, $D0, $A1, $00, $0B, $00, $16, $7D
                dc.b    $0A, $00, $6D, $A0, $01, $AB, $D0, $A0, $67, $70, $DC, $16, $03, $01, $01, $03
                dc.b    $01, $01, $03, $01, $01, $03, $01, $01, $03, $01, $01, $03, $01, $01, $03, $06
                dc.b    $01, $71, $76, $0C, $60, $10, $03, $01, $10, $03, $01, $10, $03, $01, $10, $03
                dc.b    $01, $10, $03, $01, $10, $03, $01, $10, $03, $04, $1D, $0D, $DD, $D7, $1C, $0D
                dc.b    $0B, $6C, $C1, $C6, $01, $77, $77, $71, $10, $11, $11, $10, $51, $03, $18, $25
                dc.b    $10, $00, $01, $62, $51, $00, $17, $07, $47, $46, $12, $57, $66, $22, $62, $57
                dc.b    $24, $75, $77, $01, $20, $01, $10, $03, $01, $01, $04, $02, $10, $70, $02, $16
                dc.b    $70, $00, $11, $16, $20, $00, $05, $52, $20, $00, $02, $22, $06, $75, $03, $33
                dc.b    $77, $71, $50, $00, $11, $10, $04, $16, $50, $00, $01, $11, $15, $00, $67, $77
                dc.b    $71, $00, $22, $20, $71, $00, $22, $56, $15, $00, $33, $45, $73, $34, $03, $01
                dc.b    $70, $03, $01, $70, $03, $01, $70, $03, $01, $70, $03, $01, $70, $03, $01, $70
                dc.b    $03, $05, $70, $22, $22, $01, $66, $06, $0F, $01, $01, $00, $10, $11, $11, $11
                dc.b    $11, $11, $11, $10, $10, $10, $10, $10, $02, $11, $70, $00, $07, $07, $77, $33
                dc.b    $01, $06, $6B, $02, $60, $10, $A0, $00, $A1, $00, $A0, $03, $01, $10, $03, $1C
                dc.b    $7A, $00, $A1, $10, $11, $02, $6A, $70, $06, $00, $1A, $B1, $00, $42, $06, $C7
                dc.b    $66, $70, $07, $C6, $77, $10, $07, $00, $11, $00, $01, $A0, $03, $01, $10, $03
                dc.b    $01, $60, $02, $01, $07, $03, $01, $0A, $02, $10, $DD, $DA, $76, $61, $BB, $B1
                dc.b    $17, $70, $BB, $BB, $B6, $67, $B0, $BB, $06, $61, $03, $13, $01, $B0, $BB, $A6
                dc.b    $61, $BB, $BB, $16, $66, $BB, $11, $17, $77, $CC, $67, $54, $44, $11, $10, $02
                dc.b    $02, $76, $60, $02, $01, $67, $07, $01, $77, $03, $02, $66, $60, $02, $02, $66
                dc.b    $10, $02, $06, $77, $71, $44, $44, $70, $07, $02, $07, $77, $00, $01, $11, $70
                dc.b    $01, $10, $02, $01, $10, $02, $01, $01, $02, $06, $AA, $11, $00, $0A, $00, $11
                dc.b    $03, $17, $61, $AA, $A0, $0A, $07, $A0, $0A, $A0, $21, $1A, $A0, $11, $00, $71
                dc.b    $11, $00, $02, $17, $00, $77, $00, $21, $77, $02, $02, $02, $11, $03, $08, $22
                dc.b    $11, $44, $34, $44, $66, $00, $17, $02, $08, $07, $00, $77, $00, $70, $11, $10
                dc.b    $77, $02, $02, $01, $11, $04, $02, $01, $10, $02, $08, $12, $22, $01, $16, $64
                dc.b    $44, $76, $76, $02, $1E, $16, $76, $00, $07, $71, $1B, $77, $70, $10, $1B, $11
                dc.b    $11, $01, $60, $00, $01, $17, $AB, $11, $10, $07, $CB, $77, $76, $66, $CB, $67
                dc.b    $61, $76, $BB, $03, $01, $01, $03, $02, $01, $01, $02, $16, $70, $00, $10, $61
                dc.b    $16, $16, $77, $66, $67, $17, $71, $06, $01, $21, $10, $10, $66, $50, $70, $1D
                dc.b    $07, $10, $03, $01, $10, $02, $02, $01, $10, $02, $15, $66, $66, $10, $0A, $B6
                dc.b    $71, $70, $01, $AB, $16, $11, $16, $6B, $61, $01, $10, $16, $7D, $7D, $D0, $D0
                dc.b    $06, $01, $A0, $02, $0B, $0A, $76, $00, $7D, $77, $61, $A0, $DD, $DD, $BA, $60
                dc.b    $02, $16, $BC, $11, $DD, $DD, $61, $01, $27, $31, $71, $37, $00, $22, $16, $26
                dc.b    $05, $65, $71, $62, $00, $54, $61, $02, $02, $02, $55, $56, $03, $01, $05, $08
                dc.b    $04, $55, $31, $54, $33, $03, $0E, $66, $61, $20, $01, $05, $20, $00, $05, $50
                dc.b    $07, $02, $50, $00, $42, $04, $01, $50, $02, $02, $04, $07, $02, $02, $60, $14
                dc.b    $02, $02, $65, $50, $02, $01, $50, $17, $0A, $0B, $BA, $88, $89, $B1, $32, $FF
                dc.b    $01, $02, $0F, $02, $04, $10, $F0, $00, $F0, $04, $01, $3F, $07, $01, $10, $02
                dc.b    $0B, $0F, $2D, $DE, $F0, $00, $30, $31, $F0, $00, $10, $1F, $06, $02, $03, $0F
                dc.b    $03, $0E, $10, $FF, $FF, $01, $33, $00, $01, $00, $31, $21, $23, $FF, $ED, $30
                dc.b    $02, $06, $FE, $31, $DD, $0F, $00, $30, $03, $0F, $01, $F0, $F0, $11, $10, $1F
                dc.b    $00, $1F, $F1, $01, $1F, $F0, $0F, $E0, $E0, $02, $0D, $0E, $FF, $FE, $DD, $77
                dc.b    $FF, $01, $22, $9A, $00, $FF, $00, $13, $02, $02, $F0, $01, $04, $03, $F0, $00
                dc.b    $0F, $05, $01, $1F, $03, $07, $93, $DD, $EE, $22, $0B, $11, $23, $02, $03, $BB
                dc.b    $01, $11, $02, $02, $BB, $BB, $10, $04, $AA, $AA, $AA, $AA, $04, $0C, $11, $10
                dc.b    $01, $11, $00, $01, $11, $23, $BB, $B0, $13, $10, $02, $01, $31, $03, $01, $10
                dc.b    $05, $0A, $AA, $B0, $23, $33, $11, $01, $01, $10, $01, $23, $02, $07, $32, $00
                dc.b    $30, $01, $0F, $10, $03, $04, $02, $30, $F0, $07, $04, $CC, $32, $22, $21, $02
                dc.b    $08, $12, $22, $01, $23, $21, $10, $03, $10, $02, $01, $01, $06, $03, $01, $00
                dc.b    $0F, $02, $16, $01, $00, $F0, $00, $02, $3D, $E1, $12, $11, $01, $23, $30, $33
                dc.b    $11, $01, $11, $00, $30, $11, $11, $00, $03, $04, $01, $33, $04, $02, $33, $10
                dc.b    $03, $04, $23, $33, $33, $32, $03, $04, $10, $11, $11, $11, $04, $02, $01, $11
                dc.b    $02, $01, $10, $03, $04, $03, $30, $00, $01, $04, $0B, $30, $21, $00, $01, $22
                dc.b    $00, $01, $11, $11, $01, $10, $02, $09, $10, $33, $33, $33, $33, $11, $11, $11
                dc.b    $01, $02, $01, $01, $03, $08, $12, $01, $00, $01, $20, $22, $33, $32, $05, $01
                dc.b    $11, $04, $01, $10, $02, $15, $30, $10, $00, $11, $21, $00, $11, $03, $00, $11
                dc.b    $33, $30, $11, $33, $01, $10, $10, $11, $11, $10, $03, $03, $01, $11, $03, $05
                dc.b    $3F, $00, $01, $00, $10, $03, $01, $10, $02, $01, $10, $03, $01, $01, $04, $06
                dc.b    $EF, $11, $00, $01, $00, $11, $02, $01, $0F, $04       
;=============================================================================== 
; Level Object Layout
; [ Begin ]
;===============================================================================                            
Objects_Layout: ; loc_44000:  
                dc.w    Ghz_1_Objects_Layout-Objects_Layout
                dc.w    Ghz_2_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Mz_1_Objects_Layout-Objects_Layout
                dc.w    Mz_2_Objects_Layout-Objects_Layout
                dc.w    Mz_3_Objects_Layout-Objects_Layout
                dc.w    Mz_3_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Htz_1_Objects_Layout-Objects_Layout
                dc.w    Htz_2_Objects_Layout-Objects_Layout
                dc.w    Hpz_1_Objects_Layout-Objects_Layout
                dc.w    Hpz_2_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    OOz_1_Objects_Layout-Objects_Layout
                dc.w    OOz_2_Objects_Layout-Objects_Layout
                dc.w    Dhz_1_Objects_Layout-Objects_Layout
                dc.w    Dhz_2_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Cpz_1_Objects_Layout-Objects_Layout
                dc.w    Cpz_2_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Nghz_1_Objects_Layout-Objects_Layout
                dc.w    Nghz_2_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    $FFFF, $0000, $0000 ; The Game will crash if these bytes are missing
Ghz_1_Objects_Layout:  ; loc_4404A:
                incbin  'data\ghz\obj_act1.dat'
Ghz_2_Objects_Layout:  ; loc_442C6:
                incbin  'data\ghz\obj_act2.dat'
Mz_1_Objects_Layout:   ; loc_445C0:
                incbin  'data\mz\obj_act1.dat'
Mz_2_Objects_Layout:   ; loc_4488A:
                incbin  'data\mz\obj_act2.dat'
Mz_3_Objects_Layout:   ; loc_44B30:
                incbin  'data\mz\obj_act3.dat'
Htz_1_Objects_Layout:  ; loc_44EFC:
                incbin  'data\htz\obj_act1.dat'
Htz_2_Objects_Layout:  ; loc_45130:
                incbin  'data\htz\obj_act2.dat'
Hpz_1_Objects_Layout:  ; loc_4554A:
                incbin  'data\hpz\obj_act1.dat'
Hpz_2_Objects_Layout:  ; loc_45652:
                dc.w    $FFFF, $0000, $0000 
                dc.w    $FFFF, $0000, $0000 
OOz_1_Objects_Layout:  ; loc_4565E: 
                incbin  'data\ooz\obj_act1.dat'
OOz_2_Objects_Layout:  ; loc_457C0:
                incbin  'data\ooz\obj_act2.dat'
Dhz_1_Objects_Layout:  ; loc_459AC:
                incbin  'data\dhz\obj_act1.dat'
Dhz_2_Objects_Layout:  ; loc_45A24:
                dc.w    $FFFF, $0000, $0000 
Cpz_1_Objects_Layout:  ; loc_45A2A:
                incbin  'data\cpz\obj_act1.dat'
Cpz_2_Objects_Layout:  ; loc_45CC4:
                incbin  'data\cpz\obj_act2.dat'
Nghz_1_Objects_Layout: ; loc_4605A:
                incbin  'data\nghz\obj_act1.dat'
Nghz_2_Objects_Layout: ; loc_46216:
                incbin  'data\nghz\obj_act2.dat'
Null_Objects_Layout:   ; loc_46348:
                dc.w    $FFFF, $0000, $0000 
;=============================================================================== 
; Level Object Layout
; [ End ]
;===============================================================================                            
Unknow_Data_0x04634E: ; loc_4634E:
                dc.b    $00, $00, $77, $07, $70, $01, $11, $17, $07, $70, $70, $11, $00, $07, $07, $11
                dc.b    $11, $01, $11, $01, $01, $10, $11, $00, $01, $16, $77, $00, $16, $61, $11, $77
                dc.b    $61, $01, $16, $01, $11, $17, $70, $10, $77, $71, $11, $76, $11, $11, $11, $11
                dc.b    $11, $10, $00, $67, $70, $70, $02, $21, $07, $07, $00, $10, $00, $07, $00, $60
                dc.b    $07, $71, $07, $07, $70, $11, $71, $11, $11, $17, $00, $11, $10, $70, $10, $00
                dc.b    $11, $01, $0A, $01, $17, $10, $A0, $00, $70, $02, $07, $11, $00, $0A, $00, $7C
                dc.b    $BB, $A0, $05, $01, $A0, $13, $01, $0A, $03, $01, $0A, $02, $01, $AA, $12, $01
                dc.b    $0A, $08, $05, $01, $AB, $BB, $C6, $66, $08, $01, $10, $04, $03, $07, $00, $10
                dc.b    $0C, $24, $66, $70, $77, $76, $00, $07, $70, $11, $00, $17, $77, $10, $00, $11
                dc.b    $07, $01, $00, $01, $70, $11, $00, $10, $77, $01, $00, $10, $70, $77, $00, $11
                dc.b    $11, $11, $DD, $DD, $76, $11, $0A, $01, $01, $03, $02, $A0, $70, $04, $01, $A0
                dc.b    $03, $01, $A0, $03, $03, $DD, $CC, $C1, $02, $02, $10, $77, $02, $02, $10, $07
                dc.b    $03, $0A, $70, $01, $00, $01, $07, $00, $10, $11, $07, $70, $02, $35, $17, $10
                dc.b    $00, $01, $01, $00, $06, $76, $77, $7D, $01, $11, $00, $0A, $01, $10, $00, $1A
                dc.b    $01, $00, $A0, $BA, $01, $0A, $AA, $AA, $17, $1A, $0B, $0A, $00, $76, $67, $66
                dc.b    $01, $11, $11, $11, $DD, $DD, $71, $6D, $00, $0A, $00, $7A, $00, $0A, $07, $0A
                dc.b    $00, $0A, $01, $02, $01, $A0, $02, $08, $AA, $A0, $00, $70, $00, $A0, $01, $0A
                dc.b    $02, $06, $01, $00, $66, $66, $10, $BA, $02, $03, $70, $00, $70, $03, $01, $07
                dc.b    $04, $01, $70, $06, $02, $01, $07, $02, $01, $10, $03, $04, $AA, $BB, $77, $DD
                dc.b    $07, $02, $01, $0A, $02, $02, $01, $0A, $02, $04, $01, $00, $0A, $70, $04, $09
                dc.b    $01, $A0, $00, $10, $01, $5D, $C1, $77, $7C, $03, $01, $A0, $03, $01, $AA, $03
                dc.b    $02, $0A, $20, $02, $02, $0A, $01, $09, $06, $10, $00, $DC, $CB, $BA, $AA, $03
                dc.b    $01, $0A, $02, $01, $0A, $03, $01, $0A, $04, $09, $A1, $A0, $00, $0A, $17, $0A
                dc.b    $AA, $A1, $71, $02, $06, $17, $11, $01, $66, $61, $01, $03, $13, $16, $10, $01
                dc.b    $01, $71, $07, $10, $17, $1A, $71, $16, $6B, $AA, $11, $71, $A0, $0A, $17, $1A
                dc.b    $02, $02, $71, $AA, $02, $0D, $71, $A0, $00, $0A, $61, $AA, $A0, $0A, $AA, $00
                dc.b    $A0, $00, $A0, $03, $01, $A0, $0F, $06, $AA, $AB, $BB, $CD, $00, $01, $02, $04
                dc.b    $A0, $01, $07, $11, $04, $04, $0A, $01, $01, $17, $02, $01, $70, $02, $03, $01
                dc.b    $00, $70, $02, $06, $10, $00, $CB, $11, $7D, $BB, $04, $05, $70, $10, $A0, $00
                dc.b    $01, $11, $05, $A0, $00, $BA, $AA, $A0, $05, $01, $A0, $03, $01, $A0, $05, $01
                dc.b    $0A, $03, $01, $01, $03, $01, $0B, $07, $02, $AA, $AB, $05, $01, $AA, $03, $03
                dc.b    $A0, $00, $10, $04, $02, $A0, $A0, $02, $05, $A0, $00, $01, $00, $0A, $03, $06
                dc.b    $B1, $16, $67, $66, $00, $70, $0C, $03, $01, $00, $07, $0B, $07, $61, $10, $06
                dc.b    $67, $00, $10, $77, $02, $02, $10, $77, $02, $02, $10, $77, $02, $02, $01, $77
                dc.b    $02, $03, $11, $70, $11, $02, $0A, $70, $11, $00, $10, $77, $00, $DD, $CC, $B6
                dc.b    $06, $11, $01, $0A, $03, $01, $0A, $06, $04, $CD, $DC, $C1, $77, $02, $06, $17
                dc.b    $70, $00, $01, $10, $07, $02, $02, $10, $77, $02, $03, $10, $00, $01, $02, $01
                dc.b    $70, $02, $02, $10, $70, $02, $26, $10, $70, $76, $77, $66, $11, $11, $00, $A0
                dc.b    $00, $11, $0A, $AA, $00, $01, $0A, $AA, $00, $01, $00, $AA, $00, $01, $00, $AA
                dc.b    $A0, $00, $10, $AA, $A0, $00, $10, $0A, $00, $11, $00, $10, $11, $02, $0D, $11
                dc.b    $00, $11, $01, $11, $00, $01, $11, $11, $00, $01, $01, $10, $05, $01, $70, $02
                dc.b    $01, $07, $04, $04, $61, $10, $01, $BC, $09, $09, $10, $0A, $A0, $00, $10, $10
                dc.b    $A0, $10, $10, $02, $01, $10, $03, $01, $01, $02, $05, $0A, $AB, $B0, $7D, $D7
                dc.b    $05, $03, $07, $00, $01, $05, $03, $A1, $00, $01, $03, $1A, $01, $00, $10, $00
                dc.b    $11, $00, $70, $00, $12, $DC, $06, $76, $75, $00, $07, $10, $10, $00, $07, $00
                dc.b    $11, $00, $07, $00, $10, $01, $03, $04, $20, $00, $70, $07, $02, $1C, $07, $71
                dc.b    $00, $10, $00, $11, $57, $77, $01, $17, $00, $17, $11, $71, $01, $71, $17, $1A
                dc.b    $17, $11, $71, $00, $71, $17, $10, $A0, $11, $71, $02, $02, $17, $10, $02, $09
                dc.b    $71, $00, $10, $A0, $1A, $AA, $BA, $A0, $A0, $1F, $01, $A0, $03, $01, $A0, $16
                dc.b    $09, $0A, $00, $AB, $DC, $B1, $00, $07, $00, $70, $03, $02, $70, $0A, $02, $03
                dc.b    $70, $00, $10, $02, $01, $A0, $06, $01, $07, $04, $04, $10, $16, $7C, $CC, $02
                dc.b    $01, $0A, $04, $01, $AA, $04, $01, $01, $04, $01, $01, $03, $01, $11, $03, $07
                dc.b    $01, $10, $00, $BB, $BB, $BA, $AA, $03, $01, $0A, $02, $05, $0A, $A0, $AA, $AA
                dc.b    $A0, $0C, $08, $10, $00, $01, $01, $01, $00, $01, $10, $06, $01, $01, $05, $09
                dc.b    $77, $00, $10, $00, $70, $11, $00, $07, $70, $02, $01, $07, $03, $07, $77, $00
                dc.b    $07, $77, $01, $11, $70, $05, $01, $10, $0E, $01, $01, $06, $24, $11, $11, $16
                dc.b    $66, $00, $10, $07, $01, $00, $10, $07, $01, $00, $11, $77, $01, $00, $01, $77
                dc.b    $71, $00, $10, $07, $77, $00, $11, $00, $70, $00, $10, $11, $11, $DD, $DD, $D7
                dc.b    $61, $12, $01, $A0, $03, $01, $01, $04, $05, $70, $CC, $DD, $77, $07, $03, $01
                dc.b    $77, $03, $01, $77, $07, $01, $77, $03, $02, $77, $01, $02, $01, $07, $02, $09
                dc.b    $01, $11, $77, $67, $7D, $77, $01, $10, $AA, $02, $02, $10, $AA, $02, $17, $10
                dc.b    $0A, $00, $01, $10, $01, $01, $01, $01, $10, $10, $77, $77, $77, $77, $11, $11
                dc.b    $11, $11, $16, $66, $66, $61, $0C, $01, $10, $02, $01, $77, $04, $01, $07, $02
                dc.b    $01, $01, $02, $0A, $70, $00, $23, $66, $10, $6A, $00, $01, $06, $1A, $02, $06
                dc.b    $61, $66, $02, $17, $17, $11, $02, $06, $01, $71, $00, $01, $0A, $B7, $03, $07
                dc.b    $0B, $00, $70, $A0, $00, $FD, $BA, $06, $01, $A0, $03, $01, $6A, $03, $14, $16
                dc.b    $A0, $0A, $00, $11, $6A, $0A, $00, $71, $16, $A0, $0A, $B7, $11, $1A, $0A, $F4
                dc.b    $10, $67, $CB, $02, $06, $01, $70, $00, $20, $17, $06, $02, $1C, $70, $66, $00
                dc.b    $21, $06, $61, $02, $17, $66, $10, $00, $77, $11, $0A, $21, $01, $70, $0A, $67
                dc.b    $77, $BA, $A0, $70, $6A, $00, $0A, $71, $A0, $02, $01, $1A, $03, $01, $A0, $04
                dc.b    $01, $A0, $03, $01, $A0, $04, $01, $0A, $03, $01, $0A, $05, $01, $A0, $03, $01
                dc.b    $A0, $02, $01, $AA, $02, $01, $AA, $02, $14, $0A, $00, $11, $00, $A0, $11, $07
                dc.b    $0A, $01, $07, $71, $0A, $AB, $B6, $67, $00, $AA, $A0, $00, $AA, $02, $12, $10
                dc.b    $00, $10, $11, $01, $11, $01, $00, $07, $07, $77, $77, $61, $70, $11, $11, $00
                dc.b    $11, $03, $09, $77, $61, $01, $11, $01, $00, $01, $00, $10, $04, $01, $70, $02
                dc.b    $05, $77, $11, $00, $10, $11, $05, $01, $11, $02, $09, $16, $77, $01, $16, $70
                dc.b    $00, $66, $00, $70, $02, $02, $07, $70, $03, $01, $77, $03, $01, $07, $03, $03
                dc.b    $07, $70, $70, $02, $02, $07, $77, $03, $06, $70, $67, $77, $77, $77, $10, $0D
                dc.b    $0B, $70, $77, $77, $07, $77, $70, $70, $70, $70, $70, $70, $03, $01, $77, $04
                dc.b    $01, $70, $02, $02, $07, $70, $02, $01, $77, $03, $01, $07, $02, $01, $01, $03
                dc.b    $01, $01, $09, $05, $01, $11, $11, $00, $10, $0A, $01, $01, $07, $01, $10, $06
                dc.b    $1B, $01, $01, $01, $11, $60, $01, $11, $01, $70, $00, $11, $10, $11, $01, $01
                dc.b    $01, $67, $11, $01, $6C, $BA, $10, $66, $B0, $00, $16, $BA, $02, $01, $6B, $03
                dc.b    $06, $AA, $00, $AB, $CC, $0A, $0A, $04, $01, $10, $03, $01, $07, $0A, $01, $A0
                dc.b    $03, $07, $01, $00, $01, $CD, $76, $70, $01, $02, $02, $10, $70, $02, $02, $10
                dc.b    $70, $04, $04, $10, $00, $10, $70, $02, $06, $10, $70, $00, $01, $10, $70, $02
                dc.b    $0A, $10, $70, $16, $66, $6C, $6C, $00, $10, $0A, $AA, $02, $1C, $0A, $AA, $00
                dc.b    $10, $0A, $AA, $00, $10, $0A, $AA, $00, $10, $0A, $AA, $00, $10, $0A, $AA, $01
                dc.b    $10, $0A, $AA, $16, $71, $66, $BA, $00, $07, $05, $01, $10, $02, $02, $07, $A0
                dc.b    $02, $01, $01, $03, $01, $7A, $03, $01, $10, $02, $0A, $07, $A0, $0A, $00, $71
                dc.b    $0A, $0A, $00, $10, $0A, $06, $01, $0A, $05, $01, $A0, $03, $01, $A0, $03, $03
                dc.b    $0A, $00, $10, $02, $08, $D6, $0D, $CB, $0A, $00, $01, $17, $A0, $02, $03, $01
                dc.b    $10, $01, $02, $0A, $7B, $A0, $70, $02, $17, $00, $01, $20, $00, $07, $02, $0F
                dc.b    $21, $10, $12, $00, $02, $67, $13, $45, $5F, $10, $17, $00, $0A, $77, $10, $02
                dc.b    $02, $71, $70, $04, $03, $01, $00, $11, $02, $01, $11, $05, $01, $70, $02, $05
                dc.b    $DC, $CB, $BB, $B1, $A0, $02, $09, $A0, $AA, $00, $AA, $01, $A0, $AA, $00, $17
                dc.b    $02, $20, $11, $71, $10, $11, $07, $11, $01, $00, $71, $17, $00, $07, $11, $71
                dc.b    $11, $00, $01, $67, $16, $61, $01, $10, $71, $01, $10, $01, $11, $10, $77, $77
                dc.b    $10, $77, $02, $02, $76, $11, $02, $03, $10, $00, $11, $04, $06, $10, $77, $77
                dc.b    $77, $76, $10, $03, $10, $01, $01, $00, $01, $70, $11, $00, $17, $07, $01, $01
                dc.b    $71, $00, $01, $07, $10, $02, $02, $11, $0A, $02, $0F, $70, $00, $67, $76, $10
                dc.b    $1D, $17, $1B, $AA, $10, $61, $A0, $00, $A6, $0A, $02, $02, $01, $A0, $02, $01
                dc.b    $0A, $07, $01, $A0, $03, $06, $A0, $CC, $CC, $CC, $CC, $10, $03, $01, $01, $03
                dc.b    $02, $60, $10, $02, $13, $16, $01, $00, $10, $AB, $71, $11, $11, $00, $A6, $11
                dc.b    $10, $00, $0A, $C6, $11, $CC, $CC, $C6, $11, $09, $10, $10, $01, $00, $01, $01
                dc.b    $10, $11, $11, $04, $03, $11, $11, $10, $03, $0B, $10, $00, $01, $01, $00, $01
                dc.b    $01, $10, $00, $01, $11, $02, $01, $11, $0A, $01, $01, $03, $01, $66, $02, $02
                dc.b    $06, $1A, $02, $05, $61, $A0, $00, $06, $1A, $02, $13, $61, $A0, $00, $01, $1A
                dc.b    $00, $0B, $16, $AA, $0A, $B6, $7A, $0A, $A1, $60, $B0, $00, $AB, $DD, $05, $14
                dc.b    $0A, $AB, $BB, $0A, $B1, $67, $77, $A1, $77, $11, $11, $66, $11, $01, $11, $10
                dc.b    $11, $10, $00, $11, $03, $06, $C6, $67, $00, $01, $00, $10, $02, $05, $A0, $07
                dc.b    $00, $10, $01, $04, $04, $70, $01, $00, $10, $03, $03, $07, $00, $10, $05, $06
                dc.b    $61, $11, $11, $11, $00, $01, $03, $3D, $11, $00, $70, $00, $11, $07, $71, $00
                dc.b    $10, $07, $70, $01, $10, $70, $70, $01, $10, $70, $10, $00, $11, $11, $00, $16
                dc.b    $77, $7D, $7D, $01, $00, $AA, $AA, $01, $00, $AA, $BA, $01, $00, $AA, $BA, $01
                dc.b    $0A, $AA, $AA, $17, $1A, $0B, $0A, $00, $76, $67, $66, $01, $11, $11, $11, $01
                dc.b    $17, $DD, $DD, $10, $7A, $02, $02, $07, $10, $02, $02, $01, $A0, $02, $01, $7A
                dc.b    $03, $02, $10, $0A, $02, $02, $A0, $0A, $06, $08, $DC, $B0, $00, $0A, $21, $0A
                dc.b    $00, $A0, $03, $03, $01, $00, $70, $05, $01, $07, $02, $10, $A0, $10, $02, $11
                dc.b    $00, $01, $00, $07, $00, $70, $43, $03, $5F, $32, $71, $20, $06, $01, $12, $0B
                dc.b    $01, $20, $07, $0F, $23, $33, $34, $44, $01, $00, $07, $77, $00, $10, $00, $11
                dc.b    $00, $01, $11, $03, $02, $01, $16, $02, $02, $10, $70, $02, $17, $10, $70, $10
                dc.b    $00, $10, $70, $71, $10, $07, $11, $71, $11, $71, $AA, $10, $17, $1A, $00, $16
                dc.b    $61, $A0, $00, $71, $03, $02, $10, $0A, $02, $01, $10, $03, $02, $10, $0A, $02
                dc.b    $08, $AA, $00, $AA, $AB, $00, $AA, $00, $01, $02, $01, $A0, $07, $01, $0A, $06
                dc.b    $01, $A0, $03, $09, $A0, $0A, $01, $BB, $DC, $B0, $AB, $00, $07, $06, $0D, $17
                dc.b    $00, $0A, $00, $01, $10, $0A, $00, $10, $70, $1A, $00, $70, $03, $01, $11, $03
                dc.b    $03, $21, $71, $A0, $06, $06, $01, $A0, $00, $02, $17, $1A, $02, $07, $21, $66
                dc.b    $BA, $00, $02, $21, $66, $02, $02, $02, $21, $03, $05, $02, $FF, $FF, $FF, $FF
                dc.b    $04, $07, $A0, $00, $0A, $00, $A0, $00, $0A, $05, $01, $BA, $03, $02, $66, $BA
                dc.b    $02, $17, $21, $66, $BA, $00, $41, $10, $76, $DD, $B6, $77, $70, $11, $0A, $11
                dc.b    $07, $70, $00, $A0, $10, $07, $00, $0A, $01, $03, $02, $A0, $10, $02, $02, $0A
                dc.b    $01, $03, $06, $A0, $DD, $DD, $DD, $D1, $10, $02, $02, $11, $01, $02, $08, $6A
                dc.b    $00, $10, $01, $A0, $70, $00, $07, $03, $05, $11, $00, $07, $00, $7A, $03, $1B
                dc.b    $10, $0A, $BB, $C7, $6D, $D6, $00, $A1, $10, $10, $0A, $16, $01, $00, $01, $60
                dc.b    $10, $77, $A7, $00, $07, $00, $01, $01, $70, $01, $10, $02, $0E, $10, $70, $17
                dc.b    $10, $11, $01, $07, $67, $77, $00, $77, $77, $70, $77, $02, $01, $07, $04, $05
                dc.b    $01, $11, $11, $01, $11, $02, $02, $10, $01, $03, $01, $10, $03, $06, $76, $67
                dc.b    $77, $77, $00, $10, $02, $01, $01, $02, $02, $01, $10, $02, $01, $01, $02, $02
                dc.b    $01, $01, $02, $02, $01, $10, $02, $01, $01, $02, $0D, $01, $00, $07, $10, $10
                dc.b    $60, $70, $11, $70, $77, $01, $00, $77, $02, $16, $10, $77, $70, $10, $00, $77
                dc.b    $01, $00, $07, $00, $01, $00, $07, $70, $01, $00, $07, $01, $10, $00, $61, $10
                dc.b    $03, $02, $A0, $A0, $02, $25, $AA, $AA, $00, $0A, $0A, $AA, $00, $0A, $0A, $AA
                dc.b    $00, $0A, $AA, $AA, $A0, $AA, $AA, $AA, $A0, $A0, $AA, $AA, $00, $AA, $0A, $00
                dc.b    $AA, $0A, $00, $AA, $00, $0A, $0A, $A0, $00, $0A, $A0, $02, $02, $A0, $0A, $03
                dc.b    $01, $A0, $02, $01, $1A, $02, $02, $A0, $B0, $02, $08, $A0, $FF, $DC, $B0, $CD
                dc.b    $00, $21, $0A, $03, $01, $70, $02, $03, $02, $11, $12, $02, $01, $07, $03, $02
                dc.b    $21, $20, $02, $01, $02, $08, $01, $20, $02, $01, $02, $03, $01, $27, $02, $02
                dc.b    $02, $6A, $03, $01, $10, $02, $05, $26, $A0, $72, $00, $01, $02, $08, $02, $1A
                dc.b    $00, $A0, $02, $3F, $FF, $F2, $0F, $01, $02, $07, $01, $20, $03, $25, $01, $45
                dc.b    $5F, $5F, $DC, $10, $0A, $A0, $00, $10, $10, $AA, $00, $01, $10, $00, $AA, $70
                dc.b    $10, $10, $00, $16, $71, $01, $16, $60, $16, $66, $61, $17, $76, $66, $66, $AA
                dc.b    $AB, $B1, $07, $02, $1F, $A1, $71, $00, $0A, $17, $16, $AA, $A1, $71, $10, $01
                dc.b    $66, $11, $70, $76, $11, $17, $00, $11, $67, $70, $01, $77, $00, $11, $10, $60
                dc.b    $01, $0A, $AA, $60, $02, $05, $0A, $00, $10, $A0, $0A, $04, $02, $01, $0A, $02
                dc.b    $02, $10, $A0, $03, $01, $A0, $02, $02, $AA, $A0, $02, $1C, $0A, $DD, $DD, $DF
                dc.b    $01, $00, $01, $02, $07, $00, $01, $10, $A1, $00, $01, $00, $10, $00, $01, $00
                dc.b    $70, $00, $01, $00, $10, $00, $10, $10, $02, $05, $10, $10, $00, $01, $10, $02
                dc.b    $1F, $01, $00, $12, $00, $01, $01, $12, $00, $11, $01, $10, $00, $11, $10, $02
                dc.b    $00, $10, $01, $20, $01, $11, $02, $00, $01, $02, $20, $00, $22, $20, $00, $02
                dc.b    $13, $01, $02, $08, $0C, $44, $23, $5F, $F4, $10, $07, $A0, $A0, $00, $01, $A0
                dc.b    $17, $02, $04, $A0, $01, $01, $1A, $04, $0D, $0A, $70, $00, $70, $00, $10, $A0
                dc.b    $10, $01, $00, $D7, $1A, $C6, $02, $02, $77, $10, $02, $01, $10, $05, $01, $11
                dc.b    $02, $01, $11, $02, $01, $01, $03, $0D, $10, $00, $07, $01, $00, $07, $70, $00
                dc.b    $76, $61, $11, $01, $71, $03, $06, $16, $10, $00, $11, $10, $61, $02, $03, $01
                dc.b    $06, $10, $02, $08, $10, $70, $77, $00, $01, $01, $00, $77, $02, $10, $66, $66
                dc.b    $00, $07, $00, $10, $00, $70, $01, $11, $07, $77, $01, $10, $07, $70, $02, $06
                dc.b    $07, $70, $01, $00, $77, $77, $02, $35, $70, $70, $01, $11, $11, $11, $66, $76
                dc.b    $77, $77, $00, $11, $00, $0A, $00, $11, $00, $0A, $01, $11, $00, $0A, $01, $10
                dc.b    $00, $0A, $00, $11, $11, $11, $77, $77, $77, $77, $11, $11, $11, $11, $DD, $7D
                dc.b    $7D, $77, $A0, $AA, $AA, $00, $AA, $AA, $AA, $00, $A0, $AA, $0A, $02, $13, $A0
                dc.b    $01, $01, $11, $11, $10, $10, $77, $77, $77, $77, $11, $11, $11, $11, $DD, $DD
                dc.b    $DD, $DD, $0D, $07, $0A, $00, $0A, $00, $0A, $00, $A0, $02, $02, $0A, $01, $02
                dc.b    $01, $A0, $03, $02, $A0, $67, $02, $03, $0A, $70, $A0, $02, $02, $10, $A0, $02
                dc.b    $01, $A7, $02, $02, $0A, $01, $02, $02, $0A, $0A, $08, $02, $CD, $B0, $02, $02
                dc.b    $71, $7B, $02, $03, $77, $77, $A0, $02, $10, $07, $6A, $A0, $77, $00, $76, $1A
                dc.b    $10, $07, $07, $71, $00, $77, $00, $70, $A6, $03, $04, $0A, $CB, $BB, $BB, $10
                dc.b    $01, $AA, $03, $02, $61, $A0, $02, $02, $70, $0A, $02, $05, $46, $77, $DD, $DC
                dc.b    $02, $02, $03, $01, $00, $20, $03, $01, $02, $04, $01, $20, $03, $02, $02, $20
                dc.b    $03, $01, $02, $04, $05, $23, $33, $44, $45, $10, $02, $01, $01, $02, $07, $70
                dc.b    $00, $10, $00, $07, $00, $01, $02, $16, $70, $00, $11, $00, $07, $22, $00, $11
                dc.b    $10, $00, $22, $22, $01, $45, $55, $FF, $DD, $10, $00, $A0, $00, $10, $04, $05
                dc.b    $10, $0A, $00, $01, $01, $02, $16, $70, $00, $10, $A0, $07, $70, $01, $0A, $11
                dc.b    $16, $66, $66, $DD, $DD, $DD, $C6, $00, $0A, $00, $0A, $00, $0A, $0E, $01, $A0
                dc.b    $03, $08, $6C, $CB, $BB, $BB, $C6, $CB, $BB, $BB, $04, $01, $0A, $09, $01, $A0
                dc.b    $03, $01, $A0, $05, $08, $BB, $BB, $BB, $BB, $BB, $BB, $BB, $BB, $02, $01, $0A
                dc.b    $03, $01, $0A, $02, $01, $A0, $03, $03, $A0, $00, $0A, $02, $0E, $0A, $A0, $00
                dc.b    $AA, $A0, $11, $BC, $66, $77, $66, $43, $33, $22, $20, $0B, $01, $21, $06, $02
                dc.b    $02, $17, $03, $01, $01, $02, $11, $21, $6A, $23, $4F, $DC, $A0, $21, $70, $00
                dc.b    $A0, $00, $0B, $00, $A0, $02, $17, $A0, $02, $07, $01, $1A, $0A, $00, $20, $70
                dc.b    $AA, $02, $0A, $11, $0A, $00, $02, $07, $10, $FF, $FF, $DC, $BA, $04, $01, $A0
                dc.b    $02, $02, $A0, $A0, $02, $05, $10, $A0, $00, $0A, $0A, $0C, $14, $5D, $BA, $A0
                dc.b    $BA, $00, $71, $10, $AA, $02, $17, $71, $10, $00, $21, $17, $76, $00, $02, $21
                dc.b    $11, $02, $02, $02, $20, $03, $01, $02, $04, $04, $FF, $FF, $FF, $FF, $04, $02
                dc.b    $AA, $A0, $02, $0C, $11, $1B, $AA, $AA, $66, $77, $66, $66, $00, $11, $11, $11
                dc.b    $03, $02, $01, $20, $03, $04, $FD, $DD, $DD, $DC, $09, $01, $0A, $03, $01, $0A
                dc.b    $05, $01, $0A, $03, $01, $A0, $02, $06, $0A, $01, $00, $0A, $A0, $10, $02, $01
                dc.b    $01, $02, $1B, $A0, $10, $07, $0A, $01, $00, $70, $A0, $10, $07, $01, $01, $00
                dc.b    $70, $10, $10, $77, $01, $00, $07, $00, $10, $00, $BC, $CC, $DD, $DD, $04, $01
                dc.b    $0A, $03, $01, $0A, $03, $09, $A0, $00, $0A, $00, $10, $00, $0A, $00, $7B, $03
                dc.b    $01, $17, $03, $12, $D6, $CC, $BA, $BA, $00, $70, $01, $11, $0A, $10, $01, $11
                dc.b    $00, $07, $71, $10, $00, $A1, $04, $01, $07, $02, $02, $0A, $70, $04, $0D, $10
                dc.b    $AB, $BB, $06, $BA, $01, $01, $01, $BA, $00, $10, $11, $01, $03, $0F, $11, $00
                dc.b    $A0, $00, $0A, $0A, $AA, $0A, $AA, $0A, $AA, $A0, $0A, $A0, $AA, $02, $02, $0A
                dc.b    $A0, $06, $01, $AA, $03, $02, $11, $A0, $02, $03, $BB, $0B, $A0, $02, $02, $AB
                dc.b    $A0, $09, $06, $CC, $CD, $DD, $DD, $00, $01, $02, $02, $10, $01, $02, $02, $10
                dc.b    $11, $03, $02, $11, $10, $02, $05, $11, $10, $00, $11, $11, $03, $07, $10, $02
                dc.b    $02, $DD, $DD, $74, $DF, $02, $01, $01, $06, $02, $0A, $0A, $07, $01, $A0, $02
                dc.b    $01, $A0, $03, $01, $0A, $02, $04, $FF, $5F, $FF, $FF, $09, $0F, $02, $22, $20
                dc.b    $00, $21, $11, $12, $02, $17, $66, $61, $00, $71, $AA, $A6, $03, $05, $0A, $00
                dc.b    $0A, $00, $0B, $03, $01, $01, $03, $04, $A0, $00, $0A, $A0, $02, $13, $71, $0A
                dc.b    $01, $20, $17, $11, $17, $61, $01, $66, $61, $BC, $77, $77, $77, $DF, $55, $55
                dc.b    $55, $04, $01, $12, $03, $02, $71, $20, $03, $12, $12, $02, $22, $61, $10, $21
                dc.b    $66, $11, $17, $7C, $BB, $6C, $CA, $A0, $00, $5F, $FF, $DA, $02, $02, $02, $6A
                dc.b    $02, $09, $26, $10, $00, $22, $61, $A0, $00, $16, $BA, $02, $01, $6B, $02, $02
                dc.b    $0A, $A0, $02, $01, $A1, $02, $05, $AB, $11, $FF, $FF, $76, $04, $01, $71, $02
                dc.b    $01, $20, $04, $01, $17, $06, $01, $02, $04, $01, $01, $04, $04, $5F, $FF, $F5
                dc.b    $67, $07, $01, $0A, $02, $04, $01, $10, $00, $0A, $02, $02, $A0, $0A, $04, $02
                dc.b    $A0, $A0, $06, $01, $A1, $03, $13, $0A, $0A, $00, $0A, $AB, $B6, $AB, $B6, $66
                dc.b    $60, $67, $61, $11, $17, $11, $11, $67, $70, $11, $02, $1D, $01, $00, $07, $00
                dc.b    $01, $CC, $60, $70, $1B, $BC, $67, $71, $A0, $70, $07, $1A, $00, $07, $61, $00
                dc.b    $0A, $71, $00, $A0, $0A, $10, $00, $A0, $A0, $02, $02, $A0, $A0, $02, $1C, $A0
                dc.b    $00, $AA, $AA, $0A, $BB, $00, $0A, $01, $07, $00, $A0, $10, $70, $0A, $01, $07
                dc.b    $01, $A0, $17, $70, $10, $11, $70, $11, $00, $77, $01, $02, $02, $11, $10, $02
                dc.b    $02, $11, $10, $03, $01, $10, $02, $01, $11, $0D, $01, $01, $02, $0C, $01, $01
                dc.b    $10, $00, $01, $00, $10, $D0, $17, $DD, $DD, $A0, $03, $14, $10, $01, $A0, $00
                dc.b    $06, $17, $1A, $00, $77, $11, $66, $BA, $00, $01, $11, $66, $11, $11, $10, $01
                dc.b    $04, $04, $DD, $DD, $DD, $DD, $04, $07, $A0, $00, $0A, $00, $A0, $00, $0A, $05
                dc.b    $01, $BA, $03, $02, $66, $BA, $02, $03, $01, $66, $BA, $02, $03, $0A, $DF, $55
                dc.b    $02, $04, $03, $33, $11, $1B, $03, $12, $01, $AB, $BB, $77, $77, $10, $16, $00
                dc.b    $06, $16, $6B, $11, $61, $71, $A0, $AA, $07, $1A, $02, $0A, $DB, $A0, $00, $02
                dc.b    $22, $22, $20, $00, $11, $11, $02, $02, $0D, $D0, $06, $02, $0D, $D0, $02, $07
                dc.b    $11, $11, $00, $02, $22, $22, $20, $04, $07, $02, $22, $22, $20, $00, $11, $11
                dc.b    $02, $02, $0D, $D0, $06, $02, $0D, $D0, $02, $07, $11, $11, $00, $02, $22, $22
                dc.b    $20, $04, $07, $02, $22, $22, $20, $00, $11, $11, $02, $02, $0D, $D0, $06, $02
                dc.b    $0D, $D0, $02, $17, $11, $11, $00, $02, $22, $22, $20, $DD, $DD, $DD, $DD, $06
                dc.b    $11, $11, $11, $07, $C7, $77, $77, $00, $B1, $11, $11, $02, $02, $0A, $AA, $02
                dc.b    $02, $AA, $AA, $08, $38, $01, $67, $D7, $77, $11, $11, $11, $11, $77, $77, $77
                dc.b    $77, $11, $11, $11, $11, $AA, $AA, $AA, $AA, $AA, $AA, $AA, $AA, $04, $44, $40
                dc.b    $00, $40, $00, $04, $00, $33, $33, $33, $77, $11, $11, $11, $11, $77, $77, $77
                dc.b    $77, $11, $11, $11, $11, $AA, $AA, $AA, $AA, $AA, $AA, $AA, $AA, $03, $01, $44
                dc.b    $02, $0B, $04, $00, $77, $77, $73, $33, $01, $11, $11, $11, $10, $03, $05, $07
                dc.b    $77, $77, $77, $70, $03, $04, $01, $11, $11, $11, $04, $0C, $0A, $AA, $AA, $AA
                dc.b    $6D, $DD, $DD, $DD, $11, $11, $11, $11, $04, $04, $77, $77, $77, $77, $04, $04
                dc.b    $11, $11, $11, $11, $04, $04, $AA, $AA, $AA, $AA, $04, $07, $02, $22, $22, $20
                dc.b    $00, $11, $11, $02, $02, $0D, $D0, $06, $02, $0D, $D0, $02, $07, $11, $11, $00
                dc.b    $02, $22, $22, $20, $07, $01, $A0, $03, $01, $A0, $03, $01, $A0, $03, $01, $A0
                dc.b    $0E, $01, $A0, $03, $01, $A0, $13, $01, $A0, $03, $39, $A0, $00, $AB, $AB, $CD
                dc.b    $DF, $01, $10, $71, $12, $01, $10, $77, $10, $11, $10, $76, $10, $11, $10, $71
                dc.b    $10, $01, $10, $01, $00, $01, $07, $71, $02, $10, $00, $70, $02, $66, $61, $13
                dc.b    $22, $11, $10, $12, $00, $70, $71, $10, $20, $67, $77, $01, $00, $70, $77, $11
                dc.b    $00, $10, $00, $11, $02, $0B, $71, $11, $12, $07, $71, $11, $10, $43, $43, $23
                dc.b    $22, $07, $01, $02, $02, $02, $02, $2B, $02, $23, $2B, $B3, $00, $02, $B3, $35
                dc.b    $00, $0B, $30, $55, $00, $20, $00, $50, $00, $2B, $88, $89, $02, $2B, $BB, $00
                dc.b    $2B, $B3, $33, $B1, $B6, $65, $50, $3B, $60, $55, $50, $03, $05, $03, $24, $50
                dc.b    $00, $33, $30, $00, $03, $0B, $B3, $99, $8B, $A1, $1D, $07, $00, $10, $70, $07
                dc.b    $10, $00, $70, $10, $76, $01, $07, $B1, $70, $60, $11, $3B, $17, $06, $60, $03
                dc.b    $B1, $70, $17, $02, $06, $17, $11, $AA, $BB, $B9, $EE, $02, $04, $03, $33, $00
                dc.b    $2B, $03, $03, $02, $BB, $BB, $03, $13, $16, $00, $02, $16, $6B, $00, $21, $71
                dc.b    $A0, $00, $07, $1A, $00, $A9, $BD, $7D, $D6, $30, $0B, $02, $10, $0B, $B0, $00
                dc.b    $B0, $B1, $66, $11, $B0, $7C, $BB, $67, $1B, $A0, $00, $AB, $C7, $03, $01, $0A
                dc.b    $04, $05, $56, $6D, $DD, $CA, $30, $02, $15, $17, $00, $B0, $10, $11, $0B, $01
                dc.b    $71, $10, $B0, $17, $07, $11, $11, $71, $10, $71, $CC, $BA, $01, $07, $02, $06
                dc.b    $AA, $B1, $DC, $BA, $0A, $A0, $0A, $01, $A0, $06, $0F, $B1, $11, $11, $00, $C7
                dc.b    $77, $77, $01, $11, $11, $11, $33, $33, $33, $77, $04, $07, $40, $00, $04, $00
                dc.b    $04, $44, $40, $05, $10, $11, $11, $11, $11, $77, $77, $77, $77, $11, $11, $11
                dc.b    $11, $77, $77, $73, $33, $06, $01, $04, $04, $01, $44, $04, $14, $11, $11, $11
                dc.b    $11, $77, $77, $77, $77, $11, $11, $11, $11, $6D, $DD, $DD, $DD, $0A, $AA, $AA
                dc.b    $AA, $04, $05, $01, $11, $11, $11, $70, $03, $05, $07, $77, $77, $77, $10, $03
                dc.b    $0C, $01, $11, $11, $11, $DD, $DD, $DD, $DD, $AA, $AA, $AA, $AA, $04, $04, $11
                dc.b    $11, $11, $11, $04, $04, $77, $77, $77, $77, $04, $0F, $11, $11, $11, $11, $DD
                dc.b    $DD, $DD, $DD, $02, $22, $22, $20, $00, $11, $11, $02, $02, $0D, $D0, $06, $02
                dc.b    $0D, $D0, $02, $07, $11, $11, $00, $02, $22, $22, $20, $10, $01, $B0, $03, $01
                dc.b    $B0, $18, $01, $0A, $03, $01, $0A, $08, $01, $0A, $03, $41, $0A, $00, $AB, $BB
                dc.b    $CD, $CD, $01, $07, $71, $00, $01, $07, $70, $10, $01, $07, $70, $10, $01, $07
                dc.b    $71, $00, $10, $07, $00, $12, $77, $71, $10, $20, $11, $10, $00, $22, $66, $11
                dc.b    $10, $10, $00, $01, $01, $10, $07, $71, $01, $10, $07, $77, $01, $10, $70, $77
                dc.b    $10, $00, $77, $70, $11, $02, $70, $11, $12, $20, $11, $02, $20, $01
Unknow_Pallete_0x0474AC:
loc_474AC:
                dc.w    $0000, $0A20, $0666, $0888, $0CAA, $0ECC, $0246, $0008
                dc.w    $000E, $046A, $068C, $08CE, $0E22, $0E62, $0000, $0EEE
                dc.w    $0000, $0A42, $0C64, $0E86, $048A, $08CE, $0046, $0068
                dc.w    $008A, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE
                dc.w    $0000, $044C, $066E, $0AAE, $048A, $08CE, $0E46, $0E68
                dc.w    $0E8A, $04CE, $0A24, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0E22, $0E42, $0E62, $0E82, $0C68, $0848, $0628
                dc.w    $0E88, $0E66, $0E44, $0C22, $0A02, $0602, $0000, $0EEE
                dc.w    $0664, $0444, $0666, $0888, $0444, $0666, $0888, $0444
                dc.w    $0888, $0666, $0222, $0262, $02A4, $04E8, $0000, $0EEE
                dc.w    $0664, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0262, $02A4, $04E8, $0000, $0EEE
                dc.w    $0664, $0C4C, $0C8C, $0CCC, $026A, $048C, $04CC, $0A84
                dc.w    $0EA6, $0AAA, $0222, $0262, $02A4, $04E8, $0000, $0EEE
                dc.w    $0664, $0A2C, $0E4E, $0EAE, $006C, $048C, $00CE, $0E62
                dc.w    $0E84, $0888, $0222, $0262, $02A4, $04E8, $0000, $0EEE
                dc.w    $0664, $080A, $0C4C, $0C8E, $004A, $046C, $00AE, $0C40
                dc.w    $0E84, $0666, $0000, $0262, $02A4, $04E8, $0000, $0EEE
                dc.w    $0622, $0262, $02A4, $04E8, $0400, $0620, $0840, $0A40
                dc.w    $0A40, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE
                dc.w    $0622, $0262, $02A4, $04E8, $0600, $0820, $0A60, $0C82
                dc.w    $0EA4, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE 
Unknow_Data_0x04760C:
loc_4760C:
                dc.b    $40, $00, $00, $2D, $01, $20, $02, $02, $02, $12, $03, $02, $C6, $20, $02, $03
                dc.b    $0B, $72, $20, $02, $06, $AD, $62, $02, $FF, $DC, $61, $02, $02, $01, $66, $02
                dc.b    $06, $07, $B1, $00, $02, $6A, $A0, $02, $01, $10, $02, $01, $21, $06, $09, $20
                dc.b    $00, $1A, $00, $12, $66, $1A, $AB, $16, $03, $01, $10, $03, $02, $10, $01, $03
                dc.b    $01, $01, $02, $52, $07, $01, $6D, $DD, $10, $67, $77, $DD, $01, $66, $BA, $00
                dc.b    $76, $06, $CD, $DD, $BB, $BC, $CD, $DD, $DD, $CB, $BA, $AA, $66, $06, $67, $77
                dc.b    $BB, $66, $66, $61, $00, $A1, $00, $70, $00, $B1, $07, $07, $0A, $01, $16, $60
                dc.b    $C1, $B0, $67, $76, $CB, $B6, $11, $67, $BC, $61, $17, $BA, $61, $16, $71, $00
                dc.b    $11, $00, $67, $DD, $00, $06, $66, $D6, $70, $16, $1B, $0B, $01, $11, $A0, $00
                dc.b    $60, $35, $FF, $FF, $76, $32, $02, $03, $AB, $66, $20, $02, $09, $A1, $10, $00
                dc.b    $B0, $A0, $02, $00, $6D, $77, $02, $06, $06, $76, $11, $20, $66, $AB, $02, $04
                dc.b    $42, $FF, $23, $02, $02, $06, $22, $16, $00, $02, $16, $6B, $02, $05, $7B, $A0
                dc.b    $00, $21, $10, $02, $05, $07, $A0, $00, $02, $11, $06, $16, $20, $16, $A0, $BC
                dc.b    $66, $11, $6B, $BC, $BB, $76, $16, $CB, $00, $B0, $61, $16, $00, $01, $17, $11
                dc.b    $00, $0A, $05, $01, $70, $02, $26, $01, $00, $DD, $DC, $61, $07, $DD, $DC, $CB
                dc.b    $BB, $BA, $AB, $BC, $DD, $67, $76, $60, $66, $11, $66, $66, $BB, $70, $70, $1A
                dc.b    $00, $77, $07, $1B, $00, $70, $76, $10, $A0, $44, $45, $56, $7D, $02, $02, $02
                dc.b    $20, $03, $01, $02, $16, $0A, $22, $33, $00, $02, $16, $66, $00, $21, $70, $10
                dc.b    $03, $05, $10, $02, $17, $00, $10, $03, $05, $11, $21, $70, $00, $11, $03, $0B
                dc.b    $11, $67, $00, $11, $0B, $BB, $BB, $AA, $A0, $A0, $A0, $02, $02, $0A, $AA, $03
                dc.b    $01, $AA, $03, $01, $AA, $03, $01, $AA, $03, $01, $AA, $02, $05, $01, $A0, $A0
                dc.b    $00, $11, $03, $01, $11, $03, $01, $11, $03, $01, $11, $03, $01, $11, $03, $01
                dc.b    $11, $03, $01, $11, $03, $0D, $76, $66, $6C, $CC, $0C, $66, $67, $77, $1B, $AA
                dc.b    $AB, $BB, $07, $0A, $01, $0A, $03, $01, $A0, $02, $13, $0A, $00, $10, $CC, $C6
                dc.b    $66, $77, $77, $77, $76, $BB, $BB, $B1, $16, $00, $AA, $A0, $10, $AA, $04, $05
                dc.b    $01, $10, $00, $01, $10, $02, $01, $10, $03, $04, $66, $66, $67, $61, $04, $01
                dc.b    $20, $03, $01, $02, $04, $01, $20, $05, $05, $01, $00, $02, $00, $11, $03, $05
                dc.b    $11, $02, $FF, $DD, $DC, $02, $01, $A0, $02, $3D, $A0, $AA, $A0, $00, $10, $00
                dc.b    $0A, $00, $70, $00, $11, $02, $0A, $00, $07, $00, $11, $00, $70, $00, $27, $0A
                dc.b    $01, $32, $20, $CB, $71, $C6, $01, $07, $71, $0B, $70, $10, $16, $A0, $A1, $01
                dc.b    $11, $1A, $07, $10, $60, $66, $B0, $01, $10, $01, $70, $71, $71, $01, $17, $00
                dc.b    $16, $17, $7C, $BD, $DD, $71, $A0, $02, $01, $1A, $03, $03, $A0, $0A, $AA, $02
                dc.b    $73, $0A, $07, $A0, $A0, $00, $A6, $70, $1B, $BA, $01, $0A, $66, $67, $C1, $06
                dc.b    $DD, $D0, $16, $76, $00, $D1, $DD, $71, $00, $0C, $00, $76, $00, $0A, $0B, $70
                dc.b    $00, $06, $A6, $D6, $00, $D1, $10, $AB, $00, $07, $61, $7B, $00, $0A, $61, $16
                dc.b    $CD, $B0, $B0, $C7, $11, $00, $A0, $B1, $00, $0A, $10, $07, $10, $01, $00, $61
                dc.b    $17, $70, $70, $D6, $11, $77, $00, $A7, $1A, $B7, $01, $11, $60, $01, $10, $61
                dc.b    $0D, $0A, $01, $03, $76, $0A, $01, $10, $1B, $A1, $07, $72, $0B, $17, $0B, $10
                dc.b    $06, $61, $70, $00, $0D, $60, $AA, $10, $0A, $70, $B1, $70, $01, $11, $67, $12
                dc.b    $26, $66, $DC, $DF, $05, $02, $01, $A0, $06, $02, $01, $0A, $02, $07, $10, $A0
                dc.b    $BA, $21, $0A, $0A, $11, $03, $08, $01, $DC, $A0, $AA, $16, $00, $0A, $01, $04
                dc.b    $01, $77, $02, $01, $10, $02, $15, $A1, $07, $00, $AB, $10, $61, $10, $10, $06
                dc.b    $67, $16, $00, $66, $BA, $10, $01, $71, $00, $DD, $00, $0A, $0E, $02, $07, $7D
                dc.b    $02, $06, $67, $61, $D0, $00, $7A, $B7, $02, $04, $5F, $F4, $2F, $FD, $03, $01
                dc.b    $21, $02, $1E, $02, $17, $02, $22, $30, $16, $20, $11, $16, $67, $06, $70, $60
                dc.b    $10, $06, $77, $06, $77, $00, $10, $61, $16, $16, $60, $66, $71, $70, $00, $01
                dc.b    $10, $02, $1A, $10, $10, $66, $00, $11, $77, $76, $77, $07, $06, $01, $11, $61
                dc.b    $6B, $71, $60, $06, $AB, $66, $10, $0A, $B6, $17, $0D, $D0, $BD, $02, $01, $A0
                dc.b    $02, $28, $AA, $A0, $00, $77, $D7, $DC, $00, $DD, $DD, $77, $D0, $AA, $AA, $AB
                dc.b    $1D, $77, $77, $BA, $60, $7D, $77, $61, $A0, $6C, $67, $06, $C1, $00, $76, $01
                dc.b    $77, $77, $11, $07, $10, $11, $A0, $01, $01, $AA, $02, $11, $AA, $00, $A1, $01
                dc.b    $A0, $AA, $16, $16, $6A, $77, $61, $01, $17, $01, $DC, $66, $76, $03, $05, $10
                dc.b    $00, $0A, $00, $07, $02, $02, $01, $07, $03, $0B, $07, $07, $B0, $10, $70, $01
                dc.b    $76, $66, $11, $16, $11, $02, $0A, $77, $61, $61, $61, $70, $77, $70, $00, $77
                dc.b    $07, $02, $01, $77, $03, $01, $07, $05, $06, $07, $00, $11, $11, $16, $77, $03
                dc.b    $05, $17, $22, $22, $01, $10, $02, $01, $01, $03, $01, $01, $04, $01, $07, $03
                dc.b    $01, $07, $03, $01, $07, $07, $09, $70, $00, $02, $7C, $16, $00, $02, $7A, $A6
                dc.b    $02, $02, $27, $A1, $03, $01, $6A, $02, $02, $02, $1B, $03, $01, $26, $03, $01
                dc.b    $02, $04, $05, $33, $32, $32, $24, $17, $04, $3B, $70, $11, $06, $66, $00, $17
                dc.b    $66, $B6, $10, $71, $B1, $CB, $A1, $0A, $0A, $1D, $C7, $BA, $DC, $22, $1B, $A7
                dc.b    $17, $5F, $DB, $70, $06, $A0, $01, $10, $10, $B0, $01, $10, $17, $6D, $D6, $01
                dc.b    $7A, $66, $11, $17, $B0, $B1, $71, $01, $00, $C1, $11, $17, $BA, $66, $67, $61
                dc.b    $67, $AD, $CB, $11, $6D, $02, $02, $A0, $7A, $02, $02, $01, $11, $02, $02, $07
                dc.b    $07, $02, $02, $01, $11, $03, $01, $71, $02, $02, $A0, $07, $05, $03, $0A, $17
                dc.b    $07, $03, $07, $07, $00, $01, $70, $01, $AA, $A7, $02, $08, $66, $60, $11, $01
                dc.b    $11, $11, $10, $76, $02, $14, $11, $12, $10, $00, $22, $20, $10, $17, $42, $00
                dc.b    $10, $61, $62, $00, $70, $76, $20, $00, $01, $02, $02, $02, $71, $20, $02, $01
                dc.b    $12, $03, $01, $20, $07, $04, $24, $FF, $FF, $55, $02, $10, $0A, $16, $00, $0A
                dc.b    $B6, $77, $00, $B1, $06, $61, $07, $01, $BA, $AA, $00, $1A, $02, $01, $07, $04
                dc.b    $01, $A0, $02, $0E, $60, $DA, $0B, $DB, $76, $6A, $00, $61, $16, $10, $0B, $BA
                dc.b    $10, $A0, $02, $01, $70, $03, $1A, $10, $A0, $00, $AB, $00, $1A, $AA, $10, $00
                dc.b    $01, $11, $00, $0B, $B0, $66, $BB, $A0, $A0, $06, $D0, $00, $16, $D1, $00, $0B
                dc.b    $6D, $02, $14, $B0, $D0, $A1, $00, $0B, $00, $16, $7D, $0A, $00, $6D, $A0, $01
                dc.b    $AB, $D0, $A0, $67, $70, $DC, $16, $03, $01, $01, $03, $01, $01, $03, $01, $01
                dc.b    $03, $01, $01, $03, $01, $01, $03, $01, $01, $03, $06, $01, $71, $76, $0C, $60
                dc.b    $10, $03, $01, $10, $03, $01, $10, $03, $01, $10, $03, $01, $10, $03, $01, $10
                dc.b    $03, $01, $10, $03, $04, $1D, $0D, $DD, $D7, $1C, $14, $7C, $1C, $C1, $C1, $07
                dc.b    $B7, $00, $76, $01, $00, $77, $1A, $0A, $01, $11, $00, $0A, $0A, $0A, $A0, $02
                dc.b    $30, $A0, $0A, $17, $A0, $00, $A6, $01, $7B, $BB, $71, $10, $67, $77, $11, $06
                dc.b    $07, $00, $76, $0A, $10, $77, $1A, $0A, $A1, $11, $A0, $01, $0A, $AA, $0A, $07
                dc.b    $AA, $00, $A1, $01, $66, $CC, $76, $01, $77, $66, $77, $07, $77, $61, $66, $01
                dc.b    $70, $02, $1C, $0A, $17, $70, $01, $00, $A1, $11, $00, $0A, $0A, $A0, $11, $01
                dc.b    $A0, $A6, $00, $06, $7C, $60, $00, $61, $01, $11, $10, $43, $22, $01, $07, $03
                dc.b    $01, $70, $03, $01, $70, $03, $01, $70, $03, $01, $70, $03, $01, $70, $03, $01
                dc.b    $70, $03, $05, $70, $22, $22, $01, $66, $06, $0F, $01, $01, $00, $10, $11, $11
                dc.b    $11, $11, $11, $11, $10, $10, $10, $10, $10, $02, $11, $70, $00, $07, $07, $77
                dc.b    $33, $01, $06, $6B, $02, $60, $10, $A0, $00, $A1, $00, $A0, $03, $01, $10, $03
                dc.b    $1C, $7A, $00, $A1, $10, $11, $02, $6A, $70, $06, $00, $1A, $B1, $00, $42, $06
                dc.b    $C7, $66, $70, $07, $C6, $77, $10, $07, $00, $11, $00, $01, $A0, $03, $01, $10
                dc.b    $03, $01, $60, $02, $01, $07, $03, $01, $0A, $02, $10, $DD, $DA, $76, $61, $BB
                dc.b    $B1, $17, $70, $BB, $BB, $B6, $67, $B0, $BB, $06, $61, $03, $13, $01, $B0, $BB
                dc.b    $A6, $61, $BB, $BB, $16, $66, $BB, $11, $17, $77, $CC, $67, $54, $44, $11, $10
                dc.b    $02, $02, $76, $60, $02, $01, $67, $07, $01, $77, $03, $02, $66, $60, $02, $02
                dc.b    $66, $10, $02, $06, $77, $71, $44, $44, $70, $07, $02, $07, $77, $00, $01, $11
                dc.b    $70, $01, $10, $02, $01, $10, $02, $01, $01, $02, $06, $AA, $11, $00, $0A, $00
                dc.b    $11, $03, $17, $61, $AA, $A0, $0A, $07, $A0, $0A, $A0, $21, $1A, $A0, $11, $00
                dc.b    $71, $11, $00, $02, $17, $00, $77, $00, $21, $77, $02, $02, $02, $11, $03, $08
                dc.b    $22, $11, $44, $34, $44, $66, $00, $17, $02, $08, $07, $00, $77, $00, $70, $11
                dc.b    $10, $77, $02, $02, $01, $11, $04, $02, $01, $10, $02, $08, $12, $22, $01, $16
                dc.b    $64, $44, $76, $76, $02, $1E, $16, $76, $00, $07, $71, $1B, $77, $70, $10, $1B
                dc.b    $11, $11, $01, $60, $00, $01, $17, $AB, $11, $10, $07, $CB, $77, $76, $66, $CB
                dc.b    $67, $61, $76, $BB, $03, $01, $01, $03, $02, $01, $01, $02, $16, $70, $00, $10
                dc.b    $61, $16, $16, $77, $66, $67, $17, $71, $06, $01, $21, $10, $10, $66, $50, $70
                dc.b    $1D, $07, $10, $03, $01, $10, $02, $02, $01, $10, $02, $15, $66, $66, $10, $0A
                dc.b    $B6, $71, $70, $01, $AB, $16, $11, $16, $6B, $61, $01, $10, $16, $7D, $7D, $D0
                dc.b    $D0, $06, $01, $A0, $02, $0B, $0A, $76, $00, $7D, $77, $61, $A0, $DD, $DD, $BA
                dc.b    $60, $02, $0E, $BC, $11, $DD, $DD, $61, $01, $61, $10, $10, $01, $07, $00, $10
                dc.b    $67, $02, $06, $06, $1B, $07, $10, $11, $A0, $02, $07, $7A, $00, $70, $01, $10
                dc.b    $00, $01, $02, $0A, $0A, $10, $07, $A0, $A0, $6D, $DB, $00, $AA, $B0, $09, $04
                dc.b    $AA, $AA, $0A, $AA, $02, $01, $A0, $0B, $08, $AA, $01, $67, $76, $00, $AB, $66
                dc.b    $01, $02, $0A, $A1, $60, $AA, $A0, $0A, $11, $00, $0A, $A0, $07, $02, $02, $0A
                dc.b    $A0, $03, $01, $A1, $04, $04, $77, $77, $77, $77, $0F, $01, $01, $03, $01, $10
                dc.b    $02, $01, $01, $03, $01, $10, $03, $02, $11, $11, $02, $08, $01, $11, $00, $01
                dc.b    $10, $00, $01, $10, $02, $01, $10, $05, $08, $07, $77, $00, $07, $70, $00, $07
                dc.b    $70, $02, $04, $16, $66, $66, $44, $02, $01, $01, $03, $02, $07, $20, $02, $01
                dc.b    $11, $03, $02, $7A, $10, $05, $1F, $60, $00, $72, $00, $10, $00, $01, $22, $52
                dc.b    $6D, $61, $00, $02, $11, $60, $00, $21, $76, $72, $02, $17, $B1, $10, $00, $71
                dc.b    $07, $20, $21, $1A, $01, $02, $02, $0A, $A0, $00, $07, $A0, $00, $21, $24, $FF
                dc.b    $52, $23, $02, $1E, $22, $22, $00, $22, $16, $60, $02, $11, $6B, $72, $21, $06
                dc.b    $AA, $10, $10, $6A, $A6, $20, $07, $00, $11, $00, $71, $AA, $02, $00, $45, $F5
                dc.b    $63, $44, $03, $01, $10, $02, $01, $07, $02, $03, $02, $10, $01, $06, $01, $07
                dc.b    $09, $04, $24, $5D, $CC, $AA, $04, $01, $07, $08, $01, $10, $05, $02, $0A, $11
                dc.b    $04, $01, $7A, $02, $04, $67, $61, $CD, $C6, $06, $01, $11, $02, $03, $07, $00
                dc.b    $07, $05, $01, $10, $03, $05, $01, $10, $70, $01, $70, $02, $05, $77, $6D, $CC
                dc.b    $B1, $11, $10, $04, $10, $00, $01, $70, $04, $07, $0A, $00, $A7, $00, $76, $CD
                dc.b    $73, $02, $01, $01, $02, $09, $07, $00, $02, $70, $00, $70, $10, $00, $01, $04
                dc.b    $07, $10, $00, $10, $70, $07, $00, $01, $03, $04, $23, $45, $76, $01, $06, $04
                dc.b    $01, $07, $00, $02, $04, $01, $10, $04, $01, $70, $02, $02, $17, $06, $02, $0B
                dc.b    $07, $60, $24, $46, $10, $16, $00, $B0, $77, $71, $01, $02, $09, $1A, $0A, $01
                dc.b    $11, $00, $0A, $0A, $0A, $A0, $02, $1F, $A0, $0A, $17, $A0, $00, $A7, $01, $7B
                dc.b    $BB, $71, $17, $67, $77, $17, $01, $07, $77, $71, $0A, $10, $00, $1A, $00, $A1
                dc.b    $11, $A0, $00, $0A, $AA, $00, $0A, $02, $15, $0A, $17, $A0, $00, $A7, $01, $7B
                dc.b    $BB, $71, $10, $60, $67, $11, $00, $01, $00, $76, $07, $10, $07, $1B, $03, $36
                dc.b    $1A, $01, $01, $07, $01, $01, $06, $00, $77, $06, $10, $01, $10, $11, $60, $16
                dc.b    $11, $11, $00, $17, $01, $61, $10, $01, $11, $BC, $C7, $77, $77, $A0, $0A, $AA
                dc.b    $AA, $1A, $AA, $00, $0A, $01, $11, $BA, $A0, $77, $77, $01, $11, $11, $00, $77
                dc.b    $77, $11, $11, $11, $13, $11, $02, $0C, $02, $66, $66, $61, $00, $BB, $11, $07
                dc.b    $10, $AA, $00, $07, $02, $13, $11, $70, $00, $11, $77, $00, $10, $77, $00, $11
                dc.b    $02, $11, $10, $11, $14, $00, $10, $07, $70, $02, $04, $70, $00, $01, $07, $05
                dc.b    $05, $01, $00, $70, $01, $10, $02, $04, $10, $00, $07, $01, $02, $04, $60, $01
                dc.b    $11, $11, $03, $01, $01, $02, $04, $11, $10, $01, $11, $02, $01, $10, $0F, $0E
                dc.b    $77, $A7, $6A, $A6, $06, $01, $0A, $00, $01, $00, $10, $01, $00, $06, $04, $06
                dc.b    $01, $A0, $00, $0A, $00, $10, $02, $01, $07, $03, $07, $61, $70, $01, $00, $10
                dc.b    $01, $01, $02, $02, $07, $10, $07, $03, $70, $00, $A0, $03, $05, $06, $17, $01
                dc.b    $A0, $01, $03, $06, $0A, $61, $01, $AA, $CF, $42, $04, $03, $10, $00, $02, $03
                dc.b    $01, $70, $02, $01, $0A, $02, $09, $10, $00, $16, $20, $00, $A0, $A1, $00, $71
                dc.b    $02, $05, $62, $34, $5D, $C6, $07, $06, $01, $10, $02, $03, $02, $00, $71, $02
                dc.b    $02, $01, $07, $06, $02, $20, $10, $03, $05, $01, $42, $35, $FD, $77, $02, $05
                dc.b    $A0, $00, $01, $11, $0A, $04, $1A, $01, $01, $07, $10, $10, $70, $00, $01, $00
                dc.b    $10, $11, $70, $07, $01, $71, $16, $61, $77, $71, $11, $66, $10, $11, $07, $00
                dc.b    $07, $07, $01, $71, $04, $15, $01, $07, $07, $10, $11, $10, $70, $01, $00, $11
                dc.b    $11, $61, $06, $CD, $71, $70, $00, $AA, $10, $00, $01, $03, $17, $10, $11, $00
                dc.b    $10, $07, $00, $71, $01, $00, $77, $00, $10, $11, $00, $10, $00, $01, $11, $01
                dc.b    $10, $76, $76, $11, $02, $01, $10, $03, $01, $07, $02, $07, $01, $70, $10, $01
                dc.b    $77, $00, $02, $02, $0E, $01, $00, $10, $00, $10, $20, $00, $11, $00, $20, $32
                dc.b    $00, $10, $03, $03, $01, $17, $03, $05, $70, $02, $01, $00, $01, $07, $3A, $71
                dc.b    $20, $11, $11, $17, $00, $01, $10, $11, $11, $01, $11, $01, $77, $01, $06, $77
                dc.b    $00, $60, $00, $10, $11, $A7, $01, $A1, $AA, $07, $01, $0A, $00, $B1, $00, $A0
                dc.b    $0B, $61, $16, $1A, $D6, $10, $01, $67, $11, $01, $11, $11, $00, $76, $01, $77
                dc.b    $77, $11, $07, $10                               
;=============================================================================== 
; Level Rings Layout
; [ Begin ]
;===============================================================================                          
Rings_Layout: ; loc_48000:               
                dc.w    Ghz_1_Rings_Layout-Rings_Layout, Ghz_2_Rings_Layout-Rings_Layout 
                dc.w    Id_0100_Rings_Layout-Rings_Layout, Id_0101_Rings_Layout-Rings_Layout    
                dc.w    Wz_1_Rings_Layout-Rings_Layout, Wz_2_Rings_Layout-Rings_Layout 
                dc.w    Id_0300_Rings_Layout-Rings_Layout, Id_0301_Rings_Layout-Rings_Layout  
                dc.w    Mz_1_Rings_Layout-Rings_Layout, Mz_2_Rings_Layout-Rings_Layout    
                dc.w    Mz_3_Rings_Layout-Rings_Layout, Mz_4_Rings_Layout-Rings_Layout    
                dc.w    Id_0600_Rings_Layout-Rings_Layout, Id_0601_Rings_Layout-Rings_Layout 
                dc.w    Htz_1_Rings_Layout-Rings_Layout, Htz_2_Rings_Layout-Rings_Layout 
                dc.w    Hpz_1_Rings_Layout-Rings_Layout, Hpz_2_Rings_Layout-Rings_Layout 
                dc.w    Id_0900_Rings_Layout-Rings_Layout, Id_0901_Rings_Layout-Rings_Layout 
                dc.w    OOz_1_Rings_Layout-Rings_Layout, OOz_2_Rings_Layout-Rings_Layout 
                dc.w    DHz_1_Rings_Layout-Rings_Layout, DHz_2_Rings_Layout-Rings_Layout 
                dc.w    CNz_1_Rings_Layout-Rings_Layout, CNz_2_Rings_Layout-Rings_Layout
                dc.w    CPz_1_Rings_Layout-Rings_Layout, CPz_2_Rings_Layout-Rings_Layout 
                dc.w    GCz_1_Rings_Layout-Rings_Layout, GCz_2_Rings_Layout-Rings_Layout
                dc.w    NGHz_1_Rings_Layout-Rings_Layout, NGHz_2_Rings_Layout-Rings_Layout 
                dc.w    DEz_1_Rings_Layout-Rings_Layout, DEz_2_Rings_Layout-Rings_Layout
Ghz_1_Rings_Layout:   ; loc_48044:               
                incbin  'data\ghz\rng_act1.dat'              
Ghz_2_Rings_Layout:   ; loc_481DE:               
                incbin  'data\ghz\rng_act2.dat'             
Id_0100_Rings_Layout: ; loc_483DC:                                   
                dc.w    $FFFF            
Id_0101_Rings_Layout: ; loc_483DE:                                   
                dc.w    $FFFF                                 
Wz_1_Rings_Layout:    ; loc_483E0:                              
                dc.w    $FFFF              
Wz_2_Rings_Layout:    ; loc_483E2:                               
                dc.w    $FFFF               
Id_0300_Rings_Layout: ; loc_483E4:                                   
                dc.w    $FFFF              
Id_0301_Rings_Layout: ; loc_483E6:                                 
                dc.w    $FFFF                               
Mz_1_Rings_Layout:    ; loc_483E8:                               
                dc.w    $FFFF              
Mz_2_Rings_Layout:    ; loc_483EA:                               
                dc.w    $FFFF                                               
Mz_3_Rings_Layout:    ; loc_483EC:                                
                dc.w    $FFFF              
Mz_4_Rings_Layout:    ; loc_483EE:                               
                dc.w    $FFFF              
Id_0600_Rings_Layout: ; loc_483F0:                                   
                dc.w    $FFFF               
Id_0601_Rings_Layout: ; loc_483F2:                                 
                dc.w    $FFFF                
Htz_1_Rings_Layout:   ; loc_483F4:             
                incbin  'data\htz\rng_act1.dat'             
Htz_2_Rings_Layout:   ; loc_484EA:                
                incbin  'data\htz\rng_act2.dat' 
Hpz_1_Rings_Layout:   ; loc_48654:             
                incbin  'data\hpz\rng_act1.dat'            
Hpz_2_Rings_Layout:   ; loc_487C6:                 
                dc.w    $FFFF                                              
Id_0900_Rings_Layout: ; loc_487C8:                                   
                dc.w    $FFFF               
Id_0901_Rings_Layout: ; loc_487CA:                                 
                dc.w    $FFFF                                            
OOz_1_Rings_Layout:   ; loc_487CC:               
                incbin  'data\ooz\rng_act1.dat'      
OOz_2_Rings_Layout:   ; loc_4889E:             
                incbin  'data\ooz\rng_act2.dat'                
DHz_1_Rings_Layout:   ; loc_48968:               
                dc.w    $FFFF     
DHz_2_Rings_Layout:   ; loc_4896A:               
                dc.w    $FFFF 
CNz_1_Rings_Layout:   ; loc_4896C:                
                dc.w    $FFFF    
CNz_2_Rings_Layout:   ; loc_4896E:                
                dc.w    $FFFF                
CPz_1_Rings_Layout:   ; loc_48970:               
                incbin  'data\cpz\rng_act1.dat'                                               
CPz_2_Rings_Layout:   ; loc_48A3E:                
                incbin  'data\cpz\rng_act2.dat'             
GCz_1_Rings_Layout:   ; loc_48B94:                
                dc.w    $FFFF    
GCz_2_Rings_Layout:   ; loc_48B96:                
                dc.w    $FFFF               
NGHz_1_Rings_Layout:  ; loc_48B98:                
                incbin  'data\nghz\rng_act1.dat'                                               
NGHz_2_Rings_Layout:  ; loc_48C76:                
                incbin  'data\nghz\rng_act2.dat'  
DEz_1_Rings_Layout:   ; loc_48DB0:              
                dc.w    $FFFF    
DEz_2_Rings_Layout:   ; loc_48DB2:               
                dc.w    $FFFF   
;=============================================================================== 
; Level Rings Layout
; [ End ]
;===============================================================================                                                                
Unknow_Data_0x048DB4: ; loc_48DB4:
                dc.b    $71, $90, $76, $61, $89, $00, $AB, $AA, $33, $33, $00, $10, $02, $02, $20, $01
                dc.b    $04, $0C, $10, $00, $02, $00, $01, $10, $00, $20, $00, $01, $00, $02, $04, $06
                dc.b    $22, $00, $33, $33, $32, $17, $03, $01, $70, $0C, $01, $11, $02, $04, $70, $00
                dc.b    $11, $10, $04, $05, $01, $DD, $76, $11, $16, $06, $01, $01, $04, $08, $01, $00
                dc.b    $07, $00, $10, $0A, $10, $10, $02, $05, $70, $01, $00, $01, $01, $02, $04, $D0
                dc.b    $CD, $DC, $CC, $04, $01, $07, $07, $02, $11, $A0, $03, $01, $10, $02, $02, $01
                dc.b    $60, $03, $01, $0B, $02, $04, $CC, $70, $CC, $DD, $06, $01, $01, $02, $03, $07
                dc.b    $00, $01, $03, $04, $10, $0A, $10, $10, $02, $05, $70, $01, $00, $01, $01, $02
                dc.b    $06, $01, $71, $01, $33, $A1, $70, $02, $10, $67, $01, $02, $00, $11, $10, $02
                dc.b    $22, $00, $16, $61, $11, $11, $16, $77, $77, $02, $0A, $17, $77, $11, $11, $11
                dc.b    $10, $22, $33, $32, $23, $04, $03, $22, $22, $22, $02, $2A, $11, $11, $22, $00
                dc.b    $11, $00, $11, $66, $11, $11, $01, $07, $11, $11, $10, $71, $11, $77, $11, $BB
                dc.b    $99, $FB, $9B, $00, $01, $10, $00, $23, $11, $57, $01, $00, $25, $71, $02, $55
                dc.b    $67, $13, $11, $00, $07, $13, $02, $43, $63, $41, $11, $05, $50, $70, $30, $FA
                dc.b    $CC, $11, $03, $00, $A9, $26, $67, $0A, $26, $77, $77, $03, $70, $53, $33, $A1
                dc.b    $00, $22, $11, $37, $07, $71, $33, $10, $71, $77, $11, $00, $13, $10, $00, $07
                dc.b    $12, $17, $00, $77, $77, $77, $77, $77, $77, $77, $77, $33, $33, $33, $33, $11
                dc.b    $11, $11, $11, $22, $22, $22, $22, $77, $77, $77, $77, $04, $03, $75, $04, $57
                dc.b    $02, $3F, $01, $11, $70, $10, $75, $12, $25, $20, $17, $52, $00, $11, $31, $76
                dc.b    $55, $00, $31, $70, $00, $11, $14, $36, $00, $03, $07, $05, $50, $33, $70, $43
                dc.b    $50, $00, $01, $35, $70, $10, $75, $11, $25, $20, $17, $52, $00, $11, $31, $76
                dc.b    $55, $00, $31, $70, $00, $11, $14, $36, $00, $03, $07, $05, $50, $36, $00, $64
                dc.b    $50, $1A, $06, $01, $70, $06, $20, $11, $70, $02, $01, $02, $03, $12, $01, $57
                dc.b    $00, $01, $00, $13, $01, $30, $11, $11, $70, $12, $22, $22, $07, $77, $77, $77
                dc.b    $04, $1C, $77, $77, $77, $77, $77, $77, $77, $77, $77, $77, $77, $77, $33, $33
                dc.b    $33, $33, $11, $11, $11, $10, $22, $22, $22, $01, $77, $77, $70, $23, $02, $3D
                dc.b    $07, $01, $76, $66, $FF, $88, $76, $61, $89, $00, $70, $07, $71, $90, $26, $70
                dc.b    $07, $10, $12, $27, $00, $09, $10, $12, $70, $70, $01, $01, $10, $00, $30, $10
                dc.b    $30, $01, $15, $20, $06, $70, $10, $00, $03, $11, $00, $71, $10, $33, $30, $02
                dc.b    $11, $11, $A6, $07, $22, $11, $03, $60, $76, $55, $0A, $36, $70, $02, $09, $A9
                dc.b    $25, $55, $22, $22, $88, $89, $22, $20, $03, $03, $02, $20, $01, $03, $01, $01
                dc.b    $07, $01, $10, $03, $01, $07, $02, $18, $21, $70, $53, $32, $10, $00, $10, $11
                dc.b    $07, $00, $70, $00, $71, $11, $01, $17, $10, $00, $11, $71, $AA, $A0, $00, $10
                dc.b    $02, $01, $07, $02, $03, $0A, $00, $0A, $02, $02, $67, $6D, $02, $0D, $07, $01
                dc.b    $D0, $0A, $00, $70, $1D, $A0, $10, $07, $01, $77, $01, $06, $01, $01, $02, $04
                dc.b    $01, $10, $00, $10, $04, $06, $76, $01, $11, $10, $07, $11, $02, $04, $71, $10
                dc.b    $77, $77, $04, $01, $10, $04, $07, $10, $00, $01, $00, $01, $11, $10, $02, $08
                dc.b    $11, $66, $66, $10, $07, $01, $B1, $66, $02, $02, $0A, $A1, $02, $2B, $A0, $0A
                dc.b    $07, $01, $1A, $A0, $00, $77, $01, $1B, $10, $00, $77, $70, $01, $11, $11, $16
                dc.b    $01, $11, $67, $D6, $11, $00, $71, $AB, $01, $10, $07, $1A, $70, $01, $00, $71
                dc.b    $17, $10, $10, $07, $00, $01, $01, $00, $10, $02, $40, $10, $66, $11, $00, $01
                dc.b    $AB, $89, $9D, $DA, $13, $10, $10, $01, $31, $00, $20, $00, $10, $02, $70, $73
                dc.b    $12, $36, $00, $1A, $56, $70, $06, $30, $00, $07, $63, $A0, $55, $52, $9A, $00
                dc.b    $25, $30, $9F, $89, $10, $13, $10, $10, $00, $71, $77, $03, $37, $07, $71, $31
                dc.b    $A1, $00, $13, $10, $03, $70, $65, $44, $0A, $26, $70, $02, $13, $A9, $26, $67
                dc.b    $88, $88, $21, $10, $11, $11, $11, $11, $33, $33, $33, $33, $11, $11, $11, $11
                dc.b    $04, $04, $44, $44, $44, $44, $04, $33, $77, $77, $77, $77, $30, $07, $24, $47
                dc.b    $01, $00, $53, $30, $03, $05, $43, $33, $01, $12, $17, $00, $10, $21, $23, $33
                dc.b    $22, $12, $32, $66, $06, $30, $01, $22, $00, $10, $11, $11, $37, $04, $06, $65
                dc.b    $01, $00, $53, $30, $03, $05, $43, $33, $01, $12, $17, $02, $2A, $21, $23, $33
                dc.b    $42, $12, $32, $66, $06, $22, $11, $22, $77, $01, $23, $33, $07, $02, $31, $10
                dc.b    $10, $73, $03, $01, $00, $01, $11, $33, $07, $07, $21, $11, $90, $00, $72, $21
                dc.b    $01, $70, $07, $65, $09, $17, $70, $02, $13, $98, $16, $67, $88, $88, $11, $10
                dc.b    $11, $11, $11, $11, $33, $33, $33, $33, $11, $11, $11, $11, $04, $04, $44, $44
                dc.b    $44, $44, $04, $0A, $77, $77, $77, $77, $00, $77, $77, $70, $10, $77, $02, $06
                dc.b    $31, $10, $70, $07, $13, $31, $02, $0A, $01, $13, $07, $00, $41, $01, $20, $00
                dc.b    $05, $10, $03, $01, $20, $02, $05, $66, $20, $17, $07, $10, $1B, $04, $34, $77
                dc.b    $74, $43, $02, $02, $70, $07, $02, $02, $07, $70, $02, $02, $77, $70, $03, $01
                dc.b    $76, $02, $02, $77, $63, $02, $02, $76, $31, $02, $30, $63, $10, $06, $67, $12
                dc.b    $45, $77, $07, $70, $64, $07, $70, $62, $21, $71, $60, $31, $01, $22, $36, $50
                dc.b    $13, $10, $00, $01, $00, $01, $00, $65, $00, $10, $30, $07, $30, $33, $32, $23
                dc.b    $31, $22, $10, $01, $01, $01, $12, $23, $30, $23, $30, $0B, $15, $01, $67, $77
                dc.b    $17, $76, $10, $00, $05, $55, $54, $47, $70, $01, $10, $03, $00, $10, $33, $33
                dc.b    $00, $03, $02, $01, $01, $03, $02, $03, $30, $02, $03, $17, $77, $10, $03, $12
                dc.b    $67, $61, $76, $01, $16, $70, $32, $77, $77, $77, $33, $32, $17, $70, $00, $33
                dc.b    $01, $71, $02, $02, $06, $64, $02, $02, $65, $20, $02, $1C, $01, $10, $00, $06
                dc.b    $50, $03, $11, $17, $23, $56, $77, $07, $70, $00, $07, $70, $77, $00, $07, $00
                dc.b    $77, $00, $71, $77, $07, $00, $27, $67, $03, $01, $71, $02, $0B, $33, $07, $11
                dc.b    $11, $01, $22, $44, $76, $00, $12, $33, $19, $0C, $64, $56, $66, $67, $06, $44
                dc.b    $45, $56, $00, $01, $23, $30, $14, $36, $11, $32, $11, $66, $00, $77, $70, $70
                dc.b    $00, $70, $70, $70, $00, $77, $77, $07, $00, $07, $77, $77, $00, $07, $07, $70
                dc.b    $07, $07, $70, $00, $01, $11, $11, $11, $61, $11, $66, $61, $77, $70, $77, $70
                dc.b    $07, $77, $70, $70, $77, $07, $07, $70, $77, $00, $77, $00, $07, $77, $02, $02
                dc.b    $07, $77, $02, $0C, $11, $11, $11, $11, $FF, $EE, $EE, $EE, $01, $00, $77, $77
                dc.b    $02, $01, $70, $0A, $03, $01, $06, $06, $08, $0F, $DC, $CD, $CD, $BD, $06, $77
                dc.b    $77, $60, $01, $21, $12, $10, $00, $32, $53, $02, $02, $06, $20, $02, $1F, $34
                dc.b    $73, $00, $01, $21, $12, $10, $06, $77, $77, $60, $DD, $DD, $DD, $DD, $01, $66
                dc.b    $66, $66, $07, $07, $77, $77, $00, $70, $77, $77, $00, $07, $66, $66, $02, $02
                dc.b    $0B, $88, $02, $02, $03, $33, $02, $2E, $03, $00, $06, $16, $0B, $BB, $66, $66
                dc.b    $66, $66, $77, $77, $77, $77, $77, $77, $77, $70, $66, $66, $66, $67, $BB, $89
                dc.b    $99, $80, $00, $31, $00, $10, $00, $31, $00, $10, $BB, $89, $99, $86, $66, $66
                dc.b    $66, $66, $77, $77, $77, $77, $08, $04, $10, $01, $11, $11, $02, $02, $10, $10
                dc.b    $04, $0C, $01, $10, $10, $10, $66, $66, $66, $10, $77, $77, $70, $70, $02, $01
                dc.b    $07, $04, $03, $70, $11, $11, $02, $02, $10, $10, $06, $16, $8F, $E9, $AB, $BB
                dc.b    $00, $02, $10, $10, $00, $71, $01, $03, $06, $30, $10, $30, $17, $30, $03, $00
                dc.b    $05, $62, $02, $13, $31, $41, $50, $01, $00, $02, $76, $06, $02, $23, $17, $60
                dc.b    $30, $00, $66, $10, $00, $06, $10, $02, $0E, $71, $00, $11, $07, $00, $01, $00
                dc.b    $60, $00, $60, $00, $10, $00, $70, $03, $02, $11, $11, $02, $10, $01, $66, $00
                dc.b    $11, $10, $77, $11, $00, $77, $77, $77, $70, $77, $77, $77, $70, $04, $01, $77
                dc.b    $02, $0B, $76, $22, $44, $06, $22, $11, $11, $76, $43, $33, $25, $02, $03, $70
                dc.b    $77, $70, $02, $01, $70, $02, $02, $70, $77, $02, $02, $70, $77, $03, $10, $07
                dc.b    $55, $41, $77, $61, $33, $30, $16, $61, $16, $06, $23, $16, $77, $17, $20, $02
                dc.b    $1F, $07, $13, $00, $77, $07, $01, $00, $77, $07, $77, $60, $07, $70, $07, $76
                dc.b    $17, $70, $07, $70, $06, $61, $11, $11, $77, $47, $71, $06, $00, $30, $06, $17
                dc.b    $03, $01, $71, $03, $01, $10, $03, $01, $06, $03, $02, $01, $10, $02, $02, $06
                dc.b    $61, $02, $05, $65, $73, $30, $00, $62, $1C, $04, $62, $13, $00, $01, $1C, $16
                dc.b    $16, $32, $11, $11, $07, $77, $00, $07, $00, $77, $77, $70, $00, $77, $77, $70
                dc.b    $00, $77, $77, $70, $00, $77, $02, $01, $07, $03, $13, $01, $11, $11, $11, $66
                dc.b    $66, $66, $11, $77, $77, $77, $00, $77, $77, $70, $00, $77, $77, $70, $02, $08
                dc.b    $07, $77, $00, $77, $07, $77, $00, $77, $03, $08, $11, $11, $11, $11, $FE, $EF
                dc.b    $EF, $9F, $09, $03, $01, $06, $06, $04, $08, $01, $11, $16, $66, $01, $11, $66
                dc.b    $66, $02, $06, $70, $00, $54, $44, $43, $33, $02, $09, $01, $11, $00, $01, $13
                dc.b    $33, $00, $10, $30, $02, $03, $03, $00, $DD, $02, $01, $0D, $02, $0B, $13, $0D
                dc.b    $00, $11, $11, $23, $ED, $42, $53, $5F, $FC, $03, $01, $33, $02, $02, $03, $11
                dc.b    $02, $02, $01, $01, $03, $01, $13, $02, $02, $01, $30, $02, $01, $03, $05, $10
                dc.b    $8E, $8F, $93, $3D, $11, $01, $13, $30, $11, $13, $30, $00, $33, $30, $00, $30
                dc.b    $02, $01, $03, $02, $0F, $03, $31, $10, $03, $31, $10, $10, $30, $10, $01, $00
                dc.b    $89, $89, $F8, $E6, $16, $02, $70, $70, $02, $06, $10, $10, $61, $70, $11, $10
                dc.b    $14, $02, $70, $70, $02, $02, $10, $10, $02, $04, $AA, $B8, $99, $EF, $02, $05
                dc.b    $01, $00, $01, $00, $06, $02, $02, $30, $10, $03, $03, $60, $01, $10, $03, $3F
                dc.b    $03, $01, $00, $10, $00, $06, $00, $11, $46, $16, $66, $16, $17, $07, $77, $72
                dc.b    $70, $07, $07, $21, $77, $77, $01, $00, $77, $70, $73, $10, $77, $70, $10, $01
                dc.b    $00, $07, $31, $00, $11, $11, $00, $13, $45, $52, $02, $30, $10, $12, $30, $66
                dc.b    $01, $30, $66, $65, $13, $06, $65, $30, $00, $66, $30, $35, $36, $63, $53, $02
                dc.b    $0D, $33, $01, $06, $66, $06, $71, $00, $60, $36, $10, $00, $66, $61, $02, $13
                dc.b    $55, $51, $66, $00, $33, $30, $66, $60, $66, $60, $00, $66, $00, $70, $06, $06
                dc.b    $07, $10, $10, $03, $19, $17, $60, $77, $77, $10, $71, $17, $10, $60, $00, $01
                dc.b    $70, $06, $77, $00, $11, $00, $77, $00, $07, $00, $67, $60, $01, $10, $03, $18
                dc.b    $70, $01, $66, $00, $10, $00, $17, $00, $01, $45, $70, $16, $15, $11, $70, $06
                dc.b    $21, $23, $77, $76, $31, $00, $77, $77, $02, $03, $77, $77, $13, $03, $0A, $70
                dc.b    $00, $11, $11, $10, $00, $75, $47, $70, $01, $14, $02, $02, $30, $02, $08, $66
                dc.b    $66, $66, $67, $06, $45, $66, $66, $19, $01, $23, $02, $04, $F8, $99, $99, $EE
                dc.b    $0B, $01, $07, $03, $01, $70, $0B, $05, $70, $71, $00, $01, $70, $04, $01, $70
                dc.b    $04, $01, $01, $03, $02, $01, $10, $02, $02, $77, $10, $02, $0B, $70, $71, $10
                dc.b    $10, $07, $07, $11, $11, $00, $77, $76, $1B, $0C, $77, $54, $54, $45, $56, $11
                dc.b    $11, $23, $ED, $00, $13, $0D, $03, $01, $0D, $02, $06, $03, $00, $DD, $00, $10
                dc.b    $30, $02, $03, $01, $13, $33, $02, $0A, $01, $11, $53, $45, $33, $33, $00, $01
                dc.b    $76, $66, $02, $02, $01, $11, $14, $0C, $60, $77, $77, $77, $66, $66, $66, $66
                dc.b    $11, $11, $11, $11, $14, $01, $10, $03, $01, $10, $07, $18, $07, $01, $07, $07
                dc.b    $07, $88, $A7, $07, $01, $10, $01, $01, $01, $33, $01, $01, $07, $AB, $A7, $07
                dc.b    $07, $01, $07, $06, $08, $02, $01, $07, $02, $02, $88, $A7, $02, $02, $10, $01
                dc.b    $02, $02, $33, $01, $02, $02, $AB, $A7, $02, $0C, $A8, $99, $EE, $8E, $56, $10
                dc.b    $00, $70, $66, $60, $01, $70, $02, $09, $07, $70, $01, $00, $07, $00, $06, $00
                dc.b    $10, $07, $09, $11, $11, $76, $67, $55, $47, $00, $70, $01, $02, $06, $70, $00
                dc.b    $30, $00, $13, $10, $03, $01, $03, $02, $14, $03, $30, $00, $07, $66, $66, $66
                dc.b    $01, $11, $11, $11, $14, $71, $11, $17, $00, $06, $66, $60, $03, $03, $08, $06
                dc.b    $66, $66, $66, $66, $66, $66, $66, $04, $10, $66, $66, $66, $66, $11, $11, $11
                dc.b    $11, $16, $71, $11, $17, $61, $06, $66, $60, $04, $08, $66, $66, $66, $66, $66
                dc.b    $66, $66, $66, $04, $0B, $66, $66, $66, $66, $11, $11, $11, $11, $71, $77, $70
                dc.b    $03, $01, $01, $03, $07, $07, $00, $60, $00, $01, $00, $66, $07, $0F, $66, $66
                dc.b    $66, $10, $11, $11, $11, $10, $06, $66, $66, $77, $00, $77, $07, $02, $0A, $77
                dc.b    $70, $06, $00, $77, $77, $66, $00, $77, $77, $02, $01, $77, $06, $08, $06, $11
                dc.b    $11, $10, $60, $01, $16, $61, $02, $02, $70, $07, $02, $02, $07, $70, $02, $02
                dc.b    $77, $70, $03, $01, $77, $02, $02, $70, $77, $02, $01, $77, $02, $07, $01, $11
                dc.b    $61, $00, $01, $66, $61, $02, $02, $77, $70, $03, $01, $70, $02, $02, $77, $70
                dc.b    $02, $01, $77, $0A, $07, $01, $11, $11, $8F, $EE, $EE, $99, $1E, $0E, $07, $07
                dc.b    $01, $10, $07, $07, $70, $11, $00, $70, $00, $01, $10, $07, $02, $01, $11, $03
                dc.b    $02, $01, $11, $03, $01, $16, $03, $0D, $70, $61, $00, $77, $07, $10, $07, $00
                dc.b    $07, $01, $10, $00, $07, $03, $0B, $70, $01, $10, $07, $00, $11, $70, $70, $00
                dc.b    $67, $07, $03, $01, $70, $02, $03, $77, $00, $01, $07, $01, $10, $06, $01, $01
                dc.b    $03, $01, $10, $02, $02, $01, $01, $02, $07, $10, $10, $10, $00, $01, $70, $01
                dc.b    $02, $02, $77, $70, $02, $02, $07, $70, $08, $01, $77, $08, $01, $01, $03, $01
                dc.b    $11, $02, $01, $77, $0C, $01, $70, $0D, $06, $01, $11, $70, $00, $01, $11, $0F
                dc.b    $01, $77, $08, $01, $11, $03, $01, $11, $02, $01, $76, $0C, $01, $70, $0D, $0E
                dc.b    $01, $10, $CB, $BB, $BA, $AA, $03, $33, $33, $33, $00, $2B, $2B, $2B, $0F, $01
                dc.b    $0A, $03, $1B, $33, $03, $18, $18, $21, $33, $33, $32, $00, $2B, $21, $22, $33
                dc.b    $00, $33, $13, $2B, $0A, $31, $3B, $00, $33, $13, $20, $00, $31, $3B, $02, $02
                dc.b    $13, $20, $02, $0F, $03, $18, $18, $18, $00, $33, $33, $33, $33, $32, $1B, $2B
                dc.b    $2B, $31, $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $13
                dc.b    $02, $0E, $0B, $31, $18, $18, $18, $30, $33, $33, $33, $33, $2B, $2B, $2B, $2B
                dc.b    $0C, $01, $30, $03, $01, $3A, $03, $0C, $12, $18, $18, $18, $33, $33, $33, $33
                dc.b    $2B, $2B, $2B, $2B, $0F, $01, $0A, $03, $0C, $33, $18, $18, $18, $22, $33, $33
                dc.b    $33, $00, $2B, $2B, $2B, $0D, $01, $30, $03, $01, $3A, $03, $06, $12, $15, $F7
                dc.b    $FC, $00, $0D, $04, $01, $31, $06, $05, $0D, $00, $10, $00, $D0, $02, $01, $DD
                dc.b    $05, $06, $30, $10, $16, $66, $99, $88, $02, $02, $44, $44, $02, $02, $01, $11
                dc.b    $06, $02, $0C, $C0, $03, $01, $F1, $08, $04, $71, $00, $85, $DF, $03, $01, $07
                dc.b    $03, $01, $70, $0D, $0B, $01, $00, $07, $00, $01, $70, $07, $01, $00, $77, $77
                dc.b    $02, $01, $70, $02, $0E, $07, $00, $07, $00, $70, $00, $70, $07, $00, $07, $00
                dc.b    $70, $00, $70, $02, $01, $07, $03, $01, $70, $02, $01, $07, $02, $02, $01, $70
                dc.b    $02, $01, $10, $02, $02, $01, $01, $02, $0C, $10, $10, $00, $01, $01, $07, $00
                dc.b    $10, $10, $10, $01, $01, $02, $02, $10, $10, $02, $05, $01, $00, $01, $17, $10
                dc.b    $07, $01, $70, $07, $02, $60, $10, $0A, $04, $11, $10, $01, $77, $0A, $01, $11
                dc.b    $03, $01, $01, $03, $01, $10, $02, $0B, $11, $11, $66, $01, $11, $66, $66, $70
                dc.b    $00, $76, $77, $08, $01, $61, $03, $01, $01, $03, $01, $67, $03, $0C, $66, $11
                dc.b    $10, $00, $66, $61, $11, $00, $76, $70, $00, $77, $04, $0B, $14, $5A, $AA, $EE
                dc.b    $0F, $C3, $22, $11, $0F, $33, $11, $0D, $04, $65, $AA, $98, $88, $04, $0B, $EA
                dc.b    $AA, $54, $10, $12, $23, $CF, $00, $01, $13, $3F, $0D, $04, $31, $39, $0C, $BB
                dc.b    $02, $14, $33, $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $01, $31, $3B, $00
                dc.b    $03, $13, $20, $00, $01, $3B, $02, $02, $03, $20, $02, $01, $3B, $03, $01, $20
                dc.b    $1E, $01, $0B, $03, $01, $0B, $18, $1A, $18, $18, $18, $18, $33, $33, $32, $03
                dc.b    $2B, $21, $22, $3B, $00, $33, $13, $20, $0A, $31, $3B, $00, $33, $13, $20, $00
                dc.b    $31, $3B, $02, $02, $13, $20, $03, $01, $30, $02, $02, $33, $3A, $02, $07, $23
                dc.b    $13, $30, $00, $0B, $31, $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02
                dc.b    $02, $23, $13, $02, $08, $0B, $31, $19, $30, $00, $33, $31, $3A, $02, $07, $23
                dc.b    $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $13, $02, $02, $0B, $31, $03, $01
                dc.b    $23, $03, $06, $0B, $00, $B3, $A3, $A4, $CF, $1C, $04, $60, $00, $82, $DF, $0A
                dc.b    $02, $1D, $21, $02, $02, $01, $10, $02, $02, $83, $33, $02, $02, $0B, $FF, $02
                dc.b    $06, $10, $44, $71, $00, $06, $61, $02, $02, $07, $07, $18, $01, $01, $02, $02
                dc.b    $76, $77, $02, $05, $10, $07, $00, $01, $01, $03, $01, $10, $10, $05, $61, $00
                dc.b    $01, $17, $10, $0A, $01, $60, $05, $07, $11, $11, $66, $00, $11, $16, $66, $02
                dc.b    $06, $07, $00, $11, $10, $01, $77, $08, $02, $60, $10, $06, $09, $61, $11, $10
                dc.b    $00, $66, $11, $10, $00, $07, $03, $04, $71, $00, $01, $77, $1C, $04, $71, $00
                dc.b    $01, $76, $03, $01, $11, $02, $05, $11, $10, $00, $01, $10, $02, $07, $11, $00
                dc.b    $70, $71, $10, $07, $70, $02, $0B, $77, $01, $11, $00, $70, $11, $05, $AA, $99
                dc.b    $98, $15, $04, $01, $30, $02, $01, $77, $02, $03, $02, $77, $30, $02, $01, $15
                dc.b    $0B, $0E, $9C, $0F, $C3, $9A, $03, $2D, $CF, $00, $22, $02, $30, $00, $20, $10
                dc.b    $02, $02, $01, $3F, $03, $01, $F0, $03, $01, $DC, $03, $01, $13, $02, $06, $31
                dc.b    $09, $06, $B3, $03, $3A, $02, $03, $03, $13, $30, $02, $02, $31, $3A, $02, $07
                dc.b    $23, $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $13, $02, $03, $0B, $31, $1B
                dc.b    $02, $01, $28, $14, $01, $30, $03, $01, $3A, $03, $01, $0A, $1A, $01, $0A, $03
                dc.b    $01, $33, $02, $02, $0A, $21, $02, $14, $33, $13, $00, $0A, $31, $2B, $00, $33
                dc.b    $13, $20, $0A, $31, $3B, $00, $33, $13, $20, $00, $31, $3B, $02, $02, $13, $20
                dc.b    $02, $0F, $03, $18, $18, $18, $30, $13, $33, $33, $23, $12, $1B, $2B, $0B, $31
                dc.b    $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $13, $02, $02
                dc.b    $0B, $31, $02, $02, $0A, $33, $02, $01, $33, $02, $02, $0A, $31, $02, $0D, $33
                dc.b    $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $00, $31, $3B, $02, $02, $13, $20
                dc.b    $02, $04, $8B, $90, $90, $8C, $03, $01, $6E, $03, $01, $10, $02, $01, $06, $03
                dc.b    $02, $01, $F0, $06, $01, $60, $03, $17, $10, $10, $88, $77, $00, $FF, $11, $EF
                dc.b    $F0, $10, $00, $10, $F0, $16, $1E, $FE, $11, $60, $1F, $F1, $10, $00, $01, $05
                dc.b    $01, $16, $05, $0F, $AB, $A4, $53, $44, $14, $BA, $A9, $EE, $4F, $32, $21, $11
                dc.b    $00, $31, $10, $0E, $12, $0C, $C0, $00, $2A, $A5, $49, $88, $E9, $AA, $B4, $10
                dc.b    $11, $22, $2C, $40, $00, $11, $23, $11, $04, $89, $99, $AA, $27, $1C, $02, $89
                dc.b    $88, $03, $01, $11, $02, $02, $11, $03, $06, $01, $CC, $03, $03, $0F, $10, $77
                dc.b    $03, $01, $70, $05, $04, $2A, $8A, $06, $77, $10, $06, $07, $70, $01, $10, $00
                dc.b    $70, $04, $06, $01, $00, $67, $07, $00, $10, $16, $0A, $01, $10, $11, $07, $70
                dc.b    $11, $14, $AA, $E9, $8B, $09, $07, $F0, $33, $10, $14, $5A, $AA, $9A, $03, $01
                dc.b    $77, $04, $01, $10, $03, $04, $98, $9A, $A5, $67, $08, $09, $13, $30, $F0, $00
                dc.b    $9A, $AA, $54, $10, $70, $0B, $04, $C8, $A3, $A2, $A8, $03, $01, $0B, $18, $02
                dc.b    $02, $30, $02, $02, $31, $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02
                dc.b    $07, $23, $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $02, $02, $02, $01, $13
                dc.b    $03, $01, $13, $02, $14, $33, $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $0A
                dc.b    $31, $3B, $00, $33, $13, $20, $00, $20, $3B, $02, $01, $31, $03, $04, $33, $20
                dc.b    $00, $0B, $03, $01, $0B, $10, $0D, $03, $18, $18, $18, $33, $33, $33, $33, $0B
                dc.b    $2B, $2B, $30, $20, $13, $0D, $18, $18, $18, $00, $33, $33, $33, $30, $0B, $2B
                dc.b    $2B, $30, $20, $1B, $04, $90, $96, $E8, $12, $05, $01, $61, $05, $17, $10, $00
                dc.b    $01, $1F, $F1, $06, $11, $EF, $E1, $61, $0F, $01, $00, $01, $0F, $FE, $11, $FF
                dc.b    $00, $77, $88, $01, $01, $03, $01, $06, $06, $02, $0F, $10, $03, $01, $60, $02
                dc.b    $01, $01, $03, $01, $E6, $03, $07, $19, $96, $9B, $BB, $00, $0D, $20, $02, $02
                dc.b    $01, $10, $05, $0C, $4F, $03, $31, $10, $14, $BA, $A9, $9F, $00, $10, $00, $70
                dc.b    $04, $04, $89, $99, $AA, $27, $02, $02, $32, $D8, $02, $02, $32, $D0, $04, $0A
                dc.b    $11, $33, $0F, $40, $99, $AB, $B4, $10, $70, $01, $04, $06, $09, $81, $71, $00
                dc.b    $18, $FE, $18, $02, $99, $8A, $02, $04, $C2, $00, $11, $66, $02, $02, $11, $66
                dc.b    $04, $06, $D2, $10, $07, $00, $11, $30, $02, $02, $33, $0B, $02, $10, $FF, $B0
                dc.b    $16, $66, $44, $01, $11, $66, $00, $01, $11, $67, $61, $11, $10, $10, $04, $06
                dc.b    $07, $70, $01, $10, $00, $70, $04, $19, $01, $00, $66, $11, $10, $00, $61, $11
                dc.b    $10, $10, $01, $00, $06, $00, $01, $10, $07, $77, $00, $11, $00, $77, $00, $01
                dc.b    $11, $03, $02, $10, $11, $03, $01, $11, $08, $05, $71, $00, $01, $77, $01, $0B
                dc.b    $01, $11, $03, $01, $10, $0B, $04, $71, $00, $01, $77, $1C, $04, $C8, $A3, $A2
                dc.b    $A3, $17, $01, $0A, $03, $05, $33, $1B, $00, $0A, $22, $02, $14, $33, $13, $00
                dc.b    $0A, $31, $23, $00, $33, $13, $2B, $0A, $31, $3B, $00, $33, $13, $20, $00, $31
                dc.b    $3B, $02, $02, $13, $20, $02, $02, $33, $20, $02, $02, $31, $0A, $02, $07, $32
                dc.b    $13, $30, $00, $2B, $11, $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02
                dc.b    $02, $23, $13, $02, $11, $0B, $31, $18, $18, $18, $30, $00, $23, $33, $33, $03
                dc.b    $22, $1B, $2B, $00, $31, $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02
                dc.b    $02, $23, $13, $02, $0D, $0B, $31, $03, $18, $18, $33, $33, $33, $31, $00, $2B
                dc.b    $21, $21, $02, $0D, $33, $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $00, $31
                dc.b    $3B, $02, $02, $13, $20, $02, $01, $1B, $17, $01, $30, $03, $01, $3A, $03, $06
                dc.b    $ED, $E9, $09, $03, $00, $E0, $03, $10, $10, $11, $0F, $10, $FE, $FF, $F1, $1E
                dc.b    $FF, $01, $11, $F0, $10, $F1, $0F, $10, $02, $09, $10, $10, $10, $F0, $00, $EE
                dc.b    $11, $EE, $F0, $05, $0E, $E1, $11, $0F, $10, $F0, $00, $F1, $FE, $11, $10, $01
                dc.b    $10, $00, $10, $02, $01, $01, $02, $0A, $11, $10, $FF, $00, $EF, $F1, $EE, $FF
                dc.b    $00, $E0, $03, $10, $10, $11, $0F, $60, $FE, $FF, $F1, $7F, $FF, $01, $11, $F1
                dc.b    $10, $F1, $0F, $10, $02, $09, $10, $E0, $10, $F0, $00, $1E, $11, $EE, $F0, $02
                dc.b    $14, $01, $0F, $00, $E1, $10, $01, $10, $F0, $00, $F6, $FE, $11, $10, $06, $10
                dc.b    $00, $10, $01, $00, $01, $02, $09, $11, $10, $FF, $07, $07, $03, $DF, $8F, $70
                dc.b    $03, $01, $77, $03, $02, $33, $30, $02, $0B, $11, $11, $20, $00, $22, $22, $07
                dc.b    $07, $77, $77, $70, $05, $24, $75, $04, $47, $07, $00, $01, $02, $70, $00, $75
                dc.b    $11, $25, $10, $17, $52, $00, $01, $31, $76, $55, $30, $31, $70, $00, $11, $14
                dc.b    $36, $00, $03, $07, $05, $50, $30, $20, $73, $57, $03, $01, $07, $02, $12, $07
                dc.b    $77, $00, $01, $03, $33, $01, $30, $11, $11, $70, $12, $22, $22, $07, $77, $77
                dc.b    $77, $04, $06, $89, $9A, $AA, $AA, $00, $30, $05, $01, $DD, $02, $05, $0D, $00
                dc.b    $01, $00, $D0, $02, $01, $30, $03, $01, $13, $03, $06, $01, $D0, $00, $88, $88
                dc.b    $D0, $03, $01, $77, $04, $01, $70, $03, $01, $70, $02, $0C, $77, $DE, $77, $7A
                dc.b    $EE, $21, $FF, $F2, $11, $00, $11, $10, $02, $03, $EE, $32, $10, $03, $04, $10
                dc.b    $00, $0D, $02, $02, $02, $D3, $20, $02, $07, $21, $00, $01, $11, $00, $01, $10
                dc.b    $02, $0B, $10, $03, $33, $01, $03, $30, $00, $FD, $F5, $CF, $CD, $02, $1F, $33
                dc.b    $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $00, $31, $3B, $00, $02, $13, $20
                dc.b    $00, $01, $03, $18, $18, $33, $33, $33, $33, $0B, $2B, $2B, $2B, $20, $13, $0C
                dc.b    $18, $18, $18, $18, $33, $33, $33, $33, $2B, $2B, $2B, $20, $03, $01, $0B, $10
                dc.b    $0E, $18, $18, $18, $18, $33, $33, $33, $33, $32, $1B, $2B, $2B, $31, $3A, $02
                dc.b    $07, $23, $13, $30, $00, $0B, $31, $3A, $02, $13, $23, $13, $30, $00, $0B, $31
                dc.b    $3A, $18, $18, $30, $12, $33, $33, $33, $33, $2B, $2B, $21, $23, $02, $20, $33
                dc.b    $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $0A, $31, $3B, $00, $33, $13, $20
                dc.b    $00, $21, $03, $18, $18, $33, $33, $33, $33, $32, $1B, $2B, $30, $31, $3A, $02
                dc.b    $07, $23, $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $13, $02, $12, $0B, $31
                dc.b    $00, $18, $18, $30, $00, $33, $33, $33, $30, $C3, $CC, $CD, $CC, $0E, $10, $10
                dc.b    $02, $07, $1F, $FF, $F0, $01, $F1, $00, $0F, $04, $1A, $10, $00, $01, $0F, $01
                dc.b    $F1, $10, $F0, $00, $1F, $FF, $00, $EE, $E0, $00, $11, $FF, $F0, $10, $E1, $01
                dc.b    $10, $FE, $1F, $01, $0F, $03, $1F, $11, $00, $1F, $00, $1E, $11, $F0, $01, $01
                dc.b    $FF, $01, $10, $1E, $EE, $F1, $0E, $0F, $EF, $F0, $6E, $10, $10, $00, $60, $1F
                dc.b    $FF, $F0, $01, $F1, $00, $0F, $06, $42, $01, $0F, $01, $F1, $10, $F0, $60, $1F
                dc.b    $FF, $00, $8E, $E0, $00, $17, $FF, $F0, $10, $E6, $01, $10, $EE, $11, $01, $0F
                dc.b    $10, $0F, $00, $11, $00, $1F, $00, $1E, $11, $F1, $01, $01, $FF, $06, $10, $1E
                dc.b    $EE, $F7, $DE, $F7, $35, $48, $01, $00, $53, $30, $03, $05, $43, $33, $01, $12
                dc.b    $17, $00, $20, $21, $23, $33, $12, $12, $32, $66, $02, $02, $01, $22, $02, $06
                dc.b    $03, $33, $DC, $FE, $ED, $DD, $06, $05, $03, $33, $33, $33, $30, $04, $05, $11
                dc.b    $11, $11, $11, $01, $03, $01, $2E, $02, $02, $1F, $D0, $02, $0A, $1D, $00, $11
                dc.b    $10, $02, $D0, $33, $32, $11, $2D, $02, $09, $33, $12, $DD, $D0, $00, $32, $00
                dc.b    $0D, $DD, $04, $01, $DD, $04, $04, $77, $77, $77, $77, $04, $01, $70, $03, $02
                dc.b    $FA, $70, $02, $0A, $12, $F9, $A7, $77, $32, $11, $2F, $FF, $00, $31, $02, $06
                dc.b    $D0, $03, $10, $00, $E3, $33, $02, $03, $33, $30, $01, $02, $04, $03, $30, $00
                dc.b    $DD, $02, $04, $10, $00, $DD, $03, $03, $01, $D0, $07, $07, $D3, $10, $EE, $DD
                dc.b    $03, $22, $03, $02, $01, $DD, $02, $04, $DD, $00, $13, $0D, $06, $02, $01, $3D
                dc.b    $03, $02, $13, $D0, $02, $07, $01, $2E, $ED, $33, $33, $32, $24, $07, $01, $50
                dc.b    $06, $04, $55, $00, $55, $55, $06, $01, $30, $07, $05, $33, $33, $33, $33, $03
                dc.b    $05, $01, $11, $04, $01, $11, $02, $01, $10, $03, $01, $01, $05, $03, $33, $00
                dc.b    $01, $0F, $04, $10, $00, $11, $11, $0A, $01, $77, $02, $05, $07, $70, $77, $77
                dc.b    $70, $05, $01, $05, $03, $02, $05, $55, $04, $01, $55, $02, $03, $50, $33, $70
                dc.b    $02, $01, $30, $02, $02, $01, $12, $02, $02, $04, $41, $03, $01, $50, $06, $04
                dc.b    $55, $00, $55, $55, $06, $01, $30, $03, $0C, $21, $11, $21, $11, $12, $20, $30
                dc.b    $01, $03, $02, $22, $01, $02, $02, $11, $22, $03, $01, $11, $02, $01, $10, $03
                dc.b    $01, $01, $05, $04, $11, $22, $22, $33, $03, $07, $04, $00, $02, $00, $04, $22
                dc.b    $02, $03, $07, $22, $30, $00, $11, $11, $03, $33, $08, $04, $33, $33, $33, $33
                dc.b    $0C, $24, $01, $00, $20, $00, $31, $00, $20, $00, $04, $44, $00, $01, $70, $00
                dc.b    $41, $11, $64, $44, $41, $00, $02, $20, $00, $10, $30, $12, $20, $02, $03, $11
                dc.b    $02, $22, $00, $01, $11, $02, $03, $01, $11, $02, $03, $10, $70, $03, $02, $05
                dc.b    $77, $12, $22, $23, $34, $02, $01, $01, $03, $01, $01, $02, $01, $31, $02, $0C
                dc.b    $20, $31, $10, $00, $02, $20, $10, $10, $11, $13, $00, $10, $02, $0C, $33, $00
                dc.b    $33, $33, $23, $00, $40, $00, $10, $00, $04, $02, $03, $01, $42, $03, $07, $04
                dc.b    $00, $02, $55, $55, $11, $02, $03, $02, $10, $30, $02, $08, $01, $31, $11, $01
                dc.b    $11, $32, $00, $10, $02, $02, $20, $13, $03, $06, $13, $10, $00, $02, $00, $10
                dc.b    $02, $06, $20, $00, $11, $11, $13, $01, $03, $06, $31, $32, $33, $33, $30, $41
                dc.b    $03, $2C, $04, $04, $00, $01, $00, $04, $20, $01, $00, $40, $20, $00, $55, $50
                dc.b    $00, $10, $00, $01, $00, $10, $30, $00, $10, $10, $03, $30, $00, $10, $00, $03
                dc.b    $30, $00, $30, $10, $02, $00, $03, $11, $00, $03, $00, $01, $11, $23, $03, $01
                dc.b    $10, $02, $03, $10, $74, $03, $02, $07, $70, $52, $32, $23, $34, $74, $10, $04
                dc.b    $01, $01, $02, $02, $40, $01, $06, $01, $04, $06, $03, $70, $00, $03, $03, $01
                dc.b    $43, $07, $01, $51, $06, $04, $55, $00, $01, $55, $02, $01, $01, $03, $02, $10
                dc.b    $30, $02, $03, $01, $03, $30, $03, $05, $03, $33, $33, $30, $10, $02, $02, $03
                dc.b    $11, $03, $02, $01, $11, $04, $01, $11, $02, $03, $10, $70, $03, $02, $01, $77
                dc.b    $02, $03, $01, $17, $30, $12, $04, $10, $11, $11, $11, $05, $01, $77, $02, $05
                dc.b    $07, $70, $77, $77, $70, $04, $01, $07, $05, $01, $05, $03, $02, $05, $55, $04
                dc.b    $01, $07, $02, $05, $50, $70, $00, $05, $53, $03, $01, $03, $02, $01, $50, $06
                dc.b    $01, $55, $02, $01, $55, $07, $01, $30, $03, $0B, $21, $01, $11, $11, $00, $13
                dc.b    $20, $00, $20, $03, $32, $03, $09, $53, $02, $00, $10, $40, $02, $13, $10, $01
                dc.b    $04, $01, $01, $02, $08, $30, $01, $77, $30, $30, $00, $70, $70, $05, $05, $10
                dc.b    $07, $04, $00, $10, $06, $01, $01, $03, $03, $41, $00, $07, $02, $02, $03, $70
                dc.b    $02, $01, $03, $02, $01, $04, $0B, $06, $55, $03, $55, $55, $00, $13, $04, $01
                dc.b    $30, $03, $04, $21, $11, $11, $10, $02, $01, $01, $02, $02, $10, $01, $02, $06
                dc.b    $12, $30, $00, $20, $02, $20, $03, $03, $10, $20, $10, $02, $03, $20, $00, $10
                dc.b    $02, $02, $70, $10, $02, $01, $74, $04, $01, $02, $03, $01, $42, $0E, $03, $70
                dc.b    $00, $10, $02, $02, $04, $10, $0B, $01, $01, $02, $06, $55, $01, $00, $55, $00
                dc.b    $10, $05, $01, $30, $02, $05, $02, $65, $55, $51, $10, $03, $01, $03, $02, $01
                dc.b    $50, $06, $01, $55, $02, $16, $74, $11, $10, $00, $30, $01, $01, $11, $00, $01
                dc.b    $00, $20, $22, $21, $11, $31, $00, $03, $33, $33, $30, $10, $02, $02, $03, $11
                dc.b    $03, $02, $01, $11, $04, $13, $11, $11, $00, $10, $70, $00, $22, $23, $77, $04
                dc.b    $33, $33, $00, $04, $37, $77, $70, $00, $04, $03, $02, $40, $44, $02, $03, $44
                dc.b    $00, $40, $02, $0E, $20, $34, $00, $04, $20, $30, $00, $01, $00, $01, $44, $45
                dc.b    $44, $40, $07, $01, $50, $06, $04, $55, $00, $55, $55, $02, $01, $10, $03, $01
                dc.b    $01, $04, $01, $10, $02, $07, $10, $01, $33, $33, $10, $20, $20, $02, $02, $20
                dc.b    $02, $03, $0A, $40, $00, $04, $00, $42, $21, $04, $00, $02, $03, $02, $0B, $40
                dc.b    $00, $04, $33, $73, $34, $00, $77, $77, $70, $24, $03, $02, $20, $05, $03, $04
                dc.b    $45, $55, $00, $04, $02, $0C, $55, $04, $04, $50, $33, $00, $20, $00, $30, $00
                dc.b    $20, $40, $04, $04, $03, $00, $40, $01, $02, $01, $41, $03, $01, $01, $04, $02
                dc.b    $03, $10, $02, $01, $03, $03, $07, $04, $01, $22, $22, $27, $33, $20, $03, $01
                dc.b    $30, $03, $01, $32, $05, $04, $10, $00, $40, $11, $02, $02, $40, $30, $02, $01
                dc.b    $02, $03, $01, $02, $02, $07, $07, $00, $07, $77, $70, $00, $14, $03, $01, $10
                dc.b    $04, $09, $05, $00, $04, $00, $05, $55, $04, $04, $40, $02, $03, $04, $00, $50
                dc.b    $06, $01, $04, $02, $06, $04, $00, $50, $00, $04, $20, $03, $02, $20, $10, $0A
                dc.b    $07, $01, $00, $12, $22, $23, $22, $30, $03, $01, $20, $0B, $01, $40, $02, $04
                dc.b    $10, $41, $11, $11, $05, $01, $07, $02, $05, $07, $04, $77, $77, $70, $05, $01
                dc.b    $05, $02, $05, $03, $05, $55, $00, $03, $02, $01, $55, $02, $07, $50, $33, $40
                dc.b    $40, $00, $30, $40, $06, $01, $03, $02, $03, $50, $00, $04, $03, $02, $04, $05
                dc.b    $07, $01, $30, $02, $02, $20, $30, $02, $02, $20, $01, $03, $05, $01, $33, $33
                dc.b    $00, $01, $02, $05, $01, $00, $11, $00, $01, $02, $01, $11, $02, $01, $10, $03
                dc.b    $01, $01, $02, $0A, $01, $20, $00, $20, $01, $00, $10, $20, $00, $30, $03, $01
                dc.b    $30, $02, $01, $20, $02, $02, $04, $20, $02, $01, $04, $02, $07, $10, $00, $01
                dc.b    $01, $00, $10, $01, $02, $09, $31, $11, $13, $33, $33, $33, $32, $00, $03, $05
                dc.b    $01, $11, $04, $01, $01, $02, $02, $10, $31, $02, $01, $01, $05, $01, $03, $02
                dc.b    $02, $10, $30, $0A, $01, $03, $07, $04, $10, $11, $11, $11, $05, $0F, $BB, $B6
                dc.b    $54, $44, $0D, $E2, $11, $11, $F2, $11, $13, $33, $00, $10, $30, $02, $03, $03
                dc.b    $00, $DD, $02, $01, $0D, $02, $0B, $13, $0D, $00, $11, $11, $23, $ED, $11, $10
                dc.b    $01, $F3, $03, $01, $0F, $02, $01, $0E, $02, $0A, $0E, $E0, $FF, $EE, $E0, $FF
                dc.b    $11, $00, $0F, $11, $02, $01, $F1, $06, $02, $33, $C1, $02, $07, $CC, $CC, $10
                dc.b    $00, $11, $0C, $C1, $02, $03, $10, $0C, $D1, $02, $0C, $33, $3F, $00, $1F, $0F
                dc.b    $FF, $11, $FF, $E1, $11, $FF, $F1, $02, $04, $EE, $10, $01, $22, $02, $01, $13
                dc.b    $03, $0D, $03, $00, $21, $10, $11, $33, $DE, $32, $10, $11, $00, $D0, $31, $02
                dc.b    $0A, $D0, $30, $00, $DD, $03, $01, $00, $DD, $DE, $31, $03, $02, $D3, $10, $06
                dc.b    $01, $D0, $02, $04, $DD, $03, $00, $DD, $02, $0F, $10, $00, $03, $30, $00, $33
                dc.b    $30, $01, $00, $10, $03, $32, $22, $00, $30, $05, $01, $DD, $02, $05, $0D, $00
                dc.b    $01, $00, $D0, $02, $01, $30, $03, $01, $13, $04, $01, $D0, $02, $02, $01, $30
                dc.b    $03, $02, $1F, $D0, $03, $05, $2E, $11, $11, $11, $01, $03, $04, $11, $33, $33
                dc.b    $30, $03, $02, $03, $33, $04, $07, $22, $22, $0D, $DD, $00, $01, $D0, $02, $01
                dc.b    $13, $03, $01, $30, $02, $03, $01, $00, $D0, $03, $01, $0D, $04, $03, $DD, $00
                dc.b    $30, $02, $04, $01, $13, $0D, $DD, $02, $01, $D0, $02, $01, $13, $03, $01, $30
                dc.b    $02, $03, $01, $00, $D0, $03, $01, $0D, $04, $03, $DD, $00, $30, $02, $06, $10
                dc.b    $02, $22, $22, $11, $10, $02, $08, $FF, $F2, $11, $00, $77, $7A, $EE, $21, $02
                dc.b    $02, $77, $DE, $03, $01, $70, $03, $01, $70, $02, $09, $77, $00, $89, $9A, $DD
                dc.b    $DD, $01, $03, $30, $02, $0D, $10, $03, $33, $00, $01, $10, $00, $21, $00, $01
                dc.b    $11, $D3, $20, $02, $02, $0D, $02, $04, $0C, $10, $00, $FF, $33, $02, $22, $00
                dc.b    $10, $03, $33, $00, $01, $02, $08, $FF, $F2, $01, $10, $77, $7A, $9F, $21, $02
                dc.b    $02, $07, $AF, $03, $01, $07, $04, $04, $AA, $AA, $AA, $AA, $04, $02, $33, $30
                dc.b    $03, $04, $03, $33, $33, $11, $03, $05, $10, $11, $11, $11, $E2, $03, $02, $0D
                dc.b    $F1, $03, $03, $0E, $FF, $FF, $07, $09, $DD, $00, $0D, $DD, $00, $DD, $D0, $00
                dc.b    $32, $02, $11, $33, $12, $33, $32, $11, $2D, $11, $10, $02, $D0, $F2, $22, $12
                dc.b    $FF, $D0, $03, $10, $02, $01, $31, $02, $0A, $32, $11, $2F, $FF, $12, $F9, $A7
                dc.b    $77, $FA, $70, $02, $01, $70, $0E, $01, $07, $03, $01, $70, $02, $04, $77, $00
                dc.b    $77, $77, $09, $0C, $0D, $DD, $DD, $DD, $D0, $00, $03, $32, $22, $DD, $03, $01
                dc.b    $02, $02, $D0, $30, $02, $0B, $D0, $31, $00, $DE, $32, $10, $11, $21, $10, $11
                dc.b    $33, $02, $01, $03, $03, $08, $13, $00, $EE, $10, $01, $22, $FF, $F1, $02, $08
                dc.b    $11, $FF, $E1, $11, $00, $1F, $0F, $FF, $02, $10, $33, $3F, $00, $10, $0C, $D1
                dc.b    $11, $0C, $C1, $00, $CC, $CC, $10, $00, $33, $C1, $07, $01, $F1, $03, $0B, $0F
                dc.b    $11, $00, $EE, $E0, $FF, $11, $00, $0E, $E0, $FF, $02, $01, $0E, $04, $0C, $0F
                dc.b    $11, $10, $01, $F3, $11, $11, $23, $ED, $00, $13, $0D, $03, $01, $0D, $02, $1D
                dc.b    $03, $00, $DD, $00, $10, $30, $00, $F2, $11, $13, $33, $0D, $E2, $11, $11, $FF
                dc.b    $F2, $11, $12, $00, $01, $2E, $ED, $00, $13, $D0, $00, $01, $3D, $06, $02, $13
                dc.b    $0D, $04, $03, $DD, $00, $03, $02, $05, $DD, $66, $55, $55, $55, $80, $FC, $04
                dc.b    $FF, $FF, $FF, $FF, $07, $01, $07, $02, $0C, $07, $AF, $77, $7A, $9F, $21, $FF
                dc.b    $F2, $01, $10, $00, $01, $03, $09, $10, $03, $33, $FF, $E0, $12, $22, $0D, $F1
                dc.b    $02, $01, $E2, $03, $05, $10, $11, $11, $11, $11, $04, $05, $03, $33, $33, $33
                dc.b    $30, $06, $04, $11, $11, $16, $66, $02, $04, $07, $77, $05, $55, $02, $0A, $50
                dc.b    $00, $50, $00, $03, $30, $05, $55, $30, $03, $02, $10, $11, $00, $33, $33, $00
                dc.b    $11, $10, $01, $77, $70, $01, $17, $00, $07, $00, $70, $02, $0D, $77, $00, $55
                dc.b    $50, $00, $05, $00, $05, $00, $50, $33, $30, $55, $02, $0F, $03, $00, $03, $11
                dc.b    $00, $33, $31, $66, $77, $77, $76, $DD, $DD, $DD, $D0, $03, $01, $0D, $04, $02
                dc.b    $77, $77, $04, $01, $77, $04, $01, $70, $03, $05, $07, $AA, $AA, $99, $88, $02
                dc.b    $03, $30, $10, $DD, $04, $01, $D0, $03, $03, $0D, $00, $10, $06, $01, $31, $02
                dc.b    $01, $0D, $02, $0D, $99, $94, $76, $66, $00, $03, $30, $00, $30, $30, $03, $30
                dc.b    $03, $02, $09, $03, $10, $01, $11, $00, $01, $10, $00, $10, $03, $03, $01, $07
                dc.b    $77, $02, $06, $25, $55, $22, $22, $03, $30, $02, $04, $30, $03, $00, $03, $02
                dc.b    $0D, $33, $30, $00, $11, $00, $01, $01, $00, $10, $10, $10, $00, $01, $05, $04
                dc.b    $33, $33, $33, $33, $06, $02, $08, $80, $02, $02, $87, $78, $02, $02, $70, $07
                dc.b    $02, $01, $70, $03, $1B, $87, $00, $0F, $F0, $08, $00, $0F, $F0, $11, $EE, $00
                dc.b    $01, $33, $33, $01, $01, $0A, $A0, $01, $00, $A7, $7A, $80, $08, $70, $07, $78
                dc.b    $04, $01, $08, $02, $01, $07, $03, $04, $DD, $22, $DC, $CC, $0C, $1F, $A0, $00
                dc.b    $10, $00, $71, $11, $BC, $B0, $00, $0B, $70, $7B, $00, $07, $00, $07, $B7, $0C
                dc.b    $CC, $CB, $70, $BB, $77, $70, $0C, $77, $C0, $00, $07, $00, $70, $03, $01, $0C
                dc.b    $03, $02, $07, $55, $03, $02, $33, $B0, $02, $05, $3A, $CB, $BB, $BB, $59, $06
                dc.b    $02, $0B, $50, $02, $01, $0B, $02, $1A, $CC, $55, $09, $5C, $77, $90, $07, $97
                dc.b    $00, $70, $90, $70, $00, $09, $70, $DE, $77, $E9, $EE, $AE, $77, $93, $33, $70
                dc.b    $00, $70, $03, $02, $71, $0A, $02, $02, $B0, $A7, $02, $02, $1A, $70, $02, $01
                dc.b    $01, $03, $0D, $A7, $00, $DE, $77, $9F, $FF, $AE, $77, $92, $00, $70, $00, $70
                dc.b    $03, $02, $71, $08, $02, $02, $B0, $87, $02, $02, $1A, $70, $02, $01, $01, $03
                dc.b    $0A, $A7, $00, $FF, $70, $8F, $60, $00, $8F, $00, $97, $02, $02, $08, $88, $02
                dc.b    $02, $97, $78, $02, $02, $90, $07, $02, $01, $07, $03, $02, $08, $70, $03, $07
                dc.b    $87, $FF, $80, $FF, $F7, $00, $78, $03, $01, $07, $16, $02, $7B, $70, $02, $02
                dc.b    $B0, $70, $02, $01, $0C, $03, $01, $B7, $03, $01, $70, $12, $01, $E0, $07, $01
                dc.b    $80, $03, $01, $10, $03, $01, $70, $4C, $04, $FF, $FF, $FF, $FF, $1C, $04, $DD
                dc.b    $CC, $CB, $BB, $02, $02, $70, $07, $02, $02, $07, $70, $02, $02, $77, $70, $03
                dc.b    $01, $77, $02, $02, $70, $77, $02, $01, $77, $02, $07, $11, $11, $61, $00, $11
                dc.b    $66, $61, $02, $02, $77, $70, $03, $01, $70, $02, $02, $77, $70, $02, $01, $77
                dc.b    $0A, $03, $11, $11, $11, $00, $15, $69, $0A, $00, $15, $00, $97, $00, $14, $00
                dc.b    $97, $00, $01, $05, $3B, $0E, $00, $0F, $00, $10, $00, $10, $21, $78, $29, $79
                dc.b    $00, $10, $00, $10, $00, $F0, $08, $F1, $00, $10, $00, $10, $00, $1E, $00, $10
                dc.b    $00, $10, $00, $10, $00, $1E, $00, $1E, $00, $10, $00, $10, $21, $86, $21, $A8
                dc.b    $00, $30, $00, $07, $08, $11, $08, $26, $00, $07, $00, $30, $08, $36, $08, $21
                dc.b    $03, $17, $10, $00, $02, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00
                dc.b    $10, $00, $10, $00, $12, $08, $12, $00, $10, $02, $04, $08, $11, $00, $21, $03
                dc.b    $17, $21, $00, $22, $00, $23, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10
                dc.b    $00, $10, $00, $12, $08, $32, $08, $21, $05, $01, $07, $03, $17, $10, $00, $08
                dc.b    $00, $1E, $00, $10, $00, $10, $00, $1C, $00, $1C, $00, $10, $00, $10, $00, $12
                dc.b    $00, $15, $00, $10, $03, $03, $16, $00, $27, $03, $17, $10, $00, $28, $00, $1E
                dc.b    $00, $10, $00, $10, $00, $1C, $00, $1C, $00, $10, $00, $10, $00, $12, $00, $35
                dc.b    $00, $26, $09, $17, $1A, $00, $0B, $00, $16, $00, $10, $00, $10, $08, $17, $08
                dc.b    $17, $00, $10, $00, $10, $08, $1C, $08, $1B, $08, $1A, $02, $04, $08, $1A, $00
                dc.b    $2A, $05, $03, $2B, $00, $06, $04, $04, $08, $07, $08, $07, $05, $03, $06, $08
                dc.b    $2B, $04, $04, $08, $2A, $00, $3A, $03, $17, $30, $00, $3B, $00, $36, $00, $2B
                dc.b    $00, $0D, $08, $2C, $08, $0A, $00, $0D, $00, $2B, $00, $0B, $08, $10, $00, $30
                dc.b    $02, $14, $08, $2A, $00, $36, $00, $10, $00, $3B, $08, $06, $08, $2D, $00, $3B
                dc.b    $00, $10, $08, $3D, $08, $3D, $04, $04, $08, $3D, $08, $3D, $04, $24, $E8, $E5
                dc.b    $E8, $D9, $00, $10, $00, $10, $00, $11, $00, $10, $00, $10, $00, $10, $00, $10
                dc.b    $08, $11, $00, $10, $00, $10, $00, $12, $00, $13, $00, $10, $00, $10, $00, $21
                dc.b    $08, $20, $05, $2F, $30, $00, $3C, $00, $10, $08, $1D, $00, $36, $08, $37, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $32, $00, $32, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $34, $00, $34, $00
                dc.b    $10, $00, $10, $05, $80, $E7, $2A, $00, $2C, $01, $B0, $01, $B6, $00, $10, $00
                dc.b    $10, $00, $12, $00, $12, $00, $10, $00, $32, $00, $16, $00, $30, $00, $36, $00
                dc.b    $10, $00, $30, $00, $14, $00, $10, $00, $10, $00, $32, $00, $34, $00, $10, $00
                dc.b    $10, $00, $12, $00, $F0, $00, $10, $00, $D0, $00, $F0, $00, $30, $00, $D0, $00
                dc.b    $10, $00, $30, $00, $14, $00, $10, $00, $10, $00, $F2, $00, $F4, $00, $10, $00
                dc.b    $10, $00, $12, $00, $F0, $00, $10, $00, $F2, $00, $F0, $00, $12, $00, $F6, $00
                dc.b    $10, $00, $16, $00, $14, $00, $10, $00, $10, $00, $11, $00, $D6, $00, $F3, $00
                dc.b    $32, $00, $34, $00, $F5, $00, $36, $00, $F1, $00, $F2, $00, $F4, $00, $D0, $00
                dc.b    $D0, $00, $D2, $00, $D4, $00, $D0, $00, $D0, $00, $32, $00, $34, $00, $13, $00
                dc.b    $F2, $00, $11, $00, $F6, $00, $F6, $00, $11, $00, $D0, $00, $27, $00, $36, $00
                dc.b    $02, $00, $26, $00, $30, $00, $06, $00, $10, $00, $30, $00, $12, $00, $10, $00
                dc.b    $32, $00, $16, $00, $14, $00, $36, $00, $10, $00, $D8, $00, $DE, $01, $73, $01
                dc.b    $70, $09, $72, $01, $77, $01, $70, $01, $75, $08, $12, $00, $12, $00, $20, $01
                dc.b    $71, $00, $20, $01, $71, $00, $10, $00, $10, $08, $12, $00, $12, $00, $10, $00
                dc.b    $10, $C1, $9C, $C1, $9E, $00, $10, $00, $10, $29, $47, $21, $7A, $04, $04, $08
                dc.b    $3D, $08, $3D, $04, $1E, $E9, $E3, $E9, $DF, $00, $04, $00, $04, $61, $AA, $61
                dc.b    $AA, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $00
                dc.b    $53, $00, $10, $03, $33, $34, $00, $61, $00, $10, $00, $10, $00, $12, $00, $12
                dc.b    $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $08, $11, $00, $12, $08, $13
                dc.b    $08, $15, $00, $16, $08, $1B, $00, $18, $00, $19, $00, $10, $00, $1B, $00, $12
                dc.b    $00, $10, $00, $10, $00, $0A, $00, $0A, $05, $80, $93, $F2, $00, $F2, $00, $10
                dc.b    $00, $F2, $00, $16, $08, $F5, $00, $F5, $08, $11, $08, $F2, $00, $12, $08, $15
                dc.b    $00, $10, $00, $36, $00, $36, $00, $10, $00, $10, $00, $12, $00, $C0, $00, $10
                dc.b    $00, $C2, $00, $C3, $00, $16, $00, $C5, $00, $10, $00, $12, $00, $12, $00, $10
                dc.b    $00, $10, $00, $76, $00, $76, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10
                dc.b    $00, $10, $00, $16, $00, $16, $00, $10, $00, $16, $00, $12, $00, $14, $00, $10
                dc.b    $00, $10, $E1, $74, $E1, $74, $E1, $7A, $00, $19, $E1, $78, $00, $1B, $00, $1B
                dc.b    $00, $03, $E1, $5B, $E1, $43, $00, $E0, $00, $10, $00, $E2, $00, $12, $00, $10
                dc.b    $00, $10, $00, $84, $00, $79, $00, $F0, $00, $33, $00, $2E, $E1, $05, $00, $10
                dc.b    $01, $BC, $E1, $05, $01, $A1, $00, $03, $00, $10, $E1, $BE, $E1, $F4, $03, $15
                dc.b    $10, $00, $46, $00, $12, $00, $10, $00, $10, $00, $1E, $00, $1E, $00, $10, $00
                dc.b    $10, $E0, $58, $E1, $E6, $03, $05, $7F, $E0, $00, $E1, $8A, $03, $15, $10, $00
                dc.b    $4B, $00, $16, $00, $10, $00, $10, $00, $10, $00, $11, $00, $10, $00, $10, $00
                dc.b    $15, $00, $12, $04, $4E, $E1, $8F, $E1, $EC, $00, $03, $00, $10, $E1, $AE, $E1
                dc.b    $DE, $00, $10, $00, $10, $00, $37, $00, $31, $00, $10, $00, $51, $00, $76, $00
                dc.b    $33, $00, $10, $00, $10, $00, $12, $00, $A7, $00, $10, $00, $30, $00, $3F, $00
                dc.b    $F6, $00, $6E, $00, $30, $E1, $AD, $E1, $CE, $01, $C3, $00, $65, $E0, $8B, $E1
                dc.b    $88, $00, $11, $00, $D7, $00, $D1, $00, $D7, $00, $D7, $00, $D1, $00, $1C, $00
                dc.b    $2C, $00, $10, $03, $03, $21, $00, $30, $03, $15, $10, $00, $FF, $00, $DE, $00
                dc.b    $39, $00, $37, $00, $09, $00, $07, $00, $F0, $00, $F0, $E0, $8E, $E1, $4A, $03
                dc.b    $3D, $03, $E0, $9E, $E1, $59, $00, $30, $00, $30, $00, $04, $00, $04, $00, $10
                dc.b    $00, $10, $00, $16, $00, $16, $00, $10, $00, $10, $00, $2F, $00, $29, $00, $30
                dc.b    $00, $30, $00, $2F, $00, $29, $00, $32, $00, $32, $00, $6B, $00, $5A, $00, $21
                dc.b    $00, $10, $00, $12, $00, $80, $00, $10, $00, $F0, $E0, $F6, $E1, $42, $03, $3F
                dc.b    $0F, $01, $A4, $00, $6D, $00, $14, $00, $14, $00, $16, $00, $16, $00, $14, $00
                dc.b    $14, $01, $B2, $01, $B3, $01, $A8, $01, $A9, $00, $08, $00, $08, $00, $10, $00
                dc.b    $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $18, $01, $B3, $00, $1A, $01
                dc.b    $AB, $00, $1A, $01, $AB, $00, $1A, $01, $AB, $00, $1C, $01, $AB, $00, $01, $03
                dc.b    $0D, $0F, $01, $AE, $00, $10, $00, $01, $00, $06, $01, $AF, $00, $01, $03, $01
                dc.b    $03, $03, $41, $06, $01, $B7, $00, $12, $00, $0F, $00, $10, $00, $01, $00, $12
                dc.b    $00, $70, $00, $10, $00, $03, $00, $40, $00, $3B, $00, $07, $00, $09, $00, $05
                dc.b    $00, $0B, $00, $0B, $00, $09, $00, $0D, $00, $0F, $00, $0F, $00, $09, $00, $09
                dc.b    $00, $0F, $00, $0B, $00, $09, $00, $0D, $00, $0C, $00, $0F, $00, $0A, $08, $0B
                dc.b    $01, $FC, $00, $07, $02, $0A, $E9, $7F, $E0, $89, $00, $10, $00, $89, $00, $50
                dc.b    $03, $0F, $10, $00, $5E, $00, $D6, $00, $51, $00, $10, $00, $10, $80, $1E, $80
                dc.b    $1F, $26, $01, $80, $05, $01, $80, $37, $01, $80, $07, $01, $80, $67, $03, $80
                dc.b    $00, $80, $4D, $03, $80, $00, $80, $2D, $03, $80, $00, $80, $0D, $03, $80, $00
                dc.b    $80, $6D, $03, $80, $00, $80, $81, $0E, $04, $FF, $00, $FF, $FF, $02, $03, $FF
                dc.b    $FF, $FF, $1E, $04, $FF, $FF, $FF, $FF, $08, $04, $FF, $FF, $FF, $FF, $15, $02
                dc.b    $FF, $FF, $02, $09, $FF, $00, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $11, $02, $CC
                dc.b    $CC, $02, $03, $CC, $33, $FF, $04, $03, $FF, $00, $FF, $02, $14, $FF, $00, $FF
                dc.b    $FF, $00, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
                dc.b    $FF, $13, $01, $FF, $03, $01, $FF, $81, $AF, $05, $2E, $4D, $4E, $4D, $60, $04
                dc.b    $01, $01, $03, $01, $01, $09, $05, $7C, $4F, $4C, $4F, $30, $2A, $07, $52, $55
                dc.b    $54, $01, $53, $54, $55, $06, $0D, $1C, $1D, $1E, $1F, $1C, $01, $03, $01, $1F
                dc.b    $1C, $1D, $1E, $1F, $37, $06, $2D, $34, $35, $36, $18, $02, $02, $06, $02, $1A
                dc.b    $35, $36, $37, $2C, $09, $01, $2D, $03, $01, $2D, $2A, $0A, $56, $57, $58, $59
                dc.b    $0C, $0C, $58, $59, $5A, $5B, $03, $0D, $20, $21, $22, $23, $20, $01, $03, $01
                dc.b    $23, $20, $21, $22, $23, $37, $06, $2C, $38, $39, $3A, $15, $02, $02, $06, $02
                dc.b    $17, $39, $3A, $3B, $2D, $09, $01, $2C, $03, $01, $2C, $2A, $0C, $5C, $5D, $5E
                dc.b    $5F, $FC, $D0, $D0, $D0, $A0, $8D, $8E, $8F, $02, $02, $50, $51, $02, $03, $50
                dc.b    $01, $51, $02, $02, $50, $51, $22, $05, $2E, $4D, $4E, $4D, $60, $0C, $0B, $67
                dc.b    $4E, $4D, $4E, $2A, $2D, $3C, $3D, $3E, $10, $02, $02, $06, $02, $12, $3D, $3E
                dc.b    $3F, $2C, $09, $01, $2D, $03, $01, $2D, $2A, $10, $60, $61, $62, $63, $F0, $F0
                dc.b    $F2, $F2, $02, $91, $90, $91, $92, $00, $50, $51, $02, $03, $50, $01, $51, $02
                dc.b    $02, $50, $51, $22, $01, $2C, $03, $01, $2C, $11, $01, $2C, $03, $02, $2C, $32
                dc.b    $03, $09, $1F, $34, $35, $36, $1A, $06, $35, $36, $37, $04, $02, $32, $2C, $03
                dc.b    $01, $2C, $2A, $1A, $64, $65, $66, $67, $C5, $F5, $F7, $F7, $30, $03, $91, $90
                dc.b    $91, $9B, $09, $0A, $0B, $08, $01, $03, $01, $0B, $08, $09, $0A, $0B, $21, $01
                dc.b    $2D, $03, $01, $2D, $11, $01, $2D, $03, $02, $2D, $2D, $03, $09, $01, $38, $39
                dc.b    $3A, $17, $15, $39, $3A, $3B, $04, $02, $2D, $2D, $03, $01, $2D, $2A, $1A, $6A
                dc.b    $6B, $6B, $6B, $06, $06, $05, $FA, $FC, $FC, $FA, $91, $90, $9D, $99, $0E, $0F
                dc.b    $0C, $01, $03, $01, $0F, $0C, $0D, $0E, $0F, $21, $01, $2C, $03, $01, $2C, $11
                dc.b    $01, $2C, $03, $02, $2C, $2C, $03, $09, $01, $3C, $3D, $3E, $12, $10, $3D, $3E
                dc.b    $3F, $04, $02, $2C, $2C, $03, $01, $2C, $2A, $1A, $6F, $70, $70, $70, $1E, $A1
                dc.b    $02, $E0, $E0, $41, $E7, $90, $91, $80, $84, $12, $13, $10, $01, $03, $01, $13
                dc.b    $10, $11, $12, $13, $21, $01, $2D, $03, $07, $2D, $00, $28, $2B, $29, $2B, $01
                dc.b    $07, $05, $03, $2B, $29, $2B, $19, $03, $02, $33, $2D, $03, $0A, $1D, $4D, $4E
                dc.b    $4D, $7E, $62, $7A, $78, $0F, $02, $02, $07, $77, $1A, $07, $35, $36, $37, $33
                dc.b    $2A, $1A, $73, $74, $74, $75, $05, $74, $74, $02, $E6, $91, $90, $E1, $90, $85
                dc.b    $85, $80, $17, $14, $01, $03, $01, $17, $14, $15, $16, $17, $21, $01, $2C, $03
                dc.b    $01, $2C, $16, $01, $2C, $03, $01, $2C, $03, $0F, $40, $46, $47, $39, $03, $6A
                dc.b    $7F, $00, $79, $64, $71, $39, $3A, $48, $49, $29, $1B, $7C, $78, $79, $7A, $07
                dc.b    $0E, $79, $7A, $06, $E7, $90, $91, $EA, $91, $88, $88, $8D, $1B, $18, $01, $03
                dc.b    $01, $1B, $18, $19, $1A, $1B, $21, $01, $2D, $03, $01, $2D, $16, $01, $2D, $03
                dc.b    $01, $2D, $03, $0F, $42, $3A, $39, $3A, $79, $17, $7B, $00, $02, $17, $79, $3A
                dc.b    $39, $3A, $3B, $29, $1B, $83, $7E, $7F, $80, $02, $FC, $7F, $80, $05, $12, $91
                dc.b    $90, $1C, $90, $8D, $8D, $86, $1F, $1C, $01, $03, $01, $1F, $1C, $1D, $1E, $1F
                dc.b    $21, $01, $2C, $03, $01, $2C, $16, $01, $2C, $03, $01, $2C, $03, $0F, $44, $3E
                dc.b    $3D, $3E, $7B, $12, $79, $00, $02, $12, $7B, $3E, $3D, $3E, $3F, $29, $1B, $85
                dc.b    $86, $87, $88, $0C, $0C, $0C, $88, $13, $11, $17, $9D, $04, $04, $80, $80, $80
                dc.b    $80, $1C, $01, $03, $01, $1F, $1C, $1D, $1E, $1F, $11, $04, $01, $01, $01, $01
                dc.b    $0B, $06, $4C, $4A, $4C, $4F, $00, $05, $16, $01, $07, $03, $01, $07, $08, $01
                dc.b    $05, $03, $06, $05, $64, $4F, $4C, $4F, $28, $2B, $04, $53, $53, $53, $53, $11
                dc.b    $04, $F0, $F0, $F0, $F0, $08, $04, $A2, $A2, $A2, $A2, $84, $24, $00, $15, $69
                dc.b    $0A, $00, $15, $00, $97, $00, $14, $20, $97, $20, $01, $04, $38, $41, $00, $41
                dc.b    $01, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $00
                dc.b    $16, $00, $10, $00, $10, $00, $34, $00, $34, $00, $10, $00, $10, $00, $12, $00
                dc.b    $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $00, $10, $00, $32, $00
                dc.b    $22, $00, $10, $00, $30, $03, $29, $20, $00, $30, $00, $10, $00, $10, $00, $1E
                dc.b    $00, $01, $00, $11, $00, $2F, $00, $01, $00, $01, $00, $11, $00, $11, $00, $01
                dc.b    $00, $01, $00, $11, $00, $F7, $00, $11, $00, $01, $00, $11, $60, $A3, $60, $67
                dc.b    $05, $33, $50, $00, $72, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $00, $32, $00, $32, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $00, $72, $00, $72, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $00, $02, $00, $32, $03, $37, $10, $00, $32, $00, $12, $00, $10, $00, $10
                dc.b    $00, $56, $00, $56, $00, $10, $00, $10, $00, $12, $00, $46, $00, $10, $00, $44
                dc.b    $00, $72, $00, $72, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10
                dc.b    $00, $32, $00, $32, $00, $10, $00, $10, $00, $12, $00, $06, $00, $10, $03, $03
                dc.b    $26, $00, $38, $03, $15, $10, $00, $37, $00, $3B, $00, $10, $00, $10, $00, $71
                dc.b    $08, $76, $00, $10, $00, $10, $00, $4C, $00, $4C, $04, $80, $B4, $60, $9D, $60
                dc.b    $4D, $00, $10, $00, $C0, $00, $17, $00, $17, $00, $10, $00, $10, $00, $11, $00
                dc.b    $11, $00, $10, $00, $10, $00, $13, $00, $13, $00, $10, $00, $E5, $08, $01, $00
                dc.b    $E4, $00, $0A, $00, $1B, $08, $1A, $08, $0B, $00, $1B, $00, $0A, $08, $0D, $08
                dc.b    $0D, $08, $03, $00, $0A, $00, $02, $08, $0B, $00, $0A, $08, $03, $08, $05, $00
                dc.b    $0C, $00, $91, $00, $0C, $08, $90, $08, $0D, $00, $0C, $00, $91, $00, $0C, $08
                dc.b    $DD, $00, $0C, $00, $48, $00, $41, $00, $05, $00, $48, $00, $0C, $00, $03, $00
                dc.b    $36, $00, $01, $00, $04, $00, $3D, $00, $38, $00, $04, $00, $01, $00, $04, $08
                dc.b    $3C, $00, $04, $00, $04, $08, $05, $08, $05, $00, $04, $00, $04, $08, $64, $00
                dc.b    $04, $00, $11, $08, $71, $00, $70, $08, $10, $08, $71, $00, $11, $08, $13, $08
                dc.b    $13, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $51, $00
                dc.b    $50, $00, $E5, $00, $10, $00, $30, $00, $15, $00, $C0, $00, $10, $61, $DB, $69
                dc.b    $DB, $0C, $06, $61, $EC, $01, $56, $00, $04, $02, $0E, $08, $05, $00, $5C, $00
                dc.b    $04, $00, $10, $08, $05, $00, $4C, $08, $71, $03, $0D, $12, $00, $5C, $00, $10
                dc.b    $00, $10, $08, $84, $00, $4C, $00, $C0, $03, $0D, $17, $00, $5C, $00, $10, $00
                dc.b    $10, $00, $11, $00, $4C, $00, $10, $03, $0D, $13, $00, $5C, $00, $10, $00, $10
                dc.b    $00, $11, $00, $4C, $00, $1B, $03, $0D, $0C, $00, $5C, $00, $0A, $00, $10, $00
                dc.b    $04, $00, $4C, $00, $0C, $03, $0B, $41, $00, $5C, $00, $48, $00, $10, $68, $85
                dc.b    $68, $F6, $03, $0D, $04, $00, $5C, $08, $05, $00, $10, $00, $04, $00, $4C, $08
                dc.b    $05, $02, $0E, $08, $71, $00, $5C, $00, $12, $00, $10, $00, $10, $00, $4C, $08
                dc.b    $84, $03, $0D, $C0, $00, $5C, $00, $17, $00, $10, $00, $10, $00, $4C, $00, $11
                dc.b    $03, $0D, $10, $00, $5C, $00, $13, $00, $10, $00, $10, $00, $4C, $00, $11, $03
                dc.b    $0D, $1B, $00, $5C, $00, $0C, $00, $10, $00, $0A, $00, $4C, $00, $04, $03, $0D
                dc.b    $0C, $00, $5C, $00, $41, $00, $10, $00, $48, $09, $1A, $69, $D3, $7C, $03, $20
                dc.b    $00, $20, $05, $03, $20, $00, $20, $80, $F5, $03, $20, $00, $20, $05, $03, $20
                dc.b    $00, $20, $80, $F5, $03, $20, $00, $20, $05, $03, $20, $00, $20, $80, $F5, $03
                dc.b    $20, $00, $20, $05, $03, $20, $00, $20, $80, $F5, $03, $20, $00, $20, $05, $03
                dc.b    $20, $00, $20, $82, $8D, $06, $0E, $0F, $12, $13, $18, $18, $02, $02, $18, $18
                dc.b    $02, $02, $18, $18, $02, $02, $18, $18, $02, $02, $18, $18, $02, $02, $18, $18
                dc.b    $02, $02, $18, $18, $02, $08, $18, $18, $2A, $57, $23, $23, $15, $68, $0E, $2F
                dc.b    $21, $2B, $26, $26, $07, $00, $02, $00, $0C, $0C, $03, $01, $00, $02, $00, $0C
                dc.b    $0C, $03, $01, $00, $02, $00, $0C, $0C, $03, $01, $00, $02, $00, $0C, $0C, $03
                dc.b    $01, $00, $02, $00, $0C, $0C, $03, $01, $00, $02, $00, $0B, $07, $09, $0A, $32
                dc.b    $06, $10, $11, $14, $15, $08, $08, $02, $02, $08, $08, $02, $02, $08, $08, $02
                dc.b    $02, $08, $08, $02, $02, $08, $08, $02, $02, $08, $08, $02, $02, $08, $08, $02
                dc.b    $08, $08, $08, $2D, $50, $3F, $3F, $16, $6B, $0E, $2F, $23, $26, $2E, $2C, $0F
                dc.b    $00, $08, $08, $0B, $09, $0B, $09, $00, $08, $08, $0B, $09, $0B, $09, $00, $08
                dc.b    $08, $0B, $09, $0B, $09, $00, $08, $08, $0B, $09, $0B, $09, $00, $08, $08, $0B
                dc.b    $09, $0B, $09, $00, $08, $08, $03, $08, $09, $0A, $32, $28, $12, $13, $0E, $0F
                dc.b    $08, $08, $18, $18, $08, $08, $18, $18, $08, $08, $18, $18, $08, $08, $18, $18
                dc.b    $08, $08, $18, $18, $08, $08, $18, $18, $08, $08, $18, $18, $08, $08, $2C, $51
                dc.b    $23, $23, $0B, $76, $0E, $2F, $3D, $37, $35, $35, $0A, $00, $0D, $0F, $01, $03
                dc.b    $0C, $0C, $00, $0D, $0F, $01, $03, $0C, $0C, $00, $0D, $0F, $01, $03, $0C, $0C
                dc.b    $00, $0D, $0F, $01, $03, $0C, $0C, $00, $0D, $0F, $01, $03, $0C, $0C, $00, $0D
                dc.b    $0F, $06, $07, $09, $0A, $32, $28, $14, $15, $10, $11, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $23, $5E, $27, $27, $08, $75, $0E
                dc.b    $05, $3F, $3A, $3A, $38, $07, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01
                dc.b    $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04
                dc.b    $03, $01, $03, $01, $03, $04, $0B, $08, $09, $0A, $32, $28, $16, $17, $0D, $0D
                dc.b    $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A
                dc.b    $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $2A, $5F
                dc.b    $23, $37, $09, $68, $0E, $05, $39, $27, $3C, $2A, $07, $03, $04, $0C, $0E, $03
                dc.b    $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C
                dc.b    $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0B, $07, $09, $0A, $32
                dc.b    $28, $18, $19, $0E, $0F, $0E, $0E, $16, $16, $0E, $0E, $16, $16, $0E, $0E, $16
                dc.b    $16, $0E, $0E, $16, $16, $0E, $0E, $16, $16, $0E, $0E, $16, $16, $0E, $0E, $16
                dc.b    $16, $0E, $0E, $25, $50, $39, $38, $1C, $68, $0E, $05, $2D, $29, $28, $2B, $07
                dc.b    $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01
                dc.b    $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04
                dc.b    $0B, $08, $09, $0A, $32, $28, $1A, $1B, $10, $11, $02, $02, $1E, $1E, $02, $02
                dc.b    $1E, $1E, $02, $02, $1E, $1E, $02, $02, $1E, $1E, $02, $02, $1E, $1E, $02, $02
                dc.b    $1E, $1E, $02, $02, $1E, $1E, $02, $02, $30, $45, $38, $39, $1C, $68, $0E, $05
                dc.b    $2E, $25, $2B, $28, $07, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03
                dc.b    $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C
                dc.b    $0E, $03, $01, $03, $04, $0B, $07, $09, $0A, $32, $28, $1C, $1D, $12, $13, $0E
                dc.b    $0E, $02, $02, $0E, $0E, $02, $02, $0E, $0E, $02, $02, $0E, $0E, $02, $02, $0E
                dc.b    $0E, $02, $02, $0E, $0E, $02, $02, $0E, $0E, $02, $02, $0E, $0E, $2F, $5A, $3F
                dc.b    $29, $1C, $7F, $0E, $05, $2F, $3C, $2A, $3E, $07, $03, $04, $03, $01, $03, $01
                dc.b    $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01
                dc.b    $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $0B, $08, $09, $0A, $32, $28
                dc.b    $0D, $0D, $14, $15, $19, $18, $06, $06, $19, $18, $06, $06, $19, $18, $06, $06
                dc.b    $19, $18, $06, $06, $19, $18, $06, $06, $19, $18, $06, $06, $19, $18, $06, $06
                dc.b    $19, $18, $52, $5F, $28, $29, $65, $68, $0E, $05, $29, $23, $2C, $2E, $07, $03
                dc.b    $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03
                dc.b    $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0B
                dc.b    $07, $09, $0A, $32, $28, $0E, $0F, $0D, $0D, $14, $14, $19, $18, $14, $14, $19
                dc.b    $18, $14, $14, $19, $18, $14, $14, $19, $18, $14, $14, $19, $18, $14, $14, $19
                dc.b    $18, $14, $14, $19, $18, $14, $14, $55, $58, $29, $29, $66, $6B, $0E, $05, $2B
                dc.b    $2E, $2E, $2C, $07, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01
                dc.b    $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01
                dc.b    $03, $01, $03, $04, $0B, $08, $09, $0A, $32, $28, $10, $11, $1A, $1B, $0C, $0C
                dc.b    $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C
                dc.b    $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $54, $59, $39, $39
                dc.b    $6B, $66, $0E, $05, $25, $2F, $20, $22, $07, $03, $04, $0C, $0E, $03, $01, $03
                dc.b    $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03
                dc.b    $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0B, $07, $09, $0A, $32, $28, $12
                dc.b    $13, $1C, $1D, $1F, $1E, $04, $04, $1F, $1E, $04, $04, $1F, $1E, $04, $04, $1F
                dc.b    $1E, $04, $04, $1F, $1E, $04, $04, $1F, $1E, $04, $04, $1F, $1E, $04, $04, $1F
                dc.b    $1E, $5B, $56, $39, $39, $68, $65, $0E, $05, $27, $22, $22, $20, $07, $03, $04
                dc.b    $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01
                dc.b    $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $0B, $08
                dc.b    $09, $0A, $84, $E9, $00, $0D, $00, $00
Rock_Splashing: ; loc_4B76C: 
                incbin  'data\sprites\rockspsh.dat'                                
Unknow_Palett_0x04BAAC: ; loc_4BAAC:
                dc.w    $0000, $0A20, $0666, $0888, $0CAA, $0ECC, $0246, $0008
                dc.w    $000E, $046A, $068C, $08CE, $0E22, $0E62, $0000, $0EEE
                dc.w    $0000, $0242, $0462, $0220, $0244, $0464, $0468, $068A
                dc.w    $08CC, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE
                dc.w    $0000, $0620, $0C20, $0E42, $0E66, $0A0E, $0A0E, $0A0E
                dc.w    $0A0E, $0006, $000E, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $06CE, $02AE, $026C, $0248, $0CCE, $006E, $004E
                dc.w    $088E, $066C, $044A, $0028, $0004, $0060, $0000, $0CEE
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0C00, $0000, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0200, $0422, $0666, $0224, $0226, $0446, $0046
                dc.w    $0048, $0400, $0888, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0200, $0644, $0888, $0428, $0448, $064A, $006A
                dc.w    $008A, $0800, $0AAA, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0422, $0866, $0AAA, $042A, $064C, $0A6C, $006C
                dc.w    $00CC, $0A00, $0CCC, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0644, $0A88, $0CCC, $062C, $084E, $0C8E, $008E
                dc.w    $00EE, $0C00, $0EEE, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0848, $0C8C, $0EAE, $0A0E, $0C2E, $0C6E, $086E
                dc.w    $0A8E, $0404, $0ECE, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0020, $0242, $0020, $0222, $0242, $0244, $0266
                dc.w    $0488, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE
Unknow_Data_0x04BC4C: ; loc_4BC4C:
                dc.b    $20, $00, $00, $20, $14, $CC, $BB, $BB, $BB, $77, $07, $12, $10, $11, $07, $63
                dc.b    $30, $30, $10, $76, $30, $03, $01, $00, $10, $02, $04, $07, $70, $00, $30, $03
                dc.b    $46, $30, $10, $07, $52, $11, $10, $77, $00, $21, $21, $22, $00, $02, $32, $11
                dc.b    $00, $11, $21, $02, $00, $10, $21, $12, $00, $33, $31, $01, $00, $11, $22, $22
                dc.b    $07, $77, $77, $77, $77, $77, $77, $77, $21, $22, $12, $10, $32, $00, $30, $30
                dc.b    $22, $10, $30, $00, $23, $21, $00, $30, $30, $31, $33, $00, $22, $22, $21, $10
                dc.b    $77, $77, $77, $77, $07, $77, $77, $02, $0B, $21, $70, $77, $00, $06, $70, $11
                dc.b    $00, $57, $01, $03, $02, $04, $10, $30, $07, $70, $04, $01, $03, $02, $09, $01
                dc.b    $03, $00, $76, $10, $33, $00, $10, $33, $02, $01, $33, $02, $01, $01, $03, $01
                dc.b    $11, $03, $01, $01, $02, $02, $01, $10, $02, $02, $01, $10, $02, $0A, $01, $10
                dc.b    $00, $11, $10, $10, $11, $00, $0D, $0D, $02, $02, $D0, $D0, $02, $09, $D0, $00
                dc.b    $10, $0D, $DD, $00, $10, $0D, $0D, $06, $02, $0D, $D0, $02, $07, $0D, $0D, $DD
                dc.b    $DD, $DD, $DD, $DD, $18, $13, $99, $96, $77, $77, $0F, $F1, $33, $33, $07, $10
                dc.b    $00, $44, $00, $03, $04, $00, $07, $00, $40, $07, $01, $04, $05, $08, $D2, $30
                dc.b    $40, $44, $44, $44, $40, $33, $02, $02, $04, $30, $02, $26, $04, $00, $04, $40
                dc.b    $03, $DE, $43, $30, $7E, $FE, $30, $74, $EF, $13, $03, $43, $00, $30, $ED, $D8
                dc.b    $69, $88, $06, $63, $22, $11, $03, $21, $0D, $D0, $01, $0D, $D0, $D0, $00, $D0
                dc.b    $0D, $10, $03, $01, $1D, $02, $02, $DD, $0D, $02, $20, $D0, $D0, $40, $DD, $DD
                dc.b    $D0, $0D, $DD, $D0, $01, $D0, $00, $0D, $01, $DD, $00, $0D, $01, $DD, $0D, $D1
                dc.b    $45, $00, $D0, $15, $49, $0D, $01, $54, $D0, $D0, $10, $02, $3E, $44, $53, $62
                dc.b    $CC, $06, $63, $22, $1C, $00, $31, $DD, $DD, $60, $1D, $00, $D0, $66, $20, $0D
                dc.b    $10, $DE, $6C, $00, $1D, $47, $E5, $DD, $0D, $40, $00, $D0, $D0, $9D, $A4, $DD
                dc.b    $D0, $0D, $DD, $D0, $01, $D0, $00, $0D, $01, $DD, $00, $0D, $01, $DD, $0D, $D1
                dc.b    $45, $00, $D0, $15, $49, $0D, $01, $54, $D0, $D0, $10, $02, $0B, $44, $5A, $EA
                dc.b    $77, $0F, $F1, $33, $77, $07, $13, $04, $02, $04, $13, $40, $00, $08, $03, $03
                dc.b    $DE, $F1, $70, $02, $01, $FF, $02, $0C, $30, $00, $04, $00, $33, $2D, $30, $44
                dc.b    $44, $44, $40, $33, $02, $02, $04, $30, $02, $18, $04, $00, $04, $40, $03, $DE
                dc.b    $43, $30, $7E, $FE, $30, $74, $EF, $13, $03, $43, $00, $30, $B9, $47, $96, $44
                dc.b    $00, $0D, $03, $1E, $DD, $D0, $00, $01, $1C, $1C, $CC, $33, $33, $33, $33, $03
                dc.b    $2F, $FF, $6F, $31, $DD, $09, $49, $00, $D4, $94, $D0, $01, $26, $63, $97, $00
                dc.b    $30, $10, $02, $02, $30, $10, $03, $56, $17, $70, $03, $01, $00, $10, $30, $10
                dc.b    $76, $00, $11, $07, $71, $10, $77, $70, $77, $77, $07, $77, $77, $77, $00, $21
                dc.b    $21, $12, $00, $31, $33, $13, $00, $11, $33, $13, $00, $20, $02, $33, $00, $33
                dc.b    $32, $33, $00, $12, $11, $12, $07, $77, $77, $77, $77, $77, $77, $77, $12, $12
                dc.b    $11, $20, $31, $33, $32, $30, $32, $13, $32, $30, $33, $21, $30, $30, $33, $33
                dc.b    $33, $00, $11, $20, $12, $10, $77, $77, $77, $77, $07, $76, $65, $55, $06, $01
                dc.b    $03, $02, $0E, $01, $10, $33, $07, $77, $01, $11, $06, $55, $33, $33, $01, $33
                dc.b    $11, $02, $01, $03, $02, $02, $52, $30, $05, $01, $10, $03, $2F, $11, $33, $33
                dc.b    $00, $10, $11, $11, $22, $23, $22, $02, $23, $32, $10, $00, $01, $00, $D1, $03
                dc.b    $00, $10, $D0, $32, $CC, $CD, $00, $0D, $D0, $D0, $00, $0D, $DD, $D0, $11, $11
                dc.b    $C1, $CC, $33, $33, $33, $33, $22, $FF, $FF, $F0, $00, $DD, $03, $01, $DD, $02
                dc.b    $01, $DD, $02, $01, $0F, $08, $18, $CC, $CC, $CC, $CC, $33, $33, $33, $33, $03
                dc.b    $2F, $FF, $6F, $31, $DD, $09, $49, $00, $C4, $E4, $D0, $5B, $BD, $E9, $49, $02
                dc.b    $02, $04, $40, $03, $01, $04, $02, $36, $40, $04, $00, $03, $04, $00, $07, $10
                dc.b    $00, $44, $08, $76, $53, $33, $00, $88, $8E, $EE, $99, $DD, $0F, $EE, $44, $40
                dc.b    $EF, $10, $33, $74, $7D, $FE, $30, $34, $04, $9E, $47, $40, $44, $07, $40, $04
                dc.b    $44, $04, $37, $77, $77, $73, $EE, $EE, $EE, $EE, $04, $99, $99, $44, $02, $01
                dc.b    $0D, $02, $03, $D0, $00, $12, $02, $80, $82, $0D, $13, $01, $0D, $00, $DC, $03
                dc.b    $10, $DD, $00, $06, $32, $11, $CC, $00, $66, $55, $55, $94, $45, $04, $94, $DD
                dc.b    $01, $54, $C1, $1D, $D0, $15, $55, $1D, $0D, $D1, $55, $D0, $00, $0D, $11, $00
                dc.b    $0D, $DD, $10, $CC, $C1, $11, $01, $55, $55, $55, $55, $EE, $F0, $99, $44, $11
                dc.b    $F5, $0D, $00, $FF, $6C, $00, $12, $66, $20, $0D, $13, $00, $0D, $00, $DC, $60
                dc.b    $10, $DD, $00, $06, $32, $11, $CC, $00, $66, $55, $55, $94, $45, $04, $94, $DD
                dc.b    $01, $54, $C1, $1D, $D0, $15, $55, $1D, $0D, $D1, $55, $D0, $00, $0D, $11, $00
                dc.b    $0D, $DD, $10, $CC, $C1, $11, $01, $55, $55, $55, $55, $EF, $F0, $ED, $99, $10
                dc.b    $FE, $34, $00, $FF, $E3, $40, $04, $0F, $03, $40, $04, $02, $32, $04, $00, $07
                dc.b    $10, $30, $44, $08, $71, $03, $33, $00, $8F, $EE, $EE, $99, $DD, $0F, $EE, $44
                dc.b    $40, $EF, $10, $33, $74, $7D, $FE, $30, $34, $04, $9E, $47, $40, $44, $07, $40
                dc.b    $04, $44, $04, $37, $77, $77, $73, $EE, $EE, $EE, $EE, $07, $76, $65, $55, $06
                dc.b    $01, $03, $02, $0D, $01, $10, $33, $07, $77, $01, $11, $06, $55, $22, $22, $01
                dc.b    $33, $03, $01, $03, $02, $04, $52, $30, $00, $11, $03, $01, $10, $03, $0D, $11
                dc.b    $33, $33, $00, $10, $11, $11, $22, $23, $22, $22, $22, $32, $02, $01, $01, $03
                dc.b    $1C, $10, $00, $11, $11, $DD, $DD, $00, $0D, $D0, $D0, $00, $0D, $DD, $D0, $11
                dc.b    $11, $C1, $CC, $33, $33, $33, $33, $12, $FF, $FF, $FF, $00, $DD, $03, $01, $DD
                dc.b    $02, $01, $ED, $0B, $0C, $CC, $CC, $CC, $CC, $33, $33, $33, $33, $FF, $FF, $FF
                dc.b    $FF, $08, $06, $9E, $FC, $CC, $CC, $00, $03, $07, $01, $03, $07, $01, $03, $07
                dc.b    $01, $03, $02, $07, $52, $31, $01, $11, $00, $01, $10, $03, $02, $11, $11, $02
                dc.b    $0A, $22, $22, $00, $02, $22, $3E, $01, $22, $01, $0D, $02, $2A, $01, $00, $10
                dc.b    $00, $01, $00, $31, $31, $CD, $DD, $00, $0D, $D0, $D0, $00, $1C, $1C, $0D, $02
                dc.b    $22, $33, $10, $3E, $EE, $F3, $31, $0D, $DD, $0C, $33, $00, $DD, $D0, $C0, $00
                dc.b    $0D, $D0, $00, $DD, $0D, $00, $0F, $04, $01, $0D, $03, $01, $DD, $03, $0B, $0D
                dc.b    $00, $D0, $00, $1D, $D0, $D0, $00, $0D, $DD, $0D, $02, $15, $DD, $DD, $00, $23
                dc.b    $3E, $3E, $EE, $21, $22, $12, $10, $32, $00, $30, $37, $22, $10, $30, $54, $23
                dc.b    $21, $02, $3F, $30, $31, $33, $04, $22, $22, $21, $05, $77, $77, $77, $00, $77
                dc.b    $77, $70, $63, $21, $22, $10, $06, $32, $00, $30, $66, $22, $10, $55, $46, $23
                dc.b    $21, $0C, $D5, $30, $31, $0C, $C5, $22, $22, $75, $55, $77, $77, $70, $5C, $00
                dc.b    $0F, $EE, $B7, $08, $F1, $03, $33, $00, $10, $30, $44, $00, $03, $04, $00, $07
                dc.b    $00, $40, $07, $01, $04, $05, $07, $D2, $30, $40, $44, $44, $44, $40, $02, $05
                dc.b    $04, $04, $44, $04, $04, $02, $24, $04, $40, $04, $40, $40, $40, $04, $40, $40
                dc.b    $04, $40, $44, $04, $44, $04, $04, $9D, $BF, $BB, $8C, $06, $03, $22, $11, $03
                dc.b    $21, $0D, $D0, $01, $0D, $D0, $D0, $00, $D0, $0D, $10, $03, $01, $1D, $02, $02
                dc.b    $DD, $0D, $02, $68, $D0, $D0, $40, $DD, $DD, $D0, $0D, $D0, $0D, $D1, $D0, $D0
                dc.b    $0D, $0C, $DD, $DD, $00, $DC, $DD, $0D, $0D, $DC, $00, $D1, $0D, $00, $0D, $11
                dc.b    $1D, $0D, $D0, $0D, $C0, $D1, $99, $84, $44, $98, $44, $00, $04, $44, $40, $44
                dc.b    $04, $44, $34, $40, $44, $00, $30, $44, $40, $40, $44, $00, $44, $04, $04, $40
                dc.b    $44, $40, $40, $40, $00, $40, $99, $D9, $9D, $DD, $DD, $D0, $0D, $DD, $DD, $0D
                dc.b    $DD, $D0, $0D, $00, $0D, $DD, $1D, $0D, $DC, $0D, $1D, $D0, $11, $D0, $DD, $01
                dc.b    $CD, $D0, $D0, $1C, $00, $DC, $44, $95, $55, $89, $77, $BC, $02, $0A, $11, $07
                dc.b    $C0, $00, $30, $10, $7C, $00, $03, $01, $04, $04, $07, $C0, $00, $30, $03, $09
                dc.b    $30, $10, $0C, $25, $10, $6B, $CC, $00, $10, $07, $01, $01, $03, $13, $10, $0C
                dc.b    $CC, $00, $77, $76, $66, $00, $76, $10, $00, $70, $76, $66, $66, $CC, $CC, $CC
                dc.b    $CC, $0C, $08, $CC, $CC, $CC, $CC, $66, $66, $66, $66, $04, $08, $66, $66, $66
                dc.b    $66, $CC, $CC, $CC, $CC, $0C, $08, $CC, $CC, $CC, $CC, $06, $66, $66, $66, $04
                dc.b    $08, $06, $66, $66, $66, $07, $66, $55, $55, $09, $0E, $11, $23, $33, $07, $77
                dc.b    $01, $11, $06, $55, $33, $33, $01, $33, $11, $02, $01, $03, $02, $02, $53, $10
                dc.b    $02, $22, $10, $00, $01, $00, $01, $00, $01, $00, $20, $00, $01, $00, $12, $00
                dc.b    $01, $00, $22, $00, $01, $00, $10, $00, $01, $00, $D1, $03, $00, $10, $D0, $3F
                dc.b    $CC, $C2, $00, $D0, $03, $01, $0D, $02, $02, $0D, $DD, $02, $02, $0D, $0D, $03
                dc.b    $01, $DD, $03, $01, $DD, $03, $01, $DD, $02, $01, $10, $02, $03, $0F, $00, $0D
                dc.b    $03, $11, $DD, $D0, $00, $01, $1C, $1C, $CC, $33, $33, $33, $33, $03, $2F, $FF
                dc.b    $FF, $31, $DD, $03, $47, $DD, $D0, $00, $53, $3E, $3E, $E9, $00, $21, $21, $25
                dc.b    $00, $02, $32, $11, $00, $11, $21, $02, $00, $10, $21, $12, $00, $33, $31, $04
                dc.b    $00, $11, $22, $56, $07, $77, $77, $03, $07, $77, $77, $0C, $00, $21, $21, $0F
                dc.b    $00, $02, $32, $46, $00, $11, $21, $06, $00, $10, $21, $12, $00, $33, $31, $01
                dc.b    $00, $11, $22, $22, $07, $77, $77, $77, $0F, $ED, $9D, $D9, $02, $02, $04, $40
                dc.b    $03, $01, $04, $02, $36, $40, $04, $00, $03, $04, $00, $07, $10, $00, $44, $08
                dc.b    $76, $53, $33, $00, $88, $8E, $EE, $99, $D9, $D9, $99, $40, $44, $30, $44, $04
                dc.b    $04, $74, $03, $00, $44, $04, $43, $44, $40, $44, $04, $40, $04, $44, $04, $37
                dc.b    $77, $77, $73, $EE, $EE, $EE, $EE, $04, $99, $49, $44, $02, $01, $DD, $02, $03
                dc.b    $D0, $00, $12, $02, $3E, $0D, $13, $01, $0D, $00, $DC, $03, $10, $DD, $00, $06
                dc.b    $32, $11, $CC, $00, $66, $55, $55, $94, $45, $99, $99, $DD, $01, $CD, $D0, $1D
                dc.b    $D0, $11, $D0, $1D, $0D, $DC, $0D, $0D, $00, $0D, $DD, $DD, $0D, $DD, $D0, $CC
                dc.b    $C1, $1C, $CC, $55, $55, $55, $55, $99, $99, $99, $9D, $04, $40, $04, $04, $04
                dc.b    $40, $04, $40, $02, $36, $40, $40, $44, $40, $40, $00, $04, $40, $44, $44, $37
                dc.b    $77, $33, $33, $EE, $EE, $EE, $EE, $94, $54, $59, $94, $0D, $11, $1D, $0D, $00
                dc.b    $D1, $0D, $00, $DD, $0D, $0D, $DC, $DD, $DD, $00, $DC, $D0, $D0, $0D, $0C, $1C
                dc.b    $C1, $1C, $C0, $55, $55, $55, $55, $07, $66, $55, $54, $04, $7E, $47, $10, $33
                dc.b    $01, $20, $76, $10, $32, $69, $46, $76, $67, $90, $D3, $06, $54, $D0, $C5, $52
                dc.b    $CD, $0C, $54, $CD, $00, $0C, $72, $CC, $DD, $00, $11, $55, $44, $1F, $67, $65
                dc.b    $99, $56, $65, $FC, $00, $76, $63, $CD, $DD, $33, $66, $31, $12, $DC, $26, $63
                dc.b    $30, $00, $D2, $60, $32, $D0, $DD, $FF, $12, $49, $4F, $DD, $10, $45, $66, $42
                dc.b    $36, $D1, $36, $66, $66, $C1, $30, $60, $06, $35, $62, $99, $94, $65, $9D, $00
                dc.b    $0D, $9C, $0D, $DD, $DD, $CF, $92, $0D, $D4, $36, $63, $D0, $D0, $66, $3C, $00
                dc.b    $10, $63, $10, $0D, $26, $03, $1D, $D1, $70, $66, $31, $13, $03, $94, $65, $36
                dc.b    $60, $0D, $46, $66, $31, $9E, $23, $53, $10, $00, $03, $02, $0C, $01, $33, $11
                dc.b    $00, $06, $55, $33, $33, $07, $76, $11, $11, $03, $01, $33, $02, $01, $03, $05
                dc.b    $18, $93, $00, $30, $01, $D1, $03, $00, $10, $10, $00, $01, $00, $22, $02, $23
                dc.b    $32, $11, $11, $22, $23, $33, $33, $00, $10, $03, $01, $11, $03, $07, $10, $11
                dc.b    $CC, $CC, $D2, $00, $DD, $03, $01, $DD, $02, $17, $22, $FF, $FF, $F0, $33, $33
                dc.b    $33, $33, $11, $11, $C1, $CC, $00, $0D, $DD, $D0, $00, $0D, $D0, $D0, $10, $0D
                dc.b    $D0, $02, $05, $DD, $D0, $00, $31, $DD, $02, $0C, $03, $2F, $FF, $FF, $33, $33
                dc.b    $33, $33, $CC, $CC, $CC, $CC, $08, $46, $9E, $EE, $EE, $EE, $00, $21, $21, $22
                dc.b    $00, $02, $32, $11, $47, $31, $21, $02, $00, $10, $21, $12, $40, $03, $31, $01
                dc.b    $50, $01, $22, $22, $00, $77, $77, $77, $36, $07, $77, $77, $60, $01, $21, $22
                dc.b    $66, $01, $32, $11, $64, $57, $21, $02, $5D, $C0, $21, $12, $5C, $C0, $31, $01
                dc.b    $55, $57, $22, $22, $C5, $00, $77, $77, $92, $77, $0C, $CC, $00, $06, $0F, $01
                dc.b    $01, $03, $01, $07, $02, $02, $07, $77, $02, $04, $CC, $CB, $0C, $BB, $02, $01
                dc.b    $06, $13, $01, $06, $03, $02, $07, $77, $02, $02, $CB, $CC, $18, $08, $66, $66
                dc.b    $66, $00, $66, $66, $AD, $BC, $02, $01, $01, $04, $01, $10, $04, $08, $CC, $CC
                dc.b    $01, $00, $66, $66, $77, $10, $02, $0A, $17, $70, $66, $66, $67, $00, $CC, $CC
                dc.b    $CC, $CC, $03, $01, $06, $03, $01, $69, $03, $01, $05, $03, $01, $03, $03, $01
                dc.b    $06, $02, $02, $06, $95, $02, $02, $6D, $53, $02, $03, $6B, $A9, $60, $03, $02
                dc.b    $D9, $66, $02, $06, $06, $9C, $60, $00, $04, $53, $02, $06, $02, $CF, $60, $00
                dc.b    $D9, $66, $02, $0F, $06, $66, $60, $00, $FA, $F3, $E8, $88, $50, $CC, $24, $44
                dc.b    $06, $C5, $60, $02, $01, $50, $02, $01, $06, $03, $02, $65, $50, $02, $07, $2C
                dc.b    $C5, $67, $00, $0D, $C3, $67, $02, $0F, $1F, $56, $59, $42, $1D, $10, $30, $06
                dc.b    $52, $10, $0C, $00, $06, $36, $63, $02, $02, $60, $06, $02, $13, $07, $66, $00
                dc.b    $07, $61, $01, $07, $61, $00, $07, $93, $30, $66, $66, $C1, $56, $00, $06, $05
                dc.b    $03, $01, $30, $03, $01, $60, $07, $01, $06, $03, $12, $52, $44, $66, $00, $0D
                dc.b    $D1, $60, $44, $5C, $DC, $56, $00, $05, $1D, $00, $10, $00, $52, $03, $1D, $06
                dc.b    $50, $30, $00, $06, $67, $60, $65, $92, $00, $01, $63, $F0, $31, $00, $06, $12
                dc.b    $30, $50, $70, $01, $03, $00, $10, $01, $03, $00, $27, $71, $02, $14, $21, $00
                dc.b    $10, $30, $33, $67, $01, $03, $22, $17, $70, $11, $77, $77, $07, $77, $55, $55
                dc.b    $54, $54, $02, $02, $01, $10, $02, $02, $01, $10, $02, $02, $01, $10, $03, $01
                dc.b    $01, $03, $02, $11, $33, $02, $03, $01, $10, $33, $02, $07, $32, $2F, $1C, $CC
                dc.b    $00, $0D, $D0, $05, $07, $10, $0D, $0D, $00, $10, $0D, $DD, $03, $01, $D0, $03
                dc.b    $0A, $D0, $D0, $11, $00, $0D, $0D, $CC, $DD, $DD, $DD, $18, $48, $DD, $DD, $DD
                dc.b    $DD, $43, $33, $33, $33, $71, $22, $12, $10, $12, $00, $30, $30, $22, $10, $30
                dc.b    $00, $23, $21, $00, $30, $63, $31, $33, $00, $66, $22, $21, $10, $30, $77, $77
                dc.b    $77, $C0, $77, $77, $77, $F0, $12, $12, $10, $67, $30, $30, $30, $61, $10, $30
                dc.b    $00, $03, $21, $00, $30, $30, $31, $33, $00, $22, $22, $21, $10, $77, $77, $77
                dc.b    $77, $CC, $CC, $CC, $CC, $04, $01, $60, $07, $01, $C6, $02, $11, $06, $10, $00
                dc.b    $06, $99, $10, $06, $99, $25, $30, $99, $36, $DC, $96, $9F, $A9, $0F, $02, $22
                dc.b    $06, $F2, $00, $06, $6F, $24, $06, $9F, $03, $40, $99, $3F, $F1, $00, $24, $C0
                dc.b    $30, $40, $DD, $60, $00, $04, $66, $00, $31, $01, $AB, $BD, $33, $DC, $54, $44
                dc.b    $52, $CF, $02, $02, $04, $13, $03, $01, $41, $04, $02, $44, $40, $02, $0D, $12
                dc.b    $14, $00, $40, $3F, $C2, $44, $00, $96, $69, $BB, $BB, $60, $03, $01, $F6, $03
                dc.b    $01, $30, $03, $05, $0F, $60, $00, $06, $13, $02, $01, $6D, $02, $24, $06, $D1
                dc.b    $13, $00, $6D, $1C, $A9, $66, $D1, $C0, $00, $6D, $1C, $FC, $06, $91, $CF, $25
                dc.b    $69, $4C, $F2, $40, $94, $DF, $24, $44, $4D, $03, $46, $DD, $D6, $01, $6F, $00
                dc.b    $60, $01, $02, $16, $9A, $C0, $00, $06, $25, $55, $2C, $F6, $40, $04, $01, $2F
                dc.b    $00, $42, $D2, $02, $00, $0F, $0F, $24, $40, $0F, $02, $34, $D0, $42, $FF, $20
                dc.b    $00, $04, $26, $45, $F3, $33, $27, $41, $55, $49, $CD, $37, $51, $DD, $C9, $40
                dc.b    $00, $C4, $55, $50, $52, $57, $01, $C0, $66, $00, $74, $00, $F4, $07, $07, $90
                dc.b    $0D, $46, $77, $77, $99, $41, $76, $17, $77, $77, $76, $66, $00, $07, $77, $06
                dc.b    $03, $01, $77, $10, $36, $33, $32, $11, $E3, $21, $23, $0F, $0D, $65, $66, $0F
                dc.b    $CD, $04, $50, $66, $52, $74, $10, $05, $56, $00, $D0, $0C, $10, $07, $97, $0D
                dc.b    $47, $00, $70, $04, $70, $27, $71, $66, $72, $C4, $56, $60, $00, $0D, $C4, $66
                dc.b    $00, $CD, $0D, $36, $00, $31, $00, $10, $00, $63, $D0, $03, $0D, $D0, $00, $01
                dc.b    $03, $D0, $16, $60, $02, $2F, $05, $30, $00, $03, $03, $03, $03, $00, $01, $05
                dc.b    $01, $03, $0E, $0B, $4E, $13, $00, $11, $00, $21, $00, $11, $0D, $C2, $23, $02
                dc.b    $27, $DC, $21, $22, $10, $0D, $CE, $EE, $01, $00, $DD, $D0, $01, $10, $10, $0D
                dc.b    $01, $11, $10, $00, $1C, $0C, $DD, $02, $0D, $0D, $0D, $10, $11, $11, $C1, $33
                dc.b    $23, $33, $33, $00, $EF, $FF, $F2, $03, $02, $08, $0D, $20, $D0, $D0, $00, $D0
                dc.b    $0D, $D0, $02, $01, $10, $02, $02, $0F, $1D, $03, $01, $0D, $03, $01, $0D, $03
                dc.b    $02, $10, $D0, $02, $02, $0D, $D0, $0A, $09, $5F, $27, $44, $AA, $03, $04, $30
                dc.b    $00, $08, $04, $01, $31, $02, $07, $07, $80, $40, $E0, $00, $03, $03, $02, $0F
                dc.b    $78, $10, $00, $07, $70, $34, $00, $33, $DD, $61, $63, $00, $03, $40, $3C, $03
                dc.b    $01, $8B, $02, $2B, $13, $00, $0E, $04, $08, $70, $00, $30, $30, $10, $00, $01
                dc.b    $87, $10, $00, $43, $07, $77, $98, $CD, $AA, $CC, $0F, $CF, $06, $00, $CF, $C9
                dc.b    $C6, $66, $33, $35, $59, $99, $FC, $FC, $95, $55, $9C, $F0, $0C, $31, $41, $02
                dc.b    $25, $01, $DD, $F0, $00, $FC, $66, $60, $FF, $CC, $06, $60, $F0, $33, $60, $00
                dc.b    $0F, $FF, $9D, $DD, $CC, $CF, $40, $04, $55, $56, $41, $D9, $99, $99, $40, $C0
                dc.b    $FC, $C0, $DC, $C0, $FC, $3F, $02, $02, $CD, $23, $02, $16, $31, $10, $00, $0F
                dc.b    $03, $33, $F0, $0F, $FF, $FF, $69, $99, $99, $99, $66, $65, $55, $54, $FF, $FC
                dc.b    $CC, $CD, $04, $23, $CF, $00, $DC, $00, $3F, $00, $2C, $DF, $F9, $C0, $FD, $1F
                dc.b    $94, $30, $C1, $30, $01, $F0, $30, $F0, $41, $CF, $F3, $0D, $D2, $3F, $F0, $02
                dc.b    $0F, $F0, $FF, $0F, $66, $0F, $DF, $02, $19, $60, $12, $D9, $00, $0F, $31, $40
                dc.b    $66, $60, $F3, $65, $00, $0D, $FF, $FC, $F0, $C1, $00, $0F, $F0, $C3, $F0, $0F
                dc.b    $00, $0F, $02, $1C, $CC, $D9, $FD, $CC, $53, $D4, $31, $0C, $42, $C1, $33, $CF
                dc.b    $01, $33, $F0, $9F, $13, $6F, $9F, $60, $50, $6F, $90, $09, $9F, $FF, $0F, $04
                dc.b    $02, $80, $88, $0F, $FD, $33, $3E, $CA, $AA, $D0, $00, $65, $56, $2C, $C2, $01
                dc.b    $C2, $62, $56, $5D, $0D, $07, $06, $0D, $00, $07, $06, $52, $CD, $00, $67, $76
                dc.b    $52, $00, $02, $17, $76, $70, $12, $10, $07, $77, $77, $00, $07, $06, $66, $77
                dc.b    $76, $46, $03, $45, $62, $D0, $03, $11, $24, $D4, $66, $34, $40, $21, $56, $05
                dc.b    $56, $65, $56, $65, $56, $77, $77, $77, $00, $77, $77, $77, $49, $65, $05, $50
                dc.b    $00, $25, $4C, $15, $4C, $44, $D0, $D1, $55, $4D, $0D, $D1, $30, $2F, $F2, $45
                dc.b    $67, $66, $66, $76, $61, $00, $55, $16, $32, $96, $53, $67, $00, $D3, $06, $01
                dc.b    $00, $13, $00, $73, $01, $56, $07, $13, $33, $07, $62, $22, $22, $61, $31, $DD
                dc.b    $DD, $33, $1D, $D0, $00, $52, $2C, $1C, $CC, $00, $03, $08, $0A, $30, $00, $07
                dc.b    $66, $12, $22, $06, $55, $32, $33, $02, $04, $10, $11, $01, $30, $02, $0A, $53
                dc.b    $31, $11, $1C, $01, $11, $00, $0D, $00, $11, $03, $18, $01, $11, $11, $22, $22
                dc.b    $22, $22, $33, $3E, $33, $22, $11, $0D, $0D, $10, $01, $10, $0D, $D1, $1D, $1D
                dc.b    $DD, $02, $0D, $02, $1F, $D0, $00, $DD, $0D, $10, $11, $C1, $C1, $33, $22, $33
                dc.b    $33, $31, $11, $33, $22, $1D, $03, $11, $D0, $D0, $00, $0D, $DD, $D0, $3C, $00
                dc.b    $D0, $D0, $0D, $D0, $06, $07, $1D, $D0, $D0, $00, $D0, $D0, $D0, $02, $01, $0D
                dc.b    $03, $01, $0D, $06, $06, $EE, $EE, $92, $7A, $21, $22, $02, $1C, $32, $00, $73
                dc.b    $4E, $22, $10, $18, $10, $23, $21, $06, $33, $30, $31, $30, $84, $22, $22, $21
                dc.b    $71, $77, $77, $77, $7B, $3E, $B0, $77, $77, $02, $28, $11, $22, $E4, $37, $02
                dc.b    $11, $01, $81, $21, $02, $33, $63, $21, $12, $48, $03, $31, $01, $17, $11, $22
                dc.b    $22, $B7, $77, $77, $77, $70, $07, $77, $77, $00, $77, $77, $77, $00, $17, $0C
                dc.b    $CC, $00, $01, $07, $01, $10, $03, $01, $01, $02, $02, $70, $70, $02, $0C, $77
                dc.b    $70, $7B, $BB, $77, $77, $77, $77, $CC, $CC, $CC, $CC, $14, $0C, $CB, $BB, $BB
                dc.b    $BB, $07, $77, $77, $77, $CC, $CC, $CC, $CC, $14, $0B, $BB, $BB, $BC, $CC, $77
                dc.b    $77, $70, $60, $CC, $CC, $06, $0C, $01, $10, $02, $01, $01, $04, $13, $70, $BB
                dc.b    $BB, $77, $CC, $21, $22, $15, $A0, $32, $00, $30, $00, $22, $10, $30, $0C, $23
                dc.b    $21, $02, $10, $30, $31, $33, $00, $22, $22, $21, $10, $77, $77, $77, $7C, $CC
                dc.b    $CC, $CC, $C0, $1C, $0E, $11, $11, $11, $11, $06, $66, $66, $66, $05, $67, $77
                dc.b    $77, $00, $31, $03, $02, $43, $10, $02, $02, $64, $31, $02, $03, $06, $43, $10
                dc.b    $02, $0E, $64, $31, $03, $11, $17, $30, $66, $66, $66, $66, $77, $77, $76, $50
                dc.b    $02, $10, $13, $57, $00, $01, $35, $70, $00, $13, $57, $00, $01, $35, $70, $00
                dc.b    $23, $57, $02, $0E, $33, $61, $11, $11, $66, $66, $66, $66, $15, $67, $77, $77
                dc.b    $64, $31, $02, $03, $06, $43, $10, $02, $02, $64, $31, $02, $03, $06, $43, $10
                dc.b    $02, $0D, $64, $31, $11, $11, $17, $33, $66, $66, $66, $00, $77, $77, $76, $03
                dc.b    $01, $13, $02, $02, $01, $35, $02, $09, $13, $57, $00, $01, $35, $70, $00, $23
                dc.b    $57, $02, $04, $30, $70, $00, $12, $05, $01, $10, $03, $01, $31, $03, $02, $43
                dc.b    $10, $02, $02, $64, $31, $02, $03, $06, $43, $10, $02, $06, $64, $31, $12, $00
                dc.b    $06, $40, $03, $01, $73, $02, $02, $01, $35, $02, $10, $13, $57, $00, $01, $35
                dc.b    $70, $00, $13, $57, $00, $01, $35, $70, $00, $23, $57, $02, $02, $05, $70, $02
                dc.b    $01, $55, $03, $02, $10, $10, $02, $02, $64, $31, $02, $03, $06, $43, $10, $02
                dc.b    $02, $64, $31, $02, $03, $06, $43, $10, $02, $02, $64, $31, $02, $02, $06, $33
                dc.b    $06, $01, $01, $03, $01, $13, $02, $02, $01, $35, $02, $09, $13, $57, $00, $01
                dc.b    $35, $70, $00, $23, $57, $02, $81, $04, $05, $DA, $AA, $B8, $55, $03, $32, $22
                dc.b    $10, $B1, $1D, $D0, $C4, $39, $D0, $D0, $0E, $43, $4D, $DD, $00, $34, $39, $0D
                dc.b    $00, $0E, $43, $4D, $00, $D0, $E4, $34, $02, $22, $2C, $40, $22, $23, $30, $73
                dc.b    $0D, $D1, $1B, $35, $DD, $0D, $93, $5D, $01, $D4, $35, $F0, $DC, $93, $52, $00
                dc.b    $04, $35, $F0, $00, $A3, $5F, $0D, $00, $05, $78, $84, $46, $55, $0C, $C7, $76
                dc.b    $10, $17, $71, $10, $64, $3A, $13, $30, $0A, $43, $B1, $10, $C7, $D4, $39, $23
                dc.b    $00, $1C, $43, $B0, $00, $03, $F4, $38, $00, $12, $2D, $40, $71, $11, $11, $73
                dc.b    $00, $03, $3B, $35, $00, $30, $83, $52, $11, $28, $35, $FD, $32, $A3, $5C, $33
                dc.b    $18, $35, $E1, $01, $A3, $52, $12, $11, $05, $CE, $33, $10, $55, $11, $11, $11
                dc.b    $10, $BF, $F2, $30, $34, $34, $0D, $C0, $DE, $43, $4D, $F0, $33, $D4, $39, $32
                dc.b    $01, $2E, $43, $8D, $13, $1D, $E4, $34, $12, $3E, $3D, $40, $11, $11, $11, $73
                dc.b    $03, $2F, $FB, $35, $0C, $D0, $43, $52, $0F, $D4, $35, $FD, $23, $93, $5C, $33
                dc.b    $D8, $35, $F2, $10, $73, $5F, $D1, $31, $05, $C3, $E3, $26, $55, $11, $11, $17
                dc.b    $10, $B3, $30, $00, $94, $38, $03, $00, $7E, $43, $82, $11, $33, $D4, $3A, $23
                dc.b    $10, $1F, $43, $81, $11, $21, $94, $39, $76, $48, $F6, $40, $67, $7C, $C0, $73
                dc.b    $01, $17, $71, $35, $03, $31, $A3, $57, $01, $1B, $35, $B0, $32, $93, $5C, $7C
                dc.b    $0B, $35, $D1, $00, $B3, $5E, $30, $00, $30, $79, $9A, $DE, $03, $01, $44, $02
                dc.b    $02, $01, $01, $02, $09, $13, $57, $00, $01, $35, $70, $00, $13, $57, $02, $02
                dc.b    $35, $70, $02, $01, $57, $02, $02, $05, $70, $02, $01, $36, $03, $02, $43, $10
                dc.b    $02, $02, $64, $31, $02, $03, $06, $43, $10, $02, $02, $64, $31, $02, $03, $06
                dc.b    $43, $10, $02, $02, $64, $32, $02, $02, $06, $40, $03, $01, $44, $02, $02, $01
                dc.b    $01, $02, $10, $13, $57, $00, $01, $35, $70, $00, $13, $57, $00, $01, $35, $70
                dc.b    $00, $13, $57, $02, $05, $05, $70, $00, $12, $36, $03, $02, $43, $10, $02, $02
                dc.b    $64, $31, $02, $03, $06, $43, $10, $02, $02, $64, $31, $02, $02, $06, $43, $03
                dc.b    $06, $64, $00, $12, $00, $06, $70, $03, $01, $44, $02, $02, $01, $01, $02, $17
                dc.b    $13, $57, $00, $01, $35, $70, $00, $13, $57, $00, $03, $03, $61, $11, $66, $66
                dc.b    $66, $66, $60, $77, $77, $77, $36, $03, $02, $43, $10, $02, $02, $64, $31, $02
                dc.b    $03, $06, $43, $10, $02, $0F, $64, $31, $00, $11, $17, $30, $11, $66, $66, $66
                dc.b    $66, $77, $77, $77, $15, $03, $01, $44, $02, $02, $01, $01, $02, $17, $13, $57
                dc.b    $00, $01, $35, $70, $00, $13, $57, $00, $11, $03, $61, $11, $66, $66, $66, $66
                dc.b    $60, $77, $77, $65, $36, $03, $02, $43, $10, $02, $02, $64, $31, $02, $03, $06
                dc.b    $43, $10, $02, $53, $64, $31, $00, $11, $17, $30, $00, $66, $66, $66, $65, $DF
                dc.b    $2F, $22, $15, $00, $D0, $D0, $44, $00, $0D, $D4, $01, $01, $0D, $43, $52, $00
                dc.b    $09, $35, $20, $63, $93, $5F, $0D, $0B, $35, $D1, $C1, $D3, $5B, $65, $55, $05
                dc.b    $F9, $45, $46, $36, $00, $0C, $00, $43, $9D, $DD, $00, $34, $39, $D0, $10, $D3
                dc.b    $43, $90, $00, $0D, $34, $39, $36, $11, $CC, $43, $B0, $55, $56, $A4, $3E, $07
                dc.b    $65, $5E, $40, $00, $03, $01, $44, $02, $06, $08, $01, $DA, $BB, $80, $36, $04
                dc.b    $1C, $33, $33, $33, $33, $44, $44, $44, $44, $11, $11, $11, $11, $60, $2F, $FE
                dc.b    $EC, $36, $D0, $11, $00, $43, $91, $01, $00, $73, $08, $88, $8A, $04, $1C, $33
                dc.b    $33, $33, $33, $44, $44, $44, $44, $11, $11, $11, $11, $DE, $FF, $22, $15, $00
                dc.b    $0D, $D0, $44, $00, $1C, $14, $01, $B8, $88, $80, $36, $04, $1C, $33, $33, $33
                dc.b    $33, $44, $44, $44, $44, $11, $11, $11, $11, $60, $22, $FF, $ED, $36, $0D, $D0
                dc.b    $00, $43, $41, $C1, $00, $73, $08, $88, $8B, $04, $1C, $33, $33, $33, $33, $44
                dc.b    $44, $44, $44, $11, $11, $11, $11, $CE, $EF, $F8, $15, $00, $11, $07, $44, $00
                dc.b    $10, $19, $01, $A8, $88, $80, $36, $04, $16, $33, $33, $33, $33, $44, $44, $44
                dc.b    $44, $11, $11, $11, $11, $60, $FE, $ED, $CB, $36, $10, $30, $00, $43, $80, $02
                dc.b    $04, $73, $08, $BB, $AD, $04, $10, $33, $33, $33, $33, $44, $44, $44, $44, $11
                dc.b    $11, $11, $11, $65, $77, $77, $15, $03, $01, $44, $02, $06, $01, $01, $03, $11
                dc.b    $10, $36, $04, $11, $33, $33, $33, $33, $44, $44, $44, $44, $11, $11, $11, $11
                dc.b    $60, $77, $77, $77, $36, $03, $02, $43, $10, $02, $04, $73, $01, $11, $11, $04
                dc.b    $10, $33, $33, $33, $33, $44, $44, $44, $44, $11, $11, $11, $11, $77, $77, $77
                dc.b    $15, $03, $01, $44, $02, $06, $01, $01, $11, $11, $10, $36, $04, $11, $33, $33
                dc.b    $33, $33, $44, $44, $44, $44, $11, $11, $11, $11, $60, $77, $77, $65, $36, $03
                dc.b    $02, $43, $10, $02, $03, $73, $01, $11, $05, $11, $33, $33, $33, $30, $44, $44
                dc.b    $44, $44, $11, $11, $11, $11, $60, $77, $77, $77, $36, $03, $02, $43, $10, $02
                dc.b    $02, $64, $31, $02, $03, $06, $43, $10, $02, $02, $64, $31, $02, $03, $06, $43
                dc.b    $11, $02, $02, $64, $33, $02, $02, $06, $40, $03, $01, $44, $02, $02, $01, $01
                dc.b    $02, $10, $13, $57, $00, $01, $35, $70, $00, $13, $57, $00, $11, $35, $70, $00
                dc.b    $03, $57, $02, $80, $84, $D9, $CC, $CB, $BA, $00, $16, $77, $71, $00, $33, $16
                dc.b    $77, $00, $10, $23, $16, $00, $10, $21, $33, $00, $33, $31, $01, $00, $11, $22
                dc.b    $23, $07, $77, $77, $77, $66, $65, $55, $55, $11, $13, $33, $00, $77, $71, $11
                dc.b    $33, $77, $77, $77, $66, $11, $16, $77, $77, $33, $30, $11, $10, $22, $21, $11
                dc.b    $10, $77, $77, $77, $77, $55, $55, $56, $66, $00, $33, $31, $11, $33, $11, $17
                dc.b    $77, $66, $77, $77, $77, $07, $77, $61, $11, $00, $11, $03, $33, $00, $11, $12
                dc.b    $22, $07, $77, $77, $77, $77, $70, $07, $77, $07, $77, $61, $10, $77, $61, $32
                dc.b    $00, $61, $33, $32, $30, $33, $31, $30, $30, $30, $33, $33, $00, $12, $20, $12
                dc.b    $10, $77, $77, $77, $77, $E9, $33, $33, $98, $0D, $01, $A0, $02, $02, $01, $A0
                dc.b    $03, $04, $A0, $00, $A0, $07, $02, $02, $01, $01, $04, $03, $1A, $00, $0A, $02
                dc.b    $01, $A0, $02, $06, $70, $A0, $A0, $01, $11, $A0, $02, $06, $07, $00, $A0, $01
                dc.b    $11, $10, $02, $06, $10, $7A, $00, $01, $16, $6A, $0C, $01, $A0, $03, $04, $A0
                dc.b    $00, $07, $1A, $02, $02, $07, $1A, $12, $01, $01, $03, $01, $01, $2C, $05, $0A
                dc.b    $00, $DC, $CB, $AA, $05, $01, $A0, $07, $03, $0A, $00, $A0, $03, $04, $A0, $00
                dc.b    $10, $A0, $03, $01, $0A, $02, $06, $76, $67, $DD, $DD, $70, $11, $03, $09, $11
                dc.b    $10, $00, $07, $11, $10, $00, $07, $11, $02, $02, $07, $01, $02, $0A, $06, $01
                dc.b    $10, $00, $76, $01, $10, $00, $77, $01, $02, $02, $07, $01, $02, $02, $07, $01
                dc.b    $02, $02, $77, $11, $02, $07, $77, $11, $10, $00, $70, $11, $10, $02, $01, $11
                dc.b    $02, $02, $11, $10, $02, $02, $01, $10, $02, $02, $07, $11, $02, $2B, $07, $11
                dc.b    $10, $00, $07, $01, $10, $00, $07, $71, $10, $00, $07, $71, $10, $00, $06, $71
                dc.b    $10, $00, $06, $71, $10, $00, $07, $71, $10, $00, $07, $71, $10, $00, $07, $71
                dc.b    $10, $00, $07, $61, $10, $00, $07, $11, $10, $02, $05, $01, $10, $00, $01, $01
                dc.b    $03, $01, $10, $02, $06, $11, $16, $11, $11, $00, $07, $02, $07, $07, $00, $70
                dc.b    $00, $07, $00, $70, $02, $02, $70, $70, $02, $11, $70, $77, $00, $70, $00, $77
                dc.b    $00, $70, $00, $70, $70, $70, $70, $00, $70, $70, $70, $03, $02, $70, $70, $02
                dc.b    $02, $70, $70, $03, $08, $70, $00, $70, $70, $70, $00, $70, $70, $02, $1A, $11
                dc.b    $11, $11, $11, $44, $66, $45, $AA, $22, $02, $1F, $00, $02, $01, $FF, $F0, $32
                dc.b    $2F, $F1, $3E, $00, $1F, $12, $02, $30, $0F, $02, $16, $20, $10, $E2, $02, $00
                dc.b    $2F, $01, $31, $EC, $C0, $FF, $F1, $00, $E3, $1F, $01, $00, $20, $21, $0F, $00
                dc.b    $20, $02, $20, $F0, $E3, $3E, $0F, $00, $0F, $F0, $00, $F0, $0F, $00, $F1, $FF
                dc.b    $01, $FF, $02, $30, $F1, $00, $02, $23, $00, $01, $10, $00, $31, $10, $02, $10
                dc.b    $02, $22, $22, $02, $16, $02, $31, $10, $02, $31, $01, $20, $31, $01, $32, $02
                dc.b    $01, $32, $22, $67, $45, $77, $57, $30, $00, $20, $02, $03, $0A, $22, $20, $22
                dc.b    $22, $20, $23, $33, $13, $02, $30, $02, $10, $22, $00, $33, $33, $33, $11, $20
                dc.b    $02, $11, $11, $22, $01, $11, $33, $00, $30, $03, $0A, $30, $33, $22, $20, $56
                dc.b    $50, $66, $66, $11, $05, $03, $07, $11, $00, $01, $11, $11, $11, $10, $02, $16
                dc.b    $55, $77, $56, $66, $02, $22, $30, $30, $02, $22, $33, $03, $20, $00, $20, $00
                dc.b    $23, $11, $20, $22, $33, $33, $02, $01, $30, $03, $28, $22, $20, $22, $00, $12
                dc.b    $22, $21, $11, $30, $00, $33, $03, $00, $20, $30, $30, $02, $00, $22, $22, $22
                dc.b    $22, $02, $00, $22, $22, $20, $20, $20, $22, $00, $20, $00, $22, $22, $00, $22
                dc.b    $00, $77, $76, $02, $14, $11, $00, $22, $00, $10, $01, $00, $07, $06, $77, $76
                dc.b    $61, $16, $77, $11, $01, $11, $77, $11, $10, $02, $1D, $76, $77, $70, $77, $67
                dc.b    $70, $26, $66, $10, $72, $03, $03, $00, $02, $00, $30, $77, $00, $20, $00, $21
                dc.b    $11, $13, $02, $33, $33, $33, $02, $30, $02, $09, $22, $00, $02, $22, $00, $DC
                dc.b    $8C, $AE, $F8, $08, $08, $66, $52, $41, $71, $66, $52, $41, $71, $08, $0C, $66
                dc.b    $52, $41, $71, $8A, $FE, $EF, $8B, $30, $00, $20, $02, $03, $0A, $22, $20, $22
                dc.b    $22, $20, $23, $33, $13, $02, $30, $02, $18, $22, $00, $33, $33, $33, $11, $20
                dc.b    $02, $11, $20, $02, $01, $11, $20, $00, $33, $33, $00, $02, $30, $00, $22, $22
                dc.b    $20, $02, $08, $32, $20, $22, $30, $30, $00, $22, $30, $02, $01, $22, $05, $18
                dc.b    $22, $03, $11, $02, $22, $30, $30, $02, $22, $33, $03, $20, $00, $20, $00, $23
                dc.b    $11, $20, $22, $33, $33, $00, $02, $30, $02, $1F, $02, $22, $20, $22, $00, $12
                dc.b    $22, $21, $11, $30, $00, $33, $03, $00, $20, $30, $30, $02, $00, $22, $22, $22
                dc.b    $22, $22, $00, $20, $00, $22, $00, $02, $22, $02, $01, $20, $03, $04, $22, $02
                dc.b    $21, $11, $02, $05, $33, $33, $00, $02, $30, $02, $0C, $20, $22, $22, $03, $31
                dc.b    $11, $00, $33, $33, $33, $02, $30, $03, $0C, $22, $22, $20, $20, $12, $00, $23
                dc.b    $33, $30, $00, $33, $33, $02, $01, $30, $02, $0C, $22, $02, $22, $03, $33, $31
                dc.b    $00, $33, $33, $33, $00, $30, $03, $1C, $02, $22, $22, $00, $75, $75, $44, $BB
                dc.b    $00, $22, $10, $FF, $22, $20, $23, $11, $33, $32, $00, $22, $10, $12, $00, $02
                dc.b    $23, $20, $00, $2E, $03, $19, $10, $32, $00, $02, $FF, $12, $33, $30, $C3, $13
                dc.b    $01, $12, $00, $13, $32, $20, $00, $22, $3C, $C3, $32, $CE, $F0, $0F, $F1, $03
                dc.b    $01, $0F, $03, $1D, $FF, $EE, $F0, $FF, $11, $22, $3C, $11, $00, $02, $20, $22
                dc.b    $22, $21, $13, $33, $32, $23, $31, $10, $01, $22, $02, $23, $33, $10, $20, $02
                dc.b    $22, $02, $11, $02, $22, $01, $02, $00, $23, $56, $55, $01, $33, $30, $00, $11
                dc.b    $10, $22, $00, $10, $03, $46, $70, $00, $21, $11, $26, $57, $30, $03, $30, $01
                dc.b    $30, $33, $33, $21, $21, $21, $22, $00, $67, $07, $76, $66, $10, $70, $10, $10
                dc.b    $00, $77, $11, $01, $77, $00, $77, $77, $76, $66, $66, $07, $10, $00, $01, $77
                dc.b    $10, $10, $10, $70, $76, $76, $77, $77, $76, $77, $21, $66, $11, $00, $30, $30
                dc.b    $10, $00, $33, $03, $00, $07, $22, $00, $11, $16, $67, $55, $02, $04, $10, $07
                dc.b    $01, $01, $02, $0B, $10, $10, $00, $70, $65, $57, $01, $66, $30, $00, $10, $02
                dc.b    $09, $20, $00, $11, $22, $07, $11, $00, $76, $60, $02, $04, $01, $10, $00, $70
                dc.b    $04, $0A, $77, $77, $77, $07, $67, $77, $66, $66, $10, $71, $03, $10, $01, $00
                dc.b    $11, $77, $00, $11, $00, $76, $61, $11, $00, $11, $11, $11, $00, $10, $02, $29
                dc.b    $77, $70, $07, $77, $00, $61, $70, $21, $11, $01, $00, $30, $30, $10, $00, $33
                dc.b    $03, $55, $00, $22, $22, $03, $11, $11, $00, $30, $03, $03, $00, $33, $00, $30
                dc.b    $00, $22, $12, $22, $00, $33, $33, $33, $33, $1C, $04, $11, $33, $11, $22, $02
                dc.b    $14, $33, $03, $22, $00, $30, $30, $00, $02, $01, $22, $21, $13, $31, $22, $33
                dc.b    $03, $33, $22, $33, $30, $02, $1D, $21, $22, $20, $22, $12, $20, $23, $33, $30
                dc.b    $22, $03, $03, $00, $02, $00, $30, $22, $00, $20, $00, $21, $11, $13, $02, $33
                dc.b    $33, $33, $02, $30, $02, $30, $22, $00, $02, $22, $00, $30, $22, $21, $11, $30
                dc.b    $20, $30, $30, $00, $22, $33, $03, $22, $00, $22, $22, $21, $11, $11, $00, $30
                dc.b    $00, $03, $00, $30, $30, $30, $00, $21, $21, $22, $00, $12, $00, $21, $12, $30
                dc.b    $00, $33, $30, $22, $00, $30, $05, $18, $21, $11, $03, $02, $30, $03, $30, $01
                dc.b    $30, $33, $33, $21, $21, $21, $22, $00, $12, $00, $21, $11, $30, $00, $30, $30
                dc.b    $02, $2F, $33, $03, $02, $00, $22, $22, $01, $11, $11, $00, $30, $03, $03, $00
                dc.b    $33, $00, $30, $00, $22, $12, $22, $00, $12, $20, $21, $11, $30, $00, $33, $33
                dc.b    $00, $20, $30, $00, $22, $02, $02, $22, $02, $20, $02, $00, $22, $22, $22, $00
                dc.b    $20, $07, $0D, $BB, $45, $75, $45, $00, $F1, $22, $02, $00, $F0, $00, $10, $0F
                dc.b    $02, $0E, $22, $F0, $01, $00, $02, $11, $10, $20, $23, $22, $22, $02, $1F, $C2
                dc.b    $03, $07, $C2, $23, $30, $3C, $00, $20, $02, $02, $02, $01, $10, $02, $0B, $02
                dc.b    $20, $00, $23, $CC, $32, $00, $EF, $00, $F1, $22, $02, $02, $0F, $10, $04, $08
                dc.b    $EF, $EE, $CE, $0E, $21, $00, $01, $F0, $04, $2A, $20, $02, $20, $F0, $20, $20
                dc.b    $00, $0F, $02, $00, $23, $33, $20, $02, $33, $32, $22, $31, $FF, $FE, $57, $44
                dc.b    $9A, $AA, $02, $22, $30, $30, $02, $22, $33, $03, $20, $00, $20, $00, $23, $11
                dc.b    $20, $22, $33, $33, $02, $01, $30, $03, $0D, $22, $20, $22, $00, $12, $05, $76
                dc.b    $66, $30, $00, $10, $00, $30, $02, $08, $11, $30, $67, $61, $00, $44, $06, $61
                dc.b    $03, $01, $01, $02, $36, $11, $10, $00, $11, $00, $77, $00, $10, $77, $76, $11
                dc.b    $10, $07, $11, $11, $10, $07, $10, $00, $10, $67, $77, $07, $01, $01, $66, $07
                dc.b    $10, $00, $10, $07, $10, $01, $01, $70, $76, $67, $77, $00, $77, $00, $76, $66
                dc.b    $07, $77, $10, $10, $07, $77, $11, $01, $70, $00, $77, $02, $0A, $77, $70, $77
                dc.b    $00, $77, $70, $20, $07, $00, $22, $02, $32, $07, $22, $20, $67, $77, $21, $11
                dc.b    $10, $02, $33, $33, $10, $02, $30, $00, $67, $70, $22, $02, $21, $11, $11, $02
                dc.b    $30, $00, $30, $02, $30, $03, $03, $20, $21, $12, $22, $00, $20, $00, $21, $11
                dc.b    $20, $00, $33, $33, $00, $02, $30, $00, $22, $22, $20, $02, $08, $32, $20, $22
                dc.b    $30, $30, $00, $22, $30, $02, $01, $22, $04, $04, $11, $11, $11, $33, $1C, $0F
                dc.b    $11, $33, $12, $22, $02, $22, $30, $30, $57, $55, $33, $03, $33, $32, $55, $02
                dc.b    $03, $01, $22, $52, $02, $02, $10, $27, $05, $27, $11, $01, $02, $56, $75, $65
                dc.b    $44, $30, $00, $33, $03, $00, $20, $30, $30, $02, $00, $22, $22, $22, $22, $22
                dc.b    $20, $20, $00, $02, $20, $22, $22, $20, $00, $77, $77, $00, $02, $55, $75, $21
                dc.b    $13, $02, $14, $33, $33, $00, $02, $35, $55, $00, $27, $52, $23, $03, $52, $21
                dc.b    $10, $36, $20, $10, $00, $30, $01, $02, $0D, $52, $00, $11, $10, $20, $23, $01
                dc.b    $01, $22, $00, $21, $00, $22, $02, $09, $02, $10, $20, $20, $00, $01, $02, $20
                dc.b    $20, $02, $01, $02, $04, $11, $02, $01, $02, $02, $31, $30, $02, $02, $56, $01
                dc.b    $11, $22, $60, $20, $00, $10, $25, $02, $23, $01, $20, $01, $00, $13, $02, $22
                dc.b    $33, $20, $00, $23, $33, $20, $00, $EF, $FF, $E3, $22, $CE, $EC, $C3, $20, $02
                dc.b    $22, $33, $32, $02, $3E, $FF, $01, $21, $F0, $00, $F0, $0F, $03, $01, $10, $02
                dc.b    $04, $F0, $0F, $00, $FF, $02, $01, $FF, $03, $09, $13, $11, $00, $10, $12, $20
                dc.b    $00, $21, $F1, $04, $28, $02, $00, $21, $F0, $00, $11, $EF, $01, $00, $02, $FF
                dc.b    $02, $00, $20, $00, $30, $00, $02, $FF, $33, $33, $22, $FE, $13, $31, $22, $00
                dc.b    $22, $22, $01, $12, $21, $00, $2F, $22, $10, $20, $1E, $01, $01, $02, $1C, $30
                dc.b    $12, $00, $0E, $01, $20, $00, $1F, $11, $CC, $CC, $10, $1F, $00, $0F, $13, $FF
                dc.b    $F0, $00, $20, $E3, $3F, $00, $20, $20, $03, $0F, $12, $03, $34, $FE, $20, $03
                dc.b    $00, $0E, $E3, $30, $FC, $01, $A6, $46, $66, $A5, $30, $20, $30, $30, $00, $22
                dc.b    $33, $03, $22, $00, $22, $22, $21, $11, $11, $00, $30, $00, $03, $00, $30, $30
                dc.b    $30, $00, $21, $21, $22, $00, $12, $00, $21, $12, $30, $00, $33, $30, $22, $00
                dc.b    $30, $05, $14, $21, $11, $03, $02, $30, $03, $30, $01, $30, $33, $33, $21, $21
                dc.b    $21, $22, $00, $22, $00, $77, $76, $02, $14, $11, $00, $22, $00, $10, $01, $00
                dc.b    $22, $56, $77, $21, $33, $31, $22, $33, $03, $33, $22, $33, $30, $02, $1D, $21
                dc.b    $22, $20, $22, $67, $00, $05, $54, $10, $00, $71, $10, $00, $07, $10, $11, $77
                dc.b    $00, $11, $00, $76, $61, $11, $00, $11, $11, $11, $00, $10, $02, $0B, $77, $00
                dc.b    $07, $77, $00, $11, $17, $66, $66, $01, $11, $02, $16, $10, $01, $00, $11, $77
                dc.b    $77, $61, $00, $76, $66, $61, $10, $10, $00, $01, $01, $00, $01, $10, $11, $11
                dc.b    $10, $02, $19, $10, $07, $56, $66, $10, $72, $03, $03, $00, $02, $00, $30, $77
                dc.b    $00, $20, $00, $21, $11, $13, $02, $33, $33, $33, $02, $30, $02, $09, $22, $00
                dc.b    $02, $22, $00, $11, $13, $33, $33, $1C, $77, $CB, $BB, $BB, $BB, $00, $21, $21
                dc.b    $12, $00, $31, $3B, $13, $00, $11, $B0, $13, $00, $20, $00, $33, $00, $33, $B0
                dc.b    $33, $00, $12, $10, $12, $07, $77, $7D, $A7, $77, $77, $77, $A7, $12, $12, $11
                dc.b    $20, $31, $33, $32, $3A, $32, $13, $32, $30, $33, $91, $30, $30, $33, $03, $33
                dc.b    $03, $1B, $00, $12, $B0, $A0, $0A, $7A, $30, $DA, $AA, $DA, $99, $00, $21, $8A
                dc.b    $22, $00, $02, $30, $81, $D0, $11, $B0, $02, $00, $10, $00, $82, $00, $38, $00
                dc.b    $01, $00, $10, $0A, $28, $77, $7D, $0A, $A0, $D7, $77, $AA, $AA, $21, $22, $12
                dc.b    $10, $3B, $00, $30, $30, $20, $10, $30, $00, $20, $91, $00, $30, $B0, $01, $33
                dc.b    $02, $1D, $02, $21, $10, $30, $D7, $A7, $77, $9A, $77, $A7, $D7, $21, $22, $12
                dc.b    $00, $32, $00, $38, $00, $22, $10, $30, $0A, $23, $21, $B0, $30, $30, $31, $02
                dc.b    $0B, $22, $22, $00, $03, $77, $77, $D0, $00, $DD, $ED, $70, $02, $06, $40, $20
                dc.b    $04, $D3, $03, $80, $02, $03, $44, $00, $01, $02, $08, $73, $00, $03, $00, $04
                dc.b    $00, $D0, $04, $04, $0C, $01, $40, $70, $99, $D6, $75, $00, $12, $A0, $30, $03
                dc.b    $B3, $03, $07, $03, $03, $00, $04, $3B, $30, $40, $04, $04, $10, $40, $00, $04
                dc.b    $04, $27, $67, $D9, $39, $DD, $0A, $2A, $81, $22, $00, $80, $32, $11, $00, $90
                dc.b    $21, $02, $00, $18, $21, $12, $3A, $33, $31, $01, $00, $11, $22, $22, $00, $A7
                dc.b    $77, $77, $EA, $A7, $7D, $DE, $00, $21, $2B, $02, $0A, $02, $32, $03, $00, $11
                dc.b    $21, $03, $00, $10, $28, $02, $09, $33, $30, $30, $00, $11, $80, $04, $07, $77
                dc.b    $02, $05, $ED, $DE, $76, $40, $03, $02, $06, $10, $40, $30, $01, $01, $04, $03
                dc.b    $03, $01, $44, $01, $03, $01, $10, $02, $01, $10, $03, $01, $01, $02, $0A, $11
                dc.b    $11, $51, $11, $00, $10, $40, $00, $01, $11, $04, $01, $10, $02, $01, $10, $04
                dc.b    $01, $01, $09, $08, $56, $66, $CC, $DD, $43, $00, $12, $10, $02, $05, $30, $30
                dc.b    $00, $08, $30, $02, $33, $01, $00, $30, $03, $01, $33, $00, $40, $A2, $21, $10
                dc.b    $00, $77, $77, $77, $9A, $77, $DD, $EE, $21, $22, $B0, $30, $32, $00, $38, $00
                dc.b    $22, $10, $30, $83, $26, $32, $13, $38, $00, $70, $01, $13, $17, $00, $01, $10
                dc.b    $77, $07, $01, $11, $AA, $BB, $CC, $CC, $04, $02, $40, $10, $02, $02, $04, $01
                dc.b    $02, $14, $BB, $EE, $FF, $FF, $33, $11, $11, $00, $33, $00, $11, $00, $23, $33
                dc.b    $11, $00, $CD, $DD, $EF, $EE, $03, $01, $04, $02, $36, $10, $40, $00, $01, $04
                dc.b    $03, $FF, $FE, $EA, $B8, $00, $11, $11, $33, $00, $11, $00, $33, $00, $11, $33
                dc.b    $32, $A9, $22, $11, $10, $00, $21, $21, $22, $3A, $02, $32, $11, $00, $11, $21
                dc.b    $02, $81, $22, $32, $40, $31, $10, $07, $00, $01, $10, $00, $71, $11, $10, $70
                dc.b    $77, $00, $15, $69, $0D, $00, $15, $00, $97, $00, $14, $00, $97, $00, $01, $60
                dc.b    $00, $60, $02, $35, $02, $00, $03, $00, $01, $00, $01, $00, $11, $00, $11, $00
                dc.b    $11, $00, $11, $00, $01, $00, $01, $00, $01, $00, $11, $00, $01, $00, $11, $00
                dc.b    $11, $00, $01, $00, $11, $00, $7C, $00, $7C, $00, $7E, $00, $7C, $00, $7E, $00
                dc.b    $01, $00, $7C, $00, $03, $00, $02, $00, $7E, $03, $81, $86, $76, $00, $09, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $13, $08, $13, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $17, $08, $17, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $13, $08, $13, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $35, $08, $35, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $17, $08, $17, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $13, $00, $12, $00
                dc.b    $10, $00, $10, $00, $11, $00, $11, $00, $10, $00, $10, $88, $18, $80, $19, $00
                dc.b    $37, $00, $10, $08, $36, $08, $11, $00, $10, $00, $37, $00, $32, $00, $15, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00
                dc.b    $10, $00, $10, $00, $12, $08, $17, $00, $10, $08, $15, $08, $71, $08, $71, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $88, $77, $88, $5C, $00
                dc.b    $01, $00, $10, $80, $43, $80, $79, $00, $10, $00, $10, $00, $12, $00, $12, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $00, $12, $00, $12, $00
                dc.b    $10, $00, $10, $88, $19, $88, $53, $00, $10, $00, $01, $80, $5C, $80, $07, $00
                dc.b    $24, $00, $24, $00, $26, $00, $26, $00, $24, $00, $24, $80, $20, $80, $0A, $00
                dc.b    $01, $00, $10, $80, $63, $80, $58, $00, $10, $00, $10, $00, $12, $00, $12, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $00, $12, $00, $12, $00
                dc.b    $10, $00, $10, $88, $38, $88, $73, $00, $10, $00, $01, $88, $5E, $88, $04, $00
                dc.b    $24, $00, $24, $00, $26, $08, $23, $00, $24, $08, $21, $08, $05, $08, $05, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $71, $08, $71, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $08, $55, $68, $55, $60, $11, $00
                dc.b    $4C, $E0, $02, $02, $4C, $E0, $02, $57, $4E, $00, $4F, $00, $14, $00, $14, $00
                dc.b    $30, $00, $30, $00, $36, $00, $36, $00, $30, $00, $30, $00, $32, $00, $32, $00
                dc.b    $30, $00, $30, $68, $6B, $60, $5F, $00, $24, $08, $10, $80, $5F, $88, $23, $00
                dc.b    $7E, $08, $7D, $00, $7E, $08, $7D, $08, $7D, $00, $01, $00, $01, $00, $01, $00
                dc.b    $78, $00, $78, $00, $78, $00, $78, $00, $7E, $00, $7E, $00, $36, $00, $7D, $00
                dc.b    $7B, $00, $32, $00, $31, $00, $79, $00, $33, $00, $06, $00, $33, $00, $4D, $02
                dc.b    $81, $52, $08, $7E, $00, $68, $08, $17, $00, $10, $00, $10, $80, $FE, $80, $FC
                dc.b    $00, $14, $00, $14, $00, $1A, $00, $18, $00, $10, $00, $10, $00, $1C, $00, $1C
                dc.b    $00, $10, $00, $10, $00, $14, $00, $14, $00, $14, $00, $14, $00, $10, $00, $10
                dc.b    $00, $14, $00, $14, $00, $16, $00, $14, $00, $10, $00, $10, $00, $12, $00, $10
                dc.b    $00, $24, $00, $24, $00, $26, $00, $24, $00, $24, $00, $24, $00, $24, $00, $26
                dc.b    $00, $24, $00, $24, $00, $24, $00, $24, $00, $10, $00, $10, $00, $10, $00, $12
                dc.b    $00, $10, $00, $10, $00, $14, $00, $16, $00, $14, $00, $14, $00, $10, $00, $10
                dc.b    $00, $14, $00, $14, $00, $18, $00, $18, $00, $10, $00, $10, $00, $16, $00, $16
                dc.b    $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $D8, $08, $D9
                dc.b    $00, $10, $00, $10, $80, $7A, $80, $7A, $00, $10, $00, $10, $80, $BA, $88, $B9
                dc.b    $80, $23, $00, $14, $80, $23, $00, $14, $00, $14, $80, $21, $80, $62, $00, $55
                dc.b    $00, $04, $00, $04, $00, $06, $00, $06, $00, $04, $00, $04, $00, $0E, $00, $0E
                dc.b    $00, $04, $00, $04, $00, $06, $00, $06, $00, $04, $00, $04, $00, $58, $00, $58
                dc.b    $00, $A5, $00, $A5, $00, $AB, $00, $AB, $00, $AB, $00, $AB, $E9, $0C, $E9, $0C
                dc.b    $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $18, $09, $AC
                dc.b    $00, $10, $00, $01, $00, $10, $09, $BA, $00, $10, $00, $10, $81, $A1, $09, $A9
                dc.b    $00, $01, $00, $01, $80, $1F, $09, $B1, $00, $01, $00, $10, $09, $AA, $00, $12
                dc.b    $00, $10, $00, $10, $00, $FC, $00, $FC, $00, $10, $00, $10, $00, $DB, $00, $DE
                dc.b    $00, $CA, $00, $10, $00, $CD, $00, $12, $00, $10, $00, $10, $00, $C4, $00, $C4
                dc.b    $00, $19, $00, $15, $00, $0E, $A8, $0B, $00, $02, $00, $10, $E9, $E2, $A8, $D4
                dc.b    $00, $01, $E9, $2C, $E9, $2E, $E9, $2E, $E9, $2E, $00, $10, $E9, $EF, $00, $D1
                dc.b    $00, $10, $00, $10, $03, $67, $3F, $00, $2F, $00, $10, $00, $12, $00, $12, $00
                dc.b    $10, $00, $10, $00, $50, $00, $50, $00, $10, $00, $10, $E9, $93, $09, $3C, $00
                dc.b    $01, $00, $01, $E9, $EE, $09, $41, $00, $10, $00, $10, $00, $10, $00, $01, $00
                dc.b    $10, $00, $36, $00, $A2, $00, $01, $00, $30, $00, $10, $00, $CE, $00, $7A, $09
                dc.b    $A1, $00, $10, $E0, $02, $09, $1D, $00, $01, $00, $03, $E9, $EF, $09, $43, $00
                dc.b    $10, $00, $10, $00, $10, $00, $26, $00, $10, $00, $0E, $00, $83, $00, $6D, $00
                dc.b    $F0, $09, $B8, $00, $62, $09, $EC, $09, $42, $00, $11, $09, $42, $03, $19, $11
                dc.b    $00, $11, $00, $63, $00, $25, $00, $30, $00, $10, $09, $AF, $00, $68, $09, $D8
                dc.b    $00, $66, $01, $D8, $89, $D7, $01, $D6, $02, $36, $08, $D3, $81, $06, $00, $10
                dc.b    $00, $10, $08, $B8, $08, $BA, $00, $10, $00, $10, $00, $72, $00, $72, $00, $10
                dc.b    $00, $10, $00, $32, $00, $22, $00, $25, $00, $3B, $00, $24, $00, $1A, $00, $2A
                dc.b    $00, $18, $00, $1A, $00, $08, $00, $18, $00, $0E, $00, $08, $89, $C3, $01, $CC
                dc.b    $02, $03, $88, $00, $68, $05, $80, $9C, $21, $E6, $49, $E7, $00, $10, $00, $10
                dc.b    $00, $1E, $08, $1F, $00, $10, $00, $10, $08, $1F, $00, $1E, $00, $10, $00, $10
                dc.b    $08, $1E, $00, $1F, $00, $10, $00, $10, $00, $13, $08, $13, $00, $10, $00, $10
                dc.b    $00, $10, $08, $13, $00, $10, $00, $10, $C1, $D4, $C1, $D7, $00, $10, $00, $10
                dc.b    $00, $11, $00, $11, $00, $10, $00, $10, $00, $1B, $08, $1A, $00, $10, $00, $10
                dc.b    $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10
                dc.b    $00, $12, $00, $12, $00, $10, $00, $10, $08, $1F, $08, $1F, $00, $10, $00, $10
                dc.b    $08, $11, $08, $11, $00, $10, $00, $10, $08, $17, $08, $17, $00, $10, $00, $10
                dc.b    $08, $11, $08, $11, $00, $10, $00, $10, $88, $79, $88, $79, $00, $10, $00, $10
                dc.b    $00, $12, $08, $13, $00, $10, $00, $10, $08, $13, $00, $12, $00, $10, $08, $55
                dc.b    $68, $55, $60, $11, $12, $01, $68, $03, $01, $68, $0B, $06, $68, $00, $20, $BF
                dc.b    $08, $03, $03, $01, $01, $02, $02, $40, $BD, $04, $02, $40, $BD, $03, $01, $01
                dc.b    $02, $04, $60, $03, $20, $BF, $5E, $01, $68, $07, $01, $68, $37, $01, $68, $07
                dc.b    $01, $68, $37, $01, $68, $07, $01, $68, $3D, $03, $80, $00, $80, $2D, $03, $80
                dc.b    $00, $80, $0D, $03, $80, $00, $80, $6D, $03, $80, $00, $80, $81, $15, $04, $FF
                dc.b    $FF, $FF, $FF, $14, $01, $FF, $03, $02, $FF, $FF, $02, $02, $FF, $FF, $02, $02
                dc.b    $FF, $FF, $03, $01, $FF, $06, $0A, $FF, $FF, $33, $33, $CC, $FF, $CC, $CC, $CC
                dc.b    $FF, $05, $01, $FF, $03, $01, $FF, $07, $09, $FF, $FF, $FF, $FF, $00, $FF, $FF
                dc.b    $FF, $FF, $04, $04, $FF, $FF, $FF, $FF, $08, $04, $FF, $FF, $FF, $FF, $10, $04
                dc.b    $FF, $FF, $FF, $FF, $02, $02, $FF, $FF, $02, $02, $FF, $FF, $0F, $0C, $FF, $FF
                dc.b    $FF, $FF, $00, $0F, $FF, $F0, $00, $0F, $FF, $F0, $81, $89, $62, $41, $04, $40
                dc.b    $41, $40, $44, $01, $40, $00, $41, $71, $16, $17, $32, $31, $15, $17, $32, $00
                dc.b    $42, $40, $05, $41, $01, $40, $44, $01, $40, $41, $01, $43, $41, $01, $40, $32
                dc.b    $57, $57, $32, $31, $57, $57, $37, $41, $01, $42, $44, $01, $40, $43, $01, $40
                dc.b    $41, $01, $40, $41, $01, $40, $00, $70, $56, $17, $32, $31, $16, $56, $72, $00
                dc.b    $41, $01, $40, $41, $01, $43, $11, $51, $51, $16, $01, $03, $03, $06, $04, $01
                dc.b    $03, $03, $07, $00, $02, $04, $01, $03, $03, $05, $02, $10, $11, $10, $11, $35
                dc.b    $4E, $43, $01, $42, $43, $42, $43, $01, $42, $00, $62, $62, $23, $22, $04, $04
                dc.b    $23, $22, $27, $21, $43, $42, $02, $46, $01, $42, $43, $01, $42, $43, $01, $40
                dc.b    $43, $01, $63, $22, $60, $60, $04, $04, $60, $60, $25, $67, $01, $42, $43, $01
                dc.b    $42, $43, $01, $42, $43, $01, $42, $43, $01, $42, $21, $63, $61, $22, $04, $04
                dc.b    $23, $61, $67, $24, $43, $01, $42, $43, $01, $42, $04, $42, $43, $01, $05, $0E
                dc.b    $02, $10, $14, $02, $02, $10, $14, $35, $04, $01, $01, $02, $01, $02, $11, $03
                dc.b    $02, $05, $29, $28, $29, $2F, $04, $04, $29, $2F, $2D, $2C, $02, $05, $00, $03
                dc.b    $03, $03, $03, $02, $05, $02, $0C, $02, $05, $29, $28, $2B, $2A, $04, $04, $2B
                dc.b    $2A, $2D, $2C, $03, $01, $03, $03, $03, $03, $02, $05, $02, $0E, $02, $05, $29
                dc.b    $28, $2B, $2A, $04, $04, $2B, $2A, $2D, $2C, $02, $05, $02, $07, $02, $05, $04
                dc.b    $01, $01, $01, $05, $0F, $01, $3E, $03, $01, $3E, $35, $17, $0C, $0D, $0C, $0D
                dc.b    $02, $04, $08, $0C, $0F, $08, $30, $34, $37, $36, $35, $34, $37, $36, $09, $0E
                dc.b    $0D, $0C, $06, $05, $13, $02, $04, $0C, $0E, $0D, $0D, $36, $34, $35, $33, $35
                dc.b    $34, $37, $36, $09, $0E, $0D, $0C, $06, $05, $1A, $02, $04, $0C, $0E, $0D, $0D
                dc.b    $36, $34, $35, $33, $35, $34, $37, $36, $03, $00, $02, $05, $03, $00, $05, $03
                dc.b    $01, $01, $06, $07, $0F, $01, $44, $03, $01, $44, $35, $0D, $01, $01, $01, $01
                dc.b    $5B, $5A, $00, $41, $1B, $5A, $00, $41, $40, $04, $08, $03, $5B, $5A, $00, $03
                dc.b    $5B, $5A, $03, $03, $15, $58, $5A, $00, $41, $1B, $5A, $00, $41, $40, $03, $00
                dc.b    $41, $40, $03, $5B, $1B, $40, $00, $5B, $5A, $03, $03, $02, $58, $5A, $02, $02
                dc.b    $5B, $5A, $03, $01, $03, $02, $0E, $41, $43, $00, $41, $01, $40, $27, $67, $6F
                dc.b    $3C, $26, $27, $2E, $3D, $0F, $01, $44, $03, $01, $44, $35, $0F, $02, $01, $01
                dc.b    $01, $5E, $5C, $00, $43, $1F, $5C, $03, $43, $42, $02, $06, $02, $08, $02, $58
                dc.b    $5C, $03, $00, $5D, $5C, $03, $03, $15, $5D, $5C, $03, $43, $1F, $5E, $06, $43
                dc.b    $42, $02, $05, $43, $42, $00, $5D, $1F, $41, $00, $5D, $5C, $03, $03, $07, $5D
                dc.b    $5C, $03, $00, $5D, $5E, $06, $02, $11, $02, $05, $00, $43, $42, $00, $43, $01
                dc.b    $42, $31, $73, $71, $32, $30, $31, $32, $33, $0F, $01, $44, $03, $01, $44, $35
                dc.b    $0C, $01, $03, $04, $01, $5F, $5C, $07, $05, $5F, $5E, $02, $05, $05, $03, $02
                dc.b    $5F, $5E, $02, $0C, $5A, $5E, $00, $02, $07, $05, $5F, $5E, $02, $05, $5F, $5E
                dc.b    $03, $02, $02, $05, $03, $02, $5A, $5E, $02, $0C, $5A, $5E, $00, $02, $07, $05
                dc.b    $5F, $5E, $02, $05, $5F, $5E, $03, $02, $02, $05, $03, $0C, $07, $05, $00, $02
                dc.b    $1F, $19, $1F, $1E, $1C, $1D, $1E, $1F, $0E, $02, $44, $02, $02, $02, $44, $02
                dc.b    $35, $04, $01, $01, $01, $01, $02, $05, $09, $0E, $0D, $0C, $06, $05, $13, $02
                dc.b    $04, $0F, $0E, $0F, $08, $19, $18, $1B, $1A, $19, $18, $1B, $1A, $09, $0E, $0D
                dc.b    $0C, $06, $05, $13, $02, $04, $0F, $0E, $0F, $08, $19, $18, $1B, $1A, $19, $18
                dc.b    $1B, $1A, $09, $0E, $0D, $0C, $06, $05, $0E, $02, $04, $0F, $0E, $0F, $08, $31
                dc.b    $16, $33, $32, $30, $17, $32, $33, $0E, $02, $10, $11, $02, $02, $10, $11, $35
                dc.b    $39, $41, $03, $40, $41, $40, $02, $41, $01, $40, $00, $41, $01, $40, $41, $01
                dc.b    $42, $41, $01, $40, $01, $41, $61, $20, $20, $22, $04, $04, $21, $27, $25, $24
                dc.b    $43, $45, $00, $41, $01, $45, $41, $01, $43, $44, $01, $40, $00, $41, $61, $20
                dc.b    $20, $22, $04, $04, $21, $27, $25, $24, $02, $05, $02, $02, $02, $05, $02, $0F
                dc.b    $01, $05, $02, $00, $03, $03, $23, $20, $23, $1C, $3F, $21, $22, $1E, $1F, $0E
                dc.b    $02, $12, $15, $02, $02, $12, $15, $35, $38, $43, $01, $42, $43, $41, $00, $43
                dc.b    $01, $41, $00, $43, $01, $42, $43, $01, $42, $43, $01, $42, $00, $43, $6B, $28
                dc.b    $2B, $2A, $04, $04, $2B, $2A, $2D, $2C, $43, $42, $00, $43, $01, $42, $43, $01
                dc.b    $42, $43, $01, $42, $00, $43, $6B, $28, $2B, $2A, $04, $04, $2B, $2A, $2D, $2C
                dc.b    $03, $03, $01, $03, $09, $1D, $29, $28, $2B, $33, $1B, $29, $12, $0B, $33, $38
                dc.b    $01, $39, $38, $01, $39, $38, $01, $39, $38, $01, $39, $38, $01, $29, $11, $38
                dc.b    $39, $10, $11, $35, $04, $01, $01, $01, $01, $02, $0C, $02, $05, $00, $02, $07
                dc.b    $05, $02, $07, $05, $00, $02, $05, $04, $10, $1D, $1C, $1F, $1E, $1F, $19, $1F
                dc.b    $1C, $07, $05, $02, $07, $05, $00, $02, $05, $08, $10, $1D, $1C, $1F, $1E, $1F
                dc.b    $19, $1F, $1C, $07, $05, $02, $07, $05, $00, $02, $05, $04, $20, $02, $05, $00
                dc.b    $02, $1F, $19, $1F, $1C, $26, $26, $22, $25, $01, $07, $06, $01, $07, $06, $01
                dc.b    $07, $06, $01, $07, $06, $01, $07, $2E, $2F, $3B, $3C, $12, $15, $35, $04, $10
                dc.b    $11, $10, $11, $04, $02, $02, $02, $02, $12, $02, $02, $02, $02, $02, $02, $02
                dc.b    $02, $02, $02, $80, $80, $82, $82, $80, $80, $80, $80, $04, $04, $02, $02, $02
                dc.b    $02, $04, $02, $02, $02, $02, $0C, $80, $80, $82, $82, $82, $82, $82, $82, $02
                dc.b    $02, $02, $02, $02, $04, $02, $02, $02, $02, $02, $02, $02, $02, $02, $1C, $80
                dc.b    $80, $82, $82, $04, $04, $04, $04, $00, $1B, $03, $03, $01, $1A, $00, $02, $1A
                dc.b    $03, $01, $03, $19, $00, $86, $86, $96, $97, $12, $13, $84, $54, $00, $15, $69
                dc.b    $0A, $00, $15, $00, $97, $00, $14, $20, $28, $20, $BE, $05, $33, $06, $00, $05
                dc.b    $00, $70, $00, $70, $00, $72, $00, $76, $00, $70, $00, $70, $00, $76, $00, $72
                dc.b    $00, $70, $00, $70, $00, $14, $00, $14, $00, $30, $00, $30, $00, $32, $00, $36
                dc.b    $00, $30, $00, $30, $00, $36, $00, $32, $00, $30, $00, $30, $20, $ED, $20, $EE
                dc.b    $04, $34, $20, $C0, $20, $C1, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10
                dc.b    $00, $10, $00, $16, $00, $16, $00, $10, $00, $10, $00, $34, $00, $34, $00, $03
                dc.b    $00, $05, $00, $01, $00, $04, $00, $07, $00, $03, $00, $04, $00, $01, $00, $05
                dc.b    $00, $07, $20, $E4, $20, $E5, $0C, $34, $20, $B6, $20, $B7, $00, $70, $00, $70
                dc.b    $00, $7E, $00, $71, $00, $70, $00, $70, $00, $7F, $00, $7E, $00, $70, $00, $70
                dc.b    $00, $11, $00, $1F, $00, $30, $00, $30, $00, $3E, $00, $31, $00, $30, $00, $30
                dc.b    $00, $3F, $00, $3E, $00, $30, $00, $30, $20, $E7, $20, $E8, $4C, $80, $B4, $61
                dc.b    $CB, $69, $1B, $00, $10, $00, $C0, $00, $17, $00, $17, $00, $10, $00, $10, $00
                dc.b    $11, $00, $11, $00, $10, $00, $10, $00, $13, $00, $13, $00, $10, $00, $E5, $08
                dc.b    $01, $00, $E4, $00, $0A, $00, $1B, $08, $1A, $08, $0B, $00, $1B, $00, $0A, $08
                dc.b    $0D, $08, $0D, $08, $03, $00, $0A, $00, $02, $08, $0B, $00, $0A, $08, $03, $08
                dc.b    $05, $00, $0C, $00, $91, $00, $0C, $08, $90, $08, $0D, $00, $0C, $00, $91, $00
                dc.b    $0C, $08, $DD, $00, $0C, $00, $48, $00, $41, $00, $05, $00, $48, $00, $0C, $00
                dc.b    $03, $00, $36, $00, $01, $00, $04, $00, $3D, $00, $38, $00, $04, $00, $01, $00
                dc.b    $04, $08, $3C, $00, $04, $00, $04, $08, $05, $08, $05, $00, $04, $00, $04, $08
                dc.b    $64, $00, $04, $00, $11, $08, $71, $00, $70, $08, $10, $08, $71, $00, $11, $08
                dc.b    $13, $08, $13, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08
                dc.b    $51, $00, $50, $00, $E5, $00, $10, $00, $30, $00, $15, $00, $C0, $00, $10, $61
                dc.b    $DB, $69, $DB, $0C, $06, $61, $EC, $01, $56, $00, $04, $02, $0E, $08, $05, $00
                dc.b    $5C, $00, $04, $00, $10, $08, $05, $00, $4C, $08, $71, $03, $0D, $12, $00, $5C
                dc.b    $00, $10, $00, $10, $08, $84, $00, $4C, $00, $C0, $03, $0D, $17, $00, $5C, $00
                dc.b    $10, $00, $10, $00, $11, $00, $4C, $00, $10, $03, $0D, $13, $00, $5C, $00, $10
                dc.b    $00, $10, $00, $11, $00, $4C, $00, $1B, $03, $0D, $0C, $00, $5C, $00, $0A, $00
                dc.b    $10, $00, $04, $00, $4C, $00, $0C, $03, $0B, $41, $00, $5C, $00, $48, $00, $10
                dc.b    $68, $85, $68, $F6, $03, $0D, $04, $00, $5C, $08, $05, $00, $10, $00, $04, $00
                dc.b    $4C, $08, $05, $02, $0E, $08, $71, $00, $5C, $00, $12, $00, $10, $00, $10, $00
                dc.b    $4C, $08, $84, $03, $0D, $C0, $00, $5C, $00, $17, $00, $10, $00, $10, $00, $4C
                dc.b    $00, $11, $03, $0D, $10, $00, $5C, $00, $13, $00, $10, $00, $10, $00, $4C, $00
                dc.b    $11, $03, $0D, $1B, $00, $5C, $00, $0C, $00, $10, $00, $0A, $00, $4C, $00, $04
                dc.b    $03, $0D, $0C, $00, $5C, $00, $41, $00, $10, $00, $48, $09, $1A, $69, $D3, $7C
                dc.b    $03, $20, $00, $20, $05, $03, $20, $00, $20, $80, $F5, $03, $20, $00, $20, $05
                dc.b    $03, $20, $00, $20, $80, $F5, $03, $20, $00, $20, $05, $03, $20, $00, $20, $80
                dc.b    $F5, $03, $20, $00, $20, $05, $03, $20, $00, $20, $80, $F5, $03, $20, $00, $20
                dc.b    $05, $03, $20, $00, $20, $82, $8D, $47, $01, $02, $03, $01, $03, $01, $02, $03
                dc.b    $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01
                dc.b    $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02
                dc.b    $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03
                dc.b    $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $01, $02, $03, $01, $50
                dc.b    $47, $04, $05, $06, $04, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $04, $05, $06, $04, $50, $47, $02, $03, $01, $02, $01, $02
                dc.b    $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03
                dc.b    $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01
                dc.b    $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02
                dc.b    $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $02, $03, $01
                dc.b    $02, $50, $47, $05, $06, $04, $05, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $05, $06, $04, $05, $50, $47, $01, $02, $03, $01
                dc.b    $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03
                dc.b    $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01
                dc.b    $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02
                dc.b    $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $01
                dc.b    $02, $03, $01, $50, $47, $04, $05, $06, $04, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $04, $05, $06, $04, $50, $47, $08, $09
                dc.b    $0A, $08, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $08, $09, $0A, $08, $50, $47, $08, $09, $0A, $08, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $08, $09, $0A, $08, $50, $47
                dc.b    $08, $09, $0A, $08, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $06, $05, $02, $06, $01, $06, $07, $01, $06, $07, $01, $06
                dc.b    $07, $01, $06, $07, $01, $06, $07, $01, $06, $07, $01, $06, $07, $01, $06, $07
                dc.b    $01, $06, $07, $0C, $0D, $0B, $0C, $50, $47, $08, $09, $0A, $08, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $1B, $1A, $19
                dc.b    $1B, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $11, $12, $10, $11
                dc.b    $50, $47, $08, $09, $0A, $08, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $1E, $1D, $1A, $1E, $01, $06, $07, $01, $06, $07
                dc.b    $01, $06, $07, $01, $06, $07, $01, $06, $07, $01, $06, $07, $01, $06, $07, $01
                dc.b    $06, $07, $01, $06, $07, $14, $15, $13, $14, $85, $9E, $00, $00, $10, $CB, $BB                
Fire_In_Bowl: ; loc_4E86C:
                incbin  'data\sprites\firebowl.dat'  
Filler_1: ; loc_4EC6C: ; Filler
                cnop    $000000, $04EE00
Unknow_Data_0x04EE00: ; loc_4EE00:
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $18, $18, $18, $18, $18
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20
                dc.b    $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $00, $00, $00, $00, $00, $00, $00, $20, $20
                dc.b    $20, $20, $20, $25, $25, $25, $25, $25, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $20, $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $04, $04, $04, $04, $04, $00, $10, $10, $10, $10, $10, $10, $10, $10, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $08, $08, $29, $29, $29, $29, $29, $29, $29, $29, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $29, $29, $29, $29, $29, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $19, $19, $19, $19, $19, $19, $19, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $01, $01, $04, $04, $04, $04, $14, $14
                dc.b    $14, $14, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $05, $05, $05, $05
                dc.b    $05, $01, $01, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $10, $10, $10, $10, $10, $10, $10, $10, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $08, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $00, $00, $00, $10, $10
                dc.b    $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00
                dc.b    $00, $00, $00, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $28, $28, $28
                dc.b    $28, $28, $28, $28, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $18, $18, $18, $18, $18, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00
                dc.b    $00, $00, $00, $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $00
                dc.b    $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $25, $25, $25, $25, $25
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05, $05, $04, $04, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $10, $10, $10, $10
                dc.b    $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04, $04, $00, $10
                dc.b    $10, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $29, $29, $29
                dc.b    $29, $29, $29, $29, $29, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $29
                dc.b    $29, $29, $29, $29, $09, $09, $09, $09, $09, $09, $09, $09, $09, $19, $19, $19
                dc.b    $19, $19, $19, $19, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $01, $01, $04, $04, $04, $04, $14, $14, $14, $14, $10, $10, $10, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $05, $05, $05, $05, $05, $01, $01, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $01, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $20
                dc.b    $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $10
                dc.b    $10, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $00, $00, $00, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20
                dc.b    $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08, $08, $08, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $28, $28, $28, $28, $28, $28, $28, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $20, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $10, $10, $10, $10, $10, $10, $10, $10
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $18, $18, $18, $18, $18
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20
                dc.b    $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $00, $00, $00, $00, $00, $00, $00, $20, $20
                dc.b    $20, $20, $20, $25, $25, $25, $25, $25, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $20, $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $04, $04, $04, $04, $04, $00, $10, $10, $10, $10, $10, $10, $10, $10, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $08, $08, $29, $29, $29, $29, $29, $29, $29, $29, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $29, $29, $29, $29, $29, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $19, $19, $19, $19, $19, $19, $19, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $01, $01, $04, $04, $04, $04, $14, $14
                dc.b    $14, $14, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $05, $05, $05, $05
                dc.b    $05, $01, $01, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $10, $10, $10, $10, $10, $10, $10, $10, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $08, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $00, $00, $00, $10, $10
                dc.b    $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00
                dc.b    $00, $00, $00, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $28, $28, $28
                dc.b    $28, $28, $28, $28, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00                
;---------------------------------------------------------------------------------------
; Uncompressed art
; Patterns for Sonic  ; ArtUnc_50000: ArtUnc_Sonic:
;---------------------------------------------------------------------------------------
	align $20
ArtUnc_Sonic:	incbin  "art/uncompressed/Sonic's art.bin"
;--------------------------------------------------------------------------------------
; Sprite Mappings
; Sonic			; MapUnc_614C0: Sonic_Mappings:
;--------------------------------------------------------------------------------------
MapUnc_Sonic:	incbin	"mappings/sprite/Sonic.bin"
Tails_Sprites: ; loc_6254C:
                incbin  'data\sprites\tails.dat'              
;--------------------------------------------------------------------------------------
; Sprite Dynamic Pattern Reloading
; Sonic DPLCs   		; MapRUnc_6DA4C: Sonic_Dyn_Script:
;--------------------------------------------------------------------------------------
MapRUnc_Sonic:	incbin	"mappings/spriteDPLC/Sonic.bin"

Shield: ; loc_6DF8E:
                incbin  'data\sprites\shield.nem'  
Invencibility_Stars: ; loc_6E114:                              
                incbin  'data\sprites\invstars.nem'  
Unused_Dust: ; loc_6E1FC:   
                incbin  'data\sprites\dust.dat'                 
Tails_Mappings: ; loc_6FB3C: 
                dc.w    loc_6FC46-Tails_Mappings
                dc.w    loc_6FC48-Tails_Mappings
                dc.w    loc_6FC5A-Tails_Mappings
                dc.w    loc_6FC6C-Tails_Mappings
                dc.w    loc_6FC7E-Tails_Mappings
                dc.w    loc_6FC90-Tails_Mappings
                dc.w    loc_6FC9A-Tails_Mappings
                dc.w    loc_6FCA4-Tails_Mappings
                dc.w    loc_6FCB6-Tails_Mappings
                dc.w    loc_6FCC8-Tails_Mappings
                dc.w    loc_6FCD2-Tails_Mappings
                dc.w    loc_6FCDC-Tails_Mappings
                dc.w    loc_6FCE6-Tails_Mappings
                dc.w    loc_6FCF0-Tails_Mappings
                dc.w    loc_6FCFA-Tails_Mappings
                dc.w    loc_6FD14-Tails_Mappings
                dc.w    loc_6FD2E-Tails_Mappings
                dc.w    loc_6FD48-Tails_Mappings
                dc.w    loc_6FD62-Tails_Mappings
                dc.w    loc_6FD7C-Tails_Mappings
                dc.w    loc_6FD96-Tails_Mappings
                dc.w    loc_6FDB0-Tails_Mappings
                dc.w    loc_6FDCA-Tails_Mappings
                dc.w    loc_6FDE4-Tails_Mappings
                dc.w    loc_6FDFE-Tails_Mappings
                dc.w    loc_6FE18-Tails_Mappings
                dc.w    loc_6FE32-Tails_Mappings
                dc.w    loc_6FE4C-Tails_Mappings
                dc.w    loc_6FE66-Tails_Mappings
                dc.w    loc_6FE80-Tails_Mappings
                dc.w    loc_6FE9A-Tails_Mappings
                dc.w    loc_6FEB4-Tails_Mappings
                dc.w    loc_6FECE-Tails_Mappings
                dc.w    loc_6FEE8-Tails_Mappings
                dc.w    loc_6FF02-Tails_Mappings
                dc.w    loc_6FF1C-Tails_Mappings
                dc.w    loc_6FF36-Tails_Mappings
                dc.w    loc_6FF50-Tails_Mappings
                dc.w    loc_6FF6A-Tails_Mappings
                dc.w    loc_6FF7C-Tails_Mappings
                dc.w    loc_6FF96-Tails_Mappings
                dc.w    loc_6FFA8-Tails_Mappings
                dc.w    loc_6FFC2-Tails_Mappings
                dc.w    loc_6FFD4-Tails_Mappings
                dc.w    loc_6FFEE-Tails_Mappings
                dc.w    loc_70000-Tails_Mappings
                dc.w    loc_7001A-Tails_Mappings
                dc.w    loc_7002C-Tails_Mappings
                dc.w    loc_7003E-Tails_Mappings
                dc.w    loc_70050-Tails_Mappings
                dc.w    loc_70062-Tails_Mappings
                dc.w    loc_70074-Tails_Mappings
                dc.w    loc_70086-Tails_Mappings
                dc.w    loc_700A0-Tails_Mappings
                dc.w    loc_700BA-Tails_Mappings
                dc.w    loc_700D4-Tails_Mappings
                dc.w    loc_700EE-Tails_Mappings
                dc.w    loc_70108-Tails_Mappings
                dc.w    loc_70122-Tails_Mappings
                dc.w    loc_7013C-Tails_Mappings
                dc.w    loc_70156-Tails_Mappings
                dc.w    loc_7013C-Tails_Mappings
                dc.w    loc_70170-Tails_Mappings
                dc.w    loc_7018A-Tails_Mappings
                dc.w    loc_701A4-Tails_Mappings
                dc.w    loc_701BE-Tails_Mappings
                dc.w    loc_701D8-Tails_Mappings
                dc.w    loc_701F2-Tails_Mappings
                dc.w    loc_7020C-Tails_Mappings
                dc.w    loc_70226-Tails_Mappings
                dc.w    loc_70240-Tails_Mappings
                dc.w    loc_7024A-Tails_Mappings
                dc.w    loc_70254-Tails_Mappings
                dc.w    loc_7025E-Tails_Mappings
                dc.w    loc_70268-Tails_Mappings
                dc.w    loc_70272-Tails_Mappings
                dc.w    loc_7027C-Tails_Mappings
                dc.w    loc_70286-Tails_Mappings
                dc.w    loc_70290-Tails_Mappings
                dc.w    loc_7029A-Tails_Mappings
                dc.w    loc_702A4-Tails_Mappings
                dc.w    loc_702AE-Tails_Mappings
                dc.w    loc_702B8-Tails_Mappings
                dc.w    loc_702C2-Tails_Mappings
                dc.w    loc_702CC-Tails_Mappings
                dc.w    loc_702D6-Tails_Mappings
                dc.w    loc_702E0-Tails_Mappings
                dc.w    loc_702EA-Tails_Mappings
                dc.w    loc_702F4-Tails_Mappings
                dc.w    loc_702FE-Tails_Mappings
                dc.w    loc_70310-Tails_Mappings
                dc.w    loc_70322-Tails_Mappings
                dc.w    loc_7032C-Tails_Mappings
                dc.w    loc_70336-Tails_Mappings
                dc.w    loc_70340-Tails_Mappings
                dc.w    loc_70352-Tails_Mappings
                dc.w    loc_70364-Tails_Mappings
                dc.w    loc_7036E-Tails_Mappings
                dc.w    loc_70378-Tails_Mappings
                dc.w    loc_70382-Tails_Mappings
                dc.w    loc_70394-Tails_Mappings
                dc.w    loc_703A6-Tails_Mappings
                dc.w    loc_703B8-Tails_Mappings
                dc.w    loc_703CA-Tails_Mappings
                dc.w    loc_703DC-Tails_Mappings
                dc.w    loc_703EE-Tails_Mappings
                dc.w    loc_70400-Tails_Mappings
                dc.w    loc_70412-Tails_Mappings
                dc.w    loc_7041C-Tails_Mappings
                dc.w    loc_7042E-Tails_Mappings
                dc.w    loc_70440-Tails_Mappings
                dc.w    loc_70452-Tails_Mappings
                dc.w    loc_70464-Tails_Mappings
                dc.w    loc_70476-Tails_Mappings
                dc.w    loc_70488-Tails_Mappings
                dc.w    loc_7049A-Tails_Mappings
                dc.w    loc_704AC-Tails_Mappings
                dc.w    loc_704B6-Tails_Mappings
                dc.w    loc_704C0-Tails_Mappings
                dc.w    loc_704D2-Tails_Mappings
                dc.w    loc_704DC-Tails_Mappings
                dc.w    loc_704E6-Tails_Mappings
                dc.w    loc_704F0-Tails_Mappings
                dc.w    loc_704FA-Tails_Mappings
                dc.w    loc_70504-Tails_Mappings
                dc.w    loc_7050E-Tails_Mappings
                dc.w    loc_70518-Tails_Mappings
                dc.w    loc_70522-Tails_Mappings
                dc.w    loc_70534-Tails_Mappings
                dc.w    loc_70546-Tails_Mappings
                dc.w    loc_70550-Tails_Mappings
                dc.w    loc_7055A-Tails_Mappings
                dc.w    loc_70564-Tails_Mappings
loc_6FC46:
                dc.w    $0000
loc_6FC48:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
loc_6FC5A:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
loc_6FC6C:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
loc_6FC7E:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
loc_6FC90:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFF4
loc_6FC9A:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFF4
loc_6FCA4:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
loc_6FCB6:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
loc_6FCC8:
                dc.w    $0001
                dc.l    $F0070000, $0000FFEC
loc_6FCD2:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFE4
loc_6FCDC:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFE4
loc_6FCE6:
                dc.w    $0001
                dc.l    $00090000, $0000FFE4
loc_6FCF0:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFE4
loc_6FCFA:
                dc.w    $0003
                dc.l    $EC090000, $0000FFF0, $FC0D0006, $0003FFF0
                dc.l    $FC09000E, $0007FFE2
loc_6FD14:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF3, $000D0006, $0003FFF0
                dc.l    $0009000E, $0007FFE4
loc_6FD2E:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF8, $00090006, $0003FFF3
                dc.l    $FD09000C, $0006FFE4
loc_6FD48:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF2, $00090006, $0003FFF2
                dc.l    $FD09000C, $0006FFE6
loc_6FD62:
                dc.w    $0003
                dc.l    $EC090000, $0000FFF0, $FC0D0006, $0003FFF0
                dc.l    $FC09000E, $0007FFE2
loc_6FD7C:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF3, $000D0006, $0003FFF0
                dc.l    $0009000E, $0007FFE4
loc_6FD96:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF8, $00090006, $0003FFF1
                dc.l    $FD09000C, $0006FFE4
loc_6FDB0:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF2, $00090006, $0003FFF2
                dc.l    $FD09000C, $0006FFE6
loc_6FDCA:
                dc.w    $0003
                dc.l    $E3010000, $0000FFF3, $F3030002, $0001FFEC
                dc.l    $F30B0006, $0003FFF4
loc_6FDE4:
                dc.w    $0003
                dc.l    $E7050000, $0000FFF6, $F70B0004, $0002FFEE
                dc.l    $FE050010, $00080006
loc_6FDFE:
                dc.w    $0003
                dc.l    $E6050000, $0000FFF8, $F6030004, $0002FFEF
                dc.l    $F60B0008, $0004FFF7
loc_6FE18:
                dc.w    $0003
                dc.l    $E3010000, $0000FFF7, $F30F0002, $0001FFEC
                dc.l    $FB010012, $0009000C
loc_6FE32:
                dc.w    $0003
                dc.l    $E3010000, $0000FFF3, $F3030002, $0001FFEC
                dc.l    $F30B0006, $0003FFF4
loc_6FE4C:
                dc.w    $0003
                dc.l    $E7050000, $0000FFF6, $F70B0004, $0002FFEE
                dc.l    $FF050010, $00080006
loc_6FE66:
                dc.w    $0003
                dc.l    $E6050000, $0000FFF8, $F6030004, $0002FFEF
                dc.l    $F60B0008, $0004FFF7
loc_6FE80:
                dc.w    $0003
                dc.l    $E3010000, $0000FFF7, $F30F0002, $0001FFEC
                dc.l    $03010012, $0009000C
loc_6FE9A:
                dc.w    $0003
                dc.l    $F0070000, $0000FFEC, $F0070008, $0004FFFC
                dc.l    $06070010, $0008FFFC
loc_6FEB4:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $00080000
loc_6FECE:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $0008FFFD
loc_6FEE8:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $0008FFFD
loc_6FF02:
                dc.w    $0003
                dc.l    $F0070000, $0000FFEC, $F0070008, $0004FFFC
                dc.l    $06070010, $0008FFFC
loc_6FF1C:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $00080000
loc_6FF36:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $0008FFFD
loc_6FF50:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $0008FFFD
loc_6FF6A:
                dc.w    $0002
                dc.l    $04010000, $0000FFEB, $F40F0002, $0001FFF3
loc_6FF7C:
                dc.w    $0003
                dc.l    $E2050000, $0000FFF8, $FA010004, $0002FFF0
                dc.l    $F20F0006, $0003FFF8
loc_6FF96:
                dc.w    $0002
                dc.l    $F9010000, $0000FFEC, $F10F0002, $0001FFF4
loc_6FFA8:
                dc.w    $0003
                dc.l    $FC010000, $0000FFEF, $E5010002, $0001FFFF
                dc.l    $F50F0004, $0002FFF7
loc_6FFC2:
                dc.w    $0002
                dc.l    $04010000, $0000FFEB, $F40F0002, $0001FFF3
loc_6FFD4:
                dc.w    $0003
                dc.l    $E2010000, $00000000, $FA010002, $0001FFF0
                dc.l    $F20F0004, $0002FFF8
loc_6FFEE:
                dc.w    $0002
                dc.l    $F9010000, $0000FFEC, $F10F0002, $0001FFF4
loc_70000:
                dc.w    $0003
                dc.l    $E4010000, $0000FFFF, $FC010002, $0001FFEF
                dc.l    $F40F0004, $0002FFF7
loc_7001A:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F0070010, $0008FFEA
loc_7002C:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F8050010, $0008FFEA
loc_7003E:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F8050010, $0008FFEA
loc_70050:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F8051010, $1008FFEA
loc_70062:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F0070010, $0008FFEA
loc_70074:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F0071810, $1808FFEA
loc_70086:
                dc.w    $0003
                dc.l    $E4010000, $0000FFFA, $F40B0002, $0001FFF0
                dc.l    $FE0B000E, $0007FFE8
loc_700A0:
                dc.w    $0003
                dc.l    $E4050000, $0000FFF8, $F40B0004, $0002FFF0
                dc.l    $04050010, $0008FFEF
loc_700BA:
                dc.w    $0003
                dc.l    $E4010000, $0000FFFA, $F40B0002, $0001FFF0
                dc.l    $0405000E, $0007FFEF
loc_700D4:
                dc.w    $0003
                dc.l    $E4050000, $0000FFF8, $F40B0004, $0002FFF0
                dc.l    $04050010, $0008FFEF
loc_700EE:
                dc.w    $0003
                dc.l    $E4010000, $0000FFFA, $F40B0002, $0001FFF0
                dc.l    $FC0B000E, $0007FFEA
loc_70108:
                dc.w    $0003
                dc.l    $E4050000, $0000FFF8, $F40B0004, $0002FFF0
                dc.l    $E90B1810, $1808FFF2
loc_70122:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
                dc.l    $060D000E, $0007FFF0
loc_7013C:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
                dc.l    $0605000E, $0007FFF8
loc_70156:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
                dc.l    $0605000E, $0007FFF8
loc_70170:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
                dc.l    $060D000E, $0007FFF0
loc_7018A:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
                dc.l    $060D000E, $0007FFF0
loc_701A4:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $FE0B0810, $08080000
loc_701BE:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $01050810, $08080004
loc_701D8:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $01050810, $08080004
loc_701F2:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $01050810, $08080004
loc_7020C:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $FC0B0810, $0808FFFE
loc_70226:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $FC0B1010, $10080006
loc_70240:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_7024A:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_70254:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_7025E:
                dc.w    $0001
                dc.l    $F8090000, $0000FFDC
loc_70268:
                dc.w    $0001
                dc.l    $F8090000, $0000FFDC
loc_70272:
                dc.w    $0001
                dc.l    $F8090000, $0000FFDC
loc_7027C:
                dc.w    $0001
                dc.l    $F8090000, $0000FFDC
loc_70286:
                dc.w    $0001
                dc.l    $07090000, $0000FFE1
loc_70290:
                dc.w    $0001
                dc.l    $07090000, $0000FFE1
loc_7029A:
                dc.w    $0001
                dc.l    $07090000, $0000FFE1
loc_702A4:
                dc.w    $0001
                dc.l    $07090000, $0000FFE1
loc_702AE:
                dc.w    $0001
                dc.l    $0C070000, $0000FFF8
loc_702B8:
                dc.w    $0001
                dc.l    $0C070000, $0000FFF8
loc_702C2:
                dc.w    $0001
                dc.l    $0C070000, $0000FFF8
loc_702CC:
                dc.w    $0001
                dc.l    $0C070000, $0000FFF8
loc_702D6:
                dc.w    $0001
                dc.l    $07070000, $00000007
loc_702E0:
                dc.w    $0001
                dc.l    $07070000, $00000007
loc_702EA:
                dc.w    $0001
                dc.l    $07070000, $00000007
loc_702F4:
                dc.w    $0001
                dc.l    $07070000, $00000007
loc_702FE:
                dc.w    $0002
                dc.l    $E8050000, $0000FFF8, $F80B0004, $0002FFF0
loc_70310:
                dc.w    $0002
                dc.l    $E8050000, $0000FFF8, $F80B0004, $0002FFF0
loc_70322:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFF9
loc_7032C:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_70336:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_70340:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $E40D0010, $0008FFEA
loc_70352:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $E40D0810, $0808FFEA
loc_70364:
                dc.w    $0001
                dc.l    $F40F0000, $0000FFF0
loc_7036E:
                dc.w    $0001
                dc.l    $F40F0000, $0000FFF0
loc_70378:
                dc.w    $0001
                dc.l    $F40F0000, $0000FFF0
loc_70382:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF8, $000D0006, $0003FFF0
loc_70394:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF8, $00090006, $0003FFF8
loc_703A6:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF8, $00090006, $0003FFF8
loc_703B8:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF8, $00090006, $0003FFF8
loc_703CA:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
loc_703DC:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
loc_703EE:
                dc.w    $0002
                dc.l    $F8010000, $0000FFF0, $F00B0002, $0001FFF8
loc_70400:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF8, $000D0006, $0003FFF0
loc_70412:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_7041C:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFEC, $F0030010, $0008000C
loc_7042E:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFEC, $F0030010, $0008000C
loc_70440:
                dc.w    $0002
                dc.l    $F8050000, $0000FFEC, $F00B0004, $0002FFFC
loc_70452:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F0070800, $08000000
loc_70464:
                dc.w    $0002
                dc.l    $F8050800, $08000004, $F00B0804, $0802FFEC
loc_70476:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F8050008, $00040000
loc_70488:
                dc.w    $0002
                dc.l    $F0070800, $08000000, $F8050808, $0804FFF0
loc_7049A:
                dc.w    $0002
                dc.l    $F8050000, $0000FFEC, $F00B0004, $0002FFFC
loc_704AC:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_704B6:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFF1
loc_704C0:
                dc.w    $0002
                dc.l    $E4050000, $0000FFF8, $F40B0004, $0002FFF1
loc_704D2:
                dc.w    $0001
                dc.l    $F20B0000, $0000FFF2
loc_704DC:
                dc.w    $0001
                dc.l    $F40B0000, $0000FFF0
loc_704E6:
                dc.w    $0001
                dc.l    $F30B0000, $0000FFF2
loc_704F0:
                dc.w    $0001
                dc.l    $F20B0000, $0000FFF2
loc_704FA:
                dc.w    $0001
                dc.l    $F20B0000, $0000FFF2
loc_70504:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFF1
loc_7050E:
                dc.w    $0001
                dc.l    $ED0B0000, $0000FFF0
loc_70518:
                dc.w    $0001
                dc.l    $EC0B0000, $0000FFF1
loc_70522:
                dc.w    $0002
                dc.l    $F4090000, $0000FFF3, $04050006, $0003FFF3
loc_70534:
                dc.w    $0002
                dc.l    $F2070000, $0000FFF0, $EC030008, $00040000
loc_70546:
                dc.w    $0001
                dc.l    $F8090000, $0000FFE0
loc_70550:
                dc.w    $0001
                dc.l    $F8090000, $0000FFE0
loc_7055A:
                dc.w    $0001
                dc.l    $F8090000, $0000FFE0
loc_70564:
                dc.w    $0001
                dc.l    $F8090000, $0000FFE0
Tails_Dyn_Script: ; loc_7056E:   
                dc.w    loc_70678-Tails_Dyn_Script
                dc.w    loc_7067A-Tails_Dyn_Script
                dc.w    loc_70680-Tails_Dyn_Script
                dc.w    loc_70686-Tails_Dyn_Script
                dc.w    loc_7068C-Tails_Dyn_Script
                dc.w    loc_70692-Tails_Dyn_Script
                dc.w    loc_70696-Tails_Dyn_Script
                dc.w    loc_7069A-Tails_Dyn_Script
                dc.w    loc_706A0-Tails_Dyn_Script
                dc.w    loc_706A6-Tails_Dyn_Script
                dc.w    loc_706AA-Tails_Dyn_Script
                dc.w    loc_706AE-Tails_Dyn_Script
                dc.w    loc_706B2-Tails_Dyn_Script
                dc.w    loc_706B6-Tails_Dyn_Script
                dc.w    loc_706BA-Tails_Dyn_Script
                dc.w    loc_706C2-Tails_Dyn_Script
                dc.w    loc_706CA-Tails_Dyn_Script
                dc.w    loc_706D2-Tails_Dyn_Script
                dc.w    loc_706DA-Tails_Dyn_Script
                dc.w    loc_706E2-Tails_Dyn_Script
                dc.w    loc_706EA-Tails_Dyn_Script
                dc.w    loc_706F2-Tails_Dyn_Script
                dc.w    loc_706FA-Tails_Dyn_Script
                dc.w    loc_70702-Tails_Dyn_Script
                dc.w    loc_7070A-Tails_Dyn_Script
                dc.w    loc_70712-Tails_Dyn_Script
                dc.w    loc_7071A-Tails_Dyn_Script
                dc.w    loc_70722-Tails_Dyn_Script
                dc.w    loc_7072A-Tails_Dyn_Script
                dc.w    loc_70732-Tails_Dyn_Script
                dc.w    loc_7073A-Tails_Dyn_Script
                dc.w    loc_70742-Tails_Dyn_Script
                dc.w    loc_7074A-Tails_Dyn_Script
                dc.w    loc_70752-Tails_Dyn_Script
                dc.w    loc_7075A-Tails_Dyn_Script
                dc.w    loc_70762-Tails_Dyn_Script
                dc.w    loc_7076A-Tails_Dyn_Script
                dc.w    loc_70772-Tails_Dyn_Script
                dc.w    loc_7077A-Tails_Dyn_Script
                dc.w    loc_70780-Tails_Dyn_Script
                dc.w    loc_70788-Tails_Dyn_Script
                dc.w    loc_7078E-Tails_Dyn_Script
                dc.w    loc_70796-Tails_Dyn_Script
                dc.w    loc_7079C-Tails_Dyn_Script
                dc.w    loc_707A4-Tails_Dyn_Script
                dc.w    loc_707AA-Tails_Dyn_Script
                dc.w    loc_707B2-Tails_Dyn_Script
                dc.w    loc_707B8-Tails_Dyn_Script
                dc.w    loc_707BE-Tails_Dyn_Script
                dc.w    loc_707B8-Tails_Dyn_Script
                dc.w    loc_707C4-Tails_Dyn_Script
                dc.w    loc_707CA-Tails_Dyn_Script
                dc.w    loc_707D0-Tails_Dyn_Script
                dc.w    loc_707D8-Tails_Dyn_Script
                dc.w    loc_707E0-Tails_Dyn_Script
                dc.w    loc_707E8-Tails_Dyn_Script
                dc.w    loc_707F0-Tails_Dyn_Script
                dc.w    loc_707F8-Tails_Dyn_Script
                dc.w    loc_70800-Tails_Dyn_Script
                dc.w    loc_70808-Tails_Dyn_Script
                dc.w    loc_70810-Tails_Dyn_Script
                dc.w    loc_70808-Tails_Dyn_Script
                dc.w    loc_70818-Tails_Dyn_Script
                dc.w    loc_70820-Tails_Dyn_Script
                dc.w    loc_70828-Tails_Dyn_Script
                dc.w    loc_70830-Tails_Dyn_Script
                dc.w    loc_70838-Tails_Dyn_Script
                dc.w    loc_70840-Tails_Dyn_Script
                dc.w    loc_70848-Tails_Dyn_Script
                dc.w    loc_70850-Tails_Dyn_Script
                dc.w    loc_70858-Tails_Dyn_Script
                dc.w    loc_7085C-Tails_Dyn_Script
                dc.w    loc_70860-Tails_Dyn_Script
                dc.w    loc_70864-Tails_Dyn_Script
                dc.w    loc_70868-Tails_Dyn_Script
                dc.w    loc_7086C-Tails_Dyn_Script
                dc.w    loc_70870-Tails_Dyn_Script
                dc.w    loc_70874-Tails_Dyn_Script
                dc.w    loc_70878-Tails_Dyn_Script
                dc.w    loc_7087C-Tails_Dyn_Script
                dc.w    loc_70880-Tails_Dyn_Script
                dc.w    loc_70884-Tails_Dyn_Script
                dc.w    loc_70888-Tails_Dyn_Script
                dc.w    loc_7088C-Tails_Dyn_Script
                dc.w    loc_70890-Tails_Dyn_Script
                dc.w    loc_70894-Tails_Dyn_Script
                dc.w    loc_70898-Tails_Dyn_Script
                dc.w    loc_7089C-Tails_Dyn_Script
                dc.w    loc_708A0-Tails_Dyn_Script
                dc.w    loc_708A4-Tails_Dyn_Script
                dc.w    loc_708AA-Tails_Dyn_Script
                dc.w    loc_708B0-Tails_Dyn_Script
                dc.w    loc_708B4-Tails_Dyn_Script
                dc.w    loc_708B8-Tails_Dyn_Script
                dc.w    loc_708BC-Tails_Dyn_Script
                dc.w    loc_708BC-Tails_Dyn_Script
                dc.w    loc_708C2-Tails_Dyn_Script
                dc.w    loc_708C6-Tails_Dyn_Script
                dc.w    loc_708CA-Tails_Dyn_Script
                dc.w    loc_708CE-Tails_Dyn_Script
                dc.w    loc_708D4-Tails_Dyn_Script
                dc.w    loc_708DA-Tails_Dyn_Script
                dc.w    loc_708E0-Tails_Dyn_Script
                dc.w    loc_708E6-Tails_Dyn_Script
                dc.w    loc_708EC-Tails_Dyn_Script
                dc.w    loc_708F2-Tails_Dyn_Script
                dc.w    loc_708F8-Tails_Dyn_Script
                dc.w    loc_708FE-Tails_Dyn_Script
                dc.w    loc_70902-Tails_Dyn_Script
                dc.w    loc_70908-Tails_Dyn_Script
                dc.w    loc_7090E-Tails_Dyn_Script
                dc.w    loc_70914-Tails_Dyn_Script
                dc.w    loc_7090E-Tails_Dyn_Script
                dc.w    loc_7091A-Tails_Dyn_Script
                dc.w    loc_7091A-Tails_Dyn_Script
                dc.w    loc_70920-Tails_Dyn_Script
                dc.w    loc_70926-Tails_Dyn_Script
                dc.w    loc_7092A-Tails_Dyn_Script
                dc.w    loc_7092E-Tails_Dyn_Script
                dc.w    loc_70934-Tails_Dyn_Script
                dc.w    loc_70938-Tails_Dyn_Script
                dc.w    loc_7093C-Tails_Dyn_Script
                dc.w    loc_70940-Tails_Dyn_Script
                dc.w    loc_70944-Tails_Dyn_Script
                dc.w    loc_70948-Tails_Dyn_Script
                dc.w    loc_7094C-Tails_Dyn_Script
                dc.w    loc_70950-Tails_Dyn_Script
                dc.w    loc_70954-Tails_Dyn_Script
                dc.w    loc_7095A-Tails_Dyn_Script
                dc.w    loc_70864-Tails_Dyn_Script
                dc.w    loc_70868-Tails_Dyn_Script
                dc.w    loc_7086C-Tails_Dyn_Script
                dc.w    loc_70870-Tails_Dyn_Script
loc_70678:
                dc.w    $0000
loc_7067A:
                dc.w    $0002
                dc.w    $5000, $5006
loc_70680:
                dc.w    $0002
                dc.w    $500C, $5006
loc_70686:
                dc.w    $0002
                dc.w    $5012, $5006
loc_7068C:
                dc.w    $0002
                dc.w    $5018, $5006
loc_70692:
                dc.w    $0001
                dc.w    $B01E
loc_70696:
                dc.w    $0001
                dc.w    $B02A
loc_7069A:
                dc.w    $0002
                dc.w    $5036, $503C
loc_706A0:
                dc.w    $0002
                dc.w    $5036, $5042
loc_706A6:
                dc.w    $0001
                dc.w    $7048
loc_706AA:
                dc.w    $0001
                dc.w    $B050
loc_706AE:
                dc.w    $0001
                dc.w    $B05C
loc_706B2:
                dc.w    $0001
                dc.w    $5068
loc_706B6:
                dc.w    $0001
                dc.w    $B06E
loc_706BA:
                dc.w    $0003
                dc.w    $507A, $7080, $50CA
loc_706C2:
                dc.w    $0003
                dc.w    $5088, $708E, $50D0
loc_706CA:
                dc.w    $0003
                dc.w    $5096, $509C, $50D6
loc_706D2:
                dc.w    $0003
                dc.w    $50A2, $50A8, $50DC
loc_706DA:
                dc.w    $0003
                dc.w    $507A, $70AE, $50CA
loc_706E2:
                dc.w    $0003
                dc.w    $5088, $70B6, $50D0
loc_706EA:
                dc.w    $0003
                dc.w    $5096, $50BE, $50D6
loc_706F2:
                dc.w    $0003
                dc.w    $50A2, $50C4, $50DC
loc_706FA:
                dc.w    $0003
                dc.w    $10E2, $30E4, $B0E8
loc_70702:
                dc.w    $0003
                dc.w    $30F4, $B0F8, $3104
loc_7070A:
                dc.w    $0003
                dc.w    $3108, $310C, $B110
loc_70712:
                dc.w    $0003
                dc.w    $111C, $F11E, $112E
loc_7071A:
                dc.w    $0003
                dc.w    $10E2, $30E4, $B130
loc_70722:
                dc.w    $0003
                dc.w    $30F4, $B13C, $3148
loc_7072A:
                dc.w    $0003
                dc.w    $3108, $310C, $B14C
loc_70732:
                dc.w    $0003
                dc.w    $111C, $F158, $1168
loc_7073A:
                dc.w    $0003
                dc.w    $716A, $7172, $71CA
loc_70742:
                dc.w    $0003
                dc.w    $717A, $7182, $71D2
loc_7074A:
                dc.w    $0003
                dc.w    $718A, $7192, $71DA
loc_70752:
                dc.w    $0003
                dc.w    $719A, $71A2, $71E2
loc_7075A:
                dc.w    $0003
                dc.w    $716A, $71AA, $71CA
loc_70762:
                dc.w    $0003
                dc.w    $717A, $71B2, $71D2
loc_7076A:
                dc.w    $0003
                dc.w    $718A, $71BA, $71DA
loc_70772:
                dc.w    $0003
                dc.w    $719A, $71C2, $71E2
loc_7077A:
                dc.w    $0002
                dc.w    $11EA, $F1EC
loc_70780:
                dc.w    $0003
                dc.w    $31FC, $1200, $F202
loc_70788:
                dc.w    $0002
                dc.w    $1212, $F214
loc_7078E:
                dc.w    $0003
                dc.w    $1224, $1226, $F228
loc_70796:
                dc.w    $0002
                dc.w    $11EA, $F238
loc_7079C:
                dc.w    $0003
                dc.w    $1248, $1200, $F24A
loc_707A4:
                dc.w    $0002
                dc.w    $1212, $F25A
loc_707AA:
                dc.w    $0003
                dc.w    $126A, $1224, $F26C
loc_707B2:
                dc.w    $0002
                dc.w    $F27C, $729C
loc_707B8:
                dc.w    $0002
                dc.w    $F28C, $32A4
loc_707BE:
                dc.w    $0002
                dc.w    $F27C, $32A8
loc_707C4:
                dc.w    $0002
                dc.w    $F27C, $72AC
loc_707CA:
                dc.w    $0002
                dc.w    $F28C, $72AC
loc_707D0:
                dc.w    $0003
                dc.w    $12B4, $B2B6, $B2D2
loc_707D8:
                dc.w    $0003
                dc.w    $32C2, $B2C6, $32DE
loc_707E0:
                dc.w    $0003
                dc.w    $12B4, $B2B6, $32E2
loc_707E8:
                dc.w    $0003
                dc.w    $32C2, $B2C6, $32E6
loc_707F0:
                dc.w    $0003
                dc.w    $12B4, $B2B6, $B2EA
loc_707F8:
                dc.w    $0003
                dc.w    $32C2, $B2C6, $B2EA
loc_70800:
                dc.w    $0003
                dc.w    $52F6, $72FC, $7312
loc_70808:
                dc.w    $0003
                dc.w    $5304, $730A, $331E
loc_70810:
                dc.w    $0003
                dc.w    $52F6, $72FC, $331A
loc_70818:
                dc.w    $0003
                dc.w    $52F6, $72FC, $7322
loc_70820:
                dc.w    $0003
                dc.w    $5304, $730A, $7322
loc_70828:
                dc.w    $0003
                dc.w    $B32A, $3336, $B2D2
loc_70830:
                dc.w    $0003
                dc.w    $B33A, $3346, $32DE
loc_70838:
                dc.w    $0003
                dc.w    $B32A, $3336, $32E2
loc_70840:
                dc.w    $0003
                dc.w    $B33A, $3346, $32E6
loc_70848:
                dc.w    $0003
                dc.w    $B32A, $3336, $B2EA
loc_70850:
                dc.w    $0003
                dc.w    $B33A, $3346, $B2EA
loc_70858:
                dc.w    $0001
                dc.w    $F34A
loc_7085C:
                dc.w    $0001
                dc.w    $F35A
loc_70860:
                dc.w    $0001
                dc.w    $F36A
loc_70864:
                dc.w    $0001
                dc.w    $50CA
loc_70868:
                dc.w    $0001
                dc.w    $50D0
loc_7086C:
                dc.w    $0001
                dc.w    $50D6
loc_70870:
                dc.w    $0001
                dc.w    $50DC
loc_70874:
                dc.w    $0001
                dc.w    $537A
loc_70878:
                dc.w    $0001
                dc.w    $5380
loc_7087C:
                dc.w    $0001
                dc.w    $5386
loc_70880:
                dc.w    $0001
                dc.w    $538C
loc_70884:
                dc.w    $0001
                dc.w    $71CA
loc_70888:
                dc.w    $0001
                dc.w    $71D2
loc_7088C:
                dc.w    $0001
                dc.w    $71DA
loc_70890:
                dc.w    $0001
                dc.w    $71E2
loc_70894:
                dc.w    $0001
                dc.w    $7392
loc_70898:
                dc.w    $0001
                dc.w    $739A
loc_7089C:
                dc.w    $0001
                dc.w    $73A2
loc_708A0:
                dc.w    $0001
                dc.w    $73AA
loc_708A4:
                dc.w    $0002
                dc.w    $33B2, $B3B6
loc_708AA:
                dc.w    $0002
                dc.w    $33B2, $B3C2
loc_708B0:
                dc.w    $0001
                dc.w    $B3CE
loc_708B4:
                dc.w    $0001
                dc.w    $F3DA
loc_708B8:
                dc.w    $0001
                dc.w    $F3EA
loc_708BC:
                dc.w    $0002
                dc.w    $F3FA, $740A
loc_708C2:
                dc.w    $0001
                dc.w    $F412
loc_708C6:
                dc.w    $0001
                dc.w    $F422
loc_708CA:
                dc.w    $0001
                dc.w    $F432
loc_708CE:
                dc.w    $0002
                dc.w    $5442, $7448
loc_708D4:
                dc.w    $0002
                dc.w    $5442, $5450
loc_708DA:
                dc.w    $0002
                dc.w    $5442, $5456
loc_708E0:
                dc.w    $0002
                dc.w    $5442, $545C
loc_708E6:
                dc.w    $0002
                dc.w    $5462, $7468
loc_708EC:
                dc.w    $0002
                dc.w    $5470, $7476
loc_708F2:
                dc.w    $0002
                dc.w    $147E, $B480
loc_708F8:
                dc.w    $0002
                dc.w    $548C, $7492
loc_708FE:
                dc.w    $0001
                dc.w    $F49A
loc_70902:
                dc.w    $0002
                dc.w    $F4AA, $34BA
loc_70908:
                dc.w    $0002
                dc.w    $F4BE, $34CE
loc_7090E:
                dc.w    $0002
                dc.w    $34D2, $B4D6
loc_70914:
                dc.w    $0002
                dc.w    $74E2, $74E2
loc_7091A:
                dc.w    $0002
                dc.w    $74EA, $34F2
loc_70920:
                dc.w    $0002
                dc.w    $34F6, $B4FA
loc_70926:
                dc.w    $0001
                dc.w    $F506
loc_7092A:
                dc.w    $0001
                dc.w    $B516
loc_7092E:
                dc.w    $0002
                dc.w    $3522, $B526
loc_70934:
                dc.w    $0001
                dc.w    $B532
loc_70938:
                dc.w    $0001
                dc.w    $B53E
loc_7093C:
                dc.w    $0001
                dc.w    $B54A
loc_70940:
                dc.w    $0001
                dc.w    $B556
loc_70944:
                dc.w    $0001
                dc.w    $B562
loc_70948:
                dc.w    $0001
                dc.w    $B56E
loc_7094C:
                dc.w    $0001
                dc.w    $B57A
loc_70950:
                dc.w    $0001
                dc.w    $B586
loc_70954:
                dc.w    $0002
                dc.w    $5592, $3598
loc_7095A:
                dc.w    $0002
                dc.w    $759C, $35A4                             
SegaLogo: ; loc_70960:                
                incbin  'data\sprites\sega.nem'
SegaLogo_Mappings: ; loc_70DD0:
                incbin  'data\all\sega.eni'
TS_Wings_MapUnc_Sonic: ; loc_70ECC: 
                incbin  'data\all\titlescr.eni'
Title_Screen_Bg_Mappings: ; loc_71024:
                incbin  'data\all\titscrbg.eni'
Title_Screen_R_Bg_Mappings: ; loc_712D8:                
                incbin  'data\all\titscrb2.eni'
Title_Screen_Bg_Wings: ; loc_71520: 
                incbin  'data\sprites\titlescr.nem' ; Title Screen Wings and background
Title_Screen_Sonic_Tails: ; loc_72E82: 
                incbin  'data\sprites\sontascr.nem' ; Sonic And Tails in Title Screen  
FireBall: ; loc_739C6:                 
                incbin  'data\sprites\fireball.nem'
Ghz_Waterfall: ; loc_73B3C:  
                incbin  'data\ghz\watrfall.nem'  
Htz_Lava_Bubble: ; loc_73C42:   
                incbin  'data\htz\lvbubble.nem'              
Ghz_Bridge: ; loc_73D90: 
                incbin  'data\ghz\bridge.nem'                  
Htz_Teleferic:  ; loc_73E68: 
                incbin  'data\htz\telefrcs.nem' 
Htz_Automatic_Door: ; loc_7415C: 
                incbin  'data\htz\autodoor.nem' 
Htz_See_saw: ; loc_741D4: 
                incbin  'data\htz\see-saw.nem'
Fireball_1: ; loc_7436C: 
                incbin  'data\sprites\firebal1.nem'                
Htz_Rock:; loc_7447A: 
                incbin  'data\htz\rock.nem'             
Htz_See_saw_badnick: ; loc_745B0: 
                incbin  'data\htz\see-sawb.nem' 
Mz_Rotating_Gear: ; loc_7461C:      
                incbin  'data\mz\gear.nem'   
Mz_Machine_Ball: ; loc_74A74: 
                incbin  'data\mz\m_ball.nem'  
Mz_Block: ; loc_74B1C:     
                incbin  'data\mz\block.nem'  
Mz_Steam: ; loc_74BEA:  
                incbin  'data\mz\steam.nem'                 
Mz_Harpoon: ; loc_74CF4:     
                incbin  'data\mz\harpoon.nem'  
Mz_Screw_Nut: ; loc_74DB6:  
                incbin  'data\mz\screwnut.nem'                                                            
Mz_Lava_Bubble: ; loc_74E2C:   
                incbin  'data\mz\lvbubble.nem' 
loc_74EE2:  
                incbin  'data\mz\0x074EE2.nem'                  
Mz_Parallelogram_Elevator: ; loc_74F52:  
                incbin  'data\mz\parallel.nem' 
loc_751FE:  
                incbin  'data\mz\0x0751FE.nem'  
Mz_Mini_Gear: ; loc_752A0:  
                incbin  'data\mz\minigear.nem'                                 
Mz_Teleport: ; Mz_Four_Block: ; loc_75382:                 
                dc.b    $00, $04, $86, $71, $00, $FF, $00, $00, $00, $00, $00, $00                                 
Hpz_Bridge: ; loc_7538E: 
                incbin  'data\hpz\bridge.nem'
Hpz_Waterfall: ; loc_75506: 
                incbin  'data\hpz\watrfall.nem'               
Hpz_Emerald: ; loc_75868: 
                incbin  'data\hpz\emerald.nem'                                 
Hpz_Platform: ; loc_75ADA: 
                incbin  'data\hpz\platform.nem'               
Hpz_Orbs_Comp: ; loc_75B9A: ; Compressed 
                incbin  'data\hpz\orbs.nem'                
Hpz_Unknow_Platform: ; loc_75DD6: 
                incbin  'data\hpz\unkptfm.nem'  
OOz_Elevator: ; loc_75F70:  
                incbin  'data\ooz\elevator.nem' 
OOz_Giant_Spikeball: ; loc_76060:  
                incbin  'data\ooz\gspkball.nem'   
OOz_Touch_Boost_Up: ; loc_76258:  
                incbin  'data\ooz\boost_up.nem'   
OOz_Break_Boost: ; loc_762EE:  
                incbin  'data\ooz\brkboost.nem'                    
OOz_Oil: ; loc_7635A:  
                incbin  'data\ooz\oil.nem' 
OOz_Tube_Oil: ; loc_764D6:  
                incbin  'data\ooz\tube_oil.nem'   
OOz_Ball: ; loc_76602:  
                incbin  'data\ooz\ball.nem'     
OOz_Cannon: ; loc_76722:  
                incbin  'data\ooz\cannon.nem'  
OOz_Collapsing_Platform: ; loc_76A12:  
                incbin  'data\ooz\platform.nem'  
OOz_Spring_Push_Boost: ; loc_76CA6:   
                incbin  'data\ooz\spngpush.nem'  
OOz_Swing_Platform: ; loc_76E68:   
                incbin  'data\ooz\swngptfm.nem' 
Dhz_Box: ; loc_7708A:   
                incbin  'data\dhz\box.nem' 
Dhz_Collapsing_Platform: ; loc_772C8:   
                incbin  'data\dhz\clp_ptfm.nem' 
Dhz_Vines: ; loc_77472:   
                incbin  'data\dhz\vines.nem' 
Dhz_Vines_1: ; loc_7756A:   
                incbin  'data\dhz\vines_1.nem'  
Dhz_Bridge: ; loc_77614:   
                incbin  'data\dhz\bridge.nem' 
Cpz_Elevator: ; loc_77684:      
                incbin  'data\cpz\elevator.nem'                                                                                                                                                                                                                                      
Water_Surface: ; loc_777D2: 
                incbin  'data\sprites\watrsurf.nem'  
Cpz_Speed_Booster: ; loc_77942:      
                incbin  'data\cpz\speedbst.nem' 
Cpz_Worms: ; loc_779AA:      
                incbin  'data\cpz\worms.nem'                                 
Cpz_Metal_Structure: ; loc_77A1C:      
                incbin  'data\cpz\metal_st.nem' 
loc_77C26:      
                incbin  'data\cpz\0x077C26.nem'                
Cpz_Automatic_Door: ; loc_77C66:      
                incbin  'data\cpz\autodoor.nem' 
Cpz_Open_Close_Platform: ; loc_77CD2:      
                incbin  'data\cpz\oc_ptfrm.nem'   
Cpz_Platforms: ; loc_77EB4:      
                incbin  'data\cpz\platform.nem'                   
Cpz_Spring_Tubes: ; loc_78074:      
                incbin  'data\cpz\spgtubes.nem' 
Nghz_Water_Surface: ; loc_78270:      
                incbin  'data\nghz\watrsurf.nem'   
Nghz_Leaves: ; loc_78356:     
                incbin  'data\nghz\leaves.nem'                                                 
Nghz_Arrow_Shooter: ; loc_783E2:                                  
                incbin  'data\nghz\arrow_s.nem' 
Nghz_Water_Splash: ; loc_78540:                                  
                incbin  'data\nghz\w_splash.nem'                                                             
Switch: ; loc_78580:      
                incbin  'data\sprites\switch.nem'   
Vertical_Spring: ; loc_78658: 
                incbin  'data\sprites\v_spring.nem' 
Horizontal_Spring: ; loc_78774: 
                incbin  'data\sprites\h_spring.nem'                       
Diagonal_Spring: ; loc_7883E: 
                incbin  'data\sprites\d_spring.nem'                   
Head_up_display_Sprites: ; loc_78A12: 
                incbin  'data\sprites\hud.nem' ; Head-up display  
Head_up_display_Sonic: ; loc_78B1A:
                incbin  'data\sprites\hudsonic.nem'   
Rings: ; loc_78C30: 
                incbin  'data\sprites\rings.nem' 
Monitors: ; loc_78D24:
                incbin  'data\sprites\monitors.nem' ; Monitors    
Spikes: ; loc_7914E:                
                incbin  'data\sprites\spikes.nem' 
Enemy_Points_Spr: ; loc_7919E:
                incbin  'data\sprites\points.nem'                                               
Lamp_Post: ; loc_79278:                
                incbin  'data\sprites\lamppost.nem' 
End_Panel: ; loc_7931E:  
                incbin  'data\sprites\endpanel.nem' 
Diagonal_Spring_1: ; loc_798F4:                
                incbin  'data\sprites\dspring1.nem'                 
Dhz_Horizontal_Spikes: ; loc_79A44:                
                incbin  'data\dhz\h_spikes.nem' 
Air_Bubbles_Numbers: ; loc_79AC0: 
                incbin  'data\sprites\airbubls.nem'                     
Hpz_Crocobot: ; loc_7A11A: 
                incbin  'data\hpz\Crocobot.nem' 
Ghz_Buzzer_Bomber: ; loc_7A4BC: 
                incbin  'data\ghz\buzzbomb.nem'                  
Hpz_Batbot: ; loc_7A6A2: 
                incbin  'data\hpz\batbot.nem' 
OOz_Octus: ; loc_7A9F8: 
                incbin  'data\ooz\octus.nem'                 
Hpz_Rhinobot: ; loc_7AD18: 
                incbin  'data\hpz\rhinobot.nem'                                 
Hpz_Dinobot: ; loc_7B114: 
                incbin  'data\hpz\dinobot.nem'                  
Hpz_Piranha: ; loc_7B4EA: 
                incbin  'data\hpz\piranha.nem'  
OOz_Aquis: ; loc_7B9E2: 
                incbin  'data\ooz\aquis.nem' 
Spinning_Ball: ; loc_7BE30: 
                incbin  'data\sprites\spinball.nem'   
Blink: ; loc_7C0C6: 
                incbin  'data\sprites\blink.nem'    
Bubble_Monster: ; loc_7C2F2: 
                incbin  'data\sprites\bmonster.nem'                                                                 
Ghz_Motobug: ; loc_7C514: 
                incbin  'data\ghz\motobug.nem'                   
Crawl: ; loc_7C710: 
                incbin  'data\cnz\crawl.nem'                
Ghz_Chopper: ; loc_7CA92: 
                incbin  'data\ghz\chopper.nem'
Robotnik_Ship: ; loc_7CC9E: 
                incbin  'data\sprites\robotnik.nem'  
Cpz_Boss: ; loc_7D3DA: 
                incbin  'data\cpz\boss.nem' 
Boss_Explosions: ; loc_7D938: 
                incbin  'data\sprites\bossexpl.nem'                 
Ship_Boost: ; loc_7DFC0: 
                incbin  'data\sprites\shpboost.nem'    
Boss_Smoke: ; loc_7E03E: 
                incbin  'data\sprites\b_smoke.nem'                                                                                           
Ghz_Boss_Car: ; loc_7E124: 
                incbin  'data\ghz\boss_car.nem'                                                                                
Ghz_Boss_Blades: ; loc_7E910: 
                incbin  'data\ghz\b_blades.nem'                 
Title_Cards: ; loc_7EA04:                 
                incbin  'data\sprites\titlcard.nem' ; Title Cards
Explosion: ; loc_7F012:  
                incbin  'data\sprites\explosn.nem'
Game_Time_Over: ; loc_7F678:
                incbin  'data\sprites\gt_over.nem'
Vertical_Springs_Sonic_1: ; loc_7F80A:                
                incbin  'data\sprites\vspng_s1.nem'  
Horizontal_Springs_Sonic_1: ; loc_7F90C:                
                incbin  'data\sprites\hspng_s1.nem'                 
Big_Ring_Flash: ; loc_7F9E8:
                incbin  'data\sprites\rngflash.nem'                  
Hidden_Points: ; loc_7FB5C:
                incbin  'data\sprites\h_points.nem' 
Sonic_Continue_Screen: ; loc_7FE5E:
                incbin  'data\sprites\sonicctn.nem'   
Continue_Special_Stage_Results_Screen: ; loc_8010E:
                incbin  'data\sprites\cont_ss.nem'                                                                               
Rabbit: ; loc_80348:
                incbin  'data\sprites\rabbit.nem'
White_Bird: ; loc_804A0:  
                incbin  'data\sprites\wthebird.nem'
Black_Bird: ; loc_805FC:  
                incbin  'data\sprites\blckbird.nem'     
Seal: ; loc_80778:  
                incbin  'data\sprites\seal.nem' 
Pig: ; loc_80894:  
                incbin  'data\sprites\pig.nem' 
Blue_Bird: ; loc_809CA:  
                incbin  'data\sprites\bluebird.nem'                                                     
Bear: ; loc_80B04:  
                incbin  'data\sprites\bear.nem'                                                            
Green_Hill_16x16_Map: ; loc_80C60: 
                incbin  'data\ghz\ghz_16.dat'                               
Green_Hill_8x8_Tiles: ; loc_81C00: 
                incbin  'data\ghz\ghz_8.nem'                                
Hill_Top_16x16_Map: ; loc_84A50:    
                incbin  'data\htz\htz_16.dat'                                  
Hill_Top_8x8_Tiles: ; loc_85200:  
                incbin  'data\htz\htz_8.nem'                                
Htz_Init_Sprites_Dyn_Reload: ; loc_86626:    
                incbin  'data\htz\init_spr.nem'                             
Green_Hill_128x128_Map: ; loc_8692E:  
                incbin  'data\ghz\ghz_128.kos'
                dc.w    $0000 ; Filler                 
Wood_16x16_Map: ; loc_89B8E:  
                incbin  'data\wz\wz_16.dat'                 
Wood_8x8_Tiles: ; loc_8AB2E: 
                incbin  'data\wz\wz_8.nem'                
Waterfall: ; loc_8E6C6:  
                incbin  'data\sprites\watrfall.nem'                
Wood_128x128_Map: ; loc_8E826:                
                incbin  'data\wz\wz_128.kos'  
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000 ; Filler
Metropolis_16x16_Map: ; loc_90456:
                incbin  'data\mz\mz_16.dat'
Metropolis_8x8_Tiles: ; loc_91716:
                incbin  'data\mz\mz_8.nem'                                 
Mz_Init_Sprites_Dyn_Reload: ; loc_94994:  
                incbin  'data\mz\init_spr.nem'                  
Metropolis_128x128_Map: ; loc_94C56:                 
                incbin  'data\mz\mz_128.kos'    
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000 ; Filler           
Hidden_Palace_16x16_Map: ; loc_97596:
                incbin  'data\hpz\hpz_16.dat'
Hidden_Palace_8x8_Tiles: ; loc_98B76:
                incbin  'data\hpz\hpz_8.nem'                                
Hpz_Init_Sprites_Dyn_Reload: ; loc_9B884: ;  Orbs
                incbin  'data\hpz\init_spr.nem'  
Hidden_Palace_128x128_Map: ; loc_9B9F8:                 
                incbin  'data\hpz\hpz_128.kos'                
                dc.w    $0000, $0000, $0000 ; Filler                     
Oil_Ocean_16x16_Map: ; loc_9D778:
                incbin  'data\ooz\ooz_16.dat'
Oil_Ocean_8x8_Tiles: ; loc_9ED58:  
                incbin  'data\ooz\ooz_8.nem'                                 
OOz_Init_Sprites_Dyn_Reload: ; loc_A186A: ;  red ball, oil ...
                incbin  'data\ooz\init_spr.nem' 
Oil_Ocean_128x128_Map: ; loc_A1A58:                 
                incbin  'data\ooz\ooz_128.kos'                
                dc.w    $0000, $0000, $0000, $0000, $0000 ; Filler           
Dust_Hill_16x16_Map: ; loc_A3F88:
                incbin  'data\dhz\dhz_16.dat' 
Dust_Hill_8x8_Tiles: ; loc_A5248:  
                incbin  'data\dhz\dhz_8.nem'
Dust_Hill_128x128_Map: ; loc_A8B6A:               
                incbin  'data\dhz\dhz_128.kos'                
                dc.w    $0000, $0000, $0000, $0000, $0000 ; Filler    
Casino_Night_16x16_Map: ; loc_AB5CA:
                incbin  'data\cnz\cnz_16.dat'  
Casino_Night_8x8_Tiles: ; loc_ABF2A: 
                incbin  'data\cnz\cnz_8.nem'    
Cnz_Cards: ; loc_AEF3C:               
                incbin  'data\cnz\cards.nem'
Casino_Night_128x128_Map: ; loc_AF026:                
                incbin  'data\cnz\cnz_128.kos'                
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000 ; Filler    
Chemical_Plant_16x16_Map: ; loc_B0F26:  
                incbin  'data\cpz\cpz_16.dat'  
Chemical_Plant_8x8_Tiles: ; loc_B2506: 
                incbin  'data\cpz\cpz_8.nem'
Cpz_Init_Sprites_Dyn_Reload: ; loc_B602E:  
                incbin  'data\cpz\init_spr.nem' 
Chemical_Plant_128x128_Map: ; loc_B6058:                 
                incbin  'data\cpz\cpz_128.kos'                
                dc.w    $0000, $0000, $0000 ; Filler  
Neo_Green_Hill_16x16_Map: ; loc_B8558:
                incbin  'data\nghz\nghz_16.dat'   
Neo_Green_Hill_8x8_Tiles: ; loc_B9E58:
                incbin  'data\nghz\nghz_8.nem'                                
Nghz_Init_Sprites_Dyn_Reload: ; loc_BF408:  Waterfalls
                incbin  'data\nghz\init_spr.nem'  
Neo_Green_Hill_128x128_Map: ; loc_BF568:                  
                incbin  'data\nghz\nghz_128.kos'                 
loc_C2138: ; Leftover end of compressed Nghz 128x128 mappings...
                dc.w    $C00B, $F8C4, $C00B, $5200, $F8C0, $F80E, $00F0, $0000  
Unknow_Uncompressed_12x128_Map: ; loc_C2148:                                            
                incbin  'data\all\unk_128.dat' 
Chemical_Plant_16x16_Map_Previous_Builder: ; loc_C943C:                                            
                incbin  'data\all\cpz_16.dat'                 
Chemical_Plant_8x8_Tiles_Previous_Builder: ; loc_CAA1C:                                            
                incbin  'data\sprites\cpz_8.nem'  
Cpz_Building: ; loc_CDFC6: ;  Left over                                                        
                incbin  'data\sprites\building.nem'   
Chemical_Plant_128x128_Map_Previous_Builder:  ; loc_CE03A:                                              
                incbin  'data\all\cpz_128.dat'                  
Neo_Green_Hill_16x16_Map_Previous_Builder: ; loc_D603A:                                            
                incbin  'data\all\nghz_16.dat'                              
Neo_Green_Hill_8x8_Tiles_Previous_Builder: ; loc_D793A:                                            
                incbin  'data\nghz\nghz_8.nem'                                             
Nghz_Init_Sprites_Dyn_Reload_2: ; loc_DCEEA: ; Waterfalls  ; Left over
                incbin  'data\nghz\init_spr.nem'                  
Neo_Green_Hill_128x128_Map_Previous_Builder: ; loc_DD04A:                                   
                incbin  'data\all\nghz_128.dat'                  
Neo_Green_Hill_8x8_Incomplete_Tiles_Previous_Builder: ; loc_E504A:                                   
                incbin  'data\sprites\nghz_8.nem'                                
Nghz_Init_Sprites_Dyn_Reload_3: ; loc_E57E6: ; Waterfalls  ; Left over
                incbin  'data\nghz\init_spr.nem'

; ===========================================================================
; Uncompiled Neo Green Hill Zone chunk data; it can be opened in any
; text editor, but the Japanese at the top won't display correctly.
; loc_E5946: Uncompiled_ASM:
		incbin	"Data/all/Uncompiled chunk data for NGHZ.bin"

; ===========================================================================
; DO NOT EDIT ANYTHING PAST THIS POINT! All the music locations are HARDCODED!

; $F0000 => Sounds $98 to $9F
; $F8000 => Sounds $81 to $97

	align $E8000
    if *<>$E8000
	inform 2,"Unused Sega sound isn't located at $E8000!"
    endif

; Unused duplicate Sega sound
Snd_SegaDup:	incbin	"data\all\sega.snd"

; ===========================================================================
; ---------------------------------------------------------------------------
; Subroutine to load the sound driver
; ---------------------------------------------------------------------------

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||

; loc_EC000:
SoundDriverLoad:
		move	sr,-(sp)
		movem.l	d0-a6,-(sp)
		move	#$2700,sr
		lea	($A11100).l,a3
		lea	($A11200).l,a2
		moveq	#0,d2
		move.w	#$100,d1
		move.w	d1,(a3)	; get Z80 bus
		move.w	d1,(a2)	; release Z80 reset (was held high by console on startup)

@loop1:
		btst	d2,(a3)
		bne.s	@loop1	; wait until the 68000 has the bus
		jsr	DecompressSoundDriver(pc)
		move.w	d2,(a2)
		move.w	d2,(a3)
		moveq	#$17,d0

@loop2:
		dbf	d0,@loop2	; wait for 2,314 cycles
		move.w	d1,(a2)		; release Z80 reset
		movem.l	(sp)+,d0-a6
		move	(sp)+,sr
		rts

; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||
; Handles the decompression of the sound driver (Saxman compression, an LZSS variant)
; https://segaretro.org/Saxman_compression

; a4 == start of decompressed data (used for dictionary match offsets)
; a5 == current address of end of decompressed data
; a6 == current address in compressed sound driver
; d3 == length of match minus 1
; d4 == offset into decompressed data of dictionary match
; d5 == number of bytes decompressed so far
; d6 == descriptor field
; d7 == bytes left to decompress

; Interestingly, this suggests the 68k version IS the original, rather than
; the Z80 version used for most songs in the final

; Sound_Driver_002:
DecompressSoundDriver:
		lea	Snd_Driver(pc),a6
		move.w	#$DF3,d7
		moveq	#0,d6		; the decompressor knows it's run out of descriptor bits when it starts reading 0's in bit 8
		lea	($A00000).l,a5
		moveq	#0,d5
		lea	($A00000).l,a4

SaxDec_Loop:                
		lsr.w	#1,d6		; next descriptor bit
		btst	#8,d6		; check if we've run out of bits
		bne.s	@nobitsleft	; (lsr 'shifts in' 0's)
		jsr	SaxDec_GetByte(pc)
		move.b	d0,d6
		ori.w	#$FF00,d6	; these set bits will disappear from the high byte as the register is shifted

@nobitsleft:  
		btst	#0,d6
		beq.s	SaxDec_ReadCompressed

; SaxDec_ReadUncompressed:
		jsr	SaxDec_GetByte(pc)
		move.b	d0,(a5)+
		addq.w	#1,d5
		bra.w	SaxDec_Loop
; ---------------------------------------------------------------------------

SaxDec_ReadCompressed:
		jsr	SaxDec_GetByte(pc)
		moveq	#0,d4
		move.b	d0,d4
		jsr	SaxDec_GetByte(pc)
		move.b	d0,d3
		andi.w	#$F,d3
		addq.w	#2,d3	; d3 is the length of the match minus 1
		andi.w	#$F0,d0
		lsl.w	#4,d0
		add.w	d0,d4
		addi.w	#$12,d4
		andi.w	#$FFF,d4	; d4 is the offset into the current $1000-byte window
		; This part is a little tricky. You see, d4 currently contains the low three nibbles of an offset into the decompressed data,
		; where the dictionary match lies. The way the high nibble is decided is first by taking it from d5 - the offset of the end
		; of the decompressed data so far. Then, we see if the resulting offset in d4 is somehow higher than d5.
		; If it is, then it's invalid... *unless* you subtract $1000 from it, in which case it refers to data in the previous $1000 block of bytes.
		; This is all just a really gimmicky way of having an offset with a range of $1000 bytes from the end of the decompressed data.
		; If, however, we cannot subtract $1000 because that would put the pointer before the start of the decompressed data, then
		; this is actually a 'zero-fill' match, which encodes a series of zeroes.
		move.w	d5,d0
		andi.w	#$F000,d0
		add.w	d0,d4
		cmp.w	d4,d5
		bcc.s	SaxDec_IsDictionaryReference
		subi.w	#$1000,d4
		bcc.s	SaxDec_IsDictionaryReference

; SaxDec_IsSequenceOfZeroes:
		add.w	d3,d5
		addq.w	#1,d5

@loop:
		move.b	#0,(a5)+
		addq.w	#1, d4
		dbf	d3,@loop
		bra.w	SaxDec_Loop
; ---------------------------------------------------------------------------

SaxDec_IsDictionaryReference:                
		add.w	d3,d5
		addq.w	#1,d5

@loop:
		move.b	(a4,d4.w),(a5)+
		addq.w	#1,d4
		dbf	d3,@loop

		bra.w	SaxDec_Loop
; End of function DecompressSoundDriver


; ||||||||||||||| S U B R O U T I N E |||||||||||||||||||||||||||||||||||||||


SaxDec_GetByte:                
		move.b	(a6)+,d0
		subq.w	#1,d7	; decrement the remaining number of bytes
		bne.s	@skip
		addq.w	#4,sp	; exit the decompressor by messing with the track

@skip:
		rts
; End of function SaxDec_GetByte

; ===========================================================================
; ---------------------------------------------------------------------------
; Sound driver (Saxman-compressed)
; Splitting this is going to take some creativity X_X
; ---------------------------------------------------------------------------

Snd_Driver:
                dc.w    $FFF3,$3180,$1BC3,$2D01,$00FF,$3A00,$4087,$38FA
                dc.w    $C900,$FFDD,$CB01,$5628,$0218,$10FF,$F5CF,$F132
                dc.w    $0040,$F5CF,$FF79,$3201,$40F1,$C900,$00EA,$0601
                dc.w    $020B,$0203,$1103,$D9CD,$B9FF,$0BAF,$32AA,$11DD
                dc.w    $2180,$FF1B,$3A83,$1BB7,$2806,$CDFF,$BD05,$C3E9
                dc.w    $00DD,$3501,$FFCC,$F40A,$3A84,$1BB7,$C4EF,$0B0A
                dc.w    $3A8E,$4700,$370B,$3AFF,$891B,$DDB6,$0ADD,$B60B
                dc.w    $FFC4,$2106,$3A88,$1BFE,$80FF,$C45E,$063E,$FF32
                dc.w    $871B,$FFDD,$2197,$1BDD,$CB00,$7EEF,$C4A9,$01AF
                dc.w    $6900,$0606,$C5DF,$112A,$00DD,$1970,$02FE,$01DF
                dc.w    $C110,$F006,$037D,$0896,$04FE,$8A00,$AF1E,$0121
                dc.w    $0060,$731A,$A501,$77AA,$003E,$802C,$008D,$0A88
                dc.w    $0FFA,$9A09,$77A7,$043A,$A811,$B7FA,$FF05,$01D9
                dc.w    $0601,$F1FB,$C9F7,$3E80,$08E6,$00D6,$8132,$A8FF
                dc.w    $1187,$87C6,$7532,$2201,$FFC6,$0232,$2601,$F121
                dc.w    $3CFF,$01E3,$2A75,$0FED,$5B77,$FF0F,$0100,$01FB
                dc.w    $C9CD,$88FF,$0AFB,$FD21,$7901,$1100,$FF00,$7AB3
                dc.w    $28FC,$10FE,$F3DB,$3E2A,$0900,$7E07,$3310,$E60F
                dc.w    $7F32,$5101,$08FD,$8600,$0F00,$6F08,$41FB,$002A
                dc.w    $10F5,$F12D,$12AF,$417E,$231B,$3710,$6F3B,$16FB
                dc.w    $F700,$C338,$1610,$0204,$0810,$FF20,$4080,$FFFE
                dc.w    $FCF8,$F0FF,$E0C0,$151C,$0000,$3F1C,$FF69,$1CBD
                dc.w    $1CE7,$1C11,$1DFF,$111D,$3B1D,$0000,$651D,$FF8F
                dc.w    $1DB9,$1DE3,$1D0D,$1EFF,$0D1E,$DD35,$0BC0,$DD6E
                dc.w    $FF03,$DD66,$047E,$23FE,$E0FF,$3806,$CDDF,$0BC3
                dc.w    $B301,$FFB7,$F2D5,$01DD,$770D,$7EFF,$B7F2,$D401
                dc.w    $DD7E,$0CDD,$FF77,$0BC3,$D801,$23CD,$6B7F,$02DD
                dc.w    $7503,$DD74,$0470,$00FF,$56C0,$DD7E,$0DFE,$80C8
                dc.w    $FFD6,$8187,$C68D,$32F3,$01DF,$ED4B,$8D0F,$79FB
                dc.w    $0078,$32B7,$2901,$C997,$1020,$0D70,$00A6,$FFCD
                dc.w    $1902,$CDDB,$03C3,$9CFF,$0BCD,$A502,$CDBD,$02C3
                dc.w    $D3EB,$039B,$1370,$008E,$A117,$2302,$FFF5,$CDAC
                dc.w    $0BF1,$B7F2,$41FF,$02CD,$4702,$7EB7,$FA7C,$FD02
                dc.w    $C211,$C37C,$02D6,$8028,$FF14,$DD86,$0587,$C61B
                dc.w    $32FF,$5602,$ED5B,$1B03,$DD73,$DF0D,$DD72,$0EC9
                dc.w    $7000,$CEAF,$FEB1,$10DD,$770E,$C94F,$DD46,$DF02
                dc.w    $1007,$DD77,$BB11,$C981,$A3C3,$6FC5,$15BA,$1270
                dc.w    $0066,$D010,$10BF,$DD77,$0FDD,$3609,$FDF0,$00FF
                dc.w    $5EC8,$DD6E,$11DD,$6612,$FFC3,$180E,$DD7E,$0FB7
                dc.w    $C8AF,$DD35,$0FC0,$4D21,$D1FE,$F07E,$BFC2,$A305
                dc.w    $C3AC,$0BA0,$2000,$F94E,$9B21,$8820,$7E13,$B728
                dc.w    $0497,$DD35,$13EB,$1014,$9A10,$8C21,$23FF,$7EDD
                dc.w    $7714,$DD7E,$16B7,$F720,$0F23,$CA21,$16DD,$7E15
                dc.w    $DFED,$44DD,$7715,$EB10,$16DD,$FF6E,$17DD,$6618
                dc.w    $0600,$DDFF,$4E15,$CB79,$CA0B,$0306,$FFFF,$09DD
                dc.w    $7517,$DD74,$18FF,$DD4E,$0DDD,$460E,$09EB,$FFE9
                dc.w    $5E02,$8402,$AB02,$D3FF,$02FE,$022D,$035C,$038F
                dc.w    $FF03,$C503,$FF03,$3C04,$7CFF,$045E,$0A84,$0AAB
                dc.w    $0AD3,$FF0A,$FE0A,$2D0B,$5C0B,$8FFF,$0BC5,$0BFF
                dc.w    $0B3C,$0C7C,$FF0C,$5E12,$8412,$AB12,$D3FF,$12FE
                dc.w    $122D,$135C,$138F,$FF13,$C513,$FF13,$3C14,$7CFF
                dc.w    $145E,$1A84,$1AAB,$1AD3,$FF1A,$FE1A,$2D1B,$5C1B
                dc.w    $8FFF,$1BC5,$1BFF,$1B3C,$1C7C,$FF1C,$5E22,$8422
                dc.w    $AB22,$D3FF,$22FE,$222D,$235C,$238F,$FF23,$C523
                dc.w    $FF23,$3C24,$7CFF,$245E,$2A84,$2AAB,$2AD3,$FF2A
                dc.w    $FE2A,$2D2B,$5C2B,$8FFF,$2BC5,$2BFF,$2B3C,$2C7C
                dc.w    $FF2C,$5E32,$8432,$AB32,$D3FF,$32FE,$322D,$335C
                dc.w    $338F,$FF33,$C533,$FF33,$3C34,$7CFF,$345E,$3A84
                dc.w    $3AAB,$3AD3,$FF3A,$FE3A,$2D3B,$5C3B,$8FFF,$3BC5
                dc.w    $3BFF,$3B3C,$3C7C,$FD3C,$AC23,$5E0D,$DD56,$0E7A
                dc.w    $EFB3,$CA42,$05CC,$1226,$00DD,$FF6E,$19CB,$7D28
                dc.w    $0226,$FFFF,$194C,$DD7E,$01E6,$03C6,$FFA4,$D74D
                dc.w    $D604,$D7C9,$56FF,$0326,$03F9,$02CE,$02A5,$FF02
                dc.w    $8002,$5C02,$3A02,$1AFF,$02FB,$01DF,$01C4,$01AB
                dc.w    $FF01,$9301,$7D01,$6701,$53FF,$0140,$012E,$011D
                dc.w    $010D,$FF01,$FE00,$EF00,$E200,$D6FF,$00C9,$00BE
                dc.w    $00B4,$00A9,$FF00,$A000,$9700,$8F00,$87FF,$007F
                dc.w    $0078,$0071,$006B,$FF00,$6500,$5F00,$5A00,$55FF
                dc.w    $0050,$004B,$0047,$0043,$FF00,$4000,$3C00,$3900
                dc.w    $36FF,$0033,$0030,$002D,$002B,$FF00,$2800,$2600
                dc.w    $2400,$22FF,$0020,$001F,$001D,$001B,$FF00,$1A00
                dc.w    $1800,$1700,$167F,$0015,$0013,$0012,$0023,$10FC
                dc.w    $3E00,$EE15,$B404,$CD04,$05C3,$DB4C,$05FE,$1147
                dc.w    $0501,$2110,$05FE,$072F,$0BC3,$BE04,$B7F2,$D76F
                dc.w    $04CD,$DD04,$292A,$8138,$3823,$FF0A,$32EC,$04ED
                dc.w    $5B0A,$04B6,$4628,$3EFF,$5223,$C3A3,$D830,$0EF7
                dc.w    $7E20,$38CE,$33DD,$7E00,$E6F9,$06DD,$3AEB,$30FE
                dc.w    $E020,$023E,$FFC0,$477D,$E60F,$B032,$11DF,$7F7D
                dc.w    $CB3C,$1F22,$501F,$1FF3,$E63F,$1E50,$4C22,$C9DD
                dc.w    $7E08,$F696,$2046,$0635,$5128,$2721,$A9FF,$0F3D
                dc.w    $875F,$1600,$197E,$FF23,$66DD,$8609,$6F8C,$95FF
                dc.w    $677E,$DD34,$09B7,$F274,$FF05,$FE80,$282B,$80FE
                dc.w    $109F,$3802,$3E0F,$47FE,$4376,$2120,$DD0A,$EB30
                dc.w    $B0C6,$102C,$527E,$10B7,$B728,$F093,$2120,$EAEB
                dc.w    $1009,$DC4C,$21CF,$1101,$F61F,$2C51,$2111,$FF7F
                dc.w    $369F,$36BF,$36DF,$36FF,$FFC9,$FACD,$05FE,$02C8
                dc.w    $FFDD,$3603,$02CD,$700A,$C3AF,$B105,$DDE5,$B150
                dc.w    $006C,$0106,$EF07,$CDFA,$059F,$0CDD,$213B,$671D
                dc.w    $0603,$C750,$2800,$DDE1,$4C21,$FB7E,$28BA,$0156
                dc.w    $2013,$DD4E,$DD07,$EB33,$B4D7,$C535,$50CD,$76BB
                dc.w    $0DC1,$B602,$10DA,$C95F,$02C0,$FF21,$891B,$3A80
                dc.w    $1B4F,$06FF,$037E,$5F36,$0023,$FE81,$FF38,$22D6
                dc.w    $A030,$057B,$32FF,$881B,$C9E5,$C630,$6FCE,$BD0F
                dc.w    $5450,$B938,$054F,$2B61,$E1FF,$79B7,$F832,$801B
                dc.w    $C910,$FFD3,$C9B7,$CA88,$0AF0,$DDFF,$3608,$80FE
                dc.w    $A0DA,$E306,$FFFE,$A0D8,$FEE1,$DA95,$08FF,$FEF9
                dc.w    $D8FE,$FED0,$D6F9,$FF87,$8732,$8206,$18FE,$C3FF
                dc.w    $F609,$00C3,$9706,$00C3,$DF07,$0B00,$C314,$7B60
                dc.w    $880A,$3F00,$3E2B,$0E80,$DF9F,$03DE,$017E,$A902
                dc.b    $21
;0x000EC70D Sega_Pointer 8C9E
Sega_Snd_Ptr    equ     (Sega_Snd&$FFFF)|$8000                               
                dc.w    ((Sega_Snd_Ptr>>$08)|(Sega_Snd_Ptr<<$08))&$FFFF 
                dc.b    $11
                dc.w    $BA30,$2D12,$F70E,$807E,$0F00,$2300
                dc.w    $060C,$BB10,$FE5F,$00B9,$2010,$A667,$1BDF,$7AB3
                dc.w    $C2B8,$0628,$003A,$95FF,$1B4F,$3E2B,$DFC9,$32A9
                dc.w    $FF11,$FE98,$203B,$3A91,$1B67,$B720,$3C6C,$01B6
                dc.w    $0006,$0A70,$0055,$960A,$60F8,$D952,$0670,$00BE
                dc.w    $EB61,$F711,$371E,$3000,$01BB,$01ED,$DDB0,$AE00
                dc.w    $911B,$AF45,$6018,$07FD,$AF0A,$7032,$901B,$CDAE
                dc.w    $0AF3,$3AA9,$F800,$4850,$2188,$1119,$BF7E,$3293
                dc.w    $1B21,$6927,$7047,$BFE6,$8032,$961B,$7847,$5121
                dc.b    $EF
;0x000EC79D Music_Pointers 0080                
Snd_81To97_Ptr  equ     (Music_81_To_97&$FFFF)|$8000                               
                dc.w    ((Snd_81To97_Ptr>>$08)|(Snd_81To97_Ptr<<$08))&$FFFF                 
                dc.b    $19
                dc.w    $E528,$00E1,$5E23,$FF56,$D5DD,$E1DD
                dc.w    $5E00,$DDFF,$5601,$ED53,$8C1B,$DD7E,$FF05,$3292
                dc.w    $1B47,$3A94,$1BFF,$B778,$2803,$3A93,$1B32,$FF82
                dc.w    $1B32,$811B,$DDE5,$E1F7,$1106,$000F,$5002,$B7CA
                dc.w    $F9DF,$0747,$FDE5,$FD6D,$014E,$04FF,$118B,$08FD
                dc.w    $CB00,$FE1A,$FF13,$FD77,$01FD,$7102,$FDFF,$360A
                dc.w    $2AFD,$3607,$C0FD,$FF36,$0B01,$D5C5,$FD7D,$C6FF
                dc.w    $035F,$FD8C,$9357,$EDA0,$FCAB,$73B6,$00FD,$19C1
                dc.w    $D110,$CCFB,$FDE1,$7470,$FE07,$2004,$AFFF,$4F18
                dc.w    $183E,$280E,$06DF,$FF3E,$420E,$FF06,$04EF,$C6FF
                dc.w    $0410,$FB3E,$B60E,$C0EF,$BF3E,$804F,$3295,$1BCD
                dc.w    $60DD,$BF7E,$03B7,$CA45,$087B,$72BD,$C51C,$8271
                dc.w    $9287,$7F9D,$7FAB,$7123,$7E2F,$23FD,$7708,$B375
                dc.w    $CABC,$70F0,$62F4,$B601,$E951,$1CEB,$30B7,$FA60
                dc.w    $08DF,$D602,$8718,$0627,$501F,$E6FF,$0FC6,$8932
                dc.w    $6C08,$2A89,$7B01,$CBEA,$61DA,$DD21,$C17A,$00C4
                dc.w    $1E20,$0A60,$F9DD,$50F0,$406C,$80C9,$06FE,$6711
                dc.w    $0506,$80A0,$C04F,$DDFF,$7E11,$DDB6,$04DD,$B60E
                dc.w    $FFC2,$7809,$79FE,$B520,$0FFF,$3AAB,$11B7,$2002
                dc.w    $0ECE,$FF2F,$32AB,$11C3,$C508,$79FF,$FEA7,$200A
                dc.w    $3AAC,$11B7,$EDC0,$AE00,$AC11,$9F0C
                dc.b    $21
;0x000EC8E9 Sfx_Pointers 00F0
Sfx_Pointers    equ     (Sfx_A0_To_F9&$FFFF)|$8000                               
                dc.w    ((Sfx_Pointers>>$08)|(Sfx_Pointers<<$08))&$FFFF 
                dc.b    $D7
                dc.w    $79D6,$A047,$556F,$4670,$23ED,$FF53,$6809,$4E23
                dc.w    $4623,$C5BF,$AF32,$5F09,$E523,$2920,$01DD,$0949
                dc.w    $80C3,$1A09,$DF80,$FEC0,$B720,$0CF5,$9952,$EE20
                dc.w    $1E50,$F1D6,$4E86,$2009,$5981,$D67A,$502B,$09FF
                dc.w    $DD2A,$9901,$DD5D,$DD54,$FFD5,$6B62,$3600,$1301
                dc.w    $29DF,$00ED,$B0D1,$E1AB,$71C1,$C5AF,$DD71,$02DD
                dc.w    $0C80,$DD95,$707B,$EFC6,$015F,$8AA9,$773E,$00B7
                dc.w    $F8EF,$1099,$7023,$10DD,$731C,$DD72,$7F1D,$C105
                dc.w    $C2EF,$08C3,$2901,$AE46,$60CD,$7809,$EF63,$C570
                dc.w    $01CA,$B3EC,$09F5,$6243,$81BF,$091D,$22DD,$69E5
                dc.w    $4980,$5480,$AA16,$9089,$01E7,$62BC,$4E20,$0063
                dc.w    $DDE1,$C3EC,$8690,$A389,$058B,$904E,$86D3,$959C
                dc.w    $1251,$3C50,$1BF6,$1E50,$DDE1,$B602,$C105,$1091
                dc.w    $FFC9,$CD7D,$093E,$0332,$85DF,$1B3E,$2832,$840C
                dc.w    $7097,$1B3F,$3294,$1BC9,$3A85,$3500,$BB20,$F505
                dc.w    $EB10,$044D,$60DD,$3605,$03F8,$BB50,$6382,$E852
                dc.w    $11DD,$3406,$F2FD,$39E6,$61BE,$1805,$C5CD,$E7EE
                dc.w    $0565,$E206,$03E8,$5434,$063E,$BF10,$DDBE,$06D2
                dc.w    $5E20,$A308,$9DC5,$3A50,$CD7C,$0506,$65E5,$503E
                dc.w    $FF28,$0603,$480D,$DFCB,$D1DF,$DF10,$F83E,$30D0
                dc.w    $7060,$DFA7,$EF3C,$10F1,$0086,$6179,$E171,$27F7
                dc.w    $0E00,$DF30,$0011,$811B,$366F,$0001,$B602,$0672
                dc.w    $881B,$B554,$D630,$00DD,$46EE,$2011,$4CA0,$14DD
                dc.w    $FB4E,$104C,$A009,$DD4E,$0AC5,$FA84,$A6BA,$0570
                dc.w    $C1DD,$7009,$DD7B,$710A,$C2A0,$14DD,$7110,$C2A0
                dc.w    $AF00,$DD71,$1191,$A83A,$6872,$21FD,$A2E1,$6334
                dc.w    $1910,$FCC9,$0639,$80D8,$6164,$7028,$0F18,$EC20
                dc.w    $F7A2,$AB92,$1B02,$000B,$6773,$78F5,$9132,$FF39
                dc.w    $1E32,$381E,$7832,$4BEF,$1EC9,$3A8F,$FB93,$0FC9
                dc.w    $3AFD,$90DA,$600D,$3A97,$1BE6,$FBDE,$F290,$AF32
                dc.w    $8E1B,$EB10,$10DD,$F736,$0F02,$0DAA,$08DD,$3506
                dc.w    $EA27,$A8EB,$33A4,$1257,$B0DD,$7E06,$1663,$53C5
                dc.w    $4750,$A7E1,$E551,$6B53,$9750,$DFF0,$4F3E,$28DF
                dc.w    $89B2,$14C0,$FF3E,$28DD,$4E01,$DFC9,$3AD5,$96DA
                dc.w    $6010,$8A6C,$C99F,$0CC9,$D6BD,$E06A,$60E9,$0B7E
                dc.w    $236F,$6052,$AF0C,$00C3,$70DA,$B074,$DAB0,$78FA
                dc.w    $DAB0,$8BDA,$B00C,$0D00,$C310,$AAEE,$B019,$EEB0
                dc.w    $1FEE,$B026,$EEB0,$2DAA,$EEB0,$34EE,$B049,$EEB0
                dc.w    $50EE,$B056,$FAEE,$B058,$EEB0,$0D0E,$00C3,$36AA
                dc.w    $1AC0,$3C1A,$C0D0,$1AC0,$E01A,$C0E6,$EA1A,$C0EA
                dc.w    $1AC0,$ED1A,$C00B,$0F00,$37C3,$240F,$FDF1,$7EF8
                dc.w    $CC12,$8380,$7F07,$E637,$B1DD,$7707,$8380,$FEF9
                dc.w    $53C9,$DD77,$19C9,$3286,$7640,$B04E,$0AED,$20E5
                dc.w    $E109,$CD81,$FB0C,$0CC6,$A0C9,$2137,$1E11,$3C01
                dc.w    $74C6,$6197,$1BF6,$04F2,$902F,$B086,$95B0,$914F
                dc.w    $F360,$6380,$E856,$A190,$0637,$81DD,$77F4,$6156
                dc.w    $204B,$A001,$6A42,$33A4,$0E4D,$2171,$81A8,$C307
                dc.w    $63E5,$AE00,$B58E,$EB91,$900C,$7091,$1BC9,$64C1
                dc.w    $FDC1,$3C01,$7702,$C9DD,$8606,$B6AB,$C0C3,$E7F0
                dc.w    $11E6,$2B5D,$C00F,$F7DD,$7710,$FDC0,$05DD,$7705
                dc.w    $65C9,$6773,$C90D,$A1E0,$6577,$026B,$816C,$E551
                dc.w    $FFC2,$C9AF,$B080,$2BC9,$0BD1,$FB08,$4FCC,$12E5
                dc.w    $CD67,$0DE1,$BFC9,$3AAA,$11B7,$7955,$B06E,$FF1C
                dc.w    $DD66,$1D18,$032A,$8CFF,$1BE5,$4F06,$0087,$6F60
                dc.w    $FF29,$295D,$5429,$1909,$D1EE,$4B50,$32BB,$0D54
                dc.w    $C4B0,$D7D6,$BF80,$0604,$4E23,$D7D5,$70F9,$DFF5
                dc.w    $C610,$0610,$89D4,$C624,$FEF4,$50D7,$DD75,$1EDD
                dc.w    $741F,$FF3E,$00E6,$07C6,$DF5F,$16FF,$0D1A,$DD77
                dc.w    $1A5F,$DD56,$FB06,$F187,$D1CB,$1B30,$05F5,$EF7A
                dc.w    $814F,$F18B,$D1F0,$C908,$1ECD,$D00C,$0E0E,$0FA1
                dc.w    $219B,$21CF,$10EB,$5E1A,$EB33,$40B6,$D0CB,$7AC0
                dc.w    $FFE5,$DD6E,$1EDD,$661F,$CDF9,$CC52,$D070,$00DE
                dc.w    $2BDD,$7511,$FFDD,$7412,$DD7D,$C613,$5F3D,$DDA8
                dc.w    $767E,$23CB,$3FD8,$2051,$203F,$17DD,$7718,$C92B
                dc.w    $FBD1,$4C21,$F9BE,$F111,$A121,$200C,$3A87,$1B2F
                dc.w    $B7FA,$CE0E,$1E20,$1870,$8155,$D167,$F2CD,$0E0D
                dc.w    $7142,$82A5,$0E8C,$957B,$770E,$9694,$56CA,$A00E
                dc.w    $E251,$9C9B,$9ACA,$5DE1,$C1C1,$21D0,$4E86,$B4F8
                dc.w    $62E5,$C69F,$8EE3,$3601,$E0DD,$77A6,$6F01,$56C0
                dc.w    $2C51,$24E1,$9E45,$D1C9,$FF66,$6FC9,$4E23,$E5C6
                dc.w    $20F9,$6FDE,$301C,$9019,$7EB7,$2001,$DF71,$35E1
                dc.w    $2805,$CD81,$C923,$FD23,$5820,$7E0A,$D602,$DD77
                dc.w    $FF0A,$4623,$EBDD,$856F,$DDFE,$5350,$7323,$7260
                dc.w    $69C9,$3EBF,$880E,$0FDF,$3E8C,$14F0,$2B57,$C980
                dc.w    $701F,$F568,$1FF0,$602A,$F1A4,$2CF0,$1FF6,$7F31
                dc.w    $F91F,$F180,$4EFC,$90FE,$5EF1
               ;dc.w    $00D0,$9402,$94D2,$23FF,$076B,$EA68,$02D3,$EC50
               ;dc.w    $FF0A,$B7D9,$B50B,$6CE5,$FFFF,$04
DAC01_Offset    equ     (DAC_Sample01&$FFFF)|$8000          
DAC01_Size      equ     DAC_Sample01_End-DAC_Sample01 
DAC02_Offset    equ     (DAC_Sample02&$FFFF)|$8000          
DAC02_Size      equ     DAC_Sample02_End-DAC_Sample02   
DAC03_Offset    equ     (DAC_Sample03&$FFFF)|$8000          
DAC03_Size      equ     DAC_Sample03_End-DAC_Sample03  
DAC04_Offset    equ     (DAC_Sample04&$FFFF)|$8000          
DAC04_Size      equ     DAC_Sample04_End-DAC_Sample04   
DAC05_Offset    equ     (DAC_Sample05&$FFFF)|$8000          
DAC05_Size      equ     DAC_Sample05_End-DAC_Sample05  
DAC06_Offset    equ     (DAC_Sample06&$FFFF)|$8000          
DAC06_Size      equ     DAC_Sample06_End-DAC_Sample06        
                dc.w    ((DAC01_Offset>>$08)|(DAC01_Offset<<$08))&$FFFF               
                dc.w    ((DAC01_Size>>$08)|(DAC01_Size<<$08))&$FFFF                 
                dc.w    ((DAC02_Offset>>$08)|(DAC02_Offset<<$08))&$FFFF 
                dc.b    DAC02_Size&$FF,$FF,(DAC02_Size>>$08)&$FF
                dc.w    ((DAC03_Offset>>$08)|(DAC03_Offset<<$08))&$FFFF 
                dc.w    ((DAC03_Size>>$08)|(DAC03_Size<<$08))&$FFFF 
                dc.w    ((DAC04_Offset>>$08)|(DAC04_Offset<<$08))&$FFFF 
                dc.b    DAC04_Size&$FF,$FF,(DAC04_Size>>$08)&$FF
                dc.w    ((DAC05_Offset>>$08)|(DAC05_Offset<<$08))&$FFFF               
                dc.w    ((DAC05_Size>>$08)|(DAC05_Size<<$08))&$FFFF 
                dc.w    ((DAC06_Offset>>$08)|(DAC06_Offset<<$08))&$FFFF 
                dc.b    DAC06_Size&$FF,$FF,(DAC06_Size>>$08)&$FF                  
                dc.b    $81
                dc.w    $1782,$0183,$1784,$FF04,$851B
                dc.w    $860A,$0000,$85FF,$1285,$1585,$1C85,$1D86,$FF0A
                dc.w    $860E,$8613,$C30F,$DAFF,$0FE1,$0FF2,$0F0C,$10FD
                dc.w    $FF0F,$3610,$5210,$7A10,$8BBF,$10C9,$10E5,$1065
                dc.w    $8041,$01FF,$0101,$0202,$0203,$0303,$FF04,$0404
                dc.w    $0505,$0506,$06FF,$0607,$8000,$0204,$0608,$8310
                dc.w    $80B2,$F1B8,$F1BE,$F1C4,$F0C6,$F000,$2102,$D6F2
                dc.w    $7E80,$BAF0,$B7F0,$02B4,$F081,$4001,$00CE,$F0FA
                dc.w    $F5B4,$F004,$08EE,$F1EE,$F1BA,$F002,$1A02,$04F9
                dc.w    $F40D,$07BA,$F7DE,$F127,$0A19,$0320,$BDF0,$BEF2
                dc.w    $C1F2,$DBF1,$C6F0,$01E2,$F03C,$00FF,$0809,$0A0B
                dc.w    $0C0D,$0E0F,$00F9,$FF89,$0F0D,$0A18,$0720,$01BD
                dc.w    $F0EB,$F30B,$0900,$B006,$ECF1,$8F0F,$9F09,$A10F
                dc.w    $0319,$5502,$171C,$E05A,$022B,$1C5F,$023F,$1C66
                dc.w    $0103,$8080,$FF81,$8283,$8485,$8687,$88FF,$898A
                dc.w    $8B8C,$8D8E,$8F8F,$BF90,$9192,$9394,$9468,$0305
                dc.w    $FF05,$0772,$7326,$1508,$FF03,$0520,$7E1F,$8412
                dc.w    $7902 
                
                cnop    $0000,$1000                 
DAC_Sample01:
                dc.w    $03BC,$7FD5,$2DD5,$3BF7,$D0F7,$6ED7,$EFE8,$D64E
                dc.w    $E77E,$96E6,$53D5,$41D5,$0000,$0000,$D4A1,$EEDC
                dc.w    $4FD5,$DDDE,$CCB9,$0000,$04AB,$259B,$34C3,$244B
                dc.w    $A434,$4495,$1443,$4534,$2444,$3444,$2432,$4342
                dc.w    $B431,$93B3,$A4C0,$3BB2,$C1BB,$BABB,$BCBA,$BCBB
                dc.w    $CCBB,$CBCB,$CBBB,$CCAC,$ABBB,$CB9A,$BBB0,$AB90
                dc.w    $A190,$A320,$0330,$2322,$3333,$3133,$3333,$3333
                dc.w    $3233,$2343,$B242,$3222,$1321,$1122,$1110,$9039
                dc.w    $AA22,$A9A1,$00AA,$009A,$9AB0,$90BA,$A9B2,$ABA1
                dc.w    $0BA0,$1CA3,$A09A,$A02A,$900A,$2A02,$0A02,$A20A
                dc.w    $2B22,$2AA2,$002B,$993A,$A009,$A00B,$2AA2,$9B1A
                dc.w    $B01A,$9AB3,$1BC2,$2092,$0BA4,$2B12,$1102,$3B04
                dc.w    $3AB3,$24A2,$B433,$C342,$A409,$04A2,$203A,$211A
                dc.w    $3A0A,$32BC,$3100,$0AB2,$1B92,$0AA2,$AB39,$BB23
                dc.w    $BB09,$B902,$BC94,$BB91,$A901,$AA03,$9B20,$0B22
                dc.w    $2CA4,$9B9B,$029A,$A22A,$9121,$2210,$B4A2,$2A03
                dc.w    $1010,$9221,$39A0,$3299,$23BA,$23AA,$2A91,$0919
                dc.w    $A30A,$921B,$13AA,$A301,$A903,$9193,$A922,$0210
                dc.w    $001A,$23B0,$A209,$19A9,$91B0,$2A99,$001A,$A12A
                dc.w    $9992,$B21A,$B12A,$BA20,$B12A,$AA30,$A2A0,$291A
                dc.w    $12AA,$20A2,$2A92,$2A30,$0002,$2990,$0292,$B13B
                dc.w    $1A3B,$22A2,$21A1,$3A12,$011A,$1929,$093A,$B24B
                dc.w    $AA30,$A31A,$11A2,$A92A,$0099,$AA4B,$BB32,$3B2A
                dc.w    $219B,$23AA,$10AA,$03BA,$A190,$AB20,$AA90,$4CB3
                dc.w    $3BA0,$0939,$AA22,$9920,$A30A,$933C,$339A,$32B0
                dc.w    $2110,$0920,$A21A,$922A,$A3B2,$0A19,$13AC,$24CA
                dc.w    $31AA,$310B,$2292,$29A9,$24BB,$0320,$20A3,$3999
                dc.w    $331B,$0021,$3B00,$0A99,$00B0,$9091,$CA32,$AAA9
                dc.w    $2A02,$A901,$2AB1,$2AB2,$1AA2,$B101,$A991,$90A1
                dc.w    $991A,$21A9,$A201,$1A0A,$23B1,$20A2,$2A11,$1A22
                dc.w    $9102,$2A13,$0001,$1A13,$92A3,$31B3,$30A3,$292A
                dc.w    $109A,$2999,$0BA0,$39BA,$2A23,$B923,$BA33,$BA29
                dc.w    $B02A,$B10B,$0090,$190A,$220C,$3300,$0B99,$12AB
                dc.w    $11AB,$229A,$3AA3,$1A00,$0019,$2A91,$3AA0,$2091
                dc.w    $1AA2,$2991,$9012,$0A11,$2A09,$912A,$A121,$AA30
                dc.w    $0200,$2122,$9931,$2010,$1022,$A011,$19A1,$A202
                dc.w    $A900,$9009,$0A19,$A91A,$2A9A,$019A,$10A9,$1990
                dc.w    $019A,$A1A9,$90A0,$2A09,$1090,$1909,$2091,$9001
                dc.w    $9011,$0A10,$0020,$A100,$0190,$1091,$021A,$1212
                dc.w    $0001,$1200,$1020,$0119,$1191,$1001,$0010,$0001
                dc.w    $0900,$0919,$1900,$0009,$9100,$9990,$0991,$A900
                dc.w    $9900,$9009
DAC_Sample01_End: 
DAC_Sample02:   
                dc.w    $3567,$F472,$F2E7,$D2DD,$DEDC,$DDAD,$55FD,$7F27
                dc.w    $7FD8,$4FF6,$66ED,$7FF5,$66DD,$6F56,$6E54,$69E6
                dc.w    $CD6F,$65E6,$4E34,$7581,$57DC,$6343,$DEF7,$20CD
                dc.w    $C0D4,$DBCB,$0AA0,$2901,$0ACE,$EC35,$5545,$5555
                dc.w    $2433,$4045,$654E,$DDED,$DEE4,$7ED7,$2E56,$CE66
                dc.w    $E492,$E75A,$DDE1,$DCCB,$CCCE,$45DD,$E675,$ECBE
                dc.w    $564C,$453E,$B66E,$A47D,$F56D,$E415,$3456,$5E36
                dc.w    $6CDE,$4DDD,$DDE4,$CD54,$DE5D,$ED46,$7536,$C6C6
                dc.w    $9FC4,$ED44,$EDB7,$2E46,$D464,$5034,$E3D4,$914B
                dc.w    $5E5B,$DDEB,$E465,$2655,$BEC6,$CDD5,$CED6,$CDE6
                dc.w    $63DE,$D4DC,$5554,$3ED5,$D66C,$D315,$4444,$5C55
                dc.w    $44E1,$6EDD,$55EE,$D6DE,$C605,$56A4,$AAED,$454E
                dc.w    $C2BB,$DC6D,$DDBE,$34C5,$2565,$D555,$73ED,$41CC
                dc.w    $ECDD,$B51D,$DBB2,$57DD,$C5C5,$5D66,$EC52,$6DED
                dc.w    $5D1E,$55EC,$4E4B,$C756,$DE26,$EBAE,$404B,$4DCE
                dc.w    $45DC,$63D5,$6601,$46BD,$E64E,$CCED,$DF75,$4CE7
                dc.w    $CE7C,$BCEB,$5A7D,$D66E,$DC6E,$EDD2,$4ACD,$D56E
                dc.w    $A6C5,$5C55,$E64D,$DCD4,$65D5,$55CE,$D36E,$44EB
                dc.w    $D51B,$D4CC,$37EE,$A436,$D2D4,$6DD6,$5AB4,$AD4A
                dc.w    $EBD3,$AED4,$C356,$BC66,$E5CC,$E53B,$D462,$4C04
                dc.w    $DD5C,$54E4,$413E,$56AD,$E4D4,$6CC4,$EC42,$5355
                dc.w    $B52A,$40E3,$BE05,$55CD,$AD5D,$DB5C,$5EB5,$D6D6
                dc.w    $2DC5,$65ED,$444C,$CCA6,$A0DD,$64E4,$D5C4,$D156
                dc.w    $ADC2,$E3CC,$A4CE,$EA56,$65BC,$2636,$C5ED,$66ED
                dc.w    $C5EE,$64AD,$DCAF,$666E,$E55D,$565C,$3646,$EDCC
                dc.w    $D53A,$D4DD,$55D4,$CEC5,$DE6C,$53A4,$C36C,$5D3A
                dc.w    $C644,$4AE5,$CD21,$BB4E,$5BD5,$0DC3,$6CD5,$55DD
                dc.w    $C4DE,$35C4,$5001,$665C,$EC54,$3D4D,$34CE,$B2A4
                dc.w    $D3DC,$CEA5,$65C4,$44B6,$623C,$DE25,$5EED,$94A2
                dc.w    $EB4C,$41D6,$1305,$653D,$5345,$5DCC,$24D4,$DECD
                dc.w    $DCCC,$E56A,$1356,$D956,$CC6D,$4429,$CBCC,$DCDA
                dc.w    $4DD1,$456E,$9515,$4AD4,$4AC2,$4CDA,$D4AD,$4A65
                dc.w    $DC5D,$3D44,$4444,$ABD2,$5E4E,$6DBD,$D55D,$DAD6
                dc.w    $6CC5,$6E24,$2454,$A14D,$0C25,$B3DC,$D4EC,$C1B9
                dc.w    $0DB5,$644D,$3553,$325B,$CC34,$DDE6,$5DDC,$9CB2
                dc.w    $46CD,$EB7A,$22C4,$DC55,$CED1,$C29D,$45C3,$535B
                dc.w    $5B65,$4CDC,$AE6B,$DCDE,$54D2,$332C,$945D,$4454
                dc.w    $04B3,$425D,$DCCC,$C5DE,$B64A,$D4CB,$454A,$CCC4
                dc.w    $5CD3,$64B3,$DD94,$C354,$E904,$BDE2,$6644,$D393
                dc.w    $B53A,$A42C,$DBD2,$C49C,$D5C4,$04B9,$4454,$DCCD
                dc.w    $D5DD,$4556,$DCB5,$2A50,$B3C5,$3CBC,$C044,$DDE5
                dc.w    $6BEB,$ACD5,$2A45,$5D94,$61DA,$3554,$5BDC,$A325
                dc.w    $CDEC,$0D4B,$1CC5,$1C34,$3435,$5CDC,$D5BA,$4CDC
                dc.w    $443B,$46D9,$5DB5,$9CCB,$0BCC,$5A24,$AB2B,$654E
                dc.w    $C4DC,$C56D,$C44A,$BDD5,$0DCA,$4BB2,$44CC,$4CD6
                dc.w    $9CD2,$4CC4,$694C,$3A5B,$1D4C,$334B,$BCAC,$44DA
                dc.w    $CB42,$A2A4,$BD55,$9C5A,$2C45,$5DD4,$D3CC,$C54D
                dc.w    $D5AC,$2A13,$4CD4,$9CAD,$53B6,$3C4C,$B42A,$BA4C
                dc.w    $DCDA,$64B0,$B034,$523C,$A62D,$DC33,$DC4D,$C53D
                dc.w    $C454,$10A5,$BCC5,$594C,$DC4C,$DDA2,$49A3,$B50B
                dc.w    $244C,$E955,$DC44,$5234,$DB5A,$D2C5,$AD49,$354C
                dc.w    $31C4,$2D45,$DC9D,$C92C,$BCA4,$5B10,$413C,$05C4
                dc.w    $55DE,$4539,$BA4A,$C0CB,$42CA,$A2A4,$39BB,$3544
                dc.w    $BBE2,$C254,$9BC4,$1D44,$CB92,$D431,$2AC1,$0345
                dc.w    $4DD4,$4ACB,$DAB1,$3C45,$43C3,$25CD,$55DD,$4035
                dc.w    $9C4C,$432D,$D4D5,$430A,$DB12,$D043,$3AAC,$DB40
                dc.w    $3123,$C45A,$A423,$235C,$AB4D,$BBBB,$44BD,$3D34
                dc.w    $0D34,$44C5,$222C,$B04C,$C49B,$C04A,$3233,$CA24
                dc.w    $ACB3,$4ABD,$CC1C,$ACC4,$4C56,$42C3,$4CAC,$55BD
                dc.w    $4CC4,$2922,$A2DD,$1531,$43AC,$2C34,$52CC,$C09A
                dc.w    $DC5C,$BBD0,$5254,$4DA5,$CDC1,$4C0C,$B455,$43AD
                dc.w    $B5BC,$2ACB,$4A15,$4CC0,$40C2,$2249,$CBA2,$55CC
                dc.w    $4BC9,$CCB2,$BDD2,$2C43,$4AC4,$5534,$1CD3,$4C4B
                dc.w    $C24C,$BCBB,$4A43,$C332,$3442,$AA24,$ADBB,$CDC2
                dc.w    $4453,$A4C2,$32B2,$BBB3,$35CC,$914C,$C3CB,$53CC
                dc.w    $CA2A,$CB2A,$C52C,$243C,$CA55,$3DD1,$554C,$043B
                dc.w    $20CB,$D244,$2394,$9DD4,$9CCC,$BB45,$354A,$BAA1
                dc.w    $B1BC,$13C1,$CC50,$43C4,$4CA2,$0CD4,$B45B,$CDB4
                dc.w    $5CB4,$4102,$33C0,$B344,$B292,$BCCD,$192C,$A341
                dc.w    $B332,$52AB,$CB90,$C45A,$BCC5,$29BC,$CABC,$4345
                dc.w    $C44C,$A45C,$4B41,$ACCB,$BDCC,$B2A1,$4442,$C342
                dc.w    $AC55,$ADC4,$4239,$CCCA,$C24C,$AB1B,$539B,$94CB
                dc.w    $BA24,$415C,$D9B2,$54AB,$D203,$BD45,$AA4B,$429C
                dc.w    $3944,$CCA2,$BBCA,$C230,$4A34,$93CB,$B4BC,$AB42
                dc.w    $43C3,$0BD2,$4430,$BC04,$4309,$CDA4,$4090,$B300
                dc.w    $22A0,$0CB0,$2BC4,$543C,$C1C5,$3CC9,$3BCA,$243C
                dc.w    $BAA4,$9B42,$AAC4,$2B14,$32A3,$BCB4,$A2BA,$10B0
                dc.w    $C93A,$2233,$3513,$C2AA,$41BB,$BCCD,$54AC,$245A
                dc.w    $32DC,$AB13,$0022,$290B,$99BB,$4BBB,$B432,$3CC3
                dc.w    $A34A,$41C0,$C153,$0B3B,$33A3,$19B4,$43BC,$BBB3
                dc.w    $2BB3,$34BC,$A20C,$C942,$B133,$ACC3,$449B,$CB42
                dc.w    $233B,$C323,$BCBB,$A223,$AB4B,$443B,$2AAC,$24C1
                dc.w    $B30A,$3BAB,$053A,$B23A,$BC41,$C293,$4BB9,$92A1
                dc.w    $A04B,$12BB,$49BA,$B3C2,$AB2A,$90C1,$4343,$ABB0
                dc.w    $32BC,$323B,$4233,$ABCA,$21AA,$CB0A,$241C,$1330
                dc.w    $B220,$4034,$2A1C,$B3C2,$49CB,$1BB9,$0932,$0990
                dc.w    $3CA3,$AA4C,$A4A2,$441B,$41A4,$ACAA,$B3BC,$A433
                dc.w    $BC94,$910C,$CC11,$A944,$4392,$1BCB,$50CA,$BB19
                dc.w    $0234,$3130,$BCC4,$13CC,$0332,$1233,$232A,$ABC2
                dc.w    $9CBA,$229A,$4BBA,$B430,$BB33,$4212,$4139,$AB0A
                dc.w    $02BC,$A00C,$BA22,$B94B,$B935,$32CC,$B221,$31BA
                dc.w    $3224,$413C,$B932,$BC01,$21CC,$AAB9,$220B,$22A2
                dc.w    $3A14,$32AA,$03B0,$0132,$A1AB,$940A,$B332,$A22B
                dc.w    $AC00,$BA03,$ABB2,$BB33,$43CB,$3235,$2BB3,$B09B
                dc.w    $CCBA,$9C24,$4CB1,$1233,$43AB,$413C,$A2A0,$9B19
                dc.w    $12AA,$33CA,$2993,$421B,$32A1,$AB23,$AB0A,$C9B9
                dc.w    $24CC,$B34A,$9192,$3A45,$0CB3,$3BC3,$29A9,$0B40
                dc.w    $BCAB,$BB44,$9C24,$2342,$902A,$C941,$CB23,$2ACB
                dc.w    $143A,$91AC,$9432,$19A9,$23A0,$90AC,$A109,$B101
                dc.w    $B13C,$3459,$B043,$0AB0,$221B,$CBA9,$BB03,$3BB3
                dc.w    $9B24,$331A,$30BB,$39BA,$BBA2,$2312,$1A90,$BB34
                dc.w    $0A0A,$042A,$9120,$CAC9,$3202,$1B03,$40A2,$AAA2
                dc.w    $43BB,$00A3,$9A30,$CA2A,$C402,$2ACB,$AA31,$9232
                dc.w    $1B91,$9A2A,$1A33,$BB22,$0B19,$AB09,$A222,$1B33
                dc.w    $AA19,$3A90,$0A13,$2A1A,$B022,$21C9,$3333,$A133
                dc.w    $A01B,$CA0B,$B2AB,$9B90,$3424,$1AA0,$BB43,$0B93
                dc.w    $3221,$B34A,$BCB9,$22B0,$24BA,$22AA,$201B,$BA12
                dc.w    $AA23,$120A,$A200,$00BA,$0020,$1234,$2A13,$BA13
                dc.w    $ACB9,$3AB2,$20BA,$3220,$1CA9,$2032,$9032,$9AA2
                dc.w    $1AA2,$2B9B,$12A0,$2AA9,$A9AB,$3232,$B13B,$A3AB
                dc.w    $332B,$030B,$032A,$BB93,$3290,$220C,$932B,$2209
                dc.w    $B319,$2231,$B391,$CB33,$12A0,$1ABB,$A31A,$A9BA
                dc.w    $0011,$1299,$1232,$09B3,$AB23,$0B3A,$BA09,$10A3
                dc.w    $AA33,$2CB2,$42BA,$A9BB,$1221,$1B02,$9312,$2A23
                dc.w    $0BA1
                dc.b    $13
DAC_Sample02_End: 
DAC_Sample05:
                dc.w    $4655,$6303,$32DE,$FE57,$DEDE,$DC05,$3DEB,$B576
                dc.w    $6643,$5EFB,$BDCC,$EB34,$AB73,$C03D,$DC93,$21BC
                dc.w    $CCA3,$6425,$6566,$5009,$DDCC,$253D,$DDC6,$AEFE
                dc.w    $DD41,$3063,$DD56,$CEB5,$DC45,$4554,$3454,$AB42
                dc.w    $39BC,$CCCC,$DC2A,$DCDC,$5550,$5665,$4559,$2CEA
                dc.w    $339B,$3DD0,$3CDB,$9BEE,$DA9C,$EC43,$4445,$5CD9
                dc.w    $64DC,$1C44,$6646,$6CD4,$53DE,$EEBB,$D355,$5533
                dc.w    $23CC,$9559,$243D,$CABB,$BECC,$A54B,$444D,$DACC
                dc.w    $DCDD,$CE46,$5BBA,$4444,$4313,$6555,$3ABA,$351B
                dc.w    $B342,$BCDB,$3CDE,$DC46,$545B,$ED40,$DCDA,$2C44
                dc.w    $3352,$DA55,$CDDD,$B149,$EDA5,$6C25,$DC66,$453D
                dc.w    $2434,$5225,$4ABA,$DB4A,$D23C,$42BB,$CCEE,$143C
                dc.w    $BC34,$934A,$CDDC,$2C45,$49C4,$5544,$5CDC,$BB03
                dc.w    $BDA5,$5A45,$352A,$CB65,$CA1B,$9CDD,$54C3,$52DC
                dc.w    $D450,$DDCC,$DC1C,$CDBB,$B454,$ADA5,$BC55,$B443
                dc.w    $49C4,$4454,$D963,$C4DD,$C9AB,$455C,$B45C,$DC54
                dc.w    $EDCC,$C2AA,$54A2,$AB64,$CDDD,$E3A0,$BA30,$3A4A
                dc.w    $24CA,$5543,$2B2A,$9C44,$0549,$43B4,$495C,$E45D
                dc.w    $04DC,$0BD5,$0E45,$3BCB,$33DC,$DC54,$CC25,$9D56
                dc.w    $3ECA,$DACA,$4403,$5315,$42A2,$324A,$14CD,$244C
                dc.w    $A103,$5045,$CDD9,$CD24,$1DD1,$3D45,$3CC3,$B2B1
                dc.w    $BBB3,$444C,$D933,$53D3,$5CA4,$4132,$BC9B,$3225
                dc.w    $5CC9,$155D,$CBDC,$40C5,$4D95,$BCA3,$33CC,$CD42
                dc.w    $EC53,$D245,$33CC,$143C,$9AB3,$40B5,$4A25,$422A
                dc.w    $D0A1,$53C9,$9CC3,$3B33,$CB3C,$A5CC,$2BC2,$33AB
                dc.w    $C1B2,$4349,$CCD1,$54CC,$3BDB,$5432,$1443,$CCC5
                dc.w    $4CC3,$BB45,$4ACC,$A450,$AAB4,$3DC0,$3CCB,$44BA
                dc.w    $A14B,$CBAB,$BB41,$DA43,$C350,$B9C3,$1C34,$3320
                dc.w    $3CB4,$4294,$BC24,$441D,$CABC,$45B9,$CC44,$32CB
                dc.w    $4BB0,$BCAB,$AADB,$4345,$9CB9,$2C44,$2CAB,$B144
                dc.w    $C042,$AC25,$4BC3,$3CC3,$3332,$04AC,$3A29,$CB34
                dc.w    $B2AC,$A33A,$C2BC,$A449,$CB1C,$C232,$AC02,$2423
                dc.w    $BC45,$A92B,$B013,$39A4,$3BC3,$454B,$A4CD,$A322
                dc.w    $BCDA,$20B4,$54DD,$B143,$9BBB,$BA04,$2C34,$3929
                dc.w    $C04B,$C439,$BB45,$CD34,$124C,$C243,$23A0,$3ACA
                dc.w    $5ACA,$4332,$ABBC,$2BCA,$42CD,$143B,$CA04,$2B14
                dc.w    $4CDB,$A019,$A231,$2444,$313C,$B339,$33BB,$3430
                dc.w    $DC55,$CDC4,$4CB4,$BDC4,$53BB,$CC23,$902A,$CB33
                dc.w    $B11C,$1342,$C13A,$9031,$242A,$CCA1,$3334,$3CA4
                dc.w    $421A,$C930,$333C,$DCA3,$3333,$A144,$BACD,$DB44
                dc.w    $1AB3,$ACC4,$49AB,$B1A0,$4343,$BDC3,$5420,$1390
                dc.w    $2201,$232A,$A121,$B932,$BC93,$BA1B,$CA43,$AC0B
                dc.w    $B24B,$BA20,$A32B,$CAA3,$3921,$133B,$3429,$BB34
                dc.w    $21BC,$11BB,$43A2,$340C,$B92A,$3390,$31AB,$B03A
                dc.w    $CC44,$2CA9,$BB93,$ACCB,$1442,$00CC,$2222,$99B4
                dc.w    $5913,$BB33,$A321,$2032,$4ACA,$10A4,$0CB9,$A22A
                dc.w    $B2BA,$2ACC,$0332,$BB9A,$9923,$3AC3,$40CB,$3224
                dc.w    $2014,$2CAB,$00A2,$49BB,$3349,$B912,$3932,$BBA1
                dc.w    $A99A,$2310,$1BA3,$10BC,$BABA,$A33A,$2BBA,$9ABA
                dc.w    $4491,$1220,$A029,$0003,$2343,$0B0B,$243C,$A343
                dc.w    $ACA9,$A0AB,$12BC,$2AA2,$ACB2,$A233,$A11B,$B222
                dc.w    $3ABA,$BC34,$3230,$229A,$339A,$339B,$BA33,$0A1C
                dc.w    $1441,$CC13,$3923,$ABAA,$B34B,$CC93,$439B,$ABBB
                dc.w    $11CB,$933B,$141C,$B933,$AB04,$539B,$A991,$3309
                dc.w    $3430,$AA9B,$B122,$1AC0,$32BC,$922A,$CB24,$BCB1
                dc.w    $A220,$0A11,$0092,$222B,$A311,$2000,$3221,$32AB
                dc.w    $A933,$00AB,$B243,$ABCB,$3419,$22BC,$A431,$1ABA
                dc.w    $09A9,$BBB9,$331B,$A0AA,$ABBB,$9443,$3B23,$0BC2
                dc.w    $4439,$1212,$39A0,$2AB9,$3323,$2BBB,$A0AA,$B930
                dc.w    $BC02,$103B,$CCA2,$2221,$9000,$1329,$9B14,$3190
                dc.w    $1000,$221B,$B934,$2902,$BB93,$9921,$2AB0,$2109
                dc.w    $0001,$1A12,$BB9A,$222A,$CBAB,$931A,$A232,$AAA0
                dc.w    $AB03,$3202,$3322,$2100,$BA24,$3012,$2B91,$A030
                dc.w    $AB92,$AA2A,$BB9B,$BAB2,$30BB,$9332,$BB99,$2192
                dc.w    $2229,$A332,$19B1,$3232,$9909,$0AB3,$3910,$A099
                dc.w    $43BB,$21CA,$9102,$2909,$120A,$21BA,$CA02,$9232
                dc.w    $BCAA,$10A9,$2192,$1122,$0921,$A934,$2333,$1A9A
                dc.w    $13AA,$A033,$0BAA,$BA1A,$AABA,$3102,$9BBC,$A010
                dc.w    $0010,$9022,$339B,$91A1,$3331,$0A91,$3191,$2AA0
                dc.w    $3201,$2ABA,$A901,$2221,$BB91,$32BB,$1219,$1290
                dc.w    $9A99,$AABB,$1299,$AB02,$211A,$BA02,$2333,$320A
                dc.w    $2319,$0091,$333A,$A923,$9AAA,$A9AA,$32AB,$BBAA
                dc.w    $AA11,$090A,$A010,$A01A,$A012,$3199,$1233,$2229
                dc.w    $A992,$3319,$AAB9,$2299,$1112,$0009,$BAA2,$2190
                dc.w    $9913,$190A,$BBA1,$0B92,$2A00,$AB91,$1010,$AB12
                dc.w    $321A,$9091,$3232,$3322,$0190,$21AB,$A233,$19BB
                dc.w    $AB00,$A10A,$A00B,$AAA0,$AB99,$A933,$219A,$0221
                dc.w    $22A0,$0913,$4091,$9A22,$90A9,$2222,$AA00,$A010
                dc.w    $0009,$9220,$ABBA,$0123,$1AA1,$229A,$BAAA,$B000
                dc.w    $9012,$29AB,$A122,$2220,$0122,$2122,$19A0,$4332
                dc.w    $0A9A,$A920,$AB90,$A9AA,$99AB,$BA93,$102A,$B99A
                dc.w    $1222,$ABB3,$3322,$0AA1,$2321,$1901,$2211,$0AA0
                dc.w    $2999,$229A,$A220,$9AB9,$0022,$0119,$90AA,$AA03
                dc.w    $0B90,$0112,$ABBB,$A220,$9912,$0122,$10A0,$3302
                dc.w    $2223,$29A9,$1222,$009A,$0119,$AABA,$B9AA,$9990
                dc.w    $9100,$9AB0,$1992,$20AA,$1202,$3190,$9133,$2111
                dc.w    $AA12,$399A,$9010,$0121,$99AB,$9122,$0AAA,$2209
                dc.w    $9909,$1091,$22AA,$C0AA,$0221,$AAA9,$220B,$A911
                dc.w    $2222,$2311,$9022,$2101,$1221,$0109,$AA01,$11A0
                dc.w    $29BB,$AA9B,$BAAA,$A023,$009A,$9012,$100A,$0321
                dc.w    $0000,$0232,$221A,$9120,$0009,$AAA0,$331A,$AA02
                dc.w    $109A,$BA92,$320A,$9910,$99AA,$9911,$3AAA,$09AB
                dc.w    $0000,$1112,$09A0,$2201,$1222,$2222,$1110,$0122
                dc.w    $0909,$A019,$9AAB,$9991,$1A9B,$BAB9,$9012,$9901
                dc.w    $1222,$0090,$9232,$100A,$9022,$2200,$1122,$19AA
                dc.w    $BA23,$19AA,$9012,$29AA,$0010,$9A00,$0001,$9000
                dc.w    $AAA0,$9900,$1109,$A909,$AA02,$2091,$2333,$1991
                dc.w    $1222,$2112,$19A9,$009A,$0109,$99AA,$AA0A,$AAA9
                dc.w    $AA12,$00AA,$A002,$221A,$0222,$2220,$90A2,$2229
                dc.w    $9110,$0190,$0190,$1110,$9AAA,$010A,$9000,$0021
                dc.w    $299A,$0900,$0000,$AAA0,$9A99,$9991,$1212,$1000
                dc.w    $9A00,$1223,$2222,$2019,$0021,$1111,$0A9A,$AAAA
                dc.w    $9999,$0000,$AAAB,$AA01,$0900,$1212,$09A0,$1222
                dc.w    $3011,$0111,$1109,$9011,$1009,$AA91,$1099,$0022
                dc.w    $199A,$9110,$9A9A,$9210,$0001,$9A90,$99AA,$0019
                dc.w    $0000,$9990,$2101,$2231,$0009,$1232,$9012,$2219
                dc.w    $0999,$9000,$A9AA,$AAAA,$99A9,$9190,$010A,$AA09
                dc.w    $1211,$2222,$2101,$1001,$0001,$2009,$0000,$0010
                dc.w    $0090,$10AA,$0109,$9091,$1110,$09A9,$0AA0,$1009
                dc.w    $9011,$0099,$AAA0,$1199,$0121,$0900,$2212,$2222
                dc.w    $2110,$AA92,$2201,$1000,$09AA,$ABA9,$AA99,$999A
                dc.w    $9910,$0100,$1120,$9A90,$2220,$0112,$2222,$1990
                dc.w    $0900,$1000,$9009,$0010,$9A00,$0901,$9009,$0A21
                dc.w    $2009,$9900,$00B9,$9009,$9011,$0900,$0090,$A901
                dc.w    $0122,$2211,$1212,$2112,$110A,$9A99,$9001,$0000
                dc.w    $99AA,$BAAA,$A900,$0001,$9A91,$1201,$1012,$2210
                dc.w    $0000,$0222,$2109,$0090,$9099,$A901,$2000,$9990
                dc.w    $0001,$0990,$0100,$0900,$0000,$00A9,$9999,$0099
                dc.w    $9000,$1111,$1901,$0110,$0211,$2221,$1100,$2190
                dc.w    $0109,$999A,$AA99,$9000,$0BA9,$99A9,$0909,$9122
                dc.w    $2101,$0100,$0132,$2109,$0010,$1900,$0100,$000A
                dc.w    $9A00,$1009,$0010,$0109,$A000,$0100,$9010,$090A
                dc.w    $A910,$0900,$0909,$0009,$9901,$1122,$2100,$0111
                dc.w    $1121,$0111,$1000,$0A99,$0209,$AAAA,$9BA9,$A990
                dc.w    $0110,$0009,$9001,$1121,$1012,$1110,$1901,$1112
                dc.w    $0009,$A900,$0009,$9000,$0099,$0001,$1009,$9001
                dc.w    $090A,$9021,$0000,$0000,$AAA0,$9901,$0009,$0910
                dc.w    $1111,$0121,$2212,$1100,$1009,$0011,$9999,$0099
                dc.w    $AA90,$0AA9,$A99A,$9901,$0012,$1011,$1010,$0003
                dc.w    $0201,$0101,$1000,$0900,$1000,$9999,$9900,$0000
                dc.w    $0100,$0090,$0100,$0900,$0001,$900A,$A090,$1009
                dc.w    $9990,$0901,$2100,$1010,$2111,$1011,$1211,$0000
                dc.w    $9009,$0090,$0999,$AA0B,$9999,$0090,$9090,$0000
                dc.w    $0121,$2221,$0110,$0000,$1111,$0900,$0010,$0999
                dc.w    $0009,$0990,$AA00,$3010,$0011,$190A,$90AA,$0121
                dc.w    $0000,$0A99,$0090,$9900,$1000,$0090,$1113,$0111
                dc.w    $1111,$1010,$9011,$0099,$9009,$99A9,$90AA,$9999
                dc.w    $9090,$0000,$0010,$1111,$0112,$2120,$0101,$0009
                dc.w    $9909,$0001,$1000,$9000,$0099,$900A,$9000,$0022
                dc.w    $0010,$0000,$990A,$9091,$0009,$0990,$0009,$0101
                dc.w    $0011,$0002,$1011,$2211,$1090,$0100,$9090,$1099
                dc.w    $AAAA,$A099,$9990,$0100,$0909,$0111,$2110,$0002
                dc.w    $1100,$1211,$0100,$0099,$9990,$9009,$0100,$1090
                dc.w    $9000,$0000,$0000,$0001,$0900,$1000,$9000,$AA99
                dc.w    $0000,$0000,$0001,$0011,$2101,$1111,$1000,$0011
                dc.w    $1009,$9009,$0999,$9990,$0AAA,$9999,$0001,$0100
                dc.w    $0110,$1010,$3011,$0100,$1000,$0101,$0009,$9099
                dc.w    $0990,$0000,$0000,$0001,$0090,$0000,$1000,$9000
                dc.w    $0000,$0000,$0A90,$9990,$0000,$0001,$1121,$0010
                dc.w    $1111,$1000,$0010,$0000,$0000,$099A,$9A0B,$9909
                dc.w    $0090,$9900,$0011,$1111,$1211,$0001,$0010,$0100
                dc.w    $1019,$0909,$0090,$0909,$0000,$0000,$0000,$0010
                dc.w    $0000,$0900,$0001,$900A,$9000,$0009,$0000,$0090
                dc.w    $9900,$1113,$0111,$1110,$0001,$0000,$0090,$0990
                dc.w    $9009,$990A,$A999,$9909,$0101,$0100,$1011,$0301
                dc.w    $1101,$0009,$0000,$1001,$0900,$9099,$9000,$0000
                dc.w    $00A9,$2100,$0000,$1000,$0090,$1009,$0000,$0A99
                dc.w    $0900,$0000,$0100,$0000,$0010,$2112,$1110,$1010
                dc.w    $0900,$0909,$0090,$99A0,$AA00,$0090,$9990,$9009
                dc.w    $1011,$1113,$0010,$1010,$1100,$0000,$9990,$0000
                dc.w    $0009,$0900,$0000,$A902,$1010,$0000,$0000,$0000
                dc.w    $0009,$0000,$A999,$0000,$0000,$0001,$0010,$2101
                dc.w    $0100,$1011,$1010,$0010,$0909,$9099,$9990,$A999
                dc.w    $A990,$0011,$1000,$0000,$0101,$1211,$2101,$0000
                dc.w    $0000,$9009,$0999,$0000,$0000,$0000,$0000,$0001
                dc.w    $0100,$0909,$0000,$0000,$0000,$0A99,$0990,$0001
                dc.w    $0000,$0101,$0211,$1101,$1100,$1900,$0000,$0090
                dc.w    $0099,$9990,$AA99,$9909,$0001,$0010,$1111,$2100
                dc.w    $0001,$0011,$0110,$0000,$9090,$9900,$9000,$000A
                dc.w    $9000,$2101,$0001,$0000,$9000,$0009,$0000,$00A9
                dc.w    $0009,$0909,$0000,$0001,$0112,$1101,$0110,$1100
                dc.w    $0010,$0009,$9909,$0009,$9090,$AA99,$9090,$9010
                dc.w    $1011,$0010,$1210,$1110,$0000,$0000,$0100,$0090
                dc.w    $9090,$900A,$9021,$0000,$0000,$0110,$1000,$0009
                dc.w    $9090,$0000,$A900,$9009,$0000,$0000,$0000,$0112
                dc.w    $1011,$1111,$0000,$0010,$9009,$0909,$0909,$900A
                dc.w    $A099,$0909,$0090,$1011,$1112,$1011,$0010,$0100
                dc.w    $0000,$0900,$9900,$0000,$9000,$0000,$0A20,$0001
                dc.w    $0000,$0101,$0000,$0909,$090A,$A090,$0000,$0000
                dc.w    $0000,$1001,$0021,$0101,$0111,$0110,$0190,$0900
                dc.w    $9909,$9990,$A990,$9090,$9000,$0000,$0100,$1110
                dc.w    $2111,$0100,$1000,$0000,$0090,$9090,$900A,$9021
                dc.w    $0000,$0000,$0010,$0000,$0100,$0000,$0000,$0909
                dc.w    $0AA9,$9090,$0010,$0100,$1001,$0211,$0111,$0010
                dc.w    $0000,$0100,$0190,$9909,$9990,$AA09,$0909,$0000
                dc.w    $0010,$0101,$1021,$0010,$0110,$0100,$0000,$9009
                dc.w    $0900,$0900,$0A90,$0002,$1001,$0100,$0000,$0900
                dc.w    $0100,$0090
                dc.b    $90 
DAC_Sample05_End:
DAC_Sample06: 
                dc.w    $0123,$5456,$E4F5,$E5CF,$D56C,$D76D,$BC46,$CAF7
                dc.w    $6F74,$C525,$6DDE,$2DCE,$5FD5,$5EC6,$9EED,$C6B4
                dc.w    $5CC2,$6366,$4445,$4C55,$64AD,$DD0D,$EC2D,$DE14
                dc.w    $CCDD,$C223,$C444,$556B,$E355,$B6A4,$5542,$C15C
                dc.w    $3DBA,$BCDD,$9BDD,$99DD,$D4BB,$3935,$9CB5,$25A5
                dc.w    $5355,$CC96,$553B,$B4BD,$14EE,$B4DD,$BDD4,$DDD1
                dc.w    $5A5D,$4553,$4A4D,$5455,$3023,$53BB,$63BE,$14CE
                dc.w    $55EE,$1DC0,$3C34,$4BD3,$C50B,$1A1D,$3445,$A5B5
                dc.w    $5553,$524A,$D1D9,$DCCC,$D1CC,$AC3C,$2CD3,$4C54
                dc.w    $12C3,$4C3A,$4B25,$4434,$441C,$CB4C,$2C94,$B343
                dc.w    $4CDB,$BC0B,$CCCD,$C044,$D4A5,$3B43,$4B53,$39CA
                dc.w    $0313,$B4B3,$935D,$4900,$B213,$BBCB,$CC24,$D9AC
                dc.w    $B449,$CDA2,$3494,$A3C5,$C45A,$B023,$359C,$412C
                dc.w    $42AA,$CB3B,$CA4B,$9BAB,$CAC2,$ACA2,$2104,$939B
                dc.w    $A044,$9242,$12B4,$3BC4,$03CC,$5B1A,$2A2B,$2133
                dc.w    $ACCD,$22A2,$9B14,$B03A,$B3B3,$C9BB,$43A2,$3439
                dc.w    $BB94,$B439,$B942,$3A34,$31CB,$C1AC,$C3AC,$9A49
                dc.w    $02AC,$B229,$29BB,$B329,$A410,$3334,$44A2,$29B9
                dc.w    $3C0A,$A13A,$92B0,$BB4B,$2BAB,$A2CA,$A3CA,$CA93
                dc.w    $B042,$2411,$3342,$A110,$1292,$A223,$A143,$B9AC
                dc.w    $B39B,$CB39,$C0BB,$2BBA,$C320,$A340,$1313,$2300
                dc.w    $1313,$A1A4,$B341,$291A,$ABCB,$9AA0,$1BAA,$B9AA
                dc.w    $BBB9,$0242,$2A33,$3429,$AACA,$B492,$3213,$3393
                dc.w    $B21B,$33AA,$BBB9,$9A9C,$1A9A,$22A2,$202B,$12AB
                dc.w    $0B12,$0A09,$3924,$AB09,$4312,$1323,$3A12,$BB0B
                dc.w    $120C,$2AAA,$9BAA,$AA02,$022B,$AA0B,$B9B1,$1333
                dc.w    $3220,$3393,$2312,$3402,$209B,$9ACB,$9CC0,$1BBB
                dc.w    $19C4,$B002,$0A02,$A3A9,$3132,$3404,$3121,$030A
                dc.w    $1B29,$BAB0,$BB9A,$BAA9,$0000,$30B2,$B09A,$A123
                dc.w    $2A22,$2323,$2392,$9911,$999B,$B911,$2AAA,$99B3
                dc.w    $12C0,$1911,$3912,$114B,$01AA,$11BA,$2AAA,$A223
                dc.w    $0B1A,$2A22,$1A92,$B9B1,$013A,$9303,$321A,$0201
                dc.w    $AA91,$B090,$B332,$A0A1,$A09B,$3BBB,$1A92,$292B
                dc.w    $3122,$3AA0,$3112,$321A,$B9A0,$2A00,$9211,$21A9
                dc.w    $A92A,$20BA,$AA11,$3BB0,$1A1A,$21AA,$0913,$0021
                dc.w    $121B,$0300,$0220,$2222,$2122,$AAB9,$0ABA,$BAA1
                dc.w    $AA21,$A110,$0BBA,$1BA3,$1A22,$313A,$3302,$2331
                dc.w    $2930,$A399,$B0BA,$AAAA,$90B1,$A2A0,$ABA9,$B29A
                dc.w    $A22A,$2A22,$2222,$3232,$2323,$A010,$2009,$0AB9
                dc.w    $9BA9,$A0AA,$0919,$A99A,$A990,$0B00,$1222,$2032
                dc.w    $3002,$2221,$110A,$92A0,$0091,$2A90,$1AA0,$A990
                dc.w    $0A99,$0BA0,$A091,$9911,$2001,$010A,$2121,$1222
                dc.w    $2231,$20A0,$000A,$9A2A,$A919,$2AA1,$ABA9,$9AB1
                dc.w    $A091,$1093,$0092,$1102,$2211,$3012,$0092,$2900
                dc.w    $9A01,$0AA1,$99A9,$AB09,$AA2A,$9002,$2122,$2112
                dc.w    $1999,$1910,$0909,$A92A,$992A,$1A01,$A121,$9313
                dc.w    $9100,$9001,$0A02,$0099,$2010,$A9A0,$9ABA,$09AB
                dc.w    $0900,$2910,$2312,$2222,$2921,$1199,$9229,$1100
                dc.w    $0A10,$BA0A,$0A0B,$BA00,$AA02,$0919,$1022,$29A0
                dc.w    $2102,$3121,$2029,$1109,$92A0,$920A,$0990,$09A0
                dc.w    $9A9A,$A990,$A019,$0110,$0110,$1100,$1193,$0000
                dc.w    $1902,$2022,$11A2,$A092,$90AA,$090A,$90B0,$9991
                dc.w    $9990,$90A9,$A212,$1200,$1230,$0309,$0110,$0100
                dc.w    $2920,$1A90,$900A,$0AA0,$AAA0,$90AA,$A001,$1210
                dc.w    $1211,$9001,$0022,$1000,$2029,$1299,$119A,$99A9
                dc.w    $0A9A,$0901,$1A00,$0111,$0090,$0000,$1210,$00A2
                dc.w    $1010,$0119,$000A,$9AA0,$1900,$0910,$0913,$0000
                dc.w    $2110,$9009,$0001,$90A0,$0000,$00A9,$A20A,$0000
                dc.w    $1900,$1019,$1910,$2100,$1210,$0000,$0999,$1990
                dc.w    $000A,$2000,$0000,$0A99,$0009,$1091,$1090,$0121
                dc.w    $00A2,$0000,$0000,$0000,$0190,$0109,$1901,$1020
                dc.w    $9001,$AA00,$0000,$A900,$9099,$9901,$0900,$1110
                dc.w    $2221,$0101,$1090,$1000,$1909,$0099,$0099,$190A
                dc.w    $2B9A,$9900,$0090,$1111,$0110,$3101,$1100,$0191
                dc.w    $1900,$9190,$9099,$0900,$0A99,$9090,$0910,$0109
                dc.w    $1191,$1021,$0000,$1910,$9000,$0101,$0010,$9000
                dc.w    $9190,$9109,$00A2,$0000,$0000,$00A9,$00A0,$0101
                dc.w    $9001,$0000,$0910,$0221,$1009,$1000,$9919,$1920
                dc.w    $9009,$0900,$0AA0,$0091,$0990,$0001,$1001,$2101
                dc.w    $1000,$0000,$0990,$0000,$0000,$0000,$1090,$0000
                dc.w    $0000,$000A,$2000,$0000,$0A90,$9100,$2100,$00A2
                dc.w    $0A99,$0012,$A210,$0010,$1000,$0010,$9000,$0009
                dc.w    $0900,$0000,$A999,$9000,$0000,$1101,$0210,$0019
                dc.w    $1000,$1910,$0000,$0091,$0190,$0090,$090A,$9900
                dc.w    $0000,$0090,$0000,$0010,$1021,$0019,$1000,$9100
                dc.w    $0091,$0001,$9100,$0010,$9199,$9000,$AA90,$9010
                dc.w    $0010,$102A,$210A,$9000,$0002,$1001,$0100,$1000
                dc.w    $0009,$0919,$0090,$0000,$00A9,$0090,$9010,$0091
                dc.w    $0000,$0091,$0102,$1010,$1010,$0019,$0090,$9009
                dc.w    $0000,$0000,$A909,$0000,$0010,$0000,$9100
                dc.b    $00
DAC_Sample06_End:
DAC_Sample03:  
                dc.w    $5E35,$E67F,$F47D,$E5C5,$5053,$EE6B,$61EC,$4135
                dc.w    $DC54,$E53D,$62DC,$A34A,$20B3,$0A3B,$AA30,$B3AA
                dc.w    $32A6,$8A88,$7778,$D7FF,$776C,$1FB4,$6E55,$EE67
                dc.w    $BF3C,$6D2C,$553D,$1CB5,$33CC,$92D5,$5D29,$C4AA
                dc.w    $3AC2,$44BA,$AC23,$3AB0,$321C,$B33F,$77DF,$E67E
                dc.w    $F666,$7FDE,$E57F,$5D7D,$EE55,$64EE,$416D,$D5B9
                dc.w    $25DB,$4BC0,$054B,$AC2C,$414C,$0C78,$77E6,$FF77
                dc.w    $FEC5,$653D,$E452,$06E5,$6E9E,$5DD6,$62E6,$D06F
                dc.w    $65E2,$D4A5,$D3A6,$EB5C,$5E7E,$E5E3,$6136,$F6BD
                dc.w    $51EC,$56CA,$1E5C,$6CE6,$6DF5,$C564,$5E3C,$DBC6
                dc.w    $4E6E,$7F45,$C5E5,$DC66,$EDC4,$66F0,$D606,$25ED
                dc.w    $ED65,$4AE6,$D5E2,$646F,$EC64,$651E,$ED46,$7FC4
                dc.w    $C6E1,$C162,$F66C,$2E5D,$6E6D,$A5DB,$25B5,$DDB4
                dc.w    $4B4C,$AC46,$E5DB,$6DAD,$D555,$ADBD,$5C55,$EC5D
                dc.w    $410C,$64EC,$D562,$CDD4,$963C,$EA53,$59E2,$5D45
                dc.w    $D45E,$D62D,$3432,$C41D,$435D,$9CB5,$4DBB,$53B3
                dc.w    $BD54,$BAD5,$CC5D,$53CC,$235D,$BAA4,$44CD,$33C3
                dc.w    $5D3B,$30BC,$244A,$AAAC,$243C,$3AD5,$243D,$C53C
                dc.w    $0000,$3B01,$BB41,$33D4,$0B9C,$52CB,$310D,$53B1
                dc.w    $C24C,$3B4A,$92C1,$0A40,$4C3A,$C033,$ABB3,$22B0
                dc.w    $23AB,$33A9,$CB44,$BC39,$4C2A,$2B2A,$A339,$B132
                dc.w    $AB94,$1BC2,$339A,$2991,$B2A3,$3AAB,$23A0,$9B12
                dc.w    $3A0C,$413B,$CA33,$3BAA,$331A,$C131,$B93A,$221A
                dc.w    $002A,$B2A3,$29BB,$2923,$1AAA,$3021,$AB02,$1109
                dc.w    $19A2,$19AA,$302A,$A22A,$1BA3,$1002,$A0A9,$211B
                dc.w    $2290,$B312,$AB22,$2A01,$AB92,$23AB,$3009,$A3AA
                dc.w    $A32A,$2BA3,$1029,$A0AA,$3A22,$2BAA,$B332,$2BB1
                dc.w    $2A02,$21BA,$0329,$9AA1,$2101,$0900,$11A1,$B931
                dc.w    $9109,$B032,$2B0B,$1210,$A22A,$A201,$20A9,$0B3B
                dc.w    $3019,$0019,$0191,$BA23,$29AA,$AA42,$AB21,$90A2
                dc.w    $0012,$A9AA,$0301,$09B1,$39A2,$0A22,$B200,$029B
                dc.w    $0002,$1000,$0A21,$199B,$3001,$900A,$2019,$0010
                dc.w    $BA31,$000A,$2A20,$2A00,$19B9,$231A,$0001,$90B9
                dc.w    $2309,$029B,$2111,$BA30,$0190,$B130,$09AA,$0300
                dc.w    $129B,$2A2A,$2019,$A2A2,$1090,$2AA2,$A211,$A0AA
                dc.w    $1211,$09A2,$0A20,$0119,$9A92,$AA32,$2ABA,$1320
                dc.w    $9B00,$0221,$AB10,$212A,$A2A9,$2100,$A200,$0000
                dc.w    $0AA3,$1900,$0000,$0000,$0190,$0000,$0001,$09A2
                dc.w    $0001,$9019,$AA31,$900A
DAC_Sample03_End:      
DAC_Sample04: 
                dc.w    $AABC,$DC94,$9C40,$BA10,$3124,$2B30,$0222,$9023
                dc.w    $23A9,$0214,$1213,$033A,$A922,$4002,$0214,$B21A
                dc.w    $2200,$0210,$B9CA,$CDED,$677C,$DCCC,$CBBA,$ACA0
                dc.w    $A9BA,$A9A2,$C1AA,$90AB,$2B1A,$9AA2,$00BA,$9A92
                dc.w    $A0A0,$B93B,$0A00,$A9AB,$30B9,$A00A,$9ABA,$BCDE
                dc.w    $D466,$51BA,$1003,$9242,$02A2,$0310,$0000,$0000
                dc.w    $0BA9,$2A0B,$90B3,$BA90,$2AB9,$B9A4,$9BAB,$2123
                dc.w    $B003,$BBC0,$31BA,$1312,$A022,$A224,$A020,$0392
                dc.w    $312A,$2221,$0333,$0A02,$A3A2,$2233,$0212,$A022
                dc.w    $3300,$22A0,$23AB,$056C,$D0CC,$BB44,$3BDD,$567D
                dc.w    $EB43,$DBA2,$AA92,$1A92,$A0B3,$0BA2,$A90B,$9B30
                dc.w    $BA2B,$10A0,$0A90,$B00A,$9A2A,$00AB,$9A9B,$BDD3
                dc.w    $5523,$4CB0,$2AA2,$2A0A,$9021,$A9B0,$3C3A,$2B1A
                dc.w    $A020,$BA1A,$433B,$BBBA,$ABBA,$ABB0,$AABB,$BCCD
                dc.w    $DBA4,$652A,$ACAC,$3555,$BDAC,$BB2B,$000A,$203B
                dc.w    $A020,$A203,$1B93,$BBCD,$9455,$5445,$4CBC,$BA02
                dc.w    $0A20,$2A21,$0A92,$BBDD,$C556,$553C,$CBCA,$A002
                dc.w    $AA2A,$BBAC,$DD45,$6544,$3CCC,$1A9A,$0ABC,$CDE0
                dc.w    $5564,$2444,$CCCB,$CAAC,$BCDD,$D556,$5343,$DCBC
                dc.w    $AB20,$0BAB,$CBDE,$C565,$633C,$CCA0,$BAB0,$CBCD
                dc.w    $DD35,$6662,$DD1C,$DA3B,$31BA,$BABB,$DDD3,$6673
                dc.w    $CECD,$2B21,$2000,$0A2B,$200A,$ACDD,$C946,$763D
                dc.w    $DDDB,$0CB2,$0A2B,$ACCC,$BB55,$675B,$EDED,$B31B
                dc.w    $B943,$3AAC,$BA2B,$DE47,$75CD,$ECCD,$CCC3,$400C
                dc.w    $AADD,$A765,$5DDD,$CCB0,$2CBD,$B30B,$CCDD,$9774
                dc.w    $5DDE,$DE1C,$CC0C,$CD67,$73CE,$DECC,$DCBB,$CCC4
                dc.w    $775B,$DECD,$CBCD,$CCBC,$DA67,$71CD,$EDCB,$CCDC
                dc.w    $DDC9,$7764,$DDED,$CBCD,$CED9,$6776,$DEDE,$ACCC
                dc.w    $DECC,$4674,$BBBA,$B212,$2A02,$1030,$0039,$02BB
                dc.w    $DA46,$54BD,$CCBA,$CAAC,$ACBB,$A9AA,$BA0B,$2B9B
                dc.w    $9AA2,$ACCD,$E966,$54CB,$A02A,$CD36,$76DE,$DD23
                dc.w    $20CB,$0202,$10A9,$2A0A,$CCEE,$C666,$77EE,$EED4
                dc.w    $321A,$0ADD,$ED27,$774D,$EFDA,$49CD,$DDD3,$7765
                dc.w    $DDEE,$CB02,$1BBD,$CDDD,$578D,$EEFC,$A9A2,$22BC
                dc.w    $BDDC,$578C,$EFFC,$BDB4,$0DB6,$775D,$EEED,$BABB
                dc.w    $BBCD,$A677,$5EEE,$DDBC,$1B90,$ABD2,$6765,$DDED
                dc.w    $DBAB,$BCA9,$2BC5,$772D,$DEDD,$D0BB,$39CC,$B277
                dc.w    $4DDD,$DDCC,$CA22,$21A0,$00CB,$5766,$BEEF,$4BC1
                dc.w    $4430,$2BDC,$C676,$90ED,$EDCB,$334B,$BCCB,$6763
                dc.w    $CEED,$DBAA,$90AB,$BCA6,$76CD,$DDBA,$CDDD,$CC0B
                dc.w    $B677,$CDEE,$EDAA,$20CB,$AD57,$7DC9,$D9CD,$DD9B
                dc.w    $DCBB,$ACC6,$77BD,$CEDD,$DCAB,$CBCC,$D067,$7ADE
                dc.w    $EDDC,$A0A9,$CBCC,$5774,$CEDE,$CDCB,$C433,$AACD
                dc.w    $C477,$5BEE,$EDCC,$DCBC,$3776,$0DEE,$EDBC,$42A2
                dc.w    $1D96,$77DD,$EEED,$100A,$CCBC,$5771,$BCED,$ED00
                dc.w    $B93B,$BABB,$D676,$5DCE,$EDA9,$A0BA,$BCBC,$1676
                dc.w    $5CEE,$DDBC,$CABB,$ACA6,$77AD,$EEEC,$AA9A,$CA0C
                dc.w    $D677,$6FEE,$EA45,$3BCC,$B20D,$2776,$DEDE,$DD9A
                dc.w    $2BDD,$DC68,$5BDC,$EDDC,$C2AD,$DDD2,$686C,$EDEE
                dc.w    $DA31,$CCDD,$D677,$6EEE,$ECCC,$CCAC,$4752,$AAC3
                dc.w    $121A,$2A32,$3AB0,$2332,$CC22,$213C,$9020,$0A0A
                dc.w    $92AB,$AACA,$9DD1,$764D,$EBDC,$BBCC,$BB2A,$ABAA
                dc.w    $2B2B,$1A2C,$1A0C,$DDB6,$632B,$931A,$4CDC,$677D
                dc.w    $EEDC,$BAA4,$A122,$3A9A,$20A9,$CBEE,$D675,$769E
                dc.w    $DEDC,$1231,$000B,$BDEE,$D677,$61DE,$DEBB,$332B
                dc.w    $ACCD,$DED7,$77DE,$EEB3,$10AC,$CCCD,$DC77,$6AED
                dc.w    $EBDC,$3BBD,$CDDA,$6765,$5DDE,$CDBB,$CBDA,$DEC4
                dc.w    $776D,$DCE3,$BBDC,$CBCD,$CCB5,$774E,$DDC4,$4ADD
                dc.w    $CCAC,$CDB3,$5766,$2DDE,$B9CC,$D1CD,$DB45,$766D
                dc.w    $DBDC,$CCCB,$BCDD,$CA57,$665E,$CDDB,$BABB,$A9AC
                dc.w    $CDCD,$4776,$CEDD,$DCAB,$B92B,$CCBD,$C577,$54DE
                dc.w    $ED3D,$C934,$32AD,$EEB6,$77EF,$60E3,$62C4,$3555
                dc.w    $DEEE,$4750,$CEE6,$5544,$CDDD,$ACEC,$A565,$333C
                dc.w    $C5AC,$054E,$EC00,$02AA,$20AB,$A9B1,$C1AB,$DED5
                dc.w    $87EF,$EDB2,$334A,$1A02,$21AA,$CDDD,$3776,$5EEE
                dc.w    $CB04,$12A3,$902B,$ACCC,$CDB6,$766D,$DDDC,$CACB
                dc.w    $902B,$BBDB,$BDC6,$7554,$DCCD,$ACDC,$B10A,$BCCD
                dc.w    $BDD6,$765C,$CCEB,$BCCC,$9CA2,$BBCC,$1BDC,$5766
                dc.w    $CECD,$CCBC,$CCB3,$30AC,$CBCB,$C476,$6DE2,$D3AC
                dc.w    $BADC,$1333,$2B0C,$DBBB,$2675,$4CDC,$D0AC,$BCCB
                dc.w    $1492,$A0BB,$CABC,$1765,$ACCC,$CCA9,$2CAB,$CB42
                dc.w    $000B,$ACCD,$DB67,$7DCD,$DCC2,$1BCC,$D123,$1302
                dc.w    $AC1C,$BCDE,$677D,$CCC3,$B2AB,$CCCC,$DAA2,$4302
                dc.w    $AA9B,$0ACD,$ED68,$5BDD,$EECC,$D244,$4433,$0BBB
                dc.w    $A2AA,$CCDD,$D576,$54CD,$CD10,$CBCB,$CB02,$A212
                dc.w    $000A,$BBBA,$ACBD,$DC77,$053D,$EEDC,$0455,$5BCB
                dc.w    $DCC9,$0BBC,$ABCB,$CDD6,$7639,$DDBC,$3B12,$3A32
                dc.w    $2A2A,$0BAD,$A200,$CBCB,$0A0B,$BCCD,$B577,$BADD
                dc.w    $CBC9,$0AAC,$CCC2,$3122,$1200,$A492,$ABAB,$ABA9
                dc.w    $CD47,$655C,$EC0B,$3000,$BA9A,$2BBC,$C0A2,$0002
                dc.w    $AABB,$CA3D,$DC56,$64B9,$AA12,$33A2,$A222,$10A2
                dc.w    $49C3,$BA21,$0A9A,$2AAB,$3200,$0CA2,$3BCC,$B22A
                dc.w    $2BA1,$B2BC,$0AAB,$B41C,$B002,$1A2A,$ACCA,$C565
                dc.w    $DEA5,$5CCB,$93BB,$9CDC,$5776,$EEEC,$BA41,$A20A
                dc.w    $22A0,$A202,$1030,$0039,$0202,$A4B2,$303A,$231B
                dc.w    $3021,$22A4,$B2A3,$921A,$9B49,$A9B0,$030B,$0A20
                dc.w    $A9A0,$0A9C,$1A20,$AA9B,$3B0A,$AB0B,$AAC2,$AA22
                dc.w    $B90C,$BCDC,$5644,$BBA0,$A20A,$0200,$A20C,$4AAA
                dc.w    $92A0,$412A,$0BAC,$BBB0,$B9BA,$CACA,$0233,$3A0C
                dc.w    $C9CC,$C2B3,$02A2,$21A2,$214B,$0223,$3022,$131B
                dc.w    $3321,$AAC0,$5542,$1223,$0203,$4249,$210A,$9B04
                dc.w    $90AB,$2302,$233A,$9CB2,$A223,$B1AA,$B9A9,$4B94
                dc.w    $3AA1,$2B2B,$BCCA,$0A22,$210A,$900A,$00A2,$C149
                dc.w    $BADC,$1652,$B032,$39A2,$0000,$A0A2,$A92A,$00BA
                dc.w    $BB2B,$A9A0,$0BB1,$0A9A,$BA10,$AA2A,$A92A,$000B
                dc.w    $9AA9,$02BC,$D056,$2A2A,$2229,$04BC,$9B32,$214B
                dc.w    $BAAC,$2444,$49DE,$E544,$553C,$DCB2,$2BC9,$02AA
                dc.w    $9022,$900A,$3032,$10A0,$B3B3,$BCC1,$5641,$44BB
                dc.w    $B2BB,$24B9,$49C1,$43AC,$2229,$C33A,$CA3A,$AA34
                dc.w    $9CBB,$A921,$0221,$02B3,$BAB0,$ACAA,$CCC3,$6654
                dc.w    $3CD0,$410C,$CC45,$530C,$CDCC,$BC00,$4443,$CBBA
                dc.w    $AAB2,$21A2,$C2BD,$DD35,$6649,$0445,$CC9C,$1A9A
                dc.w    $CC13,$42AB,$BBBA,$2BBC,$4C12,$1B9C,$DDEE,$5666
                dc.w    $5A34,$54D9,$D124,$0CCC,$A90C,$A240,$BA2A,$A1A0
                dc.w    $C1BC,$EE34,$4566,$644C,$DCC4,$00CB,$BA92,$1B9A
                dc.w    $BB0A,$000C,$1ACC,$CEED,$5677,$30EE,$CA55,$4CCC
                dc.w    $DA44,$3BB2,$A2BD,$DBCE,$E556,$6665,$DE0D,$300C
                dc.w    $3BAB,$A00C,$CCEE,$B146,$774C,$EECC,$A0B9,$31BA
                dc.w    $BA0C,$DDEC,$4567,$7CEE,$CCAC,$1BCB,$CDDD,$B565
                dc.w    $4574,$CEE0,$B923,$9CBD,$DDD9,$5659,$C567,$BDEE
                dc.w    $90CC,$EDDA,$566D,$D576,$DCDE,$D332,$2ADC,$CDDD
                dc.w    $B256,$773E,$FCBA,$BACD,$DD35,$6006,$74DD,$EDA2
                dc.w    $0BAB,$CDDC,$B664,$CD66,$64DE,$ECBB,$ABDE,$C565
                dc.w    $666A,$DDEC,$CABB,$ADEE,$4665,$76BE,$EDDD,$EED5
                dc.w    $777E,$EC4C,$EC5C,$CCAB,$DEC5,$5367,$6CFD,$CCBC
                dc.w    $DEC5,$64B6,$75DF,$CCDD,$DDB4,$6779,$EF3C,$BDDD
                dc.w    $DA57,$751E,$EDCC,$BDCE,$3546,$666B,$EFA9,$BBCE
                dc.w    $D567,$7CEF,$CDDD,$4644,$6652,$EFDE,$2655,$4563
                dc.w    $4CEE,$EDC5,$6514,$5524,$0EEE,$CC56,$6CC5,$5134
                dc.w    $DFEC,$3666,$5B12,$DFEB,$674C,$DBC4,$0C40,$C131
                dc.w    $2A0A,$A94A,$9200,$A200,$CB44,$10A3,$54EF,$A666
                dc.w    $CDD9,$2232,$20C4,$00C1,$0322,$1CE4,$6552,$AEFC
                dc.w    $67AC,$DDD6,$5530,$EFD6,$64B5,$5340,$FF26,$7B04
                dc.w    $4350,$EFE5,$74B5,$545C,$FEED,$6664,$654C,$EFCE
                dc.w    $D367,$751F,$FED3,$6655,$655D,$FEDE,$2556,$765E
                dc.w    $FEDE,$0577,$6DFE,$DEC3,$5656,$70EF,$DDEC,$5776
                dc.w    $EFCD,$ED36,$676D,$FDDE,$D167,$7CEE,$EDDD,$4676
                dc.w    $4EFB,$EC35,$6666,$EFDE,$C465,$665B,$FDDE,$B576
                dc.w    $61EF,$ADE4,$6666,$5EF1,$DDDA,$677E,$EEDD,$EC66
                dc.w    $76EF,$DEC3,$676C,$FCED,$A567,$6CEF,$BDD9,$6666
                dc.w    $9EEE,$CDC5,$676C,$FDDD,$DC67,$6CF0,$DEC1,$6674
                dc.w    $DFDE,$B456,$75DF,$CDDD,$A576,$6FED,$EC26,$764E
                dc.w    $EEDE,$4667,$5EEE,$DDD3,$6763,$EEDD,$CEC5,$773E
                dc.w    $EEEE,$5775,$FEEE,$4665,$39CA,$0A20,$2310,$B0AA
                dc.w    $1002,$1AAA,$9AAD,$C673,$EF4C,$CDDB,$6659,$CDC3
                dc.w    $67EF,$BDDD,$C677,$CFEC,$DDD4,$6765,$EFDE,$C366
                dc.w    $76EF,$DDEB,$677E,$FDEC,$4676,$4EEE,$EC46,$76CF
                dc.w    $DED3,$6760,$EEEE,$C677,$EFDD,$E567,$6DFD,$ED67
                dc.w    $64EE,$EE36,$76EE,$EDD5,$764E,$FCD4,$676E,$EEED
                dc.w    $676C,$FDEC,$676C,$FDEC,$577D,$FDDE,$3676,$EEEE
                dc.w    $1676,$EFCD,$A676,$EFDD,$3675,$EEED,$B676,$EFCE
                dc.w    $3667,$DFDE,$1676,$EFDD,$5666,$CEEE,$C576,$0FDE
                dc.w    $2766,$FDEC,$9576,$BFDE,$A567,$4EEE,$E576,$5FDD
                dc.w    $E676,$EFD5,$75EF,$4553,$43AC,$A22A,$0A22,$13C3
                dc.w    $0A20,$A200,$3BBD,$A662,$EEDC,$A555,$2BA9,$65EE
                dc.w    $DD35,$5565,$EFBD,$576C,$FDD1,$763F,$EC46,$75EF
                dc.w    $DC47,$63FD,$E367,$6EFD,$D576,$EFB2,$567D,$FEB3
                dc.w    $674F,$ED46,$74EF,$C267,$3EFC,$2576,$DFEC,$2666
                dc.w    $CF15,$65BE,$D0CC,$D475,$EF45,$665E,$F2D4,$675E
                dc.w    $FDB5,$67DF,$EB56,$7BFE,$C366,$6DFC,$D466,$6EFB
                dc.w    $5665,$EF14,$5662,$EEE5,$566B,$FD95,$664E,$F256
                dc.w    $64EF,$4566,$5EF1,$5656,$CFE5,$5662,$EF46,$556C
                dc.w    $FE56,$456C,$FE56,$555E,$ED65,$0AAB,$2BBC,$4554
                dc.w    $CEEC,$655A,$D2B3,$BA31,$2B2B,$3B45,$9EE6,$51C9
                dc.w    $55DE,$D554,$60EE,$0555,$5CEE,$5545,$5BEE,$9635
                dc.w    $5AEE,$3552,$54CE,$D355,$6CEE,$2555,$5DED,$5555
                dc.w    $DED5,$555D,$ED55,$444C,$ED55,$54AE,$D055,$A342
                dc.w    $DE35,$5B44,$3EE3,$5555,$1EE1,$5445,$49EE,$5554
                dc.w    $5CEE,$4565,$0EEC,$6345,$4CEE,$5555,$5DFC,$56A5
                dc.w    $51EE,$A556,$5DFD,$5645,$5DFC,$6505,$54EF,$1656
                dc.w    $6DFE,$5656,$5DFE,$5645,$69EF,$C656,$55EF,$D660
                dc.w    $569E,$FD66,$456C,$FED6,$666E,$FE56,$75EF,$E665
                dc.w    $3CCC,$0004,$A10C,$141A,$0BA1,$2292,$C420,$BB33
                dc.w    $ACD5,$66DF,$ED57,$5CCD,$C366,$3FEE,$3665,$0265
                dc.w    $EF45,$2322,$0000,$0000,$0000,$0000,$0000,$0A0B
DAC_Sample04_End:     

                cnop    $0000,$F0000 
Music_98_Offset equ     (Music_98&$FFFF)|$8000
Music_99_Offset equ     (Music_99&$FFFF)|$8000
Music_9A_Offset equ     (Music_9A&$FFFF)|$8000
Music_9B_Offset equ     (Music_9B&$FFFF)|$8000   
Music_9C_Offset equ     (Music_9C&$FFFF)|$8000
Music_9D_Offset equ     (Music_9D&$FFFF)|$8000
; Music_9E_Offset equ     (Music_9E&$FFFF)|$8000
; Music_9F_Offset equ     (Music_9F&$FFFF)|$8000  
                             
                dc.w    ((Music_98_Offset>>$08)|(Music_98_Offset<<$08))&$FFFF 
                dc.w    ((Music_99_Offset>>$08)|(Music_99_Offset<<$08))&$FFFF 
                dc.w    ((Music_9A_Offset>>$08)|(Music_9A_Offset<<$08))&$FFFF
                dc.w    ((Music_9B_Offset>>$08)|(Music_9B_Offset<<$08))&$FFFF 
                dc.w    ((Music_9C_Offset>>$08)|(Music_9C_Offset<<$08))&$FFFF 
                dc.w    ((Music_9D_Offset>>$08)|(Music_9D_Offset<<$08))&$FFFF
Music_98: ; loc_F000C:             
                incbin  'data\sounds\1up_98.snd'                
Music_99: ; loc_F00F9:                
                incbin  'data\sounds\tscrn_99.snd'
Music_9A: ; loc_F02A5:              
                incbin  'data\sounds\rscrn_9A.snd'
Music_9B: ; loc_F03FA:                           
                incbin  'data\sounds\tgovr_9B.snd'
Music_9C: ; loc_F0549:
                incbin  'data\sounds\cont_9C.snd'
Music_9D: ; loc_F06A6:
                incbin  'data\sounds\emrld_9D.snd'

                cnop    $000000, $0F1E8C
Sega_Snd: ; loc_F1E8C:                
                incbin  'data\sounds\sega.snd'                 
                
                cnop    $000000, $0F8000    
Music_81_Offset equ     (Music_81&$FFFF)|$8000  
Music_82_Offset equ     (Music_82&$FFFF)|$8000  
Music_83_Offset equ     (Music_83&$FFFF)|$8000  
Music_84_Offset equ     (Music_84&$FFFF)|$8000  
Music_85_Offset equ     (Music_85&$FFFF)|$8000  
Music_86_Offset equ     (Music_86&$FFFF)|$8000  
Music_87_Offset equ     (Music_87&$FFFF)|$8000  
Music_88_Offset equ     (Music_88&$FFFF)|$8000  
Music_89_Offset equ     (Music_89&$FFFF)|$8000  
Music_8A_Offset equ     (Music_8A&$FFFF)|$8000  
Music_8B_Offset equ     (Music_8B&$FFFF)|$8000  
Music_8C_Offset equ     (Music_8C&$FFFF)|$8000  
Music_8D_Offset equ     (Music_8D&$FFFF)|$8000  
Music_8E_Offset equ     (Music_8E&$FFFF)|$8000  
Music_8F_Offset equ     (Music_8F&$FFFF)|$8000  
Music_90_Offset equ     (Music_90&$FFFF)|$8000  
Music_91_Offset equ     (Music_91&$FFFF)|$8000  
Music_92_Offset equ     (Music_92&$FFFF)|$8000  
Music_93_Offset equ     (Music_93&$FFFF)|$8000  
Music_94_Offset equ     (Music_94&$FFFF)|$8000  
Music_95_Offset equ     (Music_95&$FFFF)|$8000  
Music_96_Offset equ     (Music_96&$FFFF)|$8000  
Music_97_Offset equ     (Music_97&$FFFF)|$8000  

Music_81_To_97: ; loc_F8000:                
                dc.w    (((Music_81_Offset>>$08)|(Music_81_Offset<<$08))&$FFFF)
                dc.w    (((Music_82_Offset>>$08)|(Music_82_Offset<<$08))&$FFFF)
                dc.w    (((Music_83_Offset>>$08)|(Music_83_Offset<<$08))&$FFFF)
                dc.w    (((Music_84_Offset>>$08)|(Music_84_Offset<<$08))&$FFFF)
                dc.w    (((Music_85_Offset>>$08)|(Music_85_Offset<<$08))&$FFFF)
                dc.w    (((Music_86_Offset>>$08)|(Music_86_Offset<<$08))&$FFFF)
                dc.w    (((Music_87_Offset>>$08)|(Music_87_Offset<<$08))&$FFFF)
                dc.w    (((Music_88_Offset>>$08)|(Music_88_Offset<<$08))&$FFFF)
                dc.w    (((Music_89_Offset>>$08)|(Music_89_Offset<<$08))&$FFFF)
                dc.w    (((Music_8A_Offset>>$08)|(Music_8A_Offset<<$08))&$FFFF)
                dc.w    (((Music_8B_Offset>>$08)|(Music_8B_Offset<<$08))&$FFFF)
                dc.w    (((Music_8C_Offset>>$08)|(Music_8C_Offset<<$08))&$FFFF)
                dc.w    (((Music_8D_Offset>>$08)|(Music_8D_Offset<<$08))&$FFFF)
                dc.w    (((Music_8E_Offset>>$08)|(Music_8E_Offset<<$08))&$FFFF)
                dc.w    (((Music_8F_Offset>>$08)|(Music_8F_Offset<<$08))&$FFFF)
                dc.w    (((Music_90_Offset>>$08)|(Music_90_Offset<<$08))&$FFFF)
                dc.w    (((Music_92_Offset>>$08)|(Music_92_Offset<<$08))&$FFFF)
                dc.w    (((Music_93_Offset>>$08)|(Music_93_Offset<<$08))&$FFFF)
                dc.w    (((Music_94_Offset>>$08)|(Music_94_Offset<<$08))&$FFFF)
                dc.w    (((Music_95_Offset>>$08)|(Music_95_Offset<<$08))&$FFFF)
                dc.w    (((Music_96_Offset>>$08)|(Music_96_Offset<<$08))&$FFFF)               
                
Music_81: ; loc_F802A:
                incbin  'data\sounds\ooz_81.snd'
Music_82: ; loc_F85AC: 
                incbin  'data\sounds\ghz_82.snd'
Music_83: ; loc_F8D1D:
                incbin  'data\sounds\mz_wz_83.snd'
Music_84: ; loc_F927A: 
                incbin  'data\sounds\cnz_84.snd'               
Music_85: ; loc_F9DEE: 
                incbin  'data\sounds\dhz_85.snd' 
Music_86: ; loc_FA49E: 
                incbin  'data\sounds\hpz_86.snd' 
Music_87: ; loc_FA8E7: 
                incbin  'data\sounds\nghz_87.snd' 
Music_88: ; loc_FB10A: 
                incbin  'data\sounds\music_88.snd' 
Music_89: ; loc_FB778:  
                incbin  'data\sounds\ss_89.snd' 
Music_8A:                 
Music_8B: ; loc_FBD7F:   
                incbin  'data\sounds\menu_8A.snd' 
Music_8C: ; loc_FBED8:  
                incbin  'data\sounds\music_8C.snd'
Music_8D: ; loc_FC249:    
                incbin  'data\sounds\cpz_8D.snd' 
Music_8E: ; loc_FC8AE:   
                incbin  'data\sounds\boss_8E.snd'
Music_8F: ; loc_FCB08:  
                incbin  'data\sounds\music_8F.snd'
Music_90:
Music_91: ; loc_FCF0B:                 
                incbin  'data\sounds\music_90.snd'
Music_92: ; loc_FD322:  
                incbin  'data\sounds\music_92.snd'
Music_93: ; loc_FD73B:  
                incbin  'data\sounds\music_93.snd'
Music_94: ; loc_FDC54:   
                incbin  'data\sounds\music_94.snd'
Music_95: ; loc_FE0B7:  
                incbin  'data\sounds\invcb_95.snd'
Music_96:
Music_97: ; loc_FE3BE:              
                incbin  'data\sounds\htz_96.snd'              
                                
                cnop    $000000, $0FF000 
Sfx_A0_Offset   equ     (Sfx_A0&$FFFF)|$8000   
Sfx_A1_Offset   equ     (Sfx_A1&$FFFF)|$8000    
Sfx_A2_Offset   equ     (Sfx_A2&$FFFF)|$8000    
Sfx_A3_Offset   equ     (Sfx_A3&$FFFF)|$8000  
Sfx_A4_Offset   equ     (Sfx_A4&$FFFF)|$8000 
Sfx_A5_Offset   equ     (Sfx_A5&$FFFF)|$8000  
Sfx_A6_Offset   equ     (Sfx_A6&$FFFF)|$8000   
Sfx_A7_Offset   equ     (Sfx_A7&$FFFF)|$8000    
Sfx_A8_Offset   equ     (Sfx_A8&$FFFF)|$8000    
Sfx_A9_Offset   equ     (Sfx_A9&$FFFF)|$8000  
Sfx_AA_Offset   equ     (Sfx_AA&$FFFF)|$8000 
Sfx_AB_Offset   equ     (Sfx_AB&$FFFF)|$8000  
Sfx_AC_Offset   equ     (Sfx_AC&$FFFF)|$8000   
Sfx_AD_Offset   equ     (Sfx_AD&$FFFF)|$8000    
Sfx_AE_Offset   equ     (Sfx_AE&$FFFF)|$8000    
Sfx_AF_Offset   equ     (Sfx_AF&$FFFF)|$8000  
Sfx_B0_Offset   equ     (Sfx_B0&$FFFF)|$8000 
Sfx_B1_Offset   equ     (Sfx_B1&$FFFF)|$8000  
Sfx_B2_Offset   equ     (Sfx_B2&$FFFF)|$8000   
Sfx_B3_Offset   equ     (Sfx_B3&$FFFF)|$8000    
Sfx_B4_Offset   equ     (Sfx_B4&$FFFF)|$8000    
Sfx_B5_Offset   equ     (Sfx_B5&$FFFF)|$8000  
Sfx_B6_Offset   equ     (Sfx_B6&$FFFF)|$8000 
Sfx_B7_Offset   equ     (Sfx_B7&$FFFF)|$8000  
Sfx_B8_Offset   equ     (Sfx_B8&$FFFF)|$8000    
Sfx_B9_Offset   equ     (Sfx_B9&$FFFF)|$8000  
Sfx_BA_Offset   equ     (Sfx_BA&$FFFF)|$8000 
Sfx_BB_Offset   equ     (Sfx_BB&$FFFF)|$8000  
Sfx_BC_Offset   equ     (Sfx_BC&$FFFF)|$8000   
Sfx_BD_Offset   equ     (Sfx_BD&$FFFF)|$8000    
Sfx_BE_Offset   equ     (Sfx_BE&$FFFF)|$8000    
Sfx_BF_Offset   equ     (Sfx_BF&$FFFF)|$8000 
Sfx_C0_Offset   equ     (Sfx_C0&$FFFF)|$8000 
Sfx_C1_Offset   equ     (Sfx_C1&$FFFF)|$8000  
Sfx_C2_Offset   equ     (Sfx_C2&$FFFF)|$8000   
Sfx_C3_Offset   equ     (Sfx_C3&$FFFF)|$8000    
Sfx_C4_Offset   equ     (Sfx_C4&$FFFF)|$8000    
Sfx_C5_Offset   equ     (Sfx_C5&$FFFF)|$8000  
Sfx_C6_Offset   equ     (Sfx_C6&$FFFF)|$8000 
Sfx_C7_Offset   equ     (Sfx_C7&$FFFF)|$8000  
Sfx_C8_Offset   equ     (Sfx_C8&$FFFF)|$8000    
Sfx_C9_Offset   equ     (Sfx_C9&$FFFF)|$8000  
Sfx_CA_Offset   equ     (Sfx_CA&$FFFF)|$8000 
Sfx_CB_Offset   equ     (Sfx_CB&$FFFF)|$8000  
Sfx_CC_Offset   equ     (Sfx_CC&$FFFF)|$8000   
Sfx_CD_Offset   equ     (Sfx_CD&$FFFF)|$8000    
Sfx_CE_Offset   equ     (Sfx_CE&$FFFF)|$8000    
Sfx_CF_Offset   equ     (Sfx_CF&$FFFF)|$8000 
Sfx_D0_Offset   equ     (Sfx_D0&$FFFF)|$8000 
Sfx_D1_Offset   equ     (Sfx_D1&$FFFF)|$8000  
Sfx_D2_Offset   equ     (Sfx_D2&$FFFF)|$8000   
Sfx_D3_Offset   equ     (Sfx_D3&$FFFF)|$8000    
Sfx_D4_Offset   equ     (Sfx_D4&$FFFF)|$8000    
Sfx_D5_Offset   equ     (Sfx_D5&$FFFF)|$8000  
Sfx_D6_Offset   equ     (Sfx_D6&$FFFF)|$8000 
Sfx_D7_Offset   equ     (Sfx_D7&$FFFF)|$8000  
Sfx_D8_Offset   equ     (Sfx_D8&$FFFF)|$8000    
Sfx_D9_Offset   equ     (Sfx_D9&$FFFF)|$8000  
Sfx_DA_Offset   equ     (Sfx_DA&$FFFF)|$8000 
Sfx_DB_Offset   equ     (Sfx_DB&$FFFF)|$8000  
Sfx_DC_Offset   equ     (Sfx_DC&$FFFF)|$8000   
Sfx_DD_Offset   equ     (Sfx_DD&$FFFF)|$8000    
Sfx_DE_Offset   equ     (Sfx_DE&$FFFF)|$8000    
Sfx_DF_Offset   equ     (Sfx_DF&$FFFF)|$8000 
Sfx_E0_Offset   equ     (Sfx_E0&$FFFF)|$8000 
        
Sfx_A0_To_F9: ; loc_FF000:      
                dc.w    (((Sfx_A0_Offset>>$08)|(Sfx_A0_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_A1_Offset>>$08)|(Sfx_A1_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_A2_Offset>>$08)|(Sfx_A2_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_A3_Offset>>$08)|(Sfx_A3_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_A4_Offset>>$08)|(Sfx_A4_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_A5_Offset>>$08)|(Sfx_A5_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_A6_Offset>>$08)|(Sfx_A6_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_A7_Offset>>$08)|(Sfx_A7_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_A8_Offset>>$08)|(Sfx_A8_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_A9_Offset>>$08)|(Sfx_A9_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_AA_Offset>>$08)|(Sfx_AA_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_AB_Offset>>$08)|(Sfx_AB_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_AC_Offset>>$08)|(Sfx_AC_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_AD_Offset>>$08)|(Sfx_AD_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_AE_Offset>>$08)|(Sfx_AE_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_AF_Offset>>$08)|(Sfx_AF_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_B0_Offset>>$08)|(Sfx_B0_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_B1_Offset>>$08)|(Sfx_B1_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_B2_Offset>>$08)|(Sfx_B2_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_B3_Offset>>$08)|(Sfx_B3_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_B4_Offset>>$08)|(Sfx_B4_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_B5_Offset>>$08)|(Sfx_B5_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_B6_Offset>>$08)|(Sfx_B6_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_B7_Offset>>$08)|(Sfx_B7_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_B8_Offset>>$08)|(Sfx_B8_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_B9_Offset>>$08)|(Sfx_B9_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_BA_Offset>>$08)|(Sfx_BA_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_BB_Offset>>$08)|(Sfx_BB_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_BC_Offset>>$08)|(Sfx_BC_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_BD_Offset>>$08)|(Sfx_BD_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_BE_Offset>>$08)|(Sfx_BE_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_BF_Offset>>$08)|(Sfx_BF_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_C0_Offset>>$08)|(Sfx_C0_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_C1_Offset>>$08)|(Sfx_C1_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_C2_Offset>>$08)|(Sfx_C2_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_C3_Offset>>$08)|(Sfx_C3_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_C4_Offset>>$08)|(Sfx_C4_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_C5_Offset>>$08)|(Sfx_C5_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_C6_Offset>>$08)|(Sfx_C6_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_C7_Offset>>$08)|(Sfx_C7_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_C8_Offset>>$08)|(Sfx_C8_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_C9_Offset>>$08)|(Sfx_C9_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_CA_Offset>>$08)|(Sfx_CA_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_CB_Offset>>$08)|(Sfx_CB_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_CC_Offset>>$08)|(Sfx_CC_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_CD_Offset>>$08)|(Sfx_CD_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_CE_Offset>>$08)|(Sfx_CE_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_CF_Offset>>$08)|(Sfx_CF_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_D0_Offset>>$08)|(Sfx_D0_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_D1_Offset>>$08)|(Sfx_D1_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_D2_Offset>>$08)|(Sfx_D2_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_D3_Offset>>$08)|(Sfx_D3_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_D4_Offset>>$08)|(Sfx_D4_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_D5_Offset>>$08)|(Sfx_D5_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_D6_Offset>>$08)|(Sfx_D6_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_D7_Offset>>$08)|(Sfx_D7_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_D8_Offset>>$08)|(Sfx_D8_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_D9_Offset>>$08)|(Sfx_D9_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_DA_Offset>>$08)|(Sfx_DA_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_DB_Offset>>$08)|(Sfx_DB_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_DC_Offset>>$08)|(Sfx_DC_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_DD_Offset>>$08)|(Sfx_DD_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_DE_Offset>>$08)|(Sfx_DE_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_DF_Offset>>$08)|(Sfx_DF_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_E0_Offset>>$08)|(Sfx_E0_Offset<<$08))&$FFFF) 
Sfx_A0: ; loc_FF082:          
                dc.b    $00, $00, $01, $01, $80, $80, $8C, $F0, $F4, $00, $F5, $00, $9E, $05, $F0, $02
                dc.b    $01, $F8, $65, $A3, $15, $F2  
Sfx_A1: ; loc_FF098:                
                dc.b    $A2, $F0, $01, $01, $80, $05, $BB, $F0, $00, $01, $3C, $05, $0A, $01, $01, $56
                dc.b    $5C, $5C, $5C, $0E, $11, $11, $11, $09, $06, $0A, $0A, $4F, $3F, $3F, $3F, $17
                dc.b    $20, $80, $80, $EF, $00, $BD, $06, $BA, $16, $F2
Sfx_A2: ; loc_FF0C2: 
                dc.b    $00, $00, $01, $01, $80, $C0, $CC, $F0, $00, $00, $F0, $01, $01, $F0, $08, $F3
                dc.b    $E7, $C0, $04, $CA, $04, $C0, $01, $EC, $01, $F7, $00, $06, $D7, $F0, $F2
Sfx_A3: ; loc_FF0E1:                       
                dc.b    $FA, $F0, $01, $01, $80, $05, $EB, $F0, $F4, $00, $EF, $00, $B0, $07, $E7, $AD
                dc.b    $01, $E6, $01, $F7, $00, $2F, $F1, $F0, $F2, $30, $30, $30, $30, $30, $9E, $DC
                dc.b    $D8, $DC, $0E, $04, $0A, $05, $08, $08, $08, $08, $BF, $BF, $BF, $BF, $14, $14
                dc.b    $3C, $80
Sfx_A4: ; loc_FF113:                 
                dc.b    $00, $00, $01, $02, $80, $A0, $23, $F1, $F4, $00, $80, $C0, $35, $F1, $F4, $00
                dc.b    $F5, $00, $AF, $01, $80, $AF, $80, $03, $AF, $01, $80, $01, $F7, $00, $0B, $2B
                dc.b    $F1, $F2, $F5, $00, $80, $01, $AD, $80, $AD, $80, $03, $AD, $01, $80, $01, $F7
                dc.b    $00, $0B, $3E, $F1, $F2                 
Sfx_A5: ; loc_FF148:                    
                dc.b    $5B, $F1, $01, $01, $80, $05, $52, $F1, $00, $00, $EF, $00, $80, $01, $8B, $0A
                dc.b    $80, $02, $F2, $FA, $21, $10, $30, $32, $2F, $2F, $1F, $2F, $05, $09, $08, $02
                dc.b    $06, $06, $0F, $02, $1F, $4F, $2F, $2F, $0F, $0E, $1A, $80 
Sfx_A6: ; loc_FF174:  
                dc.b    $8A, $F1, $01, $01, $80, $05, $7E, $F1, $F2, $00, $EF, $00, $F0, $01, $01, $10
                dc.b    $FF, $CF, $05, $D7, $25, $F2, $3B, $3C, $30, $39, $31, $DF, $1F, $1F, $DF, $04
                dc.b    $04, $05, $01, $04, $04, $04, $02, $FF, $1F, $0F, $AF, $29, $0F, $20, $80
Sfx_A7: ; loc_FF1A3:    
                dc.b    $B9, $F1, $01, $01, $80, $04, $AD, $F1, $00, $06, $EF, $00, $8F, $07, $80, $02
                dc.b    $8F, $06, $80, $10, $ED, $F2, $FA, $21, $10, $30, $32, $1F, $1F, $1F, $1F, $05
                dc.b    $09, $18, $02, $06, $06, $0F, $02, $1F, $4F, $2F, $2F, $0F, $0E, $0E, $80
Sfx_A8: ; loc_FF1D2:    
                dc.b    $8A, $F1, $01, $01, $80, $05, $DC, $F1, $F2, $04, $EF, $00, $A6, $02, $E7, $A4
                dc.b    $01, $E7, $E9, $02, $F7, $00, $26, $DF, $F1, $F2
Sfx_A9: ; loc_FF1EC:  
                dc.b    $00, $00, $01, $01, $80, $A0, $F6, $F1, $00, $00, $F0, $01, $01, $E6, $35, $8E
                dc.b    $06, $F2
Sfx_AA: ; loc_FF1FE:   
                dc.b    $26, $F2, $01, $02, $80, $C0, $0E, $F2, $00, $00, $80, $05, $21, $F2, $00, $03
                dc.b    $F5, $00, $F3, $E7, $C2, $05, $C6, $05, $E7, $07, $EC, $01, $E7, $F7, $00, $0F
                dc.b    $17, $F2, $F2, $EF, $00, $A6, $14, $F2, $00, $00, $02, $03, $00, $D9, $1F, $DF
                dc.b    $1F, $12, $14, $11, $0F, $0A, $0A, $00, $0D, $FF, $FF, $FF, $FF, $22, $27, $07
                dc.b    $80               
Sfx_AB: ; loc_FF23F:   
                dc.b    $00, $00, $01, $01, $80, $C0, $49, $F2, $00, $00, $F5, $00, $F3, $E7, $C6, $03
                dc.b    $80, $03, $C6, $01, $E7, $01, $EC, $01, $E7, $F7, $00, $15, $54, $F2, $F2
Sfx_AC: ; loc_FF25E:    
                dc.b    $79, $F2, $01, $01, $80, $05, $68, $F2, $00, $00, $EF, $00, $F0, $01, $01, $0C
                dc.b    $01, $81, $0A, $E6, $10, $F7, $00, $04, $6F, $F2, $F2, $F9, $21, $10, $30, $32
                dc.b    $1F, $1F, $1F, $1F, $05, $09, $18, $02, $0B, $10, $1F, $05, $1F, $4F, $2F, $2F
                dc.b    $0E, $04, $07, $80
Sfx_AD: ; loc_FF292:  
                dc.b    $AF, $F2, $01, $01, $80, $05, $9C, $F2, $0E, $00, $EF, $00, $F0, $01, $01, $21
                dc.b    $6E, $A6, $07, $80, $06, $F0, $01, $01, $44, $1E, $AD, $08, $F2, $35, $05, $08
                dc.b    $09, $07, $1E, $0D, $0D, $0E, $0C, $03, $15, $06, $16, $09, $0E, $10, $2F, $1F
                dc.b    $2F, $1F, $15, $12, $12, $80
Sfx_AE: ; loc_FF2C8:
                dc.b    $F9, $F2, $01, $02, $80, $05, $D8, $F2, $00, $00, $80, $C0, $E6, $F2, $00, $00
                dc.b    $EF, $00, $80, $01, $F0, $01, $01, $40, $48, $83, $06, $85, $02, $F2, $F5, $00
                dc.b    $80, $0B, $F3, $E7, $C6, $01, $E7, $02, $EC, $01, $E7, $F7, $00, $10, $EF, $F2
                dc.b    $F2, $FA, $02, $00, $03, $05, $12, $0F, $11, $13, $05, $09, $18, $02, $06, $06
                dc.b    $0F, $02, $1F, $4F, $2F, $2F, $2F, $0E, $1A, $80                  
Sfx_AF: ; loc_FF312:   
                dc.b    $26, $F3, $01, $01, $80, $05, $1C, $F3, $0C, $00, $EF, $00, $80, $01, $A3, $05
                dc.b    $E7, $A4, $26, $F2, $30, $30, $30, $30, $30, $9E, $AC, $A8, $DC, $0E, $04, $0A
                dc.b    $05, $08, $08, $08, $08, $BF, $BF, $BF, $BF, $04, $14, $2C, $80             
Sfx_B0: ; loc_FF33F:     
                dc.b    $57, $F3, $01, $01, $80, $05, $49, $F3, $FB, $05, $EF, $00, $DF, $7F, $DF, $02
                dc.b    $E6, $01, $F7, $00, $1B, $4D, $F3, $F2, $83, $1F, $1F, $15, $1F, $1F, $1F, $1F
                dc.b    $1F, $00, $00, $00, $00, $02, $02, $02, $02, $2F, $FF, $2F, $3F, $0B, $01, $16
                dc.b    $82     
Sfx_B1: ; loc_FF370:                  
                dc.b    $83, $F3, $01, $01, $80, $05, $7A, $F3, $FB, $02, $EF, $00, $B3, $05, $80, $01
                dc.b    $B3, $09, $F2, $83, $12, $13, $10, $1E, $1F, $1F, $1F, $1F, $00, $00, $00, $00
                dc.b    $02, $02, $02, $02, $2F, $FF, $2F, $3F, $05, $34, $10, $87
Sfx_B2: ; loc_FF39C:    
                dc.b    $D2, $F3, $01, $02, $80, $04, $BE, $F3, $0C, $04, $80, $05, $AC, $F3, $0E, $02
                dc.b    $EF, $00, $F0, $01, $01, $83, $0C, $8A, $05, $05, $E6, $03, $F7, $00, $0A, $B3
                dc.b    $F3, $F2, $80, $06, $EF, $00, $F0, $01, $01, $6F, $0E, $8D, $04, $05, $E6, $03
                dc.b    $F7, $00, $0A, $C7, $F3, $F2, $35, $14, $04, $1A, $09, $0E, $11, $10, $0E, $0C
                dc.b    $03, $15, $06, $16, $09, $0E, $10, $2F, $4F, $2F, $4F, $2F, $12, $12, $80
Sfx_B3: ; loc_FF3EB:
                dc.b    $F9, $F2, $01, $02, $80, $05, $FB, $F3, $00, $00, $80, $C0, $09, $F4, $00, $00
                dc.b    $EF, $00, $80, $01, $F0, $01, $01, $40, $48, $83, $06, $85, $02, $F2, $F5, $00
                dc.b    $80, $0B, $F3, $E7, $A7, $25, $E7, $02, $EC, $01, $E7, $F7, $00, $10, $12, $F4
                dc.b    $F2  
Sfx_B4: ; loc_FF41C:
                dc.b    $45, $F4, $01, $03, $80, $05, $32, $F4, $00, $00, $80, $04, $37, $F4, $00, $00
                dc.b    $80, $02, $40, $F4, $00, $02, $EF, $00, $F6, $3D, $F4, $EF, $00, $E1, $07, $80
                dc.b    $01, $BA, $20, $F2, $EF, $01, $9A, $03, $F2, $3C, $05, $0A, $01, $01, $56, $5C
                dc.b    $5C, $5C, $0E, $11, $11, $11, $09, $06, $0A, $0A, $4F, $3F, $3F, $3F, $1F, $2B
                dc.b    $80, $80, $05, $00, $00, $00, $00, $1F, $1F, $1F, $1F, $12, $0C, $0C, $0C, $12
                dc.b    $08, $08, $08, $1F, $5F, $5F, $5F, $07, $80, $80, $80 

Sfx_B5: ; loc_FF477:
                dc.b    $47, $F8, $01, $01, $80, $05, $81, $F4, $00, $05, $EF, $00, $E0, $40, $C1, $05
                dc.b    $C4, $05, $C9, $1B, $F2 
Sfx_B6: ; loc_FF48C:  
                dc.b    $00, $00, $01, $01, $80, $C0, $96, $F4, $00, $00, $F0, $01, $01, $F0, $08, $F3
                dc.b    $E7, $C1, $07, $D0, $01, $EC, $01, $F7, $00, $0C, $9F, $F4, $F2
Sfx_B7: ; loc_FF4A9:
                dc.b    $CB, $F4, $01, $01, $80, $05, $B3, $F4, $00, $00, $EF, $00, $F0, $01, $01, $20
                dc.b    $08, $8B, $0A, $F7, $00, $08, $BA, $F4, $8B, $10, $E6, $03, $F7, $00, $09, $C1
                dc.b    $F4, $F2, $FA, $21, $10, $30, $32, $1F, $1F, $1F, $1F, $05, $09, $18, $02, $06
                dc.b    $06, $0F, $02, $1F, $4F, $2F, $2F, $0F, $0E, $1A, $80
Sfx_B8: ; loc_FF4E4:
                dc.b    $00, $00, $01, $01, $80, $C0, $EE, $F4, $00, $00, $F0, $01, $01, $F0, $08, $F3
                dc.b    $E7, $B4, $08, $B0, $02, $EC, $01, $F7, $00, $03, $F7, $F4, $F2    
Sfx_B9: ; loc_FF501:   
                dc.b    $79, $F2, $01, $04, $80, $02, $1D, $F5, $10, $00, $80, $04, $28, $F5, $00, $00
                dc.b    $80, $05, $24, $F5, $10, $00, $80, $C0, $39, $F5, $00, $00, $E0, $40, $80, $02
                dc.b    $F6, $28, $F5, $E0, $80, $80, $01, $EF, $00, $F0, $03, $01, $20, $04, $81, $18
                dc.b    $E6, $0A, $F7, $00, $06, $2F, $F5, $F2, $F0, $01, $01, $0F, $05, $F3, $E7, $B0
                dc.b    $18, $E7, $EC, $03, $F7, $00, $05, $40, $F5, $F2
Sfx_BA: ; loc_FF54B:
                dc.b    $5A, $F5, $01, $01, $80, $05, $55, $F5, $00, $07, $EF, $00, $AE, $08, $F2, $1C
                dc.b    $2E, $0F, $02, $02, $1F, $1F, $1F, $1F, $18, $14, $0F, $0E, $00, $00, $00, $00
                dc.b    $FF, $FF, $FF, $FF, $20, $1B, $80, $80 
Sfx_BB: ; loc_FF573:
                dc.b    $85, $F5, $01, $01, $80, $05, $7D, $F5, $F4, $00, $EF, $00, $9B, $04, $80, $A0
                dc.b    $06, $F2, $3C, $00, $00, $00, $00, $1F, $1F, $1F, $1F, $00, $0F, $16, $0F, $00
                dc.b    $00, $00, $00, $0F, $FF, $AF, $FF, $00, $0A, $80, $80
Sfx_BC: ; loc_FF59E:
                dc.b    $C6, $F5, $01, $02, $80, $05, $AE, $F5, $90, $00, $80, $C0, $B8, $F5, $00, $00
                dc.b    $EF, $00, $F0, $01, $01, $C5, $1A, $CD, $07, $F2, $F5, $07, $80, $07, $F0, $01
                dc.b    $02, $05, $FF, $F3, $E7, $BB, $4F, $F2, $FD, $09, $00, $03, $00, $1F, $1F, $1F
                dc.b    $1F, $10, $0C, $0C, $0C, $0B, $10, $1F, $05, $1F, $4F, $2F, $2F, $09, $92, $84
                dc.b    $8E           
Sfx_BD: ; loc_FF5DF:
                dc.b    $00, $F6, $01, $02, $80, $05, $EF, $F5, $10, $0A, $80, $04, $F9, $F5, $00, $00
                dc.b    $EF, $00, $F0, $01, $01, $60, $01, $A7, $08, $F2, $80, $08, $EF, $01, $84, $22
                dc.b    $F2, $FA, $21, $19, $3A, $30, $1F, $1F, $1F, $1F, $05, $09, $18, $02, $0B, $10
                dc.b    $1F, $05, $1F, $4F, $2F, $2F, $0E, $04, $07, $80, $FA, $31, $10, $30, $32, $1F
                dc.b    $1F, $1F, $1F, $05, $05, $18, $10, $0B, $10, $1F, $10, $1F, $1F, $2F, $2F, $0D
                dc.b    $01, $00, $80               
Sfx_BE: ; loc_FF632:
                dc.b    $53, $F6, $01, $01, $80, $04, $3C, $F6, $0C, $05, $EF, $00, $80, $01, $F0, $03
                dc.b    $01, $09, $FF, $CA, $25, $F4, $E7, $E6, $01, $D0, $02, $F7, $00, $2A, $48, $F6
                dc.b    $F2, $3C, $00, $02, $44, $02, $1F, $1F, $1F, $15, $00, $00, $1F, $00, $00, $00
                dc.b    $00, $00, $0F, $0F, $0F, $0F, $0D, $28, $00, $00
Sfx_BF: ; loc_FF66C:
                dc.b    $C5, $F6, $01, $03, $80, $02, $82, $F6, $F4, $06, $80, $04, $9D, $F6, $F4, $06
                dc.b    $80, $05, $B2, $F6, $F4, $06, $EF, $00, $C9, $07, $CD, $D0, $CB, $CE, $D2, $CD
                dc.b    $D0, $D4, $CE, $D2, $D5, $D0, $07, $D4, $D7, $E6, $05, $F7, $00, $08, $91, $F6
                dc.b    $F2, $EF, $00, $E1, $01, $80, $07, $CD, $15, $CE, $D0, $D2, $D4, $15, $E6, $05
                dc.b    $F7, $00, $08, $A8, $F6, $F2, $EF, $00, $E1, $01, $C9, $15, $CB, $CD, $CE, $D0
                dc.b    $15, $E6, $05, $F7, $00, $08, $BB, $F6, $F2, $14, $25, $36, $33, $11, $1F, $1F
                dc.b    $1F, $1F, $15, $1C, $18, $13, $0B, $0D, $08, $09, $0F, $8F, $9F, $0F, $24, $0A
                dc.b    $05, $80               
Sfx_C0: ; loc_FF6DE:
                dc.b    $F3, $F6, $01, $01, $80, $05, $E8, $F6, $00, $03, $EF, $00, $94, $05, $80, $05
                dc.b    $94, $04, $80, $04, $F2, $38, $08, $08, $08, $08, $1F, $1F, $1F, $0E, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $0F, $0F, $0F, $1F, $00, $00, $00, $80
Sfx_C1: ; loc_FF70C:
                dc.b    $2D, $F7, $01, $02, $80, $05, $1C, $F7, $00, $00, $80, $C0, $26, $F7, $00, $02
                dc.b    $F0, $03, $01, $72, $0B, $EF, $00, $BA, $16, $F2, $F5, $01, $F3, $E7, $B0, $1B
                dc.b    $F2, $3C, $0F, $03, $01, $01, $1F, $1F, $1F, $1F, $19, $19, $12, $0E, $05, $00
                dc.b    $12, $0F, $0F, $FF, $7F, $FF, $00, $00, $80, $80               
Sfx_C2: ; loc_FF746:
                dc.b    $C5, $F6, $01, $01, $80, $05, $50, $F7, $0C, $08, $EF, $00, $BA, $08, $BA, $25
                dc.b    $F2
Sfx_C3: ; loc_FF757:
                dc.b    $86, $F7, $01, $02, $80, $04, $67, $F7, $0C, $00, $80, $05, $73, $F7, $00, $13
                dc.b    $EF, $01, $80, $01, $A2, $08, $EF, $00, $E7, $AD, $26, $F2, $EF, $02, $F0, $06
                dc.b    $01, $03, $FF, $80, $0A, $C3, $06, $F7, $00, $05, $7C, $F7, $C3, $17, $F2, $30
                dc.b    $30, $34, $5C, $30, $9E, $AC, $A8, $DC, $0E, $04, $0A, $05, $08, $08, $08, $08
                dc.b    $BF, $BF, $BF, $BF, $24, $04, $1C, $80, $30, $30, $34, $5C, $30, $9E, $AC, $A8
                dc.b    $DC, $0E, $04, $0A, $05, $08, $08, $08, $08, $BF, $BF, $BF, $BF, $24, $04, $2C
                dc.b    $80, $04, $37, $77, $72, $49, $1F, $1F, $1F, $1F, $07, $07, $0A, $0D, $00, $00
                dc.b    $0B, $0B, $1F, $1F, $0F, $0F, $13, $13, $81, $88
Sfx_C4: ; loc_FF7D1:
                dc.b    $E0, $F7, $01, $01, $80, $05, $DB, $F7, $00, $00, $EF, $00, $8A, $22, $F2, $FA
                dc.b    $21, $10, $30, $32, $1F, $1F, $1F, $1F, $05, $05, $18, $10, $0B, $10, $1F, $10
                dc.b    $1F, $4F, $2F, $2F, $0D, $04, $07, $80
Sfx_C5: ; loc_FF7F9:
                dc.b    $2E, $F8, $01, $03, $80, $05, $0F, $F8, $00, $00, $80, $04, $18, $F8, $00, $00
                dc.b    $80, $C0, $1F, $F8, $00, $00, $EF, $00, $8A, $08, $80, $02, $8A, $08, $F2, $EF
                dc.b    $01, $80, $12, $C6, $55, $F2, $F5, $02, $F3, $E7, $80, $02, $C2, $05, $C4, $04
                dc.b    $C2, $05, $C4, $04, $F2, $3B, $03, $02, $02, $06, $18, $1A, $1A, $96, $17, $0A
                dc.b    $0E, $10, $00, $00, $00, $00, $FF, $FF, $FF, $FF, $00, $39, $28, $80, $04, $37
                dc.b    $77, $72, $49, $1F, $1F, $1F, $1F, $07, $07, $0A, $0D, $00, $00, $0B, $0B, $1F
                dc.b    $1F, $0F, $0F, $23, $23, $80, $80
Sfx_C6: ; loc_FF860:
                dc.b    $47, $F8, $01, $02, $80, $04, $70, $F8, $00, $05, $80, $05, $7C, $F8, $00, $08
                dc.b    $EF, $00, $C6, $02, $05, $05, $05, $05, $05, $05, $3A, $F2, $EF, $00, $80, $02
                dc.b    $C4, $02, $05, $15, $02, $05, $32, $F2               
Sfx_C7: ; loc_FF888:
                dc.b    $9D, $F8, $01, $01, $80, $05, $92, $F8, $00, $00, $EF, $00, $BE, $05, $80, $04
                dc.b    $BE, $04, $80, $04, $F2, $28, $2F, $37, $5F, $2B, $1F, $1F, $1F, $1F, $15, $15
                dc.b    $15, $13, $13, $0D, $0C, $10, $2F, $3F, $2F, $2F, $00, $1F, $10, $80
Sfx_C8: ; loc_FF8B6:
                dc.b    $00, $00, $01, $01, $80, $C0, $C0, $F8, $00, $00, $F5, $00, $F3, $E7, $A7, $25
                dc.b    $F2
Sfx_C9: ; loc_FF8C7:
                dc.b    $DB, $F8, $01, $01, $80, $05, $D1, $F8, $0E, $00, $EF, $00, $F0, $01, $01, $33
                dc.b    $18, $B9, $1A, $F2, $3B, $0A, $05, $31, $02, $5F, $5F, $5F, $5F, $04, $16, $14
                dc.b    $0C, $00, $00, $04, $00, $1F, $D8, $6F, $FF, $03, $00, $25, $80
Sfx_CA: ; loc_FF8F4:
                dc.b    $08, $F9, $01, $01, $80, $05, $FE, $F8, $00, $02, $EF, $00, $F0, $01, $01, $5B
                dc.b    $02, $CC, $65, $F2, $20, $36, $30, $35, $31, $41, $3B, $49, $4B, $09, $09, $06
                dc.b    $08, $01, $02, $03, $A9, $0F, $0F, $0F, $0F, $29, $23, $27, $80               
Sfx_CB: ; loc_FF921:
                dc.b    $79, $F2, $01, $02, $80, $05, $31, $F9, $00, $00, $80, $C0, $42, $F9, $00, $00
                dc.b    $EF, $00, $F0, $03, $01, $20, $04, $81, $18, $E6, $0A, $F7, $00, $06, $38, $F9
                dc.b    $F2, $F0, $01, $01, $0F, $05, $F3, $E7, $B0, $18, $E7, $EC, $03, $F7, $00, $05
                dc.b    $49, $F9, $F2
Sfx_CC: ; loc_FF954:
                dc.b    $75, $F9, $01, $01, $80, $04, $5E, $F9, $00, $02, $EF, $00, $80, $01, $F0, $03
                dc.b    $01, $5D, $0F, $B0, $0C, $F4, $E7, $E6, $02, $BD, $02, $F7, $00, $19, $6A, $F9
                dc.b    $F2, $20, $36, $30, $35, $31, $DF, $9F, $DF, $9F, $07, $09, $06, $06, $07, $06
                dc.b    $06, $08, $2F, $1F, $1F, $FF, $16, $13, $30, $80           
Sfx_CD: ; loc_FF98E:
                dc.b    $00, $00, $01, $01, $80, $C0, $98, $F9, $00, $00, $BB, $02, $F2               
Sfx_CE: ; loc_FF99B:
                dc.b    $47, $F8, $01, $01, $80, $04, $A5, $F9, $00, $05, $EF, $00, $E0, $80, $C1, $04
                dc.b    $C4, $05, $C9, $1B, $F2
Sfx_CF: ; loc_FF9B0:
                dc.b    $CE, $F9, $01, $02, $80, $04, $C0, $F9, $27, $03, $80, $05, $C2, $F9, $27, $00
                dc.b    $80, $04, $EF, $00, $B4, $05, $E6, $02, $F7, $00, $15, $C4, $F9, $F2, $F4, $06
                dc.b    $0F, $04, $0E, $1F, $1F, $1F, $1F, $00, $0B, $00, $0B, $00, $05, $00, $08, $0F
                dc.b    $FF, $0F, $FF, $0C, $03, $8B, $80
Sfx_D0: ; loc_FF9E7:
                dc.b    $02, $FA, $01, $01, $80, $05, $F1, $F9, $00, $00, $EF, $00, $9D, $05, $9D, $02
                dc.b    $AD, $05, $9D, $02, $AD, $05, $9D, $02, $AD, $05, $F2, $3B, $70, $53, $70, $51
                dc.b    $0F, $0F, $0F, $0F, $0F, $0F, $00, $0F, $00, $00, $00, $00, $0F, $0F, $0F, $0F
                dc.b    $0E, $2F, $0C, $80
Sfx_D1: ; loc_FFA1B:
                dc.b    $2A, $FA, $01, $01, $80, $05, $25, $FA, $00, $01, $EF, $00, $81, $05, $F2, $35
                dc.b    $02, $01, $00, $04, $1F, $1F, $1F, $1F, $00, $19, $12, $14, $00, $00, $0C, $0F
                dc.b    $0F, $FF, $EF, $FF, $00, $00, $00, $80               
Sfx_D2: ; loc_FFA43:
                dc.b    $5B, $FA, $01, $01, $80, $05, $4D, $FA, $00, $00, $EF, $00, $F0, $01, $01, $2D
                dc.b    $21, $81, $26, $81, $26, $81, $26, $F2, $0E, $05, $06, $04, $0F, $1F, $1F, $1F
                dc.b    $1F, $1F, $1F, $1F, $1F, $05, $08, $05, $05, $0F, $0F, $0F, $0F, $51, $82, $44
                dc.b    $97    
Sfx_D3: ; loc_FFA74:
                dc.b    $88, $FA, $01, $01, $80, $05, $7E, $FA, $00, $00, $EF, $00, $F0, $01, $02, $3F
                dc.b    $04, $96, $3A, $F2, $05, $07, $30, $0F, $0A, $30, $1F, $1F, $1F, $03, $03, $03
                dc.b    $03, $1F, $0F, $0F, $0F, $AF, $AF, $AF, $AF, $4D, $80, $80, $80
Sfx_D4: ; loc_FFAA1:
                dc.b    $C7, $FA, $01, $02, $80, $04, $B1, $FA, $00, $00, $80, $05, $BB, $FA, $00, $00
                dc.b    $EF, $00, $F0, $01, $01, $E7, $01, $93, $17, $F2, $EF, $00, $E1, $02, $F0, $01
                dc.b    $01, $E7, $01, $93, $17, $F2, $3E, $20, $0E, $0F, $0F, $1F, $1F, $1F, $1F, $1F
                dc.b    $1F, $1F, $1F, $0F, $0E, $0F, $0E, $0F, $0F, $0F, $0F, $8E, $80, $80, $80
Sfx_D5: ; loc_FFAE0:
                dc.b    $F4, $FA, $01, $01, $80, $05, $EA, $FA, $00, $00, $EF, $00, $F0, $01, $01, $02
                dc.b    $02, $B1, $15, $F2, $35, $29, $09, $08, $0F, $1A, $1F, $10, $1F, $0F, $1F, $1F
                dc.b    $1F, $0C, $0D, $0E, $0E, $0F, $0F, $0F, $0F, $80, $80, $80, $80
Sfx_D6: ; loc_FFB0D:
                dc.b    $3A, $FB, $01, $02, $80, $04, $1D, $FB, $00, $08, $80, $05, $1D, $FB, $0C, $08
                dc.b    $EF, $00, $F0, $01, $01, $12, $FF, $8F, $45, $F0, $00, $00, $00, $00, $E7, $E6
                dc.b    $03, $A0, $01, $E6, $02, $E7, $0A, $F7, $00, $07, $30, $FB, $F2, $34, $01, $0B
                dc.b    $0E, $09, $9F, $AF, $AF, $CF, $02, $00, $02, $00, $07, $0A, $04, $05, $BF, $BF
                dc.b    $BF, $BF, $50, $1C, $00, $80               
Sfx_D7: ; loc_FFB53:
                dc.b    $67, $FB, $01, $01, $80, $05, $5D, $FB, $00, $06, $EF, $00, $F0, $01, $01, $07
                dc.b    $01, $99, $1B, $F2, $3E, $20, $0F, $1F, $0F, $1F, $1F, $1F, $1F, $1F, $1F, $1F
                dc.b    $1F, $0F, $0E, $0F, $0E, $0F, $0F, $0F, $0F, $8C, $80, $80, $80
Sfx_D8: ; loc_FFB80:
                dc.b    $9E, $FB, $01, $01, $80, $05, $8A, $FB, $00, $00, $EF, $00, $B7, $03, $BB, $03
                dc.b    $C7, $0A, $E6, $08, $C7, $05, $80, $05, $F7, $00, $03, $92, $FB, $F2, $3C, $05
                dc.b    $0A, $01, $01, $56, $5C, $5C, $5C, $0E, $11, $11, $11, $09, $06, $0A, $0A, $4F
                dc.b    $3F, $3F, $3F, $17, $20, $80, $80
Sfx_D9: ; loc_FFBB7:
                dc.b    $ED, $FB, $01, $03, $80, $80, $CD, $FB, $EC, $00, $80, $A0, $CD, $FB, $EA, $00
                dc.b    $80, $05, $DC, $FB, $00, $00, $F0, $01, $01, $81, $45, $9C, $05, $EC, $02, $F7
                dc.b    $00, $02, $D2, $FB, $F2, $EF, $00, $F0, $01, $01, $0C, $01, $92, $07, $E6, $0A
                dc.b    $F7, $00, $03, $E3, $FB, $F2, $43, $01, $01, $01, $01, $5F, $5F, $5F, $5F, $0E
                dc.b    $11, $11, $11, $09, $06, $0A, $0A, $4F, $3F, $3F, $3F, $17, $20, $80, $80
Sfx_DA: ; loc_FFC06:
                dc.b    $2E, $FC, $01, $02, $80, $C0, $16, $FC, $00, $02, $80, $05, $1D, $FC, $00, $00
                dc.b    $F3, $E7, $F5, $01, $CC, $29, $F2, $EF, $00, $F0, $01, $01, $7F, $F1, $AA, $0A
                dc.b    $E6, $0C, $F7, $00, $03, $24, $FC, $F2, $47, $03, $02, $02, $04, $5F, $5F, $5F
                dc.b    $5F, $0E, $1A, $11, $0A, $09, $0A, $0A, $0A, $4F, $3F, $3F, $3F, $7F, $80, $80
                dc.b    $A3               
Sfx_DB: ; loc_FFC47:
                dc.b    $64, $FC, $01, $01, $80, $C0, $51, $FC, $00, $00, $F5, $00, $F3, $E7, $C5, $01
                dc.b    $CE, $02, $E7, $02, $EC, $01, $E7, $F7, $00, $14, $5A, $FC, $F2
Sfx_DC: ; loc_FFC64:
                dc.b    $A8, $FC, $01, $03, $80, $04, $7A, $FC, $00, $00, $80, $05, $81, $FC, $00, $00
                dc.b    $80, $C0, $8A, $FC, $00, $00, $EF, $00, $8D, $06, $8D, $30, $F2, $80, $0C, $EF
                dc.b    $00, $8D, $06, $8D, $30, $F2, $F5, $00, $F3, $E7, $F0, $01, $01, $01, $01, $99
                dc.b    $0F, $F0, $01, $01, $05, $05, $95, $1F, $E7, $12, $EC, $01, $E7, $0F, $F7, $00
                dc.b    $1F, $9E, $FC, $F2, $38, $71, $00, $00, $60, $0A, $0A, $0F, $0F, $00, $00, $00
                dc.b    $12, $00, $09, $07, $0B, $0F, $0F, $0F, $0F, $11, $04, $0E, $80           
Sfx_DD: ; loc_FFCC1:
                dc.b    $D2, $FC, $01, $01, $80, $05, $CB, $FC, $00, $00, $EF, $00, $BB, $05, $BB, $05
                dc.b    $F2, $3E, $20, $3F, $1F, $BF, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $0F, $0F
                dc.b    $0F, $0F, $0F, $0F, $0F, $0F, $8C, $80, $80, $80               
Sfx_DE: ; loc_FFCEB:
                dc.b    $0F, $FD, $01, $01, $80, $05, $F5, $FC, $00, $00, $EF, $00, $F0, $01, $01, $0F
                dc.b    $FE, $93, $43, $F0, $01, $01, $03, $03, $9F, $0F, $E7, $03, $E6, $01, $F7, $00
                dc.b    $23, $05, $FD, $F2, $3C, $00, $02, $40, $02, $1F, $1F, $1F, $15, $00, $00, $1F
                dc.b    $00, $00, $00, $00, $00, $0F, $0F, $0F, $0F, $0D, $28, $00, $00
Sfx_DF: ; loc_FFD28:
                dc.b    $5A, $FD, $01, $02, $80, $05, $38, $FD, $15, $00, $80, $02, $49, $FD, $F4, $05
                dc.b    $EF, $00, $F0, $01, $01, $19, $31, $9D, $3A, $E6, $05, $F7, $00, $02, $3F, $FD
                dc.b    $F2, $EF, $00, $F0, $01, $01, $19, $31, $9D, $3A, $E6, $05, $F7, $00, $02, $50
                dc.b    $FD, $F2, $30, $30, $30, $30, $3C, $9E, $AC, $A8, $DF, $0E, $04, $0A, $00, $08
                dc.b    $08, $08, $08, $BF, $BF, $BF, $BF, $04, $14, $2C, $80
Sfx_E0: ; loc_FFD73:
                dc.b    $CF, $FD, $01, $03, $80, $05, $89, $FD, $00, $00, $80, $02, $A6, $FD, $F7, $00
                dc.b    $80, $C0, $C3, $FD, $00, $00, $EF, $00, $F0, $01, $01, $19, $F6, $C4, $25, $F0
                dc.b    $01, $01, $00, $00, $E7, $E6, $0F, $D0, $0F, $E7, $03, $E6, $02, $F7, $00, $13
                dc.b    $9C, $FD, $F2, $EF, $00, $F0, $01, $01, $19, $F6, $D5, $25, $F0, $01, $01, $00
                dc.b    $00, $E7, $E6, $0F, $DB, $0F, $E7, $03, $E6, $02, $F7, $00, $13, $B9, $FD, $F2
                dc.b    $F5, $01, $F3, $E7, $F0, $01, $01, $01, $01, $AC, $24, $F2, $34, $00, $03, $0C
                dc.b    $09, $9F, $AC, $AF, $D5, $06, $00, $02, $00, $02, $0A, $04, $08, $BF, $BF, $BF
                dc.b    $BF, $00, $1C, $00, $80
           
                cnop    $000000, $0FFFFE
                dc.w    $0000
               