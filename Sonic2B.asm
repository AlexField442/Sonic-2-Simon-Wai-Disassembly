; Sonic 2 Beta By Esrael L. G. Neto
;                    Sonic 2 Alpha              Sonic 2 Beta   
; Level Id $00       Green Hill (Sonic 1)    -> Emerald Hill (Green Hill) 
; Level Id $01       Labyrinth (Sonic 1)     -> (Labyrinth lefover cleaned now Empty)
; Level Id $02       Chemical Plant          -> (Moved to Id $0d now Wood
; Level Id $03       Emerald Hill            -> (Moved to Id $00 now Empty)
; Level Id $04       Hidden Palace           -> (Moved to Id $08 now Metropolis)
; Level Id $05       Hill Top                -> (Moved to Id $07 now Metropolis)
; Level Id $06       Sonic 1 Ending Sequence -> (Sonic 1 Ending Sequence cleaned now Empty) 
;
; Rom Start             
                dc.l    $FFFFFE00, EntryPoint, BusError, AddressError                  
                dc.l    IllegalInstr, ZeroDivide, ChkInstr, TrapvInstr
                dc.l    PrivilegeViolation, Trace, Line1010Emu, Line1111Emu
                dc.l    ErrorException, ErrorException, ErrorException, ErrorException
                dc.l    ErrorException, ErrorException, ErrorException, ErrorException
                dc.l    ErrorException, ErrorException, ErrorException, ErrorException
                dc.l    ErrorException, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l    VBlank, ErrorTrap, HBlank, ErrorTrap
                dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
                dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap 
Console:
                dc.b    'SEGA MEGA DRIVE (C)'
Date:                
                dc.b    'SEGA 1991.APR'
Title_Local:                
                dc.b    'SONIC THE             HEDGEHOG 2                '
Title_International:                
                dc.b    'SONIC THE             HEDGEHOG 2                '
Serial:                
                dc.b    'GM 00004049-01'
Checksum: ; Offset_0x00018E:                
                dc.w    $AFC7
IOSupport:                
                dc.b    'J               '
ROMStart:                
                dc.l    $00000000
ROMEnd:   ; Offset_0x0001A4:                 
                dc.l    $0007FFFF
RAMStart:                
                dc.l    $00FF0000
RAMEnd:                
                dc.l    $00FFFFFF
SRAMSupport:               
                dc.b    '                '
Notes:                
                dc.b    '                                                '
Region:                
                dc.b    'JUE             ' 
ErrorTrap: ; Offset_0x000200: 
                nop 
                nop  
                bra.s   ErrorTrap               ; Offset_0x000200
EntryPoint: ; Offset_0x000206:                
                tst.l   $00A10008 
                bne.s   PortA_OK                ; Offset_0x000214 
                tst.w   $00A1000C   
PortA_OK: ; Offset_0x000214:
                bne.s   PortC_OK                ; Offset_0x000292
                lea     InitValues(PC), A5      ; Offset_0x000294
                movem.w (A5)+, D5-D7 
                movem.l (A5)+, A0-A4 
		move.b	-$10FF(A1), D0
                andi.b  #$0F, D0
                beq.s   SkipSecurity            ; Offset_0x000234
                move.l  #'SEGA', $2F00(A1) 
SkipSecurity: ; Offset_0x000234:                                 
                move.w  (A4), D0
                moveq   #$00, D0
                move.l  D0, A6
                move.l  A6, USP
                moveq   #$17, D1
VDPInitLoop: ; Offset_0x00023E:                
                move.b  (A5)+, D5
                move.w  D5, (A4)
                add.w   D7, D5
                dbra    D1, VDPInitLoop         ; Offset_0x00023E
                move.l  (A5)+, (A4)
                move.w  D0, (A3)  
                move.w  D7, (A1)               
                move.w  D7, (A2)
WaitForZ80: ; Offset_0x000250:                   
                btst    D0, (A1)
                bne.s   WaitForZ80              ; Offset_0x000250
                moveq   #$25, D2
Z80InitLoop: ; Offset_0x000256:                 
                move.b  (A5)+, (A0)+
                dbra    D2, Z80InitLoop         ; Offset_0x000256
                move.w  D0, (A2)
                move.w  D0, (A1)
                move.w  D7, (A2)
ClearRAMLoop: ; Offset_0x000262:                  
                move.l  D0, -(A6)
                dbra    D6, ClearRAMLoop        ; Offset_0x000262
                move.l  (A5)+, (A4)
                move.l  (A5)+, (A4)
                moveq   #$1F, D3 
ClearCRAMLoop: ; Offset_0x00026E:                 
                move.l  D0, (A3)
                dbra    D3, ClearCRAMLoop       ; Offset_0x00026E
                move.l  (A5)+, (A4)
                moveq   #$13, D4 
ClearVSRAMLoop: ; Offset_0x000278: 
                move.l  D0, (A3) 
                dbra    D4, ClearVSRAMLoop      ; Offset_0x000278   
                moveq   #$03, D5
PSGInitLoop: ; Offset_0x000280:                    
                move.b  (A5)+, $0011(A3) 
                dbra    D5, PSGInitLoop         ; Offset_0x000280   
                move.w  D0, (A2)   
                movem.l (A6), D0-A6
                move    #$2700, SR 
PortC_OK: ; Offset_0x000292:                
                bra.s   GameProgram             ; Offset_0x000300 
InitValues: ; Offset_0x000294:                 
                dc.w    $8000, $3FFF, $0100     ; Z80 RAM start	location
                dc.l    $00A00000               ; Z80 bus request
                dc.l    $00A11100               ; Z80 reset
                dc.l    $00A11200               ; VDP data port
                dc.l    $00C00000               ; VDP control port
                dc.l    $00C00004
                dc.w    $0414, $303C, $076C, $0000, $0000, $FF00, $8137, $0001
                dc.w    $0100, $00FF, $FF00, $0080, $4000, $0080, $AF01, $D91F
                dc.w    $1127, $0021, $2600, $F977, $EDB0, $DDE1, $FDE1, $ED47
                dc.w    $ED4F, $D1E1, $F108, $D9C1, $D1E1, $F1F9, $F3ED, $5636
                dc.w    $E9E9, $8104, $8F02, $C000, $0000, $4000, $0010, $9FBF
                dc.w    $DFFF  
GameProgram: ; Offset_0x000300:
                tst.w   ($00C00004) 
                btst    #$06, ($00A1000D)
                beq.s   ChecksumCheck           ; Offset_0x00031C
                cmpi.l  #'init', ($FFFFFFFC).w
                beq     AlreadyInit             ; Offset_0x00036A
ChecksumCheck: ; Offset_0x00031C:
                move.l  #ErrorTrap, A0          ; Offset_0x000200
                move.l  #ROMEnd, A1             ; Offset_0x0001A4
                move.l  (A1), D0  
                move.l  #$0007FFFF, D0
                moveq   #$00, D1 
ChksumChkLoop: ; Offset_0x000332:                
                add.w   (A0)+, D1
                cmp.l   A0, D0 
                bcc.s   ChksumChkLoop           ; Offset_0x000332 
                move.l  #Checksum, A1           ; Offset_0x00018E
                cmp.w   (A1), D1
                nop
                nop
                lea     ($FFFFFE00).w, A6
                moveq   #$00, D7 
                move.w  #$007F, D6
ClearSomeRAMLoop: ; Offset_0x00034E:                 
                move.l  D7, (A6)+
;Offset_0x000350:  
                dbra    D6, ClearSomeRAMLoop    ; Offset_0x00034E  
                move.b  ($00A10001), D0  
                andi.b  #$C0, D0
                move.b  D0, ($FFFFFFF8).w  
                move.l  #'init', ($FFFFFFFC).w
AlreadyInit: ; Offset_0x00036A:                  
                lea     ($00FF0000), A6 
                moveq   #$00, D7 
                move.w  #$3F7F, D6 
ClearRemainingRAMLoop: ; Offset_0x000376:                
                move.l  D7, (A6)+ 
                dbra    D6, ClearRemainingRAMLoop ; Offset_0x000376 
                bsr     VDPRegSetup             ; Offset_0x001368  
                bsr     SoundDriverLoad         ; Offset_0x0014B8 
                bsr     JoypadInit              ; Offset_0x0012FC 
                move.b  #$04, ($FFFFF600).w ; Boot from Game Intro / Title Screen
MainGameLoop: ; Offset_0x00038E:                
                move.b  ($FFFFF600).w, D0
                andi.w  #$001C, D0
                jsr     GameModeArray(PC, D0)   ; Offset_0x00039C
                bra.s   MainGameLoop            ; Offset_0x00038E
GameModeArray: ; Offset_0x00039C:   
                bra     SegaScreen       ; SEGA Logo ; Offset_0x00360C   
                bra     TitleScreen      ; Game Intro / Title Screen ; Offset_0x003738
                bra     Level            ; Demo Mode         ; Offset_0x004150
                bra     Level            ; Normal Game Play  ; Offset_0x004150 
                bra     SpecialStage     ; Special Stage     ; Offset_0x005200
;===============================================================================
;
; ChecksumError
;
; Leftover subroutine from Sonic 1 showing a red
;  screen when the checksum was	wrong
;
;===============================================================================                
ChecksumError:                  
                bsr     VDPRegSetup      ; Offset_0x001368 
                move.l  #$C0000000, ($00C00004)   
                moveq   #$3F, D7  
ChksumErr_RedFill: ; Offset_0x0003C0:                  
                move.w  #$000E, ($00C00000) 
                dbra    D7, ChksumErr_RedFill   ; Offset_0x0003C0 
ChksumErr_InfLoop: ; Offset_0x0003CC:
                bra.s   ChksumErr_InfLoop       ; Offset_0x0003CC             
BusError: ; Offset_0x0003CE:
                move.b  #$02, ($FFFFFC44).w
                bra.s   ErrorMsg_TwoAddresses   ; Offset_0x000432
AddressError: ; Offset_0x0003D6:                
                move.b  #$04, ($FFFFFC44).w
                bra.s   ErrorMsg_TwoAddresses   ; Offset_0x000432
IllegalInstr: ; Offset_0x0003DE:                
                move.b  #$06, ($FFFFFC44).w
                addq.l  #$02, $0002(A7)
                bra.s   ErrorMessage            ; Offset_0x00045A
ZeroDivide: ; Offset_0x0003EA:                
                move.b  #$08, ($FFFFFC44).w
                bra.s   ErrorMessage            ; Offset_0x00045A
ChkInstr: ; Offset_0x0003F2:                
                move.b  #$0A, ($FFFFFC44).w
                bra.s   ErrorMessage            ; Offset_0x00045A
TrapvInstr: ; Offset_0x0003FA:                
                move.b  #$0C, ($FFFFFC44).w
                bra.s   ErrorMessage            ; Offset_0x00045A             
PrivilegeViolation: ; Offset_0x000402:
                move.b  #$0E, ($FFFFFC44).w
                bra.s   ErrorMessage            ; Offset_0x00045A  
Trace: ; Offset_0x00040A:
                move.b  #$10, ($FFFFFC44).w
                bra.s   ErrorMessage            ; Offset_0x00045A 
Line1010Emu: ; Offset_0x000412:
                move.b  #$12, ($FFFFFC44).w
                addq.l  #$02, $0002(A7)
                bra.s   ErrorMessage            ; Offset_0x00045A                 
Line1111Emu: ; Offset_0x00041E:
                move.b  #$14, ($FFFFFC44).w
                addq.l  #$02, $0002(A7)
                bra.s   ErrorMessage            ; Offset_0x00045A 
ErrorException: ; Offset_0x00042A:
                move.b  #$00, ($FFFFFC44).w
                bra.s   ErrorMessage            ; Offset_0x00045A 
ErrorMsg_TwoAddresses: ; Offset_0x000432: 
                move    #$2700, SR
                addq.w  #$02, A7
                move.l  (A7)+, ($FFFFFC40).w
                addq.w  #$02, A7
                movem.l D0-A7, ($FFFFFC00).w
                bsr     ShowErrorMsg            ; Offset_0x000480
                move.l  $0002(A7), D0
                bsr     ShowErrAddress          ; Offset_0x0005B2
                move.l  ($FFFFFC40).w, D0
                bsr     ShowErrAddress          ; Offset_0x0005B2
                bra.s   ErrorMsg_Wait           ; Offset_0x000470                  
ErrorMessage: ; Offset_0x00045A:
                move    #$2700, SR
                movem.l D0-A7, ($FFFFFC00).w
                bsr     ShowErrorMsg            ; Offset_0x000480
                move.l  $0002(A7), D0
                bsr     ShowErrAddress          ; Offset_0x0005B2
ErrorMsg_Wait: ; Offset_0x000470:
                bsr     Error_WaitForC          ; Offset_0x0005D8 
                movem.l ($FFFFFC00).w, D0-A7  
                move    #$2300, SR
                rte        
ShowErrorMsg: ; Offset_0x000480:
                lea     ($00C00000), A6  
                move.l  #$78000003, ($00C00004)
                lea     (Art_Menu_Text), A0     ; Offset_0x0005E8
                move.w  #$027F, D1
Error_LoadGfx: ; Offset_0x00049A:                
                move.w  (A0)+, (A6)
                dbra    D1, Error_LoadGfx       ; Offset_0x00049A                 
                moveq   #$00, D0
                move.b ($FFFFFC44).w, D0
                move.w  Error_Text(PC, D0), D0  ; Offset_0x0004CA
                lea     Error_Text(PC, D0), A0  ; Offset_0x0004CA
                move.l  #$46040003, ($00C00004)
                moveq   #$12, D1
Offset_0x0004BA:                 
                moveq   #$00, D0
                move.b (A0)+, D0
                addi.w  #$0790, D0
                move.w  D0, (A6)
                dbra    D1, Offset_0x0004BA
                rts
Error_Text: ; Offset_0x0004CA:
                dc.w    ErrTxt_Exception-Error_Text  
                dc.w    ErrTxt_BusError-Error_Text  
                dc.w    ErrTxt_AddressError-Error_Text  
                dc.w    ErrTxt_IllegalInstruction-Error_Text  
                dc.w    ErrTxt_ZeroDivide-Error_Text 
                dc.w    ErrTxt_ChkIntruction-Error_Text
                dc.w    ErrTxt_TrapvInstructuion-Error_Text
                dc.w    ErrTxt_PrivilegeViolation-Error_Text
                dc.w    ErrTxt_Trace-Error_Text
                dc.w    ErrTxt_Line1010Emulator-Error_Text
                dc.w    ErrTxt_Line1111Emulator-Error_Text
ErrTxt_Exception: ; Offset_0x0004E0: 
                dc.b    'ERROR EXCEPTION    '
ErrTxt_BusError: ; Offset_0x0004F3: 
                dc.b    'BUS ERROR          ' 
ErrTxt_AddressError: ; Offset_0x000506: 
                dc.b    'ADDRESS ERROR      '   
ErrTxt_IllegalInstruction: ; Offset_0x000519: 
                dc.b    'ILLEGAL INSTRUCTION' 
ErrTxt_ZeroDivide: ; Offset_0x00052C: 
                dc.b    '@ERO DIVIDE        ' 
ErrTxt_ChkIntruction: ; Offset_0x00053F:                 
                dc.b    'CHK INSTRUCTION    '
ErrTxt_TrapvInstructuion: ; Offset_0x000552:                
                dc.b    'TRAPV INSTRUCTION  '
ErrTxt_PrivilegeViolation: ; Offset_0x000565:                 
                dc.b    'PRIVILEGE VIOLATION'
ErrTxt_Trace: ; Offset_0x000578:                 
                dc.b    'TRACE              '
ErrTxt_Line1010Emulator: ; Offset_0x00058B:                
                dc.b    'LINE 1010 EMULATOR '
ErrTxt_Line1111Emulator: ;Offset_0x00059E:                 
                dc.b    'LINE 1111 EMULATOR ' 
                dc.b    $00                           ; Filler                                                  
ShowErrAddress: ; Offset_0x0005B2:
                move.w  #$07CA, (A6)
                moveq   #$07, D2 
ShowErrAddress_DigitLoop: ; Offset_0x0005B8:                
                rol.l   #$04, D0
                bsr.s   ShowErrDigit            ; Offset_0x0005C2
                dbra    D2, ShowErrAddress_DigitLoop ; Offset_0x0005B8
                rts
ShowErrDigit: ; Offset_0x0005C2:   
                move.w  D0, D1
                andi.w  #$000F, D1
                cmpi.w  #$000A, D1
                bcs.s   ShowErrDigit_NoOverflow ; Offset_0x0005D0
                addq.w  #$07, D1
ShowErrDigit_NoOverflow: ; Offset_0x0005D0:                
                addi.w  #$07C0, D1 
                move.w  D1, (A6)
                rts
Error_WaitForC: ; Offset_0x0005D8:
                bsr     ReadJoypads             ; Offset_0x00132C
                cmpi.b  #$20, ($FFFFF605).w
                bne     Error_WaitForC          ; Offset_0x0005D8
                rts 
Art_Menu_Text: ; Offset_0x0005E8:
                incbin   'data\sprites\art_menu.dat'
HBlank: ; Offset_0x000B08:                  
                movem.l D0-A6, -(A7) 
                tst.b	($FFFFF62A).w
                beq     Offset_0x000B82 
Offset_0x000B14:                 
                move.w	($00C00004), D0
                andi.w	#$0008, D0
                beq.s   Offset_0x000B14
                move.l  #$40000010, ($00C00004)
                move.l	($FFFFF616).w, ($00C00000)
                btst	#$06, ($FFFFFFF8).w
                beq.s   Offset_0x000B42
                move.w  #$0700, D0
Offset_0x000B3E: 
                dbra    D0, Offset_0x000B3E 
Offset_0x000B42:                 
                move.b	($FFFFF62A).w, D0  
                move.b	#$00, ($FFFFF62A).w
		move.w	#$0001, ($FFFFF644).w  
                andi.w	#$003E, D0         
                move.w	Offset_0x000B68(PC, D0), D0   
		jsr	Offset_0x000B68(pC, D0)   
Offset_0x000B5E:		
                addq.l	#$01, ($FFFFFE0C).w
		movem.l (A7)+, D0-A6
		rte
Offset_0x000B68:  
                dc.w    (Offset_0x000B82-Offset_0x000B68)
                dc.w    (Offset_0x000CEC-Offset_0x000B68)
                dc.w    (Offset_0x000D2A-Offset_0x000B68)
                dc.w    (Offset_0x000D40-Offset_0x000B68)
                dc.w    (Offset_0x000D50-Offset_0x000B68)
                dc.w    (Offset_0x000E72-Offset_0x000B68)
                dc.w    (Offset_0x000F18-Offset_0x000B68)
                dc.w    (Offset_0x001004-Offset_0x000B68)
                dc.w    (Offset_0x000D46-Offset_0x000B68)
                dc.w    (Offset_0x001014-Offset_0x000B68)
                dc.w    (Offset_0x000CFE-Offset_0x000B68)
                dc.w    (Offset_0x001020-Offset_0x000B68)
                dc.w    (Offset_0x000F18-Offset_0x000B68)
Offset_0x000B82:
                cmpi.b  #$8C, ($FFFFF600).w 
                beq.s   Offset_0x000BBC
                cmpi.b  #$08, ($FFFFF600).w 
                beq.s   Offset_0x000BBC  
                cmpi.b  #$0C, ($FFFFF600).w 
                beq.s   Offset_0x000BBC                
                move.w	#$0100, ($00A11100)
Offset_0x000BA2:                   
                btst	#$00, ($00A11100)
                bne.s   Offset_0x000BA2
                jsr     Offset_0x0012AC
                move.w  #$0000, ($00A11100)
                bra.s   Offset_0x000B5E
Offset_0x000BBC:                  
                tst.b	($FFFFF730).w
                beq     Offset_0x000C60
                move.w	($00C00004), D0
                btst	#$06, ($FFFFFFF8).w
                beq.s   Offset_0x000BDA
                move.w	#$0700, D0
Offset_0x000BD6:   
                dbra    D0, Offset_0x000BD6             
Offset_0x000BDA:
                move.w	#$0001, ($FFFFF644).w 
                move.w	#$0100, ($00A11100)
Offset_0x000BE8:                
                btst	#$00, ($00A11100)
                bne.s   Offset_0x000BE8  
                tst.b	($FFFFF64E).w 
                bne.s   Offset_0x000C1E   
                lea	($00C00004), A5 
                move.l	#$94009340, (A5)
		move.l	#$96FD9580, (A5) 
                move.w	#$977F, (A5)
                move.w	#$C000, (A5) 
                move.w	#$0080, ($FFFFF640).w  
                move.w	($FFFFF640).w, (A5)
                bra.s   Offset_0x000C42   
Offset_0x000C1E:
                lea	($00C00004), A5 
                move.l	#$94009340, (A5)
                move.l	#$96FD9540, (A5)
                move.w	#$977F, (A5)
                move.w	#$C000, (A5) 
                move.w	#$0080, ($FFFFF640).w  
                move.w	($FFFFF640).w, (A5)
Offset_0x000C42:                
                move.w	($FFFFF624).w, (A5)
                move.w	#$8230, ($00C00004) 
                jsr     Offset_0x0012AC
                move.w	#$0000, ($00A11100)
                bra     Offset_0x000B5E
Offset_0x000C60:                
                move.w  ($00C00004), D0 
                move.l	#$40000010, ($00C00004)
                move.l	($FFFFF616).w, ($00C00000)
                btst	#$06, ($FFFFFFF8).w
                beq.s   Offset_0x000C88
                move.w	#$0700, D0
Offset_0x000C84:  
                dbra    D0, Offset_0x000C84            
Offset_0x000C88:
                move.w	#$0001, ($FFFFF644).w 
                move.w	($FFFFF624).w, ($00C00004) 
                move.w	#$8230, ($00C00004)  
                move.l	($FFFFF61E).w, ($FFFFEEEC).w 
                move.w	#$0100, ($00A11100) 
Offset_0x000CAC:                
                btst	#$00, ($00A11100)
                bne.s   Offset_0x000CAC  
                lea	($00C00004), A5 
                move.l	#$94019340, (A5)
                move.l	#$96FC9500, (A5) 
                move.w	#$977F, (A5)
                move.w	#$7800, (A5) 
                move.w	#$0083, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5) 
                jsr     Offset_0x0012AC
                move.w	#$0000, ($00A11100)
                bra     Offset_0x000B5E
Offset_0x000CEC:
                bsr     Offset_0x0010BE
                tst.w   ($FFFFF614).w
                beq     Offset_0x000CFC  ; beq.s
                subq.w  #$01, ($FFFFF614).w 
Offset_0x000CFC:
                rts                
Offset_0x000CFE:
                move.w	#$0100, ($00A11100)
Offset_0x000D06:                
                btst	#$00, ($00A11100)
                bne.s   Offset_0x000D06
                bsr     ReadJoypads             ; Offset_0x00132C 
                move.w	#$0000, ($00A11100)
                tst.w   ($FFFFF614).w
                beq     Offset_0x000D28
                subq.w  #$01, ($FFFFF614).w 
Offset_0x000D28:  
                rts 
Offset_0x000D2A:
                bsr     Offset_0x0010BE
                bsr     Offset_0x0017FE
                tst.w   ($FFFFF614).w
                beq     Offset_0x000D3E
                subq.w  #$01, ($FFFFF614).w 
Offset_0x000D3E:  
                rts                
Offset_0x000D40:
                bsr     Offset_0x0010BE
                rts
Offset_0x000D46:
                cmpi.b  #$10, ($FFFFF600).w
                beq     Offset_0x000E72                 
Offset_0x000D50:
                move.w	#$0100, ($00A11100)
Offset_0x000D58:                
                btst	#$00, ($00A11100)
                bne.s   Offset_0x000D58
                bsr     ReadJoypads             ; Offset_0x00132C 
                tst.b   ($FFFFF64E).w
                bne.s   Offset_0x000D92
                lea     ($00C00004), A5
                move.l  #$94009340, (A5)
                move.l  #$96FD9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
                bra.s   Offset_0x000DB6
Offset_0x000D92:
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9540, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
Offset_0x000DB6:  
                move.w  ($FFFFF624).w, (A5)  
                move.w  #$8230, ($00C00004)  
                lea     ($00C00004), A5 
                move.l  #$940193C0, (A5)
                move.l  #$96F09500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7C00, (A5) 
                move.w  #$0083, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5) 
                lea     ($00C00004), A5  
                move.l  #$94019340, (A5) 
                move.l  #$96FC9500, (A5)  
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)  
                move.w  #$0083, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5)
                bsr     Process_DMA             ; Offset_0x0015CA
                jsr     Offset_0x0012AC
                move.w	#$0000, ($00A11100)
                movem.l ($FFFFEE00).w, D0-D7
                movem.l  D0-D7, ($FFFFEE60).w
                movem.l ($FFFFEE20).w, D0-D7
                movem.l  D0-D7, ($FFFFEE80).w
                movem.l ($FFFFEE50).w, D0-D3
                movem.l  D0-D3, ($FFFFEEA0).w
                move.l  ($FFFFF61E).w, ($FFFFEEEC).w
                cmpi.b  #$5C, ($FFFFF625).w
                bcc.s   DemoTime                ; Offset_0x000E56
                move.b  #$01, ($FFFFF64F).w
                rts
DemoTime: ; Offset_0x000E56:   
                bsr     LoadTilesAsYouMove      ; Offset_0x006E1A
                jsr     HudUpdate               ; Offset_0x023012
                bsr     Offset_0x00181A
                tst.w   ($FFFFF614).w
                beq     DemoTime_End            ; Offset_0x000E70
                subq.w  #$01, ($FFFFF614).w
DemoTime_End: ; Offset_0x000E70:
                rts                
Offset_0x000E72:
                move.w  #$0100, ($00A11100)
Offset_0x000E7A:                
                btst	#$00, ($00A11100)
                bne.s   Offset_0x000E7A
                bsr     ReadJoypads             ; Offset_0x00132C
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                lea     ($00C00004), A5 
                move.l  #$94019340, (A5)
                move.l  #$96FC9500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
                lea     ($00C00004), A5 
                move.l  #$940193C0, (A5)
                move.l  #$96F09500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7C00, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
                bsr     Process_DMA             ; Offset_0x0015CA
                jsr     Offset_0x0012AC
                move.w  #$0000, ($00A11100)
                bsr     S1_Pal_Cycle_Special_Stage ; Offset_0x005584 
                tst.w   ($FFFFF614).w
                beq     Offset_0x000F16
                subq.w  #$01, ($FFFFF614).w
Offset_0x000F16: 
                rts               
Offset_0x000F18:
                move.w  #$0100, ($00A11100)
Offset_0x000F20:                
                btst	#$00, ($00A11100)
                bne.s   Offset_0x000F20
                bsr     ReadJoypads             ; Offset_0x00132C
                tst.b   ($FFFFF64E).w
                bne.s   Offset_0x000F5A
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
                bra.s   Offset_0x000F7E
Offset_0x000F5A: 
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9540, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)                 
Offset_0x000F7E:     
                move.w  ($FFFFF624).w, (A5)
                lea     ($00C00004), A5 
                move.l  #$940193C0, (A5)
                move.l  #$96F09500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7C00, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                lea     ($00C00004), A5 
                move.l  #$94019340, (A5)
                move.l  #$96FC9500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                bsr     Process_DMA             ; Offset_0x0015CA
                jsr     Offset_0x0012AC
                move.w  #$0000, ($00A11100)
                movem.l ($FFFFEE00).w, D0-D7
                movem.l D0-D7, ($FFFFEE60).w
                movem.l ($FFFFEE50).w, D0-D1
                movem.l D0-D1, ($FFFFEEA0).w
                bsr     LoadTilesAsYouMove     ; Offset_0x006E1A
                jsr     HudUpdate              ; Offset_0x023012
                bsr     Offset_0x0017FE
                rts
Offset_0x001004:
                bsr     Offset_0x0010BE
                addq.b  #$01, ($FFFFF628).w
                move.b  #$0E, ($FFFFF62A).w
                rts
Offset_0x001014:
                bsr     Offset_0x0010BE 
                move.w  ($FFFFF624).w, (A5)
                bra     Offset_0x0017FE 
Offset_0x001020:
                move.w  #$0100, ($00A11100)
Offset_0x001028:                
                btst	#$00, ($00A11100)
                bne.s   Offset_0x001028
                bsr     ReadJoypads             ; Offset_0x00132C
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                lea     ($00C00004), A5 
                move.l  #$94019340, (A5)
                move.l  #$96FC9500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                lea     ($00C00004), A5 
                move.l  #$940193C0, (A5)
                move.l  #$96F09500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7C00, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5) 
                jsr     Offset_0x0012AC
                move.w  #$0000, ($00A11100)
                tst.w   ($FFFFF614).w
                beq     Offset_0x0010BC
                subq.w  #$01, ($FFFFF614).w
Offset_0x0010BC:
                rts
Offset_0x0010BE:                 
                move.w	#$0100, ($00A11100)
Offset_0x0010C6:                
                btst	#$00, ($00A11100) 
                bne.s   Offset_0x0010C6 
                bsr     ReadJoypads             ; Offset_0x00132C 
                tst.b   ($FFFFF64E).w
                bne.s   Offset_0x001100
                lea     ($00C00004), A5 
                move.l  #$94009340, (A5)
                move.l  #$96FD9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5)
                bra.s   Offset_0x001124 
Offset_0x001100:   
                lea     ($00C00004), A5
                move.l  #$94009340, (A5)
                move.l  #$96FD9540, (A5)
                move.w  #$977F, (A5)
                move.w  #$C000, (A5)
                move.w  #$0080, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5)
Offset_0x001124: 
                lea     ($00C00004), A5
                move.l  #$94019340, (A5)
                move.l  #$96FC9500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)
                move.w  #$0083, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5)
                lea     ($00C00004), A5
                move.l  #$940193C0, (A5)
                move.l  #$96F09500, (A5)
                move.w  #$977F, (A5)
                move.w  #$7C00, (A5)
                move.w  #$0083, ($FFFFF640).w
                move.w  ($FFFFF640).w, (A5)
                jsr     Offset_0x0012AC
                move.w	#$0000, ($00A11100)
                rts
VBlank: ; Offset_0x00117C:                
                tst.w   ($FFFFF644).w
                beq     Offset_0x001226
                tst.w   ($FFFFFFD8).w   
                beq     VBlank_Not2pMode        ; Offset_0x001228
                move.w  #$0000, ($FFFFF644).w 
                move.l  A5, -(A7)
                move.l  D0, -(A7)
Offset_0x001196                
                move.w  ($00C00004), D0
                andi.w  #$0004, D0
                beq.s   Offset_0x001196
                move.w  ($FFFFF60C).w, D0
                andi.b  #$BF, D0
                move.w  D0, ($00C00004)
                move.w  #$8228, ($00C00004) 
                move.l  #$40000010, ($00C00004) 
                move.l  ($FFFFEEEC).w, ($00C00000)
                move.w	#$0100, ($00A11100) 
Offset_0x0011D2:
                btst    #$00, ($00A11100)
                bne.s   Offset_0x0011D2
                lea     ($00C00004), A5 
                move.l  #$94019340, (A5)
                move.l  #$96EE9580, (A5)
                move.w  #$977F, (A5)
                move.w  #$7800, (A5)
                move.w  #$0083, ($FFFFF640).w 
                move.w  ($FFFFF640).w, (A5) 
                move.w	#$0000, ($00A11100) 
Offset_0x001208:
                move.w  ($00C00004), D0
                andi.w  #$0004, D0
                beq.s   Offset_0x001208
                move.w  ($FFFFF60C).w, D0
                ori.b   #$40, D0
                move.w  D0, ($00C00004)
                move.l  (A7)+, D0
                move.l  (A7)+, A5
Offset_0x001226:
                rte
VBlank_Not2pMode: ; Offset_0x001228:  
                move    #$2700, SR 
                move.w  #$0000, ($FFFFF644).w  
                movem.l A0-A1, -(A7)
                lea     ($00C00000), A1 
                lea     ($FFFFFA80).w, A0 
                move.l  #$C0000000, $0004(A1)  
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)
                move.l  (A0)+, (A1)   
                move.l  (A0)+, (A1) 
                move.l  (A0)+, (A1)                                                
                move.w  #$8ADF, $0004(A1)
                movem.l (A7)+, A0-A1
                tst.b   ($FFFFF64F).w
                bne.s   Offset_0x00129A
                rte
Offset_0x00129A: 
                clr.b   ($FFFFF64F).w 
                movem.l  D0-A6, -(A7)   
                bsr     DemoTime                ; Offset_0x000E56  
                movem.l (A7)+, D0-A6 
                rte    
Offset_0x0012AC:
                lea     ($00FFFFE0), A0
                lea	($00A01B80), A1
                cmpi.b  #$80, $0008(A1)
                bne.s   Offset_0x0012E0
                move.b	$0000(A0), D0
                beq.s   Offset_0x0012E0
                clr.b   $0000(A0)
                move.b	D0, D1
                subi.b	#$FE, D1
                bcs.s   Offset_0x0012DC
                addi.b  #$7F, D1
                move.b  D1, $0003(A1)
                bra.s   Offset_0x0012E0
Offset_0x0012DC: 
                move.b	D0, $0008(A1)               
Offset_0x0012E0:                
                moveq	#$03, D1
Offset_0x0012E2:                
                move.b  $01(A0, D1), D0
                beq.s   Offset_0x0012F6
                tst.b   $09(A1, D1)
                bne.s   Offset_0x0012F6
                clr.b   $01(A0, D1)                 
                move.b  D0, $09(A1, D1)  
Offset_0x0012F6:                
                dbra    D1, Offset_0x0012E2
                rts 
JoypadInit: ; Offset_0x0012FC:
                move.w  #$0100, ($00A11100)  
JoypadInit_Z80Wait: ; Offset_0x001304:
                btst    #$00, ($00A11100)
                bne.s   JoypadInit_Z80Wait      ; Offset_0x001304
                moveq   #$40, D0
                move.b  D0, ($00A10009)
                move.b  D0, ($00A1000B)
                move.b  D0, ($00A1000D)   
                move.w  #$0000, ($00A11100)                         
                rts
ReadJoypads: ; Offset_0x00132C:               
                lea     ($FFFFF604).w, A0
                lea     ($00A10003), A1
                bsr.s   Joypad_Read             ; Offset_0x00133A
                addq.w  #$02, A1
Joypad_Read: ; Offset_0x00133A:
                move.b  #$00, (A1) 
                nop
                nop
                move.b  (A1), D0
                lsl.b   #$02, D0  
                andi.b  #$C0, D0
                move.b  #$40, (A1) 
                nop
                nop  
                move.b  (A1), D1
                andi.b  #$3F, D1 
                or.b    D1, D0  
                not.b   D0   
                move.b  (A0), D1
                eor.b   D0, D1
                move.b  D0, (A0)+ 
                and.b   D0, D1
                move.b  D1, (A0)+ 
                rts                  
VDPRegSetup: ; Offset_0x001368:                
                lea     ($00C00004), A0
                lea     ($00C00000), A1
                lea     (VDPRegSetup_Array), A2 ; Offset_0x0013F2
                moveq   #$12, D7 
VDPRegSetup_Loop: ; Offset_0x00137C:                 
                move.w  (A2)+, (A0)
                dbra    D7, VDPRegSetup_Loop    ; Offset_0x00137C
                move    (VDPReg_01), D0         ; Offset_0x0013F4
                move.w  D0, ($FFFFF60C).w 
                move.w  #$8ADF, ($FFFFF624).w
                moveq   #$00, D0
                move.l  #$40000010, ($00C00004)
                move.w  D0, (A1)
                move.w  D0, (A1)
                move.l  #$C0000000, ($00C00004)
                move.w  #$003F, D7
VDPRegSetup_ClearCRAM: ; Offset_0x0013B0:                 
                move.w  D0, (A1)
                dbra    D7, VDPRegSetup_ClearCRAM ; Offset_0x0013B0
                clr.l   ($FFFFF616).w
                clr.l   ($FFFFF61A).w
                move.l  D1, -(A7)
                lea     ($00C00004), A5
                move.w  #$8F01, (A5)
                move.l  #$94FF93FF, (A5)
                move.w  #$9780, (A5)
                move.l  #$40000080, (A5)
                move.w  #$0000, ($00C00000)
VDPRegSetup_DMAWait: ; Offset_0x0013E2:                
                move.w  (A5), D1
                btst    #$01, D1
                bne.s   VDPRegSetup_DMAWait     ; Offset_0x0013E2
                move.w  #$8F02, (A5)
                move.l  (A7)+, D1
                rts
VDPRegSetup_Array: ; Offset_0x0013F2:
                dc.w    $8004
VDPReg_01: ; Offset_0x0013F4:  
                dc.w    $8134, $8230, $8328, $8407, $857C, $8600, $8700, $8800
                dc.w    $8900, $8A00, $8B00, $8C81, $8D3F, $8E00, $8F02, $9001
                dc.w    $9100, $9200
ClearScreen: ; Offset_0x001418:
                move.w  #$0100, ($00A11100)
Offset_0x001420:     
                btst    #$00, ($00A11100)
                bne.s   Offset_0x001420                    
                lea     ($00C00004), A5  
                move.w  #$8F01, (A5)  
                move.l  #$940F93FF, (A5)
                move.w  #$9780, (A5)
                move.l  #$40000083, (A5)
                move.w  #$0000, ($00C00000) 
ClearScreen_DMAWait: ; Offset_0x00144C:                   
                move.w  (A5), D1  
                btst    #$01, D1 
                bne.s   ClearScreen_DMAWait     ; Offset_0x00144C 
                move.w  #$8F02, (A5)  
                lea     ($00C00004), A5    
                move.w  #$8F01, (A5)  
                move.l  #$940F93FF, (A5)
                move.w  #$9780, (A5) 
                move.l  #$60000083, (A5) 
                move.w  #$0000, ($00C00000)
ClearScreen_DMA2Wait: ; Offset_0x00147A:                  
                move.w  (A5), D1   
                btst    #$01, D1 
                bne.s   ClearScreen_DMA2Wait    ; Offset_0x00147A 
                move.w  #$8F02, (A5)   
                clr.l   ($FFFFF616).w
                clr.l   ($FFFFF61A).w
                lea     ($FFFFF800).w, A1   
                moveq   #$00, D0
                move.w  #$00A0, D1
ClearScreen_ClearBuffer1: ; Offset_0x001498:                
                move.l  D0, (A1)+
                dbra    D1, ClearScreen_ClearBuffer1 ; Offset_0x001498  
                lea     ($FFFFE000).w, A1 
                moveq   #$00, D0
                move.w  #$0100, D1
ClearScreen_ClearBuffer2: ; Offset_0x0014A8:                
                move.l  D0, (A1)+
                dbra    D1, ClearScreen_ClearBuffer2 ; Offset_0x0014A8                 
                move.w  #$0000, ($00A11100)
                rts
SoundDriverLoad: ; Offset_0x0014B8:
                nop
                jmp     Sound_Driver            ; Offset_0x0EC000
Play_Music: ; Offset_0x0014C0: 
                move.b  D0, ($FFFFFFE0).w     
                rts 
Play_Sfx: ; Offset_0x0014C6:  
                move.b  D0, ($FFFFFFE1).w     
                rts 
;Play_Unknow: ;Offset_0x0014CC: ;  
                move.b  D0, ($FFFFFFE2).w     
                rts   
Pause: ; Offset_0x0014D2: 
                nop 
                tst.b   ($FFFFFE12).w
                beq     Unpause                 ; Offset_0x001536
                tst.w   ($FFFFF63A).w
                bne.s   Pause_AlreadyPaused     ; Offset_0x0014EA
                btst    #$07, ($FFFFF605).w
                beq.s   Pause_DoNothing         ; Offset_0x00153C
Pause_AlreadyPaused: ; Offset_0x0014EA:                 
                move.w  #$0001, ($FFFFF63A).w 
                move.b  #$FE, ($FFFFFFE0).w
Pause_Loop: ; Offset_0x0014F6:                
                move.b  #$10, ($FFFFF62A).w 
                bsr     DelayProgram            ; Offset_0x0031D8
                tst.b   ($FFFFFFD1).w
                beq.s   Pause_CheckStart        ; Offset_0x001528
                btst    #$06, ($FFFFF605).w
                beq.s   Pause_CheckBC           ; Offset_0x001518
                move.b  #$04, ($FFFFF600).w
                nop 
                bra.s   Offset_0x001530
Pause_CheckBC: ; Offset_0x001518: 
                btst    #$04, ($FFFFF604).w 
                bne.s   Offset_0x00153E  
                btst    #$05, ($FFFFF605).w  
                bne.s   Offset_0x00153E          
Pause_CheckStart: ; Offset_0x001528:  
                btst    #$07, ($FFFFF605).w 
                beq.s   Pause_Loop              ; Offset_0x0014F6
Offset_0x001530: 
                move.b  #$FF, ($FFFFFFE0).w  
Unpause: ; Offset_0x001536:                
                move.w  #$0000, ($FFFFF63A).w 
Pause_DoNothing: ; Offset_0x00153C:                 
                rts       
Offset_0x00153E:   
                move.w  #$0001, ($FFFFF63A).w 
                move.b  #$FF, ($FFFFFFE0).w 
                rts 
ShowVDPGraphics: ; Offset_0x00154C: 
                lea     ($00C00000), A6 
                move.l  #$00800000, D4
ShowVDPGraphics_LineLoop: ; Offset_0x001558:                  
                move.l  D0, $0004(A6) 
                move.w  D1, D3   
ShowVDPGraphics_TileLoop: ; Offset_0x00155E:                
                move.w  (A1)+, (A6)                                                             
                dbra    D3, ShowVDPGraphics_TileLoop ; Offset_0x00155E
                add.l   D4, D0
                dbra    D2, ShowVDPGraphics_LineLoop ; Offset_0x001558
                rts
DMA_68KtoVRAM: ; Offset_0x00156C:                
                move.l  ($FFFFDCFC).w, A1
                cmpa.w  #($FFFFDCFC), A1
                beq.s   DMA_68KtoVRAM_NoDMA     ; Offset_0x0015C8
                move.w  #$9300, D0 
                move.b  D3, D0
                move.w  D0, (A1)+
                move.w  #$9400, D0 
                lsr.w   #$08, D3 
                move.b  D3, D0
                move.w  D0, (A1)+
                move.w  #$9500, D0 
                lsr.l   #$01, D1
                move.b  D1, D0
                move.w  D0, (A1)+
                move.w  #$9600, D0 
                lsr.l   #$08, D1
                move.b  D1, D0
                move.w  D0, (A1)+
                move.w  #$9700, D0 
                lsr.l   #$08, D1
                move.b  D1, D0
                move.w  D0, (A1)+
                andi.l  #$0000FFFF, D2
                lsl.l   #$02, D2
                lsr.w   #$02, D2
                swap.w  D2
                ori.l   #$40000080, D2
                move.l  D2, (A1)+
                move.l  A1, ($FFFFDCFC).w
                cmpa.w  #$FFFFDCFC, A1
                beq.s   DMA_68KtoVRAM_NoDMA     ; Offset_0x0015C8
                move.w  #$0000, (A1)
DMA_68KtoVRAM_NoDMA: ; Offset_0x0015C8:                 
                rts
Process_DMA: ; Offset_0x0015CA:
                lea     ($00C00004), A5
                lea     ($FFFFDC00).w, A1
Process_DMA_Loop: ; Offset_0x0015D4:                
                move.w  (A1)+, D0
                beq.s   Process_DMA_End         ; Offset_0x0015EC
                move.w  D0, (A5)
                move.w  (A1)+, (A5)
                move.w  (A1)+, (A5)
                move.w  (A1)+, (A5)
                move.w  (A1)+, (A5)
                move.w  (A1)+, (A5)
                move.w  (A1)+, (A5)
                cmpa.w  #$FFFFDCFC, A1
                bne.s   Process_DMA_Loop        ; Offset_0x0015D4
Process_DMA_End: ; Offset_0x0015EC:                   
                move.w  #$0000, ($FFFFDC00).w
                move.l  #$FFFFDC00, ($FFFFDCFC).w                
                rts 
NemesisDec: ; Offset_0x0015FC: ; Decompress Sprites to VRam                 
                movem.l D0-D7/A0/A1/A3-A5, -(A7) 
                lea     (NemesisDec_Output), A3 ; Offset_0x0016BE
                lea     ($00C00000), A4
                bra.s   Offset_0x001618
NemesisDec_ToRAM: ;Offset_0x00160E: ; Decompress Sprites to Ram
                movem.l D0-D7/A0/A1/A3-A5, -(A7)
                lea     (NemesisDec_OutputRAM), A3 ; Offset_0x0016D4
Offset_0x001618:                
                lea     ($FFFFAA00).w, A1
                move.w  (A0)+, D2
                lsl.w   #$01, D2
                bcc.s   Offset_0x001626
                adda.w  #$000A, A3
Offset_0x001626:         
                lsl.w   #$02, D2
                move.w  D2, A5
                moveq   #$08, D3 
                moveq   #$00, D2
                moveq   #$00, D4  
                bsr     NemesisDec4             ; Offset_0x0016EA
                move.b  (A0)+, D5
                asl.w   #$08, D5
                move.b  (A0)+, D5
                move.w  #$0010, D6 
                bsr.s   Offset_0x001646
                movem.l (A7)+, D0-D7/A0/A1/A3-A5
                rts 
Offset_0x001646:  
                move.w  D6, D7
                subq.w  #$08, D7
                move.w  D5, D1
                lsr.w   D7, D1
                cmpi.b  #$FC, D1
                bcc.s   Offset_0x001692
                andi.w  #$00FF, D1
                add.w   D1, D1
                move.b  $00(A1, D1), D0
                ext.w   D0
                sub.w   D0, D6
                cmpi.w  #$0009, D6
                bcc.s   Offset_0x00166E
                addq.w  #$08, D6
                asl.w   #$08, D5
                move.b  (A0)+, D5
Offset_0x00166E:                
                move.b  $01(A1, D1), D1
                move.w  D1, D0
                andi.w  #$000F, D1
                andi.w  #$00F0, D0
Offset_0x00167C:                  
                lsr.w   #$04, D0
Offset_0x00167E:                 
                lsl.l   #$04, D4
                or.b    D1, D4
                subq.w  #$01, D3
                bne.s   Offset_0x00168C
                jmp     (A3) 
NemesisDec3: ; Offset_0x001688:                
                moveq   #$00, D4
                moveq   #$08, D3 
Offset_0x00168C:                
                dbra    D0, Offset_0x00167E
                bra.s   Offset_0x001646   
Offset_0x001692: 
                subq.w  #$06, D6  
                cmpi.w  #$0009, D6 
                bcc.s   Offset_0x0016A0
                addq.w  #$08, D6
                asl.w   #$08, D5
                move.b  (A0)+, D5
Offset_0x0016A0:        
                subq.w  #$07, D6 
                move.w  D5, D1  
                lsr.w   D6, D1
                move.w  D1, D0
                andi.w  #$000F, D1
                andi.w  #$0070, D0
                cmpi.w  #$0009, D6  
                bcc.s   Offset_0x00167C  
                addq.w  #$08, D6   
                asl.w   #$08, D5   
                move.b  (A0)+, D5  
                bra.s   Offset_0x00167C 
NemesisDec_Output: ; Offset_0x0016BE:
                move.l  D4, (A4) 
                subq.w  #$01, A5
                move.w  A5, D4 
                bne.s   NemesisDec3             ; Offset_0x001688
                rts 
;NemesisDec_Output_XOR: ; Offset_0x0016C8:
                eor.l   D4, D2
                move.l  D2, (A4)  
                subq.w  #$01, A5  
                move.w  A5, D4  
                bne.s   NemesisDec3             ; Offset_0x001688
                rts 
NemesisDec_OutputRAM: ; Offset_0x0016D4:
                move.l  D4, (A4)+
                subq.w  #$01, A5    
                move.w  A5, D4   
                bne.s   NemesisDec3             ; Offset_0x001688
                rts  
;NemesisDec_OutputRAM_XOR: ; Offset_0x0016DE:
                eor.l   D4, D2
                move.l  D2, (A4)+   
                subq.w  #$01, A5   
                move.w  A5, D4 
                bne.s   NemesisDec3             ; Offset_0x001688
                rts                      
NemesisDec4: ; Offset_0x0016EA: 
                move.b  (A0)+, D0 
Offset_0x0016EC:                
                cmpi.b  #$FF, D0
                bne.s   Offset_0x0016F4
                rts
Offset_0x0016F4:                
                move.w  D0, D7
Offset_0x0016F6:                
                move.b  (A0)+, D0  
                cmpi.b  #$80, D0
                bcc.s   Offset_0x0016EC 
                move.b  D0, D1                 
                andi.w  #$000F, D7
                andi.w  #$0070, D1
                or.w    D1, D7
                andi.w  #$000F, D0
                move.b  D0, D1     
                lsl.w   #$08, D1
                or.w    D1, D7
                moveq   #$08, D1
                sub.w   D0, D1
                bne.s   Offset_0x001724
                move.b  (A0)+, D0 
                add.w   D0, D0
                move.w  D7, $00(A1, D0)
                bra.s   Offset_0x0016F6                 
Offset_0x001724:   
                move.b  (A0)+, D0  
                lsl.w   D1, D0
                add.w   D0, D0
                moveq   #$01, D5
                lsl.w   D1, D5
                subq.w  #$01, D5 
Offset_0x001730:                
                move.w  D7, $00(A1, D0) 
                addq.w  #$02, D0
                dbra    D5, Offset_0x001730
                bra.s   Offset_0x0016F6
LoadPLC: ; Offset_0x00173C:
                movem.l A1/A2, -(A7)
                lea     (ArtLoadCues), A1       ; Offset_0x024420
                add.w   D0, D0 
                move.w  $00(A1, D0), D0  
                lea     $00(A1, D0), A1
                lea     ($FFFFF680).w, A2 
Offset_0x001754:                
                tst.l   (A2)
                beq.s   Offset_0x00175C
                addq.w  #$06, A2
                bra.s   Offset_0x001754
Offset_0x00175C:                
                move.w  (A1)+, D0
                bmi.s   Offset_0x001768
Offset_0x001760:                
                move.l  (A1)+, (A2)+
                move.w  (A1)+, (A2)+
                dbra    D0, Offset_0x001760
Offset_0x001768:                 
                movem.l (A7)+, A1/A2
                rts   
LoadPLC2: ; Offset_0x00176E:                  
                movem.l A1/A2, -(A7)  
                lea     (ArtLoadCues), A1       ; Offset_0x024420
                add.w   D0, D0  
                move.w  $00(A1, D0), D0 
                lea     $00(A1, D0), A1
                bsr.s   ClearPLC                ; Offset_0x00179A
                lea     ($FFFFF680).w, A2 
                move.w  (A1)+, D0
                bmi.s   Offset_0x001794
Offset_0x00178C:                 
                move.l  (A1)+, (A2)+
                move.w  (A1)+, (A2)+
                dbra    D0, Offset_0x00178C 
Offset_0x001794:   
                movem.l (A7)+, A1/A2 
                rts            
ClearPLC: ; Offset_0x00179A:
                lea     ($FFFFF680).w, A2
                moveq   #$1F, D0
Offset_0x0017A0:                
                clr.l   (A2)+
                dbra    D0, Offset_0x0017A0
                rts
RunPLC: ; Offset_0x0017A8:                
                tst.l   ($FFFFF680).w
                beq.s   Offset_0x0017FC
                tst.w   ($FFFFF6F8).w
                bne.s   Offset_0x0017FC
                move.l  ($FFFFF680).w, A0
                lea     NemesisDec_Output(PC), A3 ; Offset_0x0016BE              
                nop
                lea     ($FFFFAA00).w, A1
                move.w  (A0)+, D2
                bpl.s   Offset_0x0017CA
                adda.w  #$000A, A3 
Offset_0x0017CA: 
                andi.w  #$7FFF, D2
                move.w  D2, ($FFFFF6F8).w
                bsr     NemesisDec4             ; Offset_0x0016EA
                move.b  (A0)+, D5
                asl.w   #$08, D5
                move.b  (A0)+, D5  
                moveq   #$10, D6
                moveq   #$00, D0
                move.l  A0, ($FFFFF680).w
                move.l  A3, ($FFFFF6E0).w
                move.l  D0, ($FFFFF6E4).w
                move.l  D0, ($FFFFF6E8).w
                move.l  D0, ($FFFFF6EC).w
                move.l  D5, ($FFFFF6F0).w 
                move.l  D6, ($FFFFF6F4).w           
Offset_0x0017FC:    
                rts                           
Offset_0x0017FE:
                tst.w   ($FFFFF6F8).w 
                beq     Offset_0x001896
                move.w  #$0009, ($FFFFF6FA).w                    
                moveq   #$00, D0
                move.w  ($FFFFF684).w, D0 
                addi.w  #$0120, ($FFFFF684).w
                bra.s   Offset_0x001832                   
Offset_0x00181A:
                tst.w   ($FFFFF6F8).w 
                beq.s   Offset_0x001896
                move.w  #$0003, ($FFFFF6FA).w 
                moveq   #$00, D0
                move.w  ($FFFFF684).w, D0 
                addi.w  #$0060, ($FFFFF684).w
Offset_0x001832:                
                lea     ($00C00004), A4
                lsl.l   #$02, D0
                lsr.w   #$02, D0
                ori.w   #$4000, D0
                swap.w  D0
                move.l  D0, (A4)
                subq.w  #$04, A4
                move.l  ($FFFFF680).w, A0
                move.l  ($FFFFF6E0).w, A3
                move.l  ($FFFFF6E4).w, D0
                move.l  ($FFFFF6E8).w, D1
                move.l  ($FFFFF6EC).w, D2 
                move.l  ($FFFFF6F0).w, D5
                move.l  ($FFFFF6F4).w, D6
                lea     ($FFFFAA00).w, A1
Offset_0x001866:                
                move.w  #$0008, A5
                bsr     NemesisDec3             ; Offset_0x001688
                subq.w  #$01, ($FFFFF6F8).w
                beq.s   Offset_0x001898
                subq.w  #$01, ($FFFFF6FA).w
                bne.s   Offset_0x001866
                move.l  A0, ($FFFFF680).w
                move.l  A3, ($FFFFF6E0).w
                move.l  D0, ($FFFFF6E4).w
                move.l  D1, ($FFFFF6E8).w
                move.l  D2, ($FFFFF6EC).w
                move.l  D5, ($FFFFF6F0).w
                move.l  D6, ($FFFFF6F4).w
Offset_0x001896:                 
                rts               
Offset_0x001898:                 
                lea     ($FFFFF680).w, A0
                moveq   #$15, D0
Offset_0x00189E:                
                move.l  $0006(A0), (A0)+
                dbra    D0, Offset_0x00189E
                rts
RunPLC_ROM: ; Offset_0x0018A8:
                lea     (ArtLoadCues), A1       ; Offset_0x024420
                add.w   D0, D0
                move.w  $00(A1, D0), D0
                lea     $00(A1, D0), A1
                move.w  (A1)+, D1
Offset_0x0018BA:                
                move.l  (A1)+, A0
                moveq   #$00, D0
                move.w  (A1)+, D0
                lsl.l   #$02, D0
                lsr.w   #$02, D0
                ori.w   #$4000, D0
                swap.w  D0
                move.l  D0, ($00C00004)
                bsr     NemesisDec              ; Offset_0x0015FC
                dbra    D1, Offset_0x0018BA
                rts
EnigmaDec: ; Offset_0x0018DA:
                movem.l D0-D7/A1-A5, -(A7)                 
                move.w  D0, A3
                move.b  (A0)+, D0
                ext.w   D0
                move.w  D0, A5
                move.b  (A0)+, D4
                lsl.b   #$03, D4
                move.w  (A0)+, A2
                adda.w  A3, A2
                move.w  (A0)+, A4
                adda.w  A3, A4
                move.b  (A0)+, D5 
                asl.w   #$08, D5
                move.b  (A0)+, D5 
                moveq   #$10, D6
Offset_0x0018FA:                
                moveq   #$07, D0
                move.w  D6, D7
                sub.w   D0, D7
                move.w  D5, D1
                lsr.w   D7, D1
                andi.w  #$007F, D1
                move.w  D1, D2
                cmpi.w  #$0040, D1
                bcc.s   Offset_0x001914
                moveq   #$06, D0
                lsr.w   #$01, D2
Offset_0x001914:                
                bsr     Offset_0x001A48
                andi.w  #$000F, D2
                lsr.w   #$04, D1
                add.w   D1, D1
                jmp     Offset_0x001970(PC, D1)
Offset_0x001924:                 
                move.w  A2, (A1)+
                addq.w  #$01, A2
                dbra    D2, Offset_0x001924
                bra.s   Offset_0x0018FA
Offset_0x00192E:
                move.w  A4, (A1)+
                dbra    D2, Offset_0x00192E
                bra.s   Offset_0x0018FA
Offset_0x001936:                 
                bsr     Offset_0x001998 
Offset_0x00193A: 
                move.w  D1, (A1)+ 
                dbra    D2, Offset_0x00193A  
                bra.s   Offset_0x0018FA 
Offset_0x001942:                
                bsr     Offset_0x001998 
Offset_0x001946:  
                move.w  D1, (A1)+ 
                addq.w  #$01, D1
                dbra    D2, Offset_0x001946 
                bra.s   Offset_0x0018FA 
Offset_0x001950:                 
                bsr     Offset_0x001998  
Offset_0x001954:  
                move.w  D1, (A1)+ 
                subq.w  #$01, D1 
                dbra    D2, Offset_0x001954  
                bra.s   Offset_0x0018FA 
Offset_0x00195E:
                cmpi.w  #$000F, D2
                beq.s   Offset_0x001980
Offset_0x001964:                
                bsr     Offset_0x001998  
                move.w  D1, (A1)+  
                dbra    D2, Offset_0x001964  
                bra.s   Offset_0x0018FA             
Offset_0x001970: 
                bra.s   Offset_0x001924
                bra.s   Offset_0x001924
                bra.s   Offset_0x00192E
                bra.s   Offset_0x00192E
                bra.s   Offset_0x001936
                bra.s   Offset_0x001942
                bra.s   Offset_0x001950
                bra.s   Offset_0x00195E                  
Offset_0x001980:  
                subq.w  #$01, A0
                cmpi.w  #$0010, D6
                bne.s   Offset_0x00198A
                subq.w  #$01, A0
Offset_0x00198A:  
                move.w  A0, D0  
                lsr.w   #$01, D0
                bcc.s   Offset_0x001992
                addq.w  #$01, A0
Offset_0x001992:  
                movem.l (A7)+, D0-D7/A1-A5
                rts             
Offset_0x001998:                
                move.w  A3, D3
                move.b  D4, D1
                add.b   D1, D1
                bcc.s   Offset_0x0019AA
                subq.w  #$01, D6
                btst    D6, D5
                beq.s   Offset_0x0019AA
                ori.w   #$8000, D3
Offset_0x0019AA:                 
                add.b   D1, D1
                bcc.s   Offset_0x0019B8
                subq.w  #$01, D6
                btst    D6, D5
                beq.s   Offset_0x0019B8
                addi.w  #$4000, D3
Offset_0x0019B8:        
                add.b   D1, D1
                bcc.s   Offset_0x0019C6
                subq.w  #$01, D6
                btst    D6, D5
                beq.s   Offset_0x0019C6
                addi.w  #$2000, D3
Offset_0x0019C6:  
                add.b   D1, D1
                bcc.s   Offset_0x0019D4
                subq.w  #$01, D6
                btst    D6, D5
                beq.s   Offset_0x0019D4
                ori.w   #$1000, D3
Offset_0x0019D4:    
                add.b   D1, D1
                bcc.s   Offset_0x0019E2
                subq.w  #$01, D6
                btst    D6, D5
                beq.s   Offset_0x0019E2
                ori.w   #$0800, D3
Offset_0x0019E2:   
                move.w  D5, D1   
                move.w  D6, D7 
                sub.w   A5, D7 
                bcc.s   Offset_0x001A12
                move.w  D7, D6 
                addi.w  #$0010, D6
                neg.w   D7
                lsl.w   D7, D1
                move.b  (A0), D5
                rol.b   D7, D5
                add.w   D7, D7
                and.w   Offset_0x001A28-$02(PC, D7), D5
                add.w   D5, D1
Offset_0x001A00:                
                move.w  A5, D0
                add.w   D0, D0  
                and.w   Offset_0x001A28-$02(PC, D0), D1 
                add.w   D3, D1
                move.b  (A0)+, D5
                lsl.w   #$08, D5
                move.b  (A0)+, D5
                rts
Offset_0x001A12:
                beq.s   Offset_0x001A24
                lsr.w   D7, D1
                move.w  A5, D0
                add.w   D0, D0 
                and.w   Offset_0x001A28-$02(PC, D0), D1
                add.w   D3, D1
                move.w  A5, D0
                bra.s   Offset_0x001A48
Offset_0x001A24: 
                moveq   #$10, D6
                bra.s   Offset_0x001A00
Offset_0x001A28:  
                dc.w    $0001, $0003, $0007, $000F, $001F, $003F, $007F, $00FF
                dc.w    $01FF, $03FF, $07FF, $0FFF, $1FFF, $3FFF, $7FFF, $FFFF     
Offset_0x001A48:    
                sub.w   D0, D6
                cmpi.w  #$0009, D6
                bcc.s   Offset_0x001A56
                addq.w  #$08, D6
                asl.w   #$08, D5
                move.b  (A0)+, D5
Offset_0x001A56:                
                rts
KosinskiDec: ; Offset_0x001A58:                
                subq.l  #$02, A7
                move.b  (A0)+, $0001(A7)
                move.b  (A0)+, (A7)
                move.w  (A7), D5
                moveq   #$0F, D4
Offset_0x001A64:                 
                lsr.w   #$01, D5
                move    SR, D6
                dbra    D4, Offset_0x001A76
                move.b  (A0)+, $0001(A7)
                move.b  (A0)+, (A7)
                move.w  (A7), D5
                moveq   #$0F, D4
Offset_0x001A76: 
                move    D6, CCR  
                bcc.s   Offset_0x001A7E
                move.b  (A0)+, (A1)+
                bra.s   Offset_0x001A64
Offset_0x001A7E: 
                moveq   #$00, D3  
                lsr.w   #$01, D5 
                move    SR, D6 
                dbra    D4, Offset_0x001A92   
                move.b  (A0)+, $0001(A7)  
                move.b  (A0)+, (A7) 
                move.w  (A7), D5 
                moveq   #$0F, D4                                 
Offset_0x001A92:                  
                move    D6, CCR 
                bcs.s   Offset_0x001AC2
                lsr.w   #$01, D5
                dbra    D4, Offset_0x001AA6
                move.b  (A0)+, $0001(A7)
                move.b  (A0)+, (A7) 
                move.w  (A7), D5
                moveq   #$0F, D4
Offset_0x001AA6:  
                roxl.w  #$01, D3 
                lsr.w   #$01, D5 
                dbra    D4, Offset_0x001AB8
                move.b  (A0)+, $0001(A7)
                move.b  (A0)+, (A7) 
                move.w  (A7), D5
                moveq   #$0F, D4 
Offset_0x001AB8: 
                roxl.w  #$01, D3 
                addq.w  #$01, D3
                moveq   #$FFFFFFFF, D2
                move.b  (A0)+, D2
                bra.s   Offset_0x001AD8
Offset_0x001AC2: 
                move.b  (A0)+, D0 
                move.b  (A0)+, D1 
                moveq   #$FFFFFFFF, D2
                move.b  D1, D2 
                lsl.w   #$05, D2
                move.b  D0, D2
                andi.w  #$0007, D1
                beq.s   Offset_0x001AE4
                move.b  D1, D3 
                addq.w  #$01, D3 
Offset_0x001AD8:
                move.b  $00(A1, D2), D0
                move.b  D0, (A1)+
                dbra    D3, Offset_0x001AD8 
                bra.s   Offset_0x001A64                 
Offset_0x001AE4:   
                move.b  (A0)+, D1
                beq.s   Offset_0x001AF4
                cmpi.b  #$01, D1
                beq     Offset_0x001A64
                move.b  D1, D3 
                bra.s   Offset_0x001AD8
Offset_0x001AF4:
                addq.l  #$02, A7
                rts
UnknownDec: ; Offset_0x001AF8:                
                moveq   #$00, D0
                move.w  #$07FF, D4
                moveq   #$00, D5
                moveq   #$00, D6
                move.w  A3, D7
                subq.w  #$01, D2
                beq     Offset_0x001E98
                subq.w  #$01, D2
                beq     Offset_0x001E1A
                subq.w  #$01, D2
                beq     Offset_0x001D9C
                subq.w  #$01, D2
                beq     Offset_0x001D1E
                subq.w  #$01, D2
                beq     Offset_0x001CA2
                subq.w  #$01, D2
                beq     Offset_0x001C24
                subq.w  #$01, D2
                beq     Offset_0x001BAA
Offset_0x001B2E:                
                move.b  (A0)+, D1
                add.b   D1, D1
                bcs.s   Offset_0x001BA8
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   Offset_0x001B50
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   Offset_0x001B44
                move.b  (A6)+, (A2)+
Offset_0x001B44: 
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001B98
                bra     Offset_0x001CA2                
Offset_0x001B50: 
                lsl.w   #$03, D1
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   Offset_0x001B64
                add.b   D1, D1
                bcs.s   Offset_0x001B7A
                bra.s   Offset_0x001B7C
Offset_0x001B64:
                add.b   D1, D1
                bcc.s   Offset_0x001B78
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   Offset_0x001B8A
                subq.w  #$06, D0
                bmi.s   Offset_0x001B90
Offset_0x001B72:                
                move.b  (A6)+, (A2)+
                dbra    D0, Offset_0x001B72
Offset_0x001B78:         
                move.b  (A6)+, (A2)+
Offset_0x001B7A: 
                move.b  (A6)+, (A2)+
Offset_0x001B7C:  
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+ 
                cmp.w   A2, D7
                bls.s   Offset_0x001BA0
                bra     Offset_0x001E98
Offset_0x001B8A: 
                move.w  #$0000, D0
                rts
Offset_0x001B90:  
                move.w  #$FFFF, D0
                moveq   #$01, D2
                rts
Offset_0x001B98: 
                move.w  #$0001, D0
                moveq   #$05, D2
                rts
Offset_0x001BA0:   
                move.w  #$0001, D0
                moveq   #$01, D2
                rts
Offset_0x001BA8:     
                move.b  (A1)+, (A2)+ 
Offset_0x001BAA:                
                add.b   D1, D1
                bcs.s   Offset_0x001C22
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   Offset_0x001BCA
                move.b  (A1)+, D5 
                sub.l   D5, A6
                add.b   D1, D1
                bcc.s   Offset_0x001BBE
                move.b  (A6)+, (A2)+ 
Offset_0x001BBE:   
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001C12
                bra     Offset_0x001D1E
Offset_0x001BCA:
                lsl.w   #$03, D1
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6 
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   Offset_0x001BDE
                add.b   D1, D1
                bcs.s   Offset_0x001BF4
                bra.s   Offset_0x001BF6
Offset_0x001BDE: 
                add.b   D1, D1
                bcc.s   Offset_0x001BF2
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   Offset_0x001C04
                subq.w  #$06, D0
                bmi.s   Offset_0x001C0A
Offset_0x001BEC:                
                move.b  (A6)+, (A2)+
                dbra    D0, Offset_0x001BEC
Offset_0x001BF2: 
                move.b  (A6)+, (A2)+                 
Offset_0x001BF4:
                move.b  (A6)+, (A2)+ 
Offset_0x001BF6:
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001C1A
                bra     Offset_0x001B2E
Offset_0x001C04: 
                move.w  #$0000, D0
                rts
Offset_0x001C0A:   
                move.w  #$FFFF, D0
                moveq   #$00, D2
                rts
Offset_0x001C12:
                move.w  #$0001, D0
                moveq   #$04, D2
                rts
Offset_0x001C1A: 
                move.w  #$0001, D0
                moveq   #$00, D2
                rts
Offset_0x001C22: 
                move.b  (A1)+, (A2)+
Offset_0x001C24:    
                add.b   D1, D1 
                bcs.s   Offset_0x001CA0
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   Offset_0x001C44
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   Offset_0x001C38
                move.b  (A6)+, (A2)+
Offset_0x001C38:    
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001C90
                bra     Offset_0x001D9C
Offset_0x001C44: 
                lsl.w   #$03, D1
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   Offset_0x001C5A
                move.b  (A0)+, D1
                add.b   D1, D1
                bcs.s   Offset_0x001C72
                bra.s   Offset_0x001C74
Offset_0x001C5A: 
                move.b  (A0)+, D1
                add.b   D1, D1
                bcc.s   Offset_0x001C70
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   Offset_0x001C82
                subq.w  #$06, D0
                bmi.s   Offset_0x001C88
Offset_0x001C6A:  
                move.b  (A6)+, (A2)+
                dbra    D0, Offset_0x001C6A
Offset_0x001C70:  
                move.b  (A6)+, (A2)+
Offset_0x001C72:
                move.b  (A6)+, (A2)+
Offset_0x001C74: 
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001C98
                bra     Offset_0x001BAA
Offset_0x001C82:
                move.w  #$0000, D0
                rts
Offset_0x001C88:  
                move.w  #$FFFF, D0
                moveq   #$07, D2
                rts
Offset_0x001C90:  
                move.w  #$0001, D0
                moveq   #$03, D2
                rts
Offset_0x001C98:    
                move.w  #$0001, D0
                moveq   #$07, D2
                rts
Offset_0x001CA0:  
                move.b  (A1)+, (A2)+  
Offset_0x001CA2:                  
                add.b   D1, D1
                bcs.s   Offset_0x001D1C 
                move.l  A2, A6   
                add.b   D1, D1 
                bcs.s   Offset_0x001CC2
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   Offset_0x001CB6
                move.b  (A6)+, (A2)+ 
Offset_0x001CB6:   
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7 
                bls.s   Offset_0x001D0C
                bra     Offset_0x001E1A
Offset_0x001CC2:  
                lsl.w   #$03, D1
                move.b  (A0)+, D1
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   Offset_0x001CD8
                add.b   D1, D1
                bcs.s   Offset_0x001CEE
                bra.s   Offset_0x001CF0
Offset_0x001CD8: 
                add.b   D1, D1
                bcc.s   Offset_0x001CEC
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   Offset_0x001CFE
                subq.w  #$06, D0
                bmi.s   Offset_0x001D04
Offset_0x001CE6:
                move.b  (A6)+, (A2)+
                dbra    D0, Offset_0x001CE6              
Offset_0x001CEC:      
                move.b  (A6)+, (A2)+
Offset_0x001CEE:
                move.b  (A6)+, (A2)+
Offset_0x001CF0: 
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+  
                cmp.w   A2, D7   
                bls.s   Offset_0x001D14    
                bra     Offset_0x001C24      
Offset_0x001CFE: 
                move.w  #$0000, D0
                rts
Offset_0x001D04:    
                move.w  #$FFFF, D0
                moveq   #$06, D2
                rts
Offset_0x001D0C:
                move.w  #$0001, D0
                moveq   #$02, D2
                rts
Offset_0x001D14:   
                move.w  #$0001, D0
                moveq   #$06, D2
                rts
Offset_0x001D1C:               
                move.b  (A1)+, (A2)+  
Offset_0x001D1E: 
                add.b   D1, D1 
                bcs.s   Offset_0x001D9A
                move.l  A2, A6
                add.b   D1, D1 
                bcs.s   Offset_0x001D3E
                move.b  (A1)+, D5 
                suba.l  D5, A6
                add.b   D1, D1 
                bcc.s   Offset_0x001D32
                move.b  (A6)+, (A2)+  
Offset_0x001D32:    
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001D8A
                bra     Offset_0x001E98
Offset_0x001D3E:
                lsl.w   #$02, D1
                move.b  (A0)+, D1
                add.w   D1, D1
                move.w  D1, D6
                and.w   D4, D6 
                move.b  (A1)+, D6 
                suba.l  D6, A6
                add.b   D1, D1 
                bcs.s   Offset_0x001D56
                add.b   D1, D1 
                bcs.s   Offset_0x001D6C
                bra.s   Offset_0x001D6E
Offset_0x001D56:  
                add.b   D1, D1
                bcc.s   Offset_0x001D6A
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   Offset_0x001D7C
                subq.w  #$06, D0
                bmi.s   Offset_0x001D82
Offset_0x001D64:   
                move.b  (A6)+, (A2)+
                dbra    D0, Offset_0x001D64
Offset_0x001D6A:     
                move.b  (A6)+, (A2)+
Offset_0x001D6C: 
                move.b  (A6)+, (A2)+
Offset_0x001D6E: 
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001D92
                bra     Offset_0x001CA2
Offset_0x001D7C:  
                move.w  #$0000, D0
                rts
Offset_0x001D82:   
                move.w  #$FFFF, D0
                moveq   #$05, D2
                rts           
Offset_0x001D8A:
                move.w  #$0001, D0
                moveq   #$01, D2
                rts  
Offset_0x001D92:  
                move.w  #$0001, D0
                moveq   #$05, D2
                rts 
Offset_0x001D9A:
                move.b  (A1)+, (A2)+ 
Offset_0x001D9C:                 
                add.b   D1, D1
                bcs.s   Offset_0x001E18
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   Offset_0x001DBC
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   Offset_0x001DB0
                move.b  (A6)+, (A2)+
Offset_0x001DB0:  
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001E08
                bra     Offset_0x001B2E
Offset_0x001DBC:
                add.w   D1, D1
                move.b  (A0)+, D1
                lsl.w   #$02, D1  
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   Offset_0x001DD4
                add.b   D1, D1
                bcs.s   Offset_0x001DEA
                bra.s   Offset_0x001DEC
Offset_0x001DD4:  
                add.b   D1, D1
                bcc.s   Offset_0x001DE8
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   Offset_0x001DFA
                subq.w  #$06, D0
                bmi.s   Offset_0x001E00
Offset_0x001DE2:                
                move.b  (A6)+, (A2)+
                dbra    D0, Offset_0x001DE2
Offset_0x001DE8:  
                move.b  (A6)+, (A2)+
Offset_0x001DEA:
                move.b  (A6)+, (A2)+
Offset_0x001DEC:
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001E10
                bra     Offset_0x001D1E
Offset_0x001DFA: 
                move.w  #$0000, D0
                rts 
Offset_0x001E00:   
                move.w  #$FFFF, D0
                moveq   #$04, D2                
                rts
Offset_0x001E08:
                move.w  #$0001, D0
                moveq   #$08, D2                
                rts
Offset_0x001E10:  
                move.w  #$0001, D0
                moveq   #$04, D2                
                rts
Offset_0x001E18:
                move.b  (A1)+, (A2)+
Offset_0x001E1A:                  
                add.b   D1, D1
                bcs.s   Offset_0x001E96
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   Offset_0x001E3C
                move.b  (A0)+, D1
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   Offset_0x001E30
                move.b  (A6)+, (A2)+
Offset_0x001E30:   
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001E86
                bra     Offset_0x001BAA
Offset_0x001E3C:
                move.b  (A0)+, D1
                lsl.w   #$03, D1
                move.w  D1, D6 
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   Offset_0x001E52
                add.b   D1, D1
                bcs.s   Offset_0x001E68
                bra.s   Offset_0x001E6A
Offset_0x001E52:
                add.b   D1, D1
                bcc.s   Offset_0x001E66
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   Offset_0x001E78
                subq.w  #$06, D0
                bmi.s   Offset_0x001E7E
Offset_0x001E60:                 
                move.b  (A6)+, (A2)+
                dbra    D0, Offset_0x001E60                
Offset_0x001E66:       
                move.b  (A6)+, (A2)+
Offset_0x001E68:   
                move.b  (A6)+, (A2)+
Offset_0x001E6A:
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001E8E
                bra     Offset_0x001D9C
Offset_0x001E78:  
                move.w  #$0000, D0
                rts
Offset_0x001E7E:    
                move.w  #$FFFF, D0
                moveq   #$03, D2
                rts
Offset_0x001E86:
                move.w  #$0001, D0
                moveq   #$07, D2
                rts       
Offset_0x001E8E:          
                move.w  #$0001, D0
                moveq   #$03, D2
                rts 
Offset_0x001E96:
                move.b  (A1)+, (A2)+                  
Offset_0x001E98:
                add.b   D1, D1
                bcs.s   Offset_0x001F12
                move.b  (A0)+, D1
                move.l  A2, A6
                add.b   D1, D1
                bcs.s   Offset_0x001EBA
                move.b  (A1)+, D5
                suba.l  D5, A6
                add.b   D1, D1
                bcc.s   Offset_0x001EAE
                move.b  (A6)+, (A2)+ 
Offset_0x001EAE:  
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+ 
                cmp.w   A2, D7
                bls.s   Offset_0x001F02
                bra     Offset_0x001C24
Offset_0x001EBA:  
                lsl.w   #$03, D1
                move.w  D1, D6
                and.w   D4, D6
                move.b  (A1)+, D6
                suba.l  D6, A6
                add.b   D1, D1
                bcs.s   Offset_0x001ECE
                add.b   D1, D1
                bcs.s   Offset_0x001EE4
                bra.s   Offset_0x001EE6
Offset_0x001ECE: 
                add.b   D1, D1
                bcc.s   Offset_0x001EE2
                moveq   #$00, D0
                move.b  (A1)+, D0
                beq.s   Offset_0x001EF4
                subq.w  #$06, D0
                bmi.s   Offset_0x001EFA
Offset_0x001EDC:                
                move.b  (A6)+, (A2)+ 
                dbra    D0, Offset_0x001EDC
Offset_0x001EE2: 
                move.b  (A6)+, (A2)+ 
Offset_0x001EE4: 
                move.b  (A6)+, (A2)+ 
Offset_0x001EE6: 
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+ 
                move.b  (A6)+, (A2)+
                cmp.w   A2, D7
                bls.s   Offset_0x001F0A
                bra     Offset_0x001E1A
Offset_0x001EF4: 
                move.w  #$0000, D0
                rts
Offset_0x001EFA:  
                move.w  #$FFFF, D0
                moveq   #$02, D2
                rts
Offset_0x001F02: 
                move.w  #$0001, D0
                moveq   #$06, D2
                rts
Offset_0x001F0A:   
                move.w  #$0001, D0
                moveq   #$02, D2
                rts
Offset_0x001F12:                
                move.b  (A1)+, (A2)+ 
                bra     Offset_0x001B2E
PalCycle_Load: ; Offset_0x001F18: ; Rotating Palette routine
                bsr     Offset_0x0024A2
                moveq   #$00, D2
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                move.w  PalCycle(PC, D0), D0    ; Offset_0x001F30
                jmp     PalCycle(PC, D0)        ; Offset_0x001F30
                rts
PalCycle: ; Offset_0x001F30:                
                dc.w    PalCycle_GHz-PalCycle ; $00 - Green Hill 
                dc.w    PalCycle_Null-PalCycle ; $01
                dc.w    PalCycle_Wz-PalCycle ; $02 - Wood
                dc.w    PalCycle_Null-PalCycle ; $03
                dc.w    PalCycle_Mz-PalCycle ; $04 - Metropolis
                dc.w    PalCycle_Mz-PalCycle ; $05 - Metropolis
                dc.w    PalCycle_Null-PalCycle ; $06
                dc.w    PalCycle_HTz-PalCycle ; $07 - Hill Top
                dc.w    PalCycle_HPz-PalCycle ; $08 - Hidden Palace
                dc.w    PalCycle_Null-PalCycle ; $09
                dc.w    PalCycle_OOz-PalCycle ; $0A - Oil Ocean
                dc.w    PalCycle_DHz-PalCycle ; $0B - Dust Hill
                dc.w    PalCycle_CNz-PalCycle ; $0C - Casino Night
                dc.w    PalCycle_CPz-PalCycle ; $0D - Chemical Plant
                dc.w    PalCycle_Null-PalCycle ; $0E - Genocide City
                dc.w    PalCycle_NGHz-PalCycle ; $0F - Neo Green Hill
                dc.w    PalCycle_Null-PalCycle ; $10 - Death Egg
PalCycle_Null: ; Offset_0x001F52:
                rts                     
PalCycle_GHz: ; Offset_0x001F54: ; $00 - Green Hill Rotating Palette routine
                lea     (Pal_GHzCyc), A0        ; Offset_0x002284
                subq.w  #$01, ($FFFFF634).w
                bpl.s   Offset_0x001F80
                move.w  #$0007, ($FFFFF634).w
                move.w  ($FFFFF632).w, D0
                addq.w  #$01, ($FFFFF632).w
                andi.w  #$0003, D0
                lsl.w   #$03, D0
                move.l  $00(A0, D0), ($FFFFFB26).w
                move.l  $04(A0, D0), ($FFFFFB3C).w
Offset_0x001F80:
                rts  
PalCycle_Wz: ; Offset_0x001F82: ; $02 - Wood Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl.s   Offset_0x001FB0
                move.w  #$0002, ($FFFFF634).w
                lea     (Pal_WzCyc), A0         ; Offset_0x002324
                move.w  ($FFFFF632).w, D0
                subq.w  #$02, ($FFFFF632).w
                bcc.s   Offset_0x001FA4
                move.w  #$0006, ($FFFFF632).w                 
Offset_0x001FA4:
                lea     ($FFFFFB66).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
Offset_0x001FB0:                
                rts  
PalCycle_Mz: ; Offset_0x001FB2: ; $04/$05 - Metropolis Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w    
                bpl.s   Offset_0x001FE2
                move.w  #$0011, ($FFFFF634).w
                lea     (Pal_MzCyc1), A0        ; Offset_0x002334
                move.w  ($FFFFF632).w, D0
                addq.w  #$02, ($FFFFF632).w
                cmpi.w  #$000C, ($FFFFF632).w
                bcs.s   Offset_0x001FDA
                move.w  #$0000, ($FFFFF632).w
Offset_0x001FDA:
                lea     ($FFFFFB4A).w, A1
                move.w  $00(A0, D0), (A1)
Offset_0x001FE2:
                subq.w  #$01, ($FFFFF666).w
                bpl.s   Offset_0x002016
                move.w  #$0002, ($FFFFF666).w
                lea     (Pal_MzCyc2), A0        ; Offset_0x002340
                move.w  ($FFFFF652).w, D0
                addq.w  #$02, ($FFFFF652).w
                cmpi.w  #$0006, ($FFFFF652).w
                bcs.s   Offset_0x00200A
                move.w  #$0000, ($FFFFF652).w
Offset_0x00200A:
                lea     ($FFFFFB42).w, A1
                move.l  $00(A0, D0), (A1)+
                move.w  $04(A0, D0), (A1)
Offset_0x002016:
                subq.w  #$01, ($FFFFF668).w
                bpl.s   Offset_0x002046
                move.w  #$0009, ($FFFFF668).w
                lea     (Pal_MzCyc3), A0        ; Offset_0x00234C
                move.w  ($FFFFF654).w, D0
                addq.w  #$02, ($FFFFF654).w
                cmpi.w  #$0014, ($FFFFF654).w
                bcs.s   Offset_0x00203E
                move.w  #$0000, ($FFFFF654).w
Offset_0x00203E:
                lea     ($FFFFFB5E).w, A1
                move.w  $00(A0, D0), (A1)
Offset_0x002046:
                rts                
PalCycle_HTz: ; Offset_0x002048: ; $07 - Hill Top Rotating Palette routine
                lea     (Pal_HTzCyc1), A0       ; Offset_0x0022A4
                subq.w  #$01, ($FFFFF634).w
                bpl.s   Offset_0x00207A
                move.w  #$0000, ($FFFFF634).w
                move.w  ($FFFFF632).w, D0
                addq.w  #$01, ($FFFFF632).w
                andi.w  #$000F, D0
                move.b  Pal_HTzCyc2(PC, D0), ($FFFFF635).w  ; Offset_0x00207C
                lsl.w   #$03, D0
                move.l  $00(A0, D0), ($FFFFFB26).w
                move.l  $04(A0, D0), ($FFFFFB3C).w 
Offset_0x00207A:
                rts                  
Pal_HTzCyc2: ; Offset_0x00207C:
                dc.w    $0B0B, $0B0A, $080A, $0B0B, $0B0B, $0D0F, $0D0B, $0B0B
PalCycle_HPz: ; Offset_0x00208C: ; $08 - Hidden Palace Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl.s   Offset_0x0020CC
                move.w  #$0004, ($FFFFF634).w
                lea     (Pal_HPzCyc1), A0       ; Offset_0x002360
                move.w  ($FFFFF632).w, D0
                subq.w  #$02, ($FFFFF632).w
                bcc.s   Offset_0x0020AE
                move.w  #$0006, ($FFFFF632).w
Offset_0x0020AE:
                lea     ($FFFFFB72).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
                lea     (Pal_HPzCyc2), A0       ; Offset_0x002370
                lea     ($FFFFFAF2).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
Offset_0x0020CC:
                rts             
PalCycle_OOz: ; Offset_0x0020CE: ; $0A - Oil Ocean Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl.s   Offset_0x0020FA
                move.w  #$0007, ($FFFFF634).w
                lea     (Pal_OOzCyc), A0        ; Offset_0x002380
                move.w  ($FFFFF632).w, D0
                addq.w  #$02, ($FFFFF632).w
                andi.w  #$0006, ($FFFFF632).w
                lea     ($FFFFFB54).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
Offset_0x0020FA:
                rts    
PalCycle_DHz: ; Offset_0x0020FC: ; $0B - Dust Hill Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl.s   Offset_0x002122
                move.w  #$0001, ($FFFFF634).w
                lea     (Pal_DHzCyc), A0        ; Offset_0x002390
                move.w  ($FFFFF632).w, D0
                addq.w  #$02, ($FFFFF632).w
                andi.w  #$0006, ($FFFFF632).w
                move.w  $00(A0, D0), ($FFFFFB36).w
Offset_0x002122:
                rts
PalCycle_CNz: ; Offset_0x002124: ; $0C - Casino Night Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl     Offset_0x0021C2
                move.w  #$0007, ($FFFFF634).w
                lea     (Pal_CNzCyc1), A0       ; Offset_0x002398
                move.w  ($FFFFF632).w, D0
                addq.w  #$02, ($FFFFF632).w
                cmpi.w  #$0006, ($FFFFF632).w
                bcs.s   Offset_0x00214E
                move.w  #$0000, ($FFFFF632).w
Offset_0x00214E:
                lea     $00(A0, D0), A0
                lea     ($FFFFFB00).w, A1
                move.w  $0000(A0), $004A(A1)
                move.w  $0006(A0), $004C(A1)
                move.w  $000C(A0), $004E(A1)
                move.w  $0012(A0), $0056(A1)
                move.w  $0018(A0), $0058(A1)
                move.w  $001E(A0), $005A(A1)
                lea     (Pal_CNzCyc2), A0       ; Offset_0x0023BC
                lea     $00(A0, D0), A0
                move.w  $0000(A0), $0064(A1)
                move.w  $0006(A0), $0066(A1)
                move.w  $000C(A0), $0068(A1)
                lea     (Pal_CNzCyc3), A0       ; Offset_0x0023CE
                move.w  ($FFFFF652).w, D0
                addq.w  #$02, ($FFFFF652).w
                cmpi.w  #$001C, ($FFFFF652).w
                bcs.s   Offset_0x0021B2
                move.w  #$0000, ($FFFFF652).w
Offset_0x0021B2:
                lea     ($FFFFFB72).w, A1
                move.w  $00(A0, D0), (A1)+
                move.w  $1C(A0, D0), (A1)+
                move.w  $38(A0, D0), (A1)+
Offset_0x0021C2:
                rts                
PalCycle_CPz: ; Offset_0x0021C4: ; $0D - Chemical Plant Rotating Palette routine
                subq.w  #$01, ($FFFFF634).w
                bpl.s   Offset_0x002234
                move.w  #$0007, ($FFFFF634).w
                lea     (Pal_CPzCyc1), A0       ; Offset_0x002422
                move.w  ($FFFFF632).w, D0
                addq.w  #$06, ($FFFFF632).w
                cmpi.w  #$0036, ($FFFFF632).w
                bcs.s   Offset_0x0021EC
                move.w  #$0000, ($FFFFF632).w
Offset_0x0021EC:
                lea     ($FFFFFB78).w, A1
                move.l  $00(A0, D0), (A1)+
                move.w  $04(A0, D0), (A1)
                lea     (Pal_CPzCyc2), A0       ; Offset_0x002458
                move.w  ($FFFFF652).w, D0
                addq.w  #$02, ($FFFFF652).w
                cmpi.w  #$002A, ($FFFFF652).w
                bcs.s   Offset_0x002214
                move.w  #$0000, ($FFFFF652).w
Offset_0x002214:
                move.w  $00(A0, D0), ($FFFFFB7E).w
                lea     (Pal_CPzCyc3), A0       ; Offset_0x002482
                move.w  ($FFFFF654).w, D0
                addq.w  #$02, ($FFFFF654).w
                andi.w  #$001E, ($FFFFF654).w
                move.w  $00(A0, D0), ($FFFFFB5E).w
Offset_0x002234:
                rts                
PalCycle_NGHz: ; Offset_0x002236: ; $0F - Neo Green Hill Rotating Palette routine
                lea     (Pal_GHzCyc), A0        ; Offset_0x002284
                subq.w  #$01, ($FFFFF634).w
                bpl.s   Offset_0x002262
                move.w  #$0005, ($FFFFF634).w
                move.w  ($FFFFF632).w, D0
                addq.w  #$01, ($FFFFF632).w
                andi.w  #$0003, D0
                lsl.w   #$03, D0
                lea     ($FFFFFB44).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
Offset_0x002262:
                rts  
;Pal_S1TitleCyc: ;Offset_0x002264: ; Left Over - Unused Rotating Palette
                dc.w    $0C42, $0E86, $0ECA, $0EEC, $0EEC, $0C42, $0E86, $0ECA
                dc.w    $0ECA, $0EEC, $0C42, $0E86, $0E86, $0ECA, $0EEC, $0C42                        
Pal_GHzCyc: ; Offset_0x002284: ; $00 - Green Hill Rotating Palette               
                dc.w    $0A86, $0E86, $0EA8, $0ECA, $0ECA, $0A86, $0E86, $0EA8
                dc.w    $0EA8, $0ECA, $0A86, $0E86, $0E86, $0EA8, $0ECA, $0A86
Pal_HTzCyc1: ; Offset_0x0022A4: ; $07 - Hill Top Rotating Palette                 
                dc.w    $000E, $006E, $00AE, $00EE, $00EE, $000E, $006E, $00AE
                dc.w    $02CE, $00EE, $000E, $006E, $006E, $04EE, $08EE, $002E
                dc.w    $004E, $008E, $06EE, $0AEE, $08EE, $002E, $006E, $04EE
                dc.w    $02CE, $00EE, $000E, $006E, $006E, $02CE, $00EE, $000E
                dc.w    $000E, $006E, $00AE, $00EE, $00CE, $000C, $004E, $008E
                dc.w    $006E, $00AC, $000A, $002E, $000C, $004C, $008E, $0008
                dc.w    $000A, $002E, $006E, $00AC, $00CE, $000C, $004E, $008E
                dc.w    $00AE, $00EE, $000E, $006E, $006E, $00AE, $00EE, $000E
Pal_WzCyc: ; Offset_0x002324: ; $02 - Wood Rotating Palette 
                dc.w    $0248, $046A, $048C, $06CE, $0248, $046A, $048C, $06CE
Pal_MzCyc1: ; Offset_0x002334: ; $04/$05 - Metropolis Rotating Palette 
                dc.w    $0006, $0008, $000A, $000C, $000A, $0008                 
Pal_MzCyc2: ; Offset_0x002340: ; $04/$05 - Metropolis Rotating Palette 
                dc.w    $0422, $0866, $0ECC, $0422, $0866, $0ECC 
Pal_MzCyc3: ;Offset_0x00234C: ; $04/$05 - Metropolis Rotating Palette 
                dc.w    $00A0, $0000, $00EE, $0000, $002E, $0000, $0E2E, $0000
                dc.w    $0E80, $0000
Pal_HPzCyc1: ; Offset_0x002360: ; $08 - Hidden Palace Rotating Palette 
                dc.w    $0E44, $0E82, $0EA8, $0EEE, $0E44, $0E82, $0EA8, $0EEE
Pal_HPzCyc2: ; Offset_0x002370: ; $08 - Hidden Palace Rotating Palette 
                dc.w    $0E84, $0EA6, $0EC6, $0EE6, $0E84, $0EA6, $0EC6, $0EE6
Pal_OOzCyc: ; Offset_0x002380: ; $0A - Oil Ocean Rotating Palette 
                dc.w    $0400, $0602, $0804, $0806, $0400, $0602, $0804, $0806
Pal_DHzCyc: ; Offset_0x002390: ; $0B - Dust Hill Rotating Palette 
                dc.w    $000C, $006E, $00CE, $08EE
Pal_CNzCyc1: ; Offset_0x002398: ; $0C - Casino Night Rotating Palette 
                dc.w    $000C, $00CC, $004C, $004C, $000C, $00CC, $00CC, $004C
                dc.w    $000C, $00EC, $0080, $00C4, $00C4, $00EC, $0080, $0080
                dc.w    $00C4, $00EC
Pal_CNzCyc2: ; Offset_0x0023BC: ; $0C - Casino Night Rotating Palette 
                dc.w    $0044, $0088, $00EE, $0088, $00EE, $0044, $00EE, $0044
                dc.w    $0088
Pal_CNzCyc3: ; Offset_0x0023CE: ; $0C - Casino Night Rotating Palette  
                dc.w    $00EC, $0EEE, $00EA, $00E4, $06C0, $0CC4, $0E80, $0E40
                dc.w    $0E04, $0C08, $0C2E, $000E, $006E, $00AE, $00AE, $00EC
                dc.w    $0EEE, $00EA, $00E4, $06C0, $0CC4, $0E80, $0E40, $0E04
                dc.w    $0C08, $0C2E, $000E, $006E, $00EE, $00AE, $00EC, $0EEE
                dc.w    $00EA, $00E4, $06C0, $0CC4, $0E80, $0E40, $0E04, $0C08
                dc.w    $0C2E, $000E
Pal_CPzCyc1: ; Offset_0x002422: ; $0D - Chemical Plant Rotating Palette 
                dc.w    $0E40, $0C00, $0C00, $0E60, $0C20, $0C00, $0E40, $0E40
                dc.w    $0C00, $0C20, $0E60, $0C20, $0C00, $0E40, $0C40, $0C00
                dc.w    $0C20, $0E40, $0C00, $0C00, $0E60, $0C20, $0C00, $0E40
                dc.w    $0E20, $0C00, $0C20
Pal_CPzCyc2: ; Offset_0x002458: ; $0D - Chemical Plant Rotating Palette 
                dc.w    $00E0, $00C2, $00A4, $0086, $0068, $004A, $002C, $000E
                dc.w    $020C, $040A, $0608, $0806, $0A04, $0C02, $0E00, $0C20
                dc.w    $0A40, $0860, $0680, $04A0, $02C0
Pal_CPzCyc3: ; Offset_0x002482: ; $0D - Chemical Plant Rotating Palette   
                dc.w    $000E, $000C, $000A, $0008, $0006, $0004, $0002, $0004
                dc.w    $0006, $0008, $000A, $000C, $000E, $002E, $004E, $002E     
Offset_0x0024A2:
                tst.b   ($FFFFF65F).w
                beq.s   Offset_0x0024DE
                bmi.s   Offset_0x0024E0
                subq.b  #$01, ($FFFFF65E).w 
                bpl.s   Offset_0x0024DE
                move.b  #$03, ($FFFFF65E).w
                lea     (Offset_0x002516), A0
                move.w  ($FFFFF65C).w, D0
                addq.w  #$08, ($FFFFF65C).w
                cmpi.w  #$0030, ($FFFFF65C).w
                bcs.s   Offset_0x0024D2
                move.b  #$FF, ($FFFFF65F).w
Offset_0x0024D2:
                lea     ($FFFFFB04).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
Offset_0x0024DE:
                rts
Offset_0x0024E0:
                subq.b  #$01, ($FFFFF65E).w
                bpl.s   Offset_0x0024DE
                move.b  #$07, ($FFFFF65E).w
                lea     (Offset_0x002516), A0
                move.w  ($FFFFF65C).w, D0
                addq.w  #$08, ($FFFFF65C).w
                cmpi.w  #$0078, ($FFFFF65C).w
                bcs.s   Offset_0x002508
                move.w  #$0030, ($FFFFF65C).w
Offset_0x002508:
                lea     ($FFFFFB04).w, A1
                move.l  $00(A0, D0), (A1)+
                move.l  $04(A0, D0), (A1)
                rts
Offset_0x002516:              
                dc.w    $0A22, $0C42, $0E44, $0E66, $0844, $0A64, $0E66, $0E88
                dc.w    $0666, $0A86, $0E88, $0EAA, $0488, $0AA8, $0EAA, $0ECC
                dc.w    $04AA, $0ACA, $0ECC, $0EEE, $04CC, $0AEC, $0EEE, $0EEE
                dc.w    $04EE, $0AEE, $0EEE, $0EEE, $06EE, $0EEE, $0EEE, $0EEE
                dc.w    $08EE, $0EEE, $0EEE, $0EEE, $06EE, $0CEE, $0EEE, $0EEE
                dc.w    $04EE, $0AEE, $0EEE, $0EEE, $02EE, $08EE, $0CEE, $0EEE
                dc.w    $00EE, $06EE, $0AEE, $0EEE, $00EE, $04EE, $08EE, $0CEE
                dc.w    $00EE, $06EE, $0AEE, $0EEE, $00EE, $08EE, $0CEE, $0EEE
Pal_FadeTo: ; Offset_0x002596:
                move.w  #$003F, ($FFFFF626).w
Pal_FadeTo2: ; Offset_0x00259C:                
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                moveq   #$00, D1
                move.b  ($FFFFF627).w, D0
Offset_0x0025AE:                
                move.w  D1, (A0)+
                dbra    D0, Offset_0x0025AE
                move.w  #$0015, D4
Offset_0x0025B8:                
                move.b  #$12, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                bsr.s   Pal_FadeIn              ; Offset_0x0025CE
                bsr     RunPLC                  ; Offset_0x0017A8
                dbra    D4, Offset_0x0025B8
                rts
Pal_FadeIn: ; Offset_0x0025CE:                
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                lea     ($FFFFFB80).w, A1
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                adda.w  D0, A1
                move.b  ($FFFFF627).w, D0
Offset_0x0025E4:                
                bsr.s   Pal_AddColor            ; Offset_0x00260E
                dbra    D0, Offset_0x0025E4
                tst.b   ($FFFFF730).w
                beq.s   Offset_0x00260C
                moveq   #$00, D0
                lea     ($FFFFFA80).w, A0
                lea     ($FFFFFA00).w, A1
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                adda.w  D0, A1
                move.b  ($FFFFF627).w, D0
Offset_0x002606:                 
                bsr.s   Pal_AddColor            ; Offset_0x00260E                 
                dbra    D0, Offset_0x002606
Offset_0x00260C:                
                rts
Pal_AddColor: ; Offset_0x00260E:  
                move.w  (A1)+, D2
                move.w  (A0), D3
                cmp.w   D2, D3
                beq.s   Pal_NoAdd               ; Offset_0x002636
                move.w  D3, D1
                addi.w  #$0200, D1                 
                cmp.w   D2, D1
                bhi.s   Pal_AddGreen            ; Offset_0x002624
                move.w  D1, (A0)+
                rts 
Pal_AddGreen: ; Offset_0x002624:
                move.w  D3, D1
                addi.w  #$0020, D1
                cmp.w   D2, D1
                bhi.s   Pal_AddRed              ; Offset_0x002632
                move.w  D1, (A0)+ 
                rts
Pal_AddRed: ; Offset_0x002632:               
                addq.w  #$02, (A0)+
                rts 
Pal_NoAdd: ; Offset_0x002636:
                addq.w  #$02, A0
                rts
Pal_FadeFrom: ; Offset_0x00263A:
                move.w  #$003F, ($FFFFF626).w
                move.w  #$0015, D4
Offset_0x002644:
                move.b  #$12, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                bsr.s   Pal_FadeOut             ; Offset_0x00265A
                bsr     RunPLC                  ; Offset_0x0017A8
                dbra    D4, Offset_0x002644
                rts
Pal_FadeOut: ; Offset_0x00265A:                
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                move.b  ($FFFFF627).w, D0
Offset_0x00266A:
                bsr.s   Pal_DecColor            ; Offset_0x002688
                dbra    D0, Offset_0x00266A
                moveq   #$00, D0
                lea     ($FFFFFA80).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                move.b  ($FFFFF627).w, D0
Offset_0x002680:                
                bsr.s   Pal_DecColor            ; Offset_0x002688  
                dbra    D0, Offset_0x002680
                rts
Pal_DecColor: ; Offset_0x002688:
                move.w  (A0), D2
                beq.s   Pal_NoDec               ; Offset_0x0026B4
                move.w  D2, D1
                andi.w  #$000E, D1
                beq.s   Pal_DecGreen            ; Offset_0x002698
                subq.w  #$02, (A0)+
                rts
Pal_DecGreen: ; Offset_0x002698:
                move.w  D2, D1
                andi.w  #$00E0, D1
                beq.s   Pal_DecBlue             ; Offset_0x0026A6
                subi.w  #$0020, (A0)+
                rts
Pal_DecBlue: ; Offset_0x0026A6:
                move.w  D2, D1
                andi.w  #$0E00, D1
                beq.s   Pal_NoDec               ; Offset_0x0026B4
                subi.w  #$0200, (A0)+
                rts
Pal_NoDec: ; Offset_0x0026B4:
                addq.w  #2, A0
                rts 
Pal_MakeWhite: ; Offset_0x0026B8:               ; Special Stage Blank Screen
                move.w  #$003F, ($FFFFF626).w
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                move.w  #$0EEE, D1
                move.b  ($FFFFF627).w, D0
Offset_0x0026D2:                
                move.w  D1, (A0)+
                dbra    D0, Offset_0x0026D2
                move.w  #$0015, D4
Offset_0x0026DC:                
                move.b  #$12, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                bsr.s   Pal_WhiteToBlack        ; Offset_0x0026F2
                bsr     RunPLC                  ; Offset_0x0017A8
                dbra    D4, Offset_0x0026DC
                rts
Pal_WhiteToBlack: ; Offset_0x0026F2:
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                lea     ($FFFFFB80).w, A1
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                adda.w  D0, A1
                move.b  ($FFFFF627).w, D0
Offset_0x002708:               
                bsr.s   Pal_DecColor2           ; Offset_0x002732
                dbra    D0, Offset_0x002708
                tst.b   ($FFFFF730).w
                beq.s   Offset_0x002730
                moveq   #$00, D0
                lea     ($FFFFFA80).w, A0
                lea     ($FFFFFA00).w, A1
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                adda.w  D0, A1
                move.b  ($FFFFF627).w, D0
Offset_0x00272A:                
                bsr.s   Pal_DecColor2           ; Offset_0x002732
                dbra    D0, Offset_0x00272A
Offset_0x002730:
                rts
Pal_DecColor2: ; Offset_0x002732:
                move.w  (A1)+, D2
                move.w  (A0), D3
                cmp.w   D2, D3
                beq.s   Offset_0x00275E
                move.w  D3, D1
                subi.w  #$0200, D1
                bcs.s   Offset_0x00274A
                cmp.w   D2, D1
                bcs.s   Offset_0x00274A
                move.w  D1, (A0)+
                rts
Offset_0x00274A:
                move.w  D3, D1
                subi.w  #$0020, D1
                bcs.s   Offset_0x00275A
                cmp.w   D2, D1
                bcs.s   Offset_0x00275A
                move.w  D1, (A0)+
                rts
Offset_0x00275A:
                subq.w  #$02, (A0)+
                rts
Offset_0x00275E:
                addq.w  #$02, A0
                rts                        ; Special Stage Blank Screen End...
Pal_MakeFlash: ; Offset_0x002762:          ; Called by Special Stage Routine   
                move.w  #$003F, ($FFFFF626).w
                move.w  #$0015, D4
Offset_0x00276C:                
                move.b  #$12, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                bsr.s   Pal_ToWhite             ; Offset_0x002782
                bsr     RunPLC                  ; Offset_0x0017A8
                dbra    D4, Offset_0x00276C
                rts
Pal_ToWhite: ; Offset_0x002782:
                moveq   #$00, D0
                lea     ($FFFFFB00).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                move.b  ($FFFFF627).w, D0
Offset_0x002792:                
                bsr.s   Pal_AddColor2           ; Offset_0x0027B0
                dbra    D0, Offset_0x002792
                moveq   #$00, D0
                lea     ($FFFFFA80).w, A0
                move.b  ($FFFFF626).w, D0
                adda.w  D0, A0
                move.b  ($FFFFF627).w, D0
Offset_0x0027A8:                
                bsr.s   Pal_AddColor2           ; Offset_0x0027B0
                dbra    D0, Offset_0x0027A8
                rts
Pal_AddColor2: ; Offset_0x0027B0:
                move.w  (A0), D2
                cmpi.w  #$0EEE, D2
                beq.s   Offset_0x0027EC
                move.w  D2, D1
                andi.w  #$000E, D1
                cmpi.w  #$000E, D1
                beq.s   Offset_0x0027C8
                addq.w  #$02, (A0)+
                rts
Offset_0x0027C8:
                move.w  D2, D1
                andi.w  #$00E0, D1
                cmpi.w  #$00E0, D1
                beq.s   Offset_0x0027DA
                addi.w  #$0020, (A0)+
                rts
Offset_0x0027DA:
                move.w  D2, D1
                andi.w  #$0E00, D1
                cmpi.w  #$0E00, D1
                beq.s   Offset_0x0027EC
                addi.w  #$0200, (A0)+
                rts
Offset_0x0027EC:
                addq.w  #$02, A0
                rts                 
PalCycle_Sega: ; Offset_0x0027F0: ; "Sega" Logo rotating Palette
                tst.b   ($FFFFF635).w
                bne.s   Offset_0x002850
                lea     ($FFFFFB20).w, A1
                lea     (Pal_Sega1), A0  ; Offset_0x0028A6 ; Load "Sega" Logo Palette
                moveq   #$05, D1
                move.w  ($FFFFF632).w, D0
Offset_0x002806:                
                bpl.s   Offset_0x002810
                addq.w  #$02, A0
                subq.w  #$01, D1
                addq.w  #$02, D0
                bra.s   Offset_0x002806
Offset_0x002810:  
                move.w  D0, D2
                andi.w  #$001E, D2
                bne.s   Offset_0x00281A
                addq.w  #$02, D0
Offset_0x00281A:
                cmpi.w  #$0060, D0
                bcc.s   Offset_0x002824
                move.w  (A0)+, $00(A1, D0)
Offset_0x002824:
                addq.w  #$02, D0
                dbra    D1, Offset_0x002810
                move.w  ($FFFFF632).w, D0
                addq.w  #$02, D0
                move.w  D0, D2
                andi.w  #$001E, D2
                bne.s   Offset_0x00283A
                addq.w  #$02, D0
Offset_0x00283A:
                cmpi.w  #$0064, D0
                blt.s   Offset_0x002848
                move.w  #$0401, ($FFFFF634).w
                moveq   #$FFFFFFF4, D0
Offset_0x002848:
                move.w  D0, ($FFFFF632).w
                moveq   #$01, D0
                rts                  
Offset_0x002850:
                subq.b  #$01, ($FFFFF634).w
                bpl.s   Offset_0x0028A2
                move.b  #$04, ($FFFFF634).w
                move.w  ($FFFFF632).w, D0
                addi.w  #$000C, D0
                cmpi.w  #$0030, D0
                bcs.s   Offset_0x00286E
                moveq   #$00, D0
                rts
Offset_0x00286E:
                move.w  D0, ($FFFFF632).w
                lea     (Pal_Sega2), A0 ; Offset_0x0028B2 ; Load "Sega" Logo Palette
                lea     $00(A0, D0), A0
                lea     ($FFFFFB04).w, A1
                move.l  (A0)+, (A1)+
                move.l  (A0)+, (A1)+
                move.w  (A0)+, (A1)
                lea     ($FFFFFB20).w, A1
                moveq   #$00, D0
                moveq   #$2C, D1
Offset_0x00288E:                
                move.w  D0, D2
                andi.w  #$001E, D2
                bne.s   Offset_0x002898
                addq.w  #$02, D0
Offset_0x002898:
                move.w  (A0), $00(A1, D0)
                addq.w  #$02, D0
                dbra    D1, Offset_0x00288E
Offset_0x0028A2:
                moveq   #$01, D0
                rts
Pal_Sega1: ; Offset_0x0028A6: ; "Sega" Logo Palette              
                dc.w    $0EEE, $0EEA, $0EE4, $0EC0, $0EE4, $0EEA
Pal_Sega2: ; Offset_0x0028B2: ; "Sega" Logo Palette              
                dc.w    $0EEC, $0EEA, $0EEA, $0EEA, $0EEA, $0EEA, $0EEC, $0EEA
                dc.w    $0EE4, $0EC0, $0EC0, $0EC0, $0EEC, $0EEA, $0EE4, $0EC0
                dc.w    $0EA0, $0E60, $0EEA, $0EE4, $0EC0, $0EA0, $0E80, $0E00
PalLoad1: ; Offset_0x0028E2:
                lea     (PalPointers), A1       ; Offset_0x00294E
                lsl.w   #3, D0
                adda.w  D0, A1
                move.l  (A1)+, A2
                move.w  (A1)+, A3
                adda.w  #$0080, A3
                move.w  (A1)+, D7
Offset_0x0028F6:
                move.l  (A2)+, (A3)+
                dbra    D7, Offset_0x0028F6
                rts
PalLoad2: ;Offset_0x0028FE:
                lea     (PalPointers), A1       ; Offset_0x00294E
                lsl.w   #3, D0
                adda.w  D0, A1
                move.l  (A1)+, A2
                move.w  (A1)+, A3
                move.w  (A1)+, D7  
Offset_0x00290E:
                move.l  (A2)+, (A3)+
                dbra    D7, Offset_0x00290E
                rts   
PalLoad3_Water: ; Offset_0x002916: ; Load Underwater palette routine
                lea     (PalPointers), A1       ; Offset_0x00294E
                lsl.w   #$03, D0
                adda.w  D0, A1
                move.l  (A1)+, A2
                move.w  (A1)+, A3
                suba.w  #$0080, A3
                move.w  (A1)+, D7
Offset_0x00292A:
                move.l  (A2)+, (A3)+
                dbra    D7, Offset_0x00292A
                rts
PalLoad4_Water: ;Offset_0x002932:
                lea     (PalPointers), A1       ; Offset_0x00294E
                lsl.w   #$03, D0
                adda.w  D0, A1
                move.l  (A1)+, A2
                move.w  (A1)+, A3
                suba.w  #$0100, A3
                move.w  (A1)+, D7
Offset_0x002946:
                move.l  (A2)+, (A3)+
                dbra    D7, Offset_0x002946
                rts
PalPointers: ; Offset_0x00294E: ; Palette List                
                dc.l    Pal_SegaBg, $FB00001F ; Sega Logo
                dc.l    Pal_TitleScreen, $FB00001F ; Title Screen
                dc.l    Pal_LevelSelectMenu, $FB00001F ; Level Select Menu
                dc.l    Pal_SonicAndTails, $FB000007 ; Sonic & Tails
                dc.l    Pal_GHz, $FB200017 ; Green Hill
                dc.l    Pal_GHz, $FB200017 ; Level $01 
                dc.l    Pal_Wz, $FB200017 ; Wood
                dc.l    Pal_GHz, $FB200017 ; Level $03
                dc.l    Pal_Mz, $FB200017 ; Metropolis
                dc.l    Pal_Mz, $FB200017 ; Metropolis
                dc.l    Pal_CNz2, $FB200017 ; Level $06 / Casino Night Act 2
                dc.l    Pal_HTz, $FB200017 ; Hill Top
                dc.l    Pal_HPz, $FB200017 ; Hidden Palace
                dc.l    Pal_GHz, $FB200017 ; Level $09
                dc.l    Pal_OOz, $FB200017 ; Oil Ocean
                dc.l    Pal_DHz, $FB200017 ; Dust Hill
                dc.l    Pal_CNz1, $FB200017 ; Casino Night
                dc.l    Pal_CPz, $FB200017 ; Chemical Plant
                dc.l    Pal_GHz, $FB200017 ; Genocide City
                dc.l    Pal_NGHz, $FB200017 ; Neo Green Hill
                dc.l    Pal_GHz, $FB200017 ; Death Egg
                dc.l    Pal_HPzWater, $FB00001F ; Hidden Palace Underwater 
                dc.l    Pal_CPzWater, $FB00001F ; Chemical Plant Underwater  
                dc.l    Pal_NGHzWater, $FB00001F ; Neo Green Hill Underwater
                dc.l    Pal_SpecialStage, $FB00001F
Pal_SegaBg: ; Offset_0x002A16: ; Sega Logo
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
Pal_TitleScreen: ; Offset_0x002A96: ; Title Screen
                dc.w    $0C00, $0002, $0800, $0026, $0048, $006C, $008E, $00AE
                dc.w    $04A0, $0040, $0060, $0080, $00A0, $06A4, $0000, $0000
                dc.w    $0C8C, $0800, $0000, $0A66, $0EA8, $0ECA, $0EEE, $00AE
                dc.w    $008E, $006C, $08CE, $0EEC, $004A, $0006, $0000, $0000
                dc.w    $0C00, $0C00, $0E22, $0E44, $0E66, $0E88, $0EEE, $0AAA
                dc.w    $0888, $0666, $0024, $0248, $08AE, $068C, $0000, $0ECA
                dc.w    $0C00, $0600, $0C00, $0E44, $0E66, $0E88, $0EEE, $00AE
                dc.w    $006A, $0026, $00EE, $0EAA, $000C, $0006, $0002, $0000
Pal_LevelSelectMenu: ; Offset_0x002B16: ; Level Select Menu
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0EEE
                dc.w    $0C00, $0024, $0246, $0468, $068A, $08AC, $0ACE, $08AC
                dc.w    $068A, $0468, $0ACE, $0ACE, $0246, $0024, $0000, $0000
                dc.w    $0C00, $0024, $0246, $0468, $068A, $08AC, $0ACE, $08AC
                dc.w    $068A, $0468, $0024, $0246, $08AC, $068A, $0000, $00EE
                dc.w    $0C00, $0024, $0246, $0468, $068A, $08AC, $0ACE, $08AC
                dc.w    $068A, $0468, $0ACE, $0ACE, $0468, $0246, $0002, $0000 
Pal_SonicAndTails: ; Offset_0x002B96: ; Sonic & Tails
                dc.w    $0000, $0000, $0A22, $0C42, $0E44, $0E66, $0EEE, $0AAA
                dc.w    $0888, $0444, $08AE, $046A, $000E, $0008, $00AE, $008E 
Pal_GHz: ; Offset_0x002BB6: ; Green Hill
                dc.w    $0C20, $0000, $0E62, $0A86, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0E86, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0C20, $0002, $0800, $0026, $0048, $006C, $008E, $00AE
                dc.w    $04A0, $0040, $0060, $0080, $00A0, $06A4, $00C6, $00E8
                dc.w    $0C20, $0800, $0000, $0E86, $0ECA, $020A, $0EEE, $0E6E
                dc.w    $0C4C, $0A2A, $0EEC, $0080, $064E, $042C, $00A0, $00E8                  
Pal_Wz: ; Offset_0x002C16: ; Wood              
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0000, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0E88, $0204, $0026, $0248, $046A, $048C, $06CE, $0002
                dc.w    $0000, $0220, $0040, $0060, $0080, $02A0, $06E0, $0A0C
                dc.w    $0E88, $0222, $0424, $0248, $046A, $048C, $06CE, $0402
                dc.w    $0200, $0646, $0060, $0040, $0000, $0220, $0240, $0460
Pal_Mz: ; Offset_0x002C76: ; Metropolis
                dc.w    $0A00, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0222, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0000, $0422, $0866, $0ECC, $0048, $0008, $0ACE, $0004
                dc.w    $0008, $0862, $0642, $0420, $0006, $006E, $000E, $00A0
                dc.w    $0000, $0000, $0CE2, $08C0, $0480, $0260, $0EEE, $04AC
                dc.w    $006A, $0026, $0048, $0004, $0040, $0020, $0008, $000E
Pal_HTz: ; Offset_0x002CD6: ; Hill Top
                dc.w    $0C20, $0000, $0200, $000E, $006E, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0E86, $00EE, $0088, $00AE, $00EE
                dc.w    $0E42, $0200, $0E86, $0640, $0860, $0A82, $0CA4, $0EC6
                dc.w    $0024, $0040, $0062, $0082, $00A4, $006C, $00C4, $00E8
                dc.w    $0E42, $0004, $0E64, $0E86, $0EA8, $0028, $0EEC, $0E6E
                dc.w    $0C4C, $0A2A, $0ECA, $0080, $026E, $004C, $00A4, $00E8   
Pal_HPz: ; Offset_0x002D36: ; Hidden Palace
                dc.w    $0800, $0000, $0242, $0464, $0686, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $08EA, $046A, $00EE, $0088, $0044, $000E
                dc.w    $0200, $0402, $0604, $0806, $0808, $0602, $0620, $0202
                dc.w    $0640, $0026, $0068, $028A, $06CE, $0024, $0046, $04AC
                dc.w    $0200, $0020, $0040, $0060, $0080, $00C0, $04E6, $0EEE
                dc.w    $0602, $0E44, $0E82, $0EA8, $0EEE, $0024, $0046, $04AC
Pal_HPzWater: ; Offset_0x002D96: ; Hidden Palace Underwater   
                dc.w    $0000, $0402, $0A20, $0B40, $0B60, $0B80, $0ECA, $0CA8
                dc.w    $0A84, $0860, $0AA8, $0884, $0428, $0424, $08AA, $088A
                dc.w    $0000, $0202, $0242, $0464, $0686, $0442, $0EAA, $0D88
                dc.w    $0D66, $0A22, $0666, $046A, $06CA, $0484, $0EEE, $000E
                dc.w    $0400, $0A20, $0C22, $0E26, $0E28, $0A22, $0A40, $0C22
                dc.w    $0A60, $0E28, $0E4A, $0E6A, $0CAA, $0E24, $0E26, $0E8A
                dc.w    $0400, $0440, $0660, $0880, $08A0, $08C0, $0AE4, $0EEA
                dc.w    $0A60, $0E84, $0EA6, $0EC6, $0EE6, $0E6A, $0E8A, $0CAA
Pal_OOz: ; Offset_0x002E16: ; Oil Ocean
                dc.w    $006E, $0000, $040A, $082E, $0C8E, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $048E, $00EE, $0088, $06AE, $08CE
                dc.w    $006E, $0200, $0402, $0602, $0804, $0824, $0846, $0A68
                dc.w    $0C8A, $0EEE, $0400, $0602, $0804, $0806, $0400, $00EE
                dc.w    $006E, $0202, $0024, $0026, $0046, $0068, $028A, $04AC
                dc.w    $06CE, $0CEE, $0020, $0040, $0060, $00A0, $06E6, $0E0E
Pal_DHz: ;Offset_0x002E76: ; Dust Hill
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $000E, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0000, $0020, $006C, $004A, $0026, $0200, $0CE6, $06C4
                dc.w    $0482, $0A60, $0060, $06EE, $04CE, $00AA, $0C8E, $0A6C
                dc.w    $0000, $008E, $006C, $004A, $0026, $0402, $00C0, $0060
                dc.w    $0200, $0604, $0826, $0A48, $0EE0, $0A60, $0000, $0000
Pal_CNz1: ; Offset_0x002ED6: ; Casino Night
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0000, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0000, $0000, $0C42, $0E86, $0EC8, $000C, $004C, $00CC
                dc.w    $0800, $084E, $0EEE, $00EC, $00C4, $0080, $0C8E, $000E
                dc.w    $0000, $0000, $0044, $0088, $00EE, $0040, $0060, $0280
                dc.w    $04C0, $00EC, $00AE, $006E, $0EEE, $0000, $0800, $0000
Pal_CNz2: ; Offset_0x002F36: ; Level $06 / Casino Night Act 2
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0000, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0000, $0000, $0C42, $0E86, $0EC8, $000C, $004C, $00CC
                dc.w    $0800, $084E, $0EEE, $00EC, $00C4, $0080, $0C8E, $000E
                dc.w    $0000, $0000, $0044, $0088, $00EE, $0040, $0060, $0280
                dc.w    $04C0, $00EC, $00AE, $006E, $0EEE, $0000, $0800, $0000
Pal_CPz: ; Offset_0x002F96: ; Chemical Plant
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0000, $00EE, $0088, $0EA8, $0000
                dc.w    $0002, $0000, $0006, $0044, $0086, $00AA, $00CC, $00CE
                dc.w    $008E, $004E, $002C, $002A, $0008, $0004, $0EEE, $000E
                dc.w    $0002, $0000, $0222, $0444, $0888, $0AAA, $0EEE, $0E40
                dc.w    $0C00, $0800, $00CE, $028E, $0E40, $0C00, $0C00, $00E0
Pal_CPzWater: ; Offset_0x002FF6: ; Chemical Plant Underwater  
                dc.w    $0C42, $0806, $0E08, $0E28, $0E2A, $0E4C, $0ECE, $0E8E
                dc.w    $0E6E, $0C2A, $0E8E, $0C4E, $080E, $080E, $088E, $086E
                dc.w    $0A06, $0A06, $0E2C, $0E2C, $0E4E, $0A0A, $0E8E, $0E4E
                dc.w    $0E2E, $0E0A, $0E0C, $0C08, $0A8E, $0A2E, $0A06, $0A06
                dc.w    $0802, $0802, $0804, $0802, $0804, $0808, $082A, $082C
                dc.w    $080C, $080C, $080A, $0808, $0806, $0802, $0C4C, $080C
                dc.w    $0A06, $0A06, $0C08, $0E0A, $0E2E, $0E4E, $0E8E, $0E4E
                dc.w    $0E0C, $0C08, $0A6E, $0C2E, $0E06, $0E06, $0E06, $0A86
Pal_NGHz: ;Offset_0x003076: ; Neo Green Hill
                dc.w    $0002, $0000, $0E64, $0A68, $0E86, $0044, $0EEE, $0AAA
                dc.w    $0888, $0444, $0666, $0000, $00EE, $0088, $0EA8, $0ECA
                dc.w    $0020, $0022, $0A86, $0E86, $0EA8, $0ECA, $06EE, $06CC
                dc.w    $02AA, $0044, $0066, $00E8, $00C4, $0080, $0040, $0000
                dc.w    $0020, $0002, $06E2, $02C0, $000E, $0008, $02AE, $008C
                dc.w    $006A, $0024, $0048, $00E8, $00C4, $0080, $0040, $0800
Pal_NGHzWater: ; Offset_0x0030D6: ; Neo Green Hill Underwater
                dc.w    $0020, $0000, $0A24, $0C44, $0E46, $0E68, $0ECC, $0CA8
                dc.w    $0A86, $0642, $0CAE, $086A, $060E, $0408, $068C, $046A
                dc.w    $0020, $0202, $0242, $0464, $0686, $0442, $0EAA, $0C88
                dc.w    $0A66, $0622, $0844, $046A, $06CA, $0484, $0EEE, $000E
                dc.w    $0020, $0022, $0CC8, $0884, $0A84, $0CA6, $0CE8, $0AC8
                dc.w    $08A4, $0240, $0662, $04E8, $02C4, $0080, $0040, $0060
                dc.w    $0020, $0002, $06E8, $02C0, $060E, $0408, $086C, $064A
                dc.w    $0428, $0004, $0206, $04E8, $02C4, $0080, $0040, $0800
Pal_SpecialStage: ; Offset_0x003156:              
                dc.w    $0400, $0000, $0822, $0A44, $0C66, $0E88, $0EEE, $0AAA
                dc.w    $0888, $0444, $08AE, $046A, $000E, $0008, $0004, $00EE
                dc.w    $0400, $0000, $0024, $0068, $00AC, $02EE, $0EEE, $0AAA
                dc.w    $0888, $0444, $0AE4, $06A2, $00EE, $0088, $0044, $0000
                dc.w    $0400, $0000, $0204, $0628, $0A4C, $0C6E, $0ECE, $0800
                dc.w    $0C42, $0E86, $0ECA, $0EEC, $0000, $0EE0, $0AA0, $0440
                dc.w    $0400, $0000, $0060, $00A0, $00C6, $00EA, $0AEC, $0EEA
                dc.w    $0EE0, $0AA0, $0880, $0660, $0440, $0EE0, $0AA0, $0440
                nop    
DelayProgram: ; Offset_0x0031D8: 
                move.w  #$2300, SR
Offset_0x0031DC:                 
                tst.b   ($FFFFF62A).w
                bne.s   Offset_0x0031DC
                rts
PseudoRandomNumber: ; Offset_0x0031E4:
                move.l  ($FFFFF636).w, D1 
                bne.s   Offset_0x0031F0
                move.l  #$2A6D365A, D1
Offset_0x0031F0:                
                move.l  D1, D0
                asl.l   #$02, D1
                add.l   D0, D1
                asl.l   #$03, D1
                add.l   D0, D1                
                move.w  D1, D0
                swap.w  D1
                add.w   D1, D0
                move.w  D0, D1
                swap.w  D1
                move.l  D1, ($FFFFF636).w
                rts
CalcSine: ; Offset_0x00320A:                
                andi.w  #$00FF, D0
                add.w   D0, D0
                addi.w  #$0080, D0
                move.w  Sine_Data(PC, D0), D1   ; Offset_0x003222
                subi.w  #$0080, D0 
                move.w  Sine_Data(PC, D0), D0   ; Offset_0x003222
                rts
Sine_Data: ; Offset_0x003222:                 
                dc.w    $0000, $0006, $000C, $0012, $0019, $001F, $0025, $002B
                dc.w    $0031, $0038, $003E, $0044, $004A, $0050, $0056, $005C
                dc.w    $0061, $0067, $006D, $0073, $0078, $007E, $0083, $0088
                dc.w    $008E, $0093, $0098, $009D, $00A2, $00A7, $00AB, $00B0
                dc.w    $00B5, $00B9, $00BD, $00C1, $00C5, $00C9, $00CD, $00D1
                dc.w    $00D4, $00D8, $00DB, $00DE, $00E1, $00E4, $00E7, $00EA
                dc.w    $00EC, $00EE, $00F1, $00F3, $00F4, $00F6, $00F8, $00F9
                dc.w    $00FB, $00FC, $00FD, $00FE, $00FE, $00FF, $00FF, $00FF
                dc.w    $0100, $00FF, $00FF, $00FF, $00FE, $00FE, $00FD, $00FC
                dc.w    $00FB, $00F9, $00F8, $00F6, $00F4, $00F3, $00F1, $00EE
                dc.w    $00EC, $00EA, $00E7, $00E4, $00E1, $00DE, $00DB, $00D8
                dc.w    $00D4, $00D1, $00CD, $00C9, $00C5, $00C1, $00BD, $00B9
                dc.w    $00B5, $00B0, $00AB, $00A7, $00A2, $009D, $0098, $0093
                dc.w    $008E, $0088, $0083, $007E, $0078, $0073, $006D, $0067
                dc.w    $0061, $005C, $0056, $0050, $004A, $0044, $003E, $0038
                dc.w    $0031, $002B, $0025, $001F, $0019, $0012, $000C, $0006
                dc.w    $0000, $FFFA, $FFF4, $FFEE, $FFE7, $FFE1, $FFDB, $FFD5
                dc.w    $FFCF, $FFC8, $FFC2, $FFBC, $FFB6, $FFB0, $FFAA, $FFA4
                dc.w    $FF9F, $FF99, $FF93, $FF8B, $FF88, $FF82, $FF7D, $FF78
                dc.w    $FF72, $FF6D, $FF68, $FF63, $FF5E, $FF59, $FF55, $FF50
                dc.w    $FF4B, $FF47, $FF43, $FF3F, $FF3B, $FF37, $FF33, $FF2F
                dc.w    $FF2C, $FF28, $FF25, $FF22, $FF1F, $FF1C, $FF19, $FF16
                dc.w    $FF14, $FF12, $FF0F, $FF0D, $FF0C, $FF0A, $FF08, $FF07
                dc.w    $FF05, $FF04, $FF03, $FF02, $FF02, $FF01, $FF01, $FF01
                dc.w    $FF00, $FF01, $FF01, $FF01, $FF02, $FF02, $FF03, $FF04
                dc.w    $FF05, $FF07, $FF08, $FF0A, $FF0C, $FF0D, $FF0F, $FF12
                dc.w    $FF14, $FF16, $FF19, $FF1C, $FF1F, $FF22, $FF25, $FF28
                dc.w    $FF2C, $FF2F, $FF33, $FF37, $FF3B, $FF3F, $FF43, $FF47
                dc.w    $FF4B, $FF50, $FF55, $FF59, $FF5E, $FF63, $FF68, $FF6D
                dc.w    $FF72, $FF78, $FF7D, $FF82, $FF88, $FF8B, $FF93, $FF99
                dc.w    $FF9F, $FFA4, $FFAA, $FFB0, $FFB6, $FFBC, $FFC2, $FFC8
                dc.w    $FFCF, $FFD5, $FFDB, $FFE1, $FFE7, $FFEE, $FFF4, $FFFA
                dc.w    $0000, $0006, $000C, $0012, $0019, $001F, $0025, $002B
                dc.w    $0031, $0038, $003E, $0044, $004A, $0050, $0056, $005C
                dc.w    $0061, $0067, $006D, $0073, $0078, $007E, $0083, $0088
                dc.w    $008E, $0093, $0098, $009D, $00A2, $00A7, $00AB, $00B0
                dc.w    $00B5, $00B9, $00BD, $00C1, $00C5, $00C9, $00CD, $00D1
                dc.w    $00D4, $00D8, $00DB, $00DE, $00E1, $00E4, $00E7, $00EA
                dc.w    $00EC, $00EE, $00F1, $00F3, $00F4, $00F6, $00F8, $00F9
                dc.w    $00FB, $00FC, $00FD, $00FE, $00FE, $00FF, $00FF, $00FF
CalcAngle: ; Offset_0x0034A2:                
                movem.l D3-D4, -(A7)
                moveq   #$00, D3
                moveq   #$00, D4
                move.w  D1, D3
                move.w  D2, D4
                or.w    D3, D4
                beq.s   Offset_0x0034FE
                move.w  D2, D4
                tst.w   D3
                bpl     Offset_0x0034BC
                neg.w   D3 
Offset_0x0034BC:                
                tst.w   D4
                bpl     Offset_0x0034C4
                neg.w   D4 
Offset_0x0034C4:                
                cmp.w   D3, D4
                bcc     Offset_0x0034D6
                lsl.l   #$08, D4
                divu.w  D3, D4
                moveq   #$00, D0
                move.b  AngleData(PC, D4), D0   ; Offset_0x003508
                bra.s   Offset_0x0034E0
Offset_0x0034D6:
                lsl.l   #$08, D3
                divu.w  D4, D3
                moveq   #$40, D0
                sub.b   AngleData(PC, D3), D0   ; Offset_0x003508
Offset_0x0034E0: 
                tst.w   D1
                bpl     Offset_0x0034EC
                neg.w   D0
                addi.w  #$0080, D0
Offset_0x0034EC:   
                tst.w   D2
                bpl     Offset_0x0034F8
                neg.w   D0
                addi.w  #$0100, D0
Offset_0x0034F8:   
                movem.l (A7)+, D3-D4
                rts              
Offset_0x0034FE:  
                move.w  #$0040, D0
                movem.l (A7)+, D3-D4
                rts
AngleData: ; Offset_0x003508:  
                dc.b    $00, $00, $00, $00, $01, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02, $02
                dc.b    $03, $03, $03, $03, $03, $03, $03, $04, $04, $04, $04, $04, $04, $05, $05, $05
                dc.b    $05, $05, $05, $06, $06, $06, $06, $06, $06, $06, $07, $07, $07, $07, $07, $07
                dc.b    $08, $08, $08, $08, $08, $08, $08, $09, $09, $09, $09, $09, $09, $0A, $0A, $0A
                dc.b    $0A, $0A, $0A, $0A, $0B, $0B, $0B, $0B, $0B, $0B, $0B, $0C, $0C, $0C, $0C, $0C
                dc.b    $0C, $0C, $0D, $0D, $0D, $0D, $0D, $0D, $0D, $0E, $0E, $0E, $0E, $0E, $0E, $0E
                dc.b    $0F, $0F, $0F, $0F, $0F, $0F, $0F, $10, $10, $10, $10, $10, $10, $10, $11, $11
                dc.b    $11, $11, $11, $11, $11, $11, $12, $12, $12, $12, $12, $12, $12, $13, $13, $13
                dc.b    $13, $13, $13, $13, $13, $14, $14, $14, $14, $14, $14, $14, $14, $15, $15, $15
                dc.b    $15, $15, $15, $15, $15, $15, $16, $16, $16, $16, $16, $16, $16, $16, $17, $17
                dc.b    $17, $17, $17, $17, $17, $17, $17, $18, $18, $18, $18, $18, $18, $18, $18, $18
                dc.b    $19, $19, $19, $19, $19, $19, $19, $19, $19, $19, $1A, $1A, $1A, $1A, $1A, $1A
                dc.b    $1A, $1A, $1A, $1B, $1B, $1B, $1B, $1B, $1B, $1B, $1B, $1B, $1B, $1C, $1C, $1C
                dc.b    $1C, $1C, $1C, $1C, $1C, $1C, $1C, $1C, $1D, $1D, $1D, $1D, $1D, $1D, $1D, $1D
                dc.b    $1D, $1D, $1D, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1F, $1F
                dc.b    $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $20, $20, $20, $20, $20, $20
                dc.b    $20, $00 
                nop 
;===============================================================================
; Sega Logo
; [ Begin ]              
;===============================================================================                 
SegaScreen: ; Offset_0x00360C: ; SEGA Logo
                move.b  #$FD, D0
                bsr     Play_Music              ; Offset_0x0014C0
                bsr     ClearPLC                ; Offset_0x00179A
                bsr     Pal_FadeFrom            ; Offset_0x00263A 
                lea     ($00C00004), A6
                move.w  #$8004, (A6)
                move.w  #$8230, (A6)
                move.w  #$8407, (A6)
                move.w  #$8700, (A6)
                move.w  #$8B00, (A6)
                move.w  #$8C81, (A6)
                clr.b   ($FFFFF64E).w
                move    #$2700, SR
                move.w  ($FFFFF60C).w, D0
                andi.b  #$BF, D0
                move.w  D0, ($00C00004)
                bsr     ClearScreen             ; Offset_0x001418
                move.l  #$40000000, ($00C00004)
                lea     (SegaLogo), A0          ; Load Sega Sprites ; Offset_0x070960  
                bsr     NemesisDec              ; Offset_0x0015FC
                lea     ($FFFF0000), A1
                lea     (SegaLogo_Mappings), A0 ; Load Sega Mappings ; Offset_0x070DD0
                move.w  #$0000, D0
                bsr     EnigmaDec               ; Offset_0x0018DA
                lea     ($FFFF0000), A1
                move.l  #$65100003, D0
                moveq   #$17, D1
                moveq   #$07, D2
                bsr     ShowVDPGraphics         ; Offset_0x00154C
                lea     ($FFFF0180), A1
                move.l  #$40000003, D0
                moveq   #$27, D1
                moveq   #$1B, D2
                bsr     ShowVDPGraphics         ; Offset_0x00154C
                tst.b   ($FFFFFFF8).w
                bmi.s   Offset_0x0036BE
                lea     ($FFFF0A40), A1
                move.l  #$453A0003, D0
                moveq   #$02, D1
                moveq   #$01, D2
                bsr     ShowVDPGraphics         ; Offset_0x00154C
Offset_0x0036BE:
                moveq   #$00, D0
                bsr     PalLoad2                ; Offset_0x0028FE
                move.w  #$FFF6, ($FFFFF632).w
                move.w  #$0000, ($FFFFF634).w
                move.w  #$0000, ($FFFFF662).w
                move.w  #$0000, ($FFFFF660).w
                move.w  #$00B4, ($FFFFF614).w
                move.w  ($FFFFF60C).w, D0
                ori.b   #$40, D0
                move.w  D0, ($00C00004)
Sega_WaitPalette: ; Offset_0x0036F0:                   
                move.b  #$02, ($FFFFF62A).w               
                bsr     DelayProgram            ; Offset_0x0031D8
                bsr     PalCycle_Sega           ; Offset_0x0027F0 ; Load "Sega" rotating palette
                bne.s   Sega_WaitPalette        ; Offset_0x0036F0 
                move.b  #$FA, D0                ; Load "Sega" sound
                bsr     Play_Sfx                ; Offset_0x0014C6
                move.b  #$02, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                move.w  #$00B4, ($FFFFF614).w
Sega_WaitEnd: ; Offset_0x003718:                
                move.b  #$14, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                tst.w   ($FFFFF614).w
                beq.s   Sega_GoToTitleScreen    ; Offset_0x003730
                andi.b  #$80, ($FFFFF605).w
                beq.s   Sega_WaitEnd            ; Offset_0x003718   
Sega_GoToTitleScreen: ; Offset_0x003730:                
                move.b  #$04, ($FFFFF600).w
                rts
;===============================================================================
; Sega Logo
; [ End ]              
;=============================================================================== 
;===============================================================================
; Title Screen
; [ Begin ]              
;===============================================================================                   
TitleScreen: ; Offset_0x003738: ; Game Intro / Title Screen
                move.b  #$FD, D0   
                bsr     Play_Music              ; Offset_0x0014C0
                bsr     ClearPLC                ; Offset_0x00179A
                bsr     Pal_FadeFrom            ; Offset_0x00263A  
                move    #$2700, SR
                lea     ($00C00004), A6
                move.w  #$8004, (A6)
                move.w  #$8230, (A6)
                move.w  #$8407, (A6)
                move.w  #$9001, (A6)
                move.w  #$9200, (A6)
                move.w  #$8B03, (A6)
                move.w  #$8720, (A6)                 
                clr.b   ($FFFFF64E).w
                move.w  #$8C81, (A6)
                bsr     ClearScreen             ; Offset_0x001418 
                lea     ($FFFFAC00).w, A1
                moveq   #$00, D0
                move.w  #$00FF, D1
Offset_0x003784:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x003784
                lea     ($FFFFB000).w, A1
                moveq   #$00, D0
                move.w  #$07FF, D1
Offset_0x003794:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x003794
                lea     ($FFFFF700).w, A1
                moveq   #$00, D0
                move.w  #$003F, D1
Offset_0x0037A4:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0037A4
                lea     ($FFFFEE00).w, A1
                moveq   #$00, D0
                move.w  #$003F, D1
Offset_0x0037B4:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0037B4
                lea     ($FFFFFB80).w, A1
                moveq   #$00, D0
                move.w  #$001F, D1
Offset_0x0037C4:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0037C4
                moveq   #$03, D0                ; Load Sonic Palette "Sonic Team Presents" Left Over
                bsr     PalLoad1                ; Offset_0x0028E2
                bsr     Pal_FadeTo              ; Offset_0x002596
                move    #$2700, SR
                move.l  #$40000000, ($00C00004)
                lea     (Title_Screen_Bg_Wings), A0 ; Offset_0x071520 ; Load Title Screen wings and background
                bsr     NemesisDec              ; Offset_0x0015FC
                move.l  #$40000001, ($00C00004)
                lea     (Title_Screen_Sonic_Tails), A0 ; Offset_0x072E82 ; Load Sonic and Tails in Title Screen
                bsr     NemesisDec              ; Offset_0x0015FC
                lea     ($00C00000), A6
                move.l  #$50000003, $0004(A6)
                lea     (Art_Menu_Text), A5     ; Offset_0x0005E8
                move.w  #$028F, D1
Offset_0x003818:
                move.w  (A5)+, (A6)
                dbra    D1, Offset_0x003818
                nop
                move.b  #$00, ($FFFFFE30).w
                move.w  #$0000, ($FFFFFE08).w
                move.w  #$0000, ($FFFFFFF0).w
                move.w  #$0000, ($FFFFFFDA).w
                move.w  #$0F00, ($FFFFFE10).w
                move.w  #$0000, ($FFFFF634).w
                bsr     Pal_FadeFrom            ; Offset_0x00263A 
                move    #$2700, SR
                lea     ($FFFF0000), A1
                lea     (TS_Wings_Sonic_Mappings), A0 ; Offset_0x070ECC Load Wings, Sonic 2, (c) Sega 1992 mappings
                move.w  #$0000, D0
                bsr     EnigmaDec               ; Offset_0x0018DA
                lea     ($FFFF0000), A1
                move.l  #$40000003, D0
                moveq   #$27, D1
                moveq   #$1B, D2
                bsr     ShowVDPGraphics         ; Offset_0x00154C
                lea     ($FFFF0000), A1
                lea     (Title_Screen_Bg_Mappings), A0 ; Offset_0x071024 Load Title Screen Background mappings
                move.w  #$0000, D0
                bsr     EnigmaDec               ; Offset_0x0018DA
                lea     ($FFFF0000), A1
                move.l  #$60000003, D0
                moveq   #$1F, D1
                moveq   #$1B, D2
                bsr     ShowVDPGraphics         ; Offset_0x00154C
                lea     ($FFFF0000), A1
                lea     (Title_Screen_R_Bg_Mappings), A0 ; Offset_0x0712D8 Load Title Screen Background mappings (Right Side) 
                move.w  #$0000, D0
                bsr     EnigmaDec               ; Offset_0x0018DA
                lea     ($FFFF0000), A1
                move.l  #$60400003, D0
                moveq   #$1F, D1
                moveq   #$1B, D2
                bsr     ShowVDPGraphics         ; Offset_0x00154C
                moveq   #$01, D0                ; Load Title Screen Palette
                bsr     PalLoad1                ; Offset_0x0028E2      
                move.b  #$99, D0                ; Load Title Screen Music
                bsr     Play_Music              ; Offset_0x0014C0
                move.b  #$00, ($FFFFFFFA).w
                move.w  #$0000, ($FFFFFFD8).w
                move.w  #$0178, ($FFFFF614).w
                lea     ($FFFFB080).w, A1
                moveq   #$00, D0
                move.w  #$000F, D1
Offset_0x0038EE:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0038EE   
                
                move.b  #$0E, ($FFFFB040).w
                move.b  #$0E, ($FFFFB080).w
                move.b  #$01, ($FFFFB09A).w
                jsr     (Load_Objects)          ; Offset_0x00CFD0
                jsr     (Build_Sprites)         ; Offset_0x00D4DA
                moveq   #$00, D0
                bsr     LoadPLC2                ; Offset_0x00176E
                move.w  #$0000, ($FFFFFFD4).w
                move.w  #$0000, ($FFFFFFD6).w
                move.b  #$01, ($FFFFFFD0).w
                move.w  #$0004, ($FFFFEED2).w
                move.w  #$0000, ($FFFFE500).w
                move.w  ($FFFFF60C).w, D0
                ori.b   #$40, D0
                move.w  D0, ($00C00004)
                bsr     Pal_FadeTo              ; Offset_0x002596
TitleScreen_Loop: ; Offset_0x003948:                
                move.b  #$04, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                jsr     (Load_Objects)          ; Offset_0x00CFD0
                bsr     Offset_0x005E38         ; Load Title Screen Background Scroll 
                jsr     (Build_Sprites)         ; Offset_0x00D4DA
                bsr     RunPLC                  ; Offset_0x0017A8
                tst.b   ($FFFFFFF8).w
                bpl.s   Code_Sequence_J         ; Offset_0x003974
                lea     (Level_Select_Code_J), A0 ; Offset_0x003B5A
                bra.s   Level_Select_Cheat_Test ; Offset_0x00397A
Code_Sequence_J: ; Offset_0x003974:
                lea     (Level_Select_Code_US), A0 ; Offset_0x003B52
Level_Select_Cheat_Test: ;  Offset_0x00397A:                
                move.w  ($FFFFFFD4).w, D0
                adda.w  D0, A0
                move.b  ($FFFFF605).w, D0
                andi.b  #$0F, D0
                cmp.b   (A0), D0
                bne.s   Title_Cheat_NoMatch     ; Offset_0x0039C0
                addq.w  #1, ($FFFFFFD4).w
                tst.b   D0
                bne.s   Title_Cheat_CountC      ; Offset_0x0039D2
                lea     ($FFFFFFD0).w, A0
                move.w  ($FFFFFFD6).w, D1
                lsr.w   #1, D1
                andi.w  #$0003, D1
                beq.s   Title_Cheat_PlayRing    ; Offset_0x0039B0
                tst.b   ($FFFFFFF8).w
                bpl.s   Title_Cheat_PlayRing    ; Offset_0x0039B0
                moveq   #$01, D1
                move.b  D1, $01(A0, D1)                   
Title_Cheat_PlayRing: ; Offset_0x0039B0:
                move.b  #$01, $00(A0, D1)
                move.b  #$B5, D0
                bsr     Play_Sfx                ; Offset_0x0014C6
                bra.s   Title_Cheat_CountC      ; Offset_0x0039D2
Title_Cheat_NoMatch: ; Offset_0x0039C0:                
                tst.b   D0
                beq.s   Title_Cheat_CountC      ; Offset_0x0039D2
                cmpi.w  #$0009, ($FFFFFFD4).w
                beq.s   Title_Cheat_CountC      ; Offset_0x0039D2
                move.w  #$0000, ($FFFFFFD4).w
Title_Cheat_CountC: ; Offset_0x0039D2:
                move.b  ($FFFFF605).w, D0
                andi.b  #$20, D0
                beq.s   Title_Cheat_NoC         ; Offset_0x0039E0
                addq.w  #$01, ($FFFFFFD6).w
Title_Cheat_NoC: ; Offset_0x0039E0:
                tst.w   ($FFFFF614).w
                beq     Demo_Mode               ; Offset_0x003B62
                andi.b  #$80, ($FFFFF605).w
                beq     TitleScreen_Loop        ; Offset_0x003948
Offset_0x0039F2:                
                tst.b   ($FFFFFFD0).w
                beq     PlayLevel               ; Offset_0x003B12
                btst    #6, ($FFFFF604).w
                beq     PlayLevel               ; Offset_0x003B12
                move.b  #$8A, D0                ; Load Level Select Menu Music
                bsr     Play_Music              ; Offset_0x0014C0
                moveq   #$02, D0
                bsr     PalLoad2                ; Offset_0x0028FE
                lea     ($FFFFE000).w, A1
                moveq   #$00, D0
                move.w  #$00DF, D1
LevelSelect_ClearScroll: ; Offset_0x003A1C:                
                move.l  D0, (A1)+
                dbra    D1, LevelSelect_ClearScroll ; Offset_0x003A1C 
                move.l  D0, ($FFFFF616).w
                move    #$2700, SR
                lea     ($00C00000), A6
                move.l  #$60000003, ($00C00004)
                move.w  #$03FF, D1
LevelSelect_ClearVRAM: ; Offset_0x003A3E:                
                move.l  D0, (A6) 
                dbra    D1, LevelSelect_ClearVRAM ; Offset_0x003A3E
                bsr     LevelSelect_TextLoad ; Offset_0x003CC4
LevelSelect_Loop: ; Offset_0x003A48:                
                move.b  #$04, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                bsr     LevelSelect_Controls    ; Offset_0x003C2E
                bsr     RunPLC                  ; Offset_0x0017A8
                tst.l   ($FFFFF680).w
                bne.s   LevelSelect_Loop        ; Offset_0x003A48   
                andi.b  #$F0, ($FFFFF605).w
                beq.s   LevelSelect_Loop        ; Offset_0x003A48
                move.w  #$0000, ($FFFFFFD8).w
                btst    #4, ($FFFFF604).w
                beq.s   Offset_0x003A7C
                move.w  #$0001, ($FFFFFFD8).w
Offset_0x003A7C:
                move.w  ($FFFFFF82).w, D0
                cmpi.w  #$001A, D0
                bne.s   Offset_0x003A9C
                btst    #6, ($FFFFF605).w
                bne.s   LevelSelect_Loop        ; Offset_0x003A48
                move.w  ($FFFFFF84).w, D0
                addi.w  #$0080, D0
                bsr     Play_Sfx                ; Offset_0x0014C6
                bra.s   LevelSelect_Loop        ; Offset_0x003A48
Offset_0x003A9C:
                add.w   D0, D0               
                move.w  Level_Select_Array(PC, D0), D0 ; Offset_0x003AD4 Load Level Select Array
                bmi     LevelSelect_Loop        ; Offset_0x003A48
                cmpi.w  #$8000, D0
                bne.s   Level_Select_Level      ; Offset_0x003B0A
                move.b  #$10, ($FFFFF600).w
                clr.w   ($FFFFFE10).w
                move.b  #$03, ($FFFFFE12).w
                moveq   #$00, D0
                move.w  D0, ($FFFFFE20).w
                move.l  D0, ($FFFFFE22).w
                move.l  D0, ($FFFFFE26).w
                move.l  #$00001388, ($FFFFFFC0).w
                rts
Level_Select_Array: ; Offset_0x003AD4: ; Level Select Array
                dc.w    $0000, $0001         ; GHz
                dc.w    $0200, $0201         ; Wz
                dc.w    $0400, $0401, $0500  ; Mz
                dc.w    $0700, $0701         ; HTz
                dc.w    $0800, $0801         ; HPz
                dc.w    $0A00, $0A01         ; OOz
                dc.w    $0B00, $0B01         ; DHz
                dc.w    $0C00, $0C01         ; CNz
                dc.w    $0D00, $0D01         ; CPz
                dc.w    $0E00, $0E01         ; GCz
                dc.w    $0F00, $0F01         ; NGHz
                dc.w    $1000, $1001         ; Dez
                dc.w    $8000                ; SS 
                dc.w    $0000                ; Sound Test
Level_Select_Level: ; Offset_0x003B0A:
                andi.w  #$3FFF, D0
                move.w  D0, ($FFFFFE10).w
PlayLevel: ; Offset_0x003B12:                
                move.b  #$0C, ($FFFFF600).w
                move.b  #$03, ($FFFFFE12).w
                moveq   #$00, D0
                move.w  D0, ($FFFFFE20).w
                move.l  D0, ($FFFFFE22).w
                move.l  D0, ($FFFFFE26).w
                move.b  D0, ($FFFFFE16).w
                move.b  D0, ($FFFFFE57).w
                move.l  D0, ($FFFFFE58).w
                move.l  D0, ($FFFFFE5C).w
                move.b  D0, ($FFFFFE18).w
                move.l  #$00001388, ($FFFFFFC0).w
                move.b  #$E0, D0
                bsr     Play_Sfx                ; Offset_0x0014C6
                rts  
Level_Select_Code_US: ; Offset_0x003B52:
                dc.b    $01, $02, $02, $02, $02, $01, $00, $FF  ; Code sequence  
Level_Select_Code_J:  ; Offset_0x003B5A:
                dc.b    $01, $02, $02, $02, $02, $01, $00, $FF  ; Code sequence      
Demo_Mode: ; Offset_0x003B62:
                move.w  #$001E, ($FFFFF614).w
Offset_0x003B68:                
                move.b  #$04, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                bsr     RunPLC                  ; Offset_0x0017A8
                move.w  ($FFFFB008).w, D0
                addq.w  #2, D0
                move.w  D0, ($FFFFB008).w
                cmpi.w  #$1C00, D0
                bcs.s   Run_Demo_Mode           ; Offset_0x003B8E
                move.b  #$00, ($FFFFF600).w
                rts
Run_Demo_Mode: ; Offset_0x003B8E:
                andi.b  #$80, ($FFFFF605).w 
                bne     Offset_0x0039F2
                tst.w   ($FFFFF614).w
                bne     Offset_0x003B68
                move.b  #$E0, D0
                bsr     Play_Sfx                ; Offset_0x0014C6
                move.w  ($FFFFFFF2).w, D0
                andi.w  #$0007, D0
                add.w   D0, D0
                move.w  Demo_Mode_Level_Array(PC, D0), D0 ; Offset_0x003C16 Load Demo sequence array
                move.w  D0, ($FFFFFE10).w
                addq.w  #1, ($FFFFFFF2).w
                cmpi.w  #$0004, ($FFFFFFF2).w
                bcs.s   Offset_0x003BCC
                move.w  #$0000, ($FFFFFFF2).w
Offset_0x003BCC:
                move.w  #$0001, ($FFFFFFF0).w
                move.b  #$08, ($FFFFF600).w
                cmpi.w  #$0000, D0
                bne.s   Offset_0x003BE4
                move.w  #$0001, ($FFFFFFD8).w
Offset_0x003BE4:
                cmpi.w  #$0600, D0
                bne.s   Offset_0x003BF8
                move.b  #$10, ($FFFFF600).w
                clr.w   ($FFFFFE10).w
                clr.b   ($FFFFFE16).w
Offset_0x003BF8:
                move.b  #$03, ($FFFFFE12).w
                moveq   #$00, D0
                move.w  D0, ($FFFFFE20).w
                move.l  D0, ($FFFFFE22).w
                move.l  D0, ($FFFFFE26).w
                move.l  #$00001388, ($FFFFFFC0).w
                rts
Demo_Mode_Level_Array: ; Offset_0x003C16: ; Demo sequence array
                dc.w    $0D00, $0000, $0800, $0700, $0500, $0500, $0500, $0500
                dc.w    $0400, $0400, $0400, $0400
LevelSelect_Controls: ; Offset_0x003C2E:
                move.b  ($FFFFF605).w, D1
                andi.b  #$03, D1
                bne.s   Offset_0x003C3E
                subq.w  #$01, ($FFFFFF80).w
                bpl.s   Offset_0x003C78
Offset_0x003C3E:
                move.w  #$000B, ($FFFFFF80).w
                move.b  ($FFFFF604).w, D1
                andi.b  #$03, D1
                beq.s   Offset_0x003C78
                move.w  ($FFFFFF82).w, D0
                btst    #$00, D1
                beq.s   Offset_0x003C5E
                subq.w  #$01, D0
                bcc.s   Offset_0x003C5E
                moveq   #$1A, D0
Offset_0x003C5E:
                btst    #$01, D1
                beq.s   Offset_0x003C6E
                addq.w  #$01, D0
                cmpi.w  #$001B, D0
                bcs.s   Offset_0x003C6E
                moveq   #$00, D0
Offset_0x003C6E:
                move.w  D0, ($FFFFFF82).w
                bsr     LevelSelect_TextLoad    ; Offset_0x003CC4
                rts
Offset_0x003C78:
                cmpi.w  #$001A, ($FFFFFF82).w
                bne.s   Offset_0x003CC2
                move.w  ($FFFFFF84).w, D0
                move.b  ($FFFFF605).w, D1
                andi.b  #$0C, D1
                beq.s   Offset_0x003CAA
                btst    #$02, D1
                beq.s   Offset_0x003C9A
                subq.b  #$01, D0
                bcc.s   Offset_0x003C9A
                moveq   #$7F, D0
Offset_0x003C9A:
                btst    #$03, D1
                beq.s   Offset_0x003CAA
                addq.b  #$01, D0
                cmpi.w  #$0080, D0
                bcs.s   Offset_0x003CAA
                moveq   #$00, D0
Offset_0x003CAA:
                btst    #$06, ($FFFFF605).w
                beq.s   Offset_0x003CBA
                addi.b  #$10, D0
                andi.b  #$7F, D0
Offset_0x003CBA:
                move.w  D0, ($FFFFFF84).w
                bsr     LevelSelect_TextLoad    ; Offset_0x003CC4
Offset_0x003CC2:                
                rts
LevelSelect_TextLoad: ;Offset_0x003CC4:
                lea     (Level_Select_Text), A1 ; Offset_0x003D7C Load Level Select Menu - Text
                lea     ($00C00000), A6
                move.l  #$608C0003, D4
                move.w  #$8680, D3
                moveq   #$1A, D1
Offset_0x003CDC:                
                move.l  D4, $0004(A6)
                bsr     Offset_0x003D60
                addi.l  #$00800000, D4
                dbra    D1, Offset_0x003CDC 
                moveq   #$00, D0
                move.w  ($FFFFFF82).w, D0
                move.w  D0, D1
                move.l  #$608C0003, D4
                lsl.w   #$07, D0
                swap.w  D0
                add.l   D0, D4
                lea     (Level_Select_Text), A1 ; Offset_0x003D7C Load Level Select Menu - Text
                mulu.w  #$001B, D1
                adda.w  D1, A1
                move.w  #$C680, D3
                move.l  D4, $0004(A6)
                bsr     Offset_0x003D60
                move.w  #$8680, D3
                cmpi.w  #$001A, ($FFFFFF82).w
                bne.s   Offset_0x003D2A
                move.w  #$C680, D3
Offset_0x003D2A:
                move.l  #$6DB00003, ($00C00004)
                move.w  ($FFFFFF84).w, D0
                addi.w  #$0080, D0
                move.b  D0, D2
                lsr.b   #$04, D0
                bsr     Offset_0x003D4C
                move.b  D2, D0
                bsr     Offset_0x003D4C
                rts
Offset_0x003D4C:
                andi.w  #$000F, D0
                cmpi.b  #$0A, D0
                bcs.s   Offset_0x003D5A
                addi.b  #$07, D0
Offset_0x003D5A:
                add.w   D3, D0
                move.w  D0, (A6)
                rts
Offset_0x003D60:
                moveq   #$1A, D2
Offset_0x003D62:                
                moveq   #$00, D0
                move.b  (A1)+, D0
                bpl.s   Offset_0x003D72
                move.w  #$0000, (A6)
                dbra    D2, Offset_0x003D62 
                rts
Offset_0x003D72:
                add.w   D3, D0
                move.w  D0, (A6)
                dbra    D2, Offset_0x003D62
                rts

_0 = $00
_1 = $01
_2 = $02                
_A = $11
_B = $12
_C = $13
_D = $14                
_E = $15
_F = $16
_G = $17
_H = $18
_I = $19
_J = $1A
_K = $1B
_L = $1C
_M = $1D
_N = $1E
_O = $1F
_P = $20
_Q = $21
_R = $22
_S = $23
_T = $24
_U = $25
_V = $26
_W = $27
_X = $28
_Y = $0F
_Z = $10
__ = $FF                
Level_Select_Text: ; Offset_0x003D7C: ; Level Select Menu Text                 
                dc.b    _G,_R,_E,_E,_N,__,_H,_I,_L,_L,__,_Z,_O,_N,_E,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1  
                dc.b    _W,_O,_O,_D,__,_Z,_O,_N,_E,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1 
                dc.b    _M,_E,_T,_R,_O,_P,_O,_L,_I,_S,__,_Z,_O,_N,_E,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_2     
                dc.b    _H,_I,_L,_L,__,_T,_O,_P,__,_Z,_O,_N,_E,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
                dc.b    _H,_I,_D,_D,_E,_N,__,_P,_A,_L,_A,_C,_E,__,_Z,_O,_N,_E,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
                dc.b    _O,_I,_L,__,_O,_C,_E,_A,_N,__,_Z,_O,_N,_E,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1 
                dc.b    _D,_U,_S,_T,__,_H,_I,_L,_L,__,_Z,_O,_N,_E,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1                  
                dc.b    _C,_A,_S,_I,_N,_O,__,_N,_I,_G,_H,_T,__,_Z,_O,_N,_E,__,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1 
                dc.b    _C,_H,_E,_M,_I,_C,_A,_L,__,_P,_L,_A,_N,_T,__,_Z,_O,_N,_E,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1 
                dc.b    _G,_E,_N,_O,_C,_I,_D,_E,__,_C,_I,_T,_Y,__,_Z,_O,_N,_E,__,__,_S,_T,_A,_G,_E,__,_0 
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1 
                dc.b    _N,_E,_O,__,_G,_R,_E,_E,_N,__,_H,_I,_L,_L,__,_Z,_O,_N,_E,__,_S,_T,_A,_G,_E,__,_0  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1  
                dc.b    _D,_E,_A,_T,_H,__,_E,_G,_G,__,_Z,_O,_N,_E,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0  
                dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1  
                dc.b    _S,_P,_E,_C,_I,_A,_L,__,_S,_T,_A,_G,_E,__,__,__,__,__,__,__,__,__,__,__,__,__,__
                dc.b    _S,_O,_U,_N,_D,__,_S,_E,_L,_E,_C,_T,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__
                dc.b    $00 ; Filler
Unused_Code1: ; Offset_0x004056:                 
                lea     ($FFFF0000), A1
                move.w  #$02EB, D2
Unused_Code1_Loop: ; Offset_0x004060:                
                move.w  (A1), D0
                move.w  D0, D1
                andi.w  #$F800, D1
                andi.w  #$07FF, D0
                lsr.w   #$01, D0
                or.w    D0, D1
                move.w  D1, (A1)+
                dbra    D2, Unused_Code1_Loop   ; Offset_0x004060
                rts
Unused_Code2: ; Offset_0x004078:                
                lea     ($00FE0000), A1
                lea     ($00FE0080), A2
                lea     ($FFFF0000), A3
                move.w  #$003F, D1
Unused_Code2_Loop: ; Offset_0x00408E:                
                bsr     Unused_Code4            ; Offset_0x004120
                bsr     Unused_Code4            ; Offset_0x004120
                dbra    D1, Unused_Code2_Loop   ; Offset_0x00408E
                lea     ($00FE0000), A1
                lea     ($00FF0000), A2
                move.w  #$003F, D1
Unused_Code2_Loop2: ; Offset_0x0040AA:                
                move.w  #$0000, (A2)+
                dbra    D1, Unused_Code2_Loop2  ; Offset_0x0040AA
                move.w  #$3FBF, D1
Unused_Code2_Loop3: ; Offset_0x0040B6:                
                move.w  (A1)+, (A2)+
                dbra    D1, Unused_Code2_Loop3  ; Offset_0x0040B6
                rts
Unused_Code3: ; Offset_0x0040BE:              
                lea     ($00FE0000), A1
                lea     ($FFFF0000), A3
                moveq   #$1F, D0
Unused_Code3_Loop: ; Offset_0x0040CC:                
                move.l  (A1)+, (A3)+
                dbra    D0, Unused_Code3_Loop   ; Offset_0x0040CC
                moveq   #$00, D7
                lea     ($00FE0000), A1
                move.w  #$00FF, D5
Unused_Code3_Loop2: ; Offset_0x0040DE:                
                lea     ($FFFF0000), A3
                move.w  D7, D6
Unused_Code3_Loop3: ; Offset_0x0040E6:                
                movem.l A1-A3, -(A7)
                move.w  #$003F, D0
Unused_Code3_Loop4: ; Offset_0x0040EE:                
                cmpm.w  (A1)+, (A3)+
                bne.s   Unused_Code3_Offset_0x004104
                dbra    D0, Unused_Code3_Loop4  ; Offset_0x0040EE
                movem.l (A7)+, A1-A3
                adda.w  #$0080, A1
                dbra    D5, Unused_Code3_Loop2  ; Offset_0x0040DE
                bra.s   Unused_Code3_Offset_0x00411E
Unused_Code3_Offset_0x004104:
                movem.l (A7)+, A1-A3
                adda.w  #$0080, A3
                dbra    D6, Unused_Code3_Loop3  ; Offset_0x0040E6
                moveq   #$1F, D0
Unused_Code3_Loop5: ; Offset_0x004112:                
                move.l  (A1)+, (A3)+
                dbra    D0, Unused_Code3_Loop5  ; Offset_0x004112
                addq.l  #$01, D7
                dbra    D5, Unused_Code3_Loop2  ; Offset_0x0040DE
Unused_Code3_Offset_0x00411E:
                bra.s   Unused_Code3_Offset_0x00411E                   
Unused_Code4: ; Offset_0x004120:
                moveq   #$07, D0
Unused_Code4_Loop: ; Offset_0x004122:                
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                dbra    D0, Unused_Code4_Loop   ; Offset_0x004122
                adda.w  #$0080, A1
                adda.w  #$0080, A2
                rts                                                
PlayList: ; Offset_0x004140:               
                dc.b    $82, $82, $83, $90, $83, $83, $93, $96, $86, $8F, $81, $85, $84, $8D, $8D, $87 
Level: ; Offset_0x004150: ; Demo Mode / Normal Game Play
                bset    #$07, ($FFFFF600).w
                tst.w   ($FFFFFFF0).w
                bmi.s   Level_Init              ; Offset_0x004164
                move.b  #$F9, D0
                bsr     Play_Sfx                ; Offset_0x0014C6
Level_Init: ; Offset_0x004164:                
                bsr     ClearPLC                ; Offset_0x00179A
                bsr     Pal_FadeFrom            ; Offset_0x00263A 
                tst.w   ($FFFFFFF0).w
                bmi.s   Offset_0x0041C0
                move    #$2700, SR
                move.l  #$70000002, ($00C00004)
                lea     (Title_Cards), A0 ; Offset_0x07EA04  / Load Title Cards sprites
                bsr     NemesisDec              ; Offset_0x0015FC
                bsr     ClearScreen             ; Offset_0x001418
                move    #$2300, SR
                moveq   #$00, D0
                move.w  D0, ($FFFFFE04).w
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                lea     (TilesMainTable), A2    ; Offset_0x024354
                lea     $00(A2, D0), A2
                moveq   #$00, D0
                move.b  (A2), D0
                beq.s   Offset_0x0041BA
                bsr     LoadPLC                 ; Offset_0x00173C
Offset_0x0041BA:
                moveq   #$01, D0
                bsr     LoadPLC                 ; Offset_0x00173C
Offset_0x0041C0:
                lea     ($FFFFAC00).w, A1
                moveq   #$00, D0
                move.w  #$00FF, D1
Offset_0x0041CA:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0041CA
                lea     ($FFFFB000).w, A1
                moveq   #$00, D0
                move.w  #$07FF, D1
Offset_0x0041DA:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0041DA
                lea     ($FFFFF628).w, A1
                moveq   #$00, D0
                move.w  #$0015, D1
Offset_0x0041EA:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0041EA
                lea     ($FFFFF700).w, A1
                moveq   #$00, D0
                move.w  #$003F, D1
Offset_0x0041FA:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0041FA
                lea     ($FFFFFE60).w, A1
                moveq   #$00, D0
                move.w  #$0047, D1
Offset_0x00420A:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x00420A
                cmpi.w  #$0D01, ($FFFFFE10).w  ; If Chemical Plant
                beq.s   Init_Water             ; Offset_0x004228
                cmpi.b  #$0F, ($FFFFFE10).w    ; If Neo Green Hill
                beq.s   Init_Water             ; Offset_0x004228
                cmpi.b  #$08, ($FFFFFE10).w    ; If Not Hidden Palace
                bne.s   Init_No_Water          ; Offset_0x004234
Init_Water: ; Offset_0x004228:
                move.b  #$01, ($FFFFF730).w
                move.w  #$0000, ($FFFFFFD8).w  ; If Water Level Clear Two Player Flag
Init_No_Water: ; Offset_0x004234:
                lea     ($00C00004), A6
                move.w  #$8B03, (A6)
                move.w  #$8230, (A6)
                move.w  #$8407, (A6)
                move.w  #$857C, (A6)
                move.w  #$9001, (A6)
                move.w  #$8004, (A6)
                move.w  #$8720, (A6)
                btst    #$05, ($FFFFF604).w
                beq.s   Offset_0x004262
                move.w  #$8C89, (A6)
Offset_0x004262:
                move.w  #$8ADF, ($FFFFF624).w
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x00427C
                move.w  #$8A6B, ($FFFFF624).w
                move.w  #$8014, (A6)
                move.w  #$8C87, (A6)
Offset_0x00427C:
                move.w  ($FFFFF624).w, (A6)
                move.l  #$FFFFDC00, ($FFFFDCFC).w
                tst.b   ($FFFFF730).w
                beq.s   LevelInit_NoWater       ; Offset_0x0042C8
                move.w  #$8014, (A6)
                moveq   #$00, D0
                move.w  ($FFFFFE10).w, D0
                subi.w  #$0800, D0
                ror.b   #$01, D0
                lsr.w   #$06, D0
                andi.w  #$FFFE, D0
                lea     (Water_Height_Array), A1 ; Offset_0x0046B8
                move.w  $00(A1, D0), D0                
                move.w  D0, ($FFFFF646).w
                move.w  D0, ($FFFFF648).w
                move.w  D0, ($FFFFF64A).w
                clr.b   ($FFFFF64D).w
                clr.b   ($FFFFF64E).w
                move.b  #$01, ($FFFFF64C).w
LevelInit_NoWater: ; Offset_0x0042C8:
                move.w  #$001E, ($FFFFFE14).w
                moveq   #$03, D0
                bsr     PalLoad2                ; Offset_0x0028FE
                tst.b   ($FFFFF730).w
                beq.s   LevelInit_NoUndewaterPalette ; Offset_0x004300
                moveq   #$15, D0                ; Load HPz Underwater Palette
                cmpi.b  #$08, ($FFFFFE10).w
                beq.s   LevelInit_UndewaterPalette ; Offset_0x0042F0
                moveq   #$16, D0                ; Load CPz Underwater Palette
                cmpi.b  #$0D, ($FFFFFE10).w
                beq.s   LevelInit_UndewaterPalette ; Offset_0x0042F0
                moveq   #$17, D0                ; Load NGHz Underwater Palette
LevelInit_UndewaterPalette: ; Offset_0x0042F0:
                bsr     PalLoad3_Water ; Offset_0x002916 ; Call Underwater palette routine
                tst.b   ($FFFFFE30).w
                beq.s   LevelInit_NoUndewaterPalette ; Offset_0x004300
                move.b  ($FFFFFE53).w, ($FFFFF64E).w
LevelInit_NoUndewaterPalette: ; Offset_0x004300:
                tst.w   ($FFFFFFF0).w
                bmi.s   Offset_0x00434E
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                lea     PlayList(PC), A1        ; Offset_0x004140
                move.b  $00(A1, D0), D0
                bsr     Play_Music              ; Offset_0x0014C0
                move.b  #$34, ($FFFFB080).w     ; Load Title Cards Object
LevelInit_TitleCard: ; Offset_0x00431E:                
                move.b  #$0C, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                jsr     Load_Objects            ; Offset_0x00CFD0
                jsr     Build_Sprites           ; Offset_0x00D4DA
                bsr     RunPLC                  ; Offset_0x0017A8
                move.w  ($FFFFB108).w, D0
                cmp.w   ($FFFFB130).w, D0
                bne.s   LevelInit_TitleCard     ; Offset_0x00431E 
                tst.l   ($FFFFF680).w
                bne.s   LevelInit_TitleCard     ; Offset_0x00431E
                jsr     Head_Up_Display_Base    ; Offset_0x023184 Call HUD routine
Offset_0x00434E:
                moveq   #$03, D0
                bsr     PalLoad1                ; Offset_0x0028E2
                bsr     Level_Size_Load         ; Offset_0x005904
                bsr     Background_Scroll_Layer ; Offset_0x005D5C
                bset    #$02, ($FFFFEE50).w
                bsr     Main_Level_Load_16_128_Blocks ; Offset_0x00779A
                jsr     Load_16x16_Mappings_For_Dyn_Sprites ; Offset_0x02293A
                bsr     Load_Tiles_From_Start   ; Offset_0x0076BE
                jsr     Offset_0x0135DA
                bsr     Load_Colision_Index     ; Offset_0x004AAA
                bsr     Water_Effects           ; Offset_0x00465A
                move.b  #$01, ($FFFFB000).w  ; Load Sonic Object
                tst.w   ($FFFFFFF0).w
                bmi.s   Skip_Head_Up_Display ; Offset_0x004390                 
                move.b  #$21, ($FFFFB380).w  ; Load HUD Object
Skip_Head_Up_Display: ; Offset_0x004390:                
                move.b  #$02, ($FFFFB040).w  ; Load Tails Object
                move.w  ($FFFFB008).w, ($FFFFB048).w
                move.w  ($FFFFB00C).w, ($FFFFB04C).w
                subi.w  #$0020, ($FFFFB048).w
                tst.b   ($FFFFFFD2).w
                beq.s   Offset_0x0043BC
                btst    #$06, ($FFFFF604).w
                beq.s   Offset_0x0043BC
                move.b  #$01, ($FFFFFFFA).w
Offset_0x0043BC:
                move.w  #$0000, ($FFFFF602).w
                move.w  #$0000, ($FFFFF604).w
                tst.b   ($FFFFF730).w
                beq.s   Offset_0x0043E6
                move.b  #$04, ($FFFFB780).w
                move.w  #$0060, ($FFFFB788).w
                move.b  #$04, ($FFFFB7C0).w
                move.w  #$0120, ($FFFFB7C8).w
Offset_0x0043E6:
                cmpi.b  #$0A, ($FFFFFE10).w
                bne.s   Offset_0x0043F4
                move.b  #$07, ($FFFFB780).w
Offset_0x0043F4:
                jsr     Load_Object_Pos         ; Offset_0x00E250
                jsr     Load_Ring_Pos           ; Offset_0x00DE34
                jsr     Load_Objects            ; Offset_0x00CFD0
                jsr     Build_Sprites           ; Offset_0x00D4DA
                bsr     JumpToDynamic_Art_Cues  ; Offset_0x0051F8
                moveq   #$00, D0
                tst.b   ($FFFFFE30).w
                bne.s   Offset_0x004424
                move.w  D0, ($FFFFFE20).w
                move.l  D0, ($FFFFFE22).w
                move.b  D0, ($FFFFFE1B).w
Offset_0x004424:                
                move.b  D0, ($FFFFFE1A).w
                move.b  D0, ($FFFFFE2C).w
                move.b  D0, ($FFFFFE2D).w
                move.b  D0, ($FFFFFE2E).w
                move.b  D0, ($FFFFFE2F).w
                move.w  D0, ($FFFFFE08).w
                move.w  D0, ($FFFFFE02).w
                bsr     Oscillate_Num_Init      ; Offset_0x004B64
                move.b  #$01, ($FFFFFE1F).w
                move.b  #$01, ($FFFFFE1D).w
                move.b  #$01, ($FFFFFE1E).w
                move.w  #$0004, ($FFFFEED2).w
                move.w  #$0000, ($FFFFE500).w
                move.w  #$0000, ($FFFFF790).w
                move.w  #$0000, ($FFFFF740).w
                lea     (Demo_Index), A1        ; Offset_0x0049F2
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                lsl.w   #$02, D0
                move.l  $00(A1, D0), A1
                tst.w   ($FFFFFFF0).w
                bpl.s   Offset_0x004498
                lea     (Demo_End_Index), A1    ; Offset_0x004A7A
                move.w  ($FFFFFFF4).w, D0
                subq.w  #$01, D0
                lsl.w   #$02, D0
                move.l  $00(A1, D0), A1
Offset_0x004498:
                move.b  $0001(A1), ($FFFFF792).w
                subq.b  #$01, ($FFFFF792).w
                lea     (Demo_Tails_Ghz), A1   ; Offset_0x004DF8 Green Hill - Tails Demo control
                move.b  $0001(A1), ($FFFFF742).w
                subq.b  #$01, ($FFFFF742).w
                move.w  #$0668, ($FFFFF614).w
                tst.w   ($FFFFFFF0).w
                bpl.s   Offset_0x0044D2
                move.w  #$021C, ($FFFFF614).w
                cmpi.w  #$0004, ($FFFFFFF4).w
                bne.s   Offset_0x0044D2
                move.w  #$01FE, ($FFFFF614).w
Offset_0x0044D2:
                tst.b   ($FFFFF730).w
                beq.s   Offset_0x0044F2
                moveq   #$15, D0
                cmpi.b  #$08, ($FFFFFE10).w
                beq.s   Offset_0x0044EE
                moveq   #$16, D0
                cmpi.b  #$0D, ($FFFFFE10).w
                beq.s   Offset_0x0044EE
                moveq   #$17, D0
Offset_0x0044EE:
                bsr     PalLoad4_Water          ; Offset_0x002932
Offset_0x0044F2:
                move.w  #$0003, D1
Offset_0x0044F6:                
                move.b  #$08, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                dbra    D1, Offset_0x0044F6 
                move.w  #$202F, ($FFFFF626).w
                bsr     Pal_FadeTo2             ; Offset_0x00259C
                tst.w   ($FFFFFFF0).w
                bmi.s   Level_ClrTitleCard      ; Offset_0x004526
                addq.b  #$02, ($FFFFB0A4).w 
                addq.b  #$04, ($FFFFB0E4).w
                addq.b  #$04, ($FFFFB124).w
                addq.b  #$04, ($FFFFB164).w   
                bra.s   Offset_0x00452E
Level_ClrTitleCard: ; Offset_0x004526:
                moveq   #$02, D0
                jsr     LoadPLC                 ; Offset_0x00173C
Offset_0x00452E:                
                bclr    #$07, ($FFFFF600).w
Level_Main_Loop: ; Offset_0x004534:                
                bsr     Pause                   ; Offset_0x0014D2
                move.b  #$08, ($FFFFF62A).w   
                bsr     DelayProgram            ; Offset_0x0031D8
                addq.w  #$01, ($FFFFFE04).w
                bsr     Move_Sonic_In_Demo      ; Offset_0x0048DE
                bsr     Water_Effects           ; Offset_0x00465A
                jsr     Load_Objects            ; Offset_0x00CFD0
                tst.w   ($FFFFFE02).w
                bne     Level                   ; Offset_0x004150
                tst.w   ($FFFFFE08).w
                bne.s   Offset_0x00456A
                cmpi.b  #$06, ($FFFFB024).w
                bcc.s   Offset_0x00456E
Offset_0x00456A:
                bsr     Background_Scroll_Layer ; Offset_0x005D5C                 
Offset_0x00456E:
                bsr     Change_Water_Surface_Pos ; Offset_0x004630
                jsr     Load_Ring_Pos           ; Offset_0x00DE34
                bsr     JumpToDynamic_Art_Cues  ; Offset_0x0051F8
                bsr     PalCycle_Load           ; Offset_0x001F18
                bsr     RunPLC                  ; Offset_0x0017A8
                bsr     Oscillate_Num_Do        ; Offset_0x004BBA
                bsr     Change_Ring_Frame       ; Offset_0x004C52
                bsr     End_Level_Art_Load      ; Offset_0x004CC0
                jsr     Build_Sprites           ; Offset_0x00D4DA
                jsr     Load_Object_Pos         ; Offset_0x00E250
                cmpi.b  #$08, ($FFFFF600).w
                beq.s   Offset_0x0045B0
                cmpi.b  #$0C, ($FFFFF600).w
                beq     Level_Main_Loop         ; Offset_0x004534
                rts
Offset_0x0045B0:
                tst.w   ($FFFFFE02).w
                bne.s   Offset_0x0045CE
                tst.w   ($FFFFF614).w
                beq.s   Offset_0x0045CE
                cmpi.b  #$08, ($FFFFF600).w
                beq     Level_Main_Loop         ; Offset_0x004534
                move.b  #$00, ($FFFFF600).w
                rts
Offset_0x0045CE:
                cmpi.b  #$08, ($FFFFF600).w
                bne.s   Offset_0x0045E8
                move.b  #$00, ($FFFFF600).w
                tst.w   ($FFFFFFF0).w
                bpl.s   Offset_0x0045E8
                move.b  #$1C, ($FFFFF600).w
Offset_0x0045E8:
                move.w  #$003C, ($FFFFF614).w
                move.w  #$003F, ($FFFFF626).w
                clr.w   ($FFFFF794).w
Offset_0x0045F8:                
                move.b  #$08, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                bsr     Move_Sonic_In_Demo      ; Offset_0x0048DE
                jsr     Load_Objects            ; Offset_0x00CFD0
                jsr     Build_Sprites           ; Offset_0x00D4DA
                jsr     Load_Object_Pos         ; Offset_0x00E250
                subq.w  #$01, ($FFFFF794).w
                bpl.s   Offset_0x004628
                move.w  #$0002, ($FFFFF794).w
                bsr     Pal_FadeOut             ; Offset_0x00265A
Offset_0x004628:
                tst.w   ($FFFFF614).w
                bne.s   Offset_0x0045F8
                rts           
Change_Water_Surface_Pos: ; Offset_0x004630:
                tst.b   ($FFFFF730).w
                beq.s   Offset_0x004658
                move.w  ($FFFFEE00).w, D1
                btst    #$00, ($FFFFFE05).w
                beq.s   Offset_0x004646
                addi.w  #$0020, D1
Offset_0x004646:
                move.w  D1, D0
                addi.w  #$0060, D0
                move.w  D0, ($FFFFB788).w
                addi.w  #$0120, D1
                move.w  D1, ($FFFFB7C8).w
Offset_0x004658:
                rts
Water_Effects: ; Offset_0x00465A:
                tst.b   ($FFFFF730).w
                beq.s   Offset_0x0046B6
                tst.b   ($FFFFEEDC).w
                bne.s   Offset_0x004672
                cmpi.b  #$06, ($FFFFB024).w
                bcc.s   Offset_0x004672
                bsr     Dynamic_Water_Height    ; Offset_0x0046D8
Offset_0x004672:
                clr.b   ($FFFFF64E).w
                moveq   #$00, D0
                cmpi.b  #$0F, ($FFFFFE10).w
                beq.s   Offset_0x004686
                move.b  ($FFFFFE60).w, D0
                lsr.w   #$01, D0
Offset_0x004686:
                add.w   ($FFFFF648).w, D0
                move.w  D0, ($FFFFF646).w
                move.w  ($FFFFF646).w, D0
                sub.w   ($FFFFEE04).w, D0
                bcc.s   Offset_0x0046A8
                tst.w   D0
                bpl.s   Offset_0x0046A8
                move.b  #$DF, ($FFFFF625).w
                move.b  #$01, ($FFFFF64E).w
Offset_0x0046A8:
                cmpi.w  #$00DF, D0
                bcs.s   Offset_0x0046B2
                move.w  #$00DF, D0
Offset_0x0046B2:
                move.b  D0, ($FFFFF625).w
Offset_0x0046B6:
                rts
Water_Height_Array: ; Offset_0x0046B8: ; Water Height Array                 
                dc.w    $0600, $0600, $0600, $0600, $0600, $0600, $0600, $0600
                dc.w    $0600, $0600, $0600, $0710, $0600, $0600, $0410, $0510
Dynamic_Water_Height: ; Offset_0x0046D8:
                moveq   #$00, D0   
                move.w  ($FFFFFE10).w, D0
                subi.w  #$0800, D0
                ror.b   #$01, D0
                lsr.w   #$06, D0
                andi.w  #$FFFE, D0
                move.w  Dynamic_Water_Index(PC, D0), D0 ; Offset_0x00470C
                jsr     Dynamic_Water_Index(PC, D0) ; Offset_0x00470C
                moveq   #$00, D1
                move.b  ($FFFFF64C).w, D1
                move.w  ($FFFFF64A).w, D0
                sub.w   ($FFFFF648).w, D0
                beq.s   Offset_0x00470A
                bcc.s   Offset_0x004706
                neg.w   D1
Offset_0x004706:
                add.w   D1, ($FFFFF648).w
Offset_0x00470A:
                rts
Dynamic_Water_Index: ; Offset_0x00470C:      
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index 
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index 
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index            
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index 
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index 
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index   
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index 
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index 
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index            
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index 
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index 
                dc.w    Dynamic_CPz_Water-Dynamic_Water_Index ; $0D - Chemical Plant          
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index             
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index 
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index
                dc.w    Dynamic_Null_Water-Dynamic_Water_Index               
Dynamic_Null_Water: ; Offset_0x00472C:               
                rts
Dynamic_CPz_Water: ; Offset_0x00472E:
                cmpi.w  #$1DE0, ($FFFFEE00).w
                bcs.s   Offset_0x00473C
                move.w  #$0510, ($FFFFF64A).w
Offset_0x00473C:    
                rts  
S1_LZ_Wind_Tunnels:; Offset_0x00473E: leftover from Sonic 1's LZ                             
                tst.w   ($FFFFFE08).w
                bne     Offset_0x00481A
                lea     (S1_LZ_Wind_Data), A2   ; Offset_0x004824
                moveq   #$00, D0
                move.b  ($FFFFFE11).w, D0
                lsl.w   #$03, D0
                adda.w  D0, A2
                moveq   #$00, D1
                tst.b   ($FFFFFE11).w
                bne.s   Offset_0x004762
                moveq   #$01, D1
                subq.w  #$08, A2
Offset_0x004762:
                lea     ($FFFFB000).w, A1
Offset_0x004766:                
                move.w  $0008(A1), D0
                cmp.w   (A2), D0
                bcs     Offset_0x004804
                cmp.w   $0004(A2), D0
                bcc     Offset_0x004804
                move.w  $000C(A1), D2
                cmp.w   $0002(A2), D2
                bcs     Offset_0x004804
                cmp.w   $0006(A2), D2
                bcc.s   Offset_0x004804
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$3F, D0
                bne.s   Offset_0x00479E
                move.w  #$00D0, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x00479E:
                tst.b   ($FFFFF7C9).w
                bne     Offset_0x00481A
                cmpi.b  #$04, $0024(A1)
                bcc.s   Offset_0x004816
                move.b  #$01, ($FFFFF7C7).w
                subi.w  #$0080, D0
                cmp.w   (A2), D0
                bcc.s   Offset_0x0047CC
                moveq   #$02, D0
                cmpi.b  #$01, ($FFFFFE11).w
                bne.s   Offset_0x0047C8
                neg.w   D0
Offset_0x0047C8:
                add.w   D0, $000C(A1)
Offset_0x0047CC:
                addi.w  #$0004, $0008(A1)
                move.w  #$0400, $0010(A1)
                move.w  #$0000, $0012(A1)
                move.b  #$0F, $001C(A1)
                bset    #$01, $0022(A1)
                btst    #$00, ($FFFFF604).w
                beq.s   Offset_0x0047F6
                subq.w  #$01, $000C(A1)
Offset_0x0047F6:
                btst    #$01, ($FFFFF604).w
                beq.s   Offset_0x004802
                addq.w  #$01, $000C(A1)
Offset_0x004802:
                rts
Offset_0x004804:
                addq.w  #$08, A2
                dbra    D1, Offset_0x004766
                tst.b   ($FFFFF7C7).w
                beq.s   Offset_0x00481A
                move.b  #$00, $001C(A1)
Offset_0x004816:
                clr.b   ($FFFFF7C7).w
Offset_0x00481A:
                rts                
;Offset_0x00481C:
                dc.w    $0A80, $0300, $0C10, $0380
S1_LZ_Wind_Data: ; Offset_0x004824:
                dc.w    $0F80, $0100, $1410, $0180, $0460, $0400, $0710, $0480
                dc.w    $0A20, $0600, $1610, $06E0, $0C80, $0600, $13D0, $0680                
S1_LZ_Water_Slides: ; Offset_0x004844:
                lea     ($FFFFB000).w, A1
                btst    #$01, $0022(A1)
                bne.s   Offset_0x004878
                move.w  $000C(A1), D0
                andi.w  #$0700, D0
                move.b  $0008(A1), D1
                andi.w  #$007F, D1
                add.w   D1, D0
                lea     ($FFFF8000).w, A2
                move.b  $00(A2, D0), D0
                lea     Offset_0x0048DD(PC), A2
                moveq   #$06, D1
Offset_0x004870:                
                cmp.b   -(A2), D0
                dbeq    D1, Offset_0x004870
                beq.s   Offset_0x00488A
Offset_0x004878:
                tst.b   ($FFFFF7CA).w
                beq.s   Offset_0x004888
                move.w  #$0005, $002E(A1)
                clr.b   ($FFFFF7CA).w
Offset_0x004888:
                rts
Offset_0x00488A:
                cmpi.w  #$0003, D1
                bcc.s   Offset_0x004892
                nop
Offset_0x004892:
                bclr    #$00, $0022(A1)
                move.b  Offset_0x0048CE(PC, D1), D0
                move.b  D0, $0014(A1)
                bpl.s   Offset_0x0048A8
                bset    #$00, $0022(A1)
Offset_0x0048A8:
                clr.b   $0015(A1)
                move.b  #$1B, $001C(A1)
                move.b  #$01, ($FFFFF7CA).w
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$1F, D0
                bne.s   Offset_0x0048CC
                move.w  #$00D0, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x0048CC:
                rts  
Offset_0x0048CE:
                dc.b    $0A, $F5, $0A, $F6, $F5, $F4, $0B, $00, $02, $07, $03, $4C, $4B, $08, $04 
Offset_0x0048DD:
                dc.b    $00                                                                           
Move_Sonic_In_Demo: ; Offset_0x0048DE:
                tst.w   ($FFFFFFF0).w
                bne.s   Move_Demo_On            ; Offset_0x00495C
                rts
Move_Sonic_Demo_Record: ; unused subroutine for	recording demos                
                lea     ($00FE8000), A1
                move.w  ($FFFFF790).w, D0
                adda.w  D0, A1
                move.b  ($FFFFF604).w, D0
                cmp.b   (A1), D0
                bne.s   Offset_0x004908
                addq.b  #$01, $0001(A1)
                cmpi.b  #$FF, $0001(A1)
                beq.s   Offset_0x004908
                bra.s   Offset_0x00491C
Offset_0x004908:
                move.b  D0, $0002(A1)
                move.b  #$00, $0003(A1)
                addq.w  #$02, ($FFFFF790).w
                andi.w  #$03FF, ($FFFFF790).w 
Offset_0x00491C:
                cmpi.b  #$00, ($FFFFFE10).w
                bne.s   Offset_0x00495A
                lea     ($00FEC000), A1
                move.w  ($FFFFF740).w, D0
                adda.w  D0, A1
                move.b  ($FFFFF606).w, D0
                cmp.b   (A1), D0
                bne.s   Offset_0x004946
                addq.b  #$01, $0001(A1)
                cmpi.b  #$FF, $0001(A1)
                beq.s   Offset_0x004946
                bra.s   Offset_0x00495A
Offset_0x004946:
                move.b  D0, $0002(A1)
                move.b  #$00, $0003(A1)
                addq.w  #$02, ($FFFFF740).w
                andi.w  #$03FF, ($FFFFF740).w
Offset_0x00495A:
                rts
Move_Demo_On: ; Offset_0x00495C:
                tst.b   ($FFFFF604).w
                bpl.s   Offset_0x00496E
                tst.w   ($FFFFFFF0).w
                bmi.s   Offset_0x00496E
                move.b  #$04, ($FFFFF600).w
Offset_0x00496E:
                lea     (Demo_Index), A1        ; Offset_0x0049F2
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                cmpi.b  #$10, ($FFFFF600).w
                bne.s   Offset_0x004984
                moveq   #$06, D0
Offset_0x004984:
                lsl.w   #$02, D0
                move.l  $00(A1, D0), A1
                move.w  ($FFFFF790).w, D0
                adda.w  D0, A1
                move.b  (A1), D0
                lea     ($FFFFF604).w, A0
                move.b  D0, D1
                moveq   #$00, D2
                eor.b   D2, D0
                move.b  D1, (A0)+
                and.b   D1, D0
                move.b  D0, (A0)+
                subq.b  #$01, ($FFFFF792).w
                bcc.s   Offset_0x0049B2
                move.b  $0003(A1), ($FFFFF792).w
                addq.w  #$02, ($FFFFF790).w
Offset_0x0049B2:
                cmpi.b  #$00, ($FFFFFE10).w
                bne.s   Offset_0x0049EA
                lea     (Demo_Tails_Ghz), A1    ; Offset_0x004DF8
                move.w  ($FFFFF740).w, D0
                adda.w  D0, A1
                move.b  (A1), D0
                lea     ($FFFFF606).w, A0
                move.b  D0, D1
                moveq   #$00, D2
                eor.b   D2, D0
                move.b  D1, (A0)+
                and.b   D1, D0
                move.b  D0, (A0)+
                subq.b  #$01, ($FFFFF742).w
                bcc.s   Offset_0x0049E8
                move.b  $0003(A1), ($FFFFF742).w
                addq.w  #$02, ($FFFFF740).w
Offset_0x0049E8:
                rts
Offset_0x0049EA:
                move.w  #$0000, ($FFFFF606).w
                rts
Demo_Index: ; Offset_0x0049F2: ; Demo sequence array
                dc.l    Demo_Green_Hill     ; $00 - Green Hill
                dc.l    Demo_Green_Hill     ; $01 
                dc.l    Demo_Green_Hill     ; $02 - Wood
                dc.l    Demo_Green_Hill     ; $03 
                dc.l    Demo_Green_Hill     ; $04 - Metropolis 
                dc.l    Demo_Green_Hill     ; $05 - Metropolis 
                dc.l    Demo_Green_Hill     ; $06
                dc.l    Demo_Hill_Top       ; $07 - Hill Top
                dc.l    Demo_Hidden_Palace  ; $08 - Hidden Palace
                dc.l    Demo_Green_Hill     ; $09
                dc.l    Demo_Green_Hill     ; $0A - Oil Ocean
                dc.l    Demo_Green_Hill     ; $0B - Dust Hill
                dc.l    Demo_Green_Hill     ; $0C - Casino Night
                dc.l    Demo_Chemical_Plant ; $0D - Chemical Plant
                dc.l    Demo_Green_Hill     ; $0E - Genocide City
                dc.l    Demo_Green_Hill     ; $0F - Neo Green Hill
                dc.l    Demo_Green_Hill     ; $10 - Death Egg
;Offset_0x004A36:
                dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
                dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
                dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
                dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
                dc.l    $00FE8000                                
Demo_End_Index: ; Offset_0x004A7A:                
                dc.w    $008B, $0837, $0042, $085C, $006A, $085F, $002F, $082C
                dc.w    $0021, $0803, $2830, $0808, $002E, $0815, $000F, $0846
                dc.w    $001A, $08FF, $08CA, $0000, $0000, $0000, $0000, $0000
Load_Colision_Index: ; Offset_0x004AAA:
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                lsl.w   #$02, D0
                move.l  #$FFFFD000, ($FFFFF796).w
                move.l  Primary_Colision_Index(PC, D0), A1 ; Offset_0x004ADC
                lea     ($FFFFD000).w, A2
                bsr.s   Load_Colision           ; Offset_0x004ACC
                move.l  Secundary_Colision_Index(PC, D0), A1 ; Offset_0x004B20
                lea     ($FFFFD600).w, A2
Load_Colision: ; Offset_0x004ACC:
                move.w  #$02FF, D1
                moveq   #$00, D2
Load_Colision_Loop: ; Offset_0x004AD2:
                move.b  (A1)+, D2
                move.w  D2, (A2)+
                dbra    D1, Load_Colision_Loop    ; Offset_0x004AD2
                rts  
Primary_Colision_Index: ; Offset_0x004ADC: 
                dc.l    Green_Hill_Colision_1     ; Offset_0x02F2EA
                dc.l    Special_Stage_1           ; Offset_0x031CEA
                dc.l    Wood_Colision             ; Offset_0x02F8EA
                dc.l    Special_Stage_1           ; Offset_0x031CEA
                dc.l    Metropolis_Colision       ; Offset_0x02FBEA
                dc.l    Metropolis_Colision       ; Offset_0x02FBEA
                dc.l    Special_Stage_1           ; Offset_0x031CEA
                dc.l    Green_Hill_Colision_1     ; Offset_0x02F2EA
                dc.l    Hidden_Palace_Colision_1  ; Offset_0x02FEEA
                dc.l    Special_Stage_1           ; Offset_0x031CEA
                dc.l    Oil_Ocean_Colision        ; Offset_0x0304EA
                dc.l    Dust_Hill_Colision        ; Offset_0x0307EA
                dc.l    Casino_Night_Colision_1   ; Offset_0x030AEA
                dc.l    Chemical_Plant_Colision_1 ; Offset_0x0310EA
                dc.l    Special_Stage_1           ; Offset_0x031CEA
                dc.l    Neo_Green_Hill_Colision_1 ; Offset_0x0316EA
                dc.l    Special_Stage_1           ; Offset_0x031CEA 
Secundary_Colision_Index: ; Offset_0x004B20:                
                dc.l    Green_Hill_Colision_2     ; Offset_0x02F5EA
                dc.l    Special_Stage_1           ; Offset_0x031CEA
                dc.l    Wood_Colision             ; Offset_0x02F8EA
                dc.l    Special_Stage_1           ; Offset_0x031CEA
                dc.l    Metropolis_Colision       ; Offset_0x02FBEA
                dc.l    Metropolis_Colision       ; Offset_0x02FBEA
                dc.l    Special_Stage_1           ; Offset_0x031CEA
                dc.l    Green_Hill_Colision_2     ; Offset_0x02F5EA
                dc.l    Hidden_Palace_Colision_2  ; Offset_0x0301EA
                dc.l    Special_Stage_1           ; Offset_0x031CEA
                dc.l    Oil_Ocean_Colision        ; Offset_0x0304EA
                dc.l    Dust_Hill_Colision        ; Offset_0x0307EA
                dc.l    Casino_Night_Colision_2   ; Offset_0x030DEA
                dc.l    Chemical_Plant_Colision_2 ; Offset_0x0313EA
                dc.l    Special_Stage_1           ; Offset_0x031CEA
                dc.l    Neo_Green_Hill_Colision_2 ; Offset_0x0319EA
                dc.l    Special_Stage_1           ; Offset_0x031CEA                  
Oscillate_Num_Init: ; Offset_0x004B64:
                lea     ($FFFFFE5E).w, A1
                lea     (Oscillate_Data), A2    ; Offset_0x004B78
                moveq   #$20, D1
Offset_0x004B70:
                move.w  (A2)+, (A1)+
                dbra    D1, Offset_0x004B70
                rts
Oscillate_Data: ; Offset_0x004B78:
                dc.w    $007D, $0080, $0000, $0080, $0000, $0080, $0000, $0080
                dc.w    $0000, $0080, $0000, $0080, $0000, $0080, $0000, $0080
                dc.w    $0000, $0080, $0000, $3848, $00EE, $2080, $00B4, $3080
                dc.w    $010E, $5080, $01C2, $7080, $0276, $0080, $0000, $4000
                dc.w    $00FE                  
Oscillate_Num_Do: ; Offset_0x004BBA:
                cmpi.b  #$06, ($FFFFB024).w
                bcc.s   Offset_0x004C10
                lea     ($FFFFFE5E).w, A1
                lea     (Oscillate_Data2), A2   ; Offset_0x004C12
                move.w  (A1)+, D3
                moveq   #$0F, D1 
Offset_0x004BD0:                
                move.w  (A2)+, D2
                move.w  (A2)+, D4
                btst    D1, D3
                bne.s   Offset_0x004BF0
                move.w  $0002(A1), D0
                add.w   D2, D0
                move.w  D0, $0002(A1)
                add.w   D0, $0000(A1)
                cmp.b   $0000(A1), D4
                bhi.s   Offset_0x004C06
                bset    D1, D3
                bra.s   Offset_0x004C06
Offset_0x004BF0:
                move.w  $0002(A1), D0
                sub.w   D2, D0
                move.w  D0, $0002(A1)
                add.w   D0, $0000(A1)
                cmp.b   $0000(A1), D4
                bls.s   Offset_0x004C06
                bclr    D1, D3
Offset_0x004C06:
                addq.w  #$04, A1
                dbra    D1, Offset_0x004BD0   
                move.w  D3, ($FFFFFE5E).w
Offset_0x004C10:
                rts                
Oscillate_Data2: ; Offset_0x004C12:
                dc.w    $0002, $0010, $0002, $0018, $0002, $0020, $0002, $0030
                dc.w    $0004, $0020, $0008, $0008, $0008, $0040, $0004, $0040
                dc.w    $0002, $0038, $0002, $0038, $0002, $0020, $0003, $0030
                dc.w    $0005, $0050, $0007, $0070, $0002, $0040, $0002, $0040
Change_Ring_Frame: ; Offset_0x004C52:
                subq.b  #$01, ($FFFFFEC0).w
                bpl.s   Offset_0x004C68
                move.b  #$0B, ($FFFFFEC0).w
                subq.b  #$01, ($FFFFFEC1).w
                andi.b  #$07, ($FFFFFEC1).w                 
Offset_0x004C68:
                subq.b  #$01, ($FFFFFEC2).w
                bpl.s   Offset_0x004C7E
                move.b  #$07, ($FFFFFEC2).w
                addq.b  #$01, ($FFFFFEC3).w
                andi.b  #$03, ($FFFFFEC3).w
Offset_0x004C7E:
                subq.b  #$01, ($FFFFFEC4).w
                bpl.s   Offset_0x004C9C
                move.b  #$07, ($FFFFFEC4).w
                addq.b  #$01, ($FFFFFEC5).w
                cmpi.b  #$06, ($FFFFFEC5).w
                bcs.s   Offset_0x004C9C
                move.b  #$00, ($FFFFFEC5).w
Offset_0x004C9C:
                tst.b   ($FFFFFEC6).w
                beq.s   Offset_0x004CBE
                moveq   #$00, D0
                move.b  ($FFFFFEC6).w, D0
                add.w   ($FFFFFEC8).w, D0   
                move.w  D0, ($FFFFFEC8).w
                rol.w   #$07, D0
                andi.w  #$0003, D0
                move.b  D0, ($FFFFFEC7).w
                subq.b  #$01, ($FFFFFEC6).w
Offset_0x004CBE:
                rts
End_Level_Art_Load: ; Offset_0x004CC0: ; Test for load end level sprites...
                tst.w   ($FFFFFE08).w
                bne     Skip_End_Level_Art_Load ; Offset_0x004CF6
                cmpi.w  #$0001, ($FFFFFE10).w
                beq.s   Skip_End_Level_Art_Load ; Offset_0x004CF6
                move.w  ($FFFFEE00).w, D0
                move.w  ($FFFFEECA).w, D1
                subi.w  #$0100, D1
                cmp.w   D1, D0
                blt.s   Skip_End_Level_Art_Load ; Offset_0x004CF6
                tst.b   ($FFFFFE1E).w
                beq.s   Skip_End_Level_Art_Load ; Offset_0x004CF6
                cmp.w   ($FFFFEEC8).w, D1
                beq.s   Skip_End_Level_Art_Load ; Offset_0x004CF6
                move.w  D1, ($FFFFEEC8).w
                moveq   #$27, D0
                bra     LoadPLC2                ; Offset_0x00176E
Skip_End_Level_Art_Load: ; Offset_0x004CF6:
                rts                
Demo_Green_Hill: ; Offset_0x004CF8: ; $00 - Green Hill Sonic Demo control
                dc.w    $0044, $0800, $2805, $0859, $2804, $0835, $2806, $0842
                dc.w    $2804, $0819, $000F, $080A, $2809, $084A, $2809, $0810
                dc.w    $0005, $041B, $0200, $084B, $282D, $0855, $2809, $0826
                dc.w    $281C, $0819, $2808, $08FF, $0896, $2813, $081D, $2819
                dc.w    $082A, $2807, $0900, $0100, $0520, $0402, $0501, $0000
                dc.w    $083A, $0025, $040A, $2409, $041C, $0003, $083A, $2806
                dc.w    $080C, $0016, $0800, $280F, $0833, $2807, $0804, $0046
                dc.w    $086A, $0029, $8000, $C000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000              
Demo_Tails_Ghz: ; Offset_0x004DF8: ; $00 - Green Hill Tails Demo control
                dc.w    $0046, $081E, $280A, $085E, $2830, $0866, $000F, $080F
                dc.w    $282E, $0800, $001F, $0812, $0013, $080A, $0016, $040D
                dc.w    $0008, $0410, $0030, $086B, $2814, $0880, $0A02, $0223
                dc.w    $0007, $0813, $2817, $0800, $0003, $0403, $0500, $0100
                dc.w    $0901, $083C, $2807, $0018, $084D, $2812, $0801, $0004
                dc.w    $080B, $0007, $081B, $0009, $2005, $2813, $0804, $0021
                dc.w    $0811, $0020, $0851, $000B, $0457, $000D, $0227, $0A00
                dc.w    $0002, $0901, $082A, $2815, $0803, $2819, $080A, $000A
                dc.w    $0802, $281B, $0833, $0027, $083A, $0912, $0107, $0013
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000   
Demo_Hill_Top: ; Offset_0x004EF8: ; $07 - Hill Top Sonic Demo control
                dc.w    $0005, $011D, $0903, $2905, $0910, $0100, $0013, $0400
                dc.w    $050A, $2507, $0510, $0401, $000C, $0804, $090C, $290A
                dc.w    $0910, $0803, $001C, $2007, $000B, $0406, $0025, $2006
                dc.w    $0022, $0805, $0025, $040E, $0033, $0807, $0039, $080A
                dc.w    $2808, $0816, $0024, $0874, $2802, $2907, $0903, $000F
                dc.w    $080D, $0005, $040C, $0001, $2002, $2800, $2A08, $2802
                dc.w    $081E, $0004, $0413, $0012, $0818, $280B, $0811, $002C
                dc.w    $080C, $000D, $2004, $2803, $0805, $0022, $0412, $0004
                dc.w    $081A, $000D, $0406, $0037, $080C, $0019, $080D, $000C
                dc.w    $0409, $0003, $0820, $001A, $0406, $0022, $0809, $0009
                dc.w    $0816, $002F, $080E, $2804, $2002, $0008, $0419, $0005
                dc.w    $0806, $2808, $0808, $0024, $0872, $0A09, $020E, $0A6B
                dc.w    $8A00, $4000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
Demo_Hidden_Palace: ; Offset_0x004FF8: ; $07 - Hidden Palace Sonic Demo control
                dc.w    $0040, $0833, $2806, $0839, $2805, $080D, $0025, $0810
                dc.w    $282A, $081C, $0200, $2603, $2200, $2A00, $2806, $0822
                dc.w    $0200, $060F, $0408, $0600, $020E, $062F, $0279, $0601
                dc.w    $0443, $240F, $0417, $0009, $081C, $2803, $0845, $0005
                dc.w    $081A, $2833, $0872, $000F, $0415, $2410, $040B, $0024
                dc.w    $0401, $2408, $0407, $0006, $0404, $001E, $240E, $0415
                dc.w    $001E, $2003, $240F, $0400, $0007, $0812, $0409, $240F
                dc.w    $0406, $000A, $0462, $2412, $2004, $0021, $280E, $0816
                dc.w    $0019, $0829, $0063, $0415, $2409, $0439, $0031, $0825
                dc.w    $2802, $0812, $0093, $8000, $C000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000 
Demo_Chemical_Plant: ; Offset_0x0050F8: ; $07 - Chemical Plant Sonic Demo control
                dc.w    $001B, $0130, $0019, $0829, $2813, $0803, $001D, $2003
                dc.w    $281E, $0802, $0009, $0405, $002E, $081E, $2805, $2003
                dc.w    $000B, $0401, $0507, $0400, $002F, $2803, $2A04, $0A00
                dc.w    $0806, $0024, $0802, $2806, $0801, $0026, $08FF, $0814
                dc.w    $280A, $0803, $0060, $080E, $2807, $080C, $0008, $040B
                dc.w    $0023, $0805, $0093, $0819, $2811, $0878, $280F, $08FF
                dc.w    $0883, $280D, $0882, $001F, $8000, $4000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000 
JumpToDynamic_Art_Cues: ;  Offset_0x0051F8:
                jmp     Dynamic_Art_Cues ; Offset_0x0223EC 
                dc.w    $0000 ; Filler  
;===============================================================================
; Special Stage
; [ Begin ]               
;===============================================================================                                 
SpecialStage: ; Offset_0x005200:       
                move.w  #$00CA, D0
                bsr     Play_Sfx                ; Offset_0x0014C6
                bsr     Pal_MakeFlash           ; Offset_0x002762
                move    #$2700, SR
                lea     ($00C00004), A6
                move.w  #$8B03, (A6)
                move.w  #$8004, (A6)
                move.w  #$8AAF, ($FFFFF624).w
                move.w  #$9011, (A6)
                move.w  ($FFFFF60C).w, D0
                andi.b  #$BF, D0
                move.w  D0, ($00C00004)
                bsr     ClearScreen             ; Offset_0x001418
                move    #$2300, SR
                lea     ($00C00004), A5
                move.w  #$8F01, (A5)
                move.l  #$946F93FF, (A5)
                move.w  #$9780, (A5)
                move.l  #$50000081, (A5)
                move.w  #$0000, ($00C00000)
Offset_0x005260:                
                move.w  (A5), D1
                btst    #$01, D1
                bne.s   Offset_0x005260
                move.w  #$8F02, (A5)
                bsr     SS_Background_Load      ; Offset_0x0054CA
                moveq   #$14, D0
                bsr     RunPLC_ROM              ; Offset_0x0018A8
                lea     ($FFFFD000).w, A1
                moveq   #$00, D0
                move.w  #$07FF, D1
Offset_0x005280:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x005280
                lea     ($FFFFF700).w, A1
                moveq   #$00, D0
                move.w  #$003F, D1
Offset_0x005290:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x005290
                lea     ($FFFFFE60).w, A1
                moveq   #$00, D0
                move.w  #$0027, D1
Offset_0x0052A0:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0052A0
                lea     ($FFFFAA00).w, A1
                moveq   #$00, D0
                move.w  #$007F, D1
Offset_0x0052B0:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0052B0
                clr.b   ($FFFFF64E).w
                clr.w   ($FFFFFE02).w
                moveq   #$16, D0
                bsr     PalLoad1                ; Offset_0x0028E2
                jsr     (S1_Special_Stage_Load) ; Offset_0x021A36
                move.l  #$00000000, ($FFFFEE00).w
                move.l  #$00000000, ($FFFFEE04).w
                move.b  #$09, ($FFFFB000).w
                bsr     S1_Pal_Cycle_Special_Stage ; Offset_0x005584
                clr.w   ($FFFFF750).w
                move.w  #$0040, ($FFFFF752).w
                move.w  #$0089, D0
                bsr     Play_Music              ; Offset_0x0014C0
                move.w  #$0000, ($FFFFF790).w
                lea     (Demo_Index), A1        ; Offset_0x0049F2
                moveq   #$06, D0
                lsl.w   #$02, D0
                move.l  $00(A1, D0), A1
                move.b  $0001(A1), ($FFFFF792).w
                subq.b  #$01, ($FFFFF792).w
                clr.w   ($FFFFFE20).w
                clr.b   ($FFFFFE1B).w
                move.w  #$0000, ($FFFFFE08).w
                move.w  #$0708, ($FFFFF614).w
                tst.b   ($FFFFFFD2).w
                beq.s   Offset_0x00533C
                btst    #$06, ($FFFFF604).w
                beq.s   Offset_0x00533C
                move.b  #$01, ($FFFFFFFA).w
Offset_0x00533C:
                move.w  ($FFFFF60C).w, D0
                ori.b   #$40, D0
                move.w  D0, ($00C00004)
                bsr     Pal_MakeWhite           ; Offset_0x0026B8
Offset_0x00534E:                
                bsr     Pause                   ; Offset_0x0014D2
                move.b  #$0A, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                bsr     Move_Sonic_In_Demo      ; Offset_0x0048DE
                move.w  ($FFFFF604).w, ($FFFFF602).w
                jsr     (Load_Objects)          ; Offset_0x00CFD0
                jsr     (Build_Sprites)         ; Offset_0x00D4DA
                jsr     (S1_SS_Show_Layout)     ; Offset_0x021508
                bsr     S1_SS_Bg_Animate        ; Offset_0x005806
                tst.w   ($FFFFFFF0).w
                beq.s   Offset_0x00538A
                tst.w   ($FFFFF614).w
                beq     Offset_0x0054B8
Offset_0x00538A:
                cmpi.b  #$10, ($FFFFF600).w
                beq     Offset_0x00534E
                tst.w   ($FFFFFFF0).w
                bne     Offset_0x0054C0
                move.b  #$0C, ($FFFFF600).w
                cmpi.w  #$0503, ($FFFFFE10).w
                bcs.s   Offset_0x0053AE
                clr.w   ($FFFFFE10).w
Offset_0x0053AE:
                move.w  #$003C, ($FFFFF614).w
                move.w  #$003F, ($FFFFF626).w
                clr.w   ($FFFFF794).w
Offset_0x0053BE:                
                move.b  #$16, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                bsr     Move_Sonic_In_Demo      ; Offset_0x0048DE
                move.w  ($FFFFF604).w, ($FFFFF602).w
                jsr     (Load_Objects)          ; Offset_0x00CFD0
                jsr     (Build_Sprites)         ; Offset_0x00D4DA
                jsr     (S1_SS_Show_Layout)     ; Offset_0x021508
                bsr     S1_SS_Bg_Animate        ; Offset_0x005806
                subq.w  #$01, ($FFFFF794).w
                bpl.s   Offset_0x0053F8
                move.w  #$0002, ($FFFFF794).w
                bsr     Pal_ToWhite             ; Offset_0x002782
Offset_0x0053F8:
                tst.w   ($FFFFF614).w
                bne.s   Offset_0x0053BE
                move    #$2700, SR
                lea     ($00C00004), A6
                move.w  #$8230, (A6)
                move.w  #$8407, (A6)
                move.w  #$9001, (A6)
                bsr     ClearScreen             ; Offset_0x001418
                move.l  #$70000002, ($00C00004)
                lea     (Title_Cards), A0 ; Offset_0x07EA04
                bsr     NemesisDec              ; Offset_0x0015FC
                jsr     (Head_Up_Display_Base)  ; Offset_0x023184
                move    #$2300, SR
                moveq   #$16, D0
                bsr     PalLoad2                ; Offset_0x0028FE
                moveq   #$00, D0
                bsr     LoadPLC2                ; Offset_0x00176E
                moveq   #$1B, D0
                bsr     LoadPLC                 ; Offset_0x00173C
                move.b  #$01, ($FFFFFE1F).w
                move.b  #$01, ($FFFFF7D6).w
                move.w  ($FFFFFE20).w, D0
                mulu.w  #$000A, D0
                move.w  D0, ($FFFFF7D4).w
                move.w  #$008E, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                lea     ($FFFFB000).w, A1
                moveq   #$00, D0
                move.w  #$07FF, D1
Offset_0x005474:                
                move.l  D0, (A1)+
                dbra    D1, Offset_0x005474
                move.b  #$7E, ($FFFFB5C0).w
Offset_0x005480:                
                bsr     Pause                   ; Offset_0x0014D2
                move.b  #$0C, ($FFFFF62A).w
                bsr     DelayProgram            ; Offset_0x0031D8
                jsr     (Load_Objects)          ; Offset_0x00CFD0
                jsr     (Build_Sprites)         ; Offset_0x00D4DA
                bsr     RunPLC                  ; Offset_0x0017A8
                tst.w   ($FFFFFE02).w
                beq.s   Offset_0x005480
                tst.l   ($FFFFF680).w
                bne.s   Offset_0x005480
                move.w  #$00CA, D0
                bsr     Play_Sfx                ; Offset_0x0014C6
                bsr     Pal_MakeFlash           ; Offset_0x002762
                rts
Offset_0x0054B8:
                move.b  #$00, ($FFFFF600).w
                rts
Offset_0x0054C0:
                cmpi.b  #$0C, ($FFFFF600).w
                beq.s   Offset_0x0054B8
                rts
SS_Background_Load: ; Offset_0x0054CA:
                lea     ($FFFF0000), A1
                move.w  #$4051, D0
                bsr     EnigmaDec               ; Offset_0x0018DA
                move.l  #$50000001, D3
                lea     ($FFFF0080), A2
                moveq   #$06, D7
Offset_0x0054E6:                
                move.l  D3, D0
                moveq   #$03, D6
                moveq   #$00, D4
                cmpi.w  #$0003, D7
                bcc.s   Offset_0x0054F4
                moveq   #$01, D4
Offset_0x0054F4:
                moveq   #$07, D5
Offset_0x0054F6:                
                move.l  A2, A1
                eori.b  #$01, D4
                bne.s   Offset_0x00550A
                cmpi.w  #$0006, D7
                bne.s   Offset_0x00551A
                lea     ($FFFF0000), A1
Offset_0x00550A:
                movem.l D0-D4, -(A7)
                moveq   #$07, D1
                moveq   #$07, D2
                bsr     ShowVDPGraphics         ; Offset_0x00154C
                movem.l (A7)+, D0-D4
Offset_0x00551A:
                addi.l  #$00100000, D0
                dbra    D5, Offset_0x0054F6
                addi.l  #$03800000, D0
                eori.b  #$01, D4
                dbra    D6, Offset_0x0054F4
                addi.l  #$10000000, D3
                bpl.s   Offset_0x005544
                swap.w  D3
                addi.l  #$0000C000, D3
                swap.w  D3
Offset_0x005544:
                adda.w  #$0080, A2
                dbra    D7, Offset_0x0054E6
                lea     ($FFFF0000), A1
                move.w  #$4000, D0
                bsr     EnigmaDec               ; Offset_0x0018DA
                lea     ($FFFF0000), A1
                move.l  #$40000003, D0
                moveq   #$3F, D1
                moveq   #$1F, D2
                bsr     ShowVDPGraphics         ; Offset_0x00154C
                lea     ($FFFF0000), A1
                move.l  #$50000003, D0
                moveq   #$3F, D1
                moveq   #$3F, D2
                bsr     ShowVDPGraphics         ; Offset_0x00154C
                rts                             
S1_Pal_Cycle_Special_Stage: ; Offset_0x005584:
                tst.w   ($FFFFF63A).w
                bne.s   Offset_0x005608
                subq.w  #$01, ($FFFFF79C).w
                bpl.s   Offset_0x005608
                lea     ($00C00004), A6
                move.w  ($FFFFF79A).w, D0
                addq.w  #$01, ($FFFFF79A).w
                andi.w  #$001F, D0
                lsl.w   #$02, D0
                lea     (Offset_0x00565E), A0
                adda.w  D0, A0 
                move.b  (A0)+, D0
                bpl.s   Offset_0x0055B4
                move.w  #$01FF, D0
Offset_0x0055B4:  
                move.w  D0, ($FFFFF79C).w
                moveq   #$00, D0
                move.b  (A0)+, D0
                move.w  D0, ($FFFFF7A0).w 
                lea     (Offset_0x0056DE), A1
                lea     $00(A1, D0), A1
                move.w  #$8200, D0
                move.b  (A1)+, D0
                move.w  D0, (A6)
                move.b  (A1), ($FFFFF616).w
                move.w  #$8400, D0
                move.b  (A0)+, D0
                move.w  D0, (A6) 
                move.l  #$40000010, ($00C00004) 
                move.l  ($FFFFF616).w, ($00C00000)
                moveq   #$00, D0
                move.b  (A0)+, D0
                bmi.s   Offset_0x00560A
                lea     (Pal_S1_SS_Cycle1), A1  ; Offset_0x0056EC
                adda.w  D0, A1
                lea     ($FFFFFB4E).w, A2
                move.l  (A1)+, (A2)+
                move.l  (A1)+, (A2)+
                move.l  (A1)+, (A2)+
Offset_0x005608: 
                rts 
Offset_0x00560A:
                move.w  ($FFFFF79E).w, D1
                cmpi.w  #$008A, D0 
                bcs.s   Offset_0x005616
                addq.w  #$01, D1
Offset_0x005616:  
                mulu.w  #$002A, D1
                lea     (Pal_S1_SS_Cycle2), A1  ; Offset_0x005734
                adda.w  D1, A1
                andi.w  #$007F, D0
                bclr    #$00, D0
                beq.s   Offset_0x00563A
                lea     ($FFFFFB6E).w, A2
                move.l  (A1), (A2)+
                move.l  $0004(A1), (A2)+
                move.l  $0008(A1), (A2)+
Offset_0x00563A:                
                adda.w  #$000C, A1
                lea     ($FFFFFB5A).w, A2
                cmpi.w  #$000A, D0
                bcs.s   Offset_0x005650
                subi.w  #$000A, D0
                lea     ($FFFFFB7A).w, A2
Offset_0x005650:      
                move.w  D0, D1   
                add.w   D0, D0  
                add.w   D1, D0  
                adda.w  D0, A1 
                move.l  (A1)+, (A2)+    
                move.w  (A1)+, (A2)+ 
                rts                                     
Offset_0x00565E:  
                dc.w    $0300, $0792, $0300, $0790, $0300, $078E, $0300, $078C
                dc.w    $0300, $078B, $0300, $0780, $0300, $0782, $0300, $0784
                dc.w    $0300, $0786, $0300, $0788, $0708, $0700, $070A, $070C
                dc.w    $FF0C, $0718, $FF0C, $0718, $070A, $070C, $0708, $0700
                dc.w    $0300, $0688, $0300, $0686, $0300, $0684, $0300, $0682
                dc.w    $0300, $0681, $0300, $068A, $0300, $068C, $0300, $068E
                dc.w    $0300, $0690, $0300, $0692, $0702, $0624, $0704, $0630
                dc.w    $FF06, $063C, $FF06, $063C, $0704, $0630, $0702, $0624
Offset_0x0056DE:  
                dc.w    $1001, $1800, $1801, $2000, $2001, $2800, $2801            
Pal_S1_SS_Cycle1: ; Offset_0x0056EC: 
                dc.w    $0400, $0600, $0620, $0624, $0664, $0666, $0600, $0820
                dc.w    $0A64, $0A68, $0AA6, $0AAA, $0800, $0C42, $0E86, $0ECA
                dc.w    $0EEC, $0EEE, $0400, $0420, $0620, $0620, $0864, $0666
                dc.w    $0420, $0620, $0842, $0842, $0A86, $0AAA, $0620, $0842
                dc.w    $0A64, $0C86, $0EA8, $0EEE
Pal_S1_SS_Cycle2: ; Offset_0x005734: 
                dc.w    $0EEA, $0EE0, $0AA0, $0880, $0660, $0440, $0EE0, $0AA0
                dc.w    $0440, $0AA0, $0AA0, $0AA0, $0860, $0860, $0860, $0640
                dc.w    $0640, $0640, $0400, $0400, $0400, $0AEC, $06EA, $04C6
                dc.w    $02A4, $0082, $0060, $06EA, $04C6, $0060, $04C6, $04C6
                dc.w    $04C6, $0484, $0484, $0484, $0442, $0442, $0442, $0400
                dc.w    $0400, $0400, $0ECC, $0E8A, $0C68, $0A46, $0824, $0602
                dc.w    $0E8A, $0C68, $0602, $0C68, $0C68, $0C68, $0846, $0846
                dc.w    $0846, $0624, $0624, $0624, $0400, $0400, $0400, $0AEC
                dc.w    $08CA, $06A8, $0486, $0264, $0042, $08CA, $06A8, $0042
                dc.w    $06A8, $06A8, $06A8, $0684, $0684, $0684, $0442, $0442
                dc.w    $0442, $0400, $0400, $0400, $0EEC, $0CCA, $0AA8, $0886
                dc.w    $0664, $0442, $0CCA, $0AA8, $0442, $0AA8, $0AA8, $0AA8
                dc.w    $0864, $0864, $0864, $0642, $0642, $0642, $0400, $0400
                dc.w    $0400  
S1_SS_Bg_Animate: ; Offset_0x005806:
                move.w  ($FFFFF7A0).w, D0
                bne.s   Offset_0x005818
                move.w  #$0000, ($FFFFEE0C).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
Offset_0x005818:
                cmpi.w  #$0008, D0
                bcc.s   Offset_0x005870
                cmpi.w  #$0006, D0
                bne.s   Offset_0x005832
                addq.w  #$01, ($FFFFEE18).w
                addq.w  #$01, ($FFFFEE0C).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
Offset_0x005832:
                moveq   #$00, D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
                swap.w  D0
                lea     (Offset_0x0058ED), A1
                lea     ($FFFFAA00).w, A3
                moveq   #$09, D3
Offset_0x005848:                
                move.w  $0002(A3), D0
                bsr     CalcSine                ; Offset_0x00320A
                moveq   #$00, D2
                move.b  (A1)+, D2
                muls.w  D2, D0
                asr.l   #$08, D0
                move.w  D0, (A3)+
                move.b  (A1)+, D2
                ext.w   D2
                add.w   D2, (A3)+
                dbra    D3, Offset_0x005848
                lea     ($FFFFAA00).w, A3
                lea     (Offset_0x0058DA), A2
                bra.s   Offset_0x0058A0
Offset_0x005870:
                cmpi.w  #$000C, D0
                bne.s   Offset_0x005896
                subq.w  #$01, ($FFFFEE18).w
                lea     ($FFFFAB00).w, A3
                move.l  #$00018000, D2
                moveq   #$06, D1
Offset_0x005886:                
                move.l  (A3), D0
                sub.l   D2, D0
                move.l  D0, (A3)+
                subi.l  #$00002000, D2
                dbra    D1, Offset_0x005886
Offset_0x005896:
                lea     ($FFFFAB00).w, A3
                lea     (Offset_0x0058E5), A2
Offset_0x0058A0:
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE18).w, D0
                neg.w   D0
                swap.w  D0
                moveq   #$00, D3
                move.b  (A2)+, D3
                move.w  ($FFFFEE0C).w, D2
                neg.w   D2
                andi.w  #$00FF, D2
                lsl.w   #$02, D2
Offset_0x0058BC:                
                move.w  (A3)+, D0
                addq.w  #$02, A3
                moveq   #$00, D1
                move.b  (A2)+, D1
                subq.w  #$01, D1
Offset_0x0058C6:                
                move.l  D0, $00(A1, D2)
                addq.w  #$04, D2
                andi.w  #$03FC, D2
                dbra    D1, Offset_0x0058C6
                dbra    D3, Offset_0x0058BC
                rts   
Offset_0x0058DA:
                dc.b    $09, $28, $18, $10, $28, $18, $10, $30, $18, $08, $10
Offset_0x0058E5:
                dc.b    $06, $30, $30, $30, $28, $18, $18, $18
Offset_0x0058ED:
                dc.b    $08, $02, $04, $FF, $02, $03, $08, $FF, $04, $02, $02, $03, $08, $FD, $04, $02
                dc.b    $02, $03, $02, $FF, $00                            
;===============================================================================
; Special Stage
; [ End ]              
;===============================================================================                  
                nop                             ; Filler   
Level_Size_Load: ; Offset_0x005904: ; Level Size routine
                clr.w   ($FFFFEE50).w
                clr.w   ($FFFFEE52).w
                clr.w   ($FFFFEE54).w
                clr.w   ($FFFFEE56).w
                clr.w   ($FFFFEE58).w
                clr.w   ($FFFFEE5A).w
                clr.w   ($FFFFEE5C).w
                clr.w   ($FFFFEE5E).w
                clr.w   ($FFFFEEA0).w
                clr.w   ($FFFFEEA2).w
                clr.w   ($FFFFEEA4).w
                clr.w   ($FFFFEEA6).w
                clr.w   ($FFFFEEA8).w
                clr.w   ($FFFFEEAA).w
                clr.w   ($FFFFEEAC).w
                clr.w   ($FFFFEEAE).w
                clr.b   ($FFFFEEDC).w
                clr.b   ($FFFFEEBC).w
                clr.b   ($FFFFEEBD).w
                moveq   #$00, D0
                move.b  D0, ($FFFFEEDF).w
                move.w  ($FFFFFE10).w, D0
                ror.b   #$01, D0
                lsr.w   #$04, D0
                lea     Level_Size_Array(PC, D0), A0 ; Offset_0x005986
                move.l  (A0)+, D0
                move.l  D0, ($FFFFEEC8).w
                move.l  D0, ($FFFFEEC0).w
                move.l  (A0)+, D0
                move.l  D0, ($FFFFEECC).w
                move.l  D0, ($FFFFEEC4).w
                move.w  #$1010, ($FFFFEE40).w
                move.w  #$0060, ($FFFFEED8).w
                bra     Level_Size_Check_Lamp_Post ; Offset_0x005A96
Level_Size_Array: ; Offset_0x005986: ; Level Size Array               
                dc.l    $000029A0, $00000320, $00002940, $00000420 ; $00 - Green Hill
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $01
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $02 - Wood
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $03 
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $04 - Metropolis
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $05 - Metropolis
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $06
                dc.l    $00002800, $00000720, $00002880, $00000720 ; $07 - Hill Top
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $08 - Hidden Palace
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $09
                dc.l    $00002F80, $00000680, $00002580, $00000680 ; $0A - Oil Ocean
                dc.l    $00002380, $03C00720, $00002180, $00600720 ; $0B - Dust Hill
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $0C - Casino Night
                dc.l    $00002780, $00000720, $00002880, $00000720 ; $0D - Chemical Plant
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $0E - Genocide City
                dc.l    $000028C0, $020003A0, $000026C0, $018005A0 ; $0F - Neo Green Hill
                dc.l    $00003FFF, $00000720, $00003FFF, $00000720 ; $10 - Death Egg
Level_Size_Check_Lamp_Post: ; Offset_0x005A96: ; Player Start Position routine
                tst.b   ($FFFFFE30).w 
                beq.s   Level_Size_Start_Loc    ; Offset_0x005AAC
                jsr     Lamp_Post_Load_Info ; Offset_0x013CE4
                move.w  ($FFFFB008).w, D1
                move.w  ($FFFFB00C).w, D0                 
                bra.s   Level_Size_Start_Loc_Loaded ; Offset_0x005AC8
Level_Size_Start_Loc: ; Offset_0x005AAC:                
                move.w  ($FFFFFE10).w, D0
                ror.b   #$01, D0
                lsr.w   #$05, D0
                lea     Player_Start_Position_Array(PC, D0), A1 ; Offset_0x005B02
                moveq   #$00, D1
                move.w  (A1)+, D1
                move.w  D1, ($FFFFB008).w
                moveq   #$00, D0
                move.w  (A1), D0
                move.w  D0, ($FFFFB00C).w
Level_Size_Start_Loc_Loaded: ; Offset_0x005AC8:                
                subi.w  #$00A0, D1
                bcc.s   Offset_0x005AD0    
                moveq   #$00, D1
Offset_0x005AD0:
                move.w  ($FFFFEECA).w, D2
                cmp.w   D2, D1
                bcs.s   Offset_0x005ADA
                move.w  D2, D1
Offset_0x005ADA:
                move.w  D1, ($FFFFEE00).w
                move.w  D1, ($FFFFEE20).w
                subi.w  #$0060, D0
                bcc.s   Offset_0x005AEA
                moveq   #$00, D0
Offset_0x005AEA:
                cmp.w   ($FFFFEECE).w, D0
                blt.s   Offset_0x005AF4
                move.w  ($FFFFEECE).w, D0
Offset_0x005AF4:
                move.w  D0, ($FFFFEE04).w
                move.w  D0, ($FFFFEE24).w
                bsr     Background_Scroll_Speed ; Offset_0x005B8A
                rts
Player_Start_Position_Array: ; Offset_0x005B02: ; Player Start Position Array              
                dc.l    $0060028F, $004002AF ; $00 - Green Hill
                dc.l    $0060028F, $004002AF ; $01
                dc.l    $006001AC, $004001AC ; $02 - Wood
                dc.l    $0060028F, $004002AF ; $03
                dc.l    $0060028C, $004005EC ; $04 - Metropolis
                dc.l    $006001EC, $004002AF ; $05 - Metropolis
                dc.l    $0060028F, $004002AF ; $06
                dc.l    $004003AF, $0060068F ; $07 - Hill Top
                dc.l    $023001AC, $003001BD ; $08 - Hidden Palace
                dc.l    $0060028F, $004002AF ; $09
                dc.l    $006006AC, $0050056C ; $0A - Oil Ocean
                dc.l    $006006AC, $006005AC ; $0B - Dust Hill
                dc.l    $0060028F, $004002AF ; $0C - Casino Night
                dc.l    $003001EC, $0030012C ; $0D - Chemical Plant
                dc.l    $0060028F, $004002AF ; $0E - Genocide City
                dc.l    $0050037C, $0050037C ; $0F - Neo Green Hill
                dc.l    $0060028F, $004002AF ; $10 - Death Egg
Background_Scroll_Speed: ; Offset_0x005B8A: ; Background Position
                tst.b   ($FFFFFE30).w
                bne.s   Offset_0x005BB8
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFEE14).w
                move.w  D1, ($FFFFEE08).w
                move.w  D1, ($FFFFEE10).w
                move.w  D1, ($FFFFEE18).w
                move.w  D0, ($FFFFEE2C).w
                move.w  D0, ($FFFFEE34).w
                move.w  D1, ($FFFFEE28).w
                move.w  D1, ($FFFFEE30).w
                move.w  D1, ($FFFFEE38).w   
Offset_0x005BB8:                
                moveq   #$00, D2
                move.b  ($FFFFFE10).w, D2
                add.w   D2, D2
                move.w  Bg_Scroll_Speed_Index(PC, D2), D2 ; Offset_0x005BC8
                jmp     Bg_Scroll_Speed_Index(PC, D2) ; Offset_0x005BC8
Bg_Scroll_Speed_Index: ; Offset_0x005BC8: 
                dc.w    Bg_Scroll_Speed_GHz-Bg_Scroll_Speed_Index ; $00 - Green Background Position
                dc.w    Bg_Scroll_Speed_Null-Bg_Scroll_Speed_Index ; $01 - Null Background Position
                dc.w    Bg_Scroll_Speed_Wz-Bg_Scroll_Speed_Index ; $02 - Wood Background Position
                dc.w    Bg_Scroll_Speed_Null-Bg_Scroll_Speed_Index ; $03 - Null Background Position
                dc.w    Bg_Scroll_Speed_Mz-Bg_Scroll_Speed_Index ; $04 - Metropolis Background Position 
                dc.w    Bg_Scroll_Speed_Mz-Bg_Scroll_Speed_Index ; $05 - Metropolis Background Position 
                dc.w    Bg_Scroll_Speed_Null-Bg_Scroll_Speed_Index ; $06 - Null Background Position
                dc.w    Bg_Scroll_Speed_HTz-Bg_Scroll_Speed_Index ; $07 - Hill Top Background Position 
                dc.w    Bg_Scroll_Speed_HPz-Bg_Scroll_Speed_Index ; $08 - Hidden Palace Background Position 
                dc.w    Bg_Scroll_Speed_Null2-Bg_Scroll_Speed_Index ; $09 - Null Background Position
                dc.w    Bg_Scroll_Speed_OOz-Bg_Scroll_Speed_Index ; $0A - Oil Ocean Background Position 
                dc.w    Bg_Scroll_Speed_DHz-Bg_Scroll_Speed_Index ; $0B - Dust Hill Background Position 
                dc.w    Bg_Scroll_Speed_CNz-Bg_Scroll_Speed_Index ; $0C - Casino Night Background Position
                dc.w    Bg_Scroll_Speed_CPz-Bg_Scroll_Speed_Index ; $0D - Chemical Plant Background Position 
                dc.w    Bg_Scroll_Speed_Null3-Bg_Scroll_Speed_Index ; $0E - Genocide City Background Position (Null)
                dc.w    Bg_Scroll_Speed_NGHz-Bg_Scroll_Speed_Index ; $0F - Neo Green Hill Background Position 
                dc.w    Bg_Scroll_Speed_Null4-Bg_Scroll_Speed_Index ; $10 - Death Egg Background Position (Null)
Bg_Scroll_Speed_GHz: ; Offset_0x005BEA: ; Green Hill Background Position
                clr.l   ($FFFFEE08).w
                clr.l   ($FFFFEE0C).w
                clr.l   ($FFFFEE14).w
                clr.l   ($FFFFEE1C).w
                lea     ($FFFFA800).w, A2
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   ($FFFFEE28).w
                clr.l   ($FFFFEE2C).w
                clr.l   ($FFFFEE34).w
                clr.l   ($FFFFEE3C).w
                rts               
Bg_Scroll_Speed_Null: ; Offset_0x005C16: ; Null
                rts   
Bg_Scroll_Speed_Wz: ; Offset_0x005C18: ; Wood Background Position               
                asr.w   #$02, D0
                addi.w  #$0400, D0
                move.w  D0, ($FFFFEE0C).w
                asr.w   #$03, D1
                move.w  D1, ($FFFFEE08).w
                rts
Bg_Scroll_Speed_Mz: ; Offset_0x005C2A: ; Metropolis Background Position                 
                asr.w   #$02, D0
                move.w  D0, ($FFFFEE0C).w
                asr.w   #$03, D1
                move.w  D1, ($FFFFEE08).w
                rts
Bg_Scroll_Speed_HTz: ; Offset_0x005C38: ; Hill Top Background Position  
                clr.l   ($FFFFEE08).w
                clr.l   ($FFFFEE0C).w
                clr.l   ($FFFFEE14).w
                clr.l   ($FFFFEE1C).w
                lea     ($FFFFA800).w, A2
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   ($FFFFEE28).w
                clr.l   ($FFFFEE2C).w
                clr.l   ($FFFFEE34).w
                clr.l   ($FFFFEE3C).w
                rts
Bg_Scroll_Speed_HPz: ; Offset_0x005C64: ; Hidden Palace Background Position  
                asr.w   #$01, D0
                move.w  D0, ($FFFFEE0C).w
                clr.l   ($FFFFEE08).w
                rts 
Bg_Scroll_Speed_S1_Spring_Yard: ; Offset_0x005C70:  
                asl.l   #$04, D0
                move.l  D0, D2
                asl.l   #$01, D0
                add.l   D2, D0
                asr.l   #$08, D0
                addq.w  #$01, D0
                move.w  D0, ($FFFFEE0C).w
                clr.l   ($FFFFEE08).w
                rts
Bg_Scroll_Speed_Null2: ; Offset_0x005C86:
                rts  
Bg_Scroll_Speed_OOz: ; Offset_0x005C88: ; Oil Ocean Background Position 
                lsr.w   #$03, D0
                addi.w  #$0050, D0
                move.w  D0, ($FFFFEE0C).w
                clr.l   ($FFFFEE08).w
                rts    
Bg_Scroll_Speed_S1_Spring_Yard2: ; Offset_0x005C98: 
                asl.l   #$04, D0
                move.l  D0, D2
                asl.l   #$01, D0
                add.l   D2, D0
                asr.l   #$08, D0
                addq.w  #$01, D0
                move.w  D0, ($FFFFEE0C).w
                clr.l   ($FFFFEE08).w
                rts                
;Offset_0x005CAE: 
                asr.w   #$03, D0
                move.w  D0, ($FFFFEE0C).w
                rts                
Bg_Scroll_Speed_DHz: ; Offset_0x005CB6: ; Dust Hill Background Position
                clr.l   ($FFFFEE08).w
                clr.l   ($FFFFEE28).w
                tst.b   ($FFFFFE11).w
                bne.s   Offset_0x005CD6
                divu.w  #$0003, D0
                subi.w  #$0140, D0
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFEE2C).w
                rts
Offset_0x005CD6: 
                divu.w  #$0006, D0
                subi.w  #$0010, D0
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFEE2C).w
                rts   
Bg_Scroll_Speed_CNz: ; Offset_0x005CE8: ; Casino Night Background Position 
                lsr.w   #$06, D0
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFEE2C).w
                clr.l   ($FFFFEE08).w
                lea     ($FFFFA800).w, A2
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   ($FFFFEE28).w
                clr.l   ($FFFFEE2C).w
                clr.l   ($FFFFEE34).w
                clr.l   ($FFFFEE3C).w
                rts                                                                      
Bg_Scroll_Speed_CPz: ; Offset_0x005D12: ; Chemical Plant Background Position 
                lsr.w   #$02, D0
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFEE2C).w
                clr.l   ($FFFFEE08).w
                clr.l   ($FFFFEE10).w
                rts
Bg_Scroll_Speed_Null3: ; Offset_0x005D26: ; Genocide City Background Position (Null)
                rts    
Bg_Scroll_Speed_NGHz: ; Offset_0x005D28: ; Neo Green Hill Background Position 
                tst.b   ($FFFFFE11).w
                beq.s   Offset_0x005D3A
                subi.w  #$00E0, D0
                lsr.w   #$01, D0
                move.w  D0, ($FFFFEE0C).w
                bra.s   Offset_0x005D42
Offset_0x005D3A:
                subi.w  #$0180, D0
                move.w  D0, ($FFFFEE0C).w
Offset_0x005D42:
                clr.l   ($FFFFEE08).w
                clr.l   ($FFFFEE14).w
                clr.l   ($FFFFEE1C).w
                lea     ($FFFFA800).w, A2
                clr.l   (A2)+
                clr.l   (A2)+
                clr.l   (A2)+
                rts                
Bg_Scroll_Speed_Null4: ; Offset_0x005D5A: ; Death Egg Background Position (Null)
                rts              
Background_Scroll_Layer: ; Offset_0x005D5C:
                tst.b   ($FFFFEEDC).w
                beq.s   Offset_0x005D64
                rts   
Offset_0x005D64:  
                clr.w   ($FFFFEE50).w
                clr.w   ($FFFFEE52).w
                clr.w   ($FFFFEE54).w
                clr.w   ($FFFFEE56).w
                clr.w   ($FFFFEE58).w
                clr.w   ($FFFFEE5A).w
                clr.w   ($FFFFEE5C).w
                clr.w   ($FFFFEE5E).w
                lea     ($FFFFB000).w, A0
                lea     ($FFFFEE00).w, A1
                lea     ($FFFFEE40).w, A2
                lea     ($FFFFEE50).w, A3
                lea     ($FFFFEEB0).w, A4
                lea     ($FFFFEED0).w, A5
                lea     ($FFFFE500).w, A6
                bsr     Scroll_Horizontal       ; Offset_0x006AEC
                lea     ($FFFFEE04).w, A1
                lea     ($FFFFEE41).w, A2
                lea     ($FFFFEEB2).w, A4
                bsr     Scroll_Vertical         ; Offset_0x006B84
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x005DEA
                lea     ($FFFFB040).w, A0
                lea     ($FFFFEE20).w, A1
                lea     ($FFFFEE48).w, A2
                lea     ($FFFFEE58).w, A3
                lea     ($FFFFEEB8).w, A4
                lea     ($FFFFEED4).w, A5
                lea     ($FFFFE700).w, A6
                bsr     Scroll_Horizontal       ; Offset_0x006AEC
                lea     ($FFFFEE24).w, A1
                lea     ($FFFFEE49).w, A2
                lea     ($FFFFEEBA).w, A4
                bsr     Scroll_Vertical         ; Offset_0x006B84
Offset_0x005DEA:                
                bsr     Dyn_Screen_Boss_Loader  ; Offset_0x0079C0
                move.w  ($FFFFEE04).w, ($FFFFF616).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                move.l  ($FFFFEE00).w, ($FFFFEEF0).w
                move.l  ($FFFFEE04).w, ($FFFFEEF4).w
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                move.w  Bg_Scroll_Index(PC, D0), D0 ; Offset_0x005E16
                jmp     Bg_Scroll_Index(PC, D0) ; Offset_0x005E16
Bg_Scroll_Index: ; Offset_0x005E16:
                dc.w    Bg_Scroll_GHz-Bg_Scroll_Index; $00 - Green Hill Background Scroll   
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $01 - Null Background Scroll 
                dc.w    Bg_Scroll_Wz-Bg_Scroll_Index; $02 - Wood Background Scroll  
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $03 - Null Background Scroll  
                dc.w    Bg_Scroll_Mz-Bg_Scroll_Index; $04 - Metropolis Background Scroll 
                dc.w    Bg_Scroll_Mz-Bg_Scroll_Index; $05 - Metropolis Background Scroll 
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $06 - Null Background Scroll 
                dc.w    Bg_Scroll_HTz-Bg_Scroll_Index; $07 - Hill Top Background Scroll 
                dc.w    Bg_Scroll_HPz-Bg_Scroll_Index; $08 - Hidden Palace Background Scroll 
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $09 - Null Background Scroll 
                dc.w    Bg_Scroll_OOz-Bg_Scroll_Index; $0A - Oil Ocean Background Scroll 
                dc.w    Bg_Scroll_DHz-Bg_Scroll_Index; $0B - Dust Hill Background Scroll 
                dc.w    Bg_Scroll_CNz-Bg_Scroll_Index; $0C - Casino Night Background Scroll 
                dc.w    Bg_Scroll_CPz-Bg_Scroll_Index; $0D - Chemical Plant Background Scroll               
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $0E - Genocide City (Null) Background Scroll 
                dc.w    Bg_Scroll_NGHz-Bg_Scroll_Index; $0F - Neo Green Hill Background Scroll 
                dc.w    Bg_Scroll_Null-Bg_Scroll_Index; $10 - Death Egg (Null) Background Scroll    
Offset_0x005E38: ; Title Screen Background Scroll
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                move.w  ($FFFFEE00).w, D0
                cmpi.w  #$1C00, D0
                bcc.s   Offset_0x005E4A
                addq.w  #$08, D0
Offset_0x005E4A:
                move.w  D0, ($FFFFEE00).w
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE00).w, D2
                neg.w   D2
                moveq   #$00, D0
                bra.s   Offset_0x005E78
Bg_Scroll_GHz: ; Offset_0x005E5C: ; $00 - Green Hill Background Scroll                
                tst.w   ($FFFFFFD8).w
                bne     Offset_0x005FA2
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                move.w  D0, D2
                swap.w  D0
Offset_0x005E78:                
                move.w  #$0000, D0
                move.w  #$0015, D1
Offset_0x005E80:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x005E80
                move.w  D2, D0
                asr.w   #$06, D0
                move.w  #$0039, D1  
Offset_0x005E8E:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x005E8E
                move.w  D0, D3
                move.b  ($FFFFFE0F).w, D1
                andi.w  #$0007, D1
                bne.s   Offset_0x005EA4
                subq.w  #$01, ($FFFFA800).w
Offset_0x005EA4:
                move.w  ($FFFFA800).w, D1
                andi.w  #$001F, D1
                lea     (Offset_0x005F60), A2
                lea     $00(A2, D1), A2
                move.w  #$0014, D1
Offset_0x005EBA:
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D3, D0
                move.l  D0, (A1)+
                dbra    D1, Offset_0x005EBA
                
                move.w  #$0000, D0
                move.w  #$000A, D1     
Offset_0x005ECE:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x005ECE
                move.w  D2, D0
                asr.w   #$04, D0
                move.w  #$000F, D1
Offset_0x005EDC:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x005EDC
                move.w  D2, D0
                asr.w   #$04, D0
                move.w  D0, D1
                asr.w   #$01, D1
                add.w   D1, D0
                move.w  #$000F, D1
Offset_0x005EF0:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x005EF0
                move.l  D0, D4
                swap.w  D4
                move.w  D2, D0
                asr.w   #$01, D0
                move.w  D2, D1
                asr.w   #$03, D1
                sub.w   D1, D0
                ext.l   D0
                asl.l   #$08, D0
                divs.w  #$0030, D0
                ext.l   D0
                asl.l   #$08, D0
                moveq   #$00, D3
                move.w  D2, D3
                asr.w   #$03, D3
                move.w  #$000E, D1
Offset_0x005F1A:                
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                dbra    D1, Offset_0x005F1A
                move.w  #$0008, D1               
Offset_0x005F2C:
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                dbra    D1, Offset_0x005F2C
                move.w  #$000E, D1
Offset_0x005F44:                
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                move.w  D4, (A1)+
                move.w  D3, (A1)+
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                dbra    D1, Offset_0x005F44               
                rts   
Offset_0x005F60:                 
                dc.b    $01, $02, $01, $03, $01, $02, $02, $01, $02, $03, $01, $02, $01, $02, $00, $00
                dc.b    $02, $00, $03, $02, $02, $03, $02, $02, $01, $03, $00, $00, $01, $00, $01, $03
                dc.b    $01, $02, $01, $03, $01, $02, $02, $01, $02, $03, $01, $02, $01, $02, $00, $00
                dc.b    $02, $00, $03, $02, $02, $03, $02, $02, $01, $03, $00, $00, $01, $00, $01, $03
                dc.b    $01, $02               
Offset_0x005FA2:
                move.b  ($FFFFFE0F).w, D1
                andi.w  #$0007, D1
                bne.s   Offset_0x005FB0
                subq.w  #$01, ($FFFFA800).w
Offset_0x005FB0:                
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                andi.l  #$FFFEFFFE, ($FFFFF616).w
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE00).w, D0
                move.w  #$000A, D1 
                bsr.s   Offset_0x005FF8
                moveq   #$00, D0
                move.w  D0, ($FFFFF620).w
                subi.w  #$00E0, ($FFFFF620).w
                move.w  ($FFFFEE24).w, ($FFFFF61E).w
                subi.w  #$00E0, ($FFFFF61E).w
                andi.l  #$FFFEFFFE, ($FFFFF61E).w
                lea     ($FFFFE1B0).w, A1
                move.w  ($FFFFEE20).w, D0
                move.w  #$000E, D1
Offset_0x005FF8:
                neg.w   D0
                move.w  D0, D2
                swap.w  D0
                move.w  #$0000, D0
Offset_0x006002:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x006002
                move.w  D2, D0
                asr.w   #$06, D0
                move.w  #$001C, D1
Offset_0x006010:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x006010
                move.w  D0, D3
                move.w  ($FFFFA800).w, D1
                andi.w  #$001F, D1
                lea     Offset_0x005F60(PC), A2
                lea     $00(A2, D1), A2
                move.w  #$000A, D1
Offset_0x00602C:                
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D3, D0
                move.l  D0, (A1)+
                dbra    D1, Offset_0x00602C    
                move.w  #$0000, D0
                move.w  #$0004, D1
Offset_0x006040:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x006040
                move.w  D2, D0
                asr.w   #$04, D0
                move.w  #$0007, D1
Offset_0x00604E:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x00604E
                move.w  D2, D0
                asr.w   #$04, D0
                move.w  D0, D1
                asr.w   #$01, D1
                add.w   D1, D0
                move.w  #$0007, D1
Offset_0x006062:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x006062
                move.w  D2, D0
                asr.w   #$01, D0
                move.w  D2, D1
                asr.w   #$03, D1
                sub.w   D1, D0
                ext.l   D0
                asl.l   #$08, D0
                divs.w  #$0030, D0
                ext.l   D0
                asl.l   #$08, D0
                moveq   #$00, D3
                move.w  D2, D3
                asr.w   #$03, D3
                move.w  #$0027, D1
Offset_0x006088:                
                move.w  D2, (A1)+
                move.w  D3, (A1)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                dbra    D1, Offset_0x006088    
                rts                  
Bg_Scroll_Wz: ; Offset_0x006098: ; Wood Background Scroll
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$05, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$06, D5
                bsr     Scroll_Block1           ; Offset_0x006CB4
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
Offset_0x0060C8:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0060C8
                rts               
Bg_Scroll_Mz: ; Offset_0x0060D0: ; Metropolis Background Scroll 
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$05, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$06, D5
                bsr     Scroll_Block1           ; Offset_0x006CB4
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
Offset_0x006100:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x006100
                rts                     
Bg_Scroll_HTz: ; Offset_0x006108: ; Hill Top Background Scroll 
                tst.w   ($FFFFFFD8).w
                bne     Offset_0x0062B4
                tst.b   ($FFFFEEBC).w
                bne     Offset_0x006236
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                move.w  D0, D2
                swap.w  D0
                move.w  D2, D0
                asr.w   #$03, D0
                move.w  #$007F, D1
Offset_0x006134:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x006134
                move.l  D0, D4
                move.w  ($FFFFA822).w, D0
                addq.w  #$04, ($FFFFA822).w
                sub.w   D0, D2
                move.w  D2, D0
                move.w  D0, D1
                asr.w   #$01, D0
                asr.w   #$04, D1
                sub.w   D1, D0
                ext.l   D0
                asl.l   #$08, D0
                divs.w  #$0070, D0
                ext.l   D0
                asl.l   #$08, D0
                lea     ($FFFFA800).w, A2
                moveq   #$00, D3
                move.w  D1, D3
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A2)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A2)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A2)+
                move.w  D3, (A2)+
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                moveq   #$03, D1
Offset_0x006188:
                move.w  D3, (A2)+
                move.w  D3, (A2)+
                move.w  D3, (A2)+
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                dbra    D1, Offset_0x006188
                add.l   D0, D0
                add.l   D0, D0
                move.w  D3, D4
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, D4
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                move.l  D4, (A1)+
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, D4
                move.w  #$0006, D1
Offset_0x0061C6:
                move.l  D4, (A1)+
                dbra    D1, Offset_0x0061C6
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, D4
                move.w  #$0007, D1
Offset_0x0061DA:
                move.l  D4, (A1)+
                dbra    D1, Offset_0x0061DA
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, D4
                move.w  #$0009, D1
Offset_0x0061EE:
                move.l  D4, (A1)+
                dbra    D1, Offset_0x0061EE
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, D4
                move.w  #$000E, D1
Offset_0x006204:
                move.l  D4, (A1)+
                dbra    D1, Offset_0x006204
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                move.w  #$0002, D2
Offset_0x006218:
                move.w  D3, D4
                move.w  #$000F, D1
Offset_0x00621E:
                move.l  D4, (A1)+
                dbra    D1, Offset_0x00621E
                swap.w  D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                add.l   D0, D3
                swap.w  D3
                dbra    D2, Offset_0x006218 
                rts
Offset_0x006236:
                move.w  ($FFFFEEB4).w, D4
                ext.l   D4
                lsl.l   #$08, D4
                moveq   #$02, D6
                bsr     Scroll_Block2           ; Offset_0x006D1E
                move.w  ($FFFFEEB6).w, D5
                ext.l   D5
                lsl.l   #$08, D5
                moveq   #$00, D6
                bsr     Scroll_Block3           ; Offset_0x006D52
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                move.w  ($FFFFEE04).w, ($FFFFF616).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                moveq   #$00, D2
                tst.b   ($FFFFEEBD).w
                beq.s   Offset_0x006292
                move.w  ($FFFFFE04).w, D0
                andi.w  #$003F, D0
                lea     Offset_0x005F60(PC), A1
                lea     $00(A1, D0), A1
                moveq   #$00, D0
                move.b  (A1)+, D0
                add.w   D0, ($FFFFF616).w
                add.w   D0, ($FFFFF618).w
                add.w   D0, ($FFFFEEF4).w
                move.b  (A1)+, D2
                add.w   D2, ($FFFFEEF0).w
Offset_0x006292:
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                add.w   D2, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                add.w   D2, D0
                neg.w   D0
Offset_0x0062AC:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0062AC
                rts
Offset_0x0062B4:
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$06, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$02, D5
                moveq   #$00, D5
                bsr     Scroll_Block1           ; Offset_0x006CB4
                move.b  #$00, ($FFFFEE52).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                andi.l  #$FFFEFFFE, ($FFFFF616).w
                lea     ($FFFFE000).w, A1
                move.w  #$006F, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
Offset_0x0062F4:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0062F4
                move.w  ($FFFFEEB8).w, D4
                ext.l   D4
                asl.l   #$06, D4
                add.l   D4, ($FFFFEE28).w
                moveq   #$00, D0
                move.w  D0, ($FFFFF620).w
                subi.w  #$00E0, ($FFFFF620).w
                move.w  ($FFFFEE24).w, ($FFFFF61E).w
                subi.w  #$00E0, ($FFFFF61E).w
                andi.l  #$FFFEFFFE, ($FFFFF61E).w
                lea     ($FFFFE1B0).w, A1
                move.w  #$0073, D1
                move.w  ($FFFFEE20).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE28).w, D0
                neg.w   D0
Offset_0x00633C:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x00633C
                rts                 
Bg_Scroll_HPz: ; Offset_0x006344: ; Hidden Palace Background Scroll 
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$06, D4
                moveq   #$02, D6
                bsr     Scroll_Block2           ; Offset_0x006D1E
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$07, D5
                moveq   #$06, D6
                bsr     Scroll_Block3           ; Offset_0x006D52
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFA800).w, A1
                move.w  ($FFFFEE00).w, D2
                neg.w   D2
                move.w  D2, D0
                asr.w   #$01, D0
                move.w  #$0007, D1
Offset_0x006378:
                move.w  D0, (A1)+
                dbra    D1, Offset_0x006378
                move.w  D2, D0
                asr.w   #$03, D0
                sub.w   D2, D0
                ext.l   D0
                asl.l   #$03, D0
                divs.w  #$0008, D0
                ext.l   D0
                asl.l   #$04, D0
                asl.l   #$08, D0
                moveq   #$00, D3
                move.w  D2, D3
                asr.w   #$01, D3
                lea     ($FFFFA860).w, A2
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D3, (A1)+
                move.w  D3, (A1)+
                move.w  D3, -(A2)
                move.w  D3, -(A2)
                move.w  D3, -(A2)
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D3, (A1)+
                move.w  D3, -(A2)
                move.w  D3, -(A2)
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D3, -(A2)
                swap.w  D3
                add.l   D0, D3
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D3, -(A2)
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
                move.w  #$0019, D1
Offset_0x0063DA:
                move.w  D0, (A1)+
                dbra    D1, Offset_0x0063DA
                adda.w  #$000E, A1
                move.w  D2, D0
                asr.w   #$01, D0
                move.w  #$0017, D1
Offset_0x0063EC:
                move.w  D0, (A1)+
                dbra    D1, Offset_0x0063EC
                lea     ($FFFFA800).w, A2
                move.w  ($FFFFEE0C).w, D0
                move.w  D0, D2
                andi.w  #$03F0, D0
                lsr.w   #$03, D0
                lea     $00(A2, D0), A2
                bra     Offset_0x006AA8
Bg_Scroll_OOz: ; Offset_0x00640A: ; Oil Ocean Background Scroll               
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$05, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$05, D5
                bsr     Scroll_Block1           ; Offset_0x006CB4
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
Offset_0x00643A:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x00643A
                rts
Bg_Scroll_DHz: ; Offset_0x006442: ; Dust Hill Background Scroll                
                tst.w   ($FFFFFFD8).w
                bne     Offset_0x00656C
                move.w  ($FFFFEE04).w, D0
                move.l  ($FFFFEE0C).w, D3
                tst.b   ($FFFFFE11).w
                bne.s   Offset_0x006462
                divu.w  #$0003, D0
                subi.w  #$0140, D0
                bra.s   Offset_0x00646A
Offset_0x006462:  
                divu.w  #$0006, D0
                subi.w  #$0010, D0
Offset_0x00646A:   
                swap.w  D0
                moveq   #$06, D6
                bsr     Offset_0x006D5A
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFA800).w, A2
                lea     $001E(A2), A3
                move.w  ($FFFFEE00).w, D0
                ext.l   D0
                asl.l   #$04, D0
                divs.w  #$000A, D0
                ext.l   D0
                asl.l   #$04, D0
                asl.l   #$08, D0
                move.l  D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000E(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0008(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0006(A2)
                move.w  D1, $0010(A2)
                move.w  D1, $001C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0004(A2)
                move.w  D1, $0012(A2)
                move.w  D1, $001A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0002(A2)
                move.w  D1, $0014(A2)
                move.w  D1, $0018(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, (A2)
                move.w  D1, $0016(A2)
                lea     (Offset_0x006554), A3
                lea     ($FFFFA800).w, A2
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE0C).w, D1
                moveq   #$00, D0
Offset_0x006526:                
                move.b  (A3)+, D0
                addq.w  #$02, A2
                sub.w   D0, D1
                bcc.s   Offset_0x006526      
                neg.w   D1
                subq.w  #$02, A2
                move.w  #$00DF, D2
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  (A2)+, D0
                neg.w   D0
Offset_0x006542:
                move.l  D0, (A1)+
                subq.w  #$01, D1
                bne.s   Offset_0x00654E
                move.b  (A3)+, D1
                move.w  (A2)+, D0
                neg.w   D0
Offset_0x00654E:
                dbra    D2, Offset_0x006542
                rts
Offset_0x006554:
                dc.b    $25, $17, $12, $07, $07, $02, $02, $30, $0D, $13, $20, $40, $20, $13, $0D, $30
                dc.b    $02, $02, $07, $07, $20, $12, $17, $25
Offset_0x00656C:
                moveq   #$00, D0
                move.w  ($FFFFEE04).w, D0
                tst.b   ($FFFFFE11).w
                bne.s   Offset_0x006582
                divu.w  #$0003, D0
                subi.w  #$0140, D0
                bra.s   Offset_0x00658A
Offset_0x006582:
                divu.w  #$0006, D0
                subi.w  #$0010, D0
Offset_0x00658A:
                move.w  D0, ($FFFFEE0C).w
                move.w  D0, ($FFFFF618).w
                andi.l  #$FFFEFFFE, ($FFFFF616).w
                lea     ($FFFFA800).w, A2
                lea     $001E(A2), A3
                move.w  ($FFFFEE00).w, D0
                ext.l   D0
                asl.l   #$04, D0
                divs.w  #$000A, D0
                ext.l   D0
                asl.l   #$04, D0
                asl.l   #$08, D0
                move.l  D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000E(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0008(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0006(A2)
                move.w  D1, $0010(A2)
                move.w  D1, $001C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0004(A2)
                move.w  D1, $0012(A2)
                move.w  D1, $001A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0002(A2)
                move.w  D1, $0014(A2)
                move.w  D1, $0018(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, (A2)
                move.w  D1, $0016(A2)
                lea     (Offset_0x006678), A3
                lea     ($FFFFA800).w, A2
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE0C).w, D1
                lsr.w   #$01, D1
                moveq   #$00, D0
Offset_0x00664A:
                move.b  (A3)+, D0
                addq.w  #$02, A2
                sub.w   D0, D1
                bcc.s   Offset_0x00664A        
                neg.w   D1
                subq.w  #$02, A2
                move.w  #$006F, D2
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  (A2)+, D0
                neg.w   D0
Offset_0x006666:
                move.l  D0, (A1)+
                subq.w  #$01, D1
                bne.s   Offset_0x006672
                move.b  (A3)+, D1
                move.w  (A2)+, D0
                neg.w   D0
Offset_0x006672:
                dbra    D2, Offset_0x006666   
                bra.s   Offset_0x006690
Offset_0x006678:
                dc.b    $13
Offset_0x006679:
                dc.b    $0B, $09, $04, $03, $01, $01, $18, $06, $0A, $10, $20, $10, $0A, $06, $18, $01
                dc.b    $01, $03, $04, $10, $09, $0B, $13
Offset_0x006690:
                moveq   #$00, D0
                move.w  ($FFFFEE24).w, D0
                tst.b   ($FFFFFE11).w
                bne.s   Offset_0x0066A6
                divu.w  #$0003, D0
                subi.w  #$0140, D0
                bra.s   Offset_0x0066AE
Offset_0x0066A6:
                divu.w  #$0006, D0
                subi.w  #$0010, D0
Offset_0x0066AE:
                move.w  D0, ($FFFFEE2C).w
                move.w  D0, ($FFFFF620).w
                subi.w  #$00E0, ($FFFFF620).w
                move.w  ($FFFFEE24).w, ($FFFFF61E).w
                subi.w  #$00E0, ($FFFFF61E).w
                andi.l  #$FFFEFFFE, ($FFFFF61E).w
                lea     ($FFFFA800).w, A2
                lea     $001E(A2), A3
                move.w  ($FFFFEE20).w, D0
                ext.l   D0
                asl.l   #$04, D0
                divs.w  #$000A, D0
                ext.l   D0
                asl.l   #$04, D0
                asl.l   #$08, D0
                move.l  D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000E(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $000A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0008(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0006(A2)
                move.w  D1, $0010(A2)
                move.w  D1, $001C(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0004(A2)
                move.w  D1, $0012(A2)
                move.w  D1, $001A(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, $0002(A2)
                move.w  D1, $0014(A2)
                move.w  D1, $0018(A2)
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, (A2)
                move.w  D1, $0016(A2)
                lea     Offset_0x006679(PC), A3
                lea     ($FFFFA800).w, A2
                lea     ($FFFFE1B0).w, A1
                move.w  ($FFFFEE2C).w, D1
                lsr.w   #$01, D1
                moveq   #$17, D0
                bra.s   Offset_0x006782
Offset_0x006780:
                move.b  (A3)+, D0
Offset_0x006782:                
                addq.w  #$02, A2
                sub.w   D0, D1
                bcc.s   Offset_0x006780
                neg.w   D1
                subq.w  #$02, A2
                move.w  #$0073, D2
                move.w  ($FFFFEE20).w, D0
                neg.w   D0
                swap.w  D0
                move.w  (A2)+, D0
                neg.w   D0
Offset_0x00679C:
                move.l  D0, (A1)+
                subq.w  #$01, D1  
                bne.s   Offset_0x0067A8
                move.b  (A3)+, D1
                move.w  (A2)+, D0
                neg.w   D0
Offset_0x0067A8:                
                dbra    D2, Offset_0x00679C
                rts                 
Bg_Scroll_CNz: ; Offset_0x0067AE: ; Casino Night Background Scroll 
                tst.w   ($FFFFFFD8).w
                bne     Offset_0x0067F2
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$06, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$02, D5
                bsr     Scroll_Block1           ; Offset_0x006CB4
                clr.b   ($FFFFEE52).w
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
Offset_0x0067EA:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x0067EA
                rts
Offset_0x0067F2:
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$06, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$02, D5
                moveq   #$00, D5
                bsr     Scroll_Block1           ; Offset_0x006CB4
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                andi.l  #$FFFEFFFE, ($FFFFF616).w
                lea     ($FFFFE000).w, A1
                move.w  #$006F, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
Offset_0x00682C:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x00682C
                move.w  ($FFFFEEB8).w, D4
                ext.l   D4
                asl.l   #$06, D4
                add.l   D4, ($FFFFEE28).w
                moveq   #$00, D0
                move.w  D0, ($FFFFF620).w
                subi.w  #$00E0, ($FFFFF620).w
                move.w  ($FFFFEE24).w, ($FFFFF61E).w
                subi.w  #$00E0, ($FFFFF61E).w
                andi.l  #$FFFEFFFE, ($FFFFF61E).w
                lea     ($FFFFE1B0).w, A1
                move.w  #$0073, D1
                move.w  ($FFFFEE20).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE28).w, D0
                neg.w   D0
Offset_0x006874:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x006874
                rts                 
Bg_Scroll_CPz: ; Offset_0x00687C: ; Chemical Plant Background Scroll
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$05, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$06, D5
                bsr     Scroll_Block1           ; Offset_0x006CB4
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$07, D4
                moveq   #$04, D6
                bsr     Scroll_Block4           ; Offset_0x006D86
                move.w  ($FFFFEE0C).w, D0
                move.w  D0, ($FFFFEE14).w
                move.w  D0, ($FFFFF618).w
                move.b  ($FFFFEE52).w, D0
                or.b    ($FFFFEE54).w, D0
                move.b  D0, ($FFFFEE56).w
                clr.b   ($FFFFEE52).w
                clr.b   ($FFFFEE54).w
                move.b  ($FFFFFE0F).w, D1
                andi.w  #$0007, D1
                bne.s   Offset_0x0068CC
                subq.w  #$01, ($FFFFA800).w
Offset_0x0068CC:
                lea     (Offset_0x00718F), A0
                move.w  ($FFFFEE0C).w, D0
                move.w  D0, D2
                andi.w  #$03F0, D0
                lsr.w   #$04, D0
                lea     $00(A0, D0), A0
                move.w  D0, D4
                lea     ($FFFFE000).w, A1
                move.w  #$000E, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                andi.w  #$000F, D2
                move.w  ($FFFFEE08).w, D0
                cmpi.b  #$12, D4
                beq.s   Offset_0x00694A
                bcs.s   Offset_0x006908
                move.w  ($FFFFEE10).w, D0
Offset_0x006908:
                neg.w   D0
                add.w   D2, D2
                jmp     Offset_0x006922(PC, D2)
Offset_0x006910:                
                move.w  ($FFFFEE08).w, D0
                cmpi.b  #$12, D4
                beq.s   Offset_0x006954
                bcs.s   Offset_0x006920
                move.w  ($FFFFEE10).w, D0
Offset_0x006920:
                neg.w   D0
Offset_0x006922:
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                addq.b  #$01, D4
                dbra    D1, Offset_0x006910 
                rts
Offset_0x00694A:
                move.w  #$000F, D0
                sub.w   D2, D0
                move.w  D0, D2
                bra.s   Offset_0x006958
Offset_0x006954:
                move.w  #$000F, D2
Offset_0x006958:
                move.w  ($FFFFEE08).w, D3
                neg.w   D3
                move.w  ($FFFFA800).w, D0
                andi.w  #$001F, D0
                lea     Offset_0x005F60(PC), A2
                lea     $00(A2, D0), A2
Offset_0x00696E:
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D3, D0
                move.l  D0, (A1)+
                dbra    D2, Offset_0x00696E   
                addq.b  #$01, D4
                dbra    D1, Offset_0x006910
                rts                                 
Bg_Scroll_NGHz: ; Offset_0x006982: ; Neo Green Hill Background Scroll  
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                muls.w  #$0119, D4
                moveq   #$02, D6
                bsr     Scroll_Block2           ; Offset_0x006D1E
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$07, D5
                tst.b   ($FFFFFE11).w
                bne.s   Offset_0x0069A2
                asl.l   #$01, D5
Offset_0x0069A2:
                moveq   #$06, D6
                bsr     Scroll_Block3           ; Offset_0x006D52
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFA800).w, A2
                lea     $0006(A2), A3
                move.w  ($FFFFEE00).w, D0
                ext.l   D0
                asl.l   #$04, D0
                divs.w  #$000A, D0
                ext.l   D0
                asl.l   #$04, D0
                asl.l   #$08, D0
                move.l  D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D1, D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                swap.w  D1
                add.l   D0, D1
                swap.w  D1
                move.w  D1, (A3)+
                move.w  D1, (A2)
                move.w  D1, $0004(A2)
                move.w  ($FFFFEE08).w, D0
                move.w  D0, $0002(A2)
                move.w  D0, $0016(A2)
                move.w  D0, $0000(A2)
                move.w  D0, $0004(A2)
                lea     (Offset_0x006A64), A3
                lea     ($FFFFA800).w, A2
                lea     ($FFFFE000).w, A1
                move.w  ($FFFFEE0C).w, D1
                moveq   #$00, D0
Offset_0x006A36:                
                move.b  (A3)+, D0
                addq.w  #$02, A2
                sub.w   D0, D1
                bcc.s   Offset_0x006A36 
                neg.w   D1
                subq.w  #$02, A2
                move.w  #$00DF, D2
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  (A2)+, D0
                neg.w   D0
Offset_0x006A52:
                move.l  D0, (A1)+
                subq.w  #$01, D1
                bne.s   Offset_0x006A5E
                move.b  (A3)+, D1
                move.w  (A2)+, D0
                neg.w   D0
Offset_0x006A5E:
                dbra    D2, Offset_0x006A52
                rts
Offset_0x006A64:
                dc.b    $B0, $70, $30, $60, $15, $0C, $0E, $06, $0C, $1F, $30, $C0
Bg_Scroll_Null: ; Offset_0x006A70: ; Null Background Scroll
                move.w  ($FFFFEEB0).w, D4
                ext.l   D4
                asl.l   #$05, D4
                move.w  ($FFFFEEB2).w, D5
                ext.l   D5
                asl.l   #$06, D5
                bsr     Scroll_Block1           ; Offset_0x006CB4
                move.w  ($FFFFEE0C).w, ($FFFFF618).w
                lea     ($FFFFE000).w, A1
                move.w  #$00DF, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                move.w  ($FFFFEE08).w, D0
                neg.w   D0
Offset_0x006AA0:             
                move.l  D0, (A1)+
                dbra    D1, Offset_0x006AA0
                rts                
Offset_0x006AA8:
                lea     ($FFFFE000).w, A1
                move.w  #$000E, D1
                move.w  ($FFFFEE00).w, D0
                neg.w   D0
                swap.w  D0
                andi.w  #$000F, D2
                add.w   D2, D2
                move.w  (A2)+, D0
                jmp     Offset_0x006AC6(PC, D2)
Offset_0x006AC4:
                move.w  (A2)+, D0
Offset_0x006AC6:
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                move.l  D0, (A1)+
                dbra    D1, Offset_0x006AC4
                rts                                
Scroll_Horizontal: ; Offset_0x006AEC:
                move.w  (A1), D4
                bsr.s   Offset_0x006B12
                move.w  (A1), D0
                andi.w  #$0010, D0
                move.b  (A2), D1
                eor.b   D1, D0
                bne.s   Offset_0x006B10
                eori.b  #$10, (A2)
                move.w  (A1), D0
                sub.w   D4, D0
                bpl.s   Offset_0x006B0C
                bset    #$02, (A3)
                rts
Offset_0x006B0C:
                bset    #$03, (A3)
Offset_0x006B10:
                rts
Offset_0x006B12:
                move.w  (A5), D1
                beq.s   Offset_0x006B34
                subi.w  #$0100, D1
                move.w  D1, (A5)
                moveq   #$00, D1
                move.b  (A5), D1
                lsl.b   #$02, D1
                addq.b  #$04, D1
                move.w  $0002(A5), D0
                sub.b   D1, D0
                move.w  $00(A6, D0), D0
                andi.w  #$3FFF, D0
                bra.s   Offset_0x006B38
Offset_0x006B34:
                move.w  $0008(A0), D0
Offset_0x006B38:
                sub.w   (A1), D0
                subi.w  #$0090, D0
                blt.s   Offset_0x006B4A
                subi.w  #$0010, D0
                bge.s   Offset_0x006B62
                clr.w   (A4)
                rts
Offset_0x006B4A:
                cmpi.w  #$FFF0, D0
                bgt.s   Offset_0x006B54
                move.w  #$FFF0, D0
Offset_0x006B54:
                add.w   (A1), D0
                cmp.w   ($FFFFEEC8).w, D0
                bgt.s   Offset_0x006B78
                move.w  ($FFFFEEC8).w, D0
                bra.s   Offset_0x006B78
Offset_0x006B62:                
                cmpi.w  #$0010, D0
                bcs.s   Offset_0x006B6C
                move.w  #$0010, D0
Offset_0x006B6C:
                add.w   (A1), D0
                cmp.w   ($FFFFEECA).w, D0
                blt.s   Offset_0x006B78
                move.w  ($FFFFEECA).w, D0
Offset_0x006B78:
                move.w  D0, D1
                sub.w   (A1), D1
                asl.w   #$08, D1
                move.w  D0, (A1)
                move.w  D1, (A4)
                rts
Scroll_Vertical: ; Offset_0x006B84:
                moveq   #$00, D1
                move.w  $000C(A0), D0
                sub.w   (A1), D0
                btst    #$02, $0022(A0)
                beq.s   Offset_0x006B96
                subq.w  #$05, D0
Offset_0x006B96:
                btst    #$01, $0022(A0)
                beq.s   Offset_0x006BB6
                addi.w  #$0020, D0
                sub.w   ($FFFFEED8).w, D0
                bcs.s   Offset_0x006C00
                subi.w  #$0040, D0
                bcc.s   Offset_0x006C00
                tst.b   ($FFFFEEDE).w
                bne.s   Offset_0x006C12
                bra.s   Offset_0x006BC2
Offset_0x006BB6:
                sub.w   ($FFFFEED8).w, D0
                bne.s   Offset_0x006BC6
                tst.b   ($FFFFEEDE).w
                bne.s   Offset_0x006C12
Offset_0x006BC2:                
                clr.w   (A4)
                rts
Offset_0x006BC6:
                cmpi.w  #$0060, ($FFFFEED8).w
                bne.s   Offset_0x006BEE 
                move.w  $0014(A0), D1
                bpl.s   Offset_0x006BD6
                neg.w   D1
Offset_0x006BD6:
                cmpi.w  #$0800, D1
                bcc.s   Offset_0x006C00
                move.w  #$0600, D1
                cmpi.w  #$0006, D0
                bgt.s   Offset_0x006C5A
                cmpi.w  #$FFFA, D0
                blt.s   Offset_0x006C28
                bra.s   Offset_0x006C18
Offset_0x006BEE:
                move.w  #$0200, D1
                cmpi.w  #$0002, D0
                bgt.s   Offset_0x006C5A
                cmpi.w  #$FFFE, D0
                blt.s   Offset_0x006C28
                bra.s   Offset_0x006C18    
Offset_0x006C00:
                move.w  #$1000, D1
                cmpi.w  #$0010, D0
                bgt.s   Offset_0x006C5A
                cmpi.w  #$FFF0, D0
                blt.s   Offset_0x006C28
                bra.s   Offset_0x006C18
Offset_0x006C12:
                moveq   #$00, D0
                move.b  D0, ($FFFFEEDE).w
Offset_0x006C18:                
                moveq   #$00, D1
                move.w  D0, D1
                add.w   (A1), D1  
                tst.w   D0
                bpl     Offset_0x006C62
                bra     Offset_0x006C32
Offset_0x006C28:                
                neg.w   D1
                ext.l   D1    
                asl.l   #$08, D1
                add.l   (A1), D1
                swap.w  D1
Offset_0x006C32:                
                cmp.w   ($FFFFEECC).w, D1
                bgt.s   Offset_0x006C84
Offset_0x006C38:
                cmpi.w  #$FF00, D1
                bgt.s   Offset_0x006C54
                andi.w  #$07FF, D1
                andi.w  #$07FF, $000C(A0)
                andi.w  #$07FF, (A1)
                andi.w  #$03FF, $0008(A1)
                bra.s   Offset_0x006C84
Offset_0x006C54:   
                move.w  ($FFFFEECC).w, D1
                bra.s   Offset_0x006C84             
Offset_0x006C5A:
                ext.l   D1
                asl.l   #$08, D1
                add.l   (A1), D1
                swap.w  D1
Offset_0x006C62:                
                cmp.w   ($FFFFEECE).w, D1
                blt.s   Offset_0x006C84
                subi.w  #$0800, D1
                bcs.s   Offset_0x006C80
                andi.w  #$07FF, $000C(A0)
                subi.w  #$0800, (A1)
                andi.w  #$03FF, $0008(A1)
                bra.s   Offset_0x006C84
Offset_0x006C80:
                move.w  ($FFFFEECE).w, D1
Offset_0x006C84:
                move.w  (A1), D4
                swap.w  D1
                move.l  D1, D3
                sub.l   (A1), D3
                ror.l   #$08, D3
                move.w  D3, (A4)
                move.l  D1, (A1)
                move.w  (A1), D0
                andi.w  #$0010, D0
                move.b  (A2), D1
                eor.b   D1, D0
                bne.s   Offset_0x006CB2
                eori.b  #$10, (A2)
                move.w  (A1), D0
                sub.w   D4, D0
                bpl.s   Offset_0x006CAE
                bset    #$00, (A3)
                rts
Offset_0x006CAE:
                bset    #$01, (A3)
Offset_0x006CB2:
                rts  
Scroll_Block1: ; Offset_0x006CB4:
                move.l  ($FFFFEE08).w, D2
                move.l  D2, D0
                add.l   D4, D0
                move.l  D0, ($FFFFEE08).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE42).w, D3
                eor.b   D3, D1
                bne.s   Offset_0x006CE8
                eori.b  #$10, ($FFFFEE42).w
                sub.l   D2, D0
                bpl.s   Offset_0x006CE2
                bset    #$02, ($FFFFEE52).w
                bra.s   Offset_0x006CE8
Offset_0x006CE2:
                bset    #$03, ($FFFFEE52).w
Offset_0x006CE8:
                move.l  ($FFFFEE0C).w, D3
                move.l  D3, D0
                add.l   D5, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE43).w, D2
                eor.b   D2, D1
                bne.s   Offset_0x006D1C
                eori.b  #$10, ($FFFFEE43).w
                sub.l   D3, D0
                bpl.s   Offset_0x006D16
                bset    #$00, ($FFFFEE52).w
                rts
Offset_0x006D16:
                bset    #$01, ($FFFFEE52).w
Offset_0x006D1C:
                rts  
Scroll_Block2: ;  Offset_0x006D1E:
                move.l  ($FFFFEE08).w, D2
                move.l  D2, D0
                add.l   D4, D0
                move.l  D0, ($FFFFEE08).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE42).w, D3
                eor.b   D3, D1
                bne.s   Offset_0x006D50
                eori.b  #$10, ($FFFFEE42).w
                sub.l   D2, D0
                bpl.s   Offset_0x006D4A
                bset    D6, ($FFFFEE52).w
                bra.s   Offset_0x006D50
Offset_0x006D4A:
                addq.b  #$01, D6
                bset    D6, ($FFFFEE52).w
Offset_0x006D50:
                rts
Scroll_Block3: ; Offset_0x006D52:
                move.l  ($FFFFEE0C).w, D3
                move.l  D3, D0
                add.l   D5, D0
Offset_0x006D5A:                
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE43).w, D2
                eor.b   D2, D1
                bne.s   Offset_0x006D84
                eori.b  #$10, ($FFFFEE43).w
                sub.l   D3, D0
                bpl.s   Offset_0x006D7E
                bset    D6, ($FFFFEE52).w
                rts
Offset_0x006D7E:
                addq.b  #$01, D6
                bset    D6, ($FFFFEE52).w
Offset_0x006D84:
                rts
Scroll_Block4: ; Offset_0x006D86:
                move.l  ($FFFFEE10).w, D2
                move.l  D2, D0
                add.l   D4, D0
                move.l  D0, ($FFFFEE10).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE44).w, D3
                eor.b   D3, D1
                bne.s   Offset_0x006DB8
                eori.b  #$10, ($FFFFEE44).w
                sub.l   D2, D0
                bpl.s   Offset_0x006DB2
                bset    D6, ($FFFFEE54).w
                bra.s   Offset_0x006DB8
Offset_0x006DB2:
                addq.b  #$01, D6
                bset    D6, ($FFFFEE54).w
Offset_0x006DB8:
                rts                  
; Scroll_Block5: ;Offset_0x006DBA:  Left Over GHz S1 Scroll
                move.l  ($FFFFEE18).w, D2
                move.l  D2, D0
                add.l   D4, D0
                move.l  D0, ($FFFFEE18).w
                move.l  D0, D1
                swap.w  D1
                andi.w  #$0010, D1
                move.b  ($FFFFEE46).w, D3
                eor.b   D3, D1
                bne.s   Offset_0x006DEC
                eori.b  #$10, ($FFFFEE46).w
                sub.l   D2, D0
                bpl.s   Offset_0x006DE6
                bset    D6, ($FFFFEE56).w
                bra.s   Offset_0x006DEC
Offset_0x006DE6:
                addq.b  #$01, D6
                bset    D6, ($FFFFEE56).w
Offset_0x006DEC:
                rts
                lea     ($00C00004), A5
                lea     ($00C00000), A6
                lea     ($FFFFEE52).w, A2
                lea     ($FFFFEE08).w, A3
                lea     ($FFFF8080).w, A4
                move.w  #$6000, D2
                bsr     Offset_0x006F80
                lea     ($FFFFEE54).w, A2
                lea     ($FFFFEE10).w, A3
                bra     Offset_0x007050                                                                     
LoadTilesAsYouMove: ; Offset_0x006E1A:
                lea     ($00C00004), A5
                lea     ($00C00000), A6
                lea     ($FFFFEEA2).w, A2
                lea     ($FFFFEE68).w, A3   
                lea     ($FFFF8080).w, A4
                move.w  #$6000, D2 
                bsr     Offset_0x006F80
                lea     ($FFFFEEA4).w, A2
                lea     ($FFFFEE70).w, A3 
                bsr     Offset_0x007050
                lea     ($FFFFEEA6).w, A2
                lea     ($FFFFEE78).w, A3 
                bsr     Offset_0x007140
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x006E6C
                lea     ($FFFFEEA8).w, A2
                lea     ($FFFFEE80).w, A3 
                lea     ($FFFF8000).w, A4
                move.w  #$6000, D2 
                bsr     Offset_0x006F1A
Offset_0x006E6C:                
                lea     ($FFFFEEA0).w, A2
                lea     ($FFFFEE60).w, A3 
                lea     ($FFFF8000).w, A4
                move.w  #$4000, D2 
                tst.b   ($FFFFF720).w
                beq.s   Offset_0x006EB4
                move.b  #$00, ($FFFFF720).w
                moveq   #$FFFFFFF0, D4
                moveq   #$0F, D6
Offset_0x006E8C                
                movem.l D4-D6, -(A7)
                moveq   #$FFFFFFF0, D5
                move.w  D4, D1
                bsr     Offset_0x007644
                move.w  D1, D4 
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007350
                movem.l (A7)+, D4-D6 
                addi.w  #$0010, D4
                dbra    D6, Offset_0x006E8C
                move.b  #$00, ($FFFFEEA0).w
                rts
Offset_0x006EB4:
                tst.b   (A2)
                beq.s   Offset_0x006F18
                bclr    #$00, (A2)
                beq.s   Offset_0x006ECE
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5  
                bsr     Offset_0x007644
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5 
                bsr     Offset_0x007350
Offset_0x006ECE:                 
                bclr    #$01, (A2)
                beq.s   Offset_0x006EE8
                move.w  #$00E0, D4
                moveq   #$FFFFFFF0, D5 
                bsr     Offset_0x007644
                move.w  #$00E0, D4
                moveq   #$FFFFFFF0, D5 
                bsr     Offset_0x007350
Offset_0x006EE8:    
                bclr    #$02, (A2)
                beq.s   Offset_0x006EFE
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007644
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x0072C2
Offset_0x006EFE: 
                bclr    #$03, (A2)
                beq.s   Offset_0x006F18
                moveq   #$FFFFFFF0, D4
                move.w  #$0140, D5
                bsr     Offset_0x007644
                moveq   #$FFFFFFF0, D4
                move.w  #$0140, D5
                bsr     Offset_0x0072C2
Offset_0x006F18: 
                rts                
Offset_0x006F1A: 
                tst.b   (A2)
                beq.s   Offset_0x006F7E
                bclr    #$00, (A2)
                beq.s   Offset_0x006F34
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007680
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007350
Offset_0x006F34:  
                bclr    #$01, (A2)
                beq.s   Offset_0x006F4E
                move.w  #$00E0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007680
                move.w  #$00E0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007350
Offset_0x006F4E: 
                bclr    #$02, (A2)
                beq.s   Offset_0x006F64
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007680
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x0072C2
Offset_0x006F64:   
                bclr    #$03, (A2)
                beq.s   Offset_0x006F7E
                moveq   #$FFFFFFF0, D4
                move.w  #$0140, D5
                bsr     Offset_0x007680
                moveq   #$FFFFFFF0, D4
                move.w  #$0140, D5
                bsr     Offset_0x0072C2
Offset_0x006F7E:   
                rts                            
Offset_0x006F80: 
                tst.b   (A2)
                beq     Offset_0x00704E
                bclr    #$00, (A2)
                beq.s   Offset_0x006F9C 
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007644
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007350
Offset_0x006F9C:      
                bclr    #$01, (A2)
                beq.s   Offset_0x006FB6
                move.w  #$00E0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007644
                move.w  #$00E0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007350
Offset_0x006FB6:    
                bclr    #$02, (A2)
                beq.s   Offset_0x006FCC
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007644
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x0072C2                   
Offset_0x006FCC:    
                bclr    #$03, (A2)
                beq.s   Offset_0x006FE6
                moveq   #$FFFFFFF0, D4
                move.w  #$0140, D5
                bsr     Offset_0x007644
                moveq   #$FFFFFFF0, D4
                move.w  #$0140, D5
                bsr     Offset_0x0072C2
Offset_0x006FE6:     
                bclr    #$04, (A2)
                beq.s   Offset_0x006FFE
                moveq   #$FFFFFFF0, D4
                moveq   #$00, D5
                bsr     Offset_0x007646
                moveq   #$FFFFFFF0, D4
                moveq   #$00, D5
                moveq   #$1F, D6
                bsr     Offset_0x007354                  
Offset_0x006FFE:     
                bclr    #$05, (A2)
                beq.s   Offset_0x00701A
                move.w  #$00E0, D4
                moveq   #$00, D5
                bsr     Offset_0x007646
                move.w  #$00E0, D4
                moveq   #$00, D5
                moveq   #$1F, D6
                bsr     Offset_0x007354 
Offset_0x00701A:    
                bclr    #$06, (A2)
                beq.s   Offset_0x007032
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007644
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                moveq   #$1F, D6
                bsr     Offset_0x007348
Offset_0x007032:    
                bclr    #$07, (A2)
                beq.s   Offset_0x00704E
                move.w  #$00E0, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007644  
                move.w  #$00E0, D4
                moveq   #$FFFFFFF0, D5
                moveq   #$1F, D6
                bsr     Offset_0x007348
Offset_0x00704E:
                rts                 
Offset_0x007050:  
                tst.b   (A2)
                beq     Offset_0x007092
                bclr    #$00, (A2)
                beq.s   Offset_0x007072
                move.w  #$0070, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007644 
                move.w  #$0070, D4
                moveq   #$FFFFFFF0, D5
                moveq   #$02, D6
                bsr     Offset_0x0072C4                   
Offset_0x007072:  
                bclr    #$01, (A2)
                beq.s   Offset_0x007092
                move.w  #$0070, D4
                move.w  #$0140, D5
                bsr     Offset_0x007644 
                move.w  #$0070, D4
                move.w  #$0140, D5
                moveq   #$02, D6
                bsr     Offset_0x0072C4
Offset_0x007092:     
                rts

Offset_0x007094:
                dc.b    $00
Offset_0x007095:
                dc.b    $00, $00, $00, $00, $06, $06, $06, $06, $06, $06, $06, $06, $06, $06, $04, $04
                dc.b    $04, $04, $04, $04, $04, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02
                dc.b    $00                
;Offset_0x0070B6:
                moveq   #$FFFFFFF0, D4
                bclr    #$00, (A2)
                bne.s   Offset_0x0070C8
                bclr    #$01, (A2)
                beq.s   Offset_0x007110
                move.w  #$00E0, D4
Offset_0x0070C8:
                lea     Offset_0x007095(PC), A0
                move.w  ($FFFFEE0C).w, D0
                add.w   D4, D0
                andi.w  #$01F0, D0
                lsr.w   #$04, D0
                move.b  $00(A0, D0), D0
                lea     (Offset_0x00723C), A3
                move.w  $00(A3, D0), A3
                beq.s   Offset_0x0070FC
                moveq   #$FFFFFFF0, D5
                movem.l D4/D5, -(A7)
                bsr     Offset_0x007644
                movem.l (A7)+, D4/D5
                bsr     Offset_0x007350
                bra.s   Offset_0x007110
Offset_0x0070FC:
                moveq   #$00, D5
                movem.l D4/D5, -(A7)
                bsr     Offset_0x007646
                movem.l (A7)+, D4/D5
                moveq   #$1F, D6
                bsr     Offset_0x007354
Offset_0x007110:
                tst.b   (A2)
                bne.s   Offset_0x007116
                rts
Offset_0x007116:
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                move.b  (A2), D0
                andi.b  #$A8, D0
                beq.s   Offset_0x00712A
                lsr.b   #$01, D0
                move.b  D0, (A2)
                move.w  #$0140, D5
Offset_0x00712A:
                lea     Offset_0x007094(PC), A0
                move.w  ($FFFFEE0C).w, D0
                andi.w  #$01F0, D0
                lsr.w   #$04, D0
                lea     $00(A0, D0), A0
                bra     Offset_0x007244                
Offset_0x007140:
                tst.b   (A2)
                beq     Offset_0x00718C
                cmpi.b  #$0D, ($FFFFFE10).w
                beq     Offset_0x0071D0
                bclr    #$00, (A2)
                beq.s   Offset_0x00716C
                move.w  #$0040, D4
                moveq   #$FFFFFFF0, D5
                bsr     Offset_0x007644 
                move.w  #$0040, D4
                moveq   #$FFFFFFF0, D5
                moveq   #$02, D6
                bsr     Offset_0x0072C4
Offset_0x00716C: 
                bclr    #$01, (A2)
                beq.s   Offset_0x00718C
                move.w  #$0040, D4
                move.w  #$0140, D5
                bsr     Offset_0x007644 
                move.w  #$0040, D4
                move.w  #$0140, D5
                moveq   #$02, D6
                bsr     Offset_0x0072C4
Offset_0x00718C:
                rts
Offset_0x00718E:                 
                dc.b    $02 
Offset_0x00718F:  
                dc.b    $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02
                dc.b    $02, $02, $02, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $00    ; filler           
Offset_0x0071D0:    
                moveq   #$FFFFFFF0, D4
                bclr    #$00, (A2)
                bne.s   Offset_0x0071E2
                bclr    #$01, (A2) 
                beq.s   Offset_0x00720C
                move.w  #$00E0, D4
Offset_0x0071E2:                 
                lea     Offset_0x00718F(PC), A0
                move.w  ($FFFFEE0C).w, D0
                add.w   D4, D0
                andi.w  #$03F0, D0 
                lsr.w   #$04, D0
                move.b  $00(A0, D0), D0
                move.w  Offset_0x00723C(PC, D0), A3
                moveq   #$FFFFFFF0, D5
                movem.l D4-D5, -(A7)                 
                bsr     Offset_0x007644
                movem.l (A7)+, D4-D5
                bsr     Offset_0x007350
Offset_0x00720C: 
                tst.b   (A2)
                bne.s   Offset_0x007212
                rts 
Offset_0x007212:
                moveq   #$FFFFFFF0, D4
                moveq   #$FFFFFFF0, D5
                move.b  (A2), D0
                andi.b  #$A8, D0
                beq.s   Offset_0x007226
                lsr.b   #$01, D0
                move.b  D0, (A2)
                move.w  #$0140, D5
Offset_0x007226:                
                lea     Offset_0x00718E(PC), A0
                move.w  ($FFFFEE0C).w, D0
                andi.w  #$07F0, D0
                lsr.w   #$04, D0
                lea     $00(A0, D0), A0
                bra     Offset_0x007244
Offset_0x00723C: 
                dc.w    $EE68, $EE68, $EE70, $EE78
Offset_0x007244:
                tst.w   ($FFFFFFD8).w   
                bne.s   Offset_0x007286
                moveq   #$0F, D6
                move.l  #$00800000, D7
Offset_0x007252:                
                moveq   #$00, D0
                move.b  (A0)+, D0
                btst    D0, (A2)
                beq.s   Offset_0x00727A
                move.w  Offset_0x00723C(PC, D0), A3
                movem.l D4-D5/A0, -(A7) 
                movem.l D4-D5, -(A7) 
                bsr     Offset_0x007602
                movem.l (A7)+, D4-D5
                bsr     Offset_0x007644
                bsr     Offset_0x007532
                movem.l (A7)+, D4-D5/A0
Offset_0x00727A:   
                addi.w  #$0010, D4
                dbra    D6,  Offset_0x007252  
                clr.b   (A2)
                rts          
Offset_0x007286:      
                moveq   #$0F, D6
                move.l  #$00800000, D7 
Offset_0x00728E:
                moveq   #$00, D0
                move.b  (A0)+, D0
                btst    D0, (A2)
                beq.s   Offset_0x0072B6
                move.w  Offset_0x00723C(PC, D0), A3
                movem.l D4-D5/A0, -(A7) 
                movem.l D4-D5, -(A7) 
                bsr     Offset_0x007602
                movem.l (A7)+, D4-D5
                bsr     Offset_0x007644
                bsr     Offset_0x0075B8
                movem.l (A7)+, D4-D5/A0
Offset_0x0072B6:  
                addi.w  #$0010, D4
                dbra    D6,  Offset_0x00728E  
                clr.b   (A2)
                rts                             
Offset_0x0072C2:
                moveq   #$0F, D6
Offset_0x0072C4:
                add.w   (A3), D5
                add.w   $0004(A3), D4
                move.l  #$00800000, D7 
                move.l  D0, D1
                bsr     Offset_0x00745C
                tst.w   ($FFFFFFD8).w
                bne.s   Offset_0x007312
Offset_0x0072DC:                
                move.w  (A0), D3
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                lea     ($FFFF9000).w, A1
                adda.w  D3, A1
                move.l  D1, D0
                bsr     Offset_0x007532
                adda.w  #$0010, A0
                addi.w  #$0100, D1
                andi.w  #$0FFF, D1
                addi.w  #$0010, D4
                move.w  D4, D0
                andi.w  #$0070, D0
                bne.s   Offset_0x00730C
                bsr     Offset_0x00745C
Offset_0x00730C:                 
                dbra    D6, Offset_0x0072DC
                rts                
Offset_0x007312:     
                move.w  (A0), D3
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                lea     ($FFFF9000).w, A1
                adda.w  D3, A1
                move.l  D1, D0
                bsr     Offset_0x0075B8
                adda.w  #$0010, A0
                addi.w  #$0080, D1
                andi.w  #$0FFF, D1
                addi.w  #$0010, D4
                move.w  D4, D0
                andi.w  #$0070, D0
Offset_0x00733C:                
                bne.s   Offset_0x007342
                bsr     Offset_0x00745C
Offset_0x007342:
                dbra    D6, Offset_0x007312
                rts
Offset_0x007348:
                add.w   (A3), D5
                add.w   $0004(A3), D4
                bra.s   Offset_0x007358
Offset_0x007350:
                moveq   #$15, D6
                add.w   (A3), D5
Offset_0x007354:                
                add.w   $0004(A3), D4  
Offset_0x007358:                 
                tst.w   ($FFFFFFD8).w
                bne.s   Offset_0x0073D6
                move.l  A2, -(A7)
                move.w  D6, -(A7)
                lea     ($FFFFEF00).w, A2
                move.l  D0, D1
                or.w    D2, D1
                swap.w  D1
                move.l  D1, -(A7)
                move.l  D1, (A5)
                swap.w  D1
                bsr     Offset_0x00745C
Offset_0x007376:                    
                move.w  (A0), D3              
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                lea     ($FFFF9000).w, A1
                adda.w  D3, A1
                bsr     Offset_0x007492
                addq.w  #$02, A0
                addq.b  #$04, D1
                bpl.s   Offset_0x007398
                andi.b  #$7F, D1
                swap.w  D1
                move.l  D1, (A5)
                swap.w  D1
Offset_0x007398:
                addi.w  #$0010, D5
                move.w  D5, D0
                andi.w  #$0070, D0
                bne.s   Offset_0x0073A8
                bsr     Offset_0x00745C  
Offset_0x0073A8:
                dbra    D6, Offset_0x007376   
                move.l  (A7)+, D1
                addi.l  #$00800000, D1
                lea     ($FFFFEF00).w, A2   
                move.l  D1, (A5)
                swap.w  D1
                move.w  (A7)+, D6  
Offset_0x0073BE:
                move.l  (A2)+, (A6)
                addq.b  #4, D1
                bmi.s   Offset_0x0073CE
                ori.b   #$80, D1
                swap.w  D1
                move.l  D1, (A5)
                swap.w  D1
Offset_0x0073CE:
                dbra    D6, Offset_0x0073BE
                move.l  (A7)+, A2
                rts
Offset_0x0073D6:
                move.l  D0, D1
                or.w    D2, D1
                swap.w  D1
                move.l  D1, (A5)
                swap.w  D1
                tst.b   D1
                bmi.s   Offset_0x007420
                bsr     Offset_0x00745C
Offset_0x0073E8:                
                move.w  (A0), D3
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                lea     ($FFFF9000).w, A1
                adda.w  D3, A1
                bsr     Offset_0x0074F4
                addq.w  #$02, A0
                addq.b  #$04, D1
                bpl.s   Offset_0x00740A
                andi.b  #$7F, D1
                swap.w  D1
                move.l  D1, (A5)
                swap.w  D1
Offset_0x00740A:
                addi.w  #$0010, D5
                move.w  D5, D0
                andi.w  #$0070, D0
                bne.s   Offset_0x00741A
                bsr     Offset_0x00745C
Offset_0x00741A:
                dbra    D6, Offset_0x0073E8
                rts 
Offset_0x007420:
                bsr     Offset_0x00745C
Offset_0x007424:                
                move.w  (A0), D3
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                lea     ($FFFF9000).w, A1
                adda.w  D3, A1
                bsr     Offset_0x0074F4
                addq.w  #$02, A0
                addq.b  #$04, D1
                bmi.s   Offset_0x007446
                ori.b   #$80, D1
                swap.w  D1
                move.l  D1, (A5)
                swap.w  D1
Offset_0x007446:
                addi.w  #$0010, D5
                move.w  D5, D0
                andi.w  #$0070, D0
                bne.s   Offset_0x007456
                bsr     Offset_0x00745C
Offset_0x007456:
                dbra    D6, Offset_0x007424
                rts                
Offset_0x00745C:               
                movem.l D4-D5, -(A7)
                move.w  D4, D3
                add.w   D3, D3
                andi.w  #$0F00, D3
                lsr.w   #3, D5
                move.w  D5, D0
                lsr.w   #4, D0
                andi.w  #$007F, D0
                add.w   D3, D0
                moveq   #$FFFFFFFF, D3
                clr.w   D3
                move.b  $00(A4, D0), D3
                lsl.w   #7, D3
                andi.w  #$0070, D4
                andi.w  #$000E, D5
                add.w   D4, D3
                add.w   D5, D3
                move.l  D3, A0
                movem.l (A7)+, D4-D5
                rts  
Offset_0x007492:
                btst    #$03, (A0)
                bne.s   Offset_0x0074BE
                btst    #$02, (A0)
                bne.s   Offset_0x0074A4
                move.l  (A1)+, (A6)
                move.l  (A1)+, (A2)+
                rts
Offset_0x0074A4:
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A6)
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A2)+
                rts
Offset_0x0074BE:
                btst    #$02, (A0)
                bne.s   Offset_0x0074DA
                move.l  (A1)+, D0
                move.l  (A1)+, D3
                eori.l  #$10001000, D3
                move.l  D3, (A6)
                eori.l  #$10001000, D0
                move.l  D0, (A2)+
                rts
Offset_0x0074DA:
                move.l  (A1)+, D0
                move.l  (A1)+, D3
                eori.l  #$18001800, D3
                swap.w  D3
                move.l  D3, (A6)
                eori.l  #$18001800, D0
                swap.w  D0
                move.l  D0, (A2)+
                rts  
Offset_0x0074F4:
                btst    #$03, (A0)
                bne.s   Offset_0x007512
                btst    #$02, (A0)
                bne.s   Offset_0x007504
                move.l  (A1)+, (A6)
                rts
Offset_0x007504:
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A6)
                rts
Offset_0x007512:
                btst    #$02, (A0)
                bne.s   Offset_0x007524
                move.l  (A1)+, D3
                eori.l  #$10001000, D3
                move.l  D3, (A6)
                rts
Offset_0x007524:
                move.l  (A1)+, D3
                eori.l  #$18001800, D3
                swap.w  D3
                move.l  D3, (A6)
                rts
Offset_0x007532:
                or.w    D2, D0
                swap.w  D0
                btst    #$03, (A0)
                bne.s   Offset_0x00756E
                btst    #$02, (A0)
                bne.s   Offset_0x00754E
                move.l  D0, (A5)
                move.l  (A1)+, (A6)
                add.l   D7, D0
                move.l  D0, (A5)
                move.l  (A1)+, (A6)
                rts
Offset_0x00754E:
                move.l  D0, (A5)
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A6)
                add.l   D7, D0
                move.l  D0, (A5)
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A6)
                rts
Offset_0x00756E:
                btst    #$02, (A0)
                bne.s   Offset_0x007594
                move.l  D5, -(A7)
                move.l  D0, (A5)
                move.l  (A1)+, D5
                move.l  (A1)+, D3
                eori.l  #$10001000, D3
                move.l  D3, (A6)
                add.l   D7, D0
                move.l  D0, (A5)
                eori.l  #$10001000, D5
                move.l  D5, (A6)
                move.l  (A7)+, D5
                rts
Offset_0x007594:
                move.l  D5, -(A7)
                move.l  D0, (A5)
                move.l  (A1)+, D5
                move.l  (A1)+, D3
                eori.l  #$18001800, D3
                swap.w  D3
                move.l  D3, (A6)
                add.l   D7, D0
                move.l  D0, (A5)
                eori.l  #$18001800, D5
                swap.w  D5
                move.l  D5, (A6)
                move.l  (A7)+, D5
                rts
Offset_0x0075B8:
                or.w    D2, D0
                swap.w  D0
                btst    #$03, (A0)
                bne.s   Offset_0x0075DE
                btst    #$02, (A0)
                bne.s   Offset_0x0075CE
                move.l  D0, (A5)
                move.l  (A1)+, (A6)
                rts
Offset_0x0075CE:
                move.l  D0, (A5)
                move.l  (A1)+, D3
                eori.l  #$08000800, D3
                swap.w  D3
                move.l  D3, (A6)
                rts
Offset_0x0075DE:
                btst    #$02, (A0)
                bne.s   Offset_0x0075F2
                move.l  D0, (A5)
                move.l  (A1)+, D3
                eori.l  #$10001000, D3
                move.l  D3, (A6)
                rts
Offset_0x0075F2:
                move.l  D0, (A5)
                move.l  (A1)+, D3
                eori.l  #$18001800, D3
                swap.w  D3
                move.l  D3, (A6)
                rts
Offset_0x007602:
                add.w   (A3), D5
                add.w   $0004(A3), D4
                lea     ($FFFF9000).w, A1
                move.w  D4, D3
                add.w   D3, D3
                andi.w  #$0F00, D3
                lsr.w   #$03, D5
                move.w  D5, D0
                lsr.w   #$04, D0
                andi.w  #$007F, D0
                add.w   D3, D0
                moveq   #$FFFFFFFF, D3
                clr.w   D3
                move.b  $00(A4, D0), D3
                lsl.w   #$07, D3
                andi.w  #$0070, D4
                andi.w  #$000E, D5
                add.w   D4, D3
                add.w   D5, D3
                move.l  D3, A0
                move.w  (A0), D3
                andi.w  #$03FF, D3
                lsl.w   #$03, D3
                adda.w  D3, A1
                rts
Offset_0x007644:
                add.w   (A3), D5   
Offset_0x007646:
                tst.w   ($FFFFFFD8).w
                bne.s   Offset_0x007666
                add.w   $0004(A3), D4
                andi.w  #$00F0, D4
                andi.w  #$01F0, D5
                lsl.w   #$04, D4
                lsr.w   #$02, D5
                add.w   D5, D4
                moveq   #$03, D0
                swap.w  D0
                move.w  D4, D0
                rts
Offset_0x007666:
                add.w   $0004(A3), D4
Offset_0x00766A:                
                andi.w  #$01F0, D4
                andi.w  #$01F0, D5  
                lsl.w   #3, D4
                lsr.w   #2, D5
                add.w   D5, D4
                moveq   #$03, D0
                swap.w  D0
                move.w  D4, D0
                rts
Offset_0x007680:
                tst.w   ($FFFFFFD8).w
                bne.s   Offset_0x0076A2
                add.w   $0004(A3), D4
                add.w   (A3), D5
                andi.w  #$00F0, D4
                andi.w  #$01F0, D5
                lsl.w   #4, D4
                lsr.w   #2, D5
                add.w   D5, D4
                moveq   #$02, D0
                swap.w  D0
                move.w  D4, D0
                rts
Offset_0x0076A2:
                add.w   $0004(A3), D4
                add.w   (A3), D5
                andi.w  #$01F0, D4
                andi.w  #$01F0, D5
                lsl.w   #3, D4
                lsr.w   #2, D5
                add.w   D5, D4
                moveq   #$02, D0
                swap.w  D0
                move.w  D4, D0
                rts  
Load_Tiles_From_Start: ; Offset_0x0076BE:
                lea     ($00C00004), A5
                lea     ($00C00000), A6
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x0076DE
                lea     ($FFFFEE20).w, A3
                lea     ($FFFF8000).w, A4
                move.w  #$6000, D2
                bsr.s   Offset_0x00773A
Offset_0x0076DE:
                lea     ($FFFFEE00).w, A3
                lea     ($FFFF8000).w, A4
                move.w  #$4000, D2
                bsr.s   Offset_0x00770A
                lea     ($FFFFEE08).w, A3
                lea     ($FFFF8080).w, A4
                move.w  #$6000, D2
                tst.w   ($FFFFFFD8).w
                beq     Offset_0x00770A
                cmpi.b  #$0B, ($FFFFFE10).w
                beq     Offset_0x00776A
Offset_0x00770A:
                moveq   #$FFFFFFF0, D4
                moveq   #$0F, D6
Offset_0x00770E                
                movem.l D4-D6, -(A7)
                moveq   #$00, D5
                move.w  D4, D1
                bsr     Offset_0x007644
                move.w  D1, D4
                moveq   #$00, D5
                moveq   #$1F, D6
                move    #$2700, SR
                bsr     Offset_0x007348
                move    #$2300, SR
                movem.l (A7)+, D4-D6
                addi.w  #$0010, D4
                dbra    D6, Offset_0x00770E
                rts                  
Offset_0x00773A:
                moveq   #$FFFFFFF0, D4
                moveq   #$0F, D6
Offset_0x00773E                
                movem.l D4-D6, -(A7)
                moveq   #$00, D5
                move.w  D4, D1
                bsr     Offset_0x007680
                move.w  D1, D4
                moveq   #$00, D5
                moveq   #$1F, D6
                move    #$2700, SR
                bsr     Offset_0x007348
                move    #$2300, SR
                movem.l (A7)+, D4-D6
                addi.w  #$0010, D4
                dbra    D6, Offset_0x00773E
                rts     
Offset_0x00776A:
                moveq   #$00, D4
                moveq   #$1F, D6
Offset_0x00776E:
                movem.l D4-D6, -(A7)
                moveq   #$00, D5
                move.w  D4, D1
                bsr     Offset_0x00766A
                move.w  D1, D4
                moveq   #$00, D5
                moveq   #$1F, D6
                move    #$2700, SR
                bsr     Offset_0x007358
                move    #$2300, SR
                movem.l (A7)+, D4-D6
                addi.w  #$0010, D4
                dbra    D6, Offset_0x00776E
                rts  
                
;=============================================================================== 
; Sub Routine Main_Level_Load_16_128_Blocks
; [ Begin ]                         
;===============================================================================                    
Main_Level_Load_16_128_Blocks: ; Offset_0x00779A: Load 16x16/128x128 Tiles
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                lea     (TilesMainTable), A2    ; Offset_0x024354
                lea     $00(A2, D0), A2
                move.l  A2, -(A7)
                addq.w  #$04, A2
                move.l  (A2)+, A0
                bra.s   Main_Level_Load_Blocks_Convert16 ; Offset_0x0077CA
;===============================================================================
; Offset_0x0077BC:                
                lea     ($FFFF9000).w, A1       ; 16x16 Tiles
                move.w  #$0000, D0
                bsr     EnigmaDec               ; Offset_0x0018DA
                bra.s   Offset_0x0077EE
;===============================================================================                
Main_Level_Load_Blocks_Convert16: ; Offset_0x0077CA:
                lea     ($FFFF9000).w, A1
                move.w  #$0BFF, D2
Main_Level_Load_16_Blocks_Loop: ; Offset_0x0077D2:
                move.w  (A0)+, D0
                tst.w   ($FFFFFFD8).w
                beq.s   Main_Level_Load_16_Blocks_Not2p ; Offset_0x0077E8
                move.w  D0, D1
                andi.w  #$F800, D0
                andi.w  #$07FF, D1
                lsr.w   #$01, D1
                or.w    D1, D0
Main_Level_Load_16_Blocks_Not2p: ; Offset_0x0077E8:                
                move.w  D0, (A1)+
                dbra    D2, Main_Level_Load_16_Blocks_Loop ; Offset_0x0077D2    
Offset_0x0077EE:    
                cmpi.b  #$07, ($FFFFFE10).w
                bne.s   Offset_0x007820
                lea     ($FFFF9980).w, A1
                lea     (Hill_Top_16x16_Map), A0 ; Offset_0x084A50
                move.w  #$03FF, D2
Offset_0x007804:           
                move.w  (A0)+, D0
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x00781A
                move.w  D0, D1
                andi.w  #$F800, D0
                andi.w  #$07FF, D1
                lsr.w   #$01, D1
                or.w    D1, D0
Offset_0x00781A:
                move.w  D0, (A1)+
                dbra    D2, Offset_0x007804 
Offset_0x007820:                
                move.l  (A2)+, A0
                lea     ($FFFF0000), A1         ; 128x128 Tiles
                bsr     KosinskiDec             ; Offset_0x001A58
                bra.s   Load_Level_Sprites      ; Offset_0x00785E 
;=============================================================================== 
; Sub Routine Main_Level_Load_16_128_Blocks
; [ End ]                         
;===============================================================================                 
                
;=============================================================================== 
; Sub Routine Unused #1
; [ Begin ]                         
;===============================================================================                  
;Offset_0x00782E:
z                bra.s   Offset_0x00784E                
;Offset_0x007830:
                moveq   #$00, D1
                moveq   #$00, D2
                move.w  (A0)+, D0
                lea     $00(A0, D0), A1
                lea     ($FFFF0000), A2
                lea     ($FFFF8000).w, A3
Offset_0x007844:
                bsr     UnknownDec              ; Offset_0x001AF8
                tst.w   D0
                bmi.s   Offset_0x007844
                bra.s   Load_Level_Sprites      ; Offset_0x00785E
Offset_0x00784E:
                lea     ($FFFF0000), A1
                move.w  #$3FFF, D0
Offset_0x007858:                
                move.w  (A0)+, (A1)+
                dbra    D0, Offset_0x007858
;=============================================================================== 
; Sub Routine Unused #1
; [ End ]                         
;===============================================================================                    

;=============================================================================== 
; Sub Routine Load_Level_Sprites
; [ Begin ]                         
;===============================================================================                  
Load_Level_Sprites: ; Offset_0x00785E: ; Load Palette for Levels
                bsr     Load_Level_Layout ; Offset_0x007886
                move.l  (A7)+, A2
                addq.w  #$04, A2
                moveq   #$00, D0
                move.b  (A2), D0
                beq.s   Load_Level_Palete       ; Offset_0x007870
                bsr     LoadPLC                 ; Offset_0x00173C
;=============================================================================== 
; Sub Routine Load_Level_Sprites
; [ End ]                         
;=============================================================================== 
                   
;=============================================================================== 
; Sub Routine Load_Level_Palete
; [ Begin ]                         
;===============================================================================                
Load_Level_Palete: ; Offset_0x007870:                
                addq.w  #$04, A2
                moveq   #$00, D0
                move.b  (A2), D0
                cmpi.w  #$0C01, ($FFFFFE10).w
                bne.s   Offset_0x007880         
                moveq   #$0A, D0                
Offset_0x007880:
                bsr     PalLoad1                ; Offset_0x0028E2
                rts  
;=============================================================================== 
; Sub Routine Load_Level_Palete
; [ End ]                         
;===============================================================================
                              
;=============================================================================== 
; Sub Routine Load_Level_Layout
; [ Begin ]                         
;===============================================================================
Load_Level_Layout: ; Offset_0x007886: ; Load Level Layout
                lea     ($FFFF8000).w, A3 ; Level Layout
                move.w  #$03FF, D1
                moveq   #$00, D0 
Offset_0x007890:
                move.l  D0, (A3)+
                dbra    D1, Offset_0x007890
                lea     ($FFFF8000).w, A3 ; Foreground
                moveq   #$00, D1
                bsr     Interleave_Level_Layout ; Offset_0x0078A6
                lea     ($FFFF8080).w, A3 ; Background
                moveq   #$02, D1
Interleave_Level_Layout: ; Offset_0x0078A6:                
                moveq   #$00, D0
                move.w  ($FFFFFE10).w, D0
                ror.b   #$01, D0
                lsr.w   #$05, D0
                add.w   D1, D0
                lea     (Level_Layout), A1   ; Offset_0x03334E
                move.w  $00(A1, D0), D0
                lea     $00(A1, D0.l), A1
                moveq   #$00, D1
                move.w  D1, D2
                move.b  (A1)+, D1
                move.b  (A1)+, D2
                move.l  D1, D5
                addq.l  #$01, D5
                moveq   #$00, D3
                move.w  #$0080, D3
                divu.w  D5, D3
                subq.w  #$01, D3
Offset_0x0078D6:                
                move.l  A3, A0
                move.w  D3, D4
Offset_0x0078DA:                
                move.l  A1, -(A7)
                move.w  D1, D0
Offset_0x0078DE:                
                move.b  (A1)+, (A0)+  
                dbra    D0, Offset_0x0078DE
                move.l  (A7)+, A1
                dbra    D4, Offset_0x0078DA 
                lea     $00(A1, D5), A1
                lea     $0100(A3), A3
                dbra    D2, Offset_0x0078D6
                rts
;=============================================================================== 
; Sub Routine Load_Level_Layout
; [ End ]                         
;===============================================================================

;=============================================================================== 
; Sub Routine Unused #2
; [ Begin ]                         
;===============================================================================                 
;Offset_0x0078F8:
                lea     ($00FE0000), A1
                lea     ($00FE0080), A2
                lea     ($FFFF0000), A3
                move.w  #$003F, D1
Offset_0x00790E:                
                bsr     Offset_0x0079A0
                bsr     Offset_0x0079A0
                dbra    D1, Offset_0x00790E
                lea     ($00FE0000), A1
                lea     ($00FF0000), A2
                move.w  #$003F, D1
Offset_0x00792A:                
                move.w  #$0000, (A2)+
                dbra    D1, Offset_0x00792A
                move.w  #$3FBF, D1
Offset_0x007936:                  
                move.w  (A1)+, (A2)+
                dbra    D1, Offset_0x007936
                rts
                lea     ($00FE0000), A1
                lea     ($FFFF0000), A3
                moveq   #$1F, D0
Offset_0x00794C:              
                move.l  (A1)+, (A3)+
                dbra    D0, Offset_0x00794C
                moveq   #$00, D7
                lea     ($00FE0000), A1
                move.w  #$00FF, D5
Offset_0x00795E:                
                lea     ($FFFF0000), A3
                move.w  D7, D6
Offset_0x007966:                
                movem.l A1-A3, -(A7)
                move.w  #$003F, D0
Offset_0x00796E:                
                cmpm.w  (A1)+, (A3)+
                bne.s   Offset_0x007984
                dbra    D0, Offset_0x00796E
                movem.l (A7)+, A1-A3
                adda.w  #$0080, A1
                dbra    D5, Offset_0x00795E
                bra.s   Offset_0x00799E
Offset_0x007984:
                movem.l (A7)+, A1-A3
                adda.w  #$0080, A3
                dbra    D6, Offset_0x007966
                moveq   #$1F, D0
Offset_0x007992:                
                move.l  (A1)+, (A3)+
                dbra    D0, Offset_0x007992
                addq.l  #$01, D7
                dbra    D5, Offset_0x00795E
Offset_0x00799E:
                bra.s   Offset_0x00799E
Offset_0x0079A0:
                moveq   #$07, D0
Offset_0x0079A2:                
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A1)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                move.l  (A3)+, (A2)+
                dbra    D0, Offset_0x0079A2
                adda.w  #$0080, A1
                adda.w  #$0080, A2
                rts            
;=============================================================================== 
; Sub Routine Unused #2
; [ Begin ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine Dyn_Screen_Boss_Loader
; [ Begin ]                         
;===============================================================================                    
Dyn_Screen_Boss_Loader: ; Offset_0x0079C0: ; Boss Loader / Level Dynamic Resize
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                move.w  DynResize_Index(PC, D0), D0 ; Offset_0x007A26
                jsr     DynResize_Index(PC, D0)     ; Offset_0x007A26
                moveq   #$02, D1
                move.w  ($FFFFEEC6).w, D0
                sub.w   ($FFFFEECE).w, D0
                beq.s   Offset_0x0079FE
                bcc.s   Offset_0x007A00
                neg.w   D1
                move.w  ($FFFFEE04).w, D0
                cmp.w   ($FFFFEEC6).w, D0
                bls.s   Offset_0x0079F4
                move.w  D0, ($FFFFEECE).w
                andi.w  #$FFFE, ($FFFFEECE).w
Offset_0x0079F4:
                add.w   D1, ($FFFFEECE).w
                move.b  #$01, ($FFFFEEDE).w
Offset_0x0079FE:
                rts
Offset_0x007A00:
                move.w  ($FFFFEE04).w, D0
                addi.w  #$0008, D0
                cmp.w   ($FFFFEECE).w, D0
                bcs.s   Offset_0x007A1A
                btst    #$01, ($FFFFB022).w
                beq.s   Offset_0x007A1A
                add.w   D1, D1
                add.w   D1, D1
Offset_0x007A1A:
                add.w   D1, ($FFFFEECE).w
                move.b  #$01, ($FFFFEEDE).w
                rts
DynResize_Index: ; Offset_0x007A26:
                dc.w    Offset_0x007A48-DynResize_Index
                dc.w    Offset_0x007AD8-DynResize_Index
                dc.w    Offset_0x007ADA-DynResize_Index
                dc.w    Offset_0x007ADC-DynResize_Index
                dc.w    Offset_0x007ADE-DynResize_Index
                dc.w    Offset_0x007AE0-DynResize_Index
                dc.w    Offset_0x007AE2-DynResize_Index
                dc.w    Offset_0x007AE4-DynResize_Index
                dc.w    Offset_0x007FC8-DynResize_Index
                dc.w    Offset_0x007FCA-DynResize_Index
                dc.w    Offset_0x007FCC-DynResize_Index
                dc.w    Offset_0x007FCE-DynResize_Index
                dc.w    DynResize_CNz-DynResize_Index  ; Offset_0x007FD0
                dc.w    DynResize_CPz-DynResize_Index  ; Offset_0x007FD2
                dc.w    DynResize_GCz-DynResize_Index  ; Offset_0x007FD4
                dc.w    DynResize_NGHz-DynResize_Index ; Offset_0x007FD6
                dc.w    DynResize_DEz-DynResize_Index  ; Offset_0x007FD8
Offset_0x007A48:
                tst.b   ($FFFFFE11).w
                bne.s   Offset_0x007A50
                rts
Offset_0x007A50:
                moveq   #$00, D0
                move.b  ($FFFFEEDF).w, D0
                move.w  Offset_0x007A5E(PC, D0), D0
                jmp     Offset_0x007A5E(PC, D0)
Offset_0x007A5E:
                dc.w    Offset_0x007A64-Offset_0x007A5E
                dc.w    Offset_0x007AB4-Offset_0x007A5E
                dc.w    Offset_0x007AC8-Offset_0x007A5E
Offset_0x007A64:
                cmpi.w  #$26E0, ($FFFFEE00).w
                bcs.s   Offset_0x007AB2
                move.w  ($FFFFEE00).w, ($FFFFEEC8).w
                move.w  #$0390, ($FFFFEEC6).w
                move.w  #$0390, ($FFFFEECE).w
                addq.b  #$02, ($FFFFEEDF).w
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x007A9E
                move.b  #$55, (A1)
                move.b  #$81, $0028(A1)
                move.w  #$29D0, $0008(A1)
                move.w  #$0426, $000C(A1)
Offset_0x007A9E:
                move.w  #$008E, D0
                bsr     Play_Music              ; Offset_0x0014C0
                move.b  #$01, ($FFFFF7AA).w
                moveq   #$28, D0
                bra     LoadPLC                 ; Offset_0x00173C
Offset_0x007AB2:
                rts
Offset_0x007AB4:
                cmpi.w  #$2880, ($FFFFEE00).w
                bcs.s   Offset_0x007AC6
                move.w  #$2880, ($FFFFEEC8).w
                addq.b  #$02, ($FFFFEEDF).w
Offset_0x007AC6:
                rts
Offset_0x007AC8:
                tst.b   ($FFFFF7A7).w
                beq.s   Offset_0x007AD4
                move.b  #$00, ($FFFFF600).w
Offset_0x007AD4:
                rts
                rts
Offset_0x007AD8:
                rts
Offset_0x007ADA:
                rts
Offset_0x007ADC:
                rts
Offset_0x007ADE:
                rts
Offset_0x007AE0:
                rts
Offset_0x007AE2:
                rts
Offset_0x007AE4:
                tst.b   ($FFFFFE11).w
                bne     Offset_0x007CF6
                moveq   #$00, D0
                move.b  ($FFFFEEDF).w, D0
                move.w  Offset_0x007AFA(PC, D0), D0
                jmp     Offset_0x007AFA(PC, D0)
Offset_0x007AFA:
                dc.w    Offset_0x007B00-Offset_0x007AFA
                dc.w    Offset_0x007B6C-Offset_0x007AFA
                dc.w    Offset_0x007C20-Offset_0x007AFA
Offset_0x007B00:
                cmpi.w  #$0400, ($FFFFEE04).w
                bcs.s   Offset_0x007B48
                cmpi.w  #$1800, ($FFFFEE00).w
                bcs.s   Offset_0x007B48
                move.b  #$01, ($FFFFEEBC).w
                move.l  ($FFFFEE00).w, ($FFFFEE08).w
                move.l  ($FFFFEE04).w, ($FFFFEE0C).w
                moveq   #$00, D0
                move.w  D0, ($FFFFEEB4).w
                move.w  D0, ($FFFFEEB6).w
                move.w  D0, ($FFFFEEE2).w
                move.w  #$0140, ($FFFFEEE4).w
                subi.w  #$0100, ($FFFFEE0C).w
                move.w  #$0000, ($FFFFEEE6).w
                addq.b  #$02, ($FFFFEEDF).w
Offset_0x007B46:                
                rts
Offset_0x007B48:
                tst.b   ($FFFFEEBC).w
                beq.s   Offset_0x007B46
                move.w  #$0200, D0
                moveq   #$00, D1
                move.w  D1, ($FFFFEEB4).w
                move.w  D1, ($FFFFEEB6).w
                bsr     Offset_0x007C84
                or.w    D0, D1
                bne.s   Offset_0x007B46
                move.b  #$00, ($FFFFEEBC).w
                rts
Offset_0x007B6C:
                tst.b   ($FFFFEEE8).w
                bne.s   Offset_0x007B8A
                cmpi.w  #$0140, ($FFFFEEE4).w
                beq.s   Offset_0x007BA2
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   Offset_0x007BC0
                addq.w  #$01, ($FFFFEEE4).w
                bra.s   Offset_0x007BC0
Offset_0x007B8A:
                cmpi.w  #$00E0, ($FFFFEEE4).w
                beq.s   Offset_0x007BA2
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   Offset_0x007BC0
                subq.w  #$01, ($FFFFEEE4).w
                bra.s   Offset_0x007BC0
Offset_0x007BA2:
                move.b  #$00, ($FFFFEEBD).w
                subq.w  #$01, ($FFFFEEE6).w
                bpl.s   Offset_0x007BC0
                move.w  #$0078, ($FFFFEEE6).w
                eori.b  #$01, ($FFFFEEE8).w
                move.b  #$01, ($FFFFEEBD).w
Offset_0x007BC0:
                cmpi.w  #$1800, ($FFFFEE00).w
                bcs.s   Offset_0x007BE8
                cmpi.w  #$1F00, ($FFFFEE00).w
                bcc.s   Offset_0x007C04
                move.w  ($FFFFEEB0).w, ($FFFFEEB4).w
                move.w  ($FFFFEEB2).w, ($FFFFEEB6).w
                move.w  ($FFFFEE00).w, D0
                move.w  ($FFFFEE04).w, D1
                bra     Offset_0x007C84
Offset_0x007BE8:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                subq.b  #$02, ($FFFFEEDF).w
                rts
Offset_0x007C04:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                addq.b  #$02, ($FFFFEEDF).w
                rts
Offset_0x007C20:
                cmpi.w  #$1F00, ($FFFFEE00).w
                bcc.s   Offset_0x007C60
                move.b  #$01, ($FFFFEEBC).w
                move.l  ($FFFFEE00).w, ($FFFFEE08).w
                move.l  ($FFFFEE04).w, ($FFFFEE0C).w
                moveq   #$00, D0
                move.w  D0, ($FFFFEEB4).w
                move.w  D0, ($FFFFEEB6).w
                move.w  D0, ($FFFFEEE2).w
                move.w  #$0140, ($FFFFEEE4).w
                subi.w  #$0100, ($FFFFEE0C).w
                move.w  #$0000, ($FFFFEEE6).w
                subq.b  #$02, ($FFFFEEDF).w
Offset_0x007C5E:                
                rts
Offset_0x007C60:
                tst.b   ($FFFFEEBC).w
                beq.s   Offset_0x007C5E
                move.w  #$0200, D0
                moveq   #$00, D1
                move.w  D1, ($FFFFEEB4).w
                move.w  D1, ($FFFFEEB6).w
                bsr     Offset_0x007C84
                or.w    D0, D1
                bne.s   Offset_0x007C5E
                move.b  #$00, ($FFFFEEBC).w
                rts
Offset_0x007C84:
                sub.w   ($FFFFEE08).w, D0
                sub.w   ($FFFFEEE2).w, D0
                bpl.s   Offset_0x007C9A
                cmpi.w  #$FFF0, D0
                bgt.s   Offset_0x007C98
                move.w  #$FFF0, D0
Offset_0x007C98:
                bra.s   Offset_0x007CA4
Offset_0x007C9A:
                cmpi.w  #$0010, D0
                bcs.s   Offset_0x007CA4
                move.w  #$0010, D0
Offset_0x007CA4:
                move.b  D0, ($FFFFEEB4).w
                sub.w   ($FFFFEE0C).w, D1
                sub.w   ($FFFFEEE4).w, D1
                bpl.s   Offset_0x007CBE
                cmpi.w  #$FFF0, D1
                bgt.s   Offset_0x007CBC
                move.w  #$FFF0, D1
Offset_0x007CBC:
                bra.s   Offset_0x007CC8
Offset_0x007CBE:
                cmpi.w  #$0010, D1
                bcs.s   Offset_0x007CC8
                move.w  #$0010, D1
Offset_0x007CC8:
                move.b  D1, ($FFFFEEB6).w
                rts
                btst    #$00, ($FFFFF606).w
                beq.s   Offset_0x007CE0
                tst.w   ($FFFFEEE4).w
                beq.s   Offset_0x007CE0
                subq.w  #$01, ($FFFFEEE4).w
Offset_0x007CE0:
                btst    #$01, ($FFFFF606).w
                beq.s   Offset_0x007CF4
                cmpi.w  #$0700, ($FFFFEEE4).w
                beq.s   Offset_0x007CF4
                addq.w  #$01, ($FFFFEEE4).w
Offset_0x007CF4:
                rts
Offset_0x007CF6:
                moveq   #$00, D0
                move.b  ($FFFFEEDF).w, D0
                move.w  Offset_0x007D04(PC, D0), D0
                jmp     Offset_0x007D04(PC, D0)
Offset_0x007D04:
                dc.w    Offset_0x007D0E-Offset_0x007D04
                dc.w    Offset_0x007D90-Offset_0x007D04
                dc.w    Offset_0x007E44-Offset_0x007D04
                dc.w    Offset_0x007EA8-Offset_0x007D04
                dc.w    Offset_0x007F5C-Offset_0x007D04
Offset_0x007D0E:
                cmpi.w  #$14C0, ($FFFFEE00).w
                bcs.s   Offset_0x007D6C
                move.b  #$01, ($FFFFEEBC).w
                move.l  ($FFFFEE00).w, ($FFFFEE08).w
                move.l  ($FFFFEE04).w, ($FFFFEE0C).w
                moveq   #$00, D0
                move.w  D0, ($FFFFEEB4).w
                move.w  D0, ($FFFFEEB6).w
                move.w  D0, ($FFFFEEE2).w
                move.w  #$02C0, ($FFFFEEE4).w
                subi.w  #$0100, ($FFFFEE0C).w
                move.w  #$0000, ($FFFFEEE6).w
                addq.b  #$02, ($FFFFEEDF).w
                cmpi.w  #$0380, ($FFFFEE04).w
                bcs.s   Offset_0x007D6A
                move.w  #$F980, ($FFFFEEE2).w
                addi.w  #$0480, ($FFFFEE08).w
                move.w  #$0300, ($FFFFEEE4).w
                addq.b  #$06, ($FFFFEEDF).w
Offset_0x007D6A:
                rts
Offset_0x007D6C:
                tst.b   ($FFFFEEBC).w
                beq.s   Offset_0x007D6A
                move.w  #$0200, D0
                moveq   #$00, D1
                move.w  D1, ($FFFFEEB4).w
                move.w  D1, ($FFFFEEB6).w
                bsr     Offset_0x007C84
                or.w    D0, D1
                bne.s   Offset_0x007D6A
                move.b  #$00, ($FFFFEEBC).w
                rts
Offset_0x007D90:
                tst.b   ($FFFFEEE8).w
                bne.s   Offset_0x007DAE
                cmpi.w  #$02C0, ($FFFFEEE4).w
                beq.s   Offset_0x007DC6
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   Offset_0x007DE4
                addq.w  #$01, ($FFFFEEE4).w
                bra.s   Offset_0x007DE4
Offset_0x007DAE:
                cmpi.w  #$0000, ($FFFFEEE4).w
                beq.s   Offset_0x007DC6
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   Offset_0x007DE4
                subq.w  #$01, ($FFFFEEE4).w
                bra.s   Offset_0x007DE4
Offset_0x007DC6:
                move.b  #$00, ($FFFFEEBD).w
                subq.w  #$01, ($FFFFEEE6).w
                bpl.s   Offset_0x007DE4
                move.w  #$0078, ($FFFFEEE6).w
                eori.b  #$01, ($FFFFEEE8).w
                move.b  #$01, ($FFFFEEBD).w
Offset_0x007DE4:
                cmpi.w  #$14C0, ($FFFFEE00).w
                bcs.s   Offset_0x007E0C
                cmpi.w  #$1B00, ($FFFFEE00).w
                bcc.s   Offset_0x007E28
                move.w  ($FFFFEEB0).w, ($FFFFEEB4).w
                move.w  ($FFFFEEB2).w, ($FFFFEEB6).w
                move.w  ($FFFFEE00).w, D0
                move.w  ($FFFFEE04).w, D1
                bra     Offset_0x007C84
Offset_0x007E0C:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                subq.b  #$02, ($FFFFEEDF).w
                rts
Offset_0x007E28:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                addq.b  #$02, ($FFFFEEDF).w
                rts
Offset_0x007E44:
                cmpi.w  #$1B00, ($FFFFEE00).w
                bcc.s   Offset_0x007E84
                move.b  #$01, ($FFFFEEBC).w
                move.l  ($FFFFEE00).w, ($FFFFEE08).w
                move.l  ($FFFFEE04).w, ($FFFFEE0C).w
                moveq   #$00, D0
                move.w  D0, ($FFFFEEB4).w
                move.w  D0, ($FFFFEEB6).w
                move.w  D0, ($FFFFEEE2).w
                move.w  #$02C0, ($FFFFEEE4).w
                subi.w  #$0100, ($FFFFEE0C).w
                move.w  #$0000, ($FFFFEEE6).w
                subq.b  #$02, ($FFFFEEDF).w
Offset_0x007E82:                
                rts
Offset_0x007E84:
                tst.b   ($FFFFEEBC).w
                beq.s   Offset_0x007E82
                move.w  #$0200, D0
                moveq   #$00, D1
                move.w  D1, ($FFFFEEB4).w
                move.w  D1, ($FFFFEEB6).w
                bsr     Offset_0x007C84
                or.w    D0, D1
                bne.s   Offset_0x007E82
                move.b  #$00, ($FFFFEEBC).w
                rts
Offset_0x007EA8:
                tst.b   ($FFFFEEE8).w
                bne.s   Offset_0x007EC6
                cmpi.w  #$0300, ($FFFFEEE4).w
                beq.s   Offset_0x007EDE
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   Offset_0x007EFC
                addq.w  #$01, ($FFFFEEE4).w
                bra.s   Offset_0x007EFC
Offset_0x007EC6:
                cmpi.w  #$0000, ($FFFFEEE4).w
                beq.s   Offset_0x007EDE
                move.w  ($FFFFFE04).w, D0
                andi.w  #$0003, D0
                bne.s   Offset_0x007EFC
                subq.w  #$01, ($FFFFEEE4).w
                bra.s   Offset_0x007EFC
Offset_0x007EDE:
                move.b  #$00, ($FFFFEEBD).w
                subq.w  #$01, ($FFFFEEE6).w
                bpl.s   Offset_0x007EFC
                move.w  #$0078, ($FFFFEEE6).w
                eori.b  #$01, ($FFFFEEE8).w
                move.b  #$01, ($FFFFEEBD).w
Offset_0x007EFC:
                cmpi.w  #$14C0, ($FFFFEE00).w
                bcs.s   Offset_0x007F24
                cmpi.w  #$1B00, ($FFFFEE00).w
                bcc.s   Offset_0x007F40
                move.w  ($FFFFEEB0).w, ($FFFFEEB4).w
                move.w  ($FFFFEEB2).w, ($FFFFEEB6).w
                move.w  ($FFFFEE00).w, D0
                move.w  ($FFFFEE04).w, D1
                bra     Offset_0x007C84
Offset_0x007F24:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                subq.b  #$06, ($FFFFEEDF).w
                rts
Offset_0x007F40:
                move.l  #$04000000, ($FFFFEE08).w
                moveq   #$00, D0
                move.l  D0, ($FFFFEE0C).w
                move.l  D0, ($FFFFEEE2).w
                move.b  D0, ($FFFFEEE8).w
                addq.b  #$02, ($FFFFEEDF).w
                rts
Offset_0x007F5C:
                cmpi.w  #$1B00, ($FFFFEE00).w
                bcc.s   Offset_0x007FA4
                move.b  #$01, ($FFFFEEBC).w
                move.l  ($FFFFEE00).w, ($FFFFEE08).w
                move.l  ($FFFFEE04).w, ($FFFFEE0C).w
                moveq   #$00, D0
                move.w  D0, ($FFFFEEB4).w
                move.w  D0, ($FFFFEEB6).w
                move.w  #$F980, ($FFFFEEE2).w
                addi.w  #$0480, ($FFFFEE08).w
                move.w  #$0300, ($FFFFEEE4).w
                subi.w  #$0100, ($FFFFEE0C).w
                move.w  #$0000, ($FFFFEEE6).w
                subq.b  #$02, ($FFFFEEDF).w
Offset_0x007FA2:                
                rts
Offset_0x007FA4:
                tst.b   ($FFFFEEBC).w
                beq.s   Offset_0x007FA2
                move.w  #$0200, D0
                moveq   #$00, D1
                move.w  D1, ($FFFFEEB4).w
                move.w  D1, ($FFFFEEB6).w
                bsr     Offset_0x007C84
                or.w    D0, D1
                bne.s   Offset_0x007FA2
                move.b  #$00, ($FFFFEEBC).w
                rts
Offset_0x007FC8:
                rts
Offset_0x007FCA:
                rts
Offset_0x007FCC:
                rts
Offset_0x007FCE:
                rts
DynResize_CNz: ; Offset_0x007FD0:
                rts
DynResize_CPz: ;Offset_0x007FD2:
                rts
DynResize_GCz: ;Offset_0x007FD4:
                rts
DynResize_NGHz: ;Offset_0x007FD6:
                rts
DynResize_DEz: ;Offset_0x007FD8:
                rts   
                nop                             ; Filler    
;===============================================================================                 
; Object 0x11 - Bridge
; [ Begin ] 
;===============================================================================                
Obj_0x11_Bridge:  ; Offset_0x007FDC:
                btst    #$06, $0001(A0)
                bne     Offset_0x007FF4
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x007FFC(PC, D0), D1
                jmp     Offset_0x007FFC(PC, D1)
Offset_0x007FF4:
                move.w  #$0180, D0
                bra     DisplaySprite_Param     ; Offset_0x00D3FE
Offset_0x007FFC:                
                dc.w    Offset_0x008004-Offset_0x007FFC
                dc.w    Offset_0x0080EA-Offset_0x007FFC
                dc.w    Offset_0x00817C-Offset_0x007FFC
                dc.w    Offset_0x008180-Offset_0x007FFC
Offset_0x008004:                
                addq.b  #$02, $0024(A0)
                move.l  #Bridge_Mappings, $0004(A0) ; Offset_0x0085E0
                move.w  #$43C6, $0002(A0)
                move.b  #$03, $0018(A0)
                cmpi.b  #$08, ($FFFFFE10).w
                bne.s   Offset_0x008036
                addq.b  #$04, $0024(A0)
                move.l  #Hpz_Bridge_Mappings, $0004(A0) ; Offset_0x008598
                move.w  #$6300, $0002(A0)
Offset_0x008036:
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$80, $0019(A0)
                move.w  $000C(A0), D2
                move.w  D2, $003C(A0)
                move.w  $0008(A0), D3
                lea     $0028(A0), A2
                moveq   #$00, D1
                move.b  (A2), D1
                move.w  D1, D0
                lsr.w   #$01, D0
                lsl.w   #$04, D0
                sub.w   D0, D3
                swap.w  D1
                move.w  #$0008, D1
                bsr.s   Offset_0x008098
                move.w  $0028(A1), D0
                subq.w  #$08, D0
                move.w  D0, $0008(A1)
                move.l  A1, $0030(A0)
                swap.w  D1
                subq.w  #$08, D1
                bls.s   Offset_0x008096
                move.w  D1, D4
                bsr.s   Offset_0x008098
                move.l  A1, $0034(A0)
                move.w  D4, D0
                add.w   D0, D0
                add.w   D4, D0
                move.w  $10(A1, D0), D0
                subq.w  #$08, D0
                move.w  D0, $0008(A1)
Offset_0x008096:
                bra.s   Offset_0x0080EA
Offset_0x008098:                
                bsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x0080E8
                move.b  $0000(A0), $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  $0001(A0), $0001(A1)
                bset    #$06, $0001(A1)
                move.b  #$40, $000E(A1)
                move.b  D1, $000F(A1)
                subq.b  #$01, D1
                lea     $0010(A1), A2
Offset_0x0080D8:                
                move.w  D3, (A2)+
                move.w  D2, (A2)+
                move.w  #$0000, (A2)+
                addi.w  #$0010, D3
                dbra    D1, Offset_0x0080D8
Offset_0x0080E8:
                rts  
Offset_0x0080EA:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   Offset_0x008100
                tst.b   $003E(A0)
                beq.s   Offset_0x00812C
                subq.b  #$04, $003E(A0)
                bra.s   Offset_0x008128
Offset_0x008100:
                andi.b  #$10, D0
                beq.s   Offset_0x00811C
                move.b  $003F(A0), D0
                sub.b   $003B(A0), D0
                beq.s   Offset_0x00811C
                bcc.s   Offset_0x008118
                addq.b  #$01, $003F(A0)
                bra.s   Offset_0x00811C
Offset_0x008118:
                subq.b  #$01, $003F(A0)
Offset_0x00811C:
                cmpi.b  #$40, $003E(A0)
                beq.s   Offset_0x008128
                addq.b  #$04, $003E(A0)
Offset_0x008128:
                bsr     Offset_0x008358
Offset_0x00812C:
                moveq   #$00, D1
                move.b  $0028(A0), D1
                lsl.w   #$03, D1
                move.w  D1, D2
                addq.w  #$08, D1
                add.w   D2, D2
                moveq   #$08, D3
                move.w  $0008(A0), D4
                bsr     Offset_0x0081E2
Offset_0x008144:                
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x00814C
                rts
Offset_0x00814C:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x008160
                rts
Offset_0x008160:
                move.l  $0030(A0), A1
                bsr     Offset_0x00D3B6
                cmpi.b  #$08, $0028(A0)
                bls.s   Offset_0x008178
                move.l  $0034(A0), A1
                bsr     Offset_0x00D3B6
Offset_0x008178:                
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x00817C:
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x008180:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   Offset_0x008196
                tst.b   $003E(A0)
                beq.s   Offset_0x0081C2
                subq.b  #$04, $003E(A0)
                bra.s   Offset_0x0081BE
Offset_0x008196:
                andi.b  #$10, D0
                beq.s   Offset_0x0081B2
                move.b  $003F(A0), D0
                sub.b   $003B(A0), D0
                beq.s   Offset_0x0081B2
                bcc.s   Offset_0x0081AE
                addq.b  #$01, $003F(A0)
                bra.s   Offset_0x0081B2
Offset_0x0081AE:
                subq.b  #$01, $003F(A0)
Offset_0x0081B2:
                cmpi.b  #$40, $003E(A0)
                beq.s   Offset_0x0081BE
                addq.b  #$04, $003E(A0)
Offset_0x0081BE:
                bsr     Offset_0x008358
Offset_0x0081C2:                
                moveq   #$00, D1
                move.b  $0028(A0), D1
                lsl.w   #$03, D1
                move.w  D1, D2
                addq.w  #$08, D1
                add.w   D2, D2
                moveq   #$08, D3
                move.w  $0008(A0), D4                
                bsr     Offset_0x0081E2
                bsr     Offset_0x008282
                bra     Offset_0x008144
Offset_0x0081E2:
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                moveq   #$3B, D5
                movem.l D1-D4, -(A7)                
                bsr.s   Offset_0x0081FC
                movem.l (A7)+, D1-D4
                lea     ($FFFFB000).w, A1
                subq.b  #$01, D6
                moveq   #$3F, D5
Offset_0x0081FC:
                btst    D6, $0022(A0)
                beq.s   Offset_0x008260
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00821C
                moveq   #$00, D0
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00821C
                cmp.w   D2, D0
                bcs.s   Offset_0x00822A
Offset_0x00821C:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
Offset_0x00822A:
                lsr.w   #$04, D0
                move.b  D0, $00(A0, D5)
                move.l  $0030(A0), A2
                cmpi.w  #$0008, D0
                bcs.s   Offset_0x008242
                move.l  $0034(A0), A2
                subi.w  #$0008, D0
Offset_0x008242:
                add.w   D0, D0
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                move.w  $12(A2, D0), D0
                subq.w  #$08, D0
                moveq   #$00, D1
                move.b  $0016(A1), D1
                sub.w   D1, D0
                move.w  D0, $000C(A1)
                moveq   #$00, D4
                rts
Offset_0x008260:
                move.w  D1, -(A7)
                bsr     Offset_0x00FA7A
                move.w  (A7)+, D1
                btst    D6, $0022(A0)
                beq.s   Offset_0x008280
                moveq   #$00, D0
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                lsr.w   #$04, D0
                move.b  D0, $00(A0, D5)
Offset_0x008280:
                rts          

Offset_0x008282:
                moveq   #$00, D0
                tst.w   ($FFFFB010).w
                bne.s   Offset_0x008294
                move.b  ($FFFFFE0F).w, D0
                andi.w  #$001C, D0
                lsr.w   #$01, D0
Offset_0x008294:                
                moveq   #$00, D2
                move.b  Offset_0x0082C1(PC, D0), D2
                swap.w  D2
                move.b  Offset_0x0082C0(PC, D0), D2
                moveq   #$00, D0
                tst.w   ($FFFFB050).w
                bne.s   Offset_0x0082B2
                move.b  ($FFFFFE0F).w, D0
                andi.w  #$001C, D0
                lsr.w   #$01, D0
Offset_0x0082B2:                
                moveq   #$00, D6
                move.b  Offset_0x0082C1(PC, D0), D6
                swap.w  D6
                move.b  Offset_0x0082C0(PC, D0), D6
                bra.s   Offset_0x0082D0
Offset_0x0082C0:
                dc.b    $01
Offset_0x0082C1:
                dc.b    $02, $01, $02, $01, $02, $01, $02, $00, $01, $00, $00, $00, $00, $00, $01
Offset_0x0082D0:
                moveq   #$FFFFFFFE, D3
                moveq   #$FFFFFFFE, D4
                move.b  $0022(A0), D0
                andi.b  #$08, D0
                beq.s   Offset_0x0082E2
                move.b  $003F(A0), D3
Offset_0x0082E2:                
                move.b  $0022(A0), D0
                andi.b  #$10, D0
                beq.s   Offset_0x0082F0
                move.b  $003B(A0), D4
Offset_0x0082F0:                
                move.l  $0030(A0), A1
                lea     $0045(A1), A2
                lea     $0015(A1), A1
                moveq   #$00, D1
                move.b  $0028(A0), D1
                subq.b  #$01, D1
                moveq   #$00, D5
Offset_0x008306:
                moveq   #$00, D0
                subq.w  #$01, D3
                cmp.b   D3, D5
                bne.s   Offset_0x008310
                move.w  D2, D0
Offset_0x008310:
                addq.w  #$02, D3
                cmp.b   D3, D5
                bne.s   Offset_0x008318
                move.w  D2, D0
Offset_0x008318:
                subq.w  #$01, D3
                subq.w  #$01, D4
                cmp.b   D4, D5
                bne.s   Offset_0x008322
                move.w  D6, D0
Offset_0x008322:
                addq.w  #$02, D4
                cmp.b   D4, D5
                bne.s   Offset_0x00832A
                move.w  D6, D0
Offset_0x00832A:
                subq.w  #$01, D4
                cmp.b   D3, D5
                bne.s   Offset_0x008336
                swap.w  D2
                move.w  D2, D0
                swap.w  D2
Offset_0x008336:
                cmp.b   D4, D5
                bne.s   Offset_0x008340
                swap.w  D6
                move.w  D6, D0
                swap.w  D6
Offset_0x008340:
                move.b  D0, (A1)
                addq.w  #$01, D5
                addq.w  #$06, A1
                cmpa.w  A2, A1
                bne.s   Offset_0x008352
                move.l  $0034(A0), A1
                lea     $0015(A1), A1
Offset_0x008352:
                dbra    D1, Offset_0x008306
                rts

Offset_0x008358:
                move.b  $003E(A0), D0
                bsr     CalcSine                ; Offset_0x00320A
                move.w  D0, D4
                lea     (Offset_0x008498), A4
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsl.w   #$04, D0
                moveq   #$00, D3
                move.b  $003F(A0), D3
                move.w  D3, D2
                add.w   D0, D3
                moveq   #$00, D5
                lea     (Offset_0x008408-$80), A5
                move.b  $00(A5, D3), D5
                andi.w  #$000F, D3
                lsl.w   #$04, D3
                lea     $00(A4, D3), A3
                move.l  $0030(A0), A1
                lea     $0042(A1), A2
                lea     $0012(A1), A1
Offset_0x00839C:
                moveq   #$00, D0
                move.b  (A3)+, D0
                addq.w  #$01, D0
                mulu.w  D5, D0
                mulu.w  D4, D0
                swap.w  D0
                add.w   $003C(A0), D0
                move.w  D0, (A1)
                addq.w  #$06, A1
                cmpa.w  A2, A1
                bne.s   Offset_0x0083BC
                move.l  $0034(A0), A1
                lea     $0012(A1), A1
Offset_0x0083BC:
                dbra    D2, Offset_0x00839C
                moveq   #$00, D0
                move.b  $0028(A0), D0
                moveq   #$00, D3
                move.b  $003F(A0), D3
                addq.b  #$01, D3
                sub.b   D0, D3
                neg.b   D3
                bmi.s   Offset_0x008406
                move.w  D3, D2
                lsl.w   #$04, D3
                lea     $00(A4, D3), A3
                adda.w  D2, A3
                subq.w  #$01, D2
                bcs.s   Offset_0x008406
Offset_0x0083E2:
                moveq   #$00, D0
                move.b  -(A3), D0
                addq.w  #$01, D0
                mulu.w  D5, D0
                mulu.w  D4, D0
                swap.w  D0
                add.w   $003C(A0), D0
                move.w  D0, (A1)
                addq.w  #$06, A1
                cmpa.w  A2, A1
                bne.s   Offset_0x008402
                move.l  $0034(A0), A1
                lea     $0012(A1), A1
Offset_0x008402:
                dbra    D2, Offset_0x0083E2
Offset_0x008406:
                rts
Offset_0x008408:   
                dc.b    $02, $04, $06, $08, $08, $06, $04, $02, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $08, $06, $04, $02, $00, $00, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0A, $08, $06, $04, $02, $00, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0A, $08, $06, $04, $02, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0C, $0A, $08, $06, $04, $02, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $0C, $0A, $08, $06, $04, $02, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $0E, $0C, $0A, $08, $06, $04, $02, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $10, $0E, $0C, $0A, $08, $06, $04, $02, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $10, $10, $0E, $0C, $0A, $08, $06, $04, $02              
Offset_0x008498:
                dc.b    $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $B5, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $7E, $DB, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $61, $B5, $EC, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $4A, $93, $CD, $F3, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $3E, $7E, $B0, $DB, $F6, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $38, $6D, $9D, $C5, $E4, $F8, $FF, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $31, $61, $8E, $B5, $D4, $EC, $FB, $FF, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $2B, $56, $7E, $A2, $C1, $DB, $EE, $FB, $FF, $00, $00, $00, $00, $00, $00, $00
                dc.b    $25, $4A, $73, $93, $B0, $CD, $E1, $F3, $FC, $FF, $00, $00, $00, $00, $00, $00
                dc.b    $1F, $44, $67, $88, $A7, $BD, $D4, $E7, $F4, $FD, $FF, $00, $00, $00, $00, $00
                dc.b    $1F, $3E, $5C, $7E, $98, $B0, $C9, $DB, $EA, $F6, $FD, $FF, $00, $00, $00, $00
                dc.b    $19, $38, $56, $73, $8E, $A7, $BD, $D1, $E1, $EE, $F8, $FE, $FF, $00, $00, $00
                dc.b    $19, $38, $50, $6D, $83, $9D, $B0, $C5, $D8, $E4, $F1, $F8, $FE, $FF, $00, $00
                dc.b    $19, $31, $4A, $67, $7E, $93, $A7, $BD, $CD, $DB, $E7, $F3, $F9, $FE, $FF, $00
                dc.b    $19, $31, $4A, $61, $78, $8E, $A2, $B5, $C5, $D4, $E1, $EC, $F4, $FB, $FE, $FF
Hpz_Bridge_Mappings: ; Offset_0x008598:
                dc.w    Hpz_Bridge_Map_01-Hpz_Bridge_Mappings
                dc.w    Hpz_Bridge_Map_02-Hpz_Bridge_Mappings
                dc.w    Hpz_Bridge_Map_03-Hpz_Bridge_Mappings
                dc.w    Hpz_Bridge_Map_04-Hpz_Bridge_Mappings
                dc.w    Hpz_Bridge_Map_05-Hpz_Bridge_Mappings
                dc.w    Hpz_Bridge_Map_06-Hpz_Bridge_Mappings
Hpz_Bridge_Map_01: ; Offset_0x0085A4:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Hpz_Bridge_Map_02: ; Offset_0x0085AE:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
Hpz_Bridge_Map_03: ; Offset_0x0085B8:
                dc.w    $0001
                dc.l    $F8050008, $0004FFF8
Hpz_Bridge_Map_04: ; Offset_0x0085C2:
                dc.w    $0001
                dc.l    $F402000C, $0006FFFC
Hpz_Bridge_Map_05: ; Offset_0x0085CC:
                dc.w    $0001
                dc.l    $F402000F, $0007FFFC
Hpz_Bridge_Map_06: ; Offset_0x0085D6:
                dc.w    $0001
                dc.l    $F4020012, $0009FFFC             
Bridge_Mappings: ; Offset_0x0085E0:
                dc.w    Bridge_Map_01-Bridge_Mappings
                dc.w    Bridge_Map_02-Bridge_Mappings
Bridge_Map_01: ; Offset_0x0085E4:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
Bridge_Map_02: ;Offset_0x0085EE:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8                
;===============================================================================           
; Object 0x11 - Bridge 
; [ End ]
;=============================================================================== 

;=============================================================================== 
; Object 0x15 - Swing Platforms - Dust Hill / Oil Ocean
; [ Begin ]
;===============================================================================   
Obj_0x15_Swing_Platform: ; Offset_0x0085F8:
                btst    #$06, $0001(A0)
                bne     Offset_0x008610
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x008618(PC, D0), D1
                jmp     Offset_0x008618(PC, D1)
Offset_0x008610:
                move.w  #$0200, D0
                bra     DisplaySprite_Param     ; Offset_0x00D3FE
Offset_0x008618:
                dc.w    Offset_0x008626-Offset_0x008618
                dc.w    Offset_0x008764-Offset_0x008618
                dc.w    Offset_0x00892A-Offset_0x008618
                dc.w    Offset_0x00892E-Offset_0x008618
                dc.w    Offset_0x0089E8-Offset_0x008618
                dc.w    Offset_0x0089F0-Offset_0x008618
                dc.w    Offset_0x008A56-Offset_0x008618
Offset_0x008626:
                addq.b  #$02, $0024(A0)
                move.l  #Swing_Platforms_Mappings, $0004(A0) ; Offset_0x008AD8
                move.w  #$43E3, $0002(A0)
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$20, $0019(A0)
                move.b  #$10, $0016(A0)
                move.w  $000C(A0), $0038(A0)
                move.w  $0008(A0), $003A(A0)
                cmpi.b  #$0B, ($FFFFFE10).w
                bne.s   Offset_0x00867E
                move.l  #Dhz_Swing_Platforms_Mappings, $0004(A0) ; Offset_0x008B46 
                move.w  #$0000, $0002(A0)                       
                move.b  #$18, $0019(A0)
                move.b  #$08, $0016(A0)
Offset_0x00867E:
                cmpi.b  #$0F, ($FFFFFE10).w
                bne.s   Offset_0x0086A0
                move.l  #Nghz_Swing_Platforms_Mappings, $0004(A0) ; Offset_0x008B0E
                move.w  #$0000, $0002(A0)
                move.b  #$20, $0019(A0)
                move.b  #$08, $0016(A0)
Offset_0x0086A0:
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                moveq   #$00, D1
                move.b  $0028(A0), D1
                bpl.s   Offset_0x0086B0
                addq.b  #$04, $0024(A0)
Offset_0x0086B0:
                andi.w  #$000F, D1
                move.w  D1, D2
                lsl.w   #$04, D2
                addi.b  #$08, D2
                move.b  D2, $003C(A0)
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                bsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x008738
                move.b  $0000(A0), $0000(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  #$04, $0001(A1)
                bset    #$06, $0001(A1)
                move.b  #$48, $000E(A1)
                move.b  D1, $000F(A1)
                subq.b  #$01, D1
                lea     $0010(A1), A2
Offset_0x0086FC:                
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                move.w  #$0001, (A2)+
                addi.w  #$0010, D3
                dbra    D1, Offset_0x0086FC
                move.b  #$02, $0015(A1)
                move.w  D2, $0008(A1)
                move.w  D3, $000C(A1)
                move.b  #$01, $000B(A1)
                move.l  A1, $0030(A0)
                addi.w  #$0008, D3
                move.w  D3, $000C(A0)
                move.b  #$50, $0014(A1)
                bset    #$04, $0001(A1)
Offset_0x008738:
                move.w  #$8000, $0026(A0)
                move.w  #$0000, $003E(A0)
                move.b  $0028(A0), D1
                andi.w  #$0070, D1
                move.b  D1, $0028(A0)
                cmpi.b  #$40, D1
                bne.s   Offset_0x008764
                move.l  #Dhz_Swing_Platforms_Mappings_2, $0004(A0) ; Offset_0x008B7A
                move.b  #$A7, $0020(A0)
Offset_0x008764:
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x008784
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$00, D3
                move.b  $0016(A0), D3
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     Offset_0x00FA28
                bra     Offset_0x0088FC
Offset_0x008784:
                move.b  ($FFFFFE78).w, D0
                move.b  $0028(A0), D1
                beq.s   Offset_0x0087C4
                cmpi.b  #$10, D1
                bne.s   Offset_0x00879E
                cmpi.b  #$40, D0
                bcc.s   Offset_0x0087C4
                moveq   #$40, D0
                bra.s   Offset_0x0087C4
Offset_0x00879E:
                cmpi.b  #$20, D1
                bne.s   Offset_0x0087AA
                moveq   #$40, D0
                bra     Offset_0x00885C
Offset_0x0087AA:
                cmpi.b  #$30, D1
                bne.s   Offset_0x0087BA
                cmpi.b  #$40, D0
                bcs.s   Offset_0x0087C4
                moveq   #$40, D0
                bra.s   Offset_0x0087C4
Offset_0x0087BA:
                cmpi.b  #$40, D1
                bne.s   Offset_0x0087C4
                bsr     Offset_0x00885E
Offset_0x0087C4:
                move.w  #$0080, D1
                btst    #$00, $0022(A0)
                beq.s   Offset_0x0087D4
                neg.w   D0
                add.w   D1, D0
Offset_0x0087D4:
                bsr     CalcSine                ; Offset_0x00320A
                move.w  $0038(A0), D2
                move.w  $003A(A0), D3
                moveq   #$00, D4
                move.b  $003C(A0), D4
                move.l  D4, D5
                muls.w  D0, D4
                asr.l   #$08, D4
                muls.w  D1, D5
                asr.l   #$08, D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D4, $000C(A0)
                move.w  D5, $0008(A0)
                moveq   #$00, D6
                move.l  $0030(A0), A1
                move.b  $000F(A1), D6
                subq.w  #$01, D6
                bcs.s   Offset_0x00885C
                asl.w   #$04, D0
                ext.l   D0
                asl.l   #$08, D0
                asl.w   #$04, D1
                ext.l   D1
                asl.l   #$08, D1
                moveq   #$00, D4
                moveq   #$00, D5
                lea     $0010(A1), A2
Offset_0x00881E:                
                movem.l D4/D5, -(A7)
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, (A2)+
                move.w  D4, (A2)+
                movem.l (A7)+, D4/D5
                add.l   D0, D4
                add.l   D1, D5
                addq.w  #$02, A2
                dbra    D6, Offset_0x00881E
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  $0028(A1), D0
                move.w  $002A(A1), D1
                move.w  D5, $0028(A1)
                move.w  D4, $002A(A1)
                move.w  D0, $0008(A1)
                move.w  D1, $000C(A1)
Offset_0x00885C:
                rts
Offset_0x00885E:
                tst.w   $0036(A0)
                beq.s   Offset_0x00886C
                subq.w  #$01, $0036(A0)
                bra     Offset_0x0088F6
Offset_0x00886C:
                tst.b   $0034(A0)
                bne.s   Offset_0x008892
                move.w  ($FFFFB008).w, D0
                sub.w   $003A(A0), D0
                addi.w  #$0020, D0
                cmpi.w  #$0040, D0
                bcc.s   Offset_0x0088F6
                tst.w   ($FFFFFE08).w
                bne     Offset_0x0088F6
                move.b  #$01, $0034(A0)
Offset_0x008892:
                tst.b   $003D(A0)
                beq.s   Offset_0x0088C8
                move.w  $003E(A0), D0
                addi.w  #$0008, D0
                move.w  D0, $003E(A0)
                add.w   D0, $0026(A0)
                cmpi.w  #$0200, D0
                bne.s   Offset_0x0088F6
                move.w  #$0000, $003E(A0)
                move.w  #$8000, $0026(A0)
                move.b  #$00, $003D(A0)
                move.w  #$003C, $0036(A0)
                bra.s   Offset_0x0088F6
Offset_0x0088C8:
                move.w  $003E(A0), D0
                subi.w  #$0008, D0
                move.w  D0, $003E(A0)
                add.w   D0, $0026(A0)
                cmpi.w  #$FE00, D0
                bne.s   Offset_0x0088F6
                move.w  #$0000, $003E(A0)
                move.w  #$4000, $0026(A0)
                move.b  #$01, $003D(A0)
                move.w  #$003C, $0036(A0)
Offset_0x0088F6:
                move.b  $0026(A0), D0
                rts
Offset_0x0088FC:
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x008906
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x008906:
                move.w  $003A(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Offset_0x00891E
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00891E:
                move.l  $0030(A0), A1
                bsr     Offset_0x00D3B6
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x00892A:
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00892E:
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x008784
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$00, D3
                move.b  $0016(A0), D3
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     Offset_0x00FA28
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq     Offset_0x0089E4
                tst.b   ($FFFFFE78).w
                bne     Offset_0x0089E4
                bsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x0089D4
                moveq   #$00, D0
                move.w  #$000F, D1
Offset_0x00896A:                
                move.l  $00(A0, D0), $00(A1, D0)
                addq.w  #$04, D0
                dbra    D1, Offset_0x00896A
                move.b  #$0A, $0024(A1)
                cmpi.b  #$0F, ($FFFFFE10).w
                bne.s   Offset_0x008988
                addq.b  #$02, $0024(A1)
Offset_0x008988:
                move.w  #$0200, $0010(A1)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x00899A
                neg.w   $0010(A1)
Offset_0x00899A:
                bset    #$01, $0022(A1)
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.w  A1, D1
                subi.w  #$B000, D1
                lsr.w   #$06, D1
                andi.w  #$007F, D1
                lea     ($FFFFB000).w, A1
                cmp.b   $003D(A1), D0
                bne.s   Offset_0x0089C6
                move.b  D1, $003D(A1)
Offset_0x0089C6:
                lea     ($FFFFB040).w, A1
                cmp.b   $003D(A1), D0
                bne.s   Offset_0x0089D4
                move.b  D1, $003D(A1)
Offset_0x0089D4:
                move.b  #$03, $001A(A0)
                addq.b  #$02, $0024(A0)
                andi.b  #$E7, $0022(A0)
Offset_0x0089E4:
                bra     Offset_0x0088FC
Offset_0x0089E8:
                bsr     Offset_0x008784
                bra     Offset_0x0088FC
Offset_0x0089F0:
                move.w  $0008(A0), -(A7)
                btst    #$01, $0022(A0)
                beq.s   Offset_0x008A2E
                bsr     SpeedToPos              ; Offset_0x00D27A
                addi.w  #$0018, $0012(A0)
                cmpi.w  #$0720, $000C(A0)
                bcs.s   Offset_0x008A3E
                move.w  #$0720, $000C(A0)
                bclr    #$01, $0022(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0012(A0)
                move.w  $000C(A0), $0038(A0)
                bra.s   Offset_0x008A3E
Offset_0x008A2E:
                moveq   #$00, D0
                move.b  ($FFFFFE74).w, D0
                lsr.w   #$01, D0
                add.w   $0038(A0), D0
                move.w  D0, $000C(A0)
Offset_0x008A3E:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$00, D3
                move.b  $0016(A0), D3
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     Offset_0x00FA28
                bra     MarkObjGone             ; Offset_0x00D2A0
Offset_0x008A56:
                move.w  $0008(A0), -(A7)
                bsr     SpeedToPos              ; Offset_0x00D27A
                btst    #$01, $0022(A0)
                beq.s   Offset_0x008A92
                addi.w  #$0018, $0012(A0)
                move.w  ($FFFFF648).w, D0
                cmp.w   $000C(A0), D0
                bhi.s   Offset_0x008AC0
                move.w  D0, $000C(A0)
                move.w  D0, $0038(A0)
                bclr    #$01, $0022(A0)
                move.w  #$0100, $0010(A0)
                move.w  #$0000, $0012(A0)
                bra.s   Offset_0x008AC0
Offset_0x008A92:
                moveq   #$00, D0
                move.b  ($FFFFFE74).w, D0
                lsr.w   #$01, D0
                add.w   $0038(A0), D0
                move.w  D0, $000C(A0)
                tst.w   $0010(A0)
                beq.s   Offset_0x008AC0
                moveq   #$00, D3
                move.b  $0019(A0), D3
                bsr     Offset_0x008B94
                tst.w   D1
                bpl.s   Offset_0x008AC0
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
Offset_0x008AC0:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$00, D3
                move.b  $0016(A0), D3
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     Offset_0x00FA28
                bra     MarkObjGone             ; Offset_0x00D2A0
Swing_Platforms_Mappings: ; Offset_0x008AD8:
                dc.w    Swing_Platforms_Map_01-Swing_Platforms_Mappings
                dc.w    Swing_Platforms_Map_02-Swing_Platforms_Mappings
                dc.w    Swing_Platforms_Map_02-Swing_Platforms_Mappings
                dc.w    Swing_Platforms_Map_Null-Swing_Platforms_Mappings
Swing_Platforms_Map_01: ; Offset_0x008AE0:
                dc.w    $0004
                dc.l    $F00D2004, $2002FFE0, $F00D200C, $20060000
                dc.l    $000D2014, $200AFFE0, $000D2814, $280A0000
Swing_Platforms_Map_02: ; Offset_0x008B02:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Swing_Platforms_Map_Null: ; Offset_0x008B0C:
                dc.w    $0000
Nghz_Swing_Platforms_Mappings: ; Offset_0x008B0E:
                dc.w    Nghz_Swing_Platforms_Map_01-Nghz_Swing_Platforms_Mappings
                dc.w    Nghz_Swing_Platforms_Map_02-Nghz_Swing_Platforms_Mappings
                dc.w    Nghz_Swing_Platforms_Map_03-Nghz_Swing_Platforms_Mappings
                dc.w    Nghz_Swing_Platforms_Map_Null-Nghz_Swing_Platforms_Mappings
Nghz_Swing_Platforms_Map_01: ; Offset_0x008B16:
                dc.w    $0002
                dc.l    $F80D6055, $602AFFE0, $F80D6055, $602A0000
Nghz_Swing_Platforms_Map_02: ; Offset_0x008B28:
                dc.w    $0001
                dc.l    $F8052051, $2028FFF8
Nghz_Swing_Platforms_Map_03: ; Offset_0x008B32:
                dc.w    $0002
                dc.l    $F00E4045, $4022FFF0, $F8052051, $2028FFF8
Nghz_Swing_Platforms_Map_Null: ; Offset_0x008B44:
                dc.w    $0000 
Dhz_Swing_Platforms_Mappings: ; Offset_0x008B46:
                dc.w    Dhz_Swing_Platforms_Map_01-Dhz_Swing_Platforms_Mappings
                dc.w    Dhz_Swing_Platforms_Map_02-Dhz_Swing_Platforms_Mappings
                dc.w    Dhz_Swing_Platforms_Map_03-Dhz_Swing_Platforms_Mappings
Dhz_Swing_Platforms_Map_01: ; Offset_0x008B4C:
                dc.w    $0002
                dc.l    $F8096060, $6030FFE8, $F8096860, $68300000
Dhz_Swing_Platforms_Map_02: ; Offset_0x008B5E:
                dc.w    $0001
                dc.l    $F8056066, $6033FFF8
Dhz_Swing_Platforms_Map_03: ; Offset_0x008B68:
                dc.w    $0002
                dc.l    $E805406A, $4035FFF4, $F80B406E, $4037FFF4   
Dhz_Swing_Platforms_Mappings_2: ; Offset_0x008B7A:
                dc.w    Dhz_Swing_Platforms_Map_04-Dhz_Swing_Platforms_Mappings_2
                dc.w    Dhz_Swing_Platforms_Map_02-Dhz_Swing_Platforms_Mappings_2
                dc.w    Dhz_Swing_Platforms_Map_03-Dhz_Swing_Platforms_Mappings_2
Dhz_Swing_Platforms_Map_04: ; Offset_0x008B80:
                dc.w    $0002
                dc.l    $F80D6058, $602CFFE0, $F80D6858, $682C0000                                          
;=============================================================================== 
; Object 0x15 - Swing Platforms - Dust Hill / Oil Ocean
; [ End ]
;===============================================================================   
                nop                             ; Filler  
Offset_0x008B94:
                jmp     ObjHitWallRight         ; (Offset_0x01399E)    
                dc.w    $0000                   ; Filler 
;=============================================================================== 
; Object 0x17
; [ Begin ]
;===============================================================================                  
Obj_0x17: ; Offset_0x008B9C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x008BAA(PC, D0), D1
                jmp     Offset_0x008BAA(PC, D1)
Offset_0x008BAA:                
                dc.w    Offset_0x008BB0-Offset_0x008BAA
                dc.w    Offset_0x008C74-Offset_0x008BAA
                dc.w    Offset_0x008CD6-Offset_0x008BAA
Offset_0x008BB0:
                addq.b  #$02, $0024(A0)
                move.l  #Offset_0x008CDE, $0004(A0)
                move.w  #$4398, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$08, $0019(A0)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                move.b  $0000(A0), D4
                lea     $0028(A0), A2
                moveq   #$00, D1
                move.b  (A2), D1
                move.b  #$00, (A2)+
                move.w  D1, D0
                lsr.w   #$01, D0
                lsl.w   #$04, D0
                sub.w   D0, D3
                subq.b  #$02, D1
                bcs.s   Offset_0x008C74
                moveq   #$00, D6
Offset_0x008BFE:                
                bsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x008C74
                addq.b  #$01, $0028(A0)
                move.w  A1, D5
                subi.w  #$B000, D5
                lsr.w   #$06, D5
                andi.w  #$007F, D5
                move.b  D5, (A2)+
                move.b  #$04, $0024(A1)
                move.b  D4, $0000(A1)
                move.w  D2, $000C(A1)
                move.w  D3, $0008(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  #$4398, $0002(A1)
                bsr     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
                move.b  #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$08, $0019(A1)
                move.b  D6, $003E(A1)
                addq.b  #$01, D6
                andi.b  #$07, D6
                addi.w  #$0010, D3
                cmp.w   $0008(A0), D3
                bne.s   Offset_0x008C70
                move.b  D6, $003E(A0)
                addq.b  #$01, D6
                andi.b  #$07, D6
                addi.w  #$0010, D3
                addq.b  #$01, $0028(A0)
Offset_0x008C70:
                dbra    D1, Offset_0x008BFE
Offset_0x008C74:
                bsr     Offset_0x008CB6
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Offset_0x008C90
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x008C90:
                moveq   #$00, D2
                lea     $0028(A0), A2
                move.b  (A2)+, D2
                subq.b  #$02, D2
                bcs.s   Offset_0x008CB2
Offset_0x008C9C:                
                moveq   #$00, D0             
                move.b  (A2)+, D0
                lsl.w   #$06, D0
                addi.l  #$FFFFB000, D0
                move.l  D0, A1
                bsr     Offset_0x00D3B6
                dbra    D2, Offset_0x008C9C
Offset_0x008CB2:
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x008CB6:
                move.b  ($FFFFFEC1).w, D0
                move.b  #$00, $0020(A0)
                add.b   $003E(A0), D0
                andi.b  #$07, D0
                move.b  D0, $001A(A0)
                bne.s   Offset_0x008CD4
                move.b  #$84, $0020(A0)
Offset_0x008CD4:
                rts
Offset_0x008CD6:
                bsr     Offset_0x008CB6
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x008CDE:
                dc.w    Offset_0x008CEE-Offset_0x008CDE
                dc.w    Offset_0x008CF8-Offset_0x008CDE
                dc.w    Offset_0x008D02-Offset_0x008CDE
                dc.w    Offset_0x008D0C-Offset_0x008CDE
                dc.w    Offset_0x008D16-Offset_0x008CDE
                dc.w    Offset_0x008D20-Offset_0x008CDE
                dc.w    Offset_0x008D34-Offset_0x008CDE
                dc.w    Offset_0x008D2A-Offset_0x008CDE
Offset_0x008CEE:
                dc.w    $0001
                dc.l    $F0010000, $0000FFFC
Offset_0x008CF8:
                dc.w    $0001
                dc.l    $F5050002, $0001FFF8
Offset_0x008D02:
                dc.w    $0001
                dc.l    $F8050006, $0003FFF8
Offset_0x008D0C:
                dc.w    $0001
                dc.l    $FB05000A, $0005FFF8
Offset_0x008D16:
                dc.w    $0001
                dc.l    $0001000E, $0007FFFC
Offset_0x008D20:
                dc.w    $0001
                dc.l    $04000010, $0008FFFD
Offset_0x008D2A:
                dc.w    $0001
                dc.l    $F4000011, $0008FFFD
Offset_0x008D34:
                dc.w    $0000           
;=============================================================================== 
; Object 0x17
; [ End ]
;===============================================================================                
                nop                             ; Filler
;=============================================================================== 
; Object 0x18 - Platforms 
; [ Begin ]
;===============================================================================   
Obj_0x18_Platforms: ; Offset_0x008D38:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x008D46(PC, D0), D1
                jmp     Offset_0x008D46(PC, D1)                 
Offset_0x008D46:
                dc.w    Offset_0x008D5A-Offset_0x008D46
                dc.w    Offset_0x008DF6-Offset_0x008D46
                dc.w    Offset_0x008E5C-Offset_0x008D46
                dc.w    Offset_0x008E34-Offset_0x008D46
                dc.w    Offset_0x008E60-Offset_0x008D46
Offset_0x008D50:
                dc.w    $2000, $2001, $2002, $4003, $3004   
Offset_0x008D5A: 
                addq.b  #$02, $0024(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                lea     Offset_0x008D50(PC, D0), A2
                move.b  (A2)+, $0019(A0)
                move.b  (A2)+, $001A(A0)
                move.l  #Ghz_Platform_Mappings, $0004(A0) ; Offset_0x009078
                move.w  #$4000, $0002(A0)
                cmpi.b  #$0F, ($FFFFFE10).w
                bne.s   Offset_0x008D9A
                move.l  #Nghz_Platform_Mappings, $0004(A0) ; Offset_0x0090D0
                move.w  #$4000, $0002(A0)
Offset_0x008D9A:
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.w  $000C(A0), $002C(A0)
                move.w  $000C(A0), $0034(A0)
                move.w  $0008(A0), $0032(A0)
                move.w  #$0080, $0026(A0)
                tst.b   $0028(A0)
                bpl.s   Offset_0x008DF0
                addq.b  #$06, $0024(A0)
                andi.b  #$0F, $0028(A0)
                move.b  #$30, $0016(A0)
                cmpi.b  #$0F, ($FFFFFE10).w
                bne.s   Offset_0x008DE6
                move.b  #$28, $0016(A0)
Offset_0x008DE6:
                bset    #$04, $0001(A0)
                bra     Offset_0x008E60                 
Offset_0x008DF0:
                andi.b  #$0F, $0028(A0)
Offset_0x008DF6:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   Offset_0x008E0C
                tst.b   $0038(A0)
                beq.s   Offset_0x008E18
                subq.b  #$04, $0038(A0)
                bra.s   Offset_0x008E18
Offset_0x008E0C:
                cmpi.b  #$40, $0038(A0)
                beq.s   Offset_0x008E18
                addq.b  #$04, $0038(A0)
Offset_0x008E18:
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x008EC4
                bsr     Offset_0x008EAA
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$08, D3
                move.w  (A7)+, D4
                bsr     Offset_0x00F984
                bra.s   Offset_0x008E3C
Offset_0x008E34:
                bsr     Offset_0x008EC4
                bsr     Offset_0x008EAA
Offset_0x008E3C:
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x008E46
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x008E46:
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x008E5C
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x008E5C:
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x008E60:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   Offset_0x008E76
                tst.b   $0038(A0)
                beq.s   Offset_0x008E82
                subq.b  #$04, $0038(A0)
                bra.s   Offset_0x008E82
Offset_0x008E76:
                cmpi.b  #$40, $0038(A0)
                beq.s   Offset_0x008E82
                addq.b  #$04, $0038(A0)
Offset_0x008E82:
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x008EC4
                bsr     Offset_0x008EAA
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     SolidObject             ; Offset_0x00F4A0
                bra.s   Offset_0x008E3C
Offset_0x008EAA:
                move.b  $0038(A0), D0
                bsr     CalcSine                ; Offset_0x00320A
                move.w  #$0400, D1
                muls.w  D1, D0
                swap.w  D0
                add.w   $002C(A0), D0
                move.w  D0, $000C(A0)
                rts
Offset_0x008EC4:
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                add.w   D0, D0
                move.w  Offset_0x008ED8(PC, D0), D1
                jmp     Offset_0x008ED8(PC, D1)
Offset_0x008ED8:
                dc.w    Offset_0x008EF4-Offset_0x008ED8
                dc.w    Offset_0x008F06-Offset_0x008ED8
                dc.w    Offset_0x008F4C-Offset_0x008ED8
                dc.w    Offset_0x008F64-Offset_0x008ED8
                dc.w    Offset_0x008F8C-Offset_0x008ED8
                dc.w    Offset_0x008EF6-Offset_0x008ED8
                dc.w    Offset_0x008F3C-Offset_0x008ED8
                dc.w    Offset_0x008FFA-Offset_0x008ED8
                dc.w    Offset_0x009026-Offset_0x008ED8
                dc.w    Offset_0x008EF4-Offset_0x008ED8
                dc.w    Offset_0x00903E-Offset_0x008ED8
                dc.w    Offset_0x009058-Offset_0x008ED8
                dc.w    Offset_0x008F2E-Offset_0x008ED8
                dc.w    Offset_0x008F1E-Offset_0x008ED8
Offset_0x008EF4:               
                rts
Offset_0x008EF6:   
                move.w  $0032(A0), D0
                move.b  $0026(A0), D1
                neg.b   D1
                addi.b  #$40, D1
                bra.s   Offset_0x008F12
Offset_0x008F06:
                move.w  $0032(A0), D0
                move.b  $0026(A0), D1
                subi.b  #$40, D1
Offset_0x008F12:
                ext.w   D1
                add.w   D1, D0
                move.w  D0, $0008(A0)
                bra     Offset_0x009070
Offset_0x008F1E:
                move.w  $0034(A0), D0
                move.b  ($FFFFFE6C).w, D1
                neg.b   D1
                addi.b  #$30, D1
                bra.s   Offset_0x008F58
Offset_0x008F2E:
                move.w  $0034(A0), D0
                move.b  ($FFFFFE6C).w, D1
                subi.b  #$30, D1
                bra.s   Offset_0x008F58
Offset_0x008F3C:
                move.w  $0034(A0), D0
                move.b  $0026(A0), D1
                neg.b   D1
                addi.b  #$40, D1
                bra.s   Offset_0x008F58
Offset_0x008F4C:
                move.w  $0034(A0), D0
                move.b  $0026(A0), D1
                subi.b  #$40, D1
Offset_0x008F58:
                ext.w   D1
                add.w   D1, D0
                move.w  D0, $002C(A0)
                bra     Offset_0x009070
Offset_0x008F64:
                tst.w   $003A(A0)
                bne.s   Offset_0x008F7A
                btst    #$03, $0022(A0)
                beq.s   Offset_0x008F78
                move.w  #$001E, $003A(A0)
Offset_0x008F78:
                rts
Offset_0x008F7A:
                subq.w  #$01, $003A(A0)
                bne.s   Offset_0x008F78
                move.w  #$0020, $003A(A0)
                addq.b  #$01, $0028(A0)
                rts
Offset_0x008F8C:
                tst.w   $003A(A0)
                beq.s   Offset_0x008FCC
                subq.w  #$01, $003A(A0)
                bne.s   Offset_0x008FCC
                btst    #$03, $0022(A0)
                beq.s   Offset_0x008FC6
                lea     ($FFFFB000).w, A1
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                bclr    #$03, $0022(A0)
                clr.b   $0025(A0)
                move.w  $0012(A0), $0012(A1)
Offset_0x008FC6:
                move.b  #$06, $0024(A0)
Offset_0x008FCC:
                move.l  $002C(A0), D3
                move.w  $0012(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D3, $002C(A0)
                addi.w  #$0038, $0012(A0)
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $002C(A0), D0
                bcc.s   Offset_0x008FF8
                move.b  #$04, $0024(A0)
Offset_0x008FF8:
                rts
Offset_0x008FFA:
                tst.w   $003A(A0)
                bne.s   Offset_0x00901A
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$04, D0
                tst.b   $00(A2, D0)
                beq.s   Offset_0x009018
                move.w  #$003C, $003A(A0)
Offset_0x009018:
                rts
Offset_0x00901A:
                subq.w  #$01, $003A(A0)
                bne.s   Offset_0x009018
                addq.b  #$01, $0028(A0)
                rts
Offset_0x009026:
                subq.w  #$02, $002C(A0)
                move.w  $0034(A0), D0
                subi.w  #$0200, D0
                cmp.w   $002C(A0), D0
                bne.s   Offset_0x00903C
                clr.b   $0028(A0)
Offset_0x00903C:
                rts
Offset_0x00903E:
                move.w  $0034(A0), D0
                move.b  $0026(A0), D1
                subi.b  #$40, D1
                ext.w   D1
                asr.w   #$01, D1
                add.w   D1, D0
                move.w  D0, $002C(A0)
                bra     Offset_0x009070
Offset_0x009058:
                move.w  $0034(A0), D0
                move.b  $0026(A0), D1
                neg.b   D1
                addi.b  #$40, D1
                ext.w   D1
                asr.w   #$01, D1
                add.w   D1, D0
                move.w  D0, $002C(A0)
Offset_0x009070:
                move.b  ($FFFFFE78).w, $0026(A0)
                rts
Ghz_Platform_Mappings: ; Offset_0x009078:
                dc.w    Ghz_Platform_Map_01-Ghz_Platform_Mappings
                dc.w    Ghz_Platform_Map_02-Ghz_Platform_Mappings
Ghz_Platform_Map_01: ; Offset_0x00907C:
                dc.w    $0002
                dc.l    $F40F0056, $002BFFE0, $F40F0856, $082B0000
Ghz_Platform_Map_02: ; Offset_0x00908E:
                dc.w    $0008
                dc.l    $CC07000A, $0005FFE0, $CC0D0012, $0009FFF0
                dc.l    $DC0D001A, $000DFFF0, $CC070022, $00110010
                dc.l    $EC0F002A, $0015FFE0, $EC0F082A, $08150000
                dc.l    $0C0F003A, $001DFFE0, $0C0F083A, $081D0000
Nghz_Platform_Mappings: ; Offset_0x0090D0:
                dc.w    Nghz_Platform_Map_01-Nghz_Platform_Mappings
                dc.w    Nghz_Platform_Map_02-Nghz_Platform_Mappings
Nghz_Platform_Map_01: ; Offset_0x0090D4:
                dc.w    $0004
                dc.l    $F00E0001, $0000FFE0, $F00E0801, $08000000
                dc.l    $080E002D, $0016FFE0, $080E0039, $001C0000
Nghz_Platform_Map_02: ; Offset_0x0090F6:
                dc.w    $0006
                dc.l    $D00E0001, $0000FFE0, $D00E0801, $08000000
                dc.l    $E80F000D, $0006FFE0, $E80F001D, $000E0000
                dc.l    $080F000D, $0006FFE0, $080F001D, $000E0000                        
;=============================================================================== 
; Object 0x18 - Platforms 
; [ End ]
;===============================================================================   
 
;=============================================================================== 
; Object 0x1A - Collapsing Platforms - Hidden Palace / Oil Ocean ...
; [ Begin ]
;===============================================================================                   
Obj_0x1A_Collapsing_Platforms: ; Offset_0x009128:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x009136(PC, D0), D1
                jmp     Offset_0x009136(PC, D1)
Offset_0x009136:
                dc.w    Offset_0x00913C-Offset_0x009136
                dc.w    Offset_0x0091E8-Offset_0x009136
                dc.w    Offset_0x009220-Offset_0x009136
Offset_0x00913C:               
                addq.b  #$02, $0024(A0)
                move.l  #Collapsing_Platforms_Mappings, $0004(A0) ; Offset_0x0094A8
                move.w  #$4000, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$07, $0038(A0)
                move.b  $0028(A0), $001A(A0)
                move.l  #Offset_0x009436, $0034(A0)
                cmpi.b  #$08, ($FFFFFE10).w
                bne.s   Offset_0x0091A4
                move.l  #HPz_Collapsing_Platforms_Mappings, $0004(A0) ; Offset_0x009858
                move.w  #$434A, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$30, $0019(A0)
                move.l  #Offset_0x009828, $003C(A0)
                move.l  #Offset_0x00944F, $0034(A0)
                bra.s   Offset_0x0091E8
Offset_0x0091A4:
                cmpi.b  #$0A, ($FFFFFE10).w
                bne.s   Offset_0x0091CE
                move.l  #OOz_Collapsing_Platforms_Mappings, $0004(A0) ; Offset_0x009902
                move.w  #$639D, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$40, $0019(A0)
                move.l  #Offset_0x009818, $003C(A0)
                bra.s   Offset_0x0091E8
Offset_0x0091CE:                
                move.l  #Offset_0x009478, $003C(A0)
                move.b  #$34, $0019(A0)
                move.b  #$38, $0016(A0)
                bset    #$04, $0001(A0)
Offset_0x0091E8:
                tst.b   $003A(A0)
                beq.s   Offset_0x0091FA
                tst.b   $0038(A0)
                beq     Offset_0x0093AC
                subq.b  #$01, $0038(A0)
Offset_0x0091FA:                
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   Offset_0x00920A
                move.b  #$01, $003A(A0)
Offset_0x00920A:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.l  $003C(A0), A2
                move.w  $0008(A0), D4
                bsr     Offset_0x00F9D6
                bra     MarkObjGone             ; Offset_0x00D2A0 
Offset_0x009220:
                tst.b   $0038(A0)
                beq.s   Offset_0x009264
                tst.b   $003A(A0)
                bne.s   Offset_0x009234
                subq.b  #$01, $0038(A0)
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x009234:
                bsr     Offset_0x00920A
                subq.b  #$01, $0038(A0)
                bne.s   Offset_0x009262
                lea     ($FFFFB000).w, A1
                bsr.s   Offset_0x009248
                lea     ($FFFFB040).w, A1
Offset_0x009248:
                btst    #$03, $0022(A1)
                beq.s   Offset_0x009262
                bclr    #$03, $0022(A1)
                bclr    #$05, $0022(A1)
                move.b  #$01, $001D(A1)
Offset_0x009262:
                rts
Offset_0x009264:
                bsr     ObjectFall              ; Offset_0x00D24E
                tst.b   $0001(A0)
                bpl     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2                    
;=============================================================================== 
; Object 0x1A - Collapsing Platforms - Hidden Palace / Oil Ocean ...
; [ End ]
;===============================================================================   
                
;=============================================================================== 
; Object 0x1F - Collapsing Platforms - Dust Hill / Oil Ocean ...
; [ Begin ]
;===============================================================================                   
Obj_0x1F_Collapsing_Platforms: ; Offset_0x009274:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x009282(PC, D0), D1
                jmp     Offset_0x009282(PC, D1)  
Offset_0x009282:
                dc.w    Offset_0x009288-Offset_0x009282
                dc.w    Offset_0x00931A-Offset_0x009282
                dc.w    Offset_0x009352-Offset_0x009282
Offset_0x009288:
                addq.b  #$02, $0024(A0)
                move.l  #Offset_0x009748, $0004(A0)
                move.w  #$42B8, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$07, $0038(A0)
                move.b  #$44, $0019(A0)
                lea     (Offset_0x00945B), A4
                btst    #$00, $0028(A0)
                beq.s   Offset_0x0092C6
                lea     (Offset_0x009463), A4
Offset_0x0092C6:
                move.l  A4, $0034(A0)
                cmpi.b  #$0A, ($FFFFFE10).w
                bne.s   Offset_0x0092F2
                move.l  #OOz_Collapsing_Platforms_Mappings, $0004(A0) ; Offset_0x009902
                move.w  #$639D, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$40, $0019(A0)
                move.l  #Offset_0x00946B, $0034(A0)
Offset_0x0092F2:
                cmpi.b  #$0B, ($FFFFFE10).w
                bne.s   Offset_0x00931A
                move.l  #Dhz_Collapsing_Platforms_Mappings, $0004(A0) ; Offset_0x009942
                move.w  #$63F4, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$20, $0019(A0)
                move.l  #Offset_0x009472, $0034(A0)
Offset_0x00931A:
                tst.b   $003A(A0)
                beq.s   Offset_0x00932C
                tst.b   $0038(A0)
                beq     Offset_0x0093A6
                subq.b  #$01, $0038(A0)
Offset_0x00932C:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   Offset_0x00933C
                move.b  #$01, $003A(A0)
Offset_0x00933C:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                bsr     Offset_0x00F984
                bra     MarkObjGone             ; Offset_0x00D2A0
Offset_0x009352:
                tst.b   $0038(A0)
                beq.s   Offset_0x009396
                tst.b   $003A(A0)
                bne.s   Offset_0x009366
                subq.b  #$01, $0038(A0)
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x009366:
                bsr     Offset_0x00933C
                subq.b  #$01, $0038(A0)
                bne.s   Offset_0x009394
                lea     ($FFFFB000).w, A1
                bsr.s   Offset_0x00937A
                lea     ($FFFFB040).w, A1
Offset_0x00937A:
                btst    #$03, $0022(A1)
                beq.s   Offset_0x009394
                bclr    #$03, $0022(A1)
                bclr    #$05, $0022(A1)
                move.b  #$01, $001D(A1)
Offset_0x009394:
                rts
Offset_0x009396:
                bsr     ObjectFall              ; Offset_0x00D24E
                tst.b   $0001(A0)
                bpl     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x0093A6:
                addq.b  #$01, $001A(A0)
                bra.s   Offset_0x0093B0              
Offset_0x0093AC:
                addq.b  #$02, $001A(A0)
Offset_0x0093B0:                
                move.l  $0034(A0), A4                  
                moveq   #$00, D0
                move.b  $001A(A0), D0
                add.w   D0, D0
                move.l  $0004(A0), A3
                adda.w  $00(A3, D0), A3
                move.w  (A3)+, D1
                subq.w  #$01, D1
                bset    #$05, $0001(A0)
                move.b  $0000(A0), D4
                move.b  $0001(A0), D5
                move.l  A0, A1
                bra.s   Offset_0x0093E2
Offset_0x0093DA:
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x009428
                addq.w  #$08,  A3
Offset_0x0093E2:
                move.b  #$04, $0024(A1)
                move.b  D4, $0000(A1)
                move.l  A3, $0004(A1)
                move.b  D5, $0001(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  $0018(A0), $0018(A1)
                move.b  $0019(A0), $0019(A1)
                move.b  $0016(A0), $0016(A1)
                move.b  (A4)+, $0038(A1)
                cmpa.l  A0, A1
                bcc.s   Offset_0x009424
                bsr     DisplayA1Sprite         ; Offset_0x00D3E0
Offset_0x009424:
                dbra    D1, Offset_0x0093DA
Offset_0x009428:                
                bsr     DisplaySprite           ; Offset_0x00D3C2
                move.w  #$00B9, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x009436:                
                dc.b    $1C, $18, $14, $10, $1A, $16, $12, $0E, $0A, $06, $18, $14, $10, $0C, $08, $04
                dc.b    $16, $12, $0E, $0A, $06, $02, $14, $10, $0C                    
Offset_0x00944F:
                dc.b    $18, $1C, $20, $1E, $1A, $16, $06, $0E, $14, $12, $0A, $02
Offset_0x00945B:              
                dc.b    $1E, $16, $0E, $06, $1A, $12, $0A, $02
Offset_0x009463:
                dc.b    $16, $1E, $1A, $12, $06, $0E, $0A, $02
Offset_0x00946B:
                dc.b    $1A, $12, $0A, $02, $16, $0E, $06              
Offset_0x009472:                
                dc.b    $1A, $16, $12, $0E, $0A, $02                                         
Offset_0x009478:
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20, $21, $21, $22, $22, $23, $23, $24, $24
                dc.b    $25, $25, $26, $26, $27, $27, $28, $28, $29, $29, $2A, $2A, $2B, $2B, $2C, $2C
                dc.b    $2D, $2D, $2E, $2E, $2F, $2F, $30, $30, $30, $30, $30, $30, $30, $30, $30, $30                  
Collapsing_Platforms_Mappings: ; Offset_0x0094A8:
                dc.w    Collapsing_Platforms_Map_01-Collapsing_Platforms_Mappings
                dc.w    Collapsing_Platforms_Map_02-Collapsing_Platforms_Mappings
                dc.w    Collapsing_Platforms_Map_03-Collapsing_Platforms_Mappings
                dc.w    Collapsing_Platforms_Map_04-Collapsing_Platforms_Mappings
Collapsing_Platforms_Map_01: ; Offset_0x0094B0:
                dc.w    $0010
                dc.l    $C80E0057, $002B0010, $D00D0063, $0031FFF0
                dc.l    $E00D006B, $00350010, $E00D0073, $0039FFF0
                dc.l    $D806007B, $003DFFE0, $D8060081, $0040FFD0
                dc.l    $F00D0087, $00430010, $F00D008F, $0047FFF0
                dc.l    $F0050097, $004BFFE0, $F005009B, $004DFFD0
                dc.l    $000D009F, $004F0010, $000500A7, $00530000
                dc.l    $000D00AB, $0055FFE0, $000500B3, $0059FFD0
                dc.l    $100D00AB, $00550010, $100500B7, $005B0000
Collapsing_Platforms_Map_02: ; Offset_0x009532:
                dc.w    $0010
                dc.l    $C80E0057, $002B0010, $D00D0063, $0031FFF0
                dc.l    $E00D006B, $00350010, $E00D0073, $0039FFF0
                dc.l    $D806007B, $003DFFE0, $D80600BB, $005DFFD0
                dc.l    $F00D0087, $00430010, $F00D008F, $0047FFF0
                dc.l    $F0050097, $004BFFE0, $F00500C1, $0060FFD0
                dc.l    $000D009F, $004F0010, $000500A7, $00530000
                dc.l    $000D00AB, $0055FFE0, $000500B7, $005BFFD0
                dc.l    $100D00AB, $00550010, $100500B7, $005B0000
Collapsing_Platforms_Map_03: ; Offset_0x0095B4:
                dc.w    $0019
                dc.l    $C806005D, $002E0020, $C8060057, $002B0010
                dc.l    $D0050067, $00330000, $D0050063, $0031FFF0
                dc.l    $E005006F, $00370020, $E005006B, $00350010
                dc.l    $E0050077, $003B0000, $E0050073, $0039FFF0
                dc.l    $D806007B, $003DFFE0, $D8060081, $0040FFD0
                dc.l    $F005008B, $00450020, $F0050087, $00430010
                dc.l    $F0050093, $00490000, $F005008F, $0047FFF0
                dc.l    $F0050097, $004BFFE0, $F005009B, $004DFFD0
                dc.l    $0005008B, $00450020, $0005008B, $00450010
                dc.l    $000500A7, $00530000, $000500AB, $0055FFF0
                dc.l    $000500AB, $0055FFE0, $000500B3, $0059FFD0
                dc.l    $100500AB, $00550020, $100500AB, $00550010
                dc.l    $100500B7, $005B0000
Collapsing_Platforms_Map_04: ; Offset_0x00967E:
                dc.w    $0019
                dc.l    $C806005D, $002E0020, $C8060057, $002B0010
                dc.l    $D0050067, $00330000, $D0050063, $0031FFF0
                dc.l    $E005006F, $00370020, $E005006B, $00350010
                dc.l    $E0050077, $003B0000, $E0050073, $0039FFF0
                dc.l    $D806007B, $003DFFE0, $D80600BB, $005DFFD0
                dc.l    $F005008B, $00450020, $F0050087, $00430010
                dc.l    $F0050093, $00490000, $F005008F, $0047FFF0
                dc.l    $F0050097, $004BFFE0, $F00500C1, $0060FFD0
                dc.l    $0005008B, $00450020, $0005008B, $00450010
                dc.l    $000500A7, $00530000, $000500AB, $0055FFF0
                dc.l    $000500AB, $0055FFE0, $000500B7, $005BFFD0
                dc.l    $100500AB, $00550020, $100500AB, $00550010
                dc.l    $100500B7, $005B0000              
Offset_0x009748:
                dc.w    Offset_0x009750-Offset_0x009748
                dc.w    Offset_0x009772-Offset_0x009748
                dc.w    Offset_0x0097B4-Offset_0x009748
                dc.w    Offset_0x0097D6-Offset_0x009748
Offset_0x009750:
                dc.w    $0004
                dc.l    $F80D0000, $0000FFE0, $080D0000, $0000FFE0
                dc.l    $F80D0000, $00000000, $080D0000, $00000000
Offset_0x009772:
                dc.w    $0008
                dc.l    $F8050000, $0000FFE0, $F8050000, $0000FFF0
                dc.l    $F8050000, $00000000, $F8050000, $00000010
                dc.l    $08050000, $0000FFE0, $08050000, $0000FFF0
                dc.l    $08050000, $00000000, $08050000, $00000010
Offset_0x0097B4:
                dc.w    $0004
                dc.l    $F80D0000, $0000FFE0, $080D0008, $0004FFE0
                dc.l    $F80D0000, $00000000, $080D0008, $00040000
Offset_0x0097D6:
                dc.w    $0008
                dc.l    $F8050000, $0000FFE0, $F8050004, $0002FFF0
                dc.l    $F8050000, $00000000, $F8050004, $00020010
                dc.l    $08050008, $0004FFE0, $0805000C, $0006FFF0
                dc.l    $08050008, $00040000, $0805000C, $00060010
Offset_0x009818:         
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10                    
Offset_0x009828:
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10                   
HPz_Collapsing_Platforms_Mappings: ; Offset_0x009858:
                dc.w    HPz_Collapsing_Platforms_Map_01-HPz_Collapsing_Platforms_Mappings
                dc.w    HPz_Collapsing_Platforms_Map_02-HPz_Collapsing_Platforms_Mappings
                dc.w    HPz_Collapsing_Platforms_Map_02-HPz_Collapsing_Platforms_Mappings
HPz_Collapsing_Platforms_Map_01: ; Offset_0x00985E:
                dc.w    $0008
                dc.l    $F00D0000, $0000FFD0, $000D0008, $0004FFD0
                dc.l    $F0050004, $0002FFF0, $F0050804, $08020000
                dc.l    $0005000C, $0006FFF0, $0005080C, $08060000
                dc.l    $F00D0800, $08000010, $000D0808, $08040010
HPz_Collapsing_Platforms_Map_02: ; Offset_0x0098A0:
                dc.w    $000C
                dc.l    $F0050000, $0000FFD0, $F0050004, $0002FFE0
                dc.l    $F0050004, $0002FFF0, $F0050804, $08020000
                dc.l    $F0050804, $08020010, $F0050800, $08000020
                dc.l    $00050008, $0004FFD0, $0005000C, $0006FFE0
                dc.l    $0005000C, $0006FFF0, $0005080C, $08060000
                dc.l    $0005080C, $08060010, $00050808, $08040020                                
OOz_Collapsing_Platforms_Mappings: ; Offset_0x009902:
                dc.w    OOz_Collapsing_Platforms_Map_01-OOz_Collapsing_Platforms_Mappings
                dc.w    OOz_Collapsing_Platforms_Map_01-OOz_Collapsing_Platforms_Mappings
                dc.w    OOz_Collapsing_Platforms_Map_01-OOz_Collapsing_Platforms_Mappings
OOz_Collapsing_Platforms_Map_01: ; Offset_0x009908:
                dc.w    $0007
                dc.l    $F00F0810, $0808FFC0, $F00F0810, $0808FFE0
                dc.l    $F00F0810, $08080000, $F00F0800, $08000020
                dc.l    $100D0820, $0810FFC0, $100D0820, $0810FFE0
                dc.l    $100D0820, $08100000
Dhz_Collapsing_Platforms_Mappings: ; Offset_0x009942:
                dc.w    Dhz_Collapsing_Platforms_Map_01-Dhz_Collapsing_Platforms_Mappings
                dc.w    Dhz_Collapsing_Platforms_Map_02-Dhz_Collapsing_Platforms_Mappings
Dhz_Collapsing_Platforms_Map_01: ; Offset_0x009946:
                dc.w    $0004
                dc.l    $F00D0000, $0000FFE0, $F00D0800, $08000000
                dc.l    $00090008, $0004FFF0, $000B000E, $00070008
Dhz_Collapsing_Platforms_Map_02: ; Offset_0x009968:
                dc.w    $0006
                dc.l    $F0050000, $0000FFE0, $F0050004, $0002FFF0
                dc.l    $F0050804, $08020000, $F0050800, $08000010
                dc.l    $00090008, $0004FFF0, $000B000E, $00070008                            
;=============================================================================== 
; Object 0x1F - Collapsing Platforms - Dust Hill / Oil Ocean ...
; [ End ]
;===============================================================================                     
                nop                             ; Filler    
;=============================================================================== 
; Object 0x1C - Bridge, Support, Hill Top Posts... 
; [ Begin ]
;===============================================================================        
Obj_0x1C_Misc: ; Offset_0x00999C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x0099AA(PC, D0), D1
                jmp     Offset_0x0099AA(PC, D1)   
Offset_0x0099AA:                             
                dc.w    Offset_0x009A1E-Offset_0x0099AA
                dc.w    Offset_0x009A50-Offset_0x0099AA
Offset_0x0099AE:
                dc.l    Offset_0x009B9A
                dc.w    $43FD
                dc.b    $04, $06
                
                dc.l    ($01<<$18)|Offset_0x009B9A
                dc.w    $43FD
                dc.b    $04, $06
                
                dc.l    ($01<<$18)|Bridge_Mappings ; Offset_0x0085E0 
                dc.w    $43C6
                dc.b    $04, $01
                
                dc.l    ($02<<$18)|Offset_0x009B9A
                dc.w    $23FD
                dc.b    $10, $06
                
                dc.l    ($03<<$18)|Teleferics_Mappings ; Offset_0x01611E 
                dc.w    $43E6
                dc.b    $08, $04
                
                dc.l    ($04<<$18)|Teleferics_Mappings ; Offset_0x01611E 
                dc.w    $43E6
                dc.b    $08, $04
                
                dc.l    ($01<<$18)|Teleferics_Mappings ; Offset_0x01611E 
                dc.w    $43E6
                dc.b    $20, $01
                
                dc.l    Offset_0x009B3A 
                dc.w    $4000
                dc.b    $08, $01
                
                dc.l    ($01<<$18)|Offset_0x009B3A 
                dc.w    $4000
                dc.b    $08, $01
                
                dc.l    Offset_0x009B52 
                dc.w    $4428
                dc.b    $04, $04
                
                dc.l    Offset_0x009B6A 
                dc.w    $4346
                dc.b    $08, $04
                
                dc.l    ($01<<$18)|Offset_0x009B6A 
                dc.w    $4346
                dc.b    $08, $04
                
                dc.l    ($02<<$18)|Offset_0x009B6A 
                dc.w    $4346
                dc.b    $08, $04
                
                dc.l    ($03<<$18)|Offset_0x009B6A 
                dc.w    $4346
                dc.b    $08, $04                  
Offset_0x009A1E:                      
                addq.b  #$02, $0024(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsl.w   #$03, D0
                lea     Offset_0x0099AE(PC), A1  
                lea     $00(A1, D0), A1
                move.b  (A1), $001A(A0)
                move.l  (A1)+, $0004(A0)
                move.w  (A1)+, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  (A1)+, $0019(A0)
                move.b  (A1)+, $0018(A0)
Offset_0x009A50:
                bra     MarkObjGone             ; Offset_0x00D2A0
;=============================================================================== 
; Object 0x1C - Bridge, Support, Hill Top Posts... 
; [ End ]
;=============================================================================== 
 
;=============================================================================== 
; Object 0x71 - Bridge, Support, Hidden Palace Orbs, Metropolis Lava Bubbles... 
; [ Begin ]
;===============================================================================    
Obj_0x71_Hpz_Misc: ; Offset_0x009A54: 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x009A62(PC, D0), D1
                jmp     Offset_0x009A62(PC, D1)
Offset_0x009A62:
                dc.w    Offset_0x009A7E-Offset_0x009A62
                dc.w    Offset_0x009AC0-Offset_0x009A62
Offset_0x009A66:
                dc.l    ($03<<$18)|Hpz_Bridge_Mappings ; Offset_0x008598
                dc.w    $6300
                dc.b    $04, 01 
                dc.l    Hpz_Orbs_Mappings              ; Offset_0x009AFA
                dc.w    $E35A
                dc.b    $10, $01   
                dc.l    Lava_Bubble_Mappings           ; Offset_0x009BBE 
                dc.w    $4536
                dc.b    $10, $01                
Offset_0x009A7E:
                addq.b  #$02, $0024(A0)
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                lsl.w   #$03, D0
                lea     Offset_0x009A66(PC), A1
                lea     $00(A1, D0), A1
                move.b  (A1), $001A(A0)
                move.l  (A1)+, $0004(A0)
                move.w  (A1)+, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  (A1)+, $0019(A0)
                move.b  (A1)+, $0018(A0)
                move.b  $0028(A0), D0
                andi.w  #$00F0, D0
                lsr.b   #$04, D0
                move.b  D0, $001C(A0)
Offset_0x009AC0:                
                lea     (Offset_0x009ACE), A1
                bsr     AnimateSprite           ; Offset_0x00D412
                bra     MarkObjGone             ; Offset_0x00D2A0
Offset_0x009ACE:
                dc.w    Offset_0x009AD6-Offset_0x009ACE
                dc.w    Offset_0x009ADE-Offset_0x009ACE
                dc.w    Offset_0x009AED-Offset_0x009ACE
                dc.w    Offset_0x009AF6-Offset_0x009ACE
Offset_0x009AD6:
                dc.b    $08, $03, $03, $04, $05, $05, $04, $FF
Offset_0x009ADE:
                dc.b    $05, $00, $00, $00, $01, $02, $03, $03, $02, $01, $02, $03, $03, $01, $FF
Offset_0x009AED:
                dc.b    $0B, $00, $01, $02, $03, $04, $05, $FD, $03
Offset_0x009AF6:
                dc.b    $7F, $06, $FD, $02               
Hpz_Orbs_Mappings: ; Offset_0x009AFA:
                dc.w    Offset_0x009B02-Hpz_Orbs_Mappings
                dc.w    Offset_0x009B0C-Hpz_Orbs_Mappings
                dc.w    Offset_0x009B16-Hpz_Orbs_Mappings
                dc.w    Offset_0x009B28-Hpz_Orbs_Mappings
Offset_0x009B02:
                dc.w    $0001
                dc.l    $F40A0000, $0000FFF4
Offset_0x009B0C:
                dc.w    $0001
                dc.l    $F40A0009, $0004FFF4
Offset_0x009B16:
                dc.w    $0002
                dc.l    $F00D0012, $0009FFF0, $000D1812, $1809FFF0
Offset_0x009B28:
                dc.w    $0002
                dc.l    $F00D001A, $000DFFF0, $000D181A, $180DFFF0                
;=============================================================================== 
; Object 0x71 - Bridge, Support, Hidden Palace Orbs, Metropolis Lava Bubbles... 
; [ End ]
;===============================================================================               
Offset_0x009B3A:
                dc.w    Offset_0x009B3E-Offset_0x009B3A
                dc.w    Offset_0x009B48-Offset_0x009B3A
Offset_0x009B3E:
                dc.w    $0001
                dc.l    $F8050002, $0001FFF8
Offset_0x009B48:
                dc.w    $0001
                dc.l    $F8050006, $0003FFF8
Offset_0x009B52:
                dc.w    Offset_0x009B56-Offset_0x009B52
                dc.w    Offset_0x009B60-Offset_0x009B52
Offset_0x009B56:
                dc.w    $0001
                dc.l    $F8010000, $0000FFFC
Offset_0x009B60:
                dc.w    $0001
                dc.l    $F8010002, $0001FFFC
Offset_0x009B6A:
                dc.w    Offset_0x009B72-Offset_0x009B6A
                dc.w    Offset_0x009B7C-Offset_0x009B6A
                dc.w    Offset_0x009B86-Offset_0x009B6A
                dc.w    Offset_0x009B90-Offset_0x009B6A
Offset_0x009B72:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Offset_0x009B7C:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
Offset_0x009B86:
                dc.w    $0001
                dc.l    $F8052008, $2004FFF8
Offset_0x009B90:
                dc.w    $0001
                dc.l    $F801000C, $0006FFFC                  
Offset_0x009B9A:
                dc.w    Offset_0x009BA0-Offset_0x009B9A
                dc.w    Offset_0x009BAA-Offset_0x009B9A
                dc.w    Offset_0x009BB4-Offset_0x009B9A
Offset_0x009BA0:
                dc.w    $0001
                dc.l    $F8010004, $0002FFFC
Offset_0x009BAA:
                dc.w    $0001
                dc.l    $F8010006, $0003FFFC
Offset_0x009BB4:
                dc.w    $0001
                dc.l    $FC0C0000, $0000FFF0  
Lava_Bubble_Mappings:                                  
Offset_0x009BBE:
                dc.w    Offset_0x009BCC-Offset_0x009BBE
                dc.w    Offset_0x009BD6-Offset_0x009BBE
                dc.w    Offset_0x009BE0-Offset_0x009BBE
                dc.w    Offset_0x009BEA-Offset_0x009BBE
                dc.w    Offset_0x009BF4-Offset_0x009BBE
                dc.w    Offset_0x009BFE-Offset_0x009BBE
                dc.w    Offset_0x009C08-Offset_0x009BBE
Offset_0x009BCC:
                dc.w    $0001
                dc.l    $02040000, $0000FFF8
Offset_0x009BD6:
                dc.w    $0001
                dc.l    $00040000, $0000FFF8
Offset_0x009BE0:
                dc.w    $0001
                dc.l    $FE040000, $0000FFF8
Offset_0x009BEA:
                dc.w    $0001
                dc.l    $FC040000, $0000FFF8
Offset_0x009BF4:
                dc.w    $0001
                dc.l    $FC080002, $0001FFF4
Offset_0x009BFE:
                dc.w    $0001
                dc.l    $FC0C0005, $0002FFF0
Offset_0x009C08:
                dc.w    $0000  
                nop                             ; Filler
;=============================================================================== 
; Object 0x2A - Dust Hill - Up and Down Pillar
; [ Begin ]
;===============================================================================                    
Obj_0x2A_Up_Down_Pillar: ; Offset_0x009C0C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x009C1A(PC, D0), D1
                jmp     Offset_0x009C1A(PC, D1)
Offset_0x009C1A:
                dc.w    Offset_0x009C1E-Offset_0x009C1A
                dc.w    Offset_0x009C58-Offset_0x009C1A
Offset_0x009C1E:
                addq.b  #$02, $0024(A0)
                move.l  #Up_Down_Pillar_Mappings, $0004(A0) ; Offset_0x009CAE
                move.w  #$4000, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  #$50, $0016(A0)
                bset    #$04, $0001(A0)
Offset_0x009C58:
                tst.b   $0025(A0)
                bne.s   Offset_0x009C72
                addq.w  #$01, $0030(A0)
                cmpi.w  #$0060, $0030(A0)
                bne.s   Offset_0x009C84
                move.b  #$02, $0025(A0)
                bra.s   Offset_0x009C84
Offset_0x009C72:
                subq.w  #$08, $0030(A0)
                bhi.s   Offset_0x009C84
                move.w  #$0000, $0030(A0)
                move.b  #$00, $0025(A0)
Offset_0x009C84:
                move.w  $0032(A0), D0
                sub.w   $0030(A0), D0
                move.w  D0, $000C(A0)
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0040, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; Offset_0x00F4A0
                bra     MarkObjGone             ; Offset_0x00D2A0
Up_Down_Pillar_Mappings:                
Offset_0x009CAE:
                dc.w    Offset_0x009CB0-Offset_0x009CAE
Offset_0x009CB0:
                dc.w    $0006
                dc.l    $B009001A, $000DFFF0, $C00F0020, $0010FFF0
                dc.l    $E00F0030, $0018FFF0, $000F1030, $1018FFF0
                dc.l    $200F1020, $1010FFF0, $4009101A, $100DFFF0                
;=============================================================================== 
; Object 0x2A - Dust Hill - Up and Down Pillar
; [ End ]
;===============================================================================                   

;=============================================================================== 
; Object 0x2D - Hill Top / Chemical Plant - Automatic Door. 
; [ Begin ]
;===============================================================================                  
Obj_0x2D_Automatic_Door: ; Offset_0x009CE2:                
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x009CF0(PC, D0), D1
                jmp     Offset_0x009CF0(PC, D1)
Offset_0x009CF0:
                dc.w    Offset_0x009CF4-Offset_0x009CF0
                dc.w    Offset_0x009D76-Offset_0x009CF0
Offset_0x009CF4:
                addq.b  #$02, $0024(A0)
                move.l  #Automatic_Door_Mappings, $0004(A0) ; Offset_0x009E1E
                move.w  #$2426, $0002(A0)
                move.b  #$08, $0019(A0)
                cmpi.b  #$04, ($FFFFFE10).w
                bne.s   Offset_0x009D20
                move.w  #$6000, $0002(A0)
                move.b  #$0C, $0019(A0)
Offset_0x009D20:
                cmpi.b  #$0D, ($FFFFFE10).w
                bne.s   Offset_0x009D34
                move.w  #$2394, $0002(A0)
                move.b  #$0C, $0019(A0)
Offset_0x009D34:
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  $0028(A0), $001A(A0)
                move.w  $0008(A0), D2
                move.w  D2, D3
                subi.w  #$0200, D2
                addi.w  #$0018, D3
                btst    #$00, $0022(A0)
                beq.s   Offset_0x009D6E
                subi.w  #$FE18, D2
                addi.w  #$01E8, D3
Offset_0x009D6E:
                move.w  D2, $0038(A0)
                move.w  D3, $003A(A0)
Offset_0x009D76:
                btst    #$00, $0022(A0)
                bne.s   Offset_0x009D92
                move.w  $0038(A0), D2
                move.w  $0008(A0), D3
                tst.b   $0025(A0)
                beq.s   Offset_0x009DA4
                move.w  $003A(A0), D3
                bra.s   Offset_0x009DA4
Offset_0x009D92:
                move.w  $0008(A0), D2
                move.w  $003A(A0), D3
                tst.b   $0025(A0)
                beq.s   Offset_0x009DA4
                move.w  $0038(A0), D2
Offset_0x009DA4:
                move.b  #$00, $0025(A0)
                move.w  ($FFFFB008).w, D0
                cmp.w   D2, D0
                bcs     Offset_0x009DC0
                cmp.w   D3, D0
                bcc     Offset_0x009DC0
                move.b  #$02, $0025(A0)
Offset_0x009DC0:
                move.w  ($FFFFB048).w, D0
                cmp.w   D2, D0
                bcs     Offset_0x009DD6
                cmp.w   D3, D0
                bcc     Offset_0x009DD6
                move.b  #$02, $0025(A0)
Offset_0x009DD6:
                tst.b   $0025(A0)
                beq.s   Offset_0x009DEA
                cmpi.w  #$0040, $0030(A0)
                beq.s   Offset_0x009E00
                addq.w  #$08,  $0030(A0)
                bra.s   Offset_0x009DF4
Offset_0x009DEA:
                tst.w   $0030(A0)
                beq.s   Offset_0x009E00
                subq.w  #$08, $0030(A0)
Offset_0x009DF4:
                move.w  $0032(A0), D0
                sub.w   $0030(A0), D0
                move.w  D0, $000C(A0)
Offset_0x009E00:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0020, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; Offset_0x00F4A0
                bra     MarkObjGone             ; Offset_0x00D2A0
Automatic_Door_Mappings:                
Offset_0x009E1E:
                dc.w    Offset_0x009E24-Offset_0x009E1E
                dc.w    Offset_0x009E46-Offset_0x009E1E
                dc.w    Offset_0x009E58-Offset_0x009E1E
Offset_0x009E24:
                dc.w    $0004
                dc.l    $E0050000, $0000FFF8, $F0050000, $0000FFF8
                dc.l    $00050000, $0000FFF8, $10050000, $0000FFF8
Offset_0x009E46:
                dc.w    $0002
                dc.l    $E00B005F, $002FFFF4, $000B005F, $002FFFF4
Offset_0x009E58:
                dc.w    $0002
                dc.l    $E0070000, $0000FFF8, $00070000, $0000FFF8
;=============================================================================== 
; Object 0x2D - Hill Top / Chemical Plant - Automatic Door. 
; [ End ]
;===============================================================================
                nop                             ; Filler
;=============================================================================== 
; Object ??? - Unknow Object 0x009E6C
; [ Begin ]    Sonic 1 Object 1E - leftover Ballhog object
;===============================================================================                
S1_Ballhog: ; Unknow_Obj_0x009E6C: ; Offset_0x009E6C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x009E7A(PC, D0), D1
                jmp     Offset_0x009E7A(PC, D1)
Offset_0x009E7A:
                dc.w    Offset_0x009E7E-Offset_0x009E7A
                dc.w    Offset_0x009ED2-Offset_0x009E7A
Offset_0x009E7E:
                move.b  #$13, $0016(A0)
                move.b  #$08, $0017(A0)
                move.l  #S1_Ballhog_Mappings, $0004(A0) ;  Offset_0x00A18E
                move.w  #$2302, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$05, $0020(A0)
                move.b  #$0C, $0019(A0)
                bsr     ObjectFall              ; Offset_0x00D24E
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x009ED0
                add.w   D1, $000C(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
Offset_0x009ED0:
                rts
Offset_0x009ED2:
                lea     (Ani_S1_Ballhog), A1    ; Offset_0x00A174
                bsr     AnimateSprite           ; Offset_0x00D412
                cmpi.b  #$01, $001A(A0)
                bne.s   Offset_0x009EEC
                tst.b   $0032(A0)
                beq.s   Offset_0x009EF4
                bra.s   Offset_0x009EF0
Offset_0x009EEC:
                clr.b   $0032(A0)
Offset_0x009EF0:
                bra     MarkObjGone             ; Offset_0x00D2A0
Offset_0x009EF4:
                move.b  #$01, $0032(A0)
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x009F38
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$FF00, $0010(A1)
                move.w  #$0000, $0012(A1)
                moveq   #$FFFFFFFC, D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x009F28
                neg.w   D0
                neg.w   $0010(A1)
Offset_0x009F28:
                add.w   D0, $0008(A1)
                addi.w  #$000C, $000C(A1)
                move.b  $0028(A0), $0028(A1)
Offset_0x009F38:
                bra.s   Offset_0x009EF0                                
;=============================================================================== 
; Object ??? - Unknow Object 0x009E6C
; [ End ]
;===============================================================================                   
;=============================================================================== 
; Object ??? - Unknow Object 0x009F3A    
; [ Begin ]  Sonic1 Object 20 - leftover object for the ball that Ballhog throws
;===============================================================================  
S1_BallHog_Ball: ; Unknow_Obj_0x009F3A: ; Offset_0x009F3A:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x009F48(PC, D0), D1
                jmp     Offset_0x009F48(PC, D1)
Offset_0x009F48:
                dc.w    Offset_0x009F4C-Offset_0x009F48
                dc.w    Offset_0x009F94-Offset_0x009F48
Offset_0x009F4C:
                addq.b  #$02, $0024(A0)
                move.b  #$07, $0016(A0)
                move.l  #S1_Ballhog_Mappings, $0004(A0) ; Offset_0x00A18E
                move.w  #$2302, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$87, $0020(A0)
                move.b  #$08, $0019(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                mulu.w  #$003C, D0
                move.w  D0, $0030(A0)
                move.b  #$04, $001A(A0)
Offset_0x009F94:
                jsr     ObjectFall              ; (Offset_0x00D24E)
                tst.w   $0012(A0)
                bmi.s   Offset_0x009FD0
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x009FD0
                add.w   D1, $000C(A0)
                move.w  #$FD00, $0012(A0)
                tst.b   D3
                beq.s   Offset_0x009FD0
                bmi.s   Offset_0x009FC6
                tst.w   $0010(A0)
                bpl.s   Offset_0x009FD0
                neg.w   $0010(A0)
                bra.s   Offset_0x009FD0
Offset_0x009FC6:
                tst.w   $0010(A0)
                bmi.s   Offset_0x009FD0
                neg.w   $0010(A0)
Offset_0x009FD0:
                subq.w  #$01, $0030(A0)
                bpl.s   Offset_0x009FEC
                move.b  #$24, $0000(A0)
                move.b  #$3F, $0000(A0)
                move.b  #$00, $0024(A0)
                bra     Obj_0x3F                ; Offset_0x00A11E
Offset_0x009FEC:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x009FFE
                move.b  #$05, $001E(A0)
                bchg    #0, $001A(A0)
Offset_0x009FFE:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
;=============================================================================== 
; Object ??? - Unknow Object 0x009F3A
; [ End ]
;===============================================================================  

;=============================================================================== 
; Object 0x24 
; [ Begin ]
;===============================================================================                    
Obj_0x24: ; Offset_0x00A012:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00A020(PC, D0), D1
                jmp     Offset_0x00A020(PC, D1)
Offset_0x00A020:
                dc.w    Offset_0x00A024-Offset_0x00A020
                dc.w    Offset_0x00A068-Offset_0x00A020
Offset_0x00A024:
                addq.b  #$02, $0024(A0)
                move.l  #Offset_0x00A1F6, $0004(A0)
                move.w  #$041C, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$00, $0020(A0)
                move.b  #$0C, $0019(A0)
                move.b  #$09, $001E(A0)
                move.b  #$00, $001A(A0)
                move.w  #$00A5, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x00A068:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x00A082
                move.b  #$09, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$04, $001A(A0)
                beq     DeleteObject            ; Offset_0x00D3B4
Offset_0x00A082:
                bra     DisplaySprite           ; Offset_0x00D3C2
;=============================================================================== 
; Object 0x24 
; [ End ]
;=============================================================================== 
                     
;=============================================================================== 
; Object 0x27 - Object Hit - Enemies / Monitors 
; [ Begin ]
;===============================================================================                 
Obj_0x27_Object_Hit: ; Offset_0x00A086:             
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Object_Hit_Index(PC, D0), D1 ; Offset_0x00A094
                jmp     Object_Hit_Index(PC, D1)     ; Offset_0x00A094
Object_Hit_Index: ; Offset_0x00A094:
                dc.w    Offset_0x00A09A-Object_Hit_Index
                dc.w    Offset_0x00A0BC-Object_Hit_Index
                dc.w    Offset_0x00A100-Object_Hit_Index
Offset_0x00A09A:
                addq.b  #$02, $0024(A0)
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x00A0BC
                move.b  #$28, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $003E(A0), $003E(A1)
Offset_0x00A0BC:
                addq.b  #$02, $0024(A0)
                move.l  #Object_Hit_Mappings, $0004(A0) ;  Offset_0x00A226
                move.w  #$05A0, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$00, $0020(A0)
                move.b  #$0C, $0019(A0)
                move.b  #$07, $001E(A0)
                move.b  #$00, $001A(A0)
                move.w  #$00C1, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x00A100:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x00A11A
                move.b  #$07, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$05, $001A(A0)
                beq     DeleteObject            ; Offset_0x00D3B4
Offset_0x00A11A:
                bra     DisplaySprite           ; Offset_0x00D3C2  
;=============================================================================== 
; Object 0x27 - Object Hit - Enemies / Monitors 
; [ End ]
;===============================================================================   
;=============================================================================== 
; Object 0x3F 
; [ Begin ]
;===============================================================================  
Obj_0x3F: ; Offset_0x00A11E:               
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00A12C(PC, D0), D1
                jmp     Offset_0x00A12C(PC, D1)
Offset_0x00A12C:
                dc.w    Offset_0x00A130-Offset_0x00A12C
                dc.w    Offset_0x00A100-Offset_0x00A12C
Offset_0x00A130:
                addq.b  #$02, $0024(A0)
                move.l  #Offset_0x00A292, $0004(A0)
                move.w  #$05A0, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$00, $0020(A0)
                move.b  #$0C, $0019(A0)
                move.b  #$07, $001E(A0)
                move.b  #$00, $001A(A0)
                move.w  #$00C4, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6                   
;=============================================================================== 
; Object 0x3F
; [ End ]
;===============================================================================                
Ani_S1_Ballhog: ; Unknow_Obj_0x009E6C_Data: ; Offset_0x00A174:
                dc.w    Offset_0x00A176-Ani_S1_Ballhog
Offset_0x00A176:
                dc.b    $09, $00, $00, $02, $02, $03, $02, $00, $00, $02, $02, $03, $02, $00, $00, $02
                dc.b    $02, $03, $02, $00, $00, $01, $FF, $00    
S1_Ballhog_Mappings: ; Unknow_Obj_0x009E6C_Mappings:  Offset_0x00A18E:
                dc.w    Offset_0x00A19A-S1_Ballhog_Mappings
                dc.w    Offset_0x00A1AC-S1_Ballhog_Mappings
                dc.w    Offset_0x00A1BE-S1_Ballhog_Mappings
                dc.w    Offset_0x00A1D0-S1_Ballhog_Mappings
                dc.w    Offset_0x00A1E2-S1_Ballhog_Mappings
                dc.w    Offset_0x00A1EC-S1_Ballhog_Mappings
Offset_0x00A19A:
                dc.w    $0002
                dc.l    $EF090000, $0000FFF4, $FF0A0006, $0003FFF4
Offset_0x00A1AC:
                dc.w    $0002
                dc.l    $EF090000, $0000FFF4, $FF0A000F, $0007FFF4
Offset_0x00A1BE:
                dc.w    $0002
                dc.l    $F4090000, $0000FFF4, $04090018, $000CFFF4
Offset_0x00A1D0:
                dc.w    $0002
                dc.l    $E4090000, $0000FFF4, $F40A001E, $000FFFF4
Offset_0x00A1E2:
                dc.w    $0001
                dc.l    $F8050027, $0013FFF8
Offset_0x00A1EC:
                dc.w    $0001
                dc.l    $F805002B, $0015FFF8              
Offset_0x00A1F6:
                dc.w    Offset_0x00A1FE-Offset_0x00A1F6
                dc.w    Offset_0x00A208-Offset_0x00A1F6
                dc.w    Offset_0x00A212-Offset_0x00A1F6
                dc.w    Offset_0x00A21C-Offset_0x00A1F6
Offset_0x00A1FE:
                dc.w    $0001
                dc.l    $F40A0000, $0000FFF4
Offset_0x00A208:
                dc.w    $0001
                dc.l    $F40A0009, $0004FFF4
Offset_0x00A212:
                dc.w    $0001
                dc.l    $F40A0012, $0009FFF4
Offset_0x00A21C:
                dc.w    $0001
                dc.l    $F40A001B, $000DFFF4
Object_Hit_Mappings: ; Offset_0x00A226:
                dc.w    Object_Hit_Map_01-Object_Hit_Mappings
                dc.w    Object_Hit_Map_02-Object_Hit_Mappings
                dc.w    Object_Hit_Map_03-Object_Hit_Mappings
                dc.w    Object_Hit_Map_04-Object_Hit_Mappings
                dc.w    Object_Hit_Map_05-Object_Hit_Mappings
Object_Hit_Map_01: ; Offset_0x00A230:
                dc.w    $0001
                dc.l    $F8090000, $0000FFF4
Object_Hit_Map_02: ;Offset_0x00A23A:
                dc.w    $0001
                dc.l    $F00F0006, $0003FFF0
Object_Hit_Map_03: ;Offset_0x00A244:
                dc.w    $0001
                dc.l    $F00F0016, $000BFFF0
Object_Hit_Map_04: ;Offset_0x00A24E:
                dc.w    $0004
                dc.l    $EC0A0026, $0013FFEC, $EC05002F, $00170004
                dc.l    $0405182F, $1817FFEC, $FC0A1826, $1813FFFC
Object_Hit_Map_05: ;Offset_0x00A270:
                dc.w    $0004
                dc.l    $EC0A0033, $0019FFEC, $EC05003C, $001E0004
                dc.l    $0405183C, $181EFFEC, $FC0A1833, $1819FFFC
Offset_0x00A292:
                dc.w    Object_Hit_Map_01-Offset_0x00A292
                dc.w    Offset_0x00A29C-Offset_0x00A292
                dc.w    Offset_0x00A2A6-Offset_0x00A292
                dc.w    Object_Hit_Map_04-Offset_0x00A292
                dc.w    Object_Hit_Map_05-Offset_0x00A292
Offset_0x00A29C:
                dc.w    $0001
                dc.l    $F00F0040, $0020FFF0
Offset_0x00A2A6:
                dc.w    $0001
                dc.l    $F00F0050, $0028FFF0  
;=============================================================================== 
; Object 0x28 - Flickies
; [ Begin ]
;===============================================================================                                                 
Obj_0x28_Flickies: ; Offset_0x00A2B0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Flickies_Index(PC, D0), D1 ; Offset_0x00A2BE
                jmp     Flickies_Index(PC, D1)     ; Offset_0x00A2BE
Flickies_Index: ; Offset_0x00A2BE:
                dc.w    Offset_0x00A3B2-Flickies_Index
                dc.w    Offset_0x00A4D8-Flickies_Index
                dc.w    Offset_0x00A532-Flickies_Index
                dc.w    Offset_0x00A56E-Flickies_Index
                dc.w    Offset_0x00A532-Flickies_Index
                dc.w    Offset_0x00A532-Flickies_Index
                dc.w    Offset_0x00A532-Flickies_Index
                dc.w    Offset_0x00A56E-Flickies_Index
                dc.w    Offset_0x00A532-Flickies_Index
                dc.w    Offset_0x00A5EE-Flickies_Index
                dc.w    Offset_0x00A60E-Flickies_Index
                dc.w    Offset_0x00A60E-Flickies_Index
                dc.w    Offset_0x00A62E-Flickies_Index
                dc.w    Offset_0x00A668-Flickies_Index
                dc.w    Offset_0x00A6C2-Flickies_Index
                dc.w    Offset_0x00A6E0-Flickies_Index
                dc.w    Offset_0x00A6C2-Flickies_Index
                dc.w    Offset_0x00A6E0-Flickies_Index
                dc.w    Offset_0x00A6C2-Flickies_Index
                dc.w    Offset_0x00A71E-Flickies_Index
                dc.w    Offset_0x00A684-Flickies_Index
Offset_0x00A2E8:
                dc.b    $00, $05, $02, $03, $06, $03, $04, $05, $04, $01, $00, $01, $00, $05, $02, $03
                dc.b    $06, $03, $04, $05, $04, $01, $00, $01, $00, $05, $02, $03, $06, $03, $04, $05
                dc.b    $04, $01, $00, $01
Offset_0x00A30C:
                dc.w    $FE00, $FC00
                dc.l    Offset_0x00A816
                dc.w    $FE00, $FD00
                dc.l    Offset_0x00A83A
                dc.w    $FE80, $FD00
                dc.l    Offset_0x00A816
                dc.w    $FEC0, $FE80
                dc.l    Offset_0x00A83A
                dc.w    $FE40, $FD00
                dc.l    Offset_0x00A85E
                dc.w    $FD00, $FC00
                dc.l    Offset_0x00A83A
                dc.w    $FD80, $FC80
                dc.l    Offset_0x00A85E
Offset_0x00A344:
                dc.w    $FBC0, $FC00, $FBC0, $FC00, $FBC0, $FC00, $FD00, $FC00
                dc.w    $FD00, $FC00, $FE80, $FD00, $FE80, $FD00, $FEC0, $FE80
                dc.w    $FE40, $FD00, $FE00, $FD00, $FD80, $FC80
Offset_0x00A370:
                dc.l    Offset_0x00A83A
                dc.l    Offset_0x00A83A
                dc.l    Offset_0x00A83A
                dc.l    Offset_0x00A816
                dc.l    Offset_0x00A816
                dc.l    Offset_0x00A816
                dc.l    Offset_0x00A816
                dc.l    Offset_0x00A83A
                dc.l    Offset_0x00A85E
                dc.l    Offset_0x00A83A
                dc.l    Offset_0x00A85E                
Offset_0x00A39C:
                dc.w    $05A5, $05A5, $05A5, $0553, $0553, $0573, $0573, $0585
                dc.w    $0593, $0565, $05B3
Offset_0x00A3B2:
                tst.b   $0028(A0)
                beq     Offset_0x00A420
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.b  D0, $0024(A0)
                subi.w  #$0014, D0
                move.w  Offset_0x00A39C(PC, D0), $0002(A0)
                add.w   D0, D0
                move.l  Offset_0x00A370(PC, D0), $0004(A0)
                lea     Offset_0x00A344(PC), A1
                move.w  $00(A1, D0), $0032(A0)
                move.w  $00(A1, D0), $0010(A0)
                move.w  $02(A1, D0), $0034(A0)
                move.w  $02(A1, D0), $0012(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$0C, $0016(A0)
                move.b  #$04, $0001(A0)
                bset    #$00, $0001(A0)
                move.b  #$06, $0018(A0)
                move.b  #$08, $0019(A0)
                move.b  #$07, $001E(A0)
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00A420:
                addq.b  #$02, $0024(A0)
                bsr     PseudoRandomNumber      ; Offset_0x0031E4
                andi.w  #$0001, D0
                moveq   #$00, D1
                move.b  ($FFFFFE10).w, D1
                add.w   D1, D1
                add.w   D0, D1
                lea     Offset_0x00A2E8(PC), A1
                move.b  $00(A1, D1), D0
                move.b  D0, $0030(A0)
                lsl.w   #$03, D0
                lea     Offset_0x00A30C(PC), A1
                adda.w  D0, A1
                move.w  (A1)+, $0032(A0)
                move.w  (A1)+, $0034(A0)
                move.l  (A1)+, $0004(A0)
                move.w  #$0580, $0002(A0)
                btst    #$00, $0030(A0)
                beq.s   Offset_0x00A46A
                move.w  #$0592, $0002(A0)
Offset_0x00A46A:
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$0C, $0016(A0)
                move.b  #$04, $0001(A0)
                bset    #$00, $0001(A0)
                move.b  #$06, $0018(A0)
                move.b  #$08, $0019(A0)
                move.b  #$07, $001E(A0)
                move.b  #$02, $001A(A0)
                move.w  #$FC00, $0012(A0)
                tst.b   ($FFFFF7A7).w
                bne.s   Offset_0x00A4CA
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x00A4C6
                move.b  #$29, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $003E(A0), D0
                lsr.w   #$01, D0
                move.b  D0, $001A(A1)
Offset_0x00A4C6:
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00A4CA:
                move.b  #$12, $0024(A0)
                clr.w   $0010(A0)
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00A4D8:
                tst.b   $0001(A0)
                bpl     DeleteObject            ; Offset_0x00D3B4
                bsr     ObjectFall              ; Offset_0x00D24E
                tst.w   $0012(A0)
                bmi.s   Offset_0x00A52E
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x00A52E
                add.w   D1, $000C(A0)
                move.w  $0032(A0), $0010(A0)
                move.w  $0034(A0), $0012(A0)
                move.b  #$01, $001A(A0)
                move.b  $0030(A0), D0
                add.b   D0, D0
                addq.b  #$04, D0
                move.b  D0, $0024(A0)
                tst.b   ($FFFFF7A7).w
                beq.s   Offset_0x00A52E
                btst    #$04, ($FFFFFE0F).w
                beq.s   Offset_0x00A52E
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
Offset_0x00A52E:
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00A532:
                bsr     ObjectFall              ; Offset_0x00D24E
                move.b  #$01, $001A(A0)
                tst.w   $0012(A0)
                bmi.s   Offset_0x00A55C
                move.b  #$00, $001A(A0)
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x00A55C
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
Offset_0x00A55C:
                tst.b   $0028(A0)
                bne.s   Offset_0x00A5D2
                tst.b   $0001(A0)
                bpl     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00A56E:
                bsr     SpeedToPos              ; Offset_0x00D27A
                addi.w  #$0018, $0012(A0)
                tst.w   $0012(A0)
                bmi.s   Offset_0x00A5AA
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x00A5AA
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
                tst.b   $0028(A0)
                beq.s   Offset_0x00A5AA
                cmpi.b  #$0A, $0028(A0)
                beq.s   Offset_0x00A5AA
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
Offset_0x00A5AA:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x00A5C0
                move.b  #$01, $001E(A0)
                addq.b  #$01, $001A(A0)
                andi.b  #$01, $001A(A0)
Offset_0x00A5C0:
                tst.b   $0028(A0)
                bne.s   Offset_0x00A5D2
                tst.b   $0001(A0)
                bpl     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00A5D2:
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bcs.s   Offset_0x00A5EA
                subi.w  #$0180, D0
                bpl.s   Offset_0x00A5EA
                tst.b   $0001(A0)
                bpl     DeleteObject            ; Offset_0x00D3B4
Offset_0x00A5EA:
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00A5EE:
                tst.b   $0001(A0)
                bpl     DeleteObject            ; Offset_0x00D3B4
                subq.w  #$01, $0036(A0)
                bne     Offset_0x00A60A
                move.b  #$02, $0024(A0)
                move.b  #$03, $0018(A0)
Offset_0x00A60A:
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00A60E:
                bsr     Offset_0x00A7B2
                bcc.s   Offset_0x00A62A
                move.w  $0032(A0), $0010(A0)
                move.w  $0034(A0), $0012(A0)
                move.b  #$0E, $0024(A0)
                bra     Offset_0x00A56E
Offset_0x00A62A:
                bra     Offset_0x00A5D2
Offset_0x00A62E:
                bsr     Offset_0x00A7B2
                bpl.s   Offset_0x00A664
                clr.w   $0010(A0)
                clr.w   $0032(A0)
                bsr     SpeedToPos              ; Offset_0x00D27A
                addi.w  #$0018, $0012(A0)
                bsr     Offset_0x00A772
                bsr     Offset_0x00A79A
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x00A664
                move.b  #$01, $001E(A0)
                addq.b  #$01, $001A(A0)
                andi.b  #$01, $001A(A0)
Offset_0x00A664:
                bra     Offset_0x00A5D2
Offset_0x00A668:
                bsr     Offset_0x00A7B2
                bpl.s   Offset_0x00A6BE
                move.w  $0032(A0), $0010(A0)
                move.w  $0034(A0), $0012(A0)
                move.b  #$04, $0024(A0)
                bra     Offset_0x00A532
Offset_0x00A684:
                bsr     ObjectFall              ; Offset_0x00D24E
                move.b  #$01, $001A(A0)
                tst.w   $0012(A0)
                bmi.s   Offset_0x00A6BE
                move.b  #$00, $001A(A0)
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x00A6BE
                not.b  $0029(A0)
                bne.s   Offset_0x00A6B4
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
Offset_0x00A6B4:
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
Offset_0x00A6BE:
                bra     Offset_0x00A5D2
Offset_0x00A6C2:
                bsr     Offset_0x00A7B2
                bpl.s   Offset_0x00A6DC
                clr.w   $0010(A0)
                clr.w   $0032(A0)
                bsr     ObjectFall              ; Offset_0x00D24E
                bsr     Offset_0x00A772
                bsr     Offset_0x00A79A
Offset_0x00A6DC:
                bra     Offset_0x00A5D2
Offset_0x00A6E0:
                bsr     Offset_0x00A7B2
                bpl.s   Offset_0x00A71A
                bsr     ObjectFall              ; Offset_0x00D24E
                move.b  #$01, $001A(A0)
                tst.w   $0012(A0)
                bmi.s   Offset_0x00A71A
                move.b  #$00, $001A(A0)
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x00A71A
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
Offset_0x00A71A:
                bra     Offset_0x00A5D2
Offset_0x00A71E:
                bsr     Offset_0x00A7B2
                bpl.s   Offset_0x00A76E
                bsr     SpeedToPos              ; Offset_0x00D27A
                addi.w  #$0018, $0012(A0)
                tst.w   $0012(A0)
                bmi.s   Offset_0x00A758
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x00A758
                not.b  $0029(A0)
                bne.s   Offset_0x00A74E
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
Offset_0x00A74E:
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
Offset_0x00A758:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x00A76E
                move.b  #$01, $001E(A0)
                addq.b  #$01, $001A(A0)
                andi.b  #$01, $001A(A0)
Offset_0x00A76E:
                bra     Offset_0x00A5D2
Offset_0x00A772:
                move.b  #$01, $001A(A0)
                tst.w   $0012(A0)
                bmi.s   Offset_0x00A798
                move.b  #$00, $001A(A0)
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x00A798
                add.w   D1, $000C(A0)
                move.w  $0034(A0), $0012(A0)
Offset_0x00A798:
                rts
Offset_0x00A79A:
                bset    #$00, $0001(A0)
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bcc.s   Offset_0x00A7B0
                bclr    #$00, $0001(A0)
Offset_0x00A7B0:
                rts
Offset_0x00A7B2:
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                subi.w  #$00B8, D0
                rts   
;=============================================================================== 
; Object 0x28 - Flickies
; [ End ]
;===============================================================================  
;=============================================================================== 
; Object 0x29 - Enemy Points
; [ Begin ]
;===============================================================================                    
Obj_0x29_Enemy_Points: ; Offset_0x00A7C0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Enemy_Points_Index(PC, D0), D1  ; Offset_0x00A7CE
                jmp     Enemy_Points_Index(PC, D1)      ; Offset_0x00A7CE
Enemy_Points_Index: ; Offset_0x00A7CE:
                dc.w    Offset_0x00A7D2-Enemy_Points_Index
                dc.w    Offset_0x00A800-Enemy_Points_Index
Offset_0x00A7D2:
                addq.b  #$02, $0024(A0)
                move.l  #Enemy_Points_Mappings, $0004(A0) ; Offset_0x00A882
                move.w  #$04AC, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$08, $0019(A0)
                move.w  #$FD00, $0012(A0)
Offset_0x00A800:
                tst.w   $0012(A0)
                bpl     DeleteObject            ; Offset_0x00D3B4
                bsr     SpeedToPos              ; Offset_0x00D27A
                addi.w  #$0018, $0012(A0)
                bra     DisplaySprite           ; Offset_0x00D3C2
;=============================================================================== 
; Object 0x29 - Enemy Points
; [ End ]
;===============================================================================                 
Offset_0x00A816:
                dc.w    Offset_0x00A826-Offset_0x00A816
                dc.w    Offset_0x00A830-Offset_0x00A816
                dc.w    Offset_0x00A81C-Offset_0x00A816
Offset_0x00A81C:
                dc.w    $0001
                dc.l    $F4060000, $0000FFF8
Offset_0x00A826:
                dc.w    $0001
                dc.l    $F4060006, $0003FFF8
Offset_0x00A830:
                dc.w    $0001
                dc.l    $F406000C, $0006FFF8                             
Offset_0x00A83A:
                dc.w    Offset_0x00A84A-Offset_0x00A83A
                dc.w    Offset_0x00A854-Offset_0x00A83A
                dc.w    Offset_0x00A840-Offset_0x00A83A
Offset_0x00A840:
                dc.w    $0001
                dc.l    $F4060000, $0000FFF8
Offset_0x00A84A:
                dc.w    $0001
                dc.l    $FC050006, $0003FFF8
Offset_0x00A854:
                dc.w    $0001
                dc.l    $FC05000A, $0005FFF8
Offset_0x00A85E:
                dc.w    Offset_0x00A86E-Offset_0x00A85E
                dc.w    Offset_0x00A878-Offset_0x00A85E
                dc.w    Offset_0x00A864-Offset_0x00A85E
Offset_0x00A864:
                dc.w    $0001
                dc.l    $F4060000, $0000FFF8
Offset_0x00A86E:
                dc.w    $0001
                dc.l    $FC090006, $0003FFF4
Offset_0x00A878:
                dc.w    $0001
                dc.l    $FC09000C, $0006FFF4                            
Enemy_Points_Mappings:
Offset_0x00A882:
                dc.w    Offset_0x00A890-Offset_0x00A882
                dc.w    Offset_0x00A89A-Offset_0x00A882
                dc.w    Offset_0x00A8A4-Offset_0x00A882
                dc.w    Offset_0x00A8AE-Offset_0x00A882
                dc.w    Offset_0x00A8C0-Offset_0x00A882
                dc.w    Offset_0x00A8CA-Offset_0x00A882
                dc.w    Offset_0x00A8DC-Offset_0x00A882
Offset_0x00A890:
                dc.w    $0001
                dc.l    $F8050002, $0001FFF8
Offset_0x00A89A:
                dc.w    $0001
                dc.l    $F8050006, $0003FFF8
Offset_0x00A8A4:
                dc.w    $0001
                dc.l    $F805000A, $0005FFF8
Offset_0x00A8AE:
                dc.w    $0002
                dc.l    $F8010000, $0000FFF8, $F805000E, $00070000
Offset_0x00A8C0:
                dc.w    $0001
                dc.l    $F8010000, $0000FFFC
Offset_0x00A8CA:
                dc.w    $0002
                dc.l    $F8050002, $0001FFF0, $F805000E, $00070000
Offset_0x00A8DC:
                dc.w    $0002
                dc.l    $F805000A, $0005FFF0, $F805000E, $00070000                          
               
                nop                             ; Filler                                                
;=============================================================================== 
; Object ??? - Unknow Object 0x00A8F0  (Sonic 1 Object 1F - GHZ Crabmeat)
; [ Begin ]
;===============================================================================                  
S1_Crabmeat: ; Unknow_Obj_0x00A8F0: ; Offset_0x00A8F0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00A8FE(PC, D0), D1
                jmp     Offset_0x00A8FE(PC, D1)
Offset_0x00A8FE:
                dc.w    Offset_0x00A908-Offset_0x00A8FE
                dc.w    Offset_0x00A960-Offset_0x00A8FE
                dc.w    Offset_0x00AABC-Offset_0x00A8FE
                dc.w    Offset_0x00AAC0-Offset_0x00A8FE
                dc.w    Offset_0x00AAFA-Offset_0x00A8FE
Offset_0x00A908:
                move.b  #$10, $0016(A0)
                move.b  #$08, $0017(A0)
                move.l  #Crabmeat_Mappings, $0004(A0) ; Offset_0x00AB4C
                move.w  #$0400, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$06, $0020(A0)
                move.b  #$15, $0019(A0)
                bsr     ObjectFall              ; Offset_0x00D24E
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x00A95E
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
Offset_0x00A95E:
                rts
Offset_0x00A960:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x00A97C(PC, D0), D1
                jsr     Offset_0x00A97C(PC, D1)
                lea     (Offset_0x00AB1C), A1
                bsr     AnimateSprite           ; Offset_0x00D412
                bra     MarkObjGone             ; Offset_0x00D2A0
Offset_0x00A97C:
                dc.w    Offset_0x00A980-Offset_0x00A97C
                dc.w    Offset_0x00AA1E-Offset_0x00A97C
Offset_0x00A980:
                subq.w  #$01, $0030(A0)
                bpl.s   Offset_0x00A9BA
                tst.b   $0001(A0)
                bpl.s   Offset_0x00A994
                bchg    #1, $0032(A0)
                bne.s   Offset_0x00A9BC
Offset_0x00A994:
                addq.b  #$02, $0025(A0)
                move.w  #$007F, $0030(A0)
                move.w  #$0080, $0010(A0)
                bsr     Offset_0x00AA8C
                addq.b  #$03, D0
                move.b  D0, $001C(A0)
                bchg    #0, $0022(A0)
                bne.s   Offset_0x00A9BA
                neg.w   $0010(A0)
Offset_0x00A9BA:
                rts
Offset_0x00A9BC:
                move.w  #$003B, $0030(A0)
                move.b  #$06, $001C(A0)
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x00A9F2
                move.b  #$1F, $0000(A1)
                move.b  #$06, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                subi.w  #$0010, $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$FF00, $0010(A1)
Offset_0x00A9F2:
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x00AA1C
                move.b  #$1F, $0000(A1)
                move.b  #$06, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                addi.w  #$0010, $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$0100, $0010(A1)
Offset_0x00AA1C:
                rts
Offset_0x00AA1E:
                subq.w  #$01, $0030(A0)
                bmi.s   Offset_0x00AA72
                bsr     SpeedToPos              ; Offset_0x00D27A
                bchg    #0, $0032(A0)
                bne.s   Offset_0x00AA58
                move.w  $0008(A0), D3
                addi.w  #$0010, D3
                btst    #$00, $0022(A0)
                beq.s   Offset_0x00AA44
                subi.w  #$0020, D3
Offset_0x00AA44:
                jsr     ObjHitFloor2            ; (Offset_0x01389C)
                cmpi.w  #$FFF8, D1
                blt.s   Offset_0x00AA72
                cmpi.w  #$000C, D1
                bge.s   Offset_0x00AA72
                rts
Offset_0x00AA58:
                jsr     ObjHitFloor             ; (Offset_0x013898)
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Offset_0x00AA8C
                addq.b  #$03, D0
                move.b  D0, $001C(A0)
                rts
Offset_0x00AA72:
                subq.b  #$02, $0025(A0)
                move.w  #$003B, $0030(A0)
                move.w  #$0000, $0010(A0)
                bsr     Offset_0x00AA8C
                move.b  D0, $001C(A0)
                rts
Offset_0x00AA8C:
                moveq   #$00, D0
                move.b  $0026(A0), D3
                bmi.s   Offset_0x00AAA8
                cmpi.b  #$06, D3
                bcs.s   Offset_0x00AAA6
                moveq   #$01, D0
                btst    #$00, $0022(A0)
                bne.s   Offset_0x00AAA6
                moveq   #$02, D0
Offset_0x00AAA6:
                rts
Offset_0x00AAA8:
                cmpi.b  #$FA, D3
                bhi.s   Offset_0x00AABA
                moveq   #$02, D0
                btst    #$00, $0022(A0)
                bne.s   Offset_0x00AABA
                moveq   #$01, D0
Offset_0x00AABA:
                rts
Offset_0x00AABC:
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x00AAC0:
                addq.b  #$02, $0024(A0)
                move.l  #Crabmeat_Mappings, $0004(A0) ; Offset_0x00AB4C
                move.w  #$0400, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$87, $0020(A0)
                move.b  #$08, $0019(A0)
                move.w  #$FC00, $0012(A0)
                move.b  #$07, $001C(A0)
Offset_0x00AAFA:
                lea     (Offset_0x00AB1C), A1
                bsr     AnimateSprite           ; Offset_0x00D412
                bsr     ObjectFall              ; Offset_0x00D24E
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2  
Offset_0x00AB1C:
                dc.w    Offset_0x00AB2C-Offset_0x00AB1C
                dc.w    Offset_0x00AB2F-Offset_0x00AB1C
                dc.w    Offset_0x00AB32-Offset_0x00AB1C
                dc.w    Offset_0x00AB35-Offset_0x00AB1C
                dc.w    Offset_0x00AB3A-Offset_0x00AB1C
                dc.w    Offset_0x00AB3F-Offset_0x00AB1C
                dc.w    Offset_0x00AB44-Offset_0x00AB1C
                dc.w    Offset_0x00AB47-Offset_0x00AB1C
Offset_0x00AB2C:
                dc.b    $0F, $00, $FF
Offset_0x00AB2F:
                dc.b    $0F, $02, $FF
Offset_0x00AB32:
                dc.b    $0F, $22, $FF
Offset_0x00AB35:
                dc.b    $0F, $01, $21, $00, $FF
Offset_0x00AB3A:
                dc.b    $0F, $21, $03, $02, $FF
Offset_0x00AB3F:
                dc.b    $0F, $01, $23, $22, $FF
Offset_0x00AB44:
                dc.b    $0F, $04, $FF
Offset_0x00AB47:
                dc.b    $01, $05, $06, $FF, $00     
Crabmeat_Mappings: ; Offset_0x00AB4C:
                dc.w    Offset_0x00AB5A-Crabmeat_Mappings
                dc.w    Offset_0x00AB7C-Crabmeat_Mappings
                dc.w    Offset_0x00AB9E-Crabmeat_Mappings
                dc.w    Offset_0x00ABC0-Crabmeat_Mappings
                dc.w    Offset_0x00ABE2-Crabmeat_Mappings
                dc.w    Offset_0x00AC14-Crabmeat_Mappings
                dc.w    Offset_0x00AC1E-Crabmeat_Mappings
Offset_0x00AB5A:
                dc.w    $0004
                dc.l    $F0090000, $0000FFE8, $F0090800, $08000000
                dc.l    $00050006, $0003FFF0, $00050806, $08030000
Offset_0x00AB7C:
                dc.w    $0004
                dc.l    $F009000A, $0005FFE8, $F0090010, $00080000
                dc.l    $00050016, $000BFFF0, $0009001A, $000D0000
Offset_0x00AB9E:
                dc.w    $0004
                dc.l    $EC090000, $0000FFE8, $EC090800, $08000000
                dc.l    $FC050806, $08030000, $FC060020, $0010FFF0
Offset_0x00ABC0:
                dc.w    $0004
                dc.l    $EC09000A, $0005FFE8, $EC090010, $00080000
                dc.l    $FC090026, $00130000, $FC06002C, $0016FFF0
Offset_0x00ABE2:
                dc.w    $0006
                dc.l    $F0040032, $0019FFF0, $F0040832, $08190000
                dc.l    $F8090034, $001AFFE8, $F8090834, $081A0000
                dc.l    $0804003A, $001DFFF0, $0804083A, $081D0000
Offset_0x00AC14:
                dc.w    $0001
                dc.l    $F805003C, $001EFFF8
Offset_0x00AC1E:
                dc.w    $0001
                dc.l    $F8050040, $0020FFF8                           
;=============================================================================== 
; Object ??? - Unknow Object 0x00A8F0
; [ End ]
;===============================================================================                  
                          
;=============================================================================== 
; Object 0x25 - Rings  
; [ Begin ]
;===============================================================================                   
Obj_0x25_Rings: ; Offset_0x00AC28:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Rings_Index(PC, D0), D1  ; Offset_0x00AC36
                jmp     Rings_Index(PC, D1)      ; Offset_0x00AC36
Rings_Index: ; Offset_0x00AC36:
                dc.w    Offset_0x00AC60-Rings_Index
                dc.w    Offset_0x00ACCE-Rings_Index
                dc.w    Offset_0x00ACEA-Rings_Index
                dc.w    Offset_0x00AD10-Rings_Index
                dc.w    Offset_0x00AD1E-Rings_Index                
;Offset_0x00AC40:
                dc.b    $10, $00, $18, $00, $20, $00, $00, $10, $00, $18, $00, $20, $10, $10, $18, $18
                dc.b    $20, $20, $F0, $10, $E8, $18, $E0, $20, $10, $08, $18, $10, $F0, $08, $E8, $10   
Offset_0x00AC60:
                move.l  A0, A1
                moveq   #$00, D1
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                bra.s   Offset_0x00AC76
Offset_0x00AC6E:
                swap.w  D1
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x00ACCE
Offset_0x00AC76:
                move.b  #$25, $0000(A1)
                addq.b  #$02, $0024(A1)
                move.w  D2, $0008(A1)
                move.w  $0008(A0), $0032(A1)
                move.w  D3, $000C(A1)
                move.l  #Rings_Mappings, $0004(A1)  ; Offset_0x00B036
                move.w  #$26BC, $0002(A1)
                bsr     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
                move.b  #$04, $0001(A1)
                move.b  #$02, $0018(A1)
                move.b  #$47, $0020(A1)
                move.b  #$08, $0019(A1)
                move.b  $0023(A0), $0023(A1)
                move.b  D1, $0034(A1)
                addq.w  #$01, D1
                add.w   D5, D2
                add.w   D6, D3
                swap.w  D1
                dbra    D1, Offset_0x00AC6E   
Offset_0x00ACCE:
                move.b  ($FFFFFEC3).w, $001A(A0)
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x00AD1E
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00ACEA:
                addq.b  #$02, $0024(A0)
                move.b  #$00, $0020(A0)
                move.b  #$01, $0018(A0)
                bsr     Offset_0x00AD22
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                move.b  $0034(A0), D1
                bset    D1, $02(A2, D0)
Offset_0x00AD10:
                lea     (Offset_0x00B02E), A1
                bsr     AnimateSprite           ; Offset_0x00D412
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00AD1E:
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x00AD22:
                addq.w  #$01, ($FFFFFE20).w
                ori.b   #$01, ($FFFFFE1D).w
                move.w  #$00B5, D0
                cmpi.w  #$0064, ($FFFFFE20).w
                bcs.s   Offset_0x00AD5C
                bset    #$01, ($FFFFFE1B).w
                beq.s   Offset_0x00AD50
                cmpi.w  #$00C8, ($FFFFFE20).w
                bcs.s   Offset_0x00AD5C
                bset    #$02, ($FFFFFE1B).w
                bne.s   Offset_0x00AD5C
Offset_0x00AD50:
                addq.b  #$01, ($FFFFFE12).w
                addq.b  #$01, ($FFFFFE1C).w
                move.w  #$0088, D0           ; +1UP Sound - Sonic 1 LeftOver
Offset_0x00AD5C:
                jmp     (Play_Sfx)              ; Offset_0x0014C6
;=============================================================================== 
; Object 0x25 - Rings  
; [ End ]
;===============================================================================  

;=============================================================================== 
; Object 0x37 - Rings flying out of you when you get hit 
; [ End ]
;=============================================================================== 
Obj_0x37_Rings_Out: ; Offset_0x00AD62:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Rings_Out_Index(PC, D0), D1 ; Offset_0x00AD70
                jmp     Rings_Out_Index(PC, D1)     ; Offset_0x00AD70
Rings_Out_Index: ; Offset_0x00AD70:
                dc.w    Offset_0x00AD7A-Rings_Out_Index
                dc.w    Offset_0x00AE3E-Rings_Out_Index
                dc.w    Offset_0x00AE90-Rings_Out_Index
                dc.w    Offset_0x00AEA4-Rings_Out_Index
                dc.w    Offset_0x00AEB2-Rings_Out_Index
Offset_0x00AD7A:
                move.l  A0, A1
                moveq   #$00, D5
                move.w  ($FFFFFE20).w, D5
                moveq   #$20, D0
                cmp.w   D0, D5
                bcs.s   Offset_0x00AD8A
                move.w  D0, D5
Offset_0x00AD8A:
                subq.w  #$01, D5
                move.w  #$0288, D4
                bra.s   Offset_0x00AD9A
Offset_0x00AD92:  
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne     Offset_0x00AE22
Offset_0x00AD9A:
                move.b  #$37, $0000(A1)
                addq.b  #$02, $0024(A1)
                move.b  #$08, $0016(A1)
                move.b  #$08, $0017(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  #Rings_Mappings, $0004(A1)  ; Offset_0x00B036
                move.w  #$26BC, $0002(A1)
                bsr     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
                move.b  #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$47, $0020(A1)
                move.b  #$08, $0019(A1)
                move.b  #$FF, ($FFFFFEC6).w
                tst.w   D4
                bmi.s   Offset_0x00AE12
                move.w  D4, D0
                bsr     CalcSine                ; Offset_0x00320A
                move.w  D4, D2
                lsr.w   #$08, D2
                asl.w   D2, D0
                asl.w   D2, D1
                move.w  D0, D2
                move.w  D1, D3
                addi.b  #$10, D4
                bcc.s   Offset_0x00AE12
                subi.w  #$0080, D4
                bcc.s   Offset_0x00AE12
                move.w  #$0288, D4
Offset_0x00AE12:
                move.w  D2, $0010(A1)
                move.w  D3, $0012(A1)
                neg.w   D2
                neg.w   D4
                dbra    D5, Offset_0x00AD92 
Offset_0x00AE22:                 
                move.w  #$0000, ($FFFFFE20).w
                move.b  #$80, ($FFFFFE1D).w
                move.b  #$00, ($FFFFFE1B).w
                move.w  #$00C6, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x00AE3E:
                move.b  ($FFFFFEC7).w, $001A(A0)
                bsr     SpeedToPos              ; Offset_0x00D27A
                addi.w  #$0018, $0012(A0)
                bmi.s   Offset_0x00AE78
                move.b  ($FFFFFE0F).w, D0
                add.b   D7, D0
                andi.b  #$03, D0
                bne.s   Offset_0x00AE78
                jsr     Offset_0x0138F4
                tst.w   D1
                bpl.s   Offset_0x00AE78
                add.w   D1, $000C(A0)
                move.w  $0012(A0), D0
                asr.w   #$02, D0
                sub.w   D0, $0012(A0)
                neg.w   $0012(A0)
Offset_0x00AE78:
                tst.b   ($FFFFFEC6).w
                beq.s   Offset_0x00AEB2
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs.s   Offset_0x00AEB2
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00AE90:
                addq.b  #$02, $0024(A0)
                move.b  #$00, $0020(A0)
                move.b  #$01, $0018(A0)
                bsr     Offset_0x00AD22
Offset_0x00AEA4:
                lea     (Offset_0x00B02E), A1
                bsr     AnimateSprite           ; Offset_0x00D412
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00AEB2:
                bra     DeleteObject            ; Offset_0x00D3B4
;=============================================================================== 
; Object 0x37 - Rings flying out of you when you get hit   
; [ End ]
;===============================================================================                 
                
;=============================================================================== 
; Object 0x4B - Big Ring (Special Stage Access)   
;               Unused - Sonic 1 LeftOver
; [ Begin ]
;===============================================================================                     
Obj_0x4B_Big_Ring: ; Offset_0x00AEB6:  
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Big_Ring_Index(PC, D0), D1  ; Offset_0x00AEC4
                jmp     Big_Ring_Index(PC, D1)      ; Offset_0x00AEC4
Big_Ring_Index: ; Offset_0x00AEC4:
                dc.w    Offset_0x00AECC-Big_Ring_Index
                dc.w    Offset_0x00AF1A-Big_Ring_Index
                dc.w    Offset_0x00AF38-Big_Ring_Index
                dc.w    Offset_0x00AF7C-Big_Ring_Index
Offset_0x00AECC:                
                move.l  #Big_Ring_Mappings, $0004(A0) ; Offset_0x00B09A
                move.w  #$2400, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$40, $0019(A0)
                tst.b   $0001(A0)
                bpl.s   Offset_0x00AF1A
                cmpi.b  #$06, ($FFFFFE57).w
                beq     Offset_0x00AF7C
                cmpi.w  #$0032, ($FFFFFE20).w
                bcc.s   Offset_0x00AF04
                rts
Offset_0x00AF04:
                addq.b  #$02, $0024(A0)
                move.b  #$02, $0018(A0)
                move.b  #$52, $0020(A0)
                move.w  #$0C40, ($FFFFF7BE).w
Offset_0x00AF1A:
                move.b  ($FFFFFEC3).w, $001A(A0)
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00AF38:
                subq.b  #$02, $0024(A0)
                move.b  #$00, $0020(A0)
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne     Offset_0x00AF70
                move.b  #$7C, $0000(A1)     ; Call Object 0x7C - Big Ring Flash
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  A0, $003C(A1)
                move.w  ($FFFFB008).w, D0
                cmp.w   $0008(A0), D0
                bcs.s   Offset_0x00AF70
                bset    #$00, $0001(A1)
Offset_0x00AF70:
                move.w  #$00C3, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                bra.s   Offset_0x00AF1A
Offset_0x00AF7C:
                bra     DeleteObject            ; Offset_0x00D3B4
;=============================================================================== 
; Object 0x4B - Big Ring (Special Stage Access)   
;               Unused - Sonic 1 LeftOver
; [ End ]
;===============================================================================  

;=============================================================================== 
; Object 0x7C - Big Ring Flash (Special Stage Access)   
;               Unused - Sonic 1 LeftOver
; [ Begin ]
;===============================================================================   
Obj_0x7C_Big_Ring_Flash: ; Offset_0x00AF80: 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Big_Ring_Flash_Index(PC, D0), D1   ; Offset_0x00AF8E
                jmp     Big_Ring_Flash_Index(PC, D1)       ; Offset_0x00AF8E
Big_Ring_Flash_Index: ; Offset_0x00AF8E:
                dc.w    Offset_0x00AF94-Big_Ring_Flash_Index
                dc.w    Offset_0x00AFC2-Big_Ring_Flash_Index
                dc.w    Offset_0x00B02A-Big_Ring_Flash_Index
Offset_0x00AF94:                
                addq.b  #$02, $0024(A0)
                move.l  #Big_Ring_Flash_Mappings, $0004(A0) ; Offset_0x00B19A
                move.w  #$2462, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$00, $0018(A0)
                move.b  #$20, $0019(A0)
                move.b  #$FF, $001A(A0)
Offset_0x00AFC2:  
                bsr.s   Offset_0x00AFDC
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2 
Offset_0x00AFDC:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x00B01A
                move.b  #$01, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$08, $001A(A0)
                bcc.s   Offset_0x00B01C
                cmpi.b  #$03, $001A(A0)
                bne.s   Offset_0x00B01A
                move.l  $003C(A0), A1
                move.b  #$06, $0024(A1)
                move.b  #$1C, ($FFFFB01C).w
                move.b  #$01, ($FFFFF7CD).w
                clr.b   ($FFFFFE2D).w
                clr.b   ($FFFFFE2C).w
Offset_0x00B01A:
                rts
Offset_0x00B01C:
                addq.b  #$02, $0024(A0)
                move.w  #$0000, ($FFFFB000).w
                addq.l  #$04, A7
                rts
Offset_0x00B02A:
                bra     DeleteObject            ; Offset_0x00D3B4
;=============================================================================== 
; Object 0x7C - Big Ring Flash (Special Stage Access)   
;               Unused - Sonic 1 LeftOver
; [ End ]
;===============================================================================  
Offset_0x00B02E:
                dc.w    $0002, $0504, $0506, $07FC  
Rings_Mappings: ; Offset_0x00B036:
                dc.w    Rings_Map_01-Rings_Mappings
                dc.w    Rings_Map_02-Rings_Mappings
                dc.w    Rings_Map_03-Rings_Mappings
                dc.w    Rings_Map_04-Rings_Mappings
                dc.w    Rings_Map_05-Rings_Mappings
                dc.w    Rings_Map_06-Rings_Mappings
                dc.w    Rings_Map_07-Rings_Mappings
                dc.w    Rings_Map_08-Rings_Mappings
                dc.w    Rings_Map_Null-Rings_Mappings
Rings_Map_01: ; Offset_0x00B048:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Rings_Map_02: ; Offset_0x00B052:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
Rings_Map_03: ; Offset_0x00B05C:
                dc.w    $0001
                dc.l    $F8010008, $0004FFFC
Rings_Map_04: ; Offset_0x00B066:
                dc.w    $0001
                dc.l    $F8050804, $0802FFF8
Rings_Map_05: ; Offset_0x00B070:
                dc.w    $0001
                dc.l    $F805000A, $0005FFF8
Rings_Map_06: ; Offset_0x00B07A:
                dc.w    $0001
                dc.l    $F805180A, $1805FFF8
Rings_Map_07: ; Offset_0x00B084:
                dc.w    $0001
                dc.l    $F805080A, $0805FFF8
Rings_Map_08: ; Offset_0x00B08E:
                dc.w    $0001
                dc.l    $F805100A, $1005FFF8
Rings_Map_Null: ; Offset_0x00B098:
                dc.w    $0000                  
Big_Ring_Mappings: ; Offset_0x00B09A:
                dc.w    Big_Ring_Map_01-Big_Ring_Mappings
                dc.w    Big_Ring_Map_02-Big_Ring_Mappings
                dc.w    Big_Ring_Map_03-Big_Ring_Mappings
                dc.w    Big_Ring_Map_04-Big_Ring_Mappings
Big_Ring_Map_01: ; Offset_0x00B0A2:
                dc.w    $000A
                dc.l    $E0080000, $0000FFE8, $E0080003, $00010000
                dc.l    $E80C0006, $0003FFE0, $E80C000A, $00050000
                dc.l    $F007000E, $0007FFE0, $F0070016, $000B0010
                dc.l    $100C001E, $000FFFE0, $100C0022, $00110000
                dc.l    $18080026, $0013FFE8, $18080029, $00140000
Big_Ring_Map_02: ; Offset_0x00B0F4:
                dc.w    $0008
                dc.l    $E00C002C, $0016FFF0, $E8080030, $0018FFE8
                dc.l    $E8090033, $00190000, $F0070039, $001CFFE8
                dc.l    $F8050041, $00200008, $08090045, $00220000
                dc.l    $1008004B, $0025FFE8, $180C004E, $0027FFF0
Big_Ring_Map_03: ; Offset_0x00B136:
                dc.w    $0004
                dc.l    $E0070052, $0029FFF4, $E0030852, $08290004
                dc.l    $0007005A, $002DFFF4, $0003085A, $082D0004
Big_Ring_Map_04: ; Offset_0x00B158:
                dc.w    $0008
                dc.l    $E00C082C, $0816FFF0, $E8080830, $08180000
                dc.l    $E8090833, $0819FFE8, $F0070839, $081C0008
                dc.l    $F8050841, $0820FFE8, $08090845, $0822FFE8
                dc.l    $1008084B, $08250000, $180C084E, $0827FFF0 
Big_Ring_Flash_Mappings: ; Offset_0x00B19A:
                dc.w    Big_Ring_Flash_Map_01-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_02-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_03-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_04-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_05-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_06-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_07-Big_Ring_Flash_Mappings
                dc.w    Big_Ring_Flash_Map_08-Big_Ring_Flash_Mappings
Big_Ring_Flash_Map_01: ; Offset_0x00B1AA:
                dc.w    $0002
                dc.l    $E00F0000, $00000000, $000F1000, $10000000
Big_Ring_Flash_Map_02: ; Offset_0x00B1BC:
                dc.w    $0004
                dc.l    $E00F0010, $0008FFF0, $E0070020, $00100010
                dc.l    $000F1010, $1008FFF0, $00071020, $10100010
Big_Ring_Flash_Map_03: ; Offset_0x00B1DE:
                dc.w    $0004
                dc.l    $E00F0028, $0014FFE8, $E00B0038, $001C0008
                dc.l    $000F1028, $1014FFE8, $000B1038, $101C0008
Big_Ring_Flash_Map_04: ; Offset_0x00B200:
                dc.w    $0004
                dc.l    $E00F0834, $081AFFE0, $E00F0034, $001A0000
                dc.l    $000F1834, $181AFFE0, $000F1034, $101A0000
Big_Ring_Flash_Map_05: ; Offset_0x00B222:
                dc.w    $0004
                dc.l    $E00B0838, $081CFFE0, $E00F0828, $0814FFF8
                dc.l    $000B1838, $181CFFE0, $000F1828, $1814FFF8
Big_Ring_Flash_Map_06: ; Offset_0x00B244:
                dc.w    $0004
                dc.l    $E0070820, $0810FFE0, $E00F0810, $0808FFF0
                dc.l    $00071820, $1810FFE0, $000F1810, $1808FFF0
Big_Ring_Flash_Map_07: ; Offset_0x00B266:
                dc.w    $0002
                dc.l    $E00F0800, $0800FFE0, $000F1800, $1800FFE0
Big_Ring_Flash_Map_08: ; Offset_0x00B278:
                dc.w    $0004
                dc.l    $E00F0044, $0022FFE0, $E00F0844, $08220000
                dc.l    $000F1044, $1022FFE0, $000F1844, $18220000
                nop                             ; Filler
;=============================================================================== 
; Object 0x26 - Monitors 
; [ Begin ]
;===============================================================================                  
Obj_0x26_Monitors: ; Offset_0x00B29C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Monitors_Index(PC, D0), D1 ; Offset_0x00B2AA
                jmp     Monitors_Index(PC, D1)     ; Offset_0x00B2AA
Monitors_Index: ; Offset_0x00B2AA:
                dc.w    Offset_0x00B2B4-Monitors_Index
                dc.w    Offset_0x00B31A-Monitors_Index
                dc.w    Offset_0x00B40C-Monitors_Index
                dc.w    Offset_0x00B3FE-Monitors_Index
                dc.w    Offset_0x00B408-Monitors_Index
Offset_0x00B2B4:
                addq.b  #$02, $0024(A0)
                move.b  #$0E, $0016(A0)
                move.b  #$0E, $0017(A0)
                move.l  #Monitors_Mappings, $0004(A0) ; Offset_0x00B6D2
                move.w  #$0680, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$0F, $0019(A0)
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                bclr    #$07, $02(A2, D0)
                btst    #$00, $02(A2, D0)
                beq.s   Offset_0x00B30E
                move.b  #$08, $0024(A0)
                move.b  #$0B, $001A(A0)
                rts
Offset_0x00B30E:
                move.b  #$46, $0020(A0)
                move.b  $0028(A0), $001C(A0)
Offset_0x00B31A:
                move.b  $0025(A0), D0
                beq.s   Offset_0x00B374
                subq.b  #$02, D0
                bne.s   Offset_0x00B354
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                bsr     Offset_0x00FBC0
                btst    #$03, $0022(A1)
                bne     Offset_0x00B344
                clr.b   $0025(A0)
                bra     Offset_0x00B3FE
Offset_0x00B344:
                move.w  #$0010, D3
                move.w  $0008(A0), D2
                bsr     Offset_0x00F8E4
                bra     Offset_0x00B3FE
Offset_0x00B354:
                bsr     ObjectFall              ; Offset_0x00D24E
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl     Offset_0x00B3FE
                add.w   D1, $000C(A0)
                clr.w   $0012(A0)
                clr.b   $0025(A0)
                bra     Offset_0x00B3FE
Offset_0x00B374:
                move.w  #$001A, D1
                move.w  #$000F, D2
                bsr     Offset_0x00B5F0
                beq     Offset_0x00B3E4
                tst.w   $0012(A1)
                bmi.s   Offset_0x00B392
                cmpi.b  #$02, $001C(A1)
                beq.s   Offset_0x00B3E4
Offset_0x00B392:
                tst.w   D1
                bpl.s   Offset_0x00B3A8
                sub.w   D3, $000C(A1)
                bsr     Offset_0x00FAF2
                move.b  #$02, $0025(A0)
                bra     Offset_0x00B3FE
Offset_0x00B3A8:
                tst.w   D0
                beq     Offset_0x00B3CE
                bmi.s   Offset_0x00B3B8
                tst.w   $0010(A1)
                bmi.s   Offset_0x00B3CE
                bra.s   Offset_0x00B3BE
Offset_0x00B3B8:
                tst.w   $0010(A1)
                bpl.s   Offset_0x00B3CE
Offset_0x00B3BE:
                sub.w   D0, $0008(A1)
                move.w  #$0000, $0014(A1)
                move.w  #$0000, $0010(A1)
Offset_0x00B3CE:
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00B3F2
                bset    #$05, $0022(A1)
                bset    #$05, $0022(A0)
                bra.s   Offset_0x00B3FE
Offset_0x00B3E4:
                btst    #$05, $0022(A0)
                beq.s   Offset_0x00B3FE
                move.w  #$0001, $001C(A1)
Offset_0x00B3F2:
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
Offset_0x00B3FE:
                lea     (Offset_0x00B66A), A1
                bsr     AnimateSprite           ; Offset_0x00D412
Offset_0x00B408:
                bra     MarkObjGone             ; Offset_0x00D2A0
Offset_0x00B40C:
                addq.b  #$02, $0024(A0)
                move.b  #$00, $0020(A0)
                bsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x00B434
                move.b  #$2E, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $001C(A0), $001C(A1)
Offset_0x00B434:
                bsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x00B450
                move.b  #$27, $0000(A1)
                addq.b  #$02, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
Offset_0x00B450:
                lea     ($FFFFFC00).w, A2                   
                moveq   #$00, D0
                move.b  $0023(A0), D0
                bset    #$00, $02(A2, D0)
                move.b  #$0A, $001C(A0)
                bra     DisplaySprite           ; Offset_0x00D3C2
;=============================================================================== 
; Object 0x26 - Monitors 
; [ End ]
;===============================================================================   
;=============================================================================== 
; Object 0x2E - Monitors Contents
; [ Begin ]
;===============================================================================                   
Obj_0x2E_Monitors_Contents: ; Offset_0x00B46A:                
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00B478(PC, D0), D1
                jmp     Offset_0x00B478(PC, D1)
Offset_0x00B478:
                dc.w    Offset_0x00B47E-Offset_0x00B478
                dc.w    Offset_0x00B4C2-Offset_0x00B478
                dc.w    Offset_0x00B5E4-Offset_0x00B478
Offset_0x00B47E:
                addq.b  #$02, $0024(A0)
                move.w  #$0680, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$24, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$08, $0019(A0)
                move.w  #$FD00, $0012(A0)
                moveq   #$00, D0
                move.b  $001C(A0), D0
                addq.b  #$01, D0
                move.b  D0, $001A(A0)
                move.l  #Monitors_Mappings, A1  ; Offset_0x00B6D2
                add.b   D0, D0
                adda.w  $00(A1, D0), A1
                addq.w  #$02, A1
                move.l  A1, $0004(A0)
Offset_0x00B4C2:
                bsr.s   Offset_0x00B4C8
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00B4C8:
                tst.w   $0012(A0)
                bpl     Offset_0x00B4DC
                bsr     SpeedToPos              ; Offset_0x00D27A
                addi.w  #$0018, $0012(A0)
                rts
Offset_0x00B4DC:
                addq.b  #$02, $0024(A0)
                move.w  #$001D, $001E(A0)
                moveq   #$00, D0
                move.b  $001C(A0), D0
                add.w   D0, D0
                move.w  Monitor_Subroutines(PC, D0), D0 ; Offset_0x00B4F6
                jmp     Monitor_Subroutines(PC, D0)     ; Offset_0x00B4F6
Monitor_Subroutines: ; Offset_0x00B4F6:
                dc.w    Monitor_Null-Monitor_Subroutines          ; Offset_0x00B50A
                dc.w    Monitor_SonicLife-Monitor_Subroutines     ; Offset_0x00B50C
                dc.w    Monitor_TailsLife-Monitor_Subroutines     ; Offset_0x00B51E
                dc.w    Monitor_Null-Monitor_Subroutines          ; Offset_0x00B50A
                dc.w    Monitor_Rings-Monitor_Subroutines         ; Offset_0x00B530
                dc.w    Monitor_Shoes-Monitor_Subroutines         ; Offset_0x00B56A
                dc.w    Monitor_Shield-Monitor_Subroutines        ; Offset_0x00B592
                dc.w    Monitor_Invincibility-Monitor_Subroutines ; Offset_0x00B5A8
                dc.w    Monitor_SuperSonic-Monitor_Subroutines    ; Offset_0x00B5D4
                dc.w    Monitor_Null-Monitor_Subroutines          ; Offset_0x00B50A
Monitor_Null: ; Offset_0x00B50A:
                rts
Monitor_SonicLife: ; Offset_0x00B50C:
                addq.b  #$01, ($FFFFFE12).w
                addq.b  #$01, ($FFFFFE1C).w
                move.w  #$0098, D0
                jmp     (Play_Music)            ; Offset_0x0014C0
Monitor_TailsLife: ; Offset_0x00B51E:
                addq.b  #$01, ($FFFFFE12).w
                addq.b  #$01, ($FFFFFE1C).w
                move.w  #$0098, D0
                jmp     (Play_Music)            ; Offset_0x0014C0
Monitor_Rings: ; Offset_0x00B530:
                addi.w  #$000A, ($FFFFFE20).w
                ori.b   #$01, ($FFFFFE1D).w
                cmpi.w  #$0064, ($FFFFFE20).w
                bcs.s   Offset_0x00B560
                bset    #$01, ($FFFFFE1B).w
                beq     Monitor_SonicLife       ; Offset_0x00B50C
                cmpi.w  #$00C8, ($FFFFFE20).w
                bcs.s   Offset_0x00B560
                bset    #$02, ($FFFFFE1B).w
                beq     Monitor_SonicLife       ; Offset_0x00B50C
Offset_0x00B560:
                move.w  #$00B5, D0
                jmp     (Play_Music)            ; Offset_0x0014C0
Monitor_Shoes: ; Offset_0x00B56A:
                move.b  #$01, ($FFFFFE2E).w
                move.w  #$04B0, ($FFFFB034).w
                move.w  #$0C00, ($FFFFF760).w
                move.w  #$0018, ($FFFFF762).w
                move.w  #$0080, ($FFFFF764).w
                move.w  #$00FB, D0
                jmp     (Play_Music)            ; Offset_0x0014C0
Monitor_Shield: ; Offset_0x00B592:
                move.b  #$01, ($FFFFFE2C).w
                move.b  #$38, ($FFFFB180).w
                move.w  #$00AF, D0
                jmp     (Play_Music)            ; Offset_0x0014C0
Monitor_Invincibility: ; Offset_0x00B5A8:
                move.b  #$01, ($FFFFFE2D).w
                move.w  #$04B0, ($FFFFB032).w
                move.b  #$35, ($FFFFB200).w
                tst.b   ($FFFFF7AA).w
                bne.s   Offset_0x00B5D2
                cmpi.w  #$000C, ($FFFFFE14).w
                bls.s   Offset_0x00B5D2
                move.w  #$0095, D0
                jmp     (Play_Music)            ; Offset_0x0014C0
Offset_0x00B5D2:
                rts
Monitor_SuperSonic: ; Offset_0x00B5D4:
                move.b  #$01, ($FFFFF65F).w
                move.w  #$00AF, D0
                jmp     (Play_Music)            ; Offset_0x0014C0
Offset_0x00B5E4:
                subq.w  #$01, $001E(A0)
                bmi     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00B5F0:
                lea     ($FFFFB000).w, A1
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00B648
                move.w  D1, D3
                add.w   D3, D3
                cmp.w   D3, D0
                bhi.s   Offset_0x00B648
                move.b  $0016(A1), D3
                ext.w   D3
                add.w   D3, D2
                move.w  $000C(A1), D3
                sub.w   $000C(A0), D3
                add.w   D2, D3
                bmi.s   Offset_0x00B648
                add.w   D2, D2
                cmp.w   D2, D3
                bcc.s   Offset_0x00B648
                tst.b   $002A(A1)
                bmi.s   Offset_0x00B648
                cmpi.b  #$06, ($FFFFB024).w
                bcc.s   Offset_0x00B648
                tst.w   ($FFFFFE08).w
                bne.s   Offset_0x00B648
                cmp.w   D0, D1
                bcc.s   Offset_0x00B63E
                add.w   D1, D1
                sub.w   D1, D0
Offset_0x00B63E:
                cmpi.w  #$0010, D3
                bcs.s   Offset_0x00B64C
Offset_0x00B644:                
                moveq   #$01, D1
                rts
Offset_0x00B648:
                moveq   #$00, D1
                rts
Offset_0x00B64C:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addq.w  #$04, D1
                move.w  D1, D2
                add.w   D2, D2
                add.w   $0008(A1), D1
                sub.w   $0008(A0), D1
                bmi.s   Offset_0x00B644
                cmp.w   D2, D1
                bcc.s   Offset_0x00B644
                moveq   #$FFFFFFFF, D1
                rts    
Offset_0x00B66A:
                dc.w    Offset_0x00B680-Offset_0x00B66A
                dc.w    Offset_0x00B684-Offset_0x00B66A
                dc.w    Offset_0x00B68C-Offset_0x00B66A
                dc.w    Offset_0x00B694-Offset_0x00B66A
                dc.w    Offset_0x00B69C-Offset_0x00B66A
                dc.w    Offset_0x00B6A4-Offset_0x00B66A
                dc.w    Offset_0x00B6AC-Offset_0x00B66A
                dc.w    Offset_0x00B6B4-Offset_0x00B66A
                dc.w    Offset_0x00B6BC-Offset_0x00B66A
                dc.w    Offset_0x00B6C4-Offset_0x00B66A
                dc.w    Offset_0x00B6CC-Offset_0x00B66A
Offset_0x00B680:
                dc.b    $01, $00, $01, $FF
Offset_0x00B684:
                dc.b    $01, $00, $02, $02, $01, $02, $02, $FF
Offset_0x00B68C:
                dc.b    $01, $00, $03, $03, $01, $03, $03, $FF
Offset_0x00B694:
                dc.b    $01, $00, $04, $04, $01, $04, $04, $FF
Offset_0x00B69C:
                dc.b    $01, $00, $05, $05, $01, $05, $05, $FF
Offset_0x00B6A4:
                dc.b    $01, $00, $06, $06, $01, $06, $06, $FF
Offset_0x00B6AC:
                dc.b    $01, $00, $07, $07, $01, $07, $07, $FF
Offset_0x00B6B4:
                dc.b    $01, $00, $08, $08, $01, $08, $08, $FF
Offset_0x00B6BC:
                dc.b    $01, $00, $09, $09, $01, $09, $09, $FF
Offset_0x00B6C4:
                dc.b    $01, $00, $0A, $0A, $01, $0A, $0A, $FF
Offset_0x00B6CC:
                dc.b    $02, $00, $01, $0B, $FE, $01
Monitors_Mappings: ; Offset_0x00B6D2:
                dc.w    Offset_0x00B6EA-Monitors_Mappings
                dc.w    Offset_0x00B6F4-Monitors_Mappings
                dc.w    Offset_0x00B706-Monitors_Mappings
                dc.w    Offset_0x00B718-Monitors_Mappings
                dc.w    Offset_0x00B72A-Monitors_Mappings
                dc.w    Offset_0x00B73C-Monitors_Mappings
                dc.w    Offset_0x00B74E-Monitors_Mappings
                dc.w    Offset_0x00B760-Monitors_Mappings
                dc.w    Offset_0x00B772-Monitors_Mappings
                dc.w    Offset_0x00B784-Monitors_Mappings
                dc.w    Offset_0x00B796-Monitors_Mappings
                dc.w    Offset_0x00B7A8-Monitors_Mappings
Offset_0x00B6EA:
                dc.w    $0001
                dc.l    $EF0F0000, $0000FFF0
Offset_0x00B6F4:
                dc.w    $0002
                dc.l    $F5050018, $000CFFF8, $EF0F0000, $0000FFF0
Offset_0x00B706:
                dc.w    $0002
                dc.l    $F5050154, $00AAFFF8, $EF0F0000, $0000FFF0
Offset_0x00B718:
                dc.w    $0002
                dc.l    $F505001C, $000EFFF8, $EF0F0000, $0000FFF0
Offset_0x00B72A:
                dc.w    $0002
                dc.l    $F5050020, $0010FFF8, $EF0F0000, $0000FFF0
Offset_0x00B73C:
                dc.w    $0002
                dc.l    $F5052024, $2012FFF8, $EF0F0000, $0000FFF0
Offset_0x00B74E:
                dc.w    $0002
                dc.l    $F5050028, $0014FFF8, $EF0F0000, $0000FFF0
Offset_0x00B760:
                dc.w    $0002
                dc.l    $F505002C, $0016FFF8, $EF0F0000, $0000FFF0
Offset_0x00B772:
                dc.w    $0002
                dc.l    $F5050030, $0018FFF8, $EF0F0000, $0000FFF0
Offset_0x00B784:
                dc.w    $0002
                dc.l    $F5050034, $001AFFF8, $EF0F0000, $0000FFF0
Offset_0x00B796:
                dc.w    $0002
                dc.l    $F5050038, $001CFFF8, $EF0F0000, $0000FFF0
Offset_0x00B7A8:
                dc.w    $0001
                dc.l    $FF0D0010, $0008FFF0                
;=============================================================================== 
; Object 0x2E - Monitors Contents
; [ End ]
;===============================================================================          
                nop                             ; Filler                
;=============================================================================== 
; Object 0x0E - Sonic & Tails in Title Screen   
; [ Begin ]
;===============================================================================                              
Obj_0x0E_Sonic_Tails: ; Offset_0x00B7B4:                
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Sonic_Tails_Index(PC, D0), D1  ; Offset_0x00B7C2
                jmp     Sonic_Tails_Index(PC, D1)      ; Offset_0x00B7C2
Sonic_Tails_Index: ; Offset_0x00B7C2:
                dc.w    Offset_0x00B7CA-Sonic_Tails_Index
                dc.w    Offset_0x00B80C-Sonic_Tails_Index
                dc.w    Offset_0x00B820-Sonic_Tails_Index
                dc.w    Offset_0x00B836-Sonic_Tails_Index             
Offset_0x00B7CA:
                addq.b  #$02, $0024(A0)
                move.w  #$0148, $0008(A0)
                move.w  #$00C4, $000A(A0)
                move.l  #Sonic_Tails_Mappings, $0004(A0) ; Offset_0x00BAA2
                move.w  #$4200, $0002(A0)
                move.b  #$01, $0018(A0)
                move.b  #$1D, $001F(A0)
                tst.b   $001A(A0)
                beq.s   Offset_0x00B80C
                move.w  #$00FC, $0008(A0)
                move.w  #$00CC, $000A(A0)
                move.w  #$2200, $0002(A0) 
Offset_0x00B80C:
                bra     DisplaySprite           ; Offset_0x00D3C2                   
Offset_0x00B810:
                subq.b  #$01, $001F(A0)
                bpl.s   Offset_0x00B81E
                addq.b  #$02, $0024(A0)
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00B81E:
                rts
Offset_0x00B820:
                subi.w  #$0008, $000A(A0)
                cmpi.w  #$0096, $000A(A0)
                bne.s   Offset_0x00B832
                addq.b  #$02, $0024(A0)
Offset_0x00B832:
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00B836:
                bra     DisplaySprite           ; Offset_0x00D3C2
;=============================================================================== 
; Object 0x0E - Object 0x0E - Sonic & Tails in Title Screen   
; [ End ]
;===============================================================================                  
                
;=============================================================================== 
; Object 0x0F 
; [ Begin ]
;===============================================================================    
Obj_0x0F: ; Offset_0x00B83A:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00B84C(PC, D0), D1
                jsr     Offset_0x00B84C(PC, D1)
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00B84C:
                dc.w    Offset_0x00B852-Offset_0x00B84C
                dc.w    Offset_0x00B874-Offset_0x00B84C
                dc.w    Offset_0x00B874-Offset_0x00B84C
Offset_0x00B852:
                addq.b  #$02, $0024(A0)
                move.w  #$0090, $0008(A0)
                move.w  #$0090, $000A(A0)
                move.l  #Offset_0x00B896, $0004(A0)
                move.w  #$0680, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
Offset_0x00B874:
                move.b  ($FFFFF605).w, D0
                btst    #$05, D0
                beq.s   Offset_0x00B888
                addq.b  #$01, $001A(A0)
                andi.b  #$0F, $001A(A0)
Offset_0x00B888:
                btst    #$04, D0
                beq.s   Offset_0x00B894
                bchg    #0, ($FFFFFFD9).w
Offset_0x00B894:
                rts
Offset_0x00B896:
                dc.w    Offset_0x00B8B6-Offset_0x00B896
                dc.w    Offset_0x00B8C0-Offset_0x00B896
                dc.w    Offset_0x00B8CA-Offset_0x00B896
                dc.w    Offset_0x00B8D4-Offset_0x00B896
                dc.w    Offset_0x00B8DE-Offset_0x00B896
                dc.w    Offset_0x00B8E8-Offset_0x00B896
                dc.w    Offset_0x00B8F2-Offset_0x00B896
                dc.w    Offset_0x00B8FC-Offset_0x00B896
                dc.w    Offset_0x00B906-Offset_0x00B896
                dc.w    Offset_0x00B910-Offset_0x00B896
                dc.w    Offset_0x00B91A-Offset_0x00B896
                dc.w    Offset_0x00B924-Offset_0x00B896
                dc.w    Offset_0x00B92E-Offset_0x00B896
                dc.w    Offset_0x00B938-Offset_0x00B896
                dc.w    Offset_0x00B942-Offset_0x00B896
                dc.w    Offset_0x00B94C-Offset_0x00B896
Offset_0x00B8B6:
                dc.w    $0001
                dc.l    $00000000, $00000000
Offset_0x00B8C0:
                dc.w    $0001
                dc.l    $00010000, $00000000
Offset_0x00B8CA:
                dc.w    $0001
                dc.l    $00020000, $00000000
Offset_0x00B8D4:
                dc.w    $0001
                dc.l    $00030000, $00000000
Offset_0x00B8DE:
                dc.w    $0001
                dc.l    $00040000, $00000000
Offset_0x00B8E8:
                dc.w    $0001
                dc.l    $00050000, $00000000
Offset_0x00B8F2:
                dc.w    $0001
                dc.l    $00060000, $00000000
Offset_0x00B8FC:
                dc.w    $0001
                dc.l    $00070000, $00000000
Offset_0x00B906:
                dc.w    $0001
                dc.l    $00080000, $00000000
Offset_0x00B910:
                dc.w    $0001
                dc.l    $00090000, $00000000
Offset_0x00B91A:
                dc.w    $0001
                dc.l    $000A0000, $00000000
Offset_0x00B924:
                dc.w    $0001
                dc.l    $000B0000, $00000000
Offset_0x00B92E:
                dc.w    $0001
                dc.l    $000C0000, $00000000
Offset_0x00B938:
                dc.w    $0001
                dc.l    $000D0000, $00000000
Offset_0x00B942:
                dc.w    $0001
                dc.l    $000E0000, $00000000
Offset_0x00B94C:
                dc.w    $0001
                dc.l    $000F0000, $00000000
;=============================================================================== 
; Object 0x0F 
; [ End ]
;===============================================================================  
Offset_0x00B956:  ; Unknow Object Data
                dc.w    Offset_0x00B958-Offset_0x00B956
Offset_0x00B958:
                dc.b    $07, $00, $01, $02, $03, $04, $05, $06, $07, $FE, $02, $00, $00, $02, $1F, $00
                dc.b    $01, $FF
S1_Obj_0x0F_Mappings: ; Offset_0x00B96A:  ; Unknow Mappings
                dc.w    Offset_0x00B972-S1_Obj_0x0F_Mappings
                dc.w    Offset_0x00B974-S1_Obj_0x0F_Mappings
                dc.w    Offset_0x00B9A6-S1_Obj_0x0F_Mappings
                dc.w    Offset_0x00BA98-S1_Obj_0x0F_Mappings
Offset_0x00B972:
                dc.w    $0000
Offset_0x00B974:
                dc.w    $0006
                dc.l    $000C00F0, $00780000, $000000F3, $00790020
                dc.l    $000000F3, $00790030, $000C00F4, $007A0038
                dc.l    $000800F8, $007C0060, $000800FB, $007D0078
Offset_0x00B9A6:
                dc.w    $001E
                dc.l    $B80F0000, $0000FF80, $B80F0000, $0000FF80
                dc.l    $B80F0000, $0000FF80, $B80F0000, $0000FF80
                dc.l    $B80F0000, $0000FF80, $B80F0000, $0000FF80
                dc.l    $B80F0000, $0000FF80, $B80F0000, $0000FF80
                dc.l    $B80F0000, $0000FF80, $B80F0000, $0000FF80
                dc.l    $D80F0000, $0000FF80, $D80F0000, $0000FF80
                dc.l    $D80F0000, $0000FF80, $D80F0000, $0000FF80
                dc.l    $D80F0000, $0000FF80, $D80F0000, $0000FF80
                dc.l    $D80F0000, $0000FF80, $D80F0000, $0000FF80
                dc.l    $D80F0000, $0000FF80, $D80F0000, $0000FF80
                dc.l    $F80F0000, $0000FF80, $F80F0000, $0000FF80
                dc.l    $F80F0000, $0000FF80, $F80F0000, $0000FF80
                dc.l    $F80F0000, $0000FF80, $F80F0000, $0000FF80
                dc.l    $F80F0000, $0000FF80, $F80F0000, $0000FF80
                dc.l    $F80F0000, $0000FF80, $F80F0000, $0000FF80
Offset_0x00BA98:
                dc.w    $0001
                dc.l    $FC040000, $0000FFF8                                
Sonic_Tails_Mappings:                
Offset_0x00BAA2:                                          
                dc.w    Offset_0x00BAA6-Offset_0x00BAA2
                dc.w    Offset_0x00BB00-Offset_0x00BAA2 
Offset_0x00BAA6: ; Object $0E - Mappings
                dc.w    $000B ; Sonic in Title Screen
                dc.l    $D40D0000, $0000FFD8, $CC0E0008, $0004FFF8
                dc.l    $CC070014, $000A0018, $E40F001C, $000EFFE0
                dc.l    $E40B002C, $00160000, $EC070038, $001C0018
                dc.l    $040F0040, $0020FFD8, $040F0050, $0028FFF8
                dc.l    $0C060060, $00300018, $24040066, $0033FFE8
                dc.l    $240D0068, $0034FFF8
Offset_0x00BB00:
                dc.w    $000A ; Tails in Title Screen
                dc.l    $DC060070, $0038FFEC, $F40F0076, $003BFFD4
                dc.l    $F40F0086, $0043FFF4, $E4090096, $004BFFFC
                dc.l    $DC0B009C, $004E0014, $FC0800A8, $00540014
                dc.l    $040500AB, $00550014, $140400AF, $0057FFD4
                dc.l    $140D00B1, $0058FFE4, $140D00B9, $005C0004
                nop

               
;=============================================================================== 
; Object 0x34 - Title Cards / Splash Screen
; [ Begin ]
;===============================================================================   
Obj_0x34_Title_Cards: ; Offset_0x00BB54: 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Title_Cards_Index(PC, D0), D1 ; Offset_0x00BB62
                jmp     Title_Cards_Index(PC, D1)     ; Offset_0x00BB62
Title_Cards_Index: ; Offset_0x00BB62:                
                dc.w    Offset_0x00BB6A-Title_Cards_Index
                dc.w    Offset_0x00BBDC-Title_Cards_Index
                dc.w    Offset_0x00BC04-Title_Cards_Index
                dc.w    Offset_0x00BC04-Title_Cards_Index
Offset_0x00BB6A:
                move.l  A0, A1
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                move.w  D0, D2
                lea     (Title_Cards_Config), A3 ; Offset_0x00BC66
                lsl.w   #$04, D0
                adda.w  D0, A3
                lea     (Title_Cards_Main_Position), A2 ; Offset_0x00BC56
                moveq   #$03, D1
Title_Card_Loop: ; Offset_0x00BB86:                
                move.b  #$34, $0000(A1)
                move.w  (A3), $0008(A1)
                move.w  (A3)+, $0032(A1)
                move.w  (A3)+, $0030(A1)
                move.w  (A2)+, $000A(A1)
                move.b  (A2)+, $0024(A1)
                move.b  (A2)+, D0
                bne.s   Title_Cards_MakeSprite  ; Offset_0x00BBA6
                move.b  D2, D0
Title_Cards_MakeSprite: ; Offset_0x00BBA6:
                move.b  D0, $001A(A1)
                move.l  #Title_Cards_Mappings, $0004(A1) ; Offset_0x00C2A0
                move.w  #$8580, $0002(A1)
                bsr     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
                move.b  #$78, $0019(A1)
                move.b  #$00, $0001(A1)
                move.b  #$00, $0018(A1)
                move.w  #$003C, $001E(A1)
                lea     $0040(A1), A1
                dbra    D1, Title_Card_Loop     ; Offset_0x00BB86
Offset_0x00BBDC:
                moveq   #$10, D1
                move.w  $0030(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   Offset_0x00BBF0
                bge.s   Offset_0x00BBEC
                neg.w   D1
Offset_0x00BBEC:
                add.w   D1, $0008(A0)
Offset_0x00BBF0:                
                move.w  $0008(A0), D0
                bmi.s   Offset_0x00BC02
                cmpi.w  #$0200, D0
                bcc.s   Offset_0x00BC02
                rts
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00BC02:
                rts
Offset_0x00BC04:
                tst.w   $001E(A0)
                beq.s   Offset_0x00BC14
                subq.w  #$01, $001E(A0)
                rts
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00BC14:
                tst.b   $0001(A0)
                bpl.s   Offset_0x00BC42
                moveq   #$20, D1
                move.w  $0032(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   Offset_0x00BC42
                bge.s   Offset_0x00BC2A
                neg.w   D1
Offset_0x00BC2A:
                add.w   D1, $0008(A0)
                move.w  $0008(A0), D0
                bmi.s   Offset_0x00BC40
                cmpi.w  #$0200, D0
                bcc.s   Offset_0x00BC40
                rts
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00BC40:
                rts
Offset_0x00BC42:
                cmpi.b  #$04, $0024(A0)
                bne.s   Offset_0x00BC52
                moveq   #$02, D0
                jsr     LoadPLC                 ; Offset_0x00173C
Offset_0x00BC52:                
                bra     DeleteObject            ; Offset_0x00D3B4
Title_Cards_Main_Position: ; Offset_0x00BC56:
                dc.w    $00D0, $0200 ; Level Name Position X / Y
                dc.w    $00E4, $0206 ; "Zone" word Position X / Y
                dc.w    $00EA, $0207 ; "Act x" word Position X / Y
                dc.w    $00E0, $020A ; Oval Position X / Y
Title_Cards_Config: ; Offset_0x00BC66:                
                dc.w    $0000, $0120, $FEFC, $013C, $0414, $0154, $0214, $0154
                dc.w    $0000, $0120, $FEF4, $0134, $040C, $014C, $020C, $014C
                dc.w    $0000, $0120, $FEE0, $0120, $03F8, $0138, $01F8, $0138
                dc.w    $0000, $0120, $FEFC, $013C, $0414, $0154, $0214, $0154
                dc.w    $0000, $0120, $FF04, $0144, $041C, $015C, $021C, $015C
                dc.w    $0000, $0120, $FF04, $0144, $041C, $015C, $021C, $015C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
;=============================================================================== 
; Object 0x34 - Title Cards / Splash Screen
; [ End ]
;===============================================================================  
;=============================================================================== 
; Object 0x39 - Time Over / Game Over
; [ Begin ]
;=============================================================================== 
Obj_0x39_Time_Game_Over: ; Offset_0x00BD76:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Time_Game_Over_Index(PC, D0), D1 ; Offset_0x00BD84
                jmp     Time_Game_Over_Index(PC, D1)     ; Offset_0x00BD84
Time_Game_Over_Index: ; Offset_0x00BD84:
                dc.w    Offset_0x00BD8A-Time_Game_Over_Index
                dc.w    Offset_0x00BDCE-Time_Game_Over_Index
                dc.w    Offset_0x00BDF0-Time_Game_Over_Index
Offset_0x00BD8A:
                tst.l   ($FFFFF680).w
                beq.s   Offset_0x00BD92
                rts
Offset_0x00BD92:
                addq.b  #$02, $0024(A0)
                move.w  #$0050, $0008(A0)
                btst    #$00, $001A(A0)
                beq.s   Offset_0x00BDAA
                move.w  #$01F0, $0008(A0)
Offset_0x00BDAA:
                move.w  #$00F0, $000A(A0)
                move.l  #Time_Game_Over_Mappings, $0004(A0) ; Offset_0x00C558
                move.w  #$855E, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$00, $0001(A0)
                move.b  #$00, $0018(A0)
Offset_0x00BDCE:
                moveq   #$10, D1
                cmpi.w  #$0120, $0008(A0)
                beq.s   Offset_0x00BDE4
                bcs.s   Offset_0x00BDDC
                neg.w   D1
Offset_0x00BDDC:
                add.w   D1, $0008(A0)
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00BDE4:
                move.w  #$02D0, $001E(A0)
                addq.b  #$02, $0024(A0)
                rts
Offset_0x00BDF0:
                move.b  ($FFFFF605).w, D0
                andi.b  #$70, D0
                bne.s   Offset_0x00BE10
                btst    #$00, $001A(A0)
                bne.s   Offset_0x00BE34
                tst.w   $001E(A0)
                beq.s   Offset_0x00BE10
                subq.w  #$01, $001E(A0)
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00BE10:
                tst.b   ($FFFFFE1A).w
                bne.s   Offset_0x00BE2A
                move.b  #$14, ($FFFFF600).w
                tst.b   ($FFFFFE18).w
                bne.s   Offset_0x00BE34
                move.b  #$00, ($FFFFF600).w
                bra.s   Offset_0x00BE34
Offset_0x00BE2A:
                clr.l   ($FFFFFE38).w
                move.w  #$0001, ($FFFFFE02).w
Offset_0x00BE34:
                bra     DisplaySprite           ; Offset_0x00D3C2
;=============================================================================== 
; Object 0x39 - Time Over / Game Over
; [ End ]
;=============================================================================== 
;=============================================================================== 
; Object 0x3A - Level Results
; [ Begin ]
;=============================================================================== 
Obj_0x3A_Level_Results: ; Offset_0x00BE38:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Level_Results_Index(PC, D0), D1  ; Offset_0x00BE46
                jmp     Level_Results_Index(PC, D1)      ; Offset_0x00BE46
Level_Results_Index: ; Offset_0x00BE46:
                dc.w    Offset_0x00BE4E-Level_Results_Index
                dc.w    Offset_0x00BEAA-Level_Results_Index
                dc.w    Offset_0x00BEF6-Level_Results_Index
                dc.w    Offset_0x00BF66-Level_Results_Index
Offset_0x00BE4E:
                tst.l   ($FFFFF680).w
                beq.s   Offset_0x00BE56
                rts
Offset_0x00BE56:
                move.l  A0, A1
                lea     (Offset_0x00C030), A2
                moveq   #$06, D1
Offset_0x00BE60:                
                move.b  #$3A, $0000(A1)
                move.w  (A2), $0008(A1)
                move.w  (A2)+, $0032(A1)
                move.w  (A2)+, $0030(A1)
                move.w  (A2)+, $000A(A1)
                move.b  (A2)+, $0024(A1)
                move.b  (A2)+, D0
                cmpi.b  #$06, D0
                bne.s   Offset_0x00BE86
                add.b   ($FFFFFE11).w, D0
Offset_0x00BE86:
                move.b  D0, $001A(A1)
                move.l  #Level_Results_Mappings, $0004(A1) ; Offset_0x00C5A8
                move.w  #$8580, $0002(A1)
                bsr     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
                move.b  #$00, $0001(A1)
                lea     $0040(A1), A1
                dbra    D1, Offset_0x00BE60
Offset_0x00BEAA:
                moveq   #$10, D1
                move.w  $0030(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   Offset_0x00BEDC
                bge.s   Offset_0x00BEBA
                neg.w   D1
Offset_0x00BEBA:
                add.w   D1, $0008(A0)
Offset_0x00BEBE:                
                move.w  $0008(A0), D0
                bmi.s   Offset_0x00BED0
                cmpi.w  #$0200, D0
                bcc.s   Offset_0x00BED0
                rts
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00BED0:
                rts
Offset_0x00BED2:                
                move.b  #$0E, $0024(A0)
                bra     Offset_0x00BFDE
Offset_0x00BEDC:
                cmpi.b  #$0E, ($FFFFB724).w
                beq.s   Offset_0x00BED2
                cmpi.b  #$04, $001A(A0)
                bne.s   Offset_0x00BEBE
                addq.b  #$02, $0024(A0)
                move.w  #$00B4, $001E(A0)
Offset_0x00BEF6:
                subq.w  #$01, $001E(A0)
                bne.s   Offset_0x00BF00
                addq.b  #$02, $0024(A0)
Offset_0x00BF00:
                rts
                bra     DisplaySprite           ; Offset_0x00D3C2
                bsr     DisplaySprite           ; Offset_0x00D3C2
                move.b  #$01, ($FFFFF7D6).w
                moveq   #$00, D0
                tst.w   ($FFFFF7D2).w
                beq.s   Offset_0x00BF22
                addi.w  #$000A, D0
                subi.w  #$000A, ($FFFFF7D2).w
Offset_0x00BF22:
                tst.w   ($FFFFF7D4).w
                beq.s   Offset_0x00BF32
                addi.w  #$000A, D0
                subi.w  #$000A, ($FFFFF7D4).w
Offset_0x00BF32:
                tst.w   D0
                bne.s   Offset_0x00BF4C
                move.w  #$00C5, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                addq.b  #$02, $0024(A0)
                move.w  #$00B4, $001E(A0)
Offset_0x00BF4A:                
                rts
Offset_0x00BF4C:
                jsr     AddPoints               ; (Offset_0x022FD0)      
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$03, D0
                bne.s   Offset_0x00BF4A
                move.w  #$00CD, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x00BF66:
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                add.b   ($FFFFFE11).w, D0
                add.w   D0, D0
                move.w  Offset_0x00BF9A(PC, D0), D0
                move.w  D0, ($FFFFFE10).w
                clr.b   ($FFFFFE30).w
                tst.b   ($FFFFF7CD).w
                beq.s   Offset_0x00BF8E
                move.b  #$10, ($FFFFF600).w
                bra.s   Offset_0x00BF94
Offset_0x00BF8E:
                move.w  #$0001, ($FFFFFE02).w
Offset_0x00BF94:
                rts
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00BF9A:
                dc.w    $0001, $0200, $0000, $0000, $0201, $0400, $0000, $0000
                dc.w    $0401, $0700, $0000, $0000, $0000, $0000, $0701, $0000
                dc.w    $0801, $0A00, $0000, $0000, $0A01, $0B00, $0B01, $0C00
                dc.w    $0C01, $0D00, $0D01, $0700, $0E01, $0F00, $0F01, $0D00
                dc.w    $1001, $0000
Offset_0x00BFDE:
                moveq   #$20, D1
                move.w  $0032(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   Offset_0x00C004
                bge.s   Offset_0x00BFEE
                neg.w   D1
Offset_0x00BFEE:
                add.w   D1, $0008(A0)
                move.w  $0008(A0), D0
                bmi.s   Offset_0x00C002
                cmpi.w  #$0200, D0
                bcc.s   Offset_0x00C002
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00C002:
                rts
Offset_0x00C004:
                cmpi.b  #$04, $001A(A0)
                bne     DeleteObject            ; Offset_0x00D3B4
                addq.b  #$02, $0024(A0)
                clr.b   ($FFFFF7CC).w
                move.w  #$009A, D0
                jmp     (Play_Music)            ; Offset_0x0014C0
                addq.w  #$02, ($FFFFEECA).w
                cmpi.w  #$2100, ($FFFFEECA).w
                beq     DeleteObject            ; Offset_0x00D3B4
                rts
Offset_0x00C030:
                dc.w    $0004, $0124, $00BC, $0200, $FEE0, $0120, $00D0, $0201
                dc.w    $040C, $014C, $00D6, $0206, $0520, $0120, $00EC, $0202
                dc.w    $0540, $0120, $00FC, $0203, $0560, $0120, $010C, $0204
                dc.w    $020C, $014C, $00CC, $0205                
;=============================================================================== 
; Object 0x3A - Level Results
; [ End ]
;=============================================================================== 

;=============================================================================== 
; Object 0x?? - Special Stage Results Screen
; [ Begin ]
;=============================================================================== 
Special_Stage_Results: ; Offset_0x00C068:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  SS_Results_Index(PC, D0), D1  ; Offset_0x00C076
                jmp     SS_Results_Index(PC, D1)      ; Offset_0x00C076
SS_Results_Index: ; Offset_0x00C076:
                dc.w    Offset_0x00C08C-SS_Results_Index
                dc.w    Offset_0x00C104-SS_Results_Index
                dc.w    Offset_0x00C13C-SS_Results_Index
                dc.w    Offset_0x00C14A-SS_Results_Index
                dc.w    Offset_0x00C13C-SS_Results_Index
                dc.w    Offset_0x00C1A4-SS_Results_Index
                dc.w    Offset_0x00C13C-SS_Results_Index
                dc.w    Offset_0x00C1AE-SS_Results_Index
                dc.w    Offset_0x00C13C-SS_Results_Index
                dc.w    Offset_0x00C1A4-SS_Results_Index
                dc.w    Offset_0x00C1D2-SS_Results_Index
Offset_0x00C08C:
                tst.l   ($FFFFF680).w
                beq.s   Offset_0x00C094
                rts
Offset_0x00C094:
                move.l  A0, A1
                lea     (Offset_0x00C1E6), A2
                moveq   #$03, D1
                cmpi.w  #$0032, ($FFFFFE20).w
                bcs.s   Offset_0x00C0A8
                addq.w  #$01, D1
Offset_0x00C0A8:
                move.b  $0000(A0), $0000(A1)
                move.w  (A2)+, $0008(A1)
                move.w  (A2)+, $0030(A1)
                move.w  (A2)+, $000A(A1)
                move.b  (A2)+, $0024(A1)
                move.b  (A2)+, $001A(A1)
                move.l  #Special_Stage_Results_Mappings, $0004(A1) ; Offset_0x00C6D4
                move.w  #$8580, $0002(A1)
                bsr     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
                move.b  #$00, $0001(A1)
                lea     $0040(A1), A1
                dbra    D1, Offset_0x00C0A8
                moveq   #$07, D0
                move.b  ($FFFFFE57).w, D1
                beq.s   Offset_0x00C100
                moveq   #$00, D0
                cmpi.b  #$06, D1
                bne.s   Offset_0x00C100
                moveq   #$08, D0
                move.w  #$0018, $0008(A0)
                move.w  #$0118, $0030(A0)
Offset_0x00C100:
                move.b  D0, $001A(A0)
Offset_0x00C104:
                moveq   #$10, D1
                move.w  $0030(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   Offset_0x00C12A
                bge.s   Offset_0x00C114
                neg.w   D1
Offset_0x00C114:
                add.w   D1, $0008(A0)
Offset_0x00C118:                
                move.w  $0008(A0), D0
                bmi.s   Offset_0x00C128
                cmpi.w  #$0200, D0
                bcc.s   Offset_0x00C128
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00C128:
                rts
Offset_0x00C12A:
                cmpi.b  #$02, $001A(A0)
                bne.s   Offset_0x00C118
                addq.b  #$02, $0024(A0)
                move.w  #$00B4, $001E(A0)
Offset_0x00C13C:
                subq.w  #$01, $001E(A0)
                bne.s   Offset_0x00C146
                addq.b  #$02, $0024(A0)
Offset_0x00C146:
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00C14A:
                bsr     DisplaySprite           ; Offset_0x00D3C2
                move.b  #$01, ($FFFFF7D6).w
                tst.w   ($FFFFF7D4).w
                beq.s   Offset_0x00C17C
                subi.w  #$000A, ($FFFFF7D4).w
                moveq   #$0A, D0
                jsr     AddPoints               ; (Offset_0x022FD0)
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$03, D0
                bne.s   Offset_0x00C1A2
                move.w  #$00CD, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x00C17C:
                move.w  #$00C5, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                addq.b  #$02, $0024(A0)
                move.w  #$00B4, $001E(A0)
                cmpi.w  #$0032, ($FFFFFE20).w
                bcs.s   Offset_0x00C1A2
                move.w  #$003C, $001E(A0)
                addq.b  #$04, $0024(A0)
Offset_0x00C1A2:
                rts
Offset_0x00C1A4:
                move.w  #$0001, ($FFFFFE02).w
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00C1AE:
                move.b  #$04, ($FFFFB6DA).w
                move.b  #$14, ($FFFFB6E4).w
                move.w  #$00BF, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                addq.b  #$02, $0024(A0)
                move.w  #$0168, $001E(A0)
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00C1D2:
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$0F, D0
                bne.s   Offset_0x00C1E2
                bchg    #0, $001A(A0)
Offset_0x00C1E2:
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00C1E6:
                dc.w    $0020, $0120, $00C4, $0200, $0320, $0120, $0118, $0201
                dc.w    $0360, $0120, $0128, $0202, $01EC, $011C, $00C4, $0203
                dc.w    $03A0, $0120, $0138, $0206                
;=============================================================================== 
; Object 0x?? - Special Stage Results Screen
; [ End ]
;===============================================================================                 
;=============================================================================== 
; Object 0x?? - Emeralds From Special Stage Results Screen
; [ Begin ]
;===============================================================================    
Emeralds: ; Offset_0x00C20E:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00C21C(PC, D0), D1
                jmp     Offset_0x00C21C(PC, D1)
Offset_0x00C21C:
                dc.w    Offset_0x00C22C-Offset_0x00C21C
                dc.w    Offset_0x00C286-Offset_0x00C21C
Offset_0x00C220:
                dc.w    $0110, $0128, $00F8, $0140, $00E0, $0158
Offset_0x00C22C:
                move.l  A0, A1
                lea     Offset_0x00C220(PC), A2
                moveq   #$00, D2
                moveq   #$00, D1
                move.b  ($FFFFFE57).w, D1
                subq.b  #$01, D1
                bcs     DeleteObject            ; Offset_0x00D3B4
Offset_0x00C240:                
                move.b  $0000(A0), $0000(A1)
                move.w  (A2)+, $0008(A1)
                move.w  #$00F0, $000A(A1)
                lea     ($FFFFFE58).w, A3
                move.b  $00(A3, D2), D3
                move.b  D3, $001A(A1)
                move.b  D3, $001C(A1)
                addq.b  #$01, D2
                addq.b  #$02, $0024(A1)
                move.l  #Emeralds_Mappings, $0004(A1) ; Offset_0x00C8F6
                move.w  #$8541, $0002(A1)
                bsr     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
                move.b  #$00, $0001(A1)
                lea     $0040(A1), A1
                dbra    D1, Offset_0x00C240
Offset_0x00C286:
                move.b  $001A(A0), D0
                move.b  #$06, $001A(A0)
                cmpi.b  #$06, D0
                bne.s   Offset_0x00C29C
                move.b  $001C(A0), $001A(A0)
Offset_0x00C29C:
                bra     DisplaySprite           ; Offset_0x00D3C2
;=============================================================================== 
; Object 0x?? - Emeralds From Special Stage Results Screen
; [ End ]
;===============================================================================    
Title_Cards_Mappings: ; Offset_0x00C2A0: ; Object $34 - Mappings
                dc.w    TC_GHz_Map-Title_Cards_Mappings  ; Green Hill
                dc.w    TC_Lz_Map-Title_Cards_Mappings   ; Labyrinth
                dc.w    TC_Mz_Map-Title_Cards_Mappings   ; Marble  
                dc.w    TC_SLz_Map-Title_Cards_Mappings  ; Star Light
                dc.w    TC_SYz_Map-Title_Cards_Mappings  ; Spring Yard
                dc.w    TC_SBz_Map-Title_Cards_Mappings  ; Scrap Brain
                dc.w    TC_Zone_Map-Title_Cards_Mappings ; Zone
                dc.w    TC_Act1_Map-Title_Cards_Mappings ; Act 1
                dc.w    TC_Act2_Map-Title_Cards_Mappings ; Act 2
                dc.w    TC_Act3_Map-Title_Cards_Mappings ; Act 3
                dc.w    TC_Oval_Map-Title_Cards_Mappings ; Oval
                dc.w    TC_Fz_Map-Title_Cards_Mappings   ; Final  
TC_GHz_Map: ; Offset_0x00C2B8: ; Green Hill                 
                dc.w    $0009 
                dc.l    $F8050018, $000CFFB4, $F805003A, $001DFFC4
                dc.l    $F8050010, $0008FFD4, $F8050010, $0008FFE4
                dc.l    $F805002E, $0017FFF4, $F805001C, $000E0014
                dc.l    $F8010020, $00100024, $F8050026, $0013002C
                dc.l    $F8050026, $0013003C
TC_Lz_Map: ; Offset_0x00C302: ; Labyrinth
                dc.w    $0009
                dc.l    $F8050026, $0013FFBC, $F8050000, $0000FFCC
                dc.l    $F8050004, $0002FFDC, $F805004A, $0025FFEC
                dc.l    $F805003A, $001DFFFC, $F8010020, $0010000C
                dc.l    $F805002E, $00170014, $F8050042, $00210024
                dc.l    $F805001C, $000E0034
TC_Mz_Map: ; Offset_0x00C34C: ; Marble 
                dc.w    $0006
                dc.l    $F805002A, $0015FFCF, $F8050000, $0000FFE0
                dc.l    $F805003A, $001DFFF0, $F8050004, $00020000
                dc.l    $F8050026, $00130010, $F8050010, $00080020 
TC_SLz_Map: ; Offset_0x00C37E: ; Star Light
                dc.w    $0009
                dc.l    $F805003E, $001FFFB4, $F8050042, $0021FFC4
                dc.l    $F8050000, $0000FFD4, $F805003A, $001DFFE4
                dc.l    $F8050026, $00130004, $F8010020, $00100014
                dc.l    $F8050018, $000C001C, $F805001C, $000E002C
                dc.l    $F8050042, $0021003C
TC_SYz_Map: ; Offset_0x00C3C8: ; Spring Yard
                dc.w    $000A
                dc.w    $F805, $003E, $001F, $FFAC, $F805, $0036, $001B, $FFBC
                dc.w    $F805, $003A, $001D, $FFCC, $F801, $0020, $0010, $FFDC
                dc.w    $F805, $002E, $0017, $FFE4, $F805, $0018, $000C, $FFF4
                dc.w    $F805, $004A, $0025, $0014, $F805, $0000, $0000, $0024
                dc.w    $F805, $003A, $001D, $0034, $F805, $000C, $0006, $0044 
TC_SBz_Map: ; Offset_0x00C41A: ; Scrap Brain
                dc.w    $000A
                dc.l    $F805003E, $001FFFAC, $F8050008, $0004FFBC
                dc.l    $F805003A, $001DFFCC, $F8050000, $0000FFDC
                dc.l    $F8050036, $001BFFEC, $F8050004, $0002000C
                dc.l    $F805003A, $001D001C, $F8050000, $0000002C
                dc.l    $F8010020, $0010003C, $F805002E, $00170044
TC_Zone_Map: ; Offset_0x00C46C: ; Zone
                dc.w    $0004
                dc.l    $F805004E, $0027FFE0, $F8050032, $0019FFF0
                dc.l    $F805002E, $00170000, $F8050010, $00080010
TC_Act1_Map: ; Offset_0x00C48E: ; Act 1
                dc.w    $0002
                dc.l    $040C0053, $0029FFEC, $F4020057, $002B000C
TC_Act2_Map: ; Offset_0x00C4A0: ; Act 2
                dc.w    $0002
                dc.l    $040C0053, $0029FFEC, $F406005A, $002D0008
TC_Act3_Map: ; Offset_0x00C4B2: ; Act 3
                dc.w    $0002
                dc.l    $040C0053, $0029FFEC, $F4060060, $00300008
TC_Oval_Map: ; Offset_0x00C4C4: ; Oval
                dc.w    $000D
                dc.l    $E40C0070, $0038FFF4, $E4020074, $003A0014
                dc.l    $EC040077, $003BFFEC, $F4050079, $003CFFE4
                dc.l    $140C1870, $1838FFEC, $04021874, $183AFFE4
                dc.l    $0C041877, $183B0004, $FC051879, $183C000C
                dc.l    $EC08007D, $003EFFFC, $F40C007C, $003EFFF4
                dc.l    $FC08007C, $003EFFF4, $040C007C, $003EFFEC
                dc.l    $0C08007C, $003EFFEC
TC_Fz_Map: ; Offset_0x00C52E: ; Final
                dc.w    $0005
                dc.l    $F8050014, $000AFFDC, $F8010020, $0010FFEC
                dc.l    $F805002E, $0017FFF4, $F8050000, $00000004
                dc.l    $F8050026, $00130014
Time_Game_Over_Mappings: ; Offset_0x00C558:
                dc.w    Offset_0x00C560-Time_Game_Over_Mappings
                dc.w    Offset_0x00C572-Time_Game_Over_Mappings
                dc.w    Offset_0x00C584-Time_Game_Over_Mappings
                dc.w    Offset_0x00C596-Time_Game_Over_Mappings
Offset_0x00C560:
                dc.w    $0002
                dc.l    $F80D0000, $0000FFB8, $F80D0008, $0004FFD8
Offset_0x00C572:
                dc.w    $0002
                dc.l    $F80D0014, $000A0008, $F80D000C, $00060028
Offset_0x00C584:
                dc.w    $0002
                dc.l    $F809001C, $000EFFC4, $F80D0008, $0004FFDC
Offset_0x00C596:
                dc.w    $0002
                dc.l    $F80D0014, $000A000C, $F80D000C, $0006002C  
Level_Results_Mappings: ; Offset_0x00C5A8:
                dc.w    LR_Sonic_Has_Map-Level_Results_Mappings
                dc.w    LR_Passed_Map-Level_Results_Mappings
                dc.w    LR_Score_Map-Level_Results_Mappings
                dc.w    LR_Time_Bonus_Map-Level_Results_Mappings
                dc.w    LR_Ring_Bonus_Map-Level_Results_Mappings
                dc.w    TC_Oval_Map-Level_Results_Mappings
                dc.w    TC_Act1_Map-Level_Results_Mappings
                dc.w    TC_Act2_Map-Level_Results_Mappings
                dc.w    TC_Act3_Map-Level_Results_Mappings
LR_Sonic_Has_Map: ; Offset_0x00C5BA: ; Sonic Has
                dc.w    $0008
                dc.l    $F805003E, $001FFFB8, $F8050032, $0019FFC8
                dc.l    $F805002E, $0017FFD8, $F8010020, $0010FFE8
                dc.l    $F8050008, $0004FFF0, $F805001C, $000E0010
                dc.l    $F8050000, $00000020, $F805003E, $001F0030
LR_Passed_Map: ; Offset_0x00C5FC: ; Passed
                dc.w    $0006
                dc.l    $F8050036, $001BFFD0, $F8050000, $0000FFE0
                dc.l    $F805003E, $001FFFF0, $F805003E, $001F0000
                dc.l    $F8050010, $00080010, $F805000C, $00060020
LR_Score_Map: ; Offset_0x00C62E:
                dc.w    $0006
                dc.l    $F80D014A, $00A5FFB0, $F8010162, $00B1FFD0
                dc.l    $F8090164, $00B20018, $F80D016A, $00B50030
                dc.l    $F704006E, $0037FFCD, $FF04186E, $1837FFCD
LR_Time_Bonus_Map: ; Offset_0x00C660:
                dc.w    $0007
                dc.l    $F80D015A, $00ADFFB0, $F80D0066, $0033FFD9
                dc.l    $F801014A, $00A5FFF9, $F704006E, $0037FFF6
                dc.l    $FF04186E, $1837FFF6, $F80DFFF0, $FBF80028
                dc.l    $F8010170, $00B80048
LR_Ring_Bonus_Map: ; Offset_0x00C69A:
                dc.w    $0007
                dc.l    $F80D0152, $00A9FFB0, $F80D0066, $0033FFD9
                dc.l    $F801014A, $00A5FFF9, $F704006E, $0037FFF6
                dc.l    $FF04186E, $1837FFF6, $F80DFFF8, $FBFC0028
                dc.l    $F8010170, $00B80048    
Special_Stage_Results_Mappings: ; Offset_0x00C6D4:
                dc.w    Offset_0x00C6E6-Special_Stage_Results_Mappings
                dc.w    Offset_0x00C750-Special_Stage_Results_Mappings
                dc.w    Offset_0x00C782-Special_Stage_Results_Mappings
                dc.w    TC_Oval_Map-Special_Stage_Results_Mappings
                dc.w    Offset_0x00C7BC-Special_Stage_Results_Mappings
                dc.w    Offset_0x00C7DE-Special_Stage_Results_Mappings
                dc.w    Offset_0x00C800-Special_Stage_Results_Mappings
                dc.w    Offset_0x00C81A-Special_Stage_Results_Mappings
                dc.w    Offset_0x00C87C-Special_Stage_Results_Mappings
Offset_0x00C6E6:
                dc.w    $000D
                dc.l    $F8050008, $0004FF90, $F805001C, $000EFFA0
                dc.l    $F8050000, $0000FFB0, $F8050032, $0019FFC0
                dc.l    $F805003E, $001FFFD0, $F8050010, $0008FFF0
                dc.l    $F805002A, $00150000, $F8050010, $00080010
                dc.l    $F805003A, $001D0020, $F8050000, $00000030
                dc.l    $F8050026, $00130040, $F805000C, $00060050
                dc.l    $F805003E, $001F0060
Offset_0x00C750:
                dc.w    $0006
                dc.l    $F80D014A, $00A5FFB0, $F8010162, $00B1FFD0
                dc.l    $F8090164, $00B20018, $F80D016A, $00B50030
                dc.l    $F704006E, $0037FFCD, $FF04186E, $1837FFCD
Offset_0x00C782:
                dc.w    $0007
                dc.l    $F80D0152, $00A9FFB0, $F80D0066, $0033FFD9
                dc.l    $F801014A, $00A5FFF9, $F704006E, $0037FFF6
                dc.l    $FF04186E, $1837FFF6, $F80DFFF8, $FBFC0028
                dc.l    $F8010170, $00B80048
Offset_0x00C7BC:
                dc.w    $0004
                dc.l    $F80DFFD1, $7FC8FFB0, $F80DFFD9, $7FD4FFD0
                dc.l    $F801FFE1, $7FE0FFF0, $F8061FE3, $2FE30040
Offset_0x00C7DE:
                dc.w    $0004
                dc.l    $F80DFFD1, $7FC8FFB0, $F80DFFD9, $7FD4FFD0
                dc.l    $F801FFE1, $7FE0FFF0, $F8061FE9, $2FEC0040
Offset_0x00C800:
                dc.w    $0003
                dc.l    $F80DFFD1, $7FC8FFB0, $F80DFFD9, $7FD4FFD0
                dc.l    $F801FFE1, $7FE0FFF0
Offset_0x00C81A:
                dc.w    $000C
                dc.l    $F805003E, $001FFF9C, $F8050036, $001BFFAC
                dc.l    $F8050010, $0008FFBC, $F8050008, $0004FFCC
                dc.l    $F8010020, $0010FFDC, $F8050000, $0000FFE4
                dc.l    $F8050026, $0013FFF4, $F805003E, $001F0014
                dc.l    $F8050042, $00210024, $F8050000, $00000034
                dc.l    $F8050018, $000C0044, $F8050010, $00080054
Offset_0x00C87C:
                dc.w    $000F
                dc.l    $F805003E, $001FFF88, $F8050032, $0019FF98
                dc.l    $F805002E, $0017FFA8, $F8010020, $0010FFB8
                dc.l    $F8050008, $0004FFC0, $F8050018, $000CFFD8
                dc.l    $F8050032, $0019FFE8, $F8050042, $0021FFF8
                dc.l    $F8050042, $00210010, $F805001C, $000E0020
                dc.l    $F8050010, $00080030, $F805002A, $00150040
                dc.l    $F8050000, $00000058, $F8050026, $00130068
                dc.l    $F8050026, $00130078                
Emeralds_Mappings: ; Offset_0x00C8F6:
                dc.w    Offset_0x00C904-Emeralds_Mappings
                dc.w    Offset_0x00C90E-Emeralds_Mappings
                dc.w    Offset_0x00C918-Emeralds_Mappings
                dc.w    Offset_0x00C922-Emeralds_Mappings
                dc.w    Offset_0x00C92C-Emeralds_Mappings
                dc.w    Offset_0x00C936-Emeralds_Mappings
                dc.w    Offset_0x00C940-Emeralds_Mappings
Offset_0x00C904:
                dc.w    $0001
                dc.l    $F8052004, $2002FFF8
Offset_0x00C90E:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Offset_0x00C918:
                dc.w    $0001
                dc.l    $F8054004, $4002FFF8
Offset_0x00C922:
                dc.w    $0001
                dc.l    $F8056004, $6002FFF8
Offset_0x00C92C:
                dc.w    $0001
                dc.l    $F8052008, $2004FFF8
Offset_0x00C936:
                dc.w    $0001
                dc.l    $F805200C, $2006FFF8
Offset_0x00C940:
                dc.w    $0000                   ; Filler                            
                nop                   
;=============================================================================== 
; Object 0x36 - Vertical Spikes 
; [ Begin ]                         
;===============================================================================                 
Obj_0x36_Spikes: ; Offset_0x00C944:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00C952(PC, D0), D1
                jmp     Offset_0x00C952(PC, D1)
Offset_0x00C952:
                dc.w    Offset_0x00C96A-Offset_0x00C952
                dc.w    Offset_0x00C9D6-Offset_0x00C952
                dc.w    Offset_0x00CA26-Offset_0x00C952
                dc.w    Offset_0x00CA82-Offset_0x00C952                
Offset_0x00C95A:
                dc.b    $10, $10, $20, $10, $30, $10, $40, $10, $10, $10, $10, $20, $10, $30, $10, $40                  
Offset_0x00C96A:
                addq.b  #$02, $0024(A0)
                move.l  #Spike_Mappings, $0004(A0) ; Offset_0x00CBA0
                move.w  #$2434, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), D0
                andi.b  #$0F, $0028(A0)
                andi.w  #$00F0, D0  
                lea     Offset_0x00C95A(PC), A1
                lsr.w   #$03, D0
                adda.w  D0, A1
                move.b  (A1)+, $0019(A0)
                move.b  (A1)+, $0016(A0)
                lsr.w   #$01, D0
                move.b  D0, $001A(A0)
                cmpi.b  #$04, D0
                bcs.s   Offset_0x00C9BA
                addq.b  #$02, $0024(A0)
Offset_0x00C9BA:
                btst    #$01, $0022(A0)
                beq.s   Offset_0x00C9C8
                move.b  #$06, $0024(A0)
Offset_0x00C9C8:
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0032(A0)
                rts
Offset_0x00C9D6:
                bsr     Offset_0x00CAFE
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; Offset_0x00F4A0
                move.b  $0022(A0), D6
                andi.b  #$18, D6
                beq.s   Offset_0x00CA1E
                move.b  D6, D0
                andi.b  #$08, D0
                beq.s   Offset_0x00CA10
                lea     ($FFFFB000).w, A1
                bsr     Touch_Spikes            ; Offset_0x00CAD0
Offset_0x00CA10:
                andi.b  #$10, D6
                beq.s   Offset_0x00CA1E
                lea     ($FFFFB040).w, A1
                bsr     Touch_Spikes            ; Offset_0x00CAD0
Offset_0x00CA1E:
                move.w  $0030(A0), D0
                bra     Offset_0x00D2D8
Offset_0x00CA26:                
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x00CAFE
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     SolidObject             ; Offset_0x00F4A0
                swap.w  D6
                andi.w  #$0003, D6
                beq.s   Offset_0x00CA7A
                move.b  D6, D0
                andi.b  #$01, D0
                beq.s   Offset_0x00CA66
                lea     ($FFFFB000).w, A1
                bsr     Touch_Spikes            ; Offset_0x00CAD0
                bclr    #$05, $0022(A0)
Offset_0x00CA66:                
                andi.b  #$02, D6
                beq.s   Offset_0x00CA7A
                lea     ($FFFFB040).w, A1  
                bsr     Touch_Spikes            ; Offset_0x00CAD0
                bclr    #$06, $0022(A0)
Offset_0x00CA7A:
                move.w  $0030(A0), D0
                bra     Offset_0x00D2D8
Offset_0x00CA82:
                bsr     Offset_0x00CAFE
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; Offset_0x00F4A0
                swap.w  D6
                andi.w  #$000C, D6
                beq.s   Offset_0x00CAC8
                move.b  D6, D0
                andi.b  #$04, D0
                beq.s   Offset_0x00CABA
                lea     ($FFFFB000).w, A1
                bsr     Touch_Spikes            ; Offset_0x00CAD0
Offset_0x00CABA:
                andi.b  #$08, D6
                beq.s   Offset_0x00CAC8
                lea     ($FFFFB040).w, A1
                bsr     Touch_Spikes            ; Offset_0x00CAD0
Offset_0x00CAC8:
                move.w  $0030(A0), D0
                bra     Offset_0x00D2D8
;===============================================================================
; Sub Routine Touch_Spikes
;[ Begin ]
;===============================================================================                
Touch_Spikes: ; Offset_0x00CAD0:
                tst.b   ($FFFFFE2D).w           ; Invincibility Running ?
                bne.s   Touch_Spikes_No_Hurt    ; Offset_0x00CAFC
                cmpi.b  #$04, $0024(A1)
                bcc.s   Touch_Spikes_No_Hurt    ; Offset_0x00CAFC
                move.l  $000C(A1), D3
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                sub.l   D0, D3
                move.l  D3, $000C(A1)
                move.l  A0, A2
                move.l  A1, A0
                jsr     HurtSonic               ; Offset_0x021384
                move.l  A2, A0
Touch_Spikes_No_Hurt: ; Offset_0x00CAFC:                
                rts
;===============================================================================
; Sub Routine Touch_Spikes
;[ End ]
;===============================================================================                    
Offset_0x00CAFE:
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.w  Offset_0x00CB0E(PC, D0), D1
                jmp     Offset_0x00CB0E(PC, D1)
Offset_0x00CB0E:
                dc.w    Offset_0x00CB14-Offset_0x00CB0E
                dc.w    Offset_0x00CB16-Offset_0x00CB0E
                dc.w    Offset_0x00CB2A-Offset_0x00CB0E
Offset_0x00CB14:                  
                rts
Offset_0x00CB16:
                bsr     Offset_0x00CB3E
                moveq   #$00, D0
                move.b  $0034(A0), D0
                add.w   $0032(A0), D0
                move.w  D0, $000C(A0)
                rts
Offset_0x00CB2A:
                bsr     Offset_0x00CB3E
                moveq   #$00, D0
                move.b  $0034(A0), D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                rts
Offset_0x00CB3E:
                tst.w   $0038(A0)
                beq.s   Offset_0x00CB5C
                subq.w  #$01, $0038(A0)
                bne.s   Offset_0x00CB9E
                tst.b   $0001(A0)
                bpl.s   Offset_0x00CB9E
                move.w  #$00B6, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                bra.s   Offset_0x00CB9E
Offset_0x00CB5C:
                tst.w   $0036(A0)
                beq.s   Offset_0x00CB7E
                subi.w  #$0800, $0034(A0)
                bcc.s   Offset_0x00CB9E
                move.w  #$0000, $0034(A0)
                move.w  #$0000, $0036(A0)
                move.w  #$003C, $0038(A0)
                bra.s   Offset_0x00CB9E
Offset_0x00CB7E:
                addi.w  #$0800, $0034(A0)
                cmpi.w  #$2000, $0034(A0)
                bcs.s   Offset_0x00CB9E
                move.w  #$2000, $0034(A0)
                move.w  #$0001, $0036(A0)
                move.w  #$003C, $0038(A0)
Offset_0x00CB9E:
                rts
Spike_Mappings:                
Offset_0x00CBA0:
                dc.w    Offset_0x00CBB0-Offset_0x00CBA0
                dc.w    Offset_0x00CBC2-Offset_0x00CBA0
                dc.w    Offset_0x00CBE4-Offset_0x00CBA0
                dc.w    Offset_0x00CC16-Offset_0x00CBA0
                dc.w    Offset_0x00CC58-Offset_0x00CBA0
                dc.w    Offset_0x00CC6A-Offset_0x00CBA0
                dc.w    Offset_0x00CC8C-Offset_0x00CBA0
                dc.w    Offset_0x00CCBE-Offset_0x00CBA0
Offset_0x00CBB0:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F0070000, $00000000
Offset_0x00CBC2:
                dc.w    $0004
                dc.l    $F0070000, $0000FFE0, $F0070000, $0000FFF0
                dc.l    $F0070000, $00000000, $F0070000, $00000010
Offset_0x00CBE4:
                dc.w    $0006
                dc.l    $F0070000, $0000FFD0, $F0070000, $0000FFE0
                dc.l    $F0070000, $0000FFF0, $F0070000, $00000000
                dc.l    $F0070000, $00000010, $F0070000, $00000020
Offset_0x00CC16:
                dc.w    $0008
                dc.l    $F0070000, $0000FFC0, $F0070000, $0000FFD0
                dc.l    $F0070000, $0000FFE0, $F0070000, $0000FFF0
                dc.l    $F0070000, $00000000, $F0070000, $00000010
                dc.l    $F0070000, $00000020, $F0070000, $00000030
Offset_0x00CC58:
                dc.w    $0002
                dc.l    $F00DFFF8, $FBFCFFF0, $000DFFF8, $FBFCFFF0
Offset_0x00CC6A:
                dc.w    $0004
                dc.l    $E00DFFF8, $FBFCFFF0, $F00DFFF8, $FBFCFFF0
                dc.l    $000DFFF8, $FBFCFFF0, $100DFFF8, $FBFCFFF0
Offset_0x00CC8C:
                dc.w    $0006
                dc.l    $D00DFFF8, $FBFCFFF0, $E00DFFF8, $FBFCFFF0
                dc.l    $F00DFFF8, $FBFCFFF0, $000DFFF8, $FBFCFFF0
                dc.l    $100DFFF8, $FBFCFFF0, $200DFFF8, $FBFCFFF0
Offset_0x00CCBE:
                dc.w    $0008
                dc.l    $C00DFFF8, $FBFCFFF0, $D00DFFF8, $FBFCFFF0
                dc.l    $E00DFFF8, $FBFCFFF0, $F00DFFF8, $FBFCFFF0
                dc.l    $000DFFF8, $FBFCFFF0, $100DFFF8, $FBFCFFF0
                dc.l    $200DFFF8, $FBFCFFF0, $300DFFF8, $FBFCFFF0                 
;=============================================================================== 
; Object 0x36 - Vertical Spikes 
; [ End ]                         
;===============================================================================   

;=============================================================================== 
; Object 0x3B 
; [ Begin ]                         
;===============================================================================   
Obj_0x3B: ; Offset_0x00CD00:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00CD0E(PC, D0), D1
                jmp     Offset_0x00CD0E(PC, D1)
Offset_0x00CD0E:
                dc.w    Offset_0x00CD12-Offset_0x00CD0E
                dc.w    Offset_0x00CD3A-Offset_0x00CD0E
Offset_0x00CD12:
                addq.b  #$02, $0024(A0)
                move.l  #Offset_0x00CD66, $0004(A0)
                move.w  #$66C0, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$13, $0019(A0)
                move.b  #$04, $0018(A0)
Offset_0x00CD3A:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; Offset_0x00F4A0
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00CD66:
                dc.w    Offset_0x00CD68-Offset_0x00CD66
Offset_0x00CD68:
                dc.w    $0002
                dc.l    $F00B0000, $0000FFE8, $F00B000C, $00060000
;=============================================================================== 
; Object 0x3B 
; [ End ]                         
;===============================================================================
                dc.w    $0000                   ; Filler 
;=============================================================================== 
; Object 0x3C 
; [ Begin ]                         
;=============================================================================== 
Obj_0x3C: ; Offset_0x00CD7C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00CD8E(PC, D0), D1
                jsr     Offset_0x00CD8E(PC, D1)
                bra     MarkObjGone             ; Offset_0x00D2A0
Offset_0x00CD8E:
                dc.w    Offset_0x00CD94-Offset_0x00CD8E
                dc.w    Offset_0x00CDC2-Offset_0x00CD8E
                dc.w    Offset_0x00CE3A-Offset_0x00CD8E
Offset_0x00CD94:
                addq.b  #$02, $0024(A0)
                move.l  #Offset_0x00CF04, $0004(A0)
                move.w  #$4590, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), $001A(A0)
Offset_0x00CDC2:
                move.w  ($FFFFB010).w, $0030(A0)
                move.w  #$001B, D1
                move.w  #$0020, D2
                move.w  #$0020, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; Offset_0x00F4A0
                btst    #$05, $0022(A0)
                bne.s   Offset_0x00CDE6
Offset_0x00CDE4:                
                rts
Offset_0x00CDE6:
                lea     ($FFFFB000).w, A1
                cmpi.b  #$02, $001C(A1)
                bne.s   Offset_0x00CDE4
                move.w  $0030(A0), D0
                bpl.s   Offset_0x00CDFA
                neg.w   D0
Offset_0x00CDFA:
                cmpi.w  #$0480, D0
                bcs.s   Offset_0x00CDE4
                move.w  $0030(A0), $0010(A1)
                addq.w  #$04, $0008(A1)
                lea     (Offset_0x00CEC4), A4
                move.w  $0008(A0), D0
                cmp.w   $0008(A1), D0
                bcs.s   Offset_0x00CE26
                subi.w  #$0008, $0008(A1)
                lea     (Offset_0x00CEE4), A4
Offset_0x00CE26:
                move.w  $0010(A1), $0014(A1)
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
                bsr.s   Offset_0x00CE50
Offset_0x00CE3A:
                bsr     SpeedToPos              ; Offset_0x00D27A
                addi.w  #$0070, $0012(A0)
                tst.b   $0001(A0)
                bpl     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
;=============================================================================== 
; Object 0x3C 
; [ End ]                         
;=============================================================================== 

Offset_0x00CE50:
                moveq   #$00, D0
                move.b  $001A(A0), D0
                add.w   D0, D0
                move.l  $0004(A0), A3
                adda.w  $00(A3, D0), A3
                move.w  (A3)+, D1
                subq.w  #$01, D1
                bset    #$05, $0001(A0)
                move.b  $0000(A0), D4
                move.b  $0001(A0), D5
                move.l  A0, A1
                bra.s   Offset_0x00CE7E
Offset_0x00CE76:                
                bsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x00CEBA
                addq.w  #$08, A3
Offset_0x00CE7E:
                move.b  #$04, $0024(A1)
                move.b  D4, $0000(A1)
                move.l  A3, $0004(A1)
                move.b  D5, $0001(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  $0018(A0), $0018(A1)
                move.b  $0019(A0), $0019(A1)
                move.w  (A4)+, $0010(A1)
                move.w  (A4)+, $0012(A1)
                dbra    D1, Offset_0x00CE76
Offset_0x00CEBA:
                move.w  #$00CB, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x00CEC4:
                dc.w    $0400, $FB00, $0600, $FF00, $0600, $0100, $0400, $0500
                dc.w    $0600, $FA00, $0800, $FE00, $0800, $0200, $0600, $0600                
Offset_0x00CEE4:
                dc.w    $FA00, $FA00, $F800, $FE00, $F800, $0200, $FA00, $0600
                dc.w    $FC00, $FB00, $FA00, $FF00, $FA00, $0100, $FC00, $0500               
Offset_0x00CF04:
                dc.w    Offset_0x00CF0A-Offset_0x00CF04
                dc.w    Offset_0x00CF4C-Offset_0x00CF04
                dc.w    Offset_0x00CF8E-Offset_0x00CF04
Offset_0x00CF0A:
                dc.w    $0008
                dc.l    $E0050000, $0000FFF0, $F0050000, $0000FFF0
                dc.l    $00050000, $0000FFF0, $10050000, $0000FFF0
                dc.l    $E0050004, $00020000, $F0050004, $00020000
                dc.l    $00050004, $00020000, $10050004, $00020000
Offset_0x00CF4C:
                dc.w    $0008
                dc.l    $E0050004, $0002FFF0, $F0050004, $0002FFF0
                dc.l    $00050004, $0002FFF0, $10050004, $0002FFF0
                dc.l    $E0050004, $00020000, $F0050004, $00020000
                dc.l    $00050004, $00020000, $10050004, $00020000
Offset_0x00CF8E:
                dc.w    $0008
                dc.l    $E0050004, $0002FFF0, $F0050004, $0002FFF0
                dc.l    $00050004, $0002FFF0, $10050004, $0002FFF0
                dc.l    $E0050008, $00040000, $F0050008, $00040000
                dc.l    $00050008, $00040000, $10050008, $00040000
Load_Objects: ; Offset_0x00CFD0: ; Load Objects List Routine
                lea     ($FFFFB000).w, A0
                moveq   #$7F, D7
                moveq   #$00, D0
                cmpi.b  #$06, ($FFFFB024).w
                bcc.s   Offset_0x00CFFA
Offset_0x00CFE0:                
                move.b  (A0), D0
                beq.s   Offset_0x00CFF0
                add.w   D0, D0
                add.w   D0, D0
                move.l  Offset_0x00D01A-$04(PC, D0), A1 ; Load Object List Array
                jsr     (A1)
                moveq   #$00, D0
Offset_0x00CFF0:
                lea     $0040(A0), A0
                dbra    D7, Offset_0x00CFE0
                rts
Offset_0x00CFFA:
                moveq   #$1F, D7
                bsr.s   Offset_0x00CFE0
                moveq   #$5F, D7
Offset_0x00D000:                
                moveq   #$00, D0
                move.b  (A0), D0
                beq.s   Offset_0x00D010
                tst.b   $0001(A0)
                bpl.s   Offset_0x00D010
                bsr     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00D010:
                lea     $0040(A0), A0
                dbra    D7, Offset_0x00D000
                rts
Offset_0x00D01A: ; Object List Array
                dc.l    Obj_0x01_Sonic                    ; Offset_0x00FC48 
                dc.l    Obj_0x02_Tails                    ; Offset_0x010E38
                dc.l    Obj_0x03_Layer_Switch             ; Offset_0x0144B0
                dc.l    Obj_0x04                          ; Offset_0x015090 
                dc.l    Obj_0x05_Tails_Tail               ; Offset_0x011F96 
                dc.l    Obj_0x06_Spiral_Attributes        ; Offset_0x01572C 
                dc.l    Obj_0x07                          ; Offset_0x0180D0 
                dc.l    Obj_0x08_Water_Splash             ; Offset_0x012B42 
                dc.l    Obj_0x09_Sonic_In_Special_Stage   ; Offset_0x021D40
                dc.l    Obj_0x0A_Bubbles_And_Numbers      ; Offset_0x01207C 
                dc.l    Obj_0x0B_Open_Close_Platform      ; Offset_0x0148AC 
                dc.l    Obj_0x0C                          ; Offset_0x0149FC
                dc.l    Obj_0x0D_End_Panel                ; Offset_0x00F1F4 
                dc.l    Obj_0x0E_Sonic_Tails              ; Offset_0x00B7B4 
                dc.l    Obj_0x0F                          ; Offset_0x00B83A 
                dc.l    Obj_0x10                          ; Offset_0x0223E2
                dc.l    Obj_0x11_Bridge                   ; Offset_0x007FDC 
                dc.l    Obj_0x12_Emerald                  ; Offset_0x014AFC 
                dc.l    Obj_0x13_Hpz_Waterfalls           ; Offset_0x014B78  
                dc.l    Obj_0x14_See_Saw                  ; Offset_0x015B8C 
                dc.l    Obj_0x15_Swing_Platform           ; Offset_0x0085F8
                dc.l    Obj_0x16_Teleferics               ; Offset_0x01600C 
                dc.l    Obj_0x17                          ; Offset_0x008B9C
                dc.l    Obj_0x18_Platforms                ; Offset_0x008D38 
                dc.l    Obj_0x19_Elevator                 ; Offset_0x01621C                 
                dc.l    Obj_0x1A_Collapsing_Platforms     ; Offset_0x009128 
                dc.l    Obj_0x1B_Speed_Booster            ; Offset_0x016468
                dc.l    Obj_0x1C_Misc                     ; Offset_0x00999C 
                dc.l    Obj_0x1D_Worms                    ; Offset_0x0165B0   
                dc.l    Obj_0x1E_Tube_Attributes          ; Offset_0x016724 
                dc.l    Obj_0x1F_Collapsing_Platforms     ; Offset_0x009274 
                dc.l    Obj_0x20_Fireball                 ; Offset_0x017174
                dc.l    Obj_0x21_Head_Up_Display          ; Offset_0x022DFC
                dc.l    Obj_0x22_Arrow_Shooter            ; Offset_0x019660
                dc.l    Obj_0x23_Pillar                   ; Offset_0x019850    
                dc.l    Obj_0x24                          ; Offset_0x00A012
                dc.l    Obj_0x25_Rings                    ; Offset_0x00AC28 
                dc.l    Obj_0x26_Monitors                 ; Offset_0x00B29C
                dc.l    Obj_0x27_Object_Hit               ; Offset_0x00A086
                dc.l    Obj_0x28_Flickies                 ; Offset_0x00A2B0
                dc.l    Obj_0x29_Enemy_Points             ; Offset_0x00A7C0
                dc.l    Obj_0x2A_Up_Down_Pillar           ; Offset_0x009C0C
                dc.l    Obj_0x2B_Breakable_Pillar         ; Offset_0x019A1E
                dc.l    Obj_0x2C_Leaves                   ; Offset_0x01A0C4
                dc.l    Obj_0x2D_Automatic_Door           ; Offset_0x009CE2   
                dc.l    Obj_0x2E_Monitors_Contents        ; Offset_0x00B46A
                dc.l    Obj_0x2F_Breakable_Floor          ; Offset_0x01747C
                dc.l    Obj_0x30                          ; Offset_0x017A4C
                dc.l    Obj_0x31_Lava_Attributes          ; Offset_0x0155A0 
                dc.l    Obj_0x32_Breakable_Obstacule      ; Offset_0x01768A
                dc.l    Obj_0x33_Touch_Booster            ; Offset_0x017CA0   
                dc.l    Obj_0x34_Title_Cards              ; Offset_0x00BB54 
                dc.l    Obj_0x35_Invincibility            ; Offset_0x01264E
                dc.l    Obj_0x36_Spikes                   ; Offset_0x00C944 
                dc.l    Obj_0x37_Rings_Out                ; Offset_0x00AD62 
                dc.l    Obj_0x38_Shield                   ; Offset_0x0125CE
                dc.l    Obj_0x39_Time_Game_Over           ; Offset_0x00BD76
                dc.l    Obj_0x3A_Level_Results            ; Offset_0x00BE38 
                dc.l    Obj_0x3B                          ; Offset_0x00CD00
                dc.l    Obj_0x3C                          ; Offset_0x00CD7C
                dc.l    Obj_0x3D_Break_Boost              ; Offset_0x018E78   
                dc.l    Obj_0x3E_Egg_Prison               ; Offset_0x020E5C
                dc.l    Obj_0x3F                          ; Offset_0x00A11E
                dc.l    Obj_0x40_Diagonal_Springs         ; Offset_0x01A30C
                dc.l    Obj_0x41_Springs                  ; Offset_0x00E7B8 
                dc.l    Obj_0x42_Steam_Vent               ; Offset_0x01A5CC
                dc.l    Obj_0x43_Giant_Spikeball          ; Offset_0x017F0C  
                dc.l    Obj_0x44                          ; Offset_0x00F10C
                dc.l    Obj_0x45_Spring_Push_Boost        ; Offset_0x0181A0
                dc.l    Obj_0x46_Spring_Ball              ; Offset_0x018ABE 
                dc.l    Obj_0x47_Switch                   ; Offset_0x018D9C
                dc.l    Obj_0x48_Cannon                   ; Offset_0x019250
                dc.l    Obj_0x49_Waterfall                ; Offset_0x015352 
                dc.l    Obj_0x4A_Octus                    ; Offset_0x01EBB8
                dc.l    Obj_0x4B_Buzz_Bomber              ; Offset_0x01E89C 
                dc.l    Obj_0x4C_Batbot                   ; Offset_0x01EE68 
                dc.l    Obj_0x4D_Rhinobot                 ; Offset_0x01D984 
                dc.l    Obj_0x4E_Crocobot                 ; Offset_0x01F2F0
                dc.l    Obj_0x4F_Dinobot                  ; Offset_0x01DEAC
                dc.l    Obj_0x50_Aquis                    ; Offset_0x01E010
                dc.l    Obj_0x51_Aquis                    ; Offset_0x01E62C
                dc.l    Obj_0x52_Piranha                  ; Offset_0x01DC54
                dc.l    Obj_0x53_Chopper                  ; Offset_0x01F5E8   
                dc.l    Obj_0x54_Motobug                  ; Offset_0x01F6E8 
                dc.l    Obj_0x55_Ghz_Boss                 ; Offset_0x02030C
                dc.l    Obj_0x56                          ; Offset_0x0205A6
                dc.l    Obj_0x57                          ; Offset_0x01F99C
                dc.l    Obj_0x58                          ; Offset_0x01FC0A
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $59
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $5A
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $5B
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $5C
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $5D   
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $5E
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $5F
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $60
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $61
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $62
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $63   
                dc.l    Obj_0x64_Pistons                  ; Offset_0x01A8B4
                dc.l    Obj_0x65_Platform                 ; Offset_0x01AA74 
                dc.l    Obj_0x66_Spring_Wall              ; Offset_0x01AEBC
                dc.l    Obj_0x67_Teleport_Attributes      ; Offset_0x01B0C4
                dc.l    Obj_0x68_Block_Arrow              ; Offset_0x01B520
                dc.l    Obj_0x69_Screw_Nut                ; Offset_0x01B810
                dc.l    Obj_0x6A_Rotating_Boxes           ; Offset_0x01BA30
                dc.l    Obj_0x6B_Mz_Platform              ; Offset_0x01BCEC
                dc.l    Obj_0x6C_Mz_Moving_Platforms      ; Offset_0x01BF6C
                dc.l    Obj_0x6D_Harpoon                  ; Offset_0x01B720   
                dc.l    Obj_0x6E_Machine                  ; Offset_0x01C2E4
                dc.l    Obj_Ox6F_Parallelogram_Elevator   ; Offset_0x01C4F8
                dc.l    Obj_0x70_Rotating_Gears           ; Offset_0x01C850
                dc.l    Obj_0x71_Hpz_Misc                 ; Offset_0x009A54 
                dc.l    Obj_0x72_Conveyor_Belt_Attributes ; Offset_0x01CBCC
                dc.l    Obj_0x73_Rotating_Rings           ; Offset_0x01CC54   
                dc.l    Obj_0x74_Invisible_Block          ; Offset_0x01561A
                dc.l    Obj_0x75_Spikeball_Chain          ; Offset_0x01CE48
                dc.l    Obj_0x76_Platform_Spikes          ; Offset_0x01D078
                dc.l    Obj_0x77_Bridge                   ; Offset_0x01D208
                dc.l    Obj_0x78_Rotating_Platforms       ; Offset_0x01D3C0
                dc.l    Obj_0x79_Lamp_Post                ; Offset_0x013B54
                dc.l    Obj_0x7A_Platform_Horizontal      ; Offset_0x01D594
                dc.l    Obj_0x7B_Spring_Tubes             ; Offset_0x01D74C
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $7C
                dc.l    Obj_0x7D_Hidden_Bonus             ; Offset_0x013DFC 
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $7E
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $7F
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $80
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $81
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $82
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $83   
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $84
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $85
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $86
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $87
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $88
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $89
                dc.l    Obj_0x8A_Credits                  ; Offset_0x020740
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $8B
                dc.l    Obj_Null                          ; Offset_0x00D24A ; Object $8C   
Obj_Null: ; Offset_0x00D24A:
                bra     DeleteObject            ; Offset_0x00D3B4                 
;=============================================================================== 
; Sub Routine ObjectFall
; [ Begin ]                         
;===============================================================================                 
ObjectFall: ; Offset_0x00D24E:
                move.l  $0008(A0), D2
                move.l  $000C(A0), D3
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A0), D0
                addi.w  #$0038, $0012(A0)
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A0)
                move.l  D3, $000C(A0)
                rts
;=============================================================================== 
; Sub Routine ObjectFall
; [ End ]                         
;===============================================================================  
                
;=============================================================================== 
; Sub Routine SpeedToPos
; [ Begin ]                         
;===============================================================================               
SpeedToPos: ; Offset_0x00D27A:
                move.l  $0008(A0), D2
                move.l  $000C(A0), D3
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A0)
                move.l  D3, $000C(A0)
                rts     
;=============================================================================== 
; Sub Routine SpeedToPos
; [ End ]                         
;=============================================================================== 
 
;=============================================================================== 
; Sub Routine MarkObjGone
; [ Begin ]                         
;===============================================================================                           
MarkObjGone: ; Offset_0x00D2A0:
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x00D2AA
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00D2AA:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Offset_0x00D2C2
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00D2C2:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x00D2D4
                bclr    #$07, $02(A2, D0)
Offset_0x00D2D4:
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x00D2D8:                
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x00D2E2
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00D2E2:
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Offset_0x00D2F6
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00D2F6:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x00D308
                bclr    #$07, $02(A2, D0)
Offset_0x00D308:
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x00D30C:                 
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x00D314
                rts
Offset_0x00D314:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Offset_0x00D32A
                rts
Offset_0x00D32A:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x00D33C
                bclr    #$07, $02(A2, D0)
Offset_0x00D33C:
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x00D340:                
                tst.w   ($FFFFFFD8).w
                bne.s   Offset_0x00D374
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Offset_0x00D35E
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00D35E:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x00D370
                bclr    #$07, $02(A2, D0)
Offset_0x00D370:
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x00D374:
                move.w  $0008(A0), D0
                andi.w  #$FF00, D0
                move.w  D0, D1
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0300, D0
                bhi     Offset_0x00D38E
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00D38E:
                sub.w   ($FFFFF7DC).w, D1
                cmpi.w  #$0300, D1
                bhi     Offset_0x00D39E
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00D39E:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x00D3B0
                bclr    #$07, $02(A2, D0)
Offset_0x00D3B0:
                bra     DeleteObject            ; Offset_0x00D3B4
;=============================================================================== 
; Sub Routine MarkObjGone
; [ End ]                         
;===============================================================================                 

;=============================================================================== 
; Sub Routine DeleteObject
; [ Begin ]                         
;===============================================================================                 
DeleteObject:  ; Offset_0x00D3B4: ; Delete Object / Null Object
                move.l  A0, A1
Offset_0x00D3B6:                
                moveq   #$00, D1
                moveq   #$0F, D0  
Offset_0x00D3BA:
                move.l  D1, (A1)+
                dbra    D0, Offset_0x00D3BA
                rts   
;=============================================================================== 
; Sub Routine DeleteObject
; [ End ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine DisplaySprite
; [ Begin ]                         
;===============================================================================                                   
DisplaySprite: ; Offset_0x00D3C2: ; Display Object
                lea     ($FFFFAC00).w, A1
                move.w  $0018(A0), D0
                lsr.w   #$01, D0
                andi.w  #$0380, D0
                adda.w  D0, A1
                cmpi.w  #$007E, (A1)
                bcc.s   Offset_0x00D3DE
                addq.w  #$02, (A1)
                adda.w  (A1), A1
                move.w  A0, (A1)
Offset_0x00D3DE:
                rts
;=============================================================================== 
; Sub Routine DisplaySprite
; [ End ]                         
;===============================================================================
 
;=============================================================================== 
; Sub Routine DisplaySprite
; [ Begin ]                         
;===============================================================================                   
DisplayA1Sprite: ; Offset_0x00D3E0:
                lea     ($FFFFAC00).w, A2
                move.w  $0018(A1), D0
                lsr.w   #$01, D0
                andi.w  #$0380, D0
                adda.w  D0, A2
                cmpi.w  #$007E, (A2)
                bcc.s   Offset_0x00D3FC
                addq.w  #$02, (A2)
                adda.w  (A2), A2
                move.w  A1, (A2)
Offset_0x00D3FC:
                rts
;=============================================================================== 
; Sub Routine DisplaySprite
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine DisplaySprite_Param
; [ Begin ]                         
;===============================================================================   
DisplaySprite_Param: ;  Offset_0x00D3FE:
                lea     ($FFFFAC00).w, A1
                adda.w  D0, A1
                cmpi.w  #$007E, (A1)
                bcc.s   Offset_0x00D410
                addq.w  #$02, (A1)
                adda.w  (A1), A1
                move.w  A0, (A1)
Offset_0x00D410:
                rts   
;=============================================================================== 
; Sub Routine DisplaySprite_Param
; [ End ]                         
;=============================================================================== 
                  
;=============================================================================== 
; Sub Routine AnimateSprite
; [ Begin ]                         
;===============================================================================                   
AnimateSprite: ; Offset_0x00D412:
                moveq   #$00, D0
                move.b  $001C(A0), D0
                cmp.b   $001D(A0), D0
                beq.s   Offset_0x00D42E
                move.b  D0, $001D(A0)
                move.b  #$00, $001B(A0)
                move.b  #$00, $001E(A0)
Offset_0x00D42E:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x00D468
                add.w   D0, D0
                adda.w  $00(A1, D0), A1
                move.b  (A1), $001E(A0)
                moveq   #$00, D1
                move.b  $001B(A0), D1
                move.b  $01(A1, D1), D0
                bmi.s   Offset_0x00D46A
Offset_0x00D44A: 
                andi.b  #$7F, D0
                move.b  D0, $001A(A0)
                move.b  $0022(A0), D1
                andi.b  #$03, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                addq.b  #$01, $001B(A0)
Offset_0x00D468:
                rts
Offset_0x00D46A:
                addq.b  #$01, D0
                bne.s   Offset_0x00D47A
                move.b  #$00, $001B(A0)
                move.b  $0001(A1), D0
                bra.s   Offset_0x00D44A
Offset_0x00D47A:
                addq.b  #$01, D0 
                bne.s   Offset_0x00D48E
                move.b  $02(A1, D1), D0
                sub.b   D0, $001B(A0)
                sub.b   D0, D1
                move.b  $01(A1, D1), D0
                bra.s   Offset_0x00D44A
Offset_0x00D48E:
                addq.b  #$01, D0
                bne.s   Offset_0x00D49A
                move.b  $02(A1, D1), $001C(A0)
                rts
Offset_0x00D49A:
                addq.b  #$01, D0
                bne.s   Offset_0x00D4AE
                addq.b  #$02, $0024(A0)
                move.b  #$00, $001E(A0)
                addq.b  #$01, $001B(A0)
                rts
Offset_0x00D4AE:
                addq.b  #$01, D0
                bne.s   Offset_0x00D4BE
                move.b  #$00, $001B(A0)
                clr.b   $0025(A0)
                rts
Offset_0x00D4BE:
                addq.b  #$01, D0
                bne.s   Offset_0x00D4C8
                addq.b  #$02, $0025(A0)
                rts
Offset_0x00D4C8:
                rts
;=============================================================================== 
; Sub Routine AnimateSprite
; [ End ]                         
;===============================================================================   
               
;=============================================================================== 
; Sub Routine Build_Sprites
; [ Begin ]                         
;===============================================================================               
BldSpr_ScrPos: ; Offset_0x00D4CA:
                dc.l    $00000000, $FFFFEEF0, $FFFFEE08, $FFFFEE18                                  
Build_Sprites: ; Offset_0x00D4DA:
                tst.w   ($FFFFFFD8).w
                bne     Build_Sprites_2p        ; Offset_0x00D824
                lea     ($FFFFF800).w, A2
                moveq   #$00, D5
                moveq   #$00, D4
                tst.b   ($FFFFF711).w
                beq.s   Offset_0x00D4F4
                bsr     Offset_0x00E01C
Offset_0x00D4F4:
                lea     ($FFFFAC00).w, A4
                moveq   #$07, D7
Offset_0x00D4FA:                
                tst.w   (A4)
                beq     Offset_0x00D5D0
                moveq   #$02, D6
Offset_0x00D502:                
                move.w  $00(A4, D6), A0
                tst.b   (A0)
                beq     Offset_0x00D5F2 
                tst.l   $0004(A0)
                beq     Offset_0x00D5F2
                andi.b  #$7F, $0001(A0)
                move.b  $0001(A0), D0
                move.b  D0, D4
                btst    #$06, D0
                bne     Offset_0x00D5F4
                andi.w  #$000C, D0
                beq.s   Offset_0x00D580
                move.l  BldSpr_ScrPos(PC, D0), A1  ; Offset_0x00D4CA
                moveq   #$00, D0
                move.b  $0019(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A1), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     Offset_0x00D5C8
                move.w  D3, D1                   
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge     Offset_0x00D5C8
                addi.w  #$0080, D3
                btst    #$04, D4
                beq.s   Offset_0x00D58A
                moveq   #$00, D0
                move.b  $0016(A0), D0
                move.w  $000C(A0), D2                 
                sub.w   $0004(A1), D2
                move.w  D2, D1
                add.w   D0, D1
                bmi.s   Offset_0x00D5C8
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge.s   Offset_0x00D5C8
                addi.w  #$0080, D2
                bra.s   Offset_0x00D5A2
Offset_0x00D580:                 
                move.w  $000A(A0), D2
                move.w  $0008(A0), D3
                bra.s   Offset_0x00D5A2
Offset_0x00D58A:
                move.w  $000C(A0), D2
                sub.w   $0004(A1), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   Offset_0x00D5C8
                cmpi.w  #$0180, D2
                bcc.s   Offset_0x00D5C8
Offset_0x00D5A2:
                move.l  $0004(A0), A1
                moveq   #$00, D1
                btst    #$05, D4
                bne.s   Offset_0x00D5BE
                move.b  $001A(A0), D1
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   Offset_0x00D5C2
Offset_0x00D5BE:
                bsr     Offset_0x00D6D8
Offset_0x00D5C2:                
                ori.b   #$80, $0001(A0)
Offset_0x00D5C8:                
                addq.w  #$02, D6                
                subq.w  #$02, (A4)
                bne     Offset_0x00D502    
Offset_0x00D5D0:
                lea     $0080(A4), A4
                dbra    D7, Offset_0x00D4FA  
                move.b  D5, ($FFFFF62C).w
                cmpi.b  #$50, D5
                beq.s   Offset_0x00D5EA
                move.l  #$00000000, (A2)
                rts
Offset_0x00D5EA:
                move.b  #$00, -5(A2)
                rts
Offset_0x00D5F2:
                bra.s   Offset_0x00D5C8             
Offset_0x00D5F4:
                move.l  A4, -(A7)
                lea     ($FFFFEE00).w, A4
                move.w  $0002(A0), A3
                move.l  $0004(A0), A5
                moveq   #$00, D0
                move.b  $000E(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A4), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     Offset_0x00D6CA
                move.w  D3, D1
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge     Offset_0x00D6CA
                addi.w  #$0080, D3
                btst    #$04, D4
                beq.s   Offset_0x00D652
                moveq   #$00, D0
                move.b  $0014(A0), D0
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                move.w  D2, D1
                add.w   D0, D1
                bmi     Offset_0x00D6CA
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge.s   Offset_0x00D6CA
                addi.w  #$0080, D2           
                bra.s   Offset_0x00D66A
Offset_0x00D652:                
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   Offset_0x00D6CA
                cmpi.w  #$0180, D2
                bcc.s   Offset_0x00D6CA
Offset_0x00D66A:                
                moveq   #$00, D1
                move.b  $000B(A0), D1
                beq.s   Offset_0x00D684
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   Offset_0x00D684
                bsr     Offset_0x00D6D0
Offset_0x00D684:
                ori.b   #$80, $0001(A0)
                lea     $0010(A0), A6
                moveq   #$00, D0
                move.b  $000F(A0), D0
                subq.w  #$01, D0
                bcs.s   Offset_0x00D6CA
Offset_0x00D698:                
                swap.w  D0
                move.w  (A6)+, D3
                sub.w   (A4), D3
                addi.w  #$0080, D3
                move.w  (A6)+, D2
                sub.w   $0004(A4), D2
                addi.w  #$0080, D2
                addq.w  #$01, A6
                moveq   #$00, D1
                move.b  (A6)+, D1
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   Offset_0x00D6C4
                bsr     Offset_0x00D6D0
Offset_0x00D6C4:
                swap.w  D0
                dbra    D0, Offset_0x00D698                 
Offset_0x00D6CA:
                move.l  (A7)+, A4
                bra     Offset_0x00D5C8
Offset_0x00D6D0:
                cmpi.b  #$50, D5
                bcs.s   Offset_0x00D6F0
                rts
Offset_0x00D6D8:
                move.w  $0002(A0), A3
                cmpi.b  #$50, D5
                bcc.s   Offset_0x00D718
                btst    #$00, D4
                bne.s   Offset_0x00D71A
                btst    #$01, D4
                bne     Offset_0x00D77A
Offset_0x00D6F0:
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                move.w  (A1)+, D0
                add.w   A3, D0
                move.w  D0, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   Offset_0x00D712
                addq.w  #$01, D0
Offset_0x00D712:
                move.w  D0, (A2)+
                dbra    D1, Offset_0x00D6F0
Offset_0x00D718:
                rts   
Offset_0x00D71A:
                btst    #$01, D4
                bne     Offset_0x00D7C2
Offset_0x00D722:                
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  D4, (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$0800, D0
                move.w  D0, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                neg.w   D0
                move.b  Offset_0x00D75A(PC, D4), D4
                sub.w   D4, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   Offset_0x00D752
                addq.w  #$01, D0
Offset_0x00D752:
                move.w  D0, (A2)+
                dbra    D1, Offset_0x00D722
                rts
Offset_0x00D75A:
                dc.b    $08, $08, $08, $08, $10, $10, $10, $10, $18, $18, $18, $18, $20, $20, $20, $20
Offset_0x00D76A:                
                dc.b    $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20
Offset_0x00D77A:
                move.b  (A1)+, D0
                move.b  (A1), D4
                ext.w   D0
                neg.w   D0
                move.b  Offset_0x00D76A(PC, D4), D4
                sub.w   D4, D0
                add.w   D2, D0                
                move.w  D0, (A2)+
                move.b  (A1)+, (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$1000, D0
                move.w  D0, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   Offset_0x00D7AA
                addq.w  #$01, D0
Offset_0x00D7AA:
                move.w  D0, (A2)+  
                dbra    D1, Offset_0x00D77A                                    
                rts 
Offset_0x00D7B2:                
                dc.b    $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20
Offset_0x00D7C2:
                move.b  (A1)+, D0
                move.b  (A1), D4
                ext.w   D0
                neg.w   D0
                move.b  Offset_0x00D7B2(PC, D4), D4
                sub.w   D4, D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  D4, (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$1800, D0
                move.w  D0, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                neg.w   D0
                move.b  Offset_0x00D804(PC, D4), D4
                sub.w   D4, D0    
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   Offset_0x00D7FC
                addq.w  #$01, D0
Offset_0x00D7FC:
                move.w  D0, (A2)+
                dbra    D1, Offset_0x00D7C2
                rts
Offset_0x00D804:
                dc.b    $08, $08, $08, $08, $10, $10, $10, $10, $18, $18, $18, $18, $20, $20, $20, $20
;=============================================================================== 
; Sub Routine Build_Sprites
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine Build_Sprites_2p
; [ Begin ]                         
;===============================================================================  
BldSpr_ScrPos_2p: ; Offset_0x00D814:                
                dc.l    $00000000, $FFFFEE00, $FFFFEE08, $FFFFEE18
Build_Sprites_2p: ; Offset_0x00D824:
                tst.w   ($FFFFF644).w
                bne.s   Build_Sprites_2p        ; Offset_0x00D824
                lea     ($FFFFF800).w, A2
                moveq   #$02, D5
                moveq   #$00, D4
                move.l  #$01D80F01, (A2)+
                move.l  #$00000001, (A2)+
                move.l  #$01D80F02, (A2)+
                move.l  #$00000000, (A2)+
                tst.b   ($FFFFF711).w
                beq.s   Offset_0x00D854
                bsr     Offset_0x00E098
Offset_0x00D854:
                lea     ($FFFFAC00).w, A4
                moveq   #$07, D7
Offset_0x00D85A:                
                move.w  (A4), D0
                beq     Offset_0x00D932
                move.w  D0, -(A7)
                moveq   #$02, D6
Offset_0x00D864:                
                move.w  $00(A4, D6), A0
                tst.b   (A0)
                beq     Offset_0x00D928
                andi.b  #$7F, $0001(A0)
                move.b  $0001(A0), D0
                move.b  D0, D4
                btst    #$06, D0
                bne     Offset_0x00DA6C
                andi.w  #$000C, D0
                beq.s   Offset_0x00D8D8
                move.l  BldSpr_ScrPos_2p(PC, D0), A1  ; Offset_0x00D814
                moveq   #$00, D0
                move.b  $0019(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A1), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     Offset_0x00D928
                move.w  D3, D1
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge.s   Offset_0x00D928
                addi.w  #$0080, D3
                btst    #$04, D4  
                beq.s   Offset_0x00D8E6
                moveq   #$00, D0
                move.b  $0016(A0), D0
                move.w  $000C(A0), D2
                sub.w   $0004(A1), D2
                move.w  D2, D1
                add.w   D0, D1
                bmi.s   Offset_0x00D928
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge.s   Offset_0x00D928
                addi.w  #$0100, D2
                bra.s   Offset_0x00D902
Offset_0x00D8D8:                
                move.w  $000A(A0), D2
                move.w  $0008(A0), D3
                addi.w  #$0080, D2
                bra.s   Offset_0x00D902
Offset_0x00D8E6:                
                move.w  $000C(A0), D2
                sub.w   $0004(A1), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   Offset_0x00D928
                cmpi.w  #$0180, D2
                bcc.s   Offset_0x00D928
                addi.w  #$0080, D2
Offset_0x00D902:
                move.l  $0004(A0), A1
                moveq   #$00, D1
                btst    #$05, D4
                bne.s   Offset_0x00D91E
                move.b  $001A(A0), D1
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #1, D1
                bmi.s   Offset_0x00D922
Offset_0x00D91E:
                bsr     Offset_0x00DC70
Offset_0x00D922:
                ori.b   #$80, $0001(A0)
Offset_0x00D928:                
                addq.w  #$02, D6
                subq.w  #$02, (A7)
                bne     Offset_0x00D864
                addq.w  #$02, A7
Offset_0x00D932:                
                lea     $0080(A4), A4
                dbra    D7, Offset_0x00D85A
                move.b  D5, ($FFFFF62C).w
                cmpi.b  #$50, D5
                bcc.s   Offset_0x00D94C
                move.l  #$00000000, (A2)
                bra.s   Offset_0x00D964
Offset_0x00D94C:
                move.b  #$00, -5(A2)
                bra.s   Offset_0x00D964
Offset_0x00D954:
                dc.b    $00, $00, $00, $00, $FF, $FF, $EE, $20, $FF, $FF, $EE, $28, $FF, $FF, $EE, $38                           
Offset_0x00D964:
                lea     ($FFFFDD00).w, A2
                moveq   #$00, D5
                moveq   #$00, D4
                tst.b   ($FFFFF711).w
                beq.s   Offset_0x00D976
                bsr     Offset_0x00E0AE
Offset_0x00D976:
                lea     ($FFFFAC00).w, A4
                moveq   #$07, D7
Offset_0x00D97C:                
                tst.w   (A4)
                beq     Offset_0x00DA4A
                moveq   #$02, D6
Offset_0x00D984:                
                move.w  $00(A4, D6), A0
                tst.b   (A0)
                beq     Offset_0x00DA42
                move.b  $0001(A0), D0
                move.b  D0, D4
                btst    #$06, D0
                bne     Offset_0x00DB4E
                andi.w  #$000C, D0
                beq.s   Offset_0x00D9F2
                move.l  Offset_0x00D954(PC, D0), A1
                moveq   #$00, D0
                move.b  $0019(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A1), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     Offset_0x00DA42
                move.w  D3, D1
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge.s   Offset_0x00DA42
                addi.w  #$0080, D3
                btst    #$04, D4
                beq.s   Offset_0x00DA00
                moveq   #$00, D0
                move.b  $0016(A0), D0
                move.w  $000C(A0), D2
                sub.w   $0004(A1), D2
                move.w  D2, D1 
                add.w   D0, D1
                bmi.s   Offset_0x00DA42
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge.s   Offset_0x00DA42
                addi.w  #$01E0, D2
                bra.s   Offset_0x00DA1C
Offset_0x00D9F2:
                move.w  $000A(A0), D2
                move.w  $0008(A0), D3
                addi.w  #$0160, D2
                bra.s   Offset_0x00DA1C
Offset_0x00DA00:
                move.w  $000C(A0), D2
                sub.w   $0004(A1), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   Offset_0x00DA42
                cmpi.w  #$0180, D2
                bcc.s   Offset_0x00DA42
                addi.w  #$0160, D2
Offset_0x00DA1C:
                move.l  $0004(A0), A1
                moveq   #$00, D1
                btst    #$05, D4
                bne.s   Offset_0x00DA38
                move.b  $001A(A0), D1
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   Offset_0x00DA3C
Offset_0x00DA38:
                bsr     Offset_0x00DC70
Offset_0x00DA3C:
                ori.b   #$80, $0001(A0)
Offset_0x00DA42:                
                addq.w  #$02, D6
                subq.w  #$02, (A4)
                bne     Offset_0x00D984
Offset_0x00DA4A:                
                lea     $0080(A4), A4
                dbra    D7, Offset_0x00D97C                 
                move.b  D5, ($FFFFF62C).w
                cmpi.b  #$50, D5
                beq.s   Offset_0x00DA64
                move.l  #$00000000, (A2)
                rts
Offset_0x00DA64:
                move.b  #$00, -5(A2)
                rts
Offset_0x00DA6C:
                move.l  A4, -(A7)
                lea     ($FFFFEE00).w, A4
                move.w  $0002(A0), A3
                move.l  $0004(A0), A5
                moveq   #$00, D0
                move.b  $000E(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A4), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     Offset_0x00DB48
                move.w  D3, D1
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge     Offset_0x00DB48
                addi.w  #$0080, D3
                btst    #$04, D4
                beq.s   Offset_0x00DACC
                moveq   #$00, D0
                move.b  $0014(A0), D0
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                move.w  D2, D1
                add.w   D0, D1
                bmi     Offset_0x00DB48
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge     Offset_0x00DB48
                addi.w  #$0100, D2
                bra.s   Offset_0x00DAE8
Offset_0x00DACC:
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   Offset_0x00DB48
                cmpi.w  #$0180, D2
                bcc.s   Offset_0x00DB48
                addi.w  #$0080, D2
Offset_0x00DAE8:                
                moveq   #$00, D1
                move.b  $000B(A0), D1
                beq.s   Offset_0x00DB02
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   Offset_0x00DB02
                bsr     Offset_0x00DC68
Offset_0x00DB02:
                ori.b   #$80, $0001(A0)
                lea     $0010(A0), A6
                moveq   #$00, D0
                move.b  $000F(A0), D0
                subq.w  #$01, D0
                bcs.s   Offset_0x00DB48
Offset_0x00DB16:                
                swap.w  D0
                move.w  (A6)+, D3
                sub.w   (A4), D3
                addi.w  #$0080, D3
                move.w  (A6)+, D2
                sub.w   $0004(A4), D2
                addi.w  #$0100, D2
                addq.w  #$01, A6
                moveq   #$00, D1
                move.b  (A6)+, D1
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   Offset_0x00DB42
                bsr     Offset_0x00DC68
Offset_0x00DB42:
                swap.w  D0
                dbra    D0, Offset_0x00DB16
Offset_0x00DB48:
                move.l  (A7)+, A4
Offset_0x00DB4A:                
                bra     Offset_0x00D928                     
Offset_0x00DB4E:
                move.l  A4, -(A7)
                lea     ($FFFFEE20).w, A4
                move.w  $0002(A0), A3
                move.l  $0004(A0), A5
                moveq   #$00, D0
                move.b  $000E(A0), D0
                move.w  $0008(A0), D3
                sub.w   (A4), D3
                move.w  D3, D1
                add.w   D0, D1
                bmi     Offset_0x00DC2A
                move.w  D3, D1
                sub.w   D0, D1
                cmpi.w  #$0140, D1
                bge     Offset_0x00DC2A
                addi.w  #$0080, D3
                btst    #$04, D4
                beq.s   Offset_0x00DBAE
                moveq   #$00, D0
                move.b  $0014(A0), D0
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                move.w  D2, D1
                add.w   D0, D1
                bmi     Offset_0x00DC2A
                move.w  D2, D1
                sub.w   D0, D1
                cmpi.w  #$00E0, D1
                bge     Offset_0x00DC2A
                addi.w  #$01E0, D2
                bra.s   Offset_0x00DBCA
Offset_0x00DBAE:                
                move.w  $000C(A0), D2
                sub.w   $0004(A4), D2
                addi.w  #$0080, D2
                cmpi.w  #$0060, D2
                bcs.s   Offset_0x00DC2A
                cmpi.w  #$0180, D2
                bcc.s   Offset_0x00DC2A
                addi.w  #$0160, D2
Offset_0x00DBCA:
                moveq   #$00, D1
                move.b  $000B(A0), D1
                beq.s   Offset_0x00DBE4
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #1, D1
                bmi.s   Offset_0x00DBE4
                bsr     Offset_0x00DC68
Offset_0x00DBE4: 
                ori.b   #$80, $0001(A0)
                lea     $0010(A0), A6
                moveq   #$00, D0
                move.b  $000F(A0), D0
                subq.w  #$01, D0
                bcs.s   Offset_0x00DC2A
Offset_0x00DBF8:                
                swap.w  D0
                move.w  (A6)+, D3
                sub.w   (A4), D3
                addi.w  #$0080, D3
                move.w  (A6)+, D2
                sub.w   $0004(A4), D2
                addi.w  #$01E0, D2
                addq.w  #$01, A6
                moveq   #$00, D1
                move.b  (A6)+, D1
                add.w   D1, D1
                move.l  A5, A1
                adda.w  $00(A1, D1), A1
                move.w  (A1)+, D1
                subq.w  #$01, D1
                bmi.s   Offset_0x00DC24
                bsr     Offset_0x00DC68
Offset_0x00DC24:
                swap.w  D0
                dbra    D0, Offset_0x00DBF8    
Offset_0x00DC2A:
                move.l  (A7)+, A4
                bra     Offset_0x00DA42
;=============================================================================== 
; Sub Routine Build_Sprites_2p
; [ End ]                         
;===============================================================================                  

;=============================================================================== 
; Sub Routine ModifySpriteAttr_2P         
; [ Begin ]                               2P Mode Objects Attributes #1
;===============================================================================                  
ModifySpriteAttr_2P: ; Offset_0x00DC30: 
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x00DC4A
                move.w  $0002(A0), D0
                andi.w  #$07FF, D0
                lsr.w   #$01, D0
                andi.w  #$F800, $0002(A0)
                add.w   D0, $0002(A0)
Offset_0x00DC4A:
                rts  
;=============================================================================== 
; Sub Routine ModifySpriteAttr_2P         
; [ End ]                                 2P Mode Objects Attributes #1
;===============================================================================                 

;=============================================================================== 
; Sub Routine ModifySpriteAttr_2P         
; [ Begin ]                               2P Mode Objects Attributes #2
;===============================================================================                  
ModifyA1SpriteAttr_2P: ; Offset_0x00DC4C: 
                tst.w   ($FFFFFFD8).w
                beq.s   ModifySpriteAttr_Not2pmode ; Offset_0x00DC66
                move.w  $0002(A1), D0
                andi.w  #$07FF, D0
                lsr.w   #$01, D0
                andi.w  #$F800, $0002(A1)
                add.w   D0, $0002(A1)
ModifySpriteAttr_Not2pmode ; Offset_0x00DC66:
                rts 
;=============================================================================== 
; Sub Routine ModifySpriteAttr_2P         
; [ End ]                               2P Mode Objects Attributes #2
;===============================================================================
                                                  
Offset_0x00DC68:
                cmpi.b  #$50, D5
                bcs.s   Offset_0x00DC88
                rts
Offset_0x00DC70:
                move.w  $0002(A0), A3
                cmpi.b  #$50, D5
                bcc.s   Offset_0x00DCB4
                btst    #$00, D4
                bne.s   Offset_0x00DCC6
                btst    #$01, D4
                bne     Offset_0x00DD28
Offset_0x00DC88:                
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4    
                move.b  Offset_0x00DCB6(PC, D4), (A2)+             
                addq.b  #$01, D5
                move.b  D5, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   A3, D0
                move.w  D0, (A2)+
                move.w  (A1)+, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   Offset_0x00DCAE
                addq.w  #$01, D0
Offset_0x00DCAE:
                move.w  D0, (A2)+
                dbra    D1, Offset_0x00DC88
Offset_0x00DCB4:                
                rts                
Offset_0x00DCB6:               
                dc.b    $00, $00, $01, $01, $04, $04, $05, $05, $08, $08, $09, $09, $0C, $0C, $0D, $0D
Offset_0x00DCC6:
                btst    #$01, D4
                bne     Offset_0x00DD84
Offset_0x00DCCE:                
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  Offset_0x00DCB6(PC, D4), (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$0800, D0
                move.w  D0, (A2)+
                move.w  (A1)+, D0
                neg.w   D0
                move.b  Offset_0x00DD08(PC, D4), D4
                sub.w   D4, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   Offset_0x00DD00
                addq.w  #1, D0
Offset_0x00DD00:
                move.w  D0, (A2)+
                dbra    D1, Offset_0x00DCCE
                rts      
Offset_0x00DD08:
                dc.b    $08, $08, $08, $08, $10, $10, $10, $10, $18, $18, $18, $18, $20, $20, $20, $20  
Offset_0x00DD18: 
                dc.b    $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20
Offset_0x00DD28:
                move.b  (A1)+, D0
                move.b  (A1), D4
                ext.w   D0
                neg.w   D0
                move.b  Offset_0x00DD18(PC, D4), D4
                sub.w   D4, D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  Offset_0x00DD64(PC, D4), (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$1000, D0
                move.w  D0, (A2)+
                move.w  (A1)+, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   Offset_0x00DD5C
                addq.w  #$01, D0   
Offset_0x00DD5C:
                move.w  D0, (A2)+
                dbra    D1, Offset_0x00DD28
                rts           
Offset_0x00DD64:
                dc.b    $00, $00, $01, $01, $04, $04, $05, $05, $08, $08, $09, $09, $0C, $0C, $0D, $0D 
Offset_0x00DD74:  
                dc.b    $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20, $08, $10, $18, $20
Offset_0x00DD84:
                move.b  (A1)+, D0
                move.b  (A1), D4
                ext.w   D0
                neg.w   D0
                move.b  Offset_0x00DD74(PC, D4), D4
                sub.w   D4, D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  Offset_0x00DD64(PC, D4), (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   A3, D0
                eori.w  #$1800, D0
                move.w  D0, (A2)+
                move.w  (A1)+, D0
                neg.w   D0
                move.b  Offset_0x00DDC8(PC, D4), D4
                sub.w   D4, D0
                add.w   D3, D0
                andi.w  #$01FF, D0
                bne.s   Offset_0x00DDC0
                addq.w  #$01, D0
Offset_0x00DDC0:
                move.w  D0, (A2)+
                dbra    D1, Offset_0x00DD84
                rts               
Offset_0x00DDC8:
                dc.b    $08, $08, $08, $08, $10, $10, $10, $10, $18, $18, $18, $18, $20, $20, $20, $20
Offset_0x00DDD8:
                move.w  $0008(A0), D0
                sub.w   ($FFFFEE00).w, D0
                bmi.s   Offset_0x00DDFC
                cmpi.w  #$0140, D0
                bge.s   Offset_0x00DDFC
                move.w  $000C(A0), D1
                sub.w   ($FFFFEE04).w, D1
                bmi.s   Offset_0x00DDFC
                cmpi.w  #$00E0, D1
                bge.s   Offset_0x00DDFC
                moveq   #$00, D0
                rts
Offset_0x00DDFC:
                moveq   #$01, D0
                rts   
;Offset_0x00DE00:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  $0008(A0), D0
                sub.w   ($FFFFEE00).w, D0
                add.w   D1, D0
                bmi.s   Offset_0x00DE30
                add.w   D1, D1
                sub.w   D1, D0
                cmpi.w  #$0140, D0
                bge.s   Offset_0x00DE30
                move.w  $000C(A0), D1
                sub.w   ($FFFFEE04).w, D1
                bmi.s   Offset_0x00DE30
                cmpi.w  #$00E0, D1
                bge.s   Offset_0x00DE30
                moveq   #$00, D0
                rts
Offset_0x00DE30:
                moveq   #$01, D0
                rts
;========================= Load Ring List - [ Start ] ==========================                 
Load_Ring_Pos: ; Offset_0x00DE34:
                moveq   #$00, D0
                move.b  ($FFFFF710).w, D0
                move.w  Offset_0x00DE42(PC, D0), D0
                jmp     Offset_0x00DE42(PC, D0)
Offset_0x00DE42:  
                dc.w    Offset_0x00DE46-Offset_0x00DE42
                dc.w    Offset_0x00DE90-Offset_0x00DE42
Offset_0x00DE46: 
                addq.b  #$02, ($FFFFF710).w
                bsr     Offset_0x00E140
                lea     ($FFFFE800).w, A1
                move.w  ($FFFFEE00).w, D4
                subq.w  #$08, D4
                bhi.s   Offset_0x00DE62
                moveq   #$01, D4
                bra.s   Offset_0x00DE62
Offset_0x00DE5E:                
                lea     $0006(A1), A1
Offset_0x00DE62:
                cmp.w   $0002(A1), D4
                bhi.s   Offset_0x00DE5E
                move.w  A1, ($FFFFF712).w
                move.w  A1, ($FFFFF716).w
                addi.w  #$0150, D4
                bra.s   Offset_0x00DE7A
Offset_0x00DE76:                
                lea     $0006(A1), A1
Offset_0x00DE7A:
                cmp.w   $0002(A1), D4
                bhi.s   Offset_0x00DE76   
                move.w  A1, ($FFFFF714).w
                move.w  A1, ($FFFFF718).w
                move.b  #$01, ($FFFFF711).w
                rts
Offset_0x00DE90:
                lea     ($FFFFEF80).w, A2
                move.w  (A2)+, D1
                subq.w  #$01, D1
                bcs.s   Offset_0x00DEC6
Offset_0x00DE9A:                
                move.w  (A2)+, D0
                beq.s   Offset_0x00DE9A
                move.w  D0, A1
                subq.b  #$01, (A1)
                bne.s   Offset_0x00DEC2
                move.b  #$06, (A1)
                addq.b  #$01, $0001(A1)
                cmpi.b  #$08, $0001(A1)
                bne.s   Offset_0x00DEC2
                move.w  #$FFFF, (A1)
                move.w  #$0000, -2(A2)
                subq.w  #$01, ($FFFFEF80).w
Offset_0x00DEC2:
                dbra    D1, Offset_0x00DE9A
Offset_0x00DEC6:                
                move.w  ($FFFFF712).w, A1
                move.w  ($FFFFEE00).w, D4
                subq.w  #$08, D4
                bhi.s   Offset_0x00DEDA
                moveq   #$01, D4
                bra.s   Offset_0x00DEDA
Offset_0x00DED6:                
                lea     $0006(A1), A1
Offset_0x00DEDA:
                cmp.w   $0002(A1), D4
                bhi.s   Offset_0x00DED6
                bra.s   Offset_0x00DEE4
Offset_0x00DEE2:                
                subq.w  #$06, A1
Offset_0x00DEE4:
                cmp.w   -4(A1), D4
                bls.s   Offset_0x00DEE2
                move.w  A1, ($FFFFF712).w
                move.w  ($FFFFF714).w, A2
                addi.w  #$0150, D4
                bra.s   Offset_0x00DEFC
Offset_0x00DEF8:                
                lea     $0006(A2), A2
Offset_0x00DEFC:
                cmp.w   $0002(A2), D4
                bhi.s   Offset_0x00DEF8
                bra.s   Offset_0x00DF06
Offset_0x00DF04:                
                subq.w  #$06, A2
Offset_0x00DF06:
                cmp.w   -4(A2), D4
                bls.s   Offset_0x00DF04
                move.w  A2, ($FFFFF714).w
                tst.w   ($FFFFFFD8).w
                bne.s   Offset_0x00DF20
                move.w  A1, ($FFFFF716).w
                move.w  A2, ($FFFFF718).w
                rts
Offset_0x00DF20:
                move.w  ($FFFFF716).w, A1
                move.w  ($FFFFEE20).w, D4
                subq.w  #$08, D4
                bhi.s   Offset_0x00DF34
                moveq   #$01, D4
                bra.s   Offset_0x00DF34
Offset_0x00DF30:                
                lea     $0006(A1), A1
Offset_0x00DF34:
                cmp.w   $0002(A1), D4
                bhi.s   Offset_0x00DF30
                bra.s   Offset_0x00DF3E
Offset_0x00DF3C:                
                subq.w  #$06, A1 
Offset_0x00DF3E:
                cmp.w   -4(A1), D4
                bls.s   Offset_0x00DF3C
                move.w  A1, ($FFFFF716).w
                move.w  ($FFFFF718).w, A2
                addi.w  #$0150, D4
                bra.s   Offset_0x00DF56
Offset_0x00DF52:
                lea     $0006(A2), A2
Offset_0x00DF56:
                cmp.w   $0002(A2), D4
                bhi.s   Offset_0x00DF52
                bra.s   Offset_0x00DF60
Offset_0x00DF5E:
                subq.w  #$06, A2   
Offset_0x00DF60:
                cmp.w   -4(A2), D4
                bls.s   Offset_0x00DF5E
                move.w  A2, ($FFFFF718).w
                rts
                
;===============================================================================                
TouchRings: ; Offset_0x00DF6C:
                move.w  ($FFFFF712).w, A1
                move.w  ($FFFFF714).w, A2
                cmpa.w  #$B000, A0
                beq.s   Offset_0x00DF82
                move.w  ($FFFFF716).w, A1
                move.w  ($FFFFF718).w, A2
Offset_0x00DF82:
                cmpa.l  A1, A2
                beq     Offset_0x00E01A
                cmpi.w  #$005A, $0030(A0)
                bcc     Offset_0x00E01A
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                subi.w  #$0008, D2
                moveq   #$00, D5
                move.b  $0016(A0), D5
                subq.b  #$03, D5
                sub.w   D5, D3
                cmpi.b  #$39, $001A(A0)
                bne.s   Offset_0x00DFB6
                addi.w  #$000C, D3
                moveq   #$0A, D5
Offset_0x00DFB6:
                move.w  #$0006, D1
                move.w  #$000C, D6
                move.w  #$0010, D4
                add.w   D5, D5
Offset_0x00DFC4:                
                tst.w   (A1)
                bne     Offset_0x00E010
                move.w  $0002(A1), D0
                sub.w   D1, D0
                sub.w   D2, D0
                bcc.s   Offset_0x00DFDC
                add.w   D6, D0
                bcs.s   Offset_0x00DFE2
                bra     Offset_0x00E010
Offset_0x00DFDC:
                cmp.w   D4, D0
                bhi     Offset_0x00E010
Offset_0x00DFE2:                
                move.w  $0004(A1), D0
                sub.w   D1, D0
                sub.w   D3, D0
                bcc.s   Offset_0x00DFF4
                add.w   D6, D0
                bcs.s   Offset_0x00DFFA
                bra     Offset_0x00E010
Offset_0x00DFF4:
                cmp.w   D5, D0
                bhi     Offset_0x00E010
Offset_0x00DFFA:
                move.w  #$0604, (A1)
                bsr     Offset_0x00AD22
                lea     ($FFFFEF82).w, A3
Offset_0x00E006:
                tst.w   (A3)+
                bne.s   Offset_0x00E006
                move.w  A1, -(A3)
                addq.w  #$01, ($FFFFEF80).w
Offset_0x00E010:
                lea     $0006(A1), A1
                cmpa.l  A1, A2
                bne     Offset_0x00DFC4
Offset_0x00E01A:
                rts                                  
Offset_0x00E01C:
                move.w  ($FFFFF712).w, A0
                move.w  ($FFFFF714).w, A4
                cmpa.l  A0, A4
                bne.s   Offset_0x00E02A
                rts
Offset_0x00E02A:
                lea     ($FFFFEE00).w, A3
Offset_0x00E02E:                
                tst.w   (A0)
                bmi     Offset_0x00E08C
                move.w  $0002(A0), D3
                sub.w   (A3), D3
                addi.w  #$0080, D3
                move.w  $0004(A0), D2
                sub.w   $0004(A3), D2
                addi.w  #$0008, D2
                bmi.s   Offset_0x00E08C
                cmpi.w  #$00F0, D2
                bge.s   Offset_0x00E08C
                addi.w  #$0078, D2
                lea     (Offset_0x00E200), A1
                moveq   #$00, D1
                move.b  $0001(A0), D1
                bne.s   Offset_0x00E068
                move.b  ($FFFFFEC3).w, D1
Offset_0x00E068:
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                move.w  (A1)+, D0
                addi.w  #$26BC, D0
                move.w  D0, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                add.w   D3, D0
                move.w  D0, (A2)+
Offset_0x00E08C:
                lea     $0006(A0), A0
                cmpa.l  A0, A4
                bne     Offset_0x00E02E  
                rts
Offset_0x00E098:
                lea     ($FFFFEE00).w, A3
                move.w  #$0078, D6
                move.w  ($FFFFF712).w, A0
                move.w  ($FFFFF714).w, A4
                cmpa.l  A0, A4
                bne.s   Offset_0x00E0C4
                rts
Offset_0x00E0AE:
                lea     ($FFFFEE20).w, A3
                move.w  #$0158, D6
                move.w  ($FFFFF716).w, A0
                move.w  ($FFFFF718).w, A4
                cmpa.l  A0, A4                
                bne.s   Offset_0x00E0C4
                rts
Offset_0x00E0C4:
                tst.w   (A0)
                bmi     Offset_0x00E124
                move.w  $0002(A0), D3
                sub.w   (A3), D3
                addi.w  #$0080, D3
                move.w  $0004(A0), D2
                sub.w   $0004(A3), D2
                addi.w  #$0088, D2
                bmi.s   Offset_0x00E124
                cmpi.w  #$0170, D2
                bge.s   Offset_0x00E124
                add.w   D6, D2
                lea     (Offset_0x00E200), A1
                moveq   #$00, D1
                move.b  $0001(A0), D1
                bne.s   Offset_0x00E0FC
                move.b  ($FFFFFEC3).w, D1
Offset_0x00E0FC:
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.b  (A1)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, (A2)+
                move.b  (A1)+, D4
                move.b  Offset_0x00E130(PC, D4), (A2)+
                addq.b  #$01, D5
                move.b  D5, (A2)+
                addq.w  #$02, A1
                move.w  (A1)+, D0
                addi.w  #$235E, D0
                move.w  D0, (A2)+
                move.w  (A1)+, D0
                add.w   D3, D0
                move.w  D0, (A2)+
Offset_0x00E124:                
                lea     $0006(A0), A0
                cmpa.l  A0, A4
                bne     Offset_0x00E0C4
                rts     
Offset_0x00E130:
                dc.b    $00, $00, $01, $01, $04, $04, $05, $05, $08, $08, $09, $09, $0C, $0C, $0D, $0D  
Offset_0x00E140: ; Load Rings routine
                lea     ($FFFFE800).w, A1
                moveq   #$00, D0
                move.w  #$017F, D1
Offset_0x00E14A:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x00E14A
                lea     ($FFFFEF80).w, A1
                move.w  #$000F, D1
Offset_0x00E158:
                move.l  D0, (A1)+
                dbra    D1, Offset_0x00E158
                moveq   #$00, D5
                moveq   #$00, D0
                move.w  ($FFFFFE10).w, D0
                ror.b   #$01, D0
                lsr.w   #$06, D0
                lea     (Rings_Layout), A1      ; Offset_0x048000
                move.w  $00(A1, D0), D0
                lea     $00(A1, D0), A1
                lea     ($FFFFE806).w, A2
Offset_0x00E17C:                
                move.w  (A1)+, D2
                bmi.s   Offset_0x00E1C4
                move.w  (A1)+, D3
                bmi.s   Offset_0x00E1A4
                move.w  D3, D0
                rol.w   #$04, D0
                andi.w  #$0007, D0
                andi.w  #$0FFF, D3
Offset_0x00E190:                
                move.w  #$0000, (A2)+
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                addi.w  #$0018, D2
                addq.w  #$01, D5
                dbra    D0, Offset_0x00E190
                bra.s   Offset_0x00E17C
Offset_0x00E1A4:
                move.w  D3, D0
                rol.w   #$04, D0
                andi.w  #$0007, D0
                andi.w  #$0FFF, D3
Offset_0x00E1B0:                
                move.w  #$0000, (A2)+
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                addi.w  #$0018, D3
                addq.w  #$01, D5
                dbra    D0, Offset_0x00E1B0
                bra.s   Offset_0x00E17C
Offset_0x00E1C4:
                move.w  D5, ($FFFFFF40).w
                moveq   #$FFFFFFFF, D0
                move.l  D0, (A2)+
                lea     ($FFFFE802).w, A1
                move.w  #$00FE, D3
Offset_0x00E1D4:
                move.w  D3, D4
                lea     $0006(A1), A2
                move.w  (A1), D0
Offset_0x00E1DC:
                tst.w   (A2)
                beq.s   Offset_0x00E1EE
                cmp.w   (A2), D0
                bls.s   Offset_0x00E1EE
                move.l  (A1), D1
                move.l  (A2), D0
                move.l  D0, (A1)
                move.l  D1, (A2)
                swap.w  D0
Offset_0x00E1EE:
                lea     $0006(A2), A2
                dbra    D4, Offset_0x00E1DC
                lea     $0006(A1), A1
                dbra    D3, Offset_0x00E1D4
                rts
Offset_0x00E200:    
                dc.w    Offset_0x00E210-Offset_0x00E200
                dc.w    Offset_0x00E218-Offset_0x00E200
                dc.w    Offset_0x00E220-Offset_0x00E200
                dc.w    Offset_0x00E228-Offset_0x00E200
                dc.w    Offset_0x00E230-Offset_0x00E200
                dc.w    Offset_0x00E238-Offset_0x00E200
                dc.w    Offset_0x00E240-Offset_0x00E200
                dc.w    Offset_0x00E248-Offset_0x00E200
Offset_0x00E210:
                dc.l    $F8050000, $0000FFF8
Offset_0x00E218:
                dc.l    $F8050004, $0002FFF8
Offset_0x00E220:
                dc.l    $F8010008, $0004FFFC
Offset_0x00E228:
                dc.l    $F8050804, $0802FFF8
Offset_0x00E230:
                dc.l    $F805000A, $0005FFF8
Offset_0x00E238:
                dc.l    $F805180A, $1805FFF8
Offset_0x00E240:
                dc.l    $F805080A, $0805FFF8
Offset_0x00E248: 
                dc.l    $F805100A, $1005FFF8
                
;======================== Load Object List - [ Start ] ========================                 
Load_Object_Pos: ; Offset_0x00E250:                 
                moveq   #$00, D0
                move.b  ($FFFFF76C).w, D0
                move.w  Load_Object_Pos_Index(PC, D0), D0 ; Offset_0x00E25E
                jmp     Load_Object_Pos_Index(PC, D0)     ; Offset_0x00E25E
Load_Object_Pos_Index: ; Offset_0x00E25E:                                
                dc.w    Load_Object_Pos_Sub_01-Load_Object_Pos_Index ; Offset_0x00E264
                dc.w    Load_Object_Pos_Sub_02-Load_Object_Pos_Index ; Offset_0x00E310
                dc.w    Load_Object_Pos_Sub_03-Load_Object_Pos_Index ; Offset_0x00E458
Load_Object_Pos_Sub_01: ; Offset_0x00E264:   
                addq.b  #$02, ($FFFFF76C).w
                move.w  ($FFFFFE10).w, D0
                ror.b   #$01, D0
                lsr.w   #$06, D0
                lea     (Objects_Layout), A0    ; Offset_0x044000
                move.l  A0, A1
                adda.w  $00(A0, D0), A0
                move.l  A0, ($FFFFF770).w
                move.l  A0, ($FFFFF774).w
                move.l  A0, ($FFFFF778).w
                move.l  A0, ($FFFFF77C).w
                lea     ($FFFFFC00).w, A2
                move.w  #$0101, (A2)+
                move.w  #$005E, D0
Offset_0x00E298:
                clr.l   (A2)+
                dbra    D0, Offset_0x00E298
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D2
                move.w  ($FFFFEE00).w, D6
                subi.w  #$0080, D6
                bcc.s   Offset_0x00E2B0
                moveq   #$00, D6
Offset_0x00E2B0:
                andi.w  #$FF80, D6
                move.l  ($FFFFF770).w, A0
Offset_0x00E2B8:
                cmp.w   (A0), D6
                bls.s   Offset_0x00E2CA
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E2C6
                move.b  (A2), D2
                addq.b  #$01, (A2)
Offset_0x00E2C6:
                addq.w  #$06, A0
                bra.s   Offset_0x00E2B8
Offset_0x00E2CA:
                move.l  A0, ($FFFFF770).w   
                move.l  A0, ($FFFFF778).w
                move.l  ($FFFFF774).w, A0
                subi.w  #$0080, D6
                bcs.s   Offset_0x00E2EE
Offset_0x00E2DC:
                cmp.w   (A0), D6
                bls.s   Offset_0x00E2EE
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E2EA
                addq.b  #$01, $0001(A2)
Offset_0x00E2EA:
                addq.w  #$06, A0
                bra.s   Offset_0x00E2DC
Offset_0x00E2EE:
                move.l  A0, ($FFFFF774).w
                move.l  A0, ($FFFFF77C).w
                move.w  #$FFFF, ($FFFFF76E).w
                move.w  #$FFFF, ($FFFFF78C).w
                tst.w   ($FFFFFFD8).w
                beq.s   Load_Object_Pos_Sub_02  ; Offset_0x00E310
                addq.b  #$02, ($FFFFF76C).w
                bra     Offset_0x00E3DC
Load_Object_Pos_Sub_02: ;Offset_0x00E310:
                move.w  ($FFFFEE00).w, D1
                subi.w  #$0080, D1
                andi.w  #$FF80, D1
                move.w  D1, ($FFFFF7DA).w
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D2
                move.w  ($FFFFEE00).w, D6
                andi.w  #$FF80, D6
                cmp.w   ($FFFFF76E).w, D6
                beq     Offset_0x00E3DA
                bge.s   Offset_0x00E396
                move.w  D6, ($FFFFF76E).w
                move.l  ($FFFFF774).w, A0
                subi.w  #$0080, D6
                bcs.s   Offset_0x00E372
Offset_0x00E346:
                cmp.w   -6(A0), D6
                bge.s   Offset_0x00E372
                subq.w  #$06, A0
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E35C
                subq.b  #$01, $0001(A2)
                move.b  $0001(A2), D2
Offset_0x00E35C:
                bsr     Offset_0x00E6C2
                bne.s   Offset_0x00E366
                subq.w  #$06, A0
                bra.s   Offset_0x00E346
Offset_0x00E366:
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E370
                addq.b  #$01, $0001(A2)
Offset_0x00E370:
                addq.w  #$06, A0
Offset_0x00E372:                
                move.l  A0, ($FFFFF774).w
                move.l  ($FFFFF770).w, A0
                addi.w  #$0300, D6 
Offset_0x00E37E:
                cmp.w   -6(A0), D6
                bgt.s   Offset_0x00E390
                tst.b   -2(A0)
                bpl.s   Offset_0x00E38C
                subq.b  #$01, (A2)
Offset_0x00E38C:
                subq.w  #$06, A0
                bra.s   Offset_0x00E37E
Offset_0x00E390:
                move.l  A0, ($FFFFF770).w
                rts
Offset_0x00E396:
                move.w  D6, ($FFFFF76E).w
                move.l  ($FFFFF770).w, A0
                addi.w  #$0280, D6
Offset_0x00E3A2:
                cmp.w   (A0), D6
                bls.s   Offset_0x00E3B6
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E3B0
                move.b  (A2), D2
                addq.b  #$01, (A2)
Offset_0x00E3B0:
                bsr     Offset_0x00E6C2
                beq.s   Offset_0x00E3A2
Offset_0x00E3B6:
                move.l  A0, ($FFFFF770).w
                move.l  ($FFFFF774).w, A0
                subi.w  #$0300, D6
                bcs.s   Offset_0x00E3D6
Offset_0x00E3C4:
                cmp.w   (A0), D6
                bls.s   Offset_0x00E3D6
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E3D2
                addq.b  #$01, $0001(A2)
Offset_0x00E3D2:
                addq.w  #$06, A0
                bra.s   Offset_0x00E3C4
Offset_0x00E3D6:
                move.l  A0, ($FFFFF774).w
Offset_0x00E3DA:
                rts
Offset_0x00E3DC:
                moveq   #$FFFFFFFF, D0
                move.l  D0, ($FFFFF780).w
                move.l  D0, ($FFFFF784).w
                move.l  D0, ($FFFFF788).w
                move.l  D0, ($FFFFF78C).w
                move.w  #$0000, ($FFFFF76E).w
                move.w  #$0000, ($FFFFF78C).w
                lea     ($FFFFFC00).w, A2
                move.w  (A2), ($FFFFF78E).w
                moveq   #$00, D2
                lea     ($FFFFFC00).w, A5
                lea     ($FFFFF770).w, A4
                lea     ($FFFFF786).w, A1
                lea     ($FFFFF789).w, A6
                moveq   #$FFFFFFFE, D6
                bsr     Offset_0x00E570
                lea     ($FFFFF786).w, A1
                moveq   #$FFFFFFFF, D6
                bsr     Offset_0x00E570
                lea     ($FFFFF786).w, A1
                moveq   #$00, D6
                bsr     Offset_0x00E570
                lea     ($FFFFF78E).w, A5
                lea     ($FFFFF778).w, A4
                lea     ($FFFFF789).w, A1
                lea     ($FFFFF786).w, A6
                moveq   #$FFFFFFFE, D6
                bsr     Offset_0x00E570
                lea     ($FFFFF789).w, A1
                moveq   #$FFFFFFFF, D6
                bsr     Offset_0x00E570
                lea     ($FFFFF789).w, A1
                moveq   #$00, D6
                bsr     Offset_0x00E570
Load_Object_Pos_Sub_03: ; Offset_0x00E458:
                move.w  ($FFFFEE00).w, D1
                andi.w  #$FF00, D1
                move.w  D1, ($FFFFF7DA).w
                move.w  ($FFFFEE20).w, D1
                andi.w  #$FF00, D1
                move.w  D1, ($FFFFF7DC).w
                move.b  ($FFFFEE00).w, D6
                andi.w  #$00FF, D6
                move.w  ($FFFFF76E).w, D0
                cmp.w   ($FFFFF76E).w, D6
                beq.s   Offset_0x00E498
                move.w  D6, ($FFFFF76E).w
                lea     ($FFFFFC00).w, A5
                lea     ($FFFFF770).w, A4
                lea     ($FFFFF786).w, A1
                lea     ($FFFFF789).w, A6
                bsr.s   Offset_0x00E4C2
Offset_0x00E498:
                move.b  ($FFFFEE20).w, D6
                andi.w  #$00FF, D6
                move.w  ($FFFFF78C).w, D0
                cmp.w   ($FFFFF78C).w, D6
                beq.s   Offset_0x00E4C0
                move.w  D6, ($FFFFF78C).w
                lea     ($FFFFF78E).w, A5
                lea     ($FFFFF778).w, A4
                lea     ($FFFFF789).w, A1
                lea     ($FFFFF786).w, A6
                bsr.s   Offset_0x00E4C2
Offset_0x00E4C0:
                rts
Offset_0x00E4C2:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D2
                cmp.w   D0, D6
                beq     Offset_0x00E3DA
                bge     Offset_0x00E570
                move.b  $0002(A1), D2
                move.b  $0001(A1), $0002(A1)
                move.b  (A1), $0001(A1)
                move.b  D6, (A1)
                cmp.b   (A6), D2
                beq.s   Offset_0x00E4F8
                cmp.b   $0001(A6), D2
                beq.s   Offset_0x00E4F8
                cmp.b   $0002(A6), D2
                beq.s   Offset_0x00E4F8
                bsr     Offset_0x00E652
                bra.s   Offset_0x00E4FC
Offset_0x00E4F8:                
                bsr     Offset_0x00E616
Offset_0x00E4FC:
                bsr     Offset_0x00E5F2 
                bne.s   Offset_0x00E520
                move.l  $0004(A4), A0
Offset_0x00E506:
                cmp.b   -6(A0), D6
                bne.s   Offset_0x00E51A
                tst.b   -2(A0)
                bpl.s   Offset_0x00E516
                subq.b  #$01, $0001(A5)
Offset_0x00E516:
                subq.w  #$06, A0
                bra.s   Offset_0x00E506
Offset_0x00E51A:
                move.l  A0, $0004(A4)
                bra.s   Offset_0x00E556
Offset_0x00E520:
                move.l  $0004(A4), A0
                move.b  D6, (A1)
Offset_0x00E526:
                cmp.b   -6(A0), D6
                bne.s   Offset_0x00E552
                subq.w  #$06, A0
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E53C
                subq.b  #$01, $0001(A5)
                move.b  $0001(A5), D2
Offset_0x00E53C:
                bsr     Offset_0x00E712
                bne.s   Offset_0x00E546
                subq.w  #$06, A0
                bra.s   Offset_0x00E526
Offset_0x00E546:
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E550
                addq.b  #$01, $0001(A5)
Offset_0x00E550:
                addq.w  #$06, A0
Offset_0x00E552:
                move.l  A0, $0004(A4)
Offset_0x00E556:
                move.l  (A4), A0
                addq.w  #$03, D6
Offset_0x00E55A:
                cmp.b   -6(A0), D6
                bne.s   Offset_0x00E56C
                tst.b   -2(A0)
                bpl.s   Offset_0x00E568
                subq.b  #$01, (A5)
Offset_0x00E568:
                subq.w  #$06, A0
                bra.s   Offset_0x00E55A
Offset_0x00E56C:
                move.l  A0, (A4)
                rts              
Offset_0x00E570:
                addq.w  #$02, D6
                move.b  (A1), D2
                move.b  $0001(A1), (A1)
                move.b  $0002(A1), $0001(A1)
                move.b  D6, $0002(A1)
                cmp.b   (A6), D2
                beq.s   Offset_0x00E598
                cmp.b   $0001(A6), D2
                beq.s   Offset_0x00E598
                cmp.b   $0002(A6), D2
                beq.s   Offset_0x00E598
                bsr     Offset_0x00E652
                bra.s   Offset_0x00E59C
Offset_0x00E598:
                bsr     Offset_0x00E616
Offset_0x00E59C:
                bsr     Offset_0x00E5F2
                bne.s   Offset_0x00E5B8
                move.l  (A4), A0
Offset_0x00E5A4:
                cmp.b   (A0), D6
                bne.s   Offset_0x00E5B4
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E5B0
                addq.b  #$01, (A5)
Offset_0x00E5B0:
                addq.w  #$06, A0
                bra.s   Offset_0x00E5A4
Offset_0x00E5B4:
                move.l  A0, (A4)
                bra.s   Offset_0x00E5D2
Offset_0x00E5B8:
                move.l  (A4), A0
                move.b  D6, (A1)
Offset_0x00E5BC:
                cmp.b   (A0), D6
                bne.s   Offset_0x00E5D0
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E5CA
                move.b  (A5), D2
                addq.b  #$01, (A5)
Offset_0x00E5CA:
                bsr     Offset_0x00E712
                beq.s   Offset_0x00E5BC
Offset_0x00E5D0:
                move.l  A0, (A4)    
Offset_0x00E5D2:
                move.l  $0004(A4), A0
                subq.w  #$03, D6
                bcs.s   Offset_0x00E5EC
Offset_0x00E5DA:
                cmp.b   (A0), D6
                bne.s   Offset_0x00E5EC
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E5E8
                addq.b  #$01, $0001(A5)
Offset_0x00E5E8:
                addq.w  #$06, A0
                bra.s   Offset_0x00E5DA
Offset_0x00E5EC:
                move.l  A0, $0004(A4)   
                rts  
Offset_0x00E5F2:
                move.l  A1, -(A7)
                lea     ($FFFFF780).w, A1
                cmp.b   (A1)+, D6
                beq.s   Offset_0x00E612
                cmp.b   (A1)+, D6
                beq.s   Offset_0x00E612
                cmp.b   (A1)+, D6
                beq.s   Offset_0x00E612
                cmp.b   (A1)+, D6
                beq.s   Offset_0x00E612
                cmp.b   (A1)+, D6
                beq.s   Offset_0x00E612
                cmp.b   (A1)+, D6
                beq.s   Offset_0x00E612
                moveq   #$01, D0
Offset_0x00E612:
                move.l  (A7)+, A1
                rts
Offset_0x00E616:                
                lea     ($FFFFF780).w, A1
                lea     ($FFFFBE00).w, A3
                tst.b   (A1)+
                bmi.s   Offset_0x00E64E
                lea     ($FFFFC100).w, A3
                tst.b   (A1)+
                bmi.s   Offset_0x00E64E
                lea     ($FFFFC400).w, A3
                tst.b   (A1)+
                bmi.s   Offset_0x00E64E
                lea     ($FFFFC700).w, A3
                tst.b   (A1)+
                bmi.s   Offset_0x00E64E
                lea     ($FFFFCA00).w, A3
                tst.b   (A1)+
                bmi.s   Offset_0x00E64E
                lea     ($FFFFCD00).w, A3
                tst.b   (A1)+
                bmi.s   Offset_0x00E64E                 
                nop
                nop
Offset_0x00E64E:
                subq.w  #$01, A1
                rts    
Offset_0x00E652:
                lea     ($FFFFF780).w, A1
                lea     ($FFFFBE00).w, A3
                cmp.b   (A1)+, D2
                beq.s   Offset_0x00E68A
                lea     ($FFFFC100).w, A3
                cmp.b   (A1)+, D2
                beq.s   Offset_0x00E68A
                lea     ($FFFFC400).w, A3
                cmp.b   (A1)+, D2
                beq.s   Offset_0x00E68A
                lea     ($FFFFC700).w, A3
                cmp.b   (A1)+, D2
                beq.s   Offset_0x00E68A
                lea     ($FFFFCA00).w, A3
                cmp.b   (A1)+, D2
                beq.s   Offset_0x00E68A
                lea     ($FFFFCD00).w, A3
                cmp.b   (A1)+, D2
                beq.s   Offset_0x00E68A
                nop
                nop
Offset_0x00E68A:
                move.b  #$FF, -(A1)
                movem.l A1/A3, -(A7)
                moveq   #$00, D1
                moveq   #$0B, D2
Offset_0x00E696:
                tst.b   (A3)
                beq.s   Offset_0x00E6B2
                move.l  A3, A1
                moveq   #$00, D0
                move.b  $0023(A1), D0
                beq.s   Offset_0x00E6AA
                bclr    #$07, $02(A2, D0)
Offset_0x00E6AA:
                moveq   #$0F, D0
Offset_0x00E6AC:
                move.l  D1, (A1)+
                dbra    D0, Offset_0x00E6AC
Offset_0x00E6B2:    
                lea     $0040(A3), A3
                dbra    D2, Offset_0x00E696 
                moveq   #$00, D2
                movem.l (A7)+, A1/A3
                rts       
Offset_0x00E6C2:
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E6D6
                bset    #$07, $02(A2, D2)
                beq.s   Offset_0x00E6D6
                addq.w  #$06, A0
                moveq   #$00, D0
                rts
Offset_0x00E6D6:
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x00E710
                move.w  (A0)+, $0008(A1)
                move.w  (A0)+, D0
                move.w  D0, D1
                andi.w  #$0FFF, D0
                move.w  D0, $000C(A1)
                rol.w   #$02, D1
                andi.b  #$03, D1
                move.b  D1, $0001(A1)
                move.b  D1, $0022(A1)
                move.b  (A0)+, D0
                bpl.s   Offset_0x00E706
                andi.b  #$7F, D0
                move.b  D2, $0023(A1)
Offset_0x00E706:
                move.b  D0, $0000(A1)
                move.b  (A0)+, $0028(A1)
                moveq   #$00, D0
Offset_0x00E710:
                rts    
Offset_0x00E712:
                tst.b   $0004(A0)
                bpl.s   Offset_0x00E726
                bset    #$07, $02(A2, D2)
                beq.s   Offset_0x00E726
                addq.w  #$06, A0
                moveq   #$00, D0
                rts
Offset_0x00E726:
                btst    #$05, $0002(A0)
                beq.s   Offset_0x00E736
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x00E770
                bra.s   Offset_0x00E73C
Offset_0x00E736:
                bsr     Offset_0x00E7A4
                bne.s   Offset_0x00E770
Offset_0x00E73C:
                move.w  (A0)+, $0008(A1) 
                move.w  (A0)+, D0
                move.w  D0, D1
                andi.w  #$0FFF, D0
                move.w  D0, $000C(A1)
                rol.w   #$02, D1
                andi.b  #$03, D1
                move.b  D1, $0001(A1)
                move.b  D1, $0022(A1)
                move.b  (A0)+, D0
                bpl.s   Offset_0x00E766
                andi.b  #$7F, D0
                move.b  D2, $0023(A1)
Offset_0x00E766:
                move.b  D0, $0000(A1)
                move.b  (A0)+, $0028(A1)
                moveq   #$00, D0
Offset_0x00E770:
                rts
;========================= Load Object List - [ End ] =========================   
               
;=============================================================================== 
; Sub Routine SingleObjectLoad
; [ Begin ]                         
;===============================================================================                
SingleObjectLoad: ; Offset_0x00E772:                
                lea     ($FFFFB800).w, A1
                move.w  #$005F, D0
Offset_0x00E77A:
                tst.b   (A1)
                beq.s   Offset_0x00E786
                lea     $0040(A1), A1
                dbra    D0, Offset_0x00E77A
Offset_0x00E786:
                rts     
;=============================================================================== 
; Sub Routine SingleObjectLoad
; [ End ]                         
;===============================================================================                  
                                                                            
;=============================================================================== 
; Sub Routine S1SingleObjectLoad
; [ Begin ]                         
;===============================================================================                 
S1SingleObjectLoad: ;Offset_0x00E788:
                move.l  A0, A1
                move.w  #$D000, D0
                sub.w   A0, D0
                lsr.w   #$06, D0
                subq.w  #$01, D0
                bcs.s   Offset_0x00E7A2
Offset_0x00E796:
                tst.b   (A1)
                beq.s   Offset_0x00E7A2
                lea     $0040(A1), A1
                dbra    D0, Offset_0x00E796
Offset_0x00E7A2:
                rts   
;=============================================================================== 
; Sub Routine S1SingleObjectLoad
; [ End ]                         
;===============================================================================    
             
Offset_0x00E7A4: ; Load Object List Subroutine - Start 
                move.l  A3, A1
                move.w  #$000B, D0
Offset_0x00E7AA: 
                tst.b   (A1)
                beq.s   Offset_0x00E7B6
                lea     $0040(A1), A1
                dbra    D0, Offset_0x00E7AA
Offset_0x00E7B6:
                rts ; Load Object List Subroutine - End 
                
;=============================================================================== 
; Object 0x41 - Springs 
; [ Begin ]
;===============================================================================                     
Obj_0x41_Springs: ; Offset_0x00E7B8:     
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00E7E8(PC, D0), D1
                jsr     Offset_0x00E7E8(PC, D1)
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x00E7D0
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00E7D0:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00E7E8:
                dc.w    Offset_0x00E7F4-Offset_0x00E7E8
                dc.w    Offset_0x00E8CC-Offset_0x00E7E8
                dc.w    Offset_0x00E9BE-Offset_0x00E7E8
                dc.w    Offset_0x00EBD0-Offset_0x00E7E8
                dc.w    Offset_0x00ECBC-Offset_0x00E7E8
                dc.w    Offset_0x00EDF2-Offset_0x00E7E8
Offset_0x00E7F4:
                addq.b  #$02, $0024(A0)
                move.l  #Spring_Mappings, $0004(A0) ; Offset_0x00EF70
                move.w  #$045C, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                move.w  Offset_0x00E82A(PC, D0), D0
                jmp     Offset_0x00E82A(PC, D0)
Offset_0x00E82A:
                dc.w    Offset_0x00E8A0-Offset_0x00E82A
                dc.w    Offset_0x00E834-Offset_0x00E82A
                dc.w    Offset_0x00E854-Offset_0x00E82A
                dc.w    Offset_0x00E868-Offset_0x00E82A
                dc.w    Offset_0x00E882-Offset_0x00E82A                    
Offset_0x00E834:
                move.b  #$04, $0024(A0)
                move.b  #$02, $001C(A0)
                move.b  #$03, $001A(A0)
                move.w  #$0470, $0002(A0)
                move.b  #$08, $0019(A0)
                bra.s   Offset_0x00E8A0
Offset_0x00E854:                
                move.b  #$06, $0024(A0)
                move.b  #$06, $001A(A0)
                bset    #$01, $0022(A0)
                bra.s   Offset_0x00E8A0
Offset_0x00E868:                
                move.b  #$08, $0024(A0)
                move.b  #$04, $001C(A0)
                move.b  #$07, $001A(A0)
                move.w  #$043C, $0002(A0)                  
                bra.s   Offset_0x00E8A0
Offset_0x00E882:                
                move.b  #$0A, $0024(A0)
                move.b  #$04, $001C(A0)
                move.b  #$0A, $001A(A0)
                move.w  #$043C, $0002(A0)
                bset    #$01, $0022(A0)
Offset_0x00E8A0:
                move.b  $0028(A0), D0
                andi.w  #$0002, D0
                move.w  Offset_0x00E8C8(PC, D0), $0030(A0)
                btst    #$01, D0
                beq.s   Offset_0x00E8C2
                bset    #$05, $0002(A0)
                move.l  #Offset_0x00EF86, $0004(A0)
Offset_0x00E8C2:
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                rts
Offset_0x00E8C8:
                dc.w    $F000, $F600                   
Offset_0x00E8CC:
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Offset_0x00F510
                btst    #$03, $0022(A0)
                beq.s   Offset_0x00E8F4
                bsr.s   Offset_0x00E918
Offset_0x00E8F4:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     Offset_0x00F510
                btst    #$04, $0022(A0)
                beq.s   Offset_0x00E90C
                bsr.s   Offset_0x00E918
Offset_0x00E90C:
                lea     (Offset_0x00EF36), A1
                bra     AnimateSprite           ; Offset_0x00D412
                rts
Offset_0x00E918:
                move.w  #$0100, $001C(A0)
                addq.w  #$08,  $000C(A1)
                move.w  $0030(A0), $0012(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                bpl.s   Offset_0x00E94C
                move.w  #$0000, $0010(A1)
Offset_0x00E94C:
                btst    #$00, D0
                beq.s   Offset_0x00E98C
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                btst    #$01, D0
                bne.s   Offset_0x00E97C
                move.b  #$01, $002C(A1)
Offset_0x00E97C:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x00E98C
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x00E98C:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x00E9A2
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x00E9A2:
                cmpi.b  #$08, D0
                bne.s   Offset_0x00E9B4
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x00E9B4:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6    
Offset_0x00E9BE:
                move.w  #$0013, D1
                move.w  #$000E, D2
                move.w  #$000F, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Offset_0x00F510
                btst    #$05, $0022(A0)
                beq.s   Offset_0x00E9FE
                move.b  $0022(A0), D1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcs.s   Offset_0x00E9F6
                eori.b  #$01, D1
Offset_0x00E9F6:
                andi.b  #$01, D1
                bne.s   Offset_0x00E9FE
                bsr.s   Offset_0x00EA3E
Offset_0x00E9FE:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     Offset_0x00F510
                btst    #$06, $0022(A0)
                beq.s   Offset_0x00EA2E
                move.b  $0022(A0), D1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcs.s   Offset_0x00EA26
                eori.b  #$01, D1
Offset_0x00EA26:
                andi.b  #$01, D1
                bne.s   Offset_0x00EA2E
                bsr.s   Offset_0x00EA3E
Offset_0x00EA2E:
                bsr     Offset_0x00EB16
                lea     (Offset_0x00EF36), A1
                bra     AnimateSprite           ; Offset_0x00D412
                rts
Offset_0x00EA3E:
                move.w  #$0300, $001C(A0)
                move.w  $0030(A0), $0010(A1)
                addq.w  #$08,  $0008(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   Offset_0x00EA6C
                bclr    #$00, $0022(A1)
                subi.w  #$0010, $0008(A1)
                neg.w   $0010(A1)
Offset_0x00EA6C:
                move.w  #$000F, $002E(A1)
                move.w  $0010(A1), $0014(A1)
                btst    #$02, $0022(A1)
                bne.s   Offset_0x00EA86
                move.b  #$00, $001C(A1)
Offset_0x00EA86:
                move.b  $0028(A0), D0
                bpl.s   Offset_0x00EA92
                move.w  #$0000, $0012(A1)
Offset_0x00EA92:
                btst    #$00, D0
                beq.s   Offset_0x00EAD2
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0
                bne.s   Offset_0x00EAC2
                move.b  #$03, $002C(A1)
Offset_0x00EAC2:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x00EAD2
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x00EAD2:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x00EAE8
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x00EAE8:
                cmpi.b  #$08, D0
                bne.s   Offset_0x00EAFA
                move.b  #$0E, $003E(A1)   
                move.b  #$0F, $003F(A1)
Offset_0x00EAFA:
                bclr    #$05, $0022(A0)
                bclr    #$06, $0022(A0)
                bclr    #$05, $0022(A1)
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6  
Offset_0x00EB16:
                cmpi.b  #$03, $001C(A0)
                beq     Offset_0x00EBCE
                move.w  $0008(A0), D0
                move.w  D0, D1
                addi.w  #$0028, D1
                btst    #$00, $0022(A0)
                beq.s   Offset_0x00EB38
                move.w  D0, D1
                subi.w  #$0028, D0
Offset_0x00EB38:
                move.w  $000C(A0), D2
                move.w  D2, D3
                subi.w  #$0018, D2
                addi.w  #$0018, D3
                lea     ($FFFFB000).w, A1
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00EB8C
                move.w  $0014(A1), D4
                btst    #$00, $0022(A0)
                beq.s   Offset_0x00EB60
                neg.w   D4
Offset_0x00EB60:
                tst.w   D4
                bmi.s   Offset_0x00EB8C
                move.w  $0008(A1), D4
                cmp.w   D0, D4
                bcs     Offset_0x00EB8C
                cmp.w   D1, D4
                bcc     Offset_0x00EB8C
                move.w  $000C(A1), D4
                cmp.w   D2, D4
                bcs     Offset_0x00EB8C
                cmp.w   D3, D4
                bcc     Offset_0x00EB8C
                move.w  D0, -(A7)
                bsr     Offset_0x00EA3E
                move.w  (A7)+, D0
Offset_0x00EB8C:
                lea     ($FFFFB040).w, A1
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00EBCE
                move.w  $0014(A1), D4
                btst    #$00, $0022(A0)
                beq.s   Offset_0x00EBA6
                neg.w   D4
Offset_0x00EBA6:
                tst.w   D4
                bmi.s   Offset_0x00EBCE
                move.w  $0008(A1), D4
                cmp.w   D0, D4
                bcs     Offset_0x00EBCE
                cmp.w   D1, D4
                bcc     Offset_0x00EBCE
                move.w  $000C(A1), D4
                cmp.w   D2, D4
                bcs     Offset_0x00EBCE
                cmp.w   D3, D4
                bcc     Offset_0x00EBCE
                bsr     Offset_0x00EA3E
Offset_0x00EBCE:
                rts    
Offset_0x00EBD0:
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Offset_0x00F510
                cmpi.w  #$FFFE, D4
                bne.s   Offset_0x00EBF6
                bsr.s   Offset_0x00EC18
Offset_0x00EBF6:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     Offset_0x00F510
                cmpi.w  #$FFFE, D4
                bne.s   Offset_0x00EC0C
                bsr.s   Offset_0x00EC18
Offset_0x00EC0C:
                lea     (Offset_0x00EF36), A1
                bra     AnimateSprite           ; Offset_0x00D412
                rts
Offset_0x00EC18:
                move.w  #$0100, $001C(A0)
                subq.w  #$08, $000C(A1)
                move.w  $0030(A0), $0012(A1)
                neg.w   $0012(A1)
                move.b  $0028(A0), D0
                bpl.s   Offset_0x00EC38
                move.w  #$0000, $0010(A1)
Offset_0x00EC38:
                btst    #$00, D0
                beq.s   Offset_0x00EC78
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                btst    #$01, D0
                bne.s   Offset_0x00EC68
                move.b  #$01, $002C(A1)
Offset_0x00EC68:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x00EC78
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x00EC78:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x00EC8E
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x00EC8E:
                cmpi.b  #$08, D0
                bne.s   Offset_0x00ECA0
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x00ECA0:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6   
Offset_0x00ECBC:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  $0008(A0), D4
                lea     Offset_0x00EEFE(PC), A2
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Offset_0x00F562
                btst    #$03, $0022(A0)
                beq.s   Offset_0x00ECE4
                bsr.s   Offset_0x00ED08
Offset_0x00ECE4:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     Offset_0x00F562
                btst    #$04, $0022(A0)
                beq.s   Offset_0x00ECFC
                bsr.s   Offset_0x00ED08
Offset_0x00ECFC:
                lea     (Offset_0x00EF36), A1
                bra     AnimateSprite           ; Offset_0x00D412
                rts
Offset_0x00ED08:
                btst    #$00, $0022(A0)
                bne.s   Offset_0x00ED1E                   
                move.w  $0008(A0), D0
                subq.w  #$04, D0
                cmp.w   $0008(A1), D0
                bcs.s   Offset_0x00ED2C
                rts
Offset_0x00ED1E:
                move.w  $0008(A0), D0
                addq.w  #$04, D0
                cmp.w   $0008(A1), D0
                bcc.s   Offset_0x00ED2C
                rts
Offset_0x00ED2C:
                move.w  #$0500, $001C(A0)
                move.w  $0030(A0), $0012(A1)
                move.w  $0030(A0), $0010(A1)
                addq.w  #$06, $000C(A1)
                addq.w  #$06, $0008(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   Offset_0x00ED64
                bclr    #$00, $0022(A1)
                subi.w  #$000C, $0008(A1)
                neg.w   $0010(A1)
Offset_0x00ED64:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                btst    #$00, D0
                beq.s   Offset_0x00EDC0
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0
                bne.s   Offset_0x00EDB0
                move.b  #$03, $002C(A1)
Offset_0x00EDB0:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x00EDC0
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x00EDC0:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x00EDD6
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x00EDD6:
                cmpi.b  #$08, D0
                bne.s   Offset_0x00EDE8
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x00EDE8:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6     
Offset_0x00EDF2:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  $0008(A0), D4
                lea     Offset_0x00EF1A(PC), A2
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Offset_0x00F562
                cmpi.w  #$FFFE, D4
                bne.s   Offset_0x00EE18
                bsr.s   Offset_0x00EE3A
Offset_0x00EE18:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     Offset_0x00F562
                cmpi.w  #$FFFE, D4
                bne.s   Offset_0x00EE2E
                bsr.s   Offset_0x00EE3A
Offset_0x00EE2E:
                lea     (Offset_0x00EF36), A1
                bra     AnimateSprite           ; Offset_0x00D412
                rts
Offset_0x00EE3A:
                move.w  #$0500, $001C(A0)
                move.w  $0030(A0), $0012(A1)
                neg.w   $0012(A1)
                move.w  $0030(A0), $0010(A1)
                subq.w  #$06, $000C(A1)
                addq.w  #$06, $0008(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   Offset_0x00EE76
                bclr    #$00, $0022(A1)
                subi.w  #$000C, $0008(A1)
                neg.w   $0010(A1)
Offset_0x00EE76:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                btst    #$00, D0
                beq.s   Offset_0x00EECC
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0 
                bne.s   Offset_0x00EEBC
                move.b  #$03, $002C(A1)
Offset_0x00EEBC:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x00EECC
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x00EECC:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x00EEE2
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x00EEE2:
                cmpi.b  #$08, D0
                bne.s   Offset_0x00EEF4
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x00EEF4:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6 
Offset_0x00EEFE:   
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $0E, $0C, $0A, $08
                dc.b    $06, $04, $02, $00, $FE, $FC, $FC, $FC, $FC, $FC, $FC, $FC
Offset_0x00EF1A:                
                dc.b    $F4, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F0, $F2, $F4, $F6, $F8
                dc.b    $FA, $FC, $FE, $00, $02, $04, $04, $04, $04, $04, $04, $04
Offset_0x00EF36:
                dc.b    $00, $0C, $00, $0F, $00, $1B, $00, $1E, $00, $2A, $00, $2D, $0F, $00, $FF, $00
                dc.b    $01, $00, $00, $02, $02, $02, $02, $02, $02, $FD, $00, $0F, $03, $FF, $00, $04
                dc.b    $03, $03, $05, $05, $05, $05, $05, $05, $FD, $02, $0F, $07, $FF, $00, $08, $07
                dc.b    $07, $09, $09, $09, $09, $09, $09, $FD, $04, $00
Spring_Mappings:
Offset_0x00EF70:
                dc.w    Offset_0x00EF9C-Offset_0x00EF70
                dc.w    Offset_0x00EFAE-Offset_0x00EF70
                dc.w    Offset_0x00EFB8-Offset_0x00EF70
                dc.w    Offset_0x00EFCA-Offset_0x00EF70
                dc.w    Offset_0x00EFDC-Offset_0x00EF70
                dc.w    Offset_0x00EFE6-Offset_0x00EF70
                dc.w    Offset_0x00EFF8-Offset_0x00EF70
                dc.w    Offset_0x00F00A-Offset_0x00EF70
                dc.w    Offset_0x00F02C-Offset_0x00EF70
                dc.w    Offset_0x00F046-Offset_0x00EF70
                dc.w    Offset_0x00F068-Offset_0x00EF70
Offset_0x00EF86:
                dc.w    Offset_0x00EF9C-Offset_0x00EF86
                dc.w    Offset_0x00EFAE-Offset_0x00EF86
                dc.w    Offset_0x00EFB8-Offset_0x00EF86
                dc.w    Offset_0x00EFCA-Offset_0x00EF86
                dc.w    Offset_0x00EFDC-Offset_0x00EF86
                dc.w    Offset_0x00EFE6-Offset_0x00EF86
                dc.w    Offset_0x00EFF8-Offset_0x00EF86
                dc.w    Offset_0x00F08A-Offset_0x00EF86
                dc.w    Offset_0x00F0AC-Offset_0x00EF86
                dc.w    Offset_0x00F0C6-Offset_0x00EF86
                dc.w    Offset_0x00F0E8-Offset_0x00EF86                 
Offset_0x00EF9C:
                dc.w    $0002
                dc.l    $F00D0000, $0000FFF0, $00050008, $0004FFF8
Offset_0x00EFAE:
                dc.w    $0001
                dc.l    $F80D0000, $0000FFF0
Offset_0x00EFB8:
                dc.w    $0002
                dc.l    $E00D0000, $0000FFF0, $F007000C, $0006FFF8
Offset_0x00EFCA:
                dc.w    $0002
                dc.l    $F0030000, $00000000, $F8010004, $0002FFF8
Offset_0x00EFDC:
                dc.w    $0001
                dc.l    $F0030000, $0000FFF8
Offset_0x00EFE6:
                dc.w    $0002
                dc.l    $F0030000, $00000010, $F8090006, $0003FFF8
Offset_0x00EFF8:
                dc.w    $0002
                dc.l    $000D1000, $1000FFF0, $F0051008, $1004FFF8
Offset_0x00F00A:
                dc.w    $0004
                dc.l    $F00D0000, $0000FFF0, $00050008, $00040000
                dc.l    $FB05000C, $0006FFF6, $0005201C, $200EFFF0
Offset_0x00F02C:
                dc.w    $0003
                dc.l    $F60D0000, $0000FFEA, $06050008, $0004FFFA
                dc.l    $0005201C, $200EFFF0
Offset_0x00F046:
                dc.w    $0004
                dc.l    $E60D0000, $0000FFFB, $F6050008, $0004000B
                dc.l    $F30B0010, $0008FFF6, $0005201C, $200EFFF0
Offset_0x00F068:
                dc.w    $0004
                dc.l    $000D1000, $1000FFF0, $F0051008, $10040000
                dc.l    $F505100C, $1006FFF6, $F005301C, $300EFFF0  
Offset_0x00F08A:
                dc.w    $0004
                dc.l    $F00D0000, $0000FFF0, $00050008, $00040000
                dc.l    $FB05000C, $0006FFF6, $0005001C, $000EFFF0
Offset_0x00F0AC:
                dc.w    $0003
                dc.l    $F60D0000, $0000FFEA, $06050008, $0004FFFA
                dc.l    $0005001C, $000EFFF0
Offset_0x00F0C6:
                dc.w    $0004
                dc.l    $E60D0000, $0000FFFB, $F6050008, $0004000B
                dc.l    $F30B0010, $0008FFF6, $0005001C, $000EFFF0
Offset_0x00F0E8:
                dc.w    $0004
                dc.l    $000D1000, $1000FFF0, $F0051008, $10040000
                dc.l    $F505100C, $1006FFF6, $F005101C, $100EFFF0   
;=============================================================================== 
; Object 0x41 - Springs 
; [ End ]
;===============================================================================   
                nop                             ; Filler  
;=============================================================================== 
; Object 0x44
; [ Begin ]
;===============================================================================                  
Obj_0x44: ; Offset_0x00F10C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00F11A(PC, D0), D1
                jmp     Offset_0x00F11A(PC, D1)
Offset_0x00F11A:
                dc.w    Offset_0x00F120-Offset_0x00F11A
                dc.w    Offset_0x00F15C-Offset_0x00F11A
                dc.w    Offset_0x00F170-Offset_0x00F11A
Offset_0x00F120:
                addq.b  #$02, $0024(A0)
                move.l  #Offset_0x00F188, $0004(A0)
                move.w  #$434C, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$08, $0019(A0)
                move.b  #$06, $0018(A0)
                move.b  $0028(A0), $001A(A0)
                bclr    #$04, $001A(A0)
                beq.s   Offset_0x00F15C
                addq.b  #$02, $0024(A0)
                bra.s   Offset_0x00F170
Offset_0x00F15C:
                move.w  #$0013, D1
                move.w  #$0028, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; Offset_0x00F4A0
Offset_0x00F170:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00F188:
                dc.w    Offset_0x00F18E-Offset_0x00F188
                dc.w    Offset_0x00F1B0-Offset_0x00F188
                dc.w    Offset_0x00F1D2-Offset_0x00F188
Offset_0x00F18E:
                dc.w    $0004
                dc.l    $E0050004, $0002FFF8, $F0050008, $0004FFF8
                dc.l    $00050008, $0004FFF8, $10050008, $0004FFF8
Offset_0x00F1B0:
                dc.w    $0004
                dc.l    $E0050008, $0004FFF8, $F0050008, $0004FFF8
                dc.l    $00050008, $0004FFF8, $10050008, $0004FFF8
Offset_0x00F1D2:
                dc.w    $0004
                dc.l    $E0050000, $0000FFF8, $F0050000, $0000FFF8
                dc.l    $00050000, $0000FFF8, $10050000, $0000FFF8            
;=============================================================================== 
; Object 0x44
; [ End ]
;===============================================================================                  
                
;=============================================================================== 
; Object 0x0D - End Panel 
; [ Begin ]
;===============================================================================                     
Obj_0x0D_End_Panel: ; Offset_0x00F1F4:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x00F224(PC, D0), D1
                jsr     Offset_0x00F224(PC, D1)
                lea     (Offset_0x00F3E4), A1
                bsr     AnimateSprite           ; Offset_0x00D412
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00F224:
                dc.w    End_Panel_Sub_01-Offset_0x00F224 ; Offset_0x00F22E
                dc.w    End_Panel_Sub_02-Offset_0x00F224 ; Offset_0x00F256
                dc.w    End_Panel_Sub_03-Offset_0x00F224 ; Offset_0x00F280
                dc.w    End_Panel_Sub_04-Offset_0x00F224 ; Offset_0x00F31C
                dc.w    End_Panel_Sub_05-Offset_0x00F224 ; Offset_0x00F3E2
End_Panel_Sub_01: ; Offset_0x00F22E:
                addq.b  #$02, $0024(A0)
                move.l  #End_Panel_Mappings, $0004(A0) ; Offset_0x00F40E
                move.w  #$0434, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$18, $0019(A0)
                move.b  #$04, $0018(A0)
End_Panel_Sub_02: ; Offset_0x00F256:
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                bcs.s   Offset_0x00F27E
                cmpi.w  #$0020, D0
                bcc.s   Offset_0x00F27E
                move.w  #$00CF, D0
                jsr     (Play_Music)            ; Offset_0x0014C0
                clr.b   ($FFFFFE1E).w
                move.w  ($FFFFEECA).w, ($FFFFEEC8).w
                addq.b  #$02, $0024(A0)
Offset_0x00F27E:
                rts
End_Panel_Sub_03: ; Offset_0x00F280:
                subq.w  #$01, $0030(A0)
                bpl.s   Offset_0x00F29C
                move.w  #$003C, $0030(A0)
                addq.b  #$01, $001C(A0)
                cmpi.b  #$03, $001C(A0)
                bne.s   Offset_0x00F29C
                addq.b  #$02, $0024(A0)
Offset_0x00F29C:
                subq.w  #$01, $0032(A0)
                bpl.s   Offset_0x00F30A
                move.w  #$000B, $0032(A0)
                moveq   #$00, D0
                move.b  $0034(A0), D0
                addq.b  #$02, $0034(A0)
                andi.b  #$0E, $0034(A0)
                lea     Offset_0x00F30C(PC, D0), A2
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x00F30A
                move.b  #$25, $0000(A1)
                move.b  #$06, $0024(A1)
                move.b  (A2)+, D0
                ext.w   D0
                add.w   $0008(A0), D0
                move.w  D0, $0008(A1)
                move.b  (A2)+, D0
                ext.w   D0
                add.w   $000C(A0), D0
                move.w  D0, $000C(A1)
                move.l  #Rings_Mappings, $0004(A1) ; Offset_0x00B036
                move.w  #$27B2, $0002(A1)
                bsr     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
                move.b  #$04, $0001(A1)
                move.b  #$02, $0018(A1)
                move.b  #$08, $0019(A1)
Offset_0x00F30A:
                rts
Offset_0x00F30C: 
                dc.b    $E8, $F0, $08, $08, $F0, $00, $18, $F8, $00, $F8, $10, $00, $E8, $08, $18, $10
End_Panel_Sub_04: ; Offset_0x00F31C:
                tst.w   ($FFFFFE08).w  
                bne     Offset_0x00F3B6
                btst    #$01, ($FFFFB022).w
                bne.s   Offset_0x00F338
                move.b  #$01, ($FFFFF7CC).w
                move.w  #$0800, ($FFFFF602).w
Offset_0x00F338:
                tst.b   ($FFFFB000).w
                beq.s   Offset_0x00F34E
                move.w  ($FFFFB008).w, D0
                move.w  ($FFFFEECA).w, D1
                addi.w  #$0128, D1
                cmp.w   D1, D0
                bcs.s   Offset_0x00F3B6
Offset_0x00F34E:
                addq.b  #$02, $0024(A0)
Offset_0x00F352:                
                tst.b   ($FFFFB5C0).w
                bne.s   Offset_0x00F3B6
                move.w  ($FFFFEECA).w, ($FFFFEEC8).w
                clr.b   ($FFFFFE2D).w
                clr.b   ($FFFFFE1E).w
                move.b  #$3A, ($FFFFB5C0).w
                moveq   #$26, D0
                jsr     LoadPLC2                ; Offset_0x00176E
                move.b  #$01, ($FFFFF7D6).w
                moveq   #$00, D0
                move.b  ($FFFFFE23).w, D0
                mulu.w  #$003C, D0
                moveq   #$00, D1
                move.b  ($FFFFFE24).w, D1
                add.w   D1, D0
                divu.w  #$000F, D0
                moveq   #$14, D1
                cmp.w   D1, D0
                bcs.s   Offset_0x00F398
                move.w  D1, D0
Offset_0x00F398:
                add.w   D0, D0
                move.w  Offset_0x00F3B8(PC, D0), ($FFFFF7D2).w
                move.w  ($FFFFFE20).w, D0
                mulu.w  #$000A, D0
                move.w  D0, ($FFFFF7D4).w
                move.w  #$009A, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x00F3B6:
                rts
Offset_0x00F3B8:
                dc.w    $1388, $1388, $03E8, $01F4, $0190, $0190, $012C, $012C
                dc.w    $00C8, $00C8, $00C8, $00C8, $0064, $0064, $0064, $0064
                dc.w    $0032, $0032, $0032, $0032, $0000
End_Panel_Sub_05: ; Offset_0x00F3E2:
                rts
Offset_0x00F3E4:
                dc.w    Offset_0x00F3EC-Offset_0x00F3E4
                dc.w    Offset_0x00F3EF-Offset_0x00F3E4
                dc.w    Offset_0x00F3FD-Offset_0x00F3E4
                dc.w    Offset_0x00F40B-Offset_0x00F3E4
Offset_0x00F3EC:
                dc.b    $0F, $02, $FF
Offset_0x00F3EF:
                dc.b    $01, $02, $03, $04, $05, $01, $03, $04, $05, $00, $03, $04, $05, $FF
Offset_0x00F3FD:
                dc.b    $01, $02, $03, $04, $05, $01, $03, $04, $05, $00, $03, $04, $05, $FF
Offset_0x00F40B:
                dc.b    $0F, $00, $FF
End_Panel_Mappings:               
Offset_0x00F40E:                
                dc.w    Offset_0x00F41A-Offset_0x00F40E
                dc.w    Offset_0x00F434-Offset_0x00F40E
                dc.w    Offset_0x00F44E-Offset_0x00F40E
                dc.w    Offset_0x00F468-Offset_0x00F40E
                dc.w    Offset_0x00F47A-Offset_0x00F40E
                dc.w    Offset_0x00F48C-Offset_0x00F40E
Offset_0x00F41A:
                dc.w    $0003
                dc.l    $F00B0000, $0000FFE8, $F00B000C, $00060000
                dc.l    $10010050, $0028FFFC
Offset_0x00F434:
                dc.w    $0003
                dc.l    $F00B0018, $000CFFE8, $F00B0024, $00120000
                dc.l    $10010050, $0028FFFC
Offset_0x00F44E:
                dc.w    $0003
                dc.l    $F00B0030, $0018FFE8, $F00B0830, $08180000
                dc.l    $10010050, $0028FFFC
Offset_0x00F468:
                dc.w    $0002
                dc.l    $F00F003C, $001EFFF0, $10010050, $0028FFFC
Offset_0x00F47A:
                dc.w    $0002
                dc.l    $F003004C, $0026FFFC, $10010050, $0028FFFC
Offset_0x00F48C:
                dc.w    $0002
                dc.l    $F00F083C, $081EFFF0, $10010050, $0028FFFC                                  
;=============================================================================== 
; Object 0x0D - End Panel 
; [ End ]
;===============================================================================   
                nop                             ; Filler
;=============================================================================== 
; Sub Routine SolidObject
; [ Begin ]                         
;===============================================================================                
SolidObject: ; Offset_0x00F4A0:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   Offset_0x00F4BE
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                tst.b   $0001(A1)
                bpl     Offset_0x00F4F8
                addq.b  #$01, D6
Offset_0x00F4BE:
                btst    D6, $0022(A0)
                beq     Offset_0x00F752
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00F4E2
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00F4E2
                cmp.w   D2, D0
                bcs.s   Offset_0x00F4F0
Offset_0x00F4E2:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
Offset_0x00F4F0:
                move.w  D4, D2
                bsr     Offset_0x00F8E4
                moveq   #$00, D4
Offset_0x00F4F8:                
                rts                
Offset_0x00F4FA:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   Offset_0x00F510
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
Offset_0x00F510:    
                btst    D6, $0022(A0)
                beq     Offset_0x00F75A
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00F534
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00F534
                cmp.w   D2, D0                
                bcs.s   Offset_0x00F542
Offset_0x00F534:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0) 
                moveq   #$00, D4
                rts
Offset_0x00F542:
                move.w  D4, D2
                bsr     Offset_0x00F8E4
                moveq   #$00, D4
                rts
Offset_0x00F54C:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   Offset_0x00F562
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
Offset_0x00F562:
                btst    D6, $0022(A0)
                beq     Offset_0x00F698
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00F586
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00F586
                cmp.w   D2, D0
                bcs.s   Offset_0x00F594
Offset_0x00F586:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
Offset_0x00F594:
                move.w  D4, D2
                bsr     Offset_0x00F91E
                moveq   #$00, D4
                rts

Offset_0x00F59E:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   Offset_0x00F5B4
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
Offset_0x00F5B4:
                btst    D6, $0022(A0)
                beq     Offset_0x00F6F2
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00F5D8
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00F5D8
                cmp.w   D2, D0
                bcs.s   Offset_0x00F5E6
Offset_0x00F5D8:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
Offset_0x00F5E6:
                move.w  D4, D2
                bsr     Offset_0x00F960
                moveq   #$00, D4
                rts     
Offset_0x00F5F0:                 
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   Offset_0x00F606
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
Offset_0x00F606:
                btst    D6, $0022(A0)
                beq     Offset_0x00F656
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00F628
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00F628
                add.w   D1, D1
                cmp.w   D1, D0
                bcs.s   Offset_0x00F636
Offset_0x00F628:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
Offset_0x00F636:
                move.w  $000C(A0), D0
                sub.w   D2, D0
                add.w   D3, D0
                moveq   #$00, D1
                move.b  $0016(A1), D1
                sub.w   D1, D0
                move.w  D0, $000C(A1)
                sub.w   $0008(A0), D4
                sub.w   D4, $0008(A1)
                moveq   #$00, D4
                rts
Offset_0x00F656:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     Offset_0x00F82A
                move.w  D1, D4
                add.w   D4, D4
                cmp.w   D4, D0
                bhi     Offset_0x00F82A
                move.w  $000C(A0), D5
                add.w   D3, D5
                move.b  $0016(A1), D3
                ext.w   D3
                add.w   D3, D2
                move.w  $000C(A1), D3
                sub.w   D5, D3
                addq.w  #$04, D3
                add.w   D2, D3
                bmi     Offset_0x00F82A
                move.w  D2, D4
                add.w   D4, D4
                cmp.w   D4, D3
                bcc     Offset_0x00F82A
                bra     Offset_0x00F794                
Offset_0x00F698:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     Offset_0x00F82A
                move.w  D1, D3
                add.w   D3, D3
                cmp.w   D3, D0
                bhi     Offset_0x00F82A
                move.w  D0, D5
                btst    #$00, $0001(A0)
                beq.s   Offset_0x00F6BE
                not.w   D5
                add.w   D3, D5
Offset_0x00F6BE:
                lsr.w   #$01, D5
                move.b  $00(A2, D5), D3
                sub.b   (A2), D3
                ext.w   D3
                move.w  $000C(A0), D5
                sub.w   D3, D5
                move.b  $0016(A1), D3
                ext.w   D3
                add.w   D3, D2
                move.w  $000C(A1), D3
                sub.w   D5, D3
                addq.w  #$04, D3
                add.w   D2, D3
                bmi     Offset_0x00F82A
                move.w  D2, D4
                add.w   D4, D4
                cmp.w   D4, D3
                bcc     Offset_0x00F82A
                bra     Offset_0x00F794   
Offset_0x00F6F2:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     Offset_0x00F82A
                move.w  D1, D3
                add.w   D3, D3
                cmp.w   D3, D0
                bhi     Offset_0x00F82A
                move.w  D0, D5
                btst    #$00, $0001(A0)
                beq.s   Offset_0x00F718
                not.w  D5
                add.w   D3, D5
Offset_0x00F718:
                andi.w  #$FFFE, D5
                move.b  $00(A2, D5), D3
                move.b  $01(A2, D5), D2
                ext.w   D2
                ext.w   D3
                move.w  $000C(A0), D5
                sub.w   D3, D5
                move.w  $000C(A1), D3
                sub.w   D5, D3
                move.b  $0016(A1), D5
                ext.w   D5
                add.w   D5, D3
                addq.w  #$04, D3
                bmi     Offset_0x00F82A
                add.w   D5, D2
                move.w  D2, D4
                add.w   D5, D4
                cmp.w   D4, D3
                bcc     Offset_0x00F82A
                bra     Offset_0x00F794                
Offset_0x00F752:
                tst.b   $0001(A0)
                bpl     Offset_0x00F82A
Offset_0x00F75A:                
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     Offset_0x00F82A
                move.w  D1, D3
                add.w   D3, D3
                cmp.w   D3, D0
                bhi     Offset_0x00F82A
                move.b  $0016(A1), D3
                ext.w   D3
                add.w   D3, D2
                move.w  $000C(A1), D3
                sub.w   $000C(A0), D3
                addq.w  #$04, D3
                add.w   D2, D3
                bmi     Offset_0x00F82A
                move.w  D2, D4
                add.w   D4, D4
                cmp.w   D4, D3
                bcc     Offset_0x00F82A
Offset_0x00F794:                
                tst.b   $002A(A1)
                bmi     Offset_0x00F82A
                cmpi.b  #$06, $0024(A1)
                bcc     Offset_0x00F848
                tst.w   ($FFFFFE08).w
                bne     Offset_0x00F848
                move.w  D0, D5
                cmp.w   D0, D1
                bcc.s   Offset_0x00F7BC
                add.w   D1, D1
                sub.w   D1, D0
                move.w  D0, D5
                neg.w   D5
Offset_0x00F7BC:
                move.w  D3, D1
                cmp.w   D3, D2
                bcc.s   Offset_0x00F7CA
                subq.w  #$04, D3
                sub.w   D4, D3
                move.w  D3, D1
                neg.w   D1
Offset_0x00F7CA:
                cmp.w   D1, D5
                bhi     Offset_0x00F84C
Offset_0x00F7D0:
                cmpi.w  #$0004, D1
                bls.s   Offset_0x00F81C
                tst.w   D0
                beq.s   Offset_0x00F7F6
                bmi.s   Offset_0x00F7E4
                tst.w   $0010(A1)
                bmi.s   Offset_0x00F7F6
                bra.s   Offset_0x00F7EA
Offset_0x00F7E4:
                tst.w   $0010(A1)
                bpl.s   Offset_0x00F7F6
Offset_0x00F7EA:
                move.w  #$0000, $0014(A1)
                move.w  #$0000, $0010(A1)
Offset_0x00F7F6:
                sub.w   D0, $0008(A1)
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00F81C
                move.l  D6, D4
                addq.b  #$02, D4
                bset    D4, $0022(A0)
                bset    #$05, $0022(A1)
                move.w  D6, D4
                addi.b  #$0D, D4
                bset    D4, D6
                moveq   #$01, D4
                rts
Offset_0x00F81C:
                bsr.s   Offset_0x00F83A
                move.w  D6, D4
                addi.b  #$0D, D4
                bset    D4, D6
                moveq   #$01, D4
                rts
Offset_0x00F82A:
                move.l  D6, D4
                addq.b  #$02, D4
                btst    D4, $0022(A0)
                beq.s   Offset_0x00F848
                move.w  #$0001, $001C(A1)
Offset_0x00F83A:
                move.l  D6, D4
                addq.b  #$02, D4
                bclr    D4, $0022(A0)
                bclr    #$05, $0022(A1)
Offset_0x00F848:
                moveq   #$00, D4
                rts   
Offset_0x00F84C:
                tst.w   D3
                bmi.s   Offset_0x00F858
                cmpi.w  #$0010, D3
                bcs.s   Offset_0x00F8A8
                bra.s   Offset_0x00F82A
Offset_0x00F858:
                tst.w   $0012(A1)
                beq.s   Offset_0x00F87A
                bpl.s   Offset_0x00F86E
                tst.w   D3
                bpl.s   Offset_0x00F86E
                sub.w   D3, $000C(A1)
                move.w  #$0000, $0012(A1)
Offset_0x00F86E:
                move.w  D6, D4
                addi.b  #$0F, D4
                bset    D4, D6
                moveq   #$FFFFFFFE, D4
                rts
Offset_0x00F87A:
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00F86E
                move.w  D0, D4
                bpl.s   Offset_0x00F888
                neg.w   D4
Offset_0x00F888:
                cmpi.w  #$0010, D4
                bcs     Offset_0x00F7D0
                move.l  A0, -(A7)
                move.l  A1, A0
                jsr     KillSonic               ; Offset_0x021422
                move.l  (A7)+, A0
                move.w  D6, D4
                addi.b  #$0F, D4
                bset    D4, D6
                moveq   #$FFFFFFFE, D4
                rts
Offset_0x00F8A8:
                subq.w  #$04, D3
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  D1, D2
                add.w   D2, D2
                add.w   $0008(A1), D1
                sub.w   $0008(A0), D1
                bmi.s   Offset_0x00F8E0
                cmp.w   D2, D1
                bcc.s   Offset_0x00F8E0
                tst.w   $0012(A1)
                bmi.s   Offset_0x00F8E0
                sub.w   D3, $000C(A1)
                subq.w  #$01, $000C(A1)
                bsr     Offset_0x00FAF2
                move.w  D6, D4
                addi.b  #$11, D4
                bset    D4, D6
                moveq   #$FFFFFFFF, D4
                rts
Offset_0x00F8E0:
                moveq   #$00, D4
                rts
Offset_0x00F8E4:
                move.w  $000C(A0), D0
                sub.w   D3, D0
                bra.s   Offset_0x00F8F4
                move.w  $000C(A0), D0
                subi.w  #$0009, D0
Offset_0x00F8F4:
                tst.b   $002A(A1)
                bmi.s   Offset_0x00F91C
                cmpi.b  #$06, $0024(A1)
                bcc.s   Offset_0x00F91C
                tst.w   ($FFFFFE08).w
                bne.s   Offset_0x00F91C
                moveq   #$00, D1
                move.b  $0016(A1), D1
                sub.w   D1, D0
                move.w  D0, $000C(A1)
                sub.w   $0008(A0), D2
                sub.w   D2, $0008(A1)
Offset_0x00F91C:
                rts                
Offset_0x00F91E:
                btst    #$03, $0022(A1)
                beq.s   Offset_0x00F95E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                lsr.w   #$01, D0
                btst    #$00, $0001(A0)
                beq.s   Offset_0x00F93E
                not.w  d0
                add.w   D1, D0
Offset_0x00F93E:
                move.b  $00(A2, D0), D1
                ext.w   D1
                move.w  $000C(A0), D0
                sub.w   D1, D0
                moveq   #$00, D1
                move.b  $0016(A1), D1
                sub.w   D1, D0
                move.w  D0, $000C(A1)
                sub.w   $0008(A0), D2
                sub.w   D2, $0008(A1)
Offset_0x00F95E:
                rts
Offset_0x00F960:

                btst    #$03, $0022(A1)
                beq.s   Offset_0x00F95E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                btst    #$00, $0001(A0)
                beq.s   Offset_0x00F97E
                not.w  D0
                add.w   D1, D0
Offset_0x00F97E:
                andi.w  #$FFFE, D0
                bra.s   Offset_0x00F93E
Offset_0x00F984:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   Offset_0x00F99A
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
Offset_0x00F99A:
                btst    D6, $0022(A0)
                beq     Offset_0x00FA98
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00F9BE
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00F9BE
                cmp.w   D2, D0
                bcs.s   Offset_0x00F9CC
Offset_0x00F9BE:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
Offset_0x00F9CC:
                move.w  D4, D2
                bsr     Offset_0x00F8E4
                moveq   #$00, D4
                rts
Offset_0x00F9D6:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   Offset_0x00F9EC
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
Offset_0x00F9EC:                
                btst    D6, $0022(A0)
                beq     Offset_0x00FB60
                move.w  D1, D2
                add.w   D2, D2  
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00FA10
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00FA10
                cmp.w   D2, D0
                bcs.s   Offset_0x00FA1E
Offset_0x00FA10:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
Offset_0x00FA1E:
                move.w  D4, D2
                bsr     Offset_0x00F91E
                moveq   #$00, D4
                rts

Offset_0x00FA28:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr.s   Offset_0x00FA3E
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
Offset_0x00FA3E:
                btst    D6, $0022(A0)
                beq     Offset_0x00FB98
                move.w  D1, D2
                add.w   D2, D2
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00FA62
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00FA62
                cmp.w   D2, D0
                bcs.s   Offset_0x00FA70
Offset_0x00FA62:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                moveq   #$00, D4
                rts
Offset_0x00FA70:
                move.w  D4, D2
                bsr     Offset_0x00F8E4
                moveq   #$00, D4
                rts        
Offset_0x00FA7A:
                tst.w   $0012(A1)
                bmi     Offset_0x00FB5E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     Offset_0x00FB5E
                cmp.w   D2, D0
                bcc     Offset_0x00FB5E
                bra.s   Offset_0x00FAB6
Offset_0x00FA98:                
                tst.w   $0012(A1)
                bmi     Offset_0x00FB5E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     Offset_0x00FB5E
                add.w   D1, D1
                cmp.w   D1, D0
                bcc     Offset_0x00FB5E
Offset_0x00FAB6:
                move.w  $000C(A0), D0
                sub.w   D3, D0
Offset_0x00FABC:
                move.w  $000C(A1), D2
                move.b  $0016(A1), D1
                ext.w   D1
                add.w   D2, D1
                addq.w  #$04, D1
                sub.w   D1, D0
                bhi     Offset_0x00FB5E
                cmpi.w  #$FFF0, D0
                bcs     Offset_0x00FB5E
                tst.b   $002A(A1)
                bmi     Offset_0x00FB5E
                cmpi.b  #$06, $0024(A1)
                bcc     Offset_0x00FB5E
                add.w   D0, D2
                addq.w  #$03, D2
                move.w  D2, $000C(A1)
Offset_0x00FAF2:                
                btst    #$03, $0022(A1)
                beq.s   Offset_0x00FB0E
                moveq   #$00, D0
                move.b  $003D(A1), D0
                lsl.w   #$06, D0
                addi.l  #$FFFFB000, D0
                move.l  D0, A3
                bclr    D6, $0022(A3)
Offset_0x00FB0E:
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.b  D0, $003D(A1)
                move.b  #$00, $0026(A1)
                move.w  #$0000, $0012(A1)
                move.w  $0010(A1), $0014(A1)
                btst    #$01, $0022(A1)
                beq.s   Offset_0x00FB54
                move.l  A0, -(A7)
                move.l  A1, A0
                move.w  A0, D1
                subi.w  #$B000, D1
                bne.s   Offset_0x00FB4C
                jsr     Sonic_ResetOnFloor      ; Offset_0x01090C
                bra.s   Offset_0x00FB52
Offset_0x00FB4C:
                jsr     Tails_ResetTailsOnFloor ; Offset_0x011A66 
Offset_0x00FB52:
                move.l  (A7)+, A0
Offset_0x00FB54:
                bset    #$03, $0022(A1)
                bset    D6, $0022(A0)
Offset_0x00FB5E:
                rts                      
Offset_0x00FB60:
                tst.w   $0012(A1)
                bmi     Offset_0x00FB5E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00FB5E
                add.w   D1, D1
                cmp.w   D1, D0
                bcc.s   Offset_0x00FB5E
                btst    #$00, $0001(A0)
                beq.s   Offset_0x00FB86
                not.w   D0
                add.w   D1, D0
Offset_0x00FB86:
                lsr.w   #$01, D0
                move.b  $00(A2, D0), D3
                ext.w   D3
                move.w  $000C(A0), D0
                sub.w   D3, D0
                bra     Offset_0x00FABC
Offset_0x00FB98:                
                tst.w   $0012(A1)
                bmi     Offset_0x00FB5E
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi     Offset_0x00FB5E
                add.w   D1, D1
                cmp.w   D1, D0
                bcc     Offset_0x00FB5E
                move.w  $000C(A0), D0
                sub.w   D3, D0
                bra     Offset_0x00FABC
Offset_0x00FBC0:                
                move.w  D1, D2
                add.w   D2, D2
                lea     ($FFFFB000).w, A1
                btst    #$01, $0022(A1)
                bne.s   Offset_0x00FBE0
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D1, D0
                bmi.s   Offset_0x00FBE0
                cmp.w   D2, D0
                bcs.s   Offset_0x00FBF2
Offset_0x00FBE0:
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A0)
                bclr    #$03, $0022(A0)
Offset_0x00FBF2:
                rts                
Offset_0x00FBF4:
                lea     ($FFFFB000).w, A1
                btst    #$03, $0022(A0)
                beq.s   Offset_0x00FC1C
                jsr     Sonic_HitFloor2         ; (Offset_0x013846)
                tst.w   D1
                beq.s   Offset_0x00FC0C
                bpl.s   Offset_0x00FC1C
Offset_0x00FC0C:
                lea     ($FFFFB000).w, A1
                bclr    #$03, $0022(A1)
                bclr    #$03, $0022(A0)
Offset_0x00FC1C:
                lea     ($FFFFB040).w, A1
                btst    #$04, $0022(A0)
                beq.s   Offset_0x00FC44
                jsr     Sonic_HitFloor2         ; (Offset_0x013846)
                tst.w   D1
                beq.s   Offset_0x00FC34
                bpl.s   Offset_0x00FC44
Offset_0x00FC34:
                lea     ($FFFFB040).w, A1
                bclr    #$03, $0022(A1)
                bclr    #$04, $0022(A0)
Offset_0x00FC44:
                moveq   #$00, D4
                rts
;=============================================================================== 
; Object 0x01 - Sonic 
; [ Begin ]
;===============================================================================               
Obj_0x01_Sonic: ; Offset_0x00FC48: 
                tst.w   ($FFFFFE08).w
                beq.s   Sonic_Normal ; Offset_0x00FC54
                jmp     Debug_Mode ; Offset_0x023B70
Sonic_Normal: ; Offset_0x00FC54:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Sonic_Index(PC, D0), D1 ; Offset_0x00FC62
                jmp     Sonic_Index(PC, D1)     ; Offset_0x00FC62
Sonic_Index: ; Offset_0x00FC62:
                dc.w    Sonic_Main-Sonic_Index       ; Offset_0x00FC6C
                dc.w    Sonic_Control-Sonic_Index    ; Offset_0x00FCE2
                dc.w    Sonic_Hurt-Sonic_Index       ; Offset_0x01096A 
                dc.w    Sonic_Death-Sonic_Index      ; Offset_0x0109FE
                dc.w    Sonic_ResetLevel-Sonic_Index ; Offset_0x010A9E
Sonic_Main: ; Offset_0x00FC6C: 
                addq.b  #$02, $0024(A0)
                move.b  #$13, $0016(A0)
                move.b  #$09, $0017(A0)
                move.l  #Sonic_Mappings, $0004(A0) ; Offset_0x0614C0
                move.w  #$0780, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$02, $0018(A0)
                move.b  #$18, $0019(A0)
                move.b  #$04, $0001(A0)
                move.w  #$0600, ($FFFFF760).w
                move.w  #$000C, ($FFFFF762).w
                move.w  #$0080, ($FFFFF764).w
                move.b  #$0C, $003E(A0)
                move.b  #$0D, $003F(A0)
                move.b  #$00, $002C(A0)
                move.b  #$04, $002D(A0)
                move.w  #$0000, ($FFFFEED2).w
                move.w  #$003F, D2
Offset_0x00FCD4:                
                bsr     CopySonicMovesForTails  ; Offset_0x00FDFA
                move.w  #$0000, $00(A1, D0)
                dbra    D2, Offset_0x00FCD4  
Sonic_Control: ; Offset_0x00FCE2:
                tst.w   ($FFFFFFFA).w
                beq.s   Offset_0x00FCFC
                btst    #$04, ($FFFFF605).w
                beq.s   Offset_0x00FCFC
                move.w  #$0001, ($FFFFFE08).w
                clr.b   ($FFFFF7CC).w
                rts
Offset_0x00FCFC:
                tst.b   ($FFFFF7CC).w
                bne.s   Offset_0x00FD08
                move.w  ($FFFFF604).w, ($FFFFF602).w
Offset_0x00FD08:
                btst    #$00, $002A(A0)
                bne.s   Sonic_ControlsLock      ; Offset_0x00FD22 
                moveq   #$00, D0
                move.b  $0022(A0), D0
                andi.w  #$0006, D0
                move.w  Sonic_Modes(PC, D0), D1 ; Offset_0x00FD5E
                jsr     Sonic_Modes(PC, D1)     ; Offset_0x00FD5E                 
Sonic_ControlsLock: ; Offset_0x00FD22:
                bsr.s   Sonic_Display           ; Offset_0x00FD76
                bsr     CopySonicMovesForTails  ; Offset_0x00FDFA
                bsr     Sonic_Water             ; Offset_0x00FE4E
                move.b  ($FFFFF768).w, $0036(A0)
                move.b  ($FFFFF76A).w, $0037(A0)
                tst.b   ($FFFFF7C7).w
                beq.s   Offset_0x00FD4A
                tst.b   $001C(A0)
                bne.s   Offset_0x00FD4A
                move.b  $001D(A0), $001C(A0)
Offset_0x00FD4A:
                bsr     Sonic_Animate           ; Offset_0x010AB2
                tst.b   $002A(A0)
                bmi.s   Offset_0x00FD5A
                jsr     TouchResponse           ; Offset_0x021160
Offset_0x00FD5A:
                bra     Load_Sonic_Dynamic_PLC  ; Offset_0x010DDC 
Sonic_Modes: ; Offset_0x00FD5E:
                dc.w    Sonic_MdNormal-Sonic_Modes    ; Offset_0x00FEEC
                dc.w    Sonic_MdJump-Sonic_Modes      ; Offset_0x00FF14
                dc.w    Sonic_MdRoll-Sonic_Modes      ; Offset_0x00FF3E
                dc.w    Sonic_MdJump2-Sonic_Modes     ; Offset_0x00FF5E              
Sonic_PlayList: ; Offset_0x00FD66:
                dc.b    $82, $82, $83, $90, $83, $83, $93, $96, $86, $8F, $81, $85, $84, $8D, $8D, $87 

;=============================================================================== 
; Sub Routine Sonic_Display
; [ Begin ]                         
;===============================================================================   
Sonic_Display: ; Offset_0x00FD76:
                move.w  $0030(A0), D0                 
                beq.s   Offset_0x00FD84
                subq.w  #$01, $0030(A0)
                lsr.w   #$03, D0
                bcc.s   Offset_0x00FD8A
Offset_0x00FD84:
                jsr     DisplaySprite           ; Offset_0x00D3C2
Offset_0x00FD8A:
                tst.b   ($FFFFFE2D).w
                beq.s   Offset_0x00FDC4
                tst.w   $0032(A0)
                beq.s   Offset_0x00FDC4
                subq.w  #$01, $0032(A0)
                bne.s   Offset_0x00FDC4
                tst.b   ($FFFFF7AA).w
                bne.s   Offset_0x00FDBE
                cmpi.w  #$000C, ($FFFFFE14).w
                bcs.s   Offset_0x00FDBE
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                lea     Sonic_PlayList(PC), A1  ; Offset_0x00FD66
                move.b  $00(A1, D0), D0
                jsr     (Play_Music)            ; Offset_0x0014C0
Offset_0x00FDBE:
                move.b  #$00, ($FFFFFE2D).w
Offset_0x00FDC4:
                tst.b   ($FFFFFE2E).w
                beq.s   Offset_0x00FDF8
                tst.w   $0034(A0)
                beq.s   Offset_0x00FDF8
                subq.w  #$01, $0034(A0)
                bne.s   Offset_0x00FDF8
                move.w  #$0600, ($FFFFF760).w
                move.w  #$000C, ($FFFFF762).w
                move.w  #$0080, ($FFFFF764).w
                move.b  #$00, ($FFFFFE2E).w
                move.w  #$00FC, D0
                jmp     (Play_Music)            ; Offset_0x0014C0                   
Offset_0x00FDF8:
                rts
;=============================================================================== 
; Sub Routine Sonic_Display
; [ End ]                         
;===============================================================================
                  
;=============================================================================== 
; Sub Routine CopySonicMovesForTails
; [ Begin ]                         
;===============================================================================                 
CopySonicMovesForTails: ; Offset_0x00FDFA:
                move.w  ($FFFFEED2).w, D0
                lea     ($FFFFE500).w, A1
                lea     $00(A1, D0), A1
                move.w  $0008(A0), (A1)+
                move.w  $000C(A0), (A1)+
                addq.b  #$04, ($FFFFEED3).w
                lea     ($FFFFE400).w, A1
                move.w  ($FFFFF604).w, $00(A1, D0)
                rts
;=============================================================================== 
; Sub Routine CopySonicMovesForTails
; [ End ]                         
;===============================================================================
                  
; Offset_0x00FE1E:
                move.w  ($FFFFEEE0).w, D0
                subq.b  #$04, D0
                lea     ($FFFFE600).w, A1
                lea     $00(A1, D0), A2
                move.w  $0008(A0), D1
                swap.w  D1
                move.w  $000C(A0), D1
                cmp.l   (A2), D1
                beq.s   Offset_0x00FE4C
                addq.b  #$04, D0
                lea     $00(A1, D0), A2
                move.w  $0008(A0), (A2)+
                move.w  $000C(A0), (A2)
                addq.b  #$04, ($FFFFEEE1).w
Offset_0x00FE4C:
                rts  
;=============================================================================== 
; Sub Routine Sonic_Water
; [ Begin ]                         
;===============================================================================     
Sonic_Water: ; Offset_0x00FE4E:
                tst.b   ($FFFFF730).w
                bne.s   Sonic_InLevelWithWater  ; Offset_0x00FE56
Offset_0x00FE54:                
                rts
Sonic_InLevelWithWater: ; Offset_0x00FE56:
                move.w  ($FFFFF646).w, D0
                cmp.w   $000C(A0), D0
                bge.s   Sonic_NotInWater        ; Offset_0x00FEA8
                bset    #$06, $0022(A0)
                bne.s   Offset_0x00FE54  
                bsr     ResumeMusic             ; Offset_0x0124FE
                move.b  #$0A, ($FFFFB340).w
                move.b  #$81, ($FFFFB368).w
                move.w  #$0300, ($FFFFF760).w
                move.w  #$0006, ($FFFFF762).w
                move.w  #$0040, ($FFFFF764).w
                asr.w   $0010(A0)
                asr.w   $0012(A0)
                asr.w   $0012(A0)
                beq.s   Offset_0x00FE54
                move.b  #$08, ($FFFFB300).w
                move.w  #$00AA, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
;===============================================================================                 
Sonic_NotInWater: ; Offset_0x00FEA8:                  
                bclr    #$06, $0022(A0)
                beq.s   Offset_0x00FE54
                bsr     ResumeMusic             ; Offset_0x0124FE
                move.w  #$0600, ($FFFFF760).w
                move.w  #$000C, ($FFFFF762).w
                move.w  #$0080, ($FFFFF764).w
                asl.w   $0012(A0)
                beq     Offset_0x00FE54
                move.b  #$08, ($FFFFB300).w
                cmpi.w  #$F000, $0012(A0)
                bgt.s   Offset_0x00FEE2
                move.w  #$F000, $0012(A0)
Offset_0x00FEE2:                
                move.w  #$00AA, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Sonic_MdNormal: ; Offset_0x00FEEC:
                bsr     Sonic_Spindash          ; Offset_0x010560
                bsr     Sonic_Jump              ; Offset_0x010476
                bsr     Sonic_SlopeResist       ; Offset_0x0105EC
                bsr     Sonic_Move              ; Offset_0x00FF88
                bsr     Sonic_Roll              ; Offset_0x010410
                bsr     Sonic_LevelBoundaries   ; Offset_0x01038C
                jsr     SpeedToPos              ; Offset_0x00D27A
                bsr     Sonic_AnglePos          ; Offset_0x012D28
                bsr     Sonic_SlopeRepel        ; Offset_0x01065E
                rts
Sonic_MdJump: ; Offset_0x00FF14:
                bsr     Sonic_JumpHeight        ; Offset_0x010524
                bsr     Sonic_ChgJumpDir        ; Offset_0x010300
                bsr     Sonic_LevelBoundaries   ; Offset_0x01038C
                jsr     ObjectFall              ; Offset_0x00D24E
                btst    #$06, $0022(A0)
                beq.s   Offset_0x00FF34
                subi.w  #$0028, $0012(A0)
Offset_0x00FF34:
                bsr     Sonic_JumpAngle         ; Offset_0x0106A0
                bsr     Sonic_Floor             ; Offset_0x010700
                rts
Sonic_MdRoll: ; Offset_0x00FF3E:
                bsr     Sonic_Jump              ; Offset_0x010476
                bsr     Sonic_RollRepel         ; Offset_0x010622
                bsr     Sonic_RollSpeed         ; Offset_0x010208
                bsr     Sonic_LevelBoundaries   ; Offset_0x01038C
                jsr     SpeedToPos              ; Offset_0x00D27A
                bsr     Sonic_AnglePos          ; Offset_0x012D28
                bsr     Sonic_SlopeRepel        ; Offset_0x01065E
                rts
Sonic_MdJump2: ; Offset_0x00FF5E:
                bsr     Sonic_JumpHeight        ; Offset_0x010524
                bsr     Sonic_ChgJumpDir        ; Offset_0x010300
                bsr     Sonic_LevelBoundaries   ; Offset_0x01038C
                jsr     ObjectFall              ; Offset_0x00D24E
                btst    #$06, $0022(A0)
                beq.s   Offset_0x00FF7E
                subi.w  #$0028, $0012(A0)
Offset_0x00FF7E:
                bsr     Sonic_JumpAngle         ; Offset_0x0106A0
                bsr     Sonic_Floor             ; Offset_0x010700
                rts
                
;=============================================================================== 
; Sub Routine Sonic_Move
; [ Begin ]                         
;===============================================================================                  
Sonic_Move: ; Offset_0x00FF88:
                move.w  ($FFFFF760).w, D6
                move.w  ($FFFFF762).w, D5
                move.w  ($FFFFF764).w, D4
                tst.b   ($FFFFF7CA).w
                bne     Offset_0x01009A
                tst.w   $002E(A0)
                bne     Offset_0x01006E
                btst    #$02, ($FFFFF602).w
                beq.s   Offset_0x00FFB0
                bsr     Sonic_MoveLeft          ; Offset_0x01012A
Offset_0x00FFB0:
                btst    #$03, ($FFFFF602).w
                beq.s   Offset_0x00FFBC
                bsr     Sonic_MoveRight         ; Offset_0x01019C
Offset_0x00FFBC:
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne     Offset_0x01006E
                tst.w   $0014(A0)
                bne     Offset_0x01006E
                bclr    #$05, $0022(A0)
                move.b  #$05, $001C(A0)
                btst    #$03, $0022(A0)
                beq.s   Sonic_Balance           ; Offset_0x01001E
                moveq   #$00, D0
                move.b  $003D(A0), D0
                lsl.w   #$06, D0
                lea     ($FFFFB000).w, A1
                lea     $00(A1, D0), A1
                tst.b   $0022(A1)
                bmi.s   Sonic_LookUp            ; Offset_0x010050
                moveq   #$00, D1
                move.b  $0019(A1), D1
                move.w  D1, D2
                add.w   D2, D2
                subq.w  #$04, D2
                add.w   $0008(A0), D1
                sub.w   $0008(A1), D1
                cmpi.w  #$0004, D1
                blt.s   Offset_0x010042
                cmp.w   D2, D1
                bge.s   Offset_0x010032
                bra.s   Sonic_LookUp            ; Offset_0x010050
;===============================================================================                
Sonic_Balance: ; Offset_0x01001E:
                jsr     Sonic_HitFloor          ; Offset_0x0137F4
                cmpi.w  #$000C, D1
                blt.s   Sonic_LookUp            ; Offset_0x010050
                cmpi.b  #$03, $0036(A0)
                bne.s   Offset_0x01003A
Offset_0x010032:
                bclr    #$00, $0022(A0)
                bra.s   Offset_0x010048
Offset_0x01003A:
                cmpi.b  #$03, $0037(A0)
                bne.s   Sonic_LookUp            ; Offset_0x010050
Offset_0x010042:                
                bset    #$00, $0022(A0)
Offset_0x010048:                
                move.b  #$06, $001C(A0)
                bra.s   Offset_0x01006E
;===============================================================================                   
Sonic_LookUp: ; Offset_0x010050:
                btst    #$00, ($FFFFF602).w
                beq.s   Sonic_Duck              ; Offset_0x010060
                move.b  #$07, $001C(A0)
                bra.s   Offset_0x01006E
;===============================================================================                   
Sonic_Duck: ; Offset_0x010060:
                btst    #$01, ($FFFFF602).w
                beq.s   Offset_0x01006E
                move.b  #$08, $001C(A0)
Offset_0x01006E:
                move.b  ($FFFFF602).w, D0
                andi.b  #$0C, D0
                bne.s   Offset_0x01009A
                move.w  $0014(A0), D0
                beq.s   Offset_0x01009A
                bmi.s   Offset_0x01008E
                sub.w   D5, D0
                bcc.s   Offset_0x010088
                move.w  #$0000, D0
Offset_0x010088:
                move.w  D0, $0014(A0)
                bra.s   Offset_0x01009A
Offset_0x01008E:
                add.w   D5, D0
                bcc.s   Offset_0x010096
                move.w  #$0000, D0
Offset_0x010096:
                move.w  D0, $0014(A0)
Offset_0x01009A:
                move.b  $0026(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  $0014(A0), D1
                asr.l   #$08, D1
                move.w  D1, $0010(A0)
                muls.w  $0014(A0), D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
Offset_0x0100B8:                
                move.b  $0026(A0), D0
                addi.b  #$40, D0
                bmi.s   Offset_0x010128
                move.b  #$40, D1
                tst.w   $0014(A0)
                beq.s   Offset_0x010128
                bmi.s   Offset_0x0100D0
                neg.w   D1
Offset_0x0100D0:
                move.b  $0026(A0), D0
                add.b   D1, D0
                move.w  D0, -(A7)
                bsr     Sonic_WalkSpeed         ; Offset_0x01366C
                move.w  (A7)+, D0
                tst.w   D1
                bpl.s   Offset_0x010128
                asl.w   #$08, D1
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   Offset_0x010124
                cmpi.b  #$40, D0
                beq.s   Offset_0x010112
                cmpi.b  #$80, D0
                beq.s   Offset_0x01010C
                add.w   D1, $0010(A0)
                bset    #$05, $0022(A0)
                move.w  #$0000, $0014(A0)
                rts
Offset_0x01010C:
                sub.w   D1, $0012(A0)
                rts
Offset_0x010112:
                sub.w   D1, $0010(A0)
                bset    #$05, $0022(A0)
                move.w  #$0000, $0014(A0)
                rts
Offset_0x010124:
                add.w   D1, $0012(A0)
Offset_0x010128:                
                rts    
;=============================================================================== 
; Sub Routine Sonic_Move
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine Sonic_MoveLeft
; [ Begin ]                         
;===============================================================================                             
Sonic_MoveLeft: ; Offset_0x01012A:
                move.w  $0014(A0), D0
                beq.s   Offset_0x010132
                bpl.s   Offset_0x010164
Offset_0x010132:
                bset    #$00, $0022(A0)
                bne.s   Offset_0x010146
                bclr    #$05, $0022(A0)                  
                move.b  #$01, $001D(A0) 
Offset_0x010146:
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   Offset_0x010158
                add.w   D5, D0
                cmp.w   D1, D0
                ble.s   Offset_0x010158
                move.w  D1, D0
Offset_0x010158:
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                rts
Offset_0x010164:
                sub.w   D4, D0
                bcc.s   Offset_0x01016C
                move.w  #$FF80, D0
Offset_0x01016C:
                move.w  D0, $0014(A0)
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   Offset_0x01019A
                cmpi.w  #$0400, D0             
                blt.s   Offset_0x01019A
                move.b  #$0D, $001C(A0)
                bclr    #$00, $0022(A0)
                move.w  #$00A4, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x01019A:
                rts
;=============================================================================== 
; Sub Routine Sonic_MoveLeft
; [ End ]                         
;===============================================================================    

;=============================================================================== 
; Sub Routine Sonic_MoveRight
; [ Begin ]                         
;===============================================================================                  
Sonic_MoveRight: ; Offset_0x01019C:
                move.w  $0014(A0), D0
                bmi.s   Offset_0x0101D0
                bclr    #$00, $0022(A0)
                beq.s   Offset_0x0101B6
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
Offset_0x0101B6:
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   Offset_0x0101C4
                sub.w   D5, D0
                cmp.w   D6, D0
                bge.s   Offset_0x0101C4
                move.w  D6, D0
Offset_0x0101C4:
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                rts 
Offset_0x0101D0:
                add.w   D4, D0
                bcc.s   Offset_0x0101D8
                move.w  #$0080, D0
Offset_0x0101D8:
                move.w  D0, $0014(A0)
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   Offset_0x010206
                cmpi.w  #$FC00, D0
                bgt.s   Offset_0x010206
                move.b  #$0D, $001C(A0)
                bset    #$00, $0022(A0)
                move.w  #$00A4, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x010206:
                rts
;=============================================================================== 
; Sub Routine Sonic_MoveRight
; [ End ]                         
;===============================================================================    
                   
;=============================================================================== 
; Sub Routine Sonic_RollSpeed
; [ Begin ]                         
;===============================================================================                           
Sonic_RollSpeed: ; Offset_0x010208:
                move.w  ($FFFFF760).w, D6
                asl.w   #$01, D6
                move.w  ($FFFFF762).w, D5
                asr.w   #$01, D5
                move.w  ($FFFFF764).w, D4
                asr.w   #$02, D4
                tst.b   ($FFFFF7CA).w
                bne     Offset_0x010284
                tst.w   $002E(A0)
                bne.s   Offset_0x010240
                btst    #$02, ($FFFFF602).w
                beq.s   Offset_0x010234
                bsr     Sonic_RollLeft          ; Offset_0x0102BA
Offset_0x010234:                
                btst    #$03, ($FFFFF602).w
                beq.s   Offset_0x010240
                bsr     Sonic_RollRight         ; Offset_0x0102DE
Offset_0x010240:                
                move.w  $0014(A0), D0                
                beq.s   Offset_0x010262
                bmi.s   Offset_0x010256
                sub.w   D5, D0
                bcc.s   Offset_0x010250
                move.w  #$0000, D0
Offset_0x010250:
                move.w  D0, $0014(A0)
                bra.s   Offset_0x010262
Offset_0x010256:
                add.w   D5, D0
                bcc.s   Offset_0x01025E
                move.w  #$0000, D0
Offset_0x01025E:                
                move.w  D0, $0014(A0) 
Offset_0x010262:                
                tst.w   $0014(A0)
                bne.s   Offset_0x010284
                bclr    #$02, $0022(A0)
                move.b  #$13, $0016(A0)
                move.b  #$09, $0017(A0)
                move.b  #$05, $001C(A0)
                subq.w  #$05, $000C(A0)
Offset_0x010284:                
                move.b  $0026(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  $0014(A0), D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
                muls.w  $0014(A0), D1
                asr.l   #$08, D1
                cmpi.w  #$1000, D1
                ble.s   Offset_0x0102A8
                move.w  #$1000, D1
Offset_0x0102A8:
                cmpi.w  #$F000, D1
                bge.s   Offset_0x0102B2
                move.w  #$F000, D1
Offset_0x0102B2:
                move.w  D1, $0010(A0)
                bra     Offset_0x0100B8   
;=============================================================================== 
; Sub Routine Sonic_RollSpeed
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine Sonic_RollLeft
; [ Begin ]                         
;===============================================================================  
Sonic_RollLeft: ; Offset_0x0102BA:
                move.w  $0014(A0), D0
                beq.s   Offset_0x0102C2
                bpl.s   Offset_0x0102D0
Offset_0x0102C2:
                bset    #$00, $0022(A0)
                move.b  #$02, $001C(A0)
                rts
Offset_0x0102D0:
                sub.w   D4, D0
                bcc.s   Offset_0x0102D8
                move.w  #$FF80, D0
Offset_0x0102D8:
                move.w  D0, $0014(A0)
                rts 
;=============================================================================== 
; Sub Routine Sonic_RollLeft
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine Sonic_RollRight
; [ Begin ]                         
;===============================================================================  
Sonic_RollRight: ; Offset_0x0102DE:
                move.w  $0014(A0), D0
                bmi.s   Offset_0x0102F2
                bclr    #$00, $0022(A0)
                move.b  #$02, $001C(A0)
                rts
Offset_0x0102F2:
                add.w   D4, D0
                bcc.s   Offset_0x0102FA
                move.w  #$0080, D0
Offset_0x0102FA:
                move.w  D0, $0014(A0)
                rts   
;=============================================================================== 
; Sub Routine Sonic_RollRight
; [ End ]                         
;===============================================================================
                  
;=============================================================================== 
; Sub Routine Sonic_ChgJumpDir
; [ Begin ]                         
;===============================================================================             
Sonic_ChgJumpDir: ; Offset_0x010300:
                move.w  ($FFFFF760).w, D6
                move.w  ($FFFFF762).w, D5
                asl.w   #$01, D5
                btst    #$04, $0022(A0)
                bne.s   Offset_0x01034A
                move.w  $0010(A0), D0
                btst    #$02, ($FFFFF602).w
                beq.s   Offset_0x010330
                bset    #$00, $0022(A0)
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   Offset_0x010330
                move.w  D1, D0
Offset_0x010330:
                btst    #$03, ($FFFFF602).w
                beq.s   Offset_0x010346
                bclr    #$00, $0022(A0)
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   Offset_0x010346
                move.w  D6, D0
Offset_0x010346:
                move.w  D0, $0010(A0)
Offset_0x01034A:
                cmpi.w  #$0060, ($FFFFEED8).w
                beq.s   Offset_0x01035C
                bcc.s   Offset_0x010358
                addq.w  #$04, ($FFFFEED8).w
Offset_0x010358:
                subq.w  #$02, ($FFFFEED8).w
Offset_0x01035C:
                cmpi.w  #$FC00, $0012(A0)
                bcs.s   Offset_0x01038A                 
                move.w  $0010(A0), D0
                move.w  D0, D1
                asr.w   #$05, D1
                beq.s   Offset_0x01038A
                bmi.s   Offset_0x01037E
                sub.w   D1, D0
                bcc.s   Offset_0x010378
                move.w  #$0000, D0
Offset_0x010378:
                move.w  D0, $0010(A0)
                rts
Offset_0x01037E:
                sub.w   D1, D0
                bcs.s   Offset_0x010386
                move.w  #$0000, D0
Offset_0x010386:
                move.w  D0, $0010(A0)
Offset_0x01038A:                
                rts    
;=============================================================================== 
; Sub Routine Sonic_ChgJumpDir
; [ End ]                         
;===============================================================================
                      
;=============================================================================== 
; Sub Routine Sonic_LevelBoundaries
; [ Begin ]                         
;===============================================================================                               
Sonic_LevelBoundaries: ; Offset_0x01038C:
                move.l  $0008(A0), D1
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D1
                swap.w  D1
                move.w  ($FFFFEEC8).w, D0
                addi.w  #$0010, D0
                cmp.w   D1, D0
                bhi.s   Offset_0x0103F8
                move.w  ($FFFFEECA).w, D0
                addi.w  #$0128, D0
                tst.b   ($FFFFF7AA).w
                bne.s   Offset_0x0103BA
                addi.w  #$0040, D0
Offset_0x0103BA:
                cmp.w   D1, D0
                bls.s   Offset_0x0103F8
Offset_0x0103BE:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                blt.s   Offset_0x0103CE
                rts
Offset_0x0103CE:
                bra     J_KillSonic_00          ; Offset_0x010E30
                cmpi.w  #$1001, ($FFFFFE10).w
                bne     J_KillSonic_00          ; Offset_0x010E30
                cmpi.w  #$2000, ($FFFFB008).w
                bcs     J_KillSonic_00          ; Offset_0x010E30
                clr.b   ($FFFFFE30).w
                move.w  #$0001, ($FFFFFE02).w
                move.w  #$0103, ($FFFFFE10).w
                rts
Offset_0x0103F8:
                move.w  D0, $0008(A0)
                move.w  #$0000, $000A(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0014(A0)
                bra.s   Offset_0x0103BE
;=============================================================================== 
; Sub Routine Sonic_LevelBoundaries
; [ End ]                         
;===============================================================================                  
                
;=============================================================================== 
; Sub Routine Sonic_Roll
; [ Begin ]                         
;===============================================================================                   
Sonic_Roll: ; Offset_0x010410:
                tst.b   ($FFFFF7CA).w
                bne.s   Sonic_NoRoll            ; Offset_0x010436
                move.w  $0014(A0), D0
                bpl.s   Offset_0x01041E
                neg.w   D0
Offset_0x01041E:
                cmpi.w  #$0080, D0
                bcs.s   Sonic_NoRoll            ; Offset_0x010436
                move.b  ($FFFFF602).w, D0
                andi.b  #$0C, D0
                bne.s   Sonic_NoRoll            ; Offset_0x010436
                btst    #$01, ($FFFFF602).w
                bne.s   Offset_0x010438
Sonic_NoRoll: ; Offset_0x010436:
                rts
Offset_0x010438:
                btst    #$02, $0022(A0)
                beq.s   Sonic_DoRoll            ; Offset_0x010442
                rts
;===============================================================================                  
Sonic_DoRoll: ; Offset_0x010442:
                bset    #$02, $0022(A0)
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                addq.w  #$05, $000C(A0)
                move.w  #$00BE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                tst.w   $0014(A0)
                bne.s   Offset_0x010474
                move.w  #$0200, $0014(A0)
Offset_0x010474:
                rts
;=============================================================================== 
; Sub Routine Sonic_Roll
; [ End ]                         
;===============================================================================    
              
;=============================================================================== 
; Sub Routine Sonic_Jump
; [ Begin ]                         
;===============================================================================                
Sonic_Jump: ; Offset_0x010476:
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq     Offset_0x01051A
                moveq   #$00, D0
                move.b  $0026(A0), D0
                addi.b  #$80, D0
                bsr     Offset_0x0136F2
                cmpi.w  #$0006, D1
                blt     Offset_0x01051A
                move.w  #$0680, D2
                btst    #$06, $0022(A0)
                beq.s   Offset_0x0104A8
                move.w  #$0380, D2
Offset_0x0104A8:
                moveq   #$00, D0
                move.b  $0026(A0), D0
                subi.b  #$40, D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  D2, D1
                asr.l   #$08, D1
                add.w   D1, $0010(A0)
                muls.w  D2, D0
                asr.l   #$08, D0
                add.w   D0, $0012(A0)
                bset    #$01, $0022(A0)
                bclr    #$05, $0022(A0)
                addq.l  #$04, A7
                move.b  #$01, $003C(A0)
                clr.b   $0038(A0)
                move.w  #$00A0, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                move.b  #$13, $0016(A0)
                move.b  #$09, $0017(A0)
                btst    #$02, $0022(A0)
                bne.s   Offset_0x01051C
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                bset    #$02, $0022(A0)
                addq.w  #$05, $000C(A0)
Offset_0x01051A:                
                rts
Offset_0x01051C:
                bset    #$04, $0022(A0)
                rts   
;=============================================================================== 
; Sub Routine Sonic_Jump
; [ End ]                         
;===============================================================================   

;=============================================================================== 
; Sub Routine Sonic_JumpHeight
; [ Begin ]                         
;===============================================================================   
Sonic_JumpHeight: ; Offset_0x010524:
                tst.b   $003C(A0)
                beq.s   Offset_0x010550
                move.w  #$FC00, D1
                btst    #$06, $0022(A0)
                beq.s   Offset_0x01053A
                move.w  #$FE00, D1
Offset_0x01053A:
                cmp.w   $0012(A0), D1
                ble.s   Offset_0x01054E
                move.b  ($FFFFF602).w, D0
                andi.b  #$70, D0
                bne.s   Offset_0x01054E
                move.w  D1, $0012(A0)
Offset_0x01054E:
                rts  
Offset_0x010550:
                cmpi.w  #$F040, $0012(A0)
                bge.s   Offset_0x01055E
                move.w  #$F040, $0012(A0)
Offset_0x01055E:
                rts 
;=============================================================================== 
; Sub Routine Sonic_JumpHeight
; [ End ]                         
;===============================================================================
                  
;=============================================================================== 
; Sub Routine Sonic_Spindash
; [ Begin ]                         
;===============================================================================                                     
Sonic_Spindash: ; Offset_0x010560:
                tst.b   $0039(A0)
                bne.s   Offset_0x010594
                cmpi.b  #$08, $001C(A0)
                bne.s   Offset_0x010592
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq     Offset_0x010592
                move.b  #$09, $001C(A0)
                move.w  #$00BE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                addq.l  #$04, A7
                move.b  #$01, $0039(A0)
Offset_0x010592:
                rts
Offset_0x010594:                
                move.b  ($FFFFF602).w, D0
                btst    #$01, D0
                bne.s   Offset_0x0105DA
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                addq.w  #$05, $000C(A0)
                move.b  #$00, $0039(A0)
                move.w  #$2000, ($FFFFEED0).w
                move.w  #$0800, $0014(A0)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x0105D2
                neg.w   $0014(A0)
Offset_0x0105D2:
                bset    #$02, $0022(A0)
                rts
Offset_0x0105DA:
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq     Offset_0x0105E8
                nop
Offset_0x0105E8:
                addq.l  #$04, A7
                rts                  
;=============================================================================== 
; Sub Routine Sonic_Spindash
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine Sonic_SlopeResist
; [ Begin ]                         
;===============================================================================                      
Sonic_SlopeResist: ; Offset_0x0105EC:
                move.b  $0026(A0), D0
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   Offset_0x010620
                move.b  $0026(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  #$0020, D0
                asr.l   #$08, D0
                tst.w   $0014(A0)
                beq.s   Offset_0x010620
                bmi.s   Offset_0x01061C
                tst.w   D0
                beq.s   Offset_0x01061A
                add.w   D0, $0014(A0)
Offset_0x01061A:
                rts
Offset_0x01061C:
                add.w   D0, $0014(A0)
Offset_0x010620:
                rts
;=============================================================================== 
; Sub Routine Sonic_SlopeResist
; [ End ]                         
;=============================================================================== 
 
;=============================================================================== 
; Sub Routine Sonic_RollRepel
; [ Begin ]                         
;===============================================================================  
Sonic_RollRepel: ; Offset_0x010622:
                move.b  $0026(A0), D0
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   Offset_0x01065C
                move.b  $0026(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  #$0050, D0
                asr.l   #$08, D0
                tst.w   $0014(A0)
                bmi.s   Offset_0x010652
                tst.w   D0
                bpl.s   Offset_0x01064C
                asr.l   #$02, D0
Offset_0x01064C:
                add.w   D0, $0014(A0)
                rts
Offset_0x010652:
                tst.w   D0
                bmi.s   Offset_0x010658
                asr.l   #$02, D0
Offset_0x010658:
                add.w   D0, $0014(A0)
Offset_0x01065C:
                rts  
;=============================================================================== 
; Sub Routine Sonic_RollRepel
; [ End ]                         
;===============================================================================   
               
;=============================================================================== 
; Sub Routine Sonic_SlopeRepel
; [ Begin ]                         
;===============================================================================  
Sonic_SlopeRepel: ; Offset_0x01065E:
                nop
                tst.b   $0038(A0)
                bne.s   Offset_0x010698
                tst.w   $002E(A0)
                bne.s   Offset_0x01069A
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   Offset_0x010698
                move.w  $0014(A0), D0
                bpl.s   Offset_0x010682
                neg.w   D0
Offset_0x010682:
                cmpi.w  #$0280, D0
                bcc.s   Offset_0x010698
                clr.w   $0014(A0)
                bset    #$01, $0022(A0)
                move.w  #$001E, $002E(A0)
Offset_0x010698:
                rts
Offset_0x01069A:
                subq.w  #$01, $002E(A0)
                rts 
;=============================================================================== 
; Sub Routine Sonic_SlopeRepel
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Sub Routine Sonic_JumpAngle
; [ Begin ]                         
;=============================================================================== 
Sonic_JumpAngle: ; Offset_0x0106A0:
                move.b  $0026(A0), D0
                beq.s   Offset_0x0106BA
                bpl.s   Offset_0x0106B0
                addq.b  #$02, D0
                bcc.s   Offset_0x0106AE
                moveq   #$00, D0
Offset_0x0106AE:
                bra.s   Offset_0x0106B6
Offset_0x0106B0:                
                subq.b  #$02, D0
                bcc.s   Offset_0x0106B6
                moveq   #$00, D0
Offset_0x0106B6:
                move.b  D0, $0026(A0)
Offset_0x0106BA:
                move.b  $0027(A0), D0
                beq.s   Offset_0x0106FE
                tst.w   $0014(A0)
                bmi.s   Offset_0x0106DE
Offset_0x0106C6:
                move.b  $002D(A0), D1
                add.b   D1, D0
                bcc.s   Offset_0x0106DC
                subq.b  #$01, $002C(A0)
                bcc.s   Offset_0x0106DC
                move.b  #$00, $002C(A0)
                moveq   #$00, D0
Offset_0x0106DC:
                bra.s   Offset_0x0106FA
Offset_0x0106DE:
                tst.b   $0029(A0)
                bne.s   Offset_0x0106C6
                move.b  $002D(A0), D1
                sub.b   D1, D0
                bcc.s   Offset_0x0106FA
                subq.b  #$01, $002C(A0)
                bcc.s   Offset_0x0106FA
                move.b  #$00, $002C(A0)
                moveq   #$00, D0
Offset_0x0106FA:
                move.b  D0, $0027(A0)
Offset_0x0106FE:                
                rts
;=============================================================================== 
; Sub Routine Sonic_JumpAngle
; [ End ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine Sonic_Floor
; [ Begin ]                         
;=============================================================================== 
Sonic_Floor: ; Offset_0x010700:
                move.l  #$FFFFD000, ($FFFFF796).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   Offset_0x010718
                move.l  #$FFFFD600, ($FFFFF796).w
Offset_0x010718:
                move.b  $003F(A0), D5
                move.w  $0010(A0), D1
                move.w  $0012(A0), D2
                jsr     CalcAngle               ; Offset_0x0034A2
                move.b  D0, $002B(A0)
                subi.b  #$20, D0
                andi.b  #$C0, D0
                cmpi.b  #$40, D0
                beq     Offset_0x0107EC
                cmpi.b  #$80, D0
                beq     Offset_0x01084E
                cmpi.b  #$C0, D0
                beq     Offset_0x0108AA
                bsr     Sonic_HitWall           ; Offset_0x013AFC
                tst.w   D1
                bpl.s   Offset_0x010760
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
Offset_0x010760:
                bsr     Offset_0x01397A
                tst.w   D1
                bpl.s   Offset_0x010772
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
Offset_0x010772:
                bsr     Offset_0x013736
                tst.w   D1
                bpl.s   Offset_0x0107EA
                move.b  $0012(A0), D2
                addq.b  #$08, D2
                neg.b   D2
                cmp.b   D2, D1
                bge.s   Offset_0x01078A
                cmp.b   D2, D0
                blt.s   Offset_0x0107EA
Offset_0x01078A:
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Sonic_ResetOnFloor      ; Offset_0x01090C
                move.b  #$00, $001C(A0)
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   Offset_0x0107C8
                move.b  D3, D0
                addi.b  #$10, D0
                andi.b  #$20, D0
                beq.s   Offset_0x0107BA
                asr.w   $0012(A0)
                bra.s   Offset_0x0107DC
Offset_0x0107BA:
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
                rts
Offset_0x0107C8:
                move.w  #$0000, $0010(A0)
                cmpi.w  #$0FC0, $0012(A0)
                ble.s   Offset_0x0107DC
                move.w  #$0FC0, $0012(A0)
Offset_0x0107DC:
                move.w  $0012(A0), $0014(A0)
                tst.b   D3
                bpl.s   Offset_0x0107EA
                neg.w   $0014(A0)
Offset_0x0107EA:
                rts 
Offset_0x0107EC:
                bsr     Sonic_HitWall           ; Offset_0x013AFC
                tst.w   D1
                bpl.s   Offset_0x010806
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
                move.w  $0012(A0), $0014(A0)
                rts
Offset_0x010806:
                bsr     Sonic_DontRunOnWalls    ; Offset_0x0139CC
                tst.w   D1
                bpl.s   Offset_0x010820
                sub.w   D1, $000C(A0)
                tst.w   $0012(A0)
                bpl.s   Offset_0x01081E
                move.w  #$0000, $0012(A0)
Offset_0x01081E:
                rts
Offset_0x010820:
                tst.w   $0012(A0)
                bmi.s   Offset_0x01084C
                bsr     Offset_0x013736
                tst.w   D1
                bpl.s   Offset_0x01084C
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Sonic_ResetOnFloor      ; Offset_0x01090C
                move.b  #$00, $001C(A0)
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
Offset_0x01084C:  
                rts
Offset_0x01084E:
                bsr     Sonic_HitWall           ; Offset_0x013AFC
                tst.w   D1
                bpl.s   Offset_0x010860
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
Offset_0x010860:
                bsr     Offset_0x01397A
                tst.w   D1
                bpl.s   Offset_0x010872
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
Offset_0x010872:
                bsr     Sonic_DontRunOnWalls    ; Offset_0x0139CC
                tst.w   D1
                bpl.s   Offset_0x0108A8
                sub.w   D1, $000C(A0)
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   Offset_0x010892
                move.w  #$0000, $0012(A0)
                rts
Offset_0x010892:
                move.b  D3, $0026(A0)
                bsr     Sonic_ResetOnFloor      ; Offset_0x01090C
                move.w  $0012(A0), $0014(A0)
                tst.b   D3
                bpl.s   Offset_0x0108A8
                neg.w   $0014(A0)
Offset_0x0108A8:
                rts
Offset_0x0108AA:
                bsr     Offset_0x01397A
                tst.w   D1
                bpl.s   Offset_0x0108C4
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
                move.w  $0012(A0), $0014(A0)
                rts
Offset_0x0108C4:
                bsr     Sonic_DontRunOnWalls    ; Offset_0x0139CC
                tst.w   D1
                bpl.s   Offset_0x0108DE
                sub.w   D1, $000C(A0)
                tst.w   $0012(A0)
                bpl.s   Offset_0x0108DC
                move.w  #$0000, $0012(A0)
Offset_0x0108DC:
                rts
Offset_0x0108DE:
                tst.w   $0012(A0)
                bmi.s   Offset_0x01090A
                bsr     Offset_0x013736
                tst.w   D1
                bpl.s   Offset_0x01090A
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Sonic_ResetOnFloor      ; Offset_0x01090C
                move.b  #$00, $001C(A0)
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
Offset_0x01090A:
                rts
;=============================================================================== 
; Sub Routine Sonic_Floor
; [ End ]                         
;===============================================================================     
            
;=============================================================================== 
; Sub Routine Sonic_ResetOnFloor
; [ Begin ]                         
;===============================================================================                  
Sonic_ResetOnFloor: ; Offset_0x01090C:
                btst    #$04, $0022(A0)
                beq.s   Offset_0x01091A
                nop
                nop
                nop
Offset_0x01091A:
                bclr    #$05, $0022(A0)
                bclr    #$01, $0022(A0)
                bclr    #$04, $0022(A0)
                btst    #$02, $0022(A0)
                beq.s   Offset_0x010950
                bclr    #$02, $0022(A0)
                move.b  #$13, $0016(A0)
                move.b  #$09, $0017(A0)
                move.b  #$00, $001C(A0)
                subq.w  #$05, $000C(A0)
Offset_0x010950:
                move.b  #$00, $003C(A0)
                move.w  #$0000, ($FFFFF7D0).w
                move.b  #$00, $0027(A0)
                move.b  #$00, $0029(A0)
                rts 
;=============================================================================== 
; Sub Routine Sonic_ResetOnFloor
; [ End ]                         
;===============================================================================                  
                
Sonic_Hurt: ; Offset_0x01096A:
                tst.b   $0025(A0)
                bmi     Offset_0x0109E2
                jsr     SpeedToPos              ; Offset_0x00D27A
                addi.w  #$0030, $0012(A0)
                btst    #$06, $0022(A0)
                beq.s   Offset_0x01098C
                subi.w  #$0020, $0012(A0)
Offset_0x01098C:                    
                bsr     Sonic_HurtStop          ; Offset_0x0109A6
                bsr     Sonic_LevelBoundaries   ; Offset_0x01038C
                bsr     CopySonicMovesForTails  ; Offset_0x00FDFA
                bsr     Sonic_Animate           ; Offset_0x010AB2
                bsr     Load_Sonic_Dynamic_PLC  ; Offset_0x010DDC
                jmp     DisplaySprite           ; Offset_0x00D3C2
;=============================================================================== 
; Sub Routine Sonic_HurtStop
; [ Begin ]                         
;===============================================================================                   
Sonic_HurtStop: ; Offset_0x0109A6:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs     J_KillSonic_00          ; Offset_0x010E30
                bsr     Sonic_Floor             ; Offset_0x010700
                btst    #$01, $0022(A0)
                bne.s   Offset_0x0109E0
                moveq   #$00, D0
                move.w  D0, $0012(A0)
                move.w  D0, $0010(A0)
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                subq.b  #$02, $0024(A0)
                move.w  #$0078, $0030(A0)
Offset_0x0109E0:
                rts
;=============================================================================== 
; Sub Routine Sonic_HurtStop
; [ End ]                         
;===============================================================================  
                
Offset_0x0109E2:
                subq.b  #$02, $0024(A0)
                move.b  #$00, $0025(A0)
                bsr     CopySonicMovesForTails  ; Offset_0x00FDFA
                bsr     Sonic_Animate           ; Offset_0x010AB2
                bsr     Load_Sonic_Dynamic_PLC  ; Offset_0x010DDC
                jmp     DisplaySprite           ; Offset_0x00D3C2
Sonic_Death: ; Offset_0x0109FE:                
                bsr     Sonic_GameOver          ; Offset_0x010A1A
                jsr     ObjectFall              ; Offset_0x00D24E
                bsr     CopySonicMovesForTails  ; Offset_0x00FDFA
                bsr     Sonic_Animate           ; Offset_0x010AB2
                bsr     Load_Sonic_Dynamic_PLC  ; Offset_0x010DDC
                jmp     DisplaySprite           ; Offset_0x00D3C2
                
;=============================================================================== 
; Sub Routine Sonic_GameOver
; [ Begin ]                         
;===============================================================================                   
Sonic_GameOver: ; Offset_0x010A1A:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$0100, D0
                cmp.w   $000C(A0), D0
                bcc     Offset_0x010A9C
                move.w  #$FFC8, $0012(A0)
                addq.b  #$02, $0024(A0)
                clr.b   ($FFFFFE1E).w
                addq.b  #$01, ($FFFFFE1C).w
                subq.b  #$01, ($FFFFFE12).w
                bne.s   Offset_0x010A70
                move.w  #$0000, $003A(A0)
                move.b  #$39, ($FFFFB080).w
                move.b  #$39, ($FFFFB0C0).w                 
                move.b  #$01, ($FFFFB0DA).w
                clr.b   ($FFFFFE1A).w
Offset_0x010A5E:                
                move.w  #$009B, D0
                jsr     (Play_Music)            ; Offset_0x0014C0
                moveq   #$03, D0
                jmp     LoadPLC                 ; Offset_0x00173C   
Offset_0x010A70:
                move.w  #$003C, $003A(A0)
                tst.b   ($FFFFFE1A).w
                beq.s   Offset_0x010A9C
                move.w  #$0000, $003A(A0)
                move.b  #$39, ($FFFFB080).w
                move.b  #$39, ($FFFFB0C0).w
                move.b  #$02, ($FFFFB09A).w
                move.b  #$03, ($FFFFB0DA).w
                bra.s   Offset_0x010A5E
Offset_0x010A9C:
                rts
;=============================================================================== 
; Sub Routine Sonic_GameOver
; [ End ]                         
;===============================================================================                 
                
Sonic_ResetLevel: ; Offset_0x010A9E:
                tst.w   $003A(A0)
                beq.s   Offset_0x010AB0
                subq.w  #$01, $003A(A0)
                bne.s   Offset_0x010AB0
                move.w  #$0001, ($FFFFFE02).w
Offset_0x010AB0:
                rts
                
;=============================================================================== 
; Sub Routine Sonic_Animate
; [ Begin ]                         
;===============================================================================                  
Sonic_Animate: ; Offset_0x010AB2:
                lea     (Sonic_AnimateData), A1 ; Offset_0x010CB4
                moveq   #$00, D0
                move.b  $001C(A0), D0
                cmp.b   $001D(A0), D0
                beq.s   Offset_0x010ADA
                move.b  D0, $001D(A0)
                move.b  #$00, $001B(A0)
                move.b  #$00, $001E(A0)
                bclr    #$05, $0022(A0)
Offset_0x010ADA:
                add.w   D0, D0
                adda.w  $00(A1, D0), A1
                move.b  (A1), D0
                bmi.s   Offset_0x010B4A
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                subq.b  #$01, $001E(A0) 
                bpl.s   Offset_0x010B18
                move.b  D0, $001E(A0)             
Offset_0x010B00:                
                moveq   #$00, D1
                move.b  $001B(A0), D1
                move.b  $01(A1, D1), D0
                cmpi.b  #$F0, D0
                bcc.s   Offset_0x010B1A
Offset_0x010B10:                
                move.b  D0, $001A(A0)
                addq.b  #$01, $001B(A0)
Offset_0x010B18:                
                rts
Offset_0x010B1A:
                addq.b  #$01, D0
                bne.s   Offset_0x010B2A
                move.b  #$00, $001B(A0)
                move.b  $0001(A1), D0
                bra.s   Offset_0x010B10
Offset_0x010B2A:
                addq.b  #$01, D0
                bne.s   Offset_0x010B3E
                move.b  $02(A1, D1), D0
                sub.b   D0, $001B(A0)
                sub.b   D0, D1
                move.b  $01(A1, D1), D0
                bra.s   Offset_0x010B10
Offset_0x010B3E:
                addq.b  #$01, D0
                bne.s   Offset_0x010B48
                move.b  $02(A1, D1), $001C(A0)
Offset_0x010B48: 
                rts            
Offset_0x010B4A: 
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x010B18
                addq.b  #$01, D0
                bne     Offset_0x010C3E
                moveq   #$00, D0
                move.b  $0027(A0), D0
                bne     Offset_0x010BD8
                moveq   #$00, D1
                move.b  $0026(A0), D0
                move.b  $0022(A0), D2
                andi.b  #$01, D2
                bne.s   Offset_0x010B72
                not.b  d0
Offset_0x010B72:
                addi.b  #$10, D0
                bpl.s   Offset_0x010B7A
                moveq   #$03, D1
Offset_0x010B7A:
                andi.b  #$FC, $0001(A0)
                eor.b   D1, D2
                or.b    D2, $0001(A0)
                btst    #$05, $0022(A0)
                bne     Offset_0x010C82
                lsr.b   #$04, D0
                andi.b  #$06, D0
                move.w  $0014(A0), D2
                bpl.s   Offset_0x010B9E
                neg.w   D2
Offset_0x010B9E:
                lea     (Sonic_Animate_Run), A1 ; Offset_0x010D00
                cmpi.w  #$0600, D2
                bcc.s   Offset_0x010BB0
                lea     (Sonic_Animate_Walk), A1 ; Offset_0x010CF2
Offset_0x010BB0:
                move.b  D0, D1
                lsr.b   #$01, D1
                add.b   D1, D0
                add.b   D0, D0
                add.b   D0, D0
                move.b  D0, D3
                neg.w   D2
                addi.w  #$0800, D2
                bpl.s   Offset_0x010BC6
                moveq   #$00, D2
Offset_0x010BC6:
                lsr.w   #$08, D2
                lsr.w   #$01, D2
                move.b  D2, $001E(A0)
                bsr     Offset_0x010B00
                add.b   D3, $001A(A0)
                rts    
Offset_0x010BD8:
                move.b  $0027(A0), D0
                moveq   #$00, D1
                move.b  $0022(A0), D2
                andi.b  #$01, D2
                bne.s   Offset_0x010C06
                andi.b  #$FC, $0001(A0)
                addi.b  #$0B, D0
                divu.w  #$0016, D0
                addi.b  #$9B, D0
                move.b  D0, $001A(A0)
                move.b  #$00, $001E(A0)
                rts
Offset_0x010C06:
                andi.b  #$FC, $0001(A0)
                tst.b   $0029(A0)
                beq.s   Offset_0x010C1E
                ori.b   #$01, $0001(A0)
                addi.b  #$0B, D0
                bra.s   Offset_0x010C2A
Offset_0x010C1E:
                ori.b   #$03, $0001(A0)
                neg.b   D0
                addi.b  #$8F, D0
Offset_0x010C2A:
                divu.w  #$0016, D0
                addi.b  #$9B, D0
                move.b  D0, $001A(A0)
                move.b  #$00, $001E(A0)
                rts 
Offset_0x010C3E:
                addq.b  #$01, D0
                bne.s   Offset_0x010C82
                move.w  $0014(A0), D2
                bpl.s   Offset_0x010C4A
                neg.w   D2
Offset_0x010C4A:
                lea     (Sonic_Animate_Roll2), A1 ; Offset_0x010D18
                cmpi.w  #$0600, D2
                bcc.s   Offset_0x010C5C
                lea     (Sonic_Animate_Roll), A1 ; Offset_0x010D0E
Offset_0x010C5C:
                neg.w   D2
                addi.w  #$0400, D2
                bpl.s   Offset_0x010C66
                moveq   #$00, D2
Offset_0x010C66:
                lsr.w   #$08, D2
                move.b  D2, $001E(A0)
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                bra     Offset_0x010B00
Offset_0x010C82:                
                move.w  $0014(A0), D2
                bmi.s   Offset_0x010C8A
                neg.w   D2
Offset_0x010C8A:
                addi.w  #$0800, D2
                bpl.s   Offset_0x010C92
                moveq   #$00, D2
Offset_0x010C92:
                lsr.w   #$06, D2
                move.b  D2, $001E(A0)
                lea     (Sonic_Animate_Push), A1 ; Offset_0x010D22
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                bra     Offset_0x010B00                                 
Sonic_AnimateData: ; Offset_0x010CB4:
                dc.w    Sonic_Animate_Walk-Sonic_AnimateData        ; Offset_0x010CF2
                dc.w    Sonic_Animate_Run-Sonic_AnimateData         ; Offset_0x010D00
                dc.w    Sonic_Animate_Roll-Sonic_AnimateData        ; Offset_0x010D0E
                dc.w    Sonic_Animate_Roll2-Sonic_AnimateData       ; Offset_0x010D18 
                dc.w    Sonic_Animate_Push-Sonic_AnimateData        ; Offset_0x010D22
                dc.w    Sonic_Animate_Wait-Sonic_AnimateData        ; Offset_0x010D30
                dc.w    Sonic_Animate_Balance-Sonic_AnimateData     ; Offset_0x010D59
                dc.w    Sonic_Animate_LookUp-Sonic_AnimateData      ; Offset_0x010D5D
                dc.w    Sonic_Animate_Duck-Sonic_AnimateData        ; Offset_0x010D62
                dc.w    Sonic_Animate_Spindash-Sonic_AnimateData    ; Offset_0x010D67
                dc.w    Sonic_Animate_WallRecoil1-Sonic_AnimateData ; Offset_0x010D74
                dc.w    Sonic_Animate_WallRecoil2-Sonic_AnimateData ; Offset_0x010D77
                dc.w    Sonic_Animate_0x0C-Sonic_AnimateData        ; Offset_0x010D7D
                dc.w    Sonic_Animate_Stop-Sonic_AnimateData        ; Offset_0x010D81
                dc.w    Sonic_Animate_Float1-Sonic_AnimateData      ; Offset_0x010D8C
                dc.w    Sonic_Animate_Float2-Sonic_AnimateData      ; Offset_0x010D90
                dc.w    Sonic_Animate_0x10-Sonic_AnimateData        ; Offset_0x010D97
                dc.w    Sonic_Animate_S1LzHang-Sonic_AnimateData    ; Offset_0x010D9B
                dc.w    Sonic_Animate_Unused_0x12-Sonic_AnimateData ; Offset_0x010D9F
                dc.w    Sonic_Animate_Unused_0x13-Sonic_AnimateData ; Offset_0x010DA5
                dc.w    Sonic_Animate_Unused_0x14-Sonic_AnimateData ; Offset_0x010DAA
                dc.w    Sonic_Animate_Bubble-Sonic_AnimateData      ; Offset_0x010DAD
                dc.w    Sonic_Animate_Death1-Sonic_AnimateData      ; Offset_0x010DB4
                dc.w    Sonic_Animate_Drown-Sonic_AnimateData       ; Offset_0x010DB7
                dc.w    Sonic_Animate_Death2-Sonic_AnimateData      ; Offset_0x010DBA
                dc.w    Sonic_Animate_Unused_0x19-Sonic_AnimateData ; Offset_0x010DBD
                dc.w    Sonic_Animate_Hurt-Sonic_AnimateData        ; Offset_0x010DC6
                dc.w    Sonic_Animate_S1LzSlide-Sonic_AnimateData   ; Offset_0x010DC9
                dc.w    Sonic_Animate_0x1C-Sonic_AnimateData        ; Offset_0x010DCD
                dc.w    Sonic_Animate_Float3-Sonic_AnimateData      ; Offset_0x010DD1
                dc.w    Sonic_Animate_0x1E-Sonic_AnimateData        ; Offset_0x010DD8
Sonic_Animate_Walk: ; Offset_0x010CF2:
                dc.b    $FF, $10, $11, $12, $13, $14, $15, $16, $17, $0C, $0D, $0E, $0F, $FF
Sonic_Animate_Run: ; Offset_0x010D00:
                dc.b    $FF, $3C, $3D, $3E, $3F, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
Sonic_Animate_Roll: ; Offset_0x010D0E:
                dc.b    $FE, $6C, $70, $6D, $70, $6E, $70, $6F, $70, $FF
Sonic_Animate_Roll2: ; Offset_0x010D18:
                dc.b    $FE, $6C, $70, $6D, $70, $6E, $70, $6F, $70, $FF
Sonic_Animate_Push: ; Offset_0x010D22:
                dc.b    $FD, $77, $78, $79, $7A, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
Sonic_Animate_Wait: ; Offset_0x010D30:                
                dc.b    $07, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $02
                dc.b    $03, $03, $03, $04, $04, $05, $05, $FE, $04
Sonic_Animate_Balance: ; Offset_0x010D59:                 
                dc.b    $07, $89, $8A, $FF
Sonic_Animate_LookUp: ; Offset_0x010D5D:                
                dc.b    $05, $06, $07, $FE, $01
Sonic_Animate_Duck: ; Offset_0x010D62:                  
                dc.b    $05, $7F, $80, $FE, $01
Sonic_Animate_Spindash: ; Offset_0x010D67:                
                dc.b    $00, $71, $72, $71, $73, $71, $74, $71, $75, $71, $76, $71, $FF 
Sonic_Animate_WallRecoil1: ; Offset_0x010D74:                
                dc.b    $3F, $82, $FF
Sonic_Animate_WallRecoil2: ; Offset_0x010D77:
                dc.b    $07, $08, $08, $09, $FD, $05
Sonic_Animate_0x0C: ; Offset_0x010D7D:                
                dc.b    $07, $09, $FD, $05
Sonic_Animate_Stop: ; Offset_0x010D81:                 
                dc.b    $03, $81, $82, $83, $84, $85, $86, $87, $88, $FE, $02
Sonic_Animate_Float1: ; Offset_0x010D8C:                 
                dc.b    $07, $94, $96, $FF
Sonic_Animate_Float2: ; Offset_0x010D90:                
                dc.b    $07, $91, $92, $93, $94, $95, $FF
Sonic_Animate_0x10: ; Offset_0x010D97:                
                dc.b    $2F, $7E, $FD, $00
Sonic_Animate_S1LzHang: ; Offset_0x010D9B:                
                dc.b    $05, $8F, $90, $FF
Sonic_Animate_Unused_0x12: ; Offset_0x010D9F:                
                dc.b    $0F, $43, $43, $43, $FE, $01
Sonic_Animate_Unused_0x13: ; Offset_0x010DA5:                
                dc.b    $0F, $43, $44, $FE, $01
Sonic_Animate_Unused_0x14: ; Offset_0x010DAA:                
                dc.b    $3F, $49, $FF
Sonic_Animate_Bubble: ; Offset_0x010DAD:                 
                dc.b    $0B, $97, $97, $12, $13, $FD, $00
Sonic_Animate_Death1: ; Offset_0x010DB4:                 
                dc.b    $20, $9A, $FF
Sonic_Animate_Drown: ; Offset_0x010DB7:                
                dc.b    $20, $99, $FF
Sonic_Animate_Death2: ; Offset_0x010DBA:                 
                dc.b    $20, $98, $FF
Sonic_Animate_Unused_0x19: ; Offset_0x010DBD: 
                dc.b    $03, $4E, $4F, $50, $51, $52, $00, $FE, $01
Sonic_Animate_Hurt: ; Offset_0x010DC6:                
                dc.b    $40, $8D, $FF
Sonic_Animate_S1LzSlide: ; Offset_0x010DC9:                  
                dc.b    $09, $8D, $8E, $FF
Sonic_Animate_0x1C: ; Offset_0x010DCD:                
                dc.b    $77, $00, $FD, $00
Sonic_Animate_Float3: ; Offset_0x010DD1:                
                dc.b    $03, $91, $92, $93, $94, $95, $FF
Sonic_Animate_0x1E: ; Offset_0x010DD8:                
                dc.b    $03, $3C, $FD, $00
;=============================================================================== 
; Sub Routine Sonic_Animate
; [ End ]                         
;===============================================================================
                   
;=============================================================================== 
; Sub Routine Load_Sonic_Dynamic_PLC
; [ Begin ]                         
;===============================================================================                  
Load_Sonic_Dynamic_PLC: ; Offset_0x010DDC:
                moveq   #$00, D0
                move.b  $001A(A0), D0
                cmp.b   ($FFFFF766).w, D0
                beq.s   Offset_0x010E2E
                move.b  D0, ($FFFFF766).w
                lea     (Sonic_Dyn_Script), A2  ; Offset_0x06DA4C
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D5
                subq.w  #$01, D5
                bmi.s   Offset_0x010E2E
                move.w  #$F000, D4
Offset_0x010E02:
                moveq   #$00, D1
                move.w  (A2)+, D1
                move.w  D1, D3
                lsr.w   #$08, D3
                andi.w  #$00F0, D3
                addi.w  #$0010, D3
                andi.w  #$0FFF, D1
                lsl.l   #$05, D1
                addi.l  #Sonic_Sprites, D1      ; Offset_0x050000
                move.w  D4, D2
                add.w   D3, D4
                add.w   D3, D4
                jsr     DMA_68KtoVRAM           ; Offset_0x00156C
                dbra    D5, Offset_0x010E02
Offset_0x010E2E:                
                rts
J_KillSonic_00: ; Offset_0x010E30:
                jmp     KillSonic               ; Offset_0x021422  
;=============================================================================== 
; Sub Routine Load_Sonic_Dynamic_PLC
; [ End ]                         
;===============================================================================                                  
;=============================================================================== 
; Object 0x01 - Sonic
; [ End ]
;===============================================================================                
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x02 - Tails
; [ Begin ]
;===============================================================================  
Obj_0x02_Tails: ; Offset_0x010E38:                 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Tails_Index(PC, D0), D1      ; Offset_0x010E46
                jmp     Tails_Index(PC, D1)          ; Offset_0x010E46
Tails_Index: ; Offset_0x010E46:
                dc.w    Tails_Main-Tails_Index       ; Offset_0x010E50
                dc.w    Tails_Control-Tails_Index    ; Offset_0x010EB4
                dc.w    Tails_Hurt-Tails_Index       ; Offset_0x011AC4
                dc.w    Tails_Death-Tails_Index      ; Offset_0x011B32
                dc.w    Tails_ResetLevel-Tails_Index ; Offset_0x011B8E
Tails_Main: ; Offset_0x010E50:
                addq.b  #$02, $0024(A0)
                move.b  #$0F, $0016(A0)
                move.b  #$09, $0017(A0)
                move.l  #Tails_Mappings, $0004(A0) ; Offset_0x06FB3C
                move.w  #$07A0, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$02, $0018(A0)
                move.b  #$18, $0019(A0)
                move.b  #$84, $0001(A0)
                move.w  #$0600, ($FFFFF760).w
                move.w  #$000C, ($FFFFF762).w
                move.w  #$0080, ($FFFFF764).w
                move.b  #$0C, $003E(A0)
                move.b  #$0D, $003F(A0)
                move.b  #$00, $002C(A0)
                move.b  #$04, $002D(A0)
                move.b  #$05, ($FFFFB1C0).w
Tails_Control: ; Offset_0x010EB4:
                bsr     Tails_Control2          ; Offset_0x010F96
                btst    #$00, $002A(A0)
                bne.s   Tails_ControlsLock      ; Offset_0x010ED2
                moveq   #$00, D0
                move.b  $0022(A0), D0
                andi.w  #$0006, D0
                move.w  Tails_Modes(PC, D0), D1 ; Offset_0x010EFA
                jsr     Tails_Modes(PC, D1)     ; Offset_0x010EFA
Tails_ControlsLock: ; Offset_0x010ED2:
                bsr.s   Tails_Display           ; Offset_0x010F12
                bsr     Tails_RecordMoves       ; Offset_0x011056
                move.b  ($FFFFF768).w, $0036(A0)
                move.b  ($FFFFF76A).w, $0037(A0)
                bsr     Tails_Animate           ; Offset_0x011BA2
                tst.b   $002A(A0)
                bmi.s   Offset_0x010EF4
                jsr     TouchResponse           ; Offset_0x021160
Offset_0x010EF4:
                bsr     Load_Tails_Dynamic_PLC  ; Offset_0x011F42
                rts
Tails_Modes: ; Offset_0x010EFA:
                dc.w    Tails_MdNormal-Tails_Modes  ; Offset_0x011070
                dc.w    Tails_MdJump-Tails_Modes    ; Offset_0x011098
                dc.w    Tails_MdRoll-Tails_Modes    ; Offset_0x0110C2
                dc.w    Tails_MdJump2-Tails_Modes   ; Offset_0x0110E2
Tails_PlayList: ; Offset_0x010F02:
                dc.b    $82, $82, $83, $90, $83, $83, $93, $96, $86, $8F, $81, $85, $84, $8D, $8D, $87 

;=============================================================================== 
; Sub Routine Tails_Display
; [ Begin ]                         
;===============================================================================                                  
Tails_Display: ; Offset_0x010F12:
                move.w  $0030(A0), D0
                beq.s   Offset_0x010F20
                subq.w  #$01, $0030(A0)
                lsr.w   #$03, D0
                bcc.s   Offset_0x010F26
Offset_0x010F20:
                jsr     DisplaySprite           ; Offset_0x00D3C2
Offset_0x010F26:
                tst.b   ($FFFFFE2D).w
                beq.s   Offset_0x010F60
                tst.w   $0032(A0)
                beq.s   Offset_0x010F60
                subq.w  #$01, $0032(A0)
                bne.s   Offset_0x010F60
                tst.b   ($FFFFF7AA).w
                bne.s   Offset_0x010F5A
                cmpi.w  #$000C, ($FFFFFE14).w
                bcs.s   Offset_0x010F5A
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                lea     Tails_PlayList(PC), A1  ; Offset_0x010F02
                move.b  $00(A1, D0), D0
                jsr     (Play_Music)            ; Offset_0x0014C0
Offset_0x010F5A:
                move.b  #$00, ($FFFFFE2D).w
Offset_0x010F60:
                tst.b   ($FFFFFE2E).w
                beq.s   Offset_0x010F94
                tst.w   $0034(A0)
                beq.s   Offset_0x010F94
                subq.w  #$01, $0034(A0)
                bne.s   Offset_0x010F94
                move.w  #$0600, ($FFFFF760).w
                move.w  #$000C, ($FFFFF762).w
                move.w  #$0080, ($FFFFF764).w
                move.b  #$00, ($FFFFFE2E).w
                move.w  #$00FC, D0
                jmp     (Play_Music)            ; Offset_0x0014C0
Offset_0x010F94:
                rts  
;=============================================================================== 
; Sub Routine Tails_Display
; [ End ]                         
;===============================================================================   

;=============================================================================== 
; Sub Routine Tails_Control2
; [ Begin ]                         
;===============================================================================     
Tails_Control2: ; Offset_0x010F96:
                move.b  ($FFFFF606).w, D0
                andi.b  #$7F, D0
                beq.s   Tails_ControlNoKeysPressed    ; Offset_0x010FAE
                move.w  #$0000, ($FFFFF700).w
                move.w  #$012C, ($FFFFF702).w
                rts
Tails_ControlNoKeysPressed: ; Offset_0x010FAE:
                tst.w   ($FFFFF702).w
                beq.s   Tails_DoControl        ; Offset_0x010FBA
                subq.w  #$01, ($FFFFF702).w
                rts
Tails_DoControl: ; Offset_0x010FBA:
                move.w  ($FFFFF708).w, D0
                move.w  Tails_ControlIndex(PC, D0), D0 ; Offset_0x010FC6
                jmp     Tails_ControlIndex(PC, D0)     ; Offset_0x010FC6
Tails_ControlIndex: ; Offset_0x010FC6:
                dc.w    Tails_Control_00-Tails_ControlIndex  ; Offset_0x010FCE
                dc.w    Tails_Control_01-Tails_ControlIndex  ; Offset_0x010FD6
                dc.w    Tails_Control_02-Tails_ControlIndex  ; Offset_0x010FEA
                dc.w    Tails_ControlCopySonicMoves-Tails_ControlIndex ; Offset_0x011024
Tails_Control_00: ; Offset_0x010FCE:
                move.w  #$0006, ($FFFFF708).w
                rts
Tails_Control_01: ; Offset_0x010FD6:
                move.w  #$0006, ($FFFFF708).w
                rts
                move.w  #$0040, ($FFFFF706).w
                move.w  #$0004, ($FFFFF708).w
Tails_Control_02: ; Offset_0x010FEA:
                move.w  #$0006, ($FFFFF708).w
                rts
                move.w  ($FFFFF706).w, D1
                subq.w  #$01, D1
                cmpi.w  #$0010, D1
                bne.s   Offset_0x011004
                move.w  #$0006, ($FFFFF708).w
Offset_0x011004:
                move.w  D1, ($FFFFF706).w
                lea     ($FFFFE600).w, A1
                lsl.b   #$02, D1
                addq.b  #$04, D1
                move.w  ($FFFFEEE0).w, D0
                sub.b   D1, D0
                move.w  $00(A1, D0), $0008(A0)
                move.w  $02(A1, D0), $000C(A0)
                rts
Tails_ControlCopySonicMoves: ; Offset_0x011024:
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                bpl.s   Offset_0x011030
                neg.w   D0
Offset_0x011030:
                cmpi.w  #$00C0, D0
                bcs.s   Offset_0x011038
                nop
Offset_0x011038:
                lea     ($FFFFE500).w, A1
                move.w  #$0010, D1
                lsl.b   #$02, D1
                addq.b  #$04, D1
                move.w  ($FFFFEED2).w, D0
                sub.b   D1, D0
                lea     ($FFFFE400).w, A1
                move.w  $00(A1, D0), ($FFFFF606).w
                rts
                
;=============================================================================== 
; Sub Routine Tails_RecordMoves
; [ Begin ]                         
;===============================================================================    
Tails_RecordMoves: ; Offset_0x011056:
                move.w  ($FFFFEED6).w, D0
                lea     ($FFFFE700).w, A1
                lea     $00(A1, D0), A1
                move.w  $0008(A0), (A1)+
                move.w  $000C(A0), (A1)+
                addq.b  #$04, ($FFFFEED7).w
                rts
;=============================================================================== 
; Sub Routine Tails_RecordMoves
; [ End ]                         
;===============================================================================   
               
Tails_MdNormal: ; Offset_0x011070:
                bsr     Tails_Spindash          ; Offset_0x0116D2
                bsr     Tails_Jump              ; Offset_0x0115E8
                bsr     Tails_SlopeResist       ; Offset_0x01175E
                bsr     Tails_Move              ; Offset_0x01110C
                bsr     Tails_Roll              ; Offset_0x011582
                bsr     Tails_LevelBoundaries   ; Offset_0x0114FE
                jsr     SpeedToPos              ; Offset_0x00D27A
                bsr     Sonic_AnglePos          ; Offset_0x012D28
                bsr     Tails_SlopeRepel        ; Offset_0x0117D0
                rts
Tails_MdJump: ; Offset_0x011098:
                bsr     Tails_JumpHeight        ; Offset_0x011696
                bsr     Tails_ChgJumpDir        ; Offset_0x011484
                bsr     Tails_LevelBoundaries   ; Offset_0x0114FE
                jsr     ObjectFall              ; Offset_0x00D24E
                btst    #$06, $0022(A0)
                beq.s   Offset_0x0110B8
                subi.w  #$0028, $0012(A0)
Offset_0x0110B8:
                bsr     Tails_JumpAngle         ; Offset_0x011812
                bsr     Tails_Floor             ; Offset_0x011872
                rts
Tails_MdRoll: ; Offset_0x0110C2:
                bsr     Tails_Jump              ; Offset_0x0115E8
                bsr     Tails_RollRepel         ; Offset_0x011794
                bsr     Tails_RollSpeed         ; Offset_0x01138C
                bsr     Tails_LevelBoundaries   ; Offset_0x0114FE
                jsr     SpeedToPos              ; Offset_0x00D27A
                bsr     Sonic_AnglePos          ; Offset_0x012D28
                bsr     Tails_SlopeRepel        ; Offset_0x0117D0
                rts
Tails_MdJump2: ; Offset_0x0110E2:
                bsr     Tails_JumpHeight        ; Offset_0x011696
                bsr     Tails_ChgJumpDir        ; Offset_0x011484
                bsr     Tails_LevelBoundaries   ; Offset_0x0114FE
                jsr     ObjectFall              ; Offset_0x00D24E
                btst    #$06, $0022(A0)
                beq.s   Offset_0x011102
                subi.w  #$0028, $0012(A0)
Offset_0x011102:
                bsr     Tails_JumpAngle         ; Offset_0x011812
                bsr     Tails_Floor             ; Offset_0x011872
                rts
                
;=============================================================================== 
; Sub Routine Tails_Move
; [ Begin ]                         
;===============================================================================                  
Tails_Move: ; Offset_0x01110C:
                move.w  ($FFFFF760).w, D6
                move.w  ($FFFFF762).w, D5
                move.w  ($FFFFF764).w, D4
                tst.b   ($FFFFF7CA).w
                bne     Offset_0x01121E
                tst.w   $002E(A0)
                bne     Offset_0x0111F2
                btst    #$02, ($FFFFF606).w
                beq.s   Offset_0x011134
                bsr     Tails_MoveLeft          ; Offset_0x0112AE
Offset_0x011134:
                btst    #$03, ($FFFFF606).w
                beq.s   Offset_0x011140
                bsr     Tails_MoveRight         ; Offset_0x011320
Offset_0x011140:
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne     Offset_0x0111F2
                tst.w   $0014(A0)
                bne     Offset_0x0111F2
                bclr    #$05, $0022(A0)
                move.b  #$05, $001C(A0)
                btst    #$03, $0022(A0)
                beq.s   Tails_Balance           ; Offset_0x0111A2
                moveq   #$00, D0
                move.b  $003D(A0), D0
                lsl.w   #$06, D0
                lea     ($FFFFB000).w, A1
                lea     $00(A1, D0), A1
                tst.b   $0022(A1)
                bmi.s   Tails_LookUp            ; Offset_0x0111D4
                moveq   #$00, D1
                move.b  $0019(A1), D1
                move.w  D1, D2
                add.w   D2, D2
                subq.w  #$04, D2
                add.w   $0008(A0), D1
                sub.w   $0008(A1), D1
                cmpi.w  #$0004, D1
                blt.s   Offset_0x0111C6
                cmp.w   D2, D1
                bge.s   Offset_0x0111B6
                bra.s   Tails_LookUp            ; Offset_0x0111D4 
;=============================================================================== 
Tails_Balance: ; Offset_0x0111A2:
                jsr     ObjHitFloor             ; Offset_0x013898
                cmpi.w  #$000C, D1
                blt.s   Tails_LookUp            ; Offset_0x0111D4
                cmpi.b  #$03, $0036(A0)
                bne.s   Offset_0x0111BE
Offset_0x0111B6:
                bclr    #$00, $0022(A0)
                bra.s   Offset_0x0111CC
Offset_0x0111BE:
                cmpi.b  #$03, $0037(A0)
                bne.s   Tails_LookUp            ; Offset_0x0111D4
Offset_0x0111C6:
                bset    #$00, $0022(A0)
Offset_0x0111CC:
                move.b  #$06, $001C(A0)
                bra.s   Offset_0x0111F2
;===============================================================================               
Tails_LookUp: ; Offset_0x0111D4:
                btst    #$00, ($FFFFF606).w
                beq.s   Offset_0x0111E4
                move.b  #$07, $001C(A0)
                bra.s   Offset_0x0111F2
Offset_0x0111E4:
                btst    #$01, ($FFFFF606).w
                beq.s   Offset_0x0111F2
                move.b  #$08, $001C(A0)
Offset_0x0111F2:
                move.b  ($FFFFF606).w, D0
                andi.b  #$0C, D0
                bne.s   Offset_0x01121E
                move.w  $0014(A0), D0
                beq.s   Offset_0x01121E
                bmi.s   Offset_0x011212
                sub.w   D5, D0
                bcc.s   Offset_0x01120C
                move.w  #$0000, D0
Offset_0x01120C:
                move.w  D0, $0014(A0)
                bra.s   Offset_0x01121E
Offset_0x011212:
                add.w   D5, D0
                bcc.s   Offset_0x01121A
                move.w  #$0000, D0
Offset_0x01121A:
                move.w  D0, $0014(A0)
Offset_0x01121E:
                move.b  $0026(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  $0014(A0), D1
                asr.l   #$08, D1
                move.w  D1, $0010(A0)
                muls.w  $0014(A0), D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
Offset_0x01123C:                
                move.b  $0026(A0), D0
                addi.b  #$40, D0
                bmi.s   Offset_0x0112AC
                move.b  #$40, D1
                tst.w   $0014(A0)
                beq.s   Offset_0x0112AC
                bmi.s   Offset_0x011254
                neg.w   D1
Offset_0x011254:
                move.b  $0026(A0), D0
                add.b   D1, D0
                move.w  D0, -(A7)
                bsr     Sonic_WalkSpeed         ; Offset_0x01366C
                move.w  (A7)+, D0
                tst.w   D1
                bpl.s   Offset_0x0112AC
                asl.w   #$08, D1
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   Offset_0x0112A8
                cmpi.b  #$40, D0
                beq.s   Offset_0x011296
                cmpi.b  #$80, D0
                beq.s   Offset_0x011290
                add.w   D1, $0010(A0)
                bset    #$05, $0022(A0)
                move.w  #$0000, $0014(A0)
                rts
Offset_0x011290:
                sub.w   D1, $0012(A0)
                rts
Offset_0x011296:
                sub.w   D1, $0010(A0)
                bset    #$05, $0022(A0)
                move.w  #$0000, $0014(A0)
                rts
Offset_0x0112A8:
                add.w   D1, $0012(A0)
Offset_0x0112AC:
                rts
;=============================================================================== 
; Sub Routine Tails_Move
; [ End ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine Tails_MoveLeft
; [ Begin ]                         
;===============================================================================                   
Tails_MoveLeft: ; Offset_0x0112AE:
                move.w  $0014(A0), D0
                beq.s   Offset_0x0112B6
                bpl.s   Offset_0x0112E8
Offset_0x0112B6:
                bset    #$00, $0022(A0)
                bne.s   Offset_0x0112CA
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
Offset_0x0112CA:
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   Offset_0x0112DC
                add.w   D5, D0
                cmp.w   D1, D0
                ble.s   Offset_0x0112DC
                move.w  D1, D0
Offset_0x0112DC:
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                rts
Offset_0x0112E8:
                sub.w   D4, D0
                bcc.s   Offset_0x0112F0
                move.w  #$FF80, D0
Offset_0x0112F0:
                move.w  D0, $0014(A0)
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   Offset_0x01131E
                cmpi.w  #$0400, D0
                blt.s   Offset_0x01131E
                move.b  #$0D, $001C(A0)
                bclr    #$00, $0022(A0)
                move.w  #$00A4, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x01131E:
                rts
;=============================================================================== 
; Sub Routine Tails_MoveLeft
; [ End ]                         
;===============================================================================   
              
;=============================================================================== 
; Sub Routine Tails_MoveRight
; [ Begin ]                         
;===============================================================================                 
Tails_MoveRight: ; Offset_0x011320:
                move.w  $0014(A0), D0
                bmi.s   Offset_0x011354
                bclr    #$00, $0022(A0)
                beq.s   Offset_0x01133A
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
Offset_0x01133A:
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   Offset_0x011348
                sub.w   D5, D0
                cmp.w   D6, D0
                bge.s   Offset_0x011348
                move.w  D6, D0
Offset_0x011348:
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                rts
Offset_0x011354:
                add.w   D4, D0
                bcc.s   Offset_0x01135C
                move.w  #$0080, D0
Offset_0x01135C:
                move.w  D0, $0014(A0)
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   Offset_0x01138A
                cmpi.w  #$FC00, D0
                bgt.s   Offset_0x01138A
                move.b  #$0D, $001C(A0)
                bset    #$00, $0022(A0)
                move.w  #$00A4, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x01138A:
                rts
;=============================================================================== 
; Sub Routine Tails_MoveRight
; [ End ]                         
;===============================================================================  
                 
;=============================================================================== 
; Sub Routine Tails_RollSpeed
; [ Begin ]                         
;===============================================================================                 
Tails_RollSpeed: ; Offset_0x01138C:
                move.w  ($FFFFF760).w, D6
                asl.w   #$01, D6
                move.w  ($FFFFF762).w, D5
                asr.w   #$01, D5
                move.w  ($FFFFF764).w, D4
                asr.w   #$02, D4
                tst.b   ($FFFFF7CA).w
                bne     Offset_0x011408
                tst.w   $002E(A0)
                bne.s   Offset_0x0113C4
                btst    #$02, ($FFFFF606).w
                beq.s   Offset_0x0113B8
                bsr     Tails_RollLeft          ; Offset_0x01143E
Offset_0x0113B8:
                btst    #$03, ($FFFFF606).w
                beq.s   Offset_0x0113C4
                bsr     Tails_RollRight         ; Offset_0x011462
Offset_0x0113C4:
                move.w  $0014(A0), D0
                beq.s   Offset_0x0113E6
                bmi.s   Offset_0x0113DA
                sub.w   D5, D0
                bcc.s   Offset_0x0113D4
                move.w  #$0000, D0
Offset_0x0113D4:
                move.w  D0, $0014(A0)
                bra.s   Offset_0x0113E6
Offset_0x0113DA:
                add.w   D5, D0
                bcc.s   Offset_0x0113E2
                move.w  #$0000, D0
Offset_0x0113E2:
                move.w  D0, $0014(A0)
Offset_0x0113E6:
                tst.w   $0014(A0)
                bne.s   Offset_0x011408
                bclr    #$02, $0022(A0)
                move.b  #$0F, $0016(A0)
                move.b  #$09, $0017(A0)
                move.b  #$05, $001C(A0)
                subq.w  #$05, $000C(A0)
Offset_0x011408:
                move.b  $0026(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  $0014(A0), D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
                muls.w  $0014(A0), D1
                asr.l   #$08, D1
                cmpi.w  #$1000, D1
                ble.s   Offset_0x01142C
                move.w  #$1000, D1
Offset_0x01142C:
                cmpi.w  #$F000, D1
                bge.s   Offset_0x011436
                move.w  #$F000, D1
Offset_0x011436:
                move.w  D1, $0010(A0)
                bra     Offset_0x01123C
;=============================================================================== 
; Sub Routine Tails_RollSpeed
; [ End ]                         
;===============================================================================
  
;=============================================================================== 
; Sub Routine Tails_RollLeft
; [ Begin ]                         
;===============================================================================                   
Tails_RollLeft: ; Offset_0x01143E:
                move.w  $0014(A0), D0
                beq.s   Offset_0x011446
                bpl.s   Offset_0x011454
Offset_0x011446:
                bset    #$00, $0022(A0)
                move.b  #$02, $001C(A0)
                rts
Offset_0x011454:
                sub.w   D4, D0
                bcc.s   Offset_0x01145C
                move.w  #$FF80, D0
Offset_0x01145C:
                move.w  D0, $0014(A0)
                rts
;=============================================================================== 
; Sub Routine Tails_RollLeft
; [ End ]                         
;===============================================================================
   
;=============================================================================== 
; Sub Routine Tails_RollRight
; [ Begin ]                         
;===============================================================================                   
Tails_RollRight: ; Offset_0x011462:
                move.w  $0014(A0), D0
                bmi.s   Offset_0x011476
                bclr    #$00, $0022(A0)
                move.b  #$02, $001C(A0)
                rts
Offset_0x011476:
                add.w   D4, D0
                bcc.s   Offset_0x01147E
                move.w  #$0080, D0
Offset_0x01147E:
                move.w  D0, $0014(A0)
                rts
;=============================================================================== 
; Sub Routine Tails_RollRight
; [ End ]                         
;===============================================================================  
                  
;=============================================================================== 
; Sub Routine Tails_ChgJumpDir
; [ Begin ]                         
;===============================================================================                  
Tails_ChgJumpDir: ; Offset_0x011484:
                move.w  ($FFFFF760).w, D6
                move.w  ($FFFFF762).w, D5
                asl.w   #$01, D5
                btst    #$04, $0022(A0)
                bne.s   Offset_0x0114CE
                move.w  $0010(A0), D0
                btst    #$02, ($FFFFF606).w
                beq.s   Offset_0x0114B4
                bset    #$00, $0022(A0)
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   Offset_0x0114B4
                move.w  D1, D0
Offset_0x0114B4:
                btst    #$03, ($FFFFF606).w
                beq.s   Offset_0x0114CA
                bclr    #$00, $0022(A0)
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   Offset_0x0114CA
                move.w  D6, D0
Offset_0x0114CA:
                move.w  D0, $0010(A0)
Offset_0x0114CE:
                cmpi.w  #$FC00, $0012(A0)
                bcs.s   Offset_0x0114FC
                move.w  $0010(A0), D0
                move.w  D0, D1
                asr.w   #$05, D1
                beq.s   Offset_0x0114FC
                bmi.s   Offset_0x0114F0
                sub.w   D1, D0
                bcc.s   Offset_0x0114EA
                move.w  #$0000, D0
Offset_0x0114EA:
                move.w  D0, $0010(A0)
                rts
Offset_0x0114F0:
                sub.w   D1, D0
                bcs.s   Offset_0x0114F8
                move.w  #$0000, D0
Offset_0x0114F8:
                move.w  D0, $0010(A0)
Offset_0x0114FC:
                rts 
;=============================================================================== 
; Sub Routine Tails_ChgJumpDir
; [ End ]                         
;===============================================================================
                    
;=============================================================================== 
; Sub Routine Tails_LevelBoundaries
; [ Begin ]                         
;=============================================================================== 
Tails_LevelBoundaries: ; Offset_0x0114FE:
                move.l  $0008(A0), D1
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D1
                swap.w  D1
                move.w  ($FFFFEEC8).w, D0
                addi.w  #$0010, D0
                cmp.w   D1, D0
                bhi.s   Offset_0x01156A
                move.w  ($FFFFEECA).w, D0
                addi.w  #$0128, D0
                tst.b   ($FFFFF7AA).w
                bne.s   Offset_0x01152C
                addi.w  #$0040, D0
Offset_0x01152C:
                cmp.w   D1, D0
                bls.s   Offset_0x01156A
Offset_0x011530:                
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                blt.s   Offset_0x011540
                rts
Offset_0x011540:
                bra     KillTails               ; Offset_0x012074
                cmpi.w  #$0501, ($FFFFFE10).w
                bne     KillTails               ; Offset_0x012074
                cmpi.w  #$2000, $0008(A0)
                bcs     KillTails               ; Offset_0x012074
                clr.b   ($FFFFFE30).w
                move.w  #$0001, ($FFFFFE02).w
                move.w  #$0103, ($FFFFFE10).w
                rts
Offset_0x01156A:
                move.w  D0, $0008(A0)
                move.w  #$0000, $000A(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0014(A0)
                bra.s   Offset_0x011530
;=============================================================================== 
; Sub Routine Tails_LevelBoundaries
; [ End ]                         
;===============================================================================  
               
;=============================================================================== 
; Sub Routine Tails_Roll
; [ Begin ]                         
;===============================================================================                   
Tails_Roll: ; Offset_0x011582:
                tst.b   ($FFFFF7CA).w
                bne.s   Offset_0x0115A8
                move.w  $0014(A0), D0
                bpl.s   Offset_0x011590
                neg.w   D0
Offset_0x011590:
                cmpi.w  #$0080, D0
                bcs.s   Offset_0x0115A8
                move.b  ($FFFFF606).w, D0
                andi.b  #$0C, D0
                bne.s   Offset_0x0115A8
                btst    #$01, ($FFFFF606).w
                bne.s   Offset_0x0115AA
Offset_0x0115A8:
                rts
Offset_0x0115AA:
                btst    #$02, $0022(A0)
                beq.s   Offset_0x0115B4
                rts
Offset_0x0115B4:
                bset    #$02, $0022(A0)
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                addq.w  #$05, $000C(A0)
                move.w  #$00BE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                tst.w   $0014(A0)
                bne.s   Offset_0x0115E6
                move.w  #$0200, $0014(A0)
Offset_0x0115E6:
                rts
;=============================================================================== 
; Sub Routine Tails_Roll
; [ End ]                         
;=============================================================================== 
                 
;=============================================================================== 
; Sub Routine Tails_Jump
; [ Begin ]                         
;===============================================================================                  
Tails_Jump: ; Offset_0x0115E8:
                move.b  ($FFFFF607).w, D0
                andi.b  #$70, D0
                beq     Offset_0x01168C
                moveq   #$00, D0
                move.b  $0026(A0), D0
                addi.b  #$80, D0
                bsr     Offset_0x0136F2
                cmpi.w  #$0006, D1
                blt     Offset_0x01168C
                move.w  #$0680, D2
                btst    #$06, $0022(A0)
                beq.s   Offset_0x01161A
                move.w  #$0380, D2
Offset_0x01161A:
                moveq   #$00, D0
                move.b  $0026(A0), D0
                subi.b  #$40, D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  D2, D1
                asr.l   #$08, D1
                add.w   D1, $0010(A0)
                muls.w  D2, D0
                asr.l   #$08, D0
                add.w   D0, $0012(A0)
                bset    #$01, $0022(A0)
                bclr    #$05, $0022(A0)
                addq.l  #$04, A7
                move.b  #$01, $003C(A0)
                clr.b   $0038(A0)
                move.w  #$00A0, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                move.b  #$0F, $0016(A0)
                move.b  #$09, $0017(A0)
                btst    #$02, $0022(A0)
                bne.s   Offset_0x01168E
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                bset    #$02, $0022(A0)
                addq.w  #$05, $000C(A0)
Offset_0x01168C:
                rts
Offset_0x01168E:
                bset    #$04, $0022(A0)
                rts
;=============================================================================== 
; Sub Routine Tails_Jump
; [ End ]                         
;===============================================================================     
              
;=============================================================================== 
; Sub Routine Tails_JumpHeight
; [ Begin ]                         
;===============================================================================                   
Tails_JumpHeight: ; Offset_0x011696:
                tst.b   $003C(A0)
                beq.s   Offset_0x0116C2
                move.w  #$FC00, D1
                btst    #$06, $0022(A0)
                beq.s   Offset_0x0116AC
                move.w  #$FE00, D1
Offset_0x0116AC:
                cmp.w   $0012(A0), D1
                ble.s   Offset_0x0116C0
                move.b  ($FFFFF606).w, D0
                andi.b  #$70, D0
                bne.s   Offset_0x0116C0
                move.w  D1, $0012(A0)
Offset_0x0116C0:
                rts
Offset_0x0116C2:
                cmpi.w  #$F040, $0012(A0)
                bge.s   Offset_0x0116D0
                move.w  #$F040, $0012(A0)
Offset_0x0116D0:
                rts
;=============================================================================== 
; Sub Routine Tails_JumpHeight
; [ End ]                         
;=============================================================================== 
                 
;=============================================================================== 
; Sub Routine Tails_Spindash
; [ Begin ]                         
;===============================================================================                  
Tails_Spindash: ; Offset_0x0116D2:
                tst.b   $0039(A0)
                bne.s   Offset_0x011706
                cmpi.b  #$08, $001C(A0)
                bne.s   Offset_0x011704
                move.b  ($FFFFF607).w, D0
                andi.b  #$70, D0
                beq     Offset_0x011704
                move.b  #$09, $001C(A0)
                move.w  #$00BE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                addq.l  #$04, A7
                move.b  #$01, $0039(A0)
Offset_0x011704:
                rts
Offset_0x011706:
                move.b  ($FFFFF606).w, D0
                btst    #$01, D0
                bne.s   Offset_0x01174C
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.b  #$02, $001C(A0)
                addq.w  #$05, $000C(A0)
                move.b  #$00, $0039(A0)
                move.w  #$2000, ($FFFFEED4).w
                move.w  #$0800, $0014(A0)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x011744
                neg.w   $0014(A0)
Offset_0x011744:
                bset    #$02, $0022(A0)
                rts
Offset_0x01174C:
                move.b  ($FFFFF607).w, D0
                andi.b  #$70, D0
                beq     Offset_0x01175A
                nop
Offset_0x01175A:
                addq.l  #$04, A7
                rts   
;=============================================================================== 
; Sub Routine Tails_Spindash
; [ End ]                         
;===============================================================================   
 
;=============================================================================== 
; Sub Routine Tails_SlopeResist
; [ Begin ]                         
;===============================================================================                   
Tails_SlopeResist: ; Offset_0x01175E:
                move.b  $0026(A0), D0
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   Offset_0x011792
                move.b  $0026(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  #$0020, D0
                asr.l   #$08, D0
                tst.w   $0014(A0)
                beq.s   Offset_0x011792
                bmi.s   Offset_0x01178E
                tst.w   D0
                beq.s   Offset_0x01178C
                add.w   D0, $0014(A0)
Offset_0x01178C:
                rts
Offset_0x01178E:
                add.w   D0, $0014(A0)
Offset_0x011792:
                rts
;=============================================================================== 
; Sub Routine Tails_SlopeResist
; [ End ]                         
;===============================================================================     
             
;=============================================================================== 
; Sub Routine Tails_RollRepel
; [ Begin ]                         
;===============================================================================                   
Tails_RollRepel: ; Offset_0x011794:
                move.b  $0026(A0), D0
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   Offset_0x0117CE
                move.b  $0026(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  #$0050, D0
                asr.l   #$08, D0
                tst.w   $0014(A0)
                bmi.s   Offset_0x0117C4
                tst.w   D0
                bpl.s   Offset_0x0117BE
                asr.l   #$02, D0
Offset_0x0117BE:
                add.w   D0, $0014(A0)
                rts
Offset_0x0117C4:
                tst.w   D0
                bmi.s   Offset_0x0117CA
                asr.l   #$02, D0
Offset_0x0117CA:
                add.w   D0, $0014(A0)
Offset_0x0117CE:
                rts
;=============================================================================== 
; Sub Routine Tails_RollRepel
; [ End ]                         
;===============================================================================   
                
;=============================================================================== 
; Sub Routine Tails_SlopeRepel
; [ Begin ]                         
;===============================================================================                  
Tails_SlopeRepel: ; Offset_0x0117D0:
                nop
                tst.b   $0038(A0)
                bne.s   Offset_0x01180A
                tst.w   $002E(A0)
                bne.s   Offset_0x01180C
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   Offset_0x01180A
                move.w  $0014(A0), D0
                bpl.s   Offset_0x0117F4
                neg.w   D0
Offset_0x0117F4:
                cmpi.w  #$0280, D0
                bcc.s   Offset_0x01180A
                clr.w   $0014(A0)
                bset    #$01, $0022(A0)
                move.w  #$001E, $002E(A0)
Offset_0x01180A:
                rts
Offset_0x01180C:
                subq.w  #$01, $002E(A0)
                rts
;=============================================================================== 
; Sub Routine Tails_SlopeRepel
; [ End ]                         
;===============================================================================  
                 
;=============================================================================== 
; Sub Routine Tails_JumpAngle
; [ Begin ]                         
;===============================================================================                  
Tails_JumpAngle: ; Offset_0x011812:
                move.b  $0026(A0), D0
                beq.s   Offset_0x01182C
                bpl.s   Offset_0x011822
                addq.b  #$02, D0
                bcc.s   Offset_0x011820
                moveq   #$00, D0
Offset_0x011820:
                bra.s   Offset_0x011828
Offset_0x011822:
                subq.b  #$02, D0
                bcc.s   Offset_0x011828
                moveq   #$00, D0
Offset_0x011828:
                move.b  D0, $0026(A0)
Offset_0x01182C:
                move.b  $0027(A0), D0
                beq.s   Offset_0x011870
                tst.w   $0014(A0)
                bmi.s   Offset_0x011850
Offset_0x011838:                
                move.b  $002D(A0), D1
                add.b   D1, D0
                bcc.s   Offset_0x01184E
                subq.b  #$01, $002C(A0)
                bcc.s   Offset_0x01184E
                move.b  #$00, $002C(A0)
                moveq   #$00, D0
Offset_0x01184E:
                bra.s   Offset_0x01186C
Offset_0x011850:
                tst.b   $0029(A0)
                bne.s   Offset_0x011838
                move.b  $002D(A0), D1
                sub.b   D1, D0
                bcc.s   Offset_0x01186C
                subq.b  #$01, $002C(A0)
                bcc.s   Offset_0x01186C
                move.b  #$00, $002C(A0)
                moveq   #$00, D0
Offset_0x01186C:
                move.b  D0, $0027(A0)
Offset_0x011870:
                rts
;=============================================================================== 
; Sub Routine Tails_JumpAngle
; [ End ]                         
;===============================================================================     
             
;=============================================================================== 
; Sub Routine Tails_Floor
; [ Begin ]                         
;===============================================================================                   
Tails_Floor: ; Offset_0x011872:
                move.b  $003F(A0), D5
                move.w  $0010(A0), D1
                move.w  $0012(A0), D2
                jsr     CalcAngle               ; Offset_0x0034A2
                move.b  D0, $002B(A0)
                subi.b  #$20, D0
                andi.b  #$C0, D0
                cmpi.b  #$40, D0
                beq     Offset_0x011946
                cmpi.b  #$80, D0
                beq     Offset_0x0119A8
                cmpi.b  #$C0, D0
                beq     Offset_0x011A04
                bsr     Sonic_HitWall           ; Offset_0x013AFC
                tst.w   D1
                bpl.s   Offset_0x0118BA
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
Offset_0x0118BA:
                bsr     Offset_0x01397A
                tst.w   D1
                bpl.s   Offset_0x0118CC
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
Offset_0x0118CC:
                bsr     Offset_0x013736
                tst.w   D1
                bpl.s   Offset_0x011944
                move.b  $0012(A0), D2
                addq.b  #$08,  D2
                neg.b   D2
                cmp.b   D2, D1
                bge.s   Offset_0x0118E4
                cmp.b   D2, D0
                blt.s   Offset_0x011944
Offset_0x0118E4:
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Tails_ResetTailsOnFloor ; Offset_0x011A66
                move.b  #$00, $001C(A0)
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   Offset_0x011922
                move.b  D3, D0
                addi.b  #$10, D0
                andi.b  #$20, D0
                beq.s   Offset_0x011914
                asr.w   $0012(A0)
                bra.s   Offset_0x011936
Offset_0x011914:
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
                rts
Offset_0x011922:
                move.w  #$0000, $0010(A0)
                cmpi.w  #$0FC0, $0012(A0)
                ble.s   Offset_0x011936
                move.w  #$0FC0, $0012(A0)
Offset_0x011936:
                move.w  $0012(A0), $0014(A0)
                tst.b   D3
                bpl.s   Offset_0x011944
                neg.w   $0014(A0)
Offset_0x011944:
                rts
Offset_0x011946:
                bsr     Sonic_HitWall           ; Offset_0x013AFC
                tst.w   D1
                bpl.s   Offset_0x011960
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
                move.w  $0012(A0), $0014(A0)
                rts
Offset_0x011960:
                bsr     Sonic_DontRunOnWalls    ; Offset_0x0139CC
                tst.w   D1
                bpl.s   Offset_0x01197A
                sub.w   D1, $000C(A0)
                tst.w   $0012(A0)
                bpl.s   Offset_0x011978
                move.w  #$0000, $0012(A0)
Offset_0x011978:
                rts
Offset_0x01197A:
                tst.w   $0012(A0)
                bmi.s   Offset_0x0119A6
                bsr     Offset_0x013736
                tst.w   D1
                bpl.s   Offset_0x0119A6
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Tails_ResetTailsOnFloor ; Offset_0x011A66
                move.b  #$00, $001C(A0)
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
Offset_0x0119A6:
                rts
Offset_0x0119A8:
                bsr     Sonic_HitWall           ; Offset_0x013AFC
                tst.w   D1
                bpl.s   Offset_0x0119BA
                sub.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
Offset_0x0119BA:
                bsr     Offset_0x01397A
                tst.w   D1
                bpl.s   Offset_0x0119CC
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
Offset_0x0119CC:
                bsr     Sonic_DontRunOnWalls    ; Offset_0x0139CC
                tst.w   D1
                bpl.s   Offset_0x011A02
                sub.w   D1, $000C(A0)
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   Offset_0x0119EC
                move.w  #$0000, $0012(A0)
                rts
Offset_0x0119EC:
                move.b  D3, $0026(A0)
                bsr     Tails_ResetTailsOnFloor ; Offset_0x011A66
                move.w  $0012(A0), $0014(A0)
                tst.b   D3
                bpl.s   Offset_0x011A02
                neg.w   $0014(A0)
Offset_0x011A02:
                rts
Offset_0x011A04:
                bsr     Offset_0x01397A
                tst.w   D1
                bpl.s   Offset_0x011A1E
                add.w   D1, $0008(A0)
                move.w  #$0000, $0010(A0)
                move.w  $0012(A0), $0014(A0)
                rts
Offset_0x011A1E:
                bsr     Sonic_DontRunOnWalls    ; Offset_0x0139CC
                tst.w   D1
                bpl.s   Offset_0x011A38
                sub.w   D1, $000C(A0)
                tst.w   $0012(A0)
                bpl.s   Offset_0x011A36
                move.w  #$0000, $0012(A0)
Offset_0x011A36:
                rts
Offset_0x011A38:
                tst.w   $0012(A0)
                bmi.s   Offset_0x011A64
                bsr     Offset_0x013736
                tst.w   D1
                bpl.s   Offset_0x011A64
                add.w   D1, $000C(A0)
                move.b  D3, $0026(A0)
                bsr     Tails_ResetTailsOnFloor ; Offset_0x011A66
                move.b  #$00, $001C(A0)
                move.w  #$0000, $0012(A0)
                move.w  $0010(A0), $0014(A0)
Offset_0x011A64:
                rts  
;=============================================================================== 
; Sub Routine Tails_Floor
; [ End ]                         
;===============================================================================                  
                      
;=============================================================================== 
; Object 0x02 - Tails
; [ End ]
;=============================================================================== 

;=============================================================================== 
; Sub Routine Tails_ResetTailsOnFloor
; [ Begin ]                         
;===============================================================================               
Tails_ResetTailsOnFloor: ; Offset_0x011A66:
                btst    #$04, $0022(A0)
                beq.s   Offset_0x011A74
                nop
                nop
                nop
Offset_0x011A74:
                bclr    #$05, $0022(A0)
                bclr    #$01, $0022(A0)
                bclr    #$04, $0022(A0)
                btst    #$02, $0022(A0)
                beq.s   Offset_0x011AAA
                bclr    #$02, $0022(A0)
                move.b  #$0F, $0016(A0)
                move.b  #$09, $0017(A0)
                move.b  #$00, $001C(A0)
                subq.w  #$01, $000C(A0)
Offset_0x011AAA:
                move.b  #$00, $003C(A0)
                move.w  #$0000, ($FFFFF7D0).w
                move.b  #$00, $0027(A0)
                move.b  #$00, $0029(A0)
                rts  
;=============================================================================== 
; Sub Routine Tails_ResetTailsOnFloor
; [ End ]                         
;=============================================================================== 
               
Tails_Hurt: ; Offset_0x011AC4:
                jsr     SpeedToPos              ; Offset_0x00D27A
                addi.w  #$0030, $0012(A0)
                btst    #$06, $0022(A0)
                beq.s   Offset_0x011ADE
                subi.w  #$0020, $0012(A0)
Offset_0x011ADE:
                bsr     Tails_HurtStop          ; Offset_0x011AF4
                bsr     Tails_LevelBoundaries   ; Offset_0x0114FE
                bsr     Tails_Animate           ; Offset_0x011BA2
                bsr     Load_Tails_Dynamic_PLC  ; Offset_0x011F42
                jmp     DisplaySprite           ; Offset_0x00D3C2
                
;=============================================================================== 
; Sub Routine Tails_HurtStop
; [ Begin ]                         
;===============================================================================                 
Tails_HurtStop: ; Offset_0x011AF4:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs     KillTails               ; Offset_0x012074
                bsr     Tails_Floor             ; Offset_0x011872
                btst    #$01, $0022(A0)
                bne.s   Offset_0x011B30
                moveq   #$00, D0
                move.w  D0, $0012(A0)
                move.w  D0, $0010(A0)
                move.w  D0, $0014(A0)
                move.b  #$00, $001C(A0)
                move.b  #$02, $0024(A0)
                move.w  #$0078, $0030(A0)
Offset_0x011B30:
                rts
;=============================================================================== 
; Sub Routine Tails_HurtStop
; [ End ]                         
;===============================================================================                  
                
Tails_Death: ; Offset_0x011B32:
                bsr     Tails_GameOver          ; Offset_0x011B4A
                jsr     ObjectFall              ; Offset_0x00D24E
                bsr     Tails_Animate           ; Offset_0x011BA2
                bsr     Load_Tails_Dynamic_PLC  ; Offset_0x011F42
                jmp     DisplaySprite           ; Offset_0x00D3C2
                
;=============================================================================== 
; Sub Routine Tails_GameOver
; [ Begin ]                         
;===============================================================================                 
Tails_GameOver: ; Offset_0x011B4A:
                move.w  ($FFFFEECE).w, D0
                addi.w  #$0100, D0
                cmp.w   $000C(A0), D0
                bcc     Offset_0x011B8C
                move.w  ($FFFFB008).w, D0
                subi.w  #$0040, D0
                move.w  D0, $0008(A0)
                move.w  ($FFFFB00C).w, D0
                subi.w  #$0080, D0
                move.w  D0, $000C(A0)
                move.b  #$02, $0024(A0)
                andi.w  #$7FFF, $0002(A0)
                move.b  #$0C, $003E(A0)
                move.b  #$0D, $003F(A0)
                nop
Offset_0x011B8C:
                rts
;=============================================================================== 
; Sub Routine Tails_GameOver
; [ End ]                         
;===============================================================================
                 
Tails_ResetLevel: ; Offset_0x011B8E:
                tst.w   $003A(A0)
                beq.s   Offset_0x011BA0
                subq.w  #$01, $003A(A0)
                bne.s   Offset_0x011BA0
                move.w  #$0001, ($FFFFFE02).w
Offset_0x011BA0:
                rts
                
;=============================================================================== 
; Sub Routine Tails_Animate
; [ Begin ]                         
;===============================================================================    
Tails_Animate: ; Offset_0x011BA2: ; Tails Subroutine  
                lea     (Tails_AnimateData), A1 ; Offset_0x011DF4
Tails_Animate2: ; Offset_0x011BA8:                
                moveq   #$00, D0
                move.b  $001C(A0), D0
                cmp.b   $001D(A0), D0
                beq.s   Offset_0x011BCA
                move.b  D0, $001D(A0)
                move.b  #$00, $001B(A0)
                move.b  #$00, $001E(A0)
                bclr    #$05, $0022(A0)
Offset_0x011BCA:
                add.w   D0, D0
                adda.w  $00(A1, D0), A1
                move.b  (A1), D0
                bmi.s   Offset_0x011C3A
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x011C08
                move.b  D0, $001E(A0)
Offset_0x011BF0:                
                moveq   #$00, D1
                move.b  $001B(A0), D1
                move.b  $01(A1, D1), D0
                cmpi.b  #$F0, D0                  
                bcc.s   Offset_0x011C0A
Offset_0x011C00:                
                move.b  D0, $001A(A0)
                addq.b  #$01, $001B(A0)
Offset_0x011C08:
                rts
Offset_0x011C0A:
                addq.b  #$01, D0
                bne.s   Offset_0x011C1A
                move.b  #$00, $001B(A0)
                move.b  $0001(A1), D0
                bra.s   Offset_0x011C00
Offset_0x011C1A:
                addq.b  #$01, D0
                bne.s   Offset_0x011C2E
                move.b  $02(A1, D1), D0
                sub.b   D0, $001B(A0)
                sub.b   D0, D1
                move.b  $01(A1, D1), D0
                bra.s   Offset_0x011C00
Offset_0x011C2E:
                addq.b  #$01, D0
                bne.s   Offset_0x011C38
                move.b  $02(A1, D1), $001C(A0)
Offset_0x011C38:
                rts
Offset_0x011C3A:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x011C08
                addq.b  #$01, D0
                bne     Offset_0x011D26
                moveq   #$00, D0
                move.b  $0027(A0), D0
                bne     Offset_0x011CC0
                moveq   #$00, D1
                move.b  $0026(A0), D0
                move.b  $0022(A0), D2
                andi.b  #$01, D2
                bne.s   Offset_0x011C62
                not.b  d0
Offset_0x011C62:
                addi.b  #$10, D0
                bpl.s   Offset_0x011C6A
                moveq   #$03, D1
Offset_0x011C6A:
                andi.b  #$FC, $0001(A0)
                eor.b   D1, D2
                or.b    D2, $0001(A0)
                lsr.b   #$04, D0
                andi.b  #$06, D0
                move.w  $0014(A0), D2
                bpl.s   Offset_0x011C84
                neg.w   D2
Offset_0x011C84:
                move.b  D0, D3
                add.b   D3, D3
                add.b   D3, D3
                lea     (Tails_Animate_Walk), A1 ; Offset_0x011E32
                cmpi.w  #$0600, D2
                bcs.s   Offset_0x011CA6
                lea     (Tails_Animate_Run), A1 ; Offset_0x011E3C
                move.b  D0, D1
                lsr.b   #$01, D1
                add.b   D1, D0
                add.b   D0, D0
                move.b  D0, D3
Offset_0x011CA6:
                neg.w   D2
                addi.w  #$0800, D2
                bpl.s   Offset_0x011CB0
                moveq   #$00, D2
Offset_0x011CB0:
                lsr.w   #$08, D2
                move.b  D2, $001E(A0)
                bsr     Offset_0x011BF0
                add.b   D3, $001A(A0)
                rts
Offset_0x011CC0:
                move.b  $0027(A0), D0
                moveq   #$00, D1
                move.b  $0022(A0), D2
                andi.b  #$01, D2
                bne.s   Offset_0x011CEE
                andi.b  #$FC, $0001(A0)
                addi.b  #$0B, D0
                divu.w  #$0016, D0
                addi.b  #$75, D0
                move.b  D0, $001A(A0)
                move.b  #$00, $001E(A0)
                rts
Offset_0x011CEE:
                andi.b  #$FC, $0001(A0)
                tst.b   $0029(A0)
                beq.s   Offset_0x011D06
                ori.b   #$01, $0001(A0)
                addi.b  #$0B, D0
                bra.s   Offset_0x011D12
Offset_0x011D06:
                ori.b   #$03, $0001(A0)
                neg.b   D0
                addi.b  #$8F, D0
Offset_0x011D12:
                divu.w  #$0016, D0
                addi.b  #$75, D0
                move.b  D0, $001A(A0)
                move.b  #$00, $001E(A0)
                rts
Offset_0x011D26:
                addq.b  #$01, D0
                bne.s   Offset_0x011D6A
                move.w  $0014(A0), D2
                bpl.s   Offset_0x011D32
                neg.w   D2
Offset_0x011D32:
                lea     (Tails_Animate_Roll2), A1 ; Offset_0x011E4B
                cmpi.w  #$0600, D2
                bcc.s   Offset_0x011D44
                lea     (Tails_Animate_Roll), A1 ; Offset_0x011E46
Offset_0x011D44:
                neg.w   D2
                addi.w  #$0400, D2
                bpl.s   Offset_0x011D4E
                moveq   #$00, D2
Offset_0x011D4E:
                lsr.w   #$08, D2
                move.b  D2, $001E(A0)
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                bra     Offset_0x011BF0
Offset_0x011D6A:
                addq.b  #$01, D0
                bne.s   Offset_0x011DA0
                move.w  $0014(A0), D2
                bmi.s   Offset_0x011D76
                neg.w   D2
Offset_0x011D76:
                addi.w  #$0800, D2
                bpl.s   Offset_0x011D7E
                moveq   #$00, D2
Offset_0x011D7E:
                lsr.w   #$06, D2
                move.b  D2, $001E(A0)
                lea     (Tails_Animate_Push_NoArt), A1 ; Offset_0x011E50
                move.b  $0022(A0), D1
                andi.b  #$01, D1
                andi.b  #$FC, $0001(A0)
                or.b    D1, $0001(A0)
                bra     Offset_0x011BF0
Offset_0x011DA0:
                move.w  ($FFFFB050).w, D1
                move.w  ($FFFFB052).w, D2
                jsr     CalcAngle               ; Offset_0x0034A2
                moveq   #$00, D1
                move.b  $0022(A0), D2
                andi.b  #$01, D2
                bne.s   Offset_0x011DBE
                not.b  d0
                bra.s   Offset_0x011DC2
Offset_0x011DBE:
                addi.b  #$80, D0
Offset_0x011DC2:
                addi.b  #$10, D0
                bpl.s   Offset_0x011DCA
                moveq   #$03, D1
Offset_0x011DCA:
                andi.b  #$FC, $0001(A0)
                eor.b   D1, D2
                or.b    D2, $0001(A0)
                lsr.b   #$03, D0
                andi.b  #$0C, D0
                move.b  D0, D3
                lea     (Offset_0x012054), A1
                move.b  #$03, $001E(A0)
                bsr     Offset_0x011BF0
                add.b   D3, $001A(A0)
                rts 
Tails_AnimateData: ; Offset_0x011DF4: ; Tails Data               
                dc.w    Tails_Animate_Walk-Tails_AnimateData           ; Offset_0x011E32
                dc.w    Tails_Animate_Run-Tails_AnimateData            ; Offset_0x011E3C
                dc.w    Tails_Animate_Roll-Tails_AnimateData           ; Offset_0x011E46
                dc.w    Tails_Animate_Roll2-Tails_AnimateData          ; Offset_0x011E4B
                dc.w    Tails_Animate_Push_NoArt-Tails_AnimateData     ; Offset_0x011E50
                dc.w    Tails_Animate_Wait-Tails_AnimateData           ; Offset_0x011E58
                dc.w    Tails_Animate_Balance_NoArt-Tails_AnimateData  ; Offset_0x011E96
                dc.w    Tails_Animate_LookUp-Tails_AnimateData         ; Offset_0x011EA0
                dc.w    Tails_Animate_Duck-Tails_AnimateData           ; Offset_0x011EA3
                dc.w    Tails_Animate_Spindash-Tails_AnimateData       ; Offset_0x011EA6
                dc.w    Tails_Animate_0x0A-Tails_AnimateData           ; Offset_0x011EAB
                dc.w    Tails_Animate_0x0B-Tails_AnimateData           ; Offset_0x011EAE
                dc.w    Tails_Animate_0x0C-Tails_AnimateData           ; Offset_0x011EB4
                dc.w    Tails_Animate_Stop-Tails_AnimateData           ; Offset_0x011EB8
                dc.w    Tails_Animate_Fly-Tails_AnimateData            ; Offset_0x011EBC
                dc.w    Tails_Animate_0x0F-Tails_AnimateData           ; Offset_0x011EC0
                dc.w    Tails_Animate_Jump-Tails_AnimateData           ; Offset_0x011EC7
                dc.w    Tails_Animate_0x11-Tails_AnimateData           ; Offset_0x011ED6
                dc.w    Tails_Animate_0x12-Tails_AnimateData           ; Offset_0x011EDA
                dc.w    Tails_Animate_0x13-Tails_AnimateData           ; Offset_0x011EE0
                dc.w    Tails_Animate_0x14-Tails_AnimateData           ; Offset_0x011EE5
                dc.w    Tails_Animate_0x15-Tails_AnimateData           ; Offset_0x011EE8
                dc.w    Tails_Animate_Death1-Tails_AnimateData         ; Offset_0x011EEF
                dc.w    Tails_Animate_Unused_Drown-Tails_AnimateData   ; Offset_0x011EF2
                dc.w    Tails_Animate_Death2-Tails_AnimateData         ; Offset_0x011EF5
                dc.w    Tails_Animate_0x19-Tails_AnimateData           ; Offset_0x011EF8
                dc.w    Tails_Animate_0x1A-Tails_AnimateData           ; Offset_0x011EFB
                dc.w    Tails_Animate_0x1B-Tails_AnimateData           ; Offset_0x011EFE
                dc.w    Tails_Animate_0x1C-Tails_AnimateData           ; Offset_0x011F02
                dc.w    Tails_Animate_0x1D-Tails_AnimateData           ; Offset_0x011F06
                dc.w    Tails_Animate_0x1E-Tails_AnimateData           ; Offset_0x011F10
Tails_Animate_Walk: ; Offset_0x011E32:
                dc.b    $FF, $10, $11, $12, $13, $14, $15, $0E, $0F, $FF  
Tails_Animate_Run: ; Offset_0x011E3C:
                dc.b    $FF, $2E, $2F, $30, $31, $FF, $FF, $FF, $FF, $FF
Tails_Animate_Roll: ; Offset_0x011E46:
                dc.b    $01, $48, $47, $46, $FF
Tails_Animate_Roll2: ; Offset_0x011E4B:
                dc.b    $01, $48, $47, $46, $FF
Tails_Animate_Push_NoArt: ; Offset_0x011E50:
                dc.b    $FD, $09, $0A, $0B, $0C, $0D, $0E, $FF
Tails_Animate_Wait: ; Offset_0x011E58:
                dc.b    $07, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $03, $02, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $03, $02, $01, $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $06, $07, $08, $07, $08, $07, $08, $07, $08, $07, $08, $06, $FE, $1C  
Tails_Animate_Balance_NoArt: ; Offset_0x011E96:
                dc.b    $1F, $01, $02, $03, $04, $05, $06, $07, $08, $FF
Tails_Animate_LookUp: ; Offset_0x011EA0:
                dc.b    $3F, $04, $FF
Tails_Animate_Duck: ; Offset_0x011EA3:
                dc.b    $3F, $5B, $FF
Tails_Animate_Spindash: ; Offset_0x011EA6:
                dc.b    $00, $60, $61, $62, $FF
Tails_Animate_0x0A: ; Offset_0x011EAB:
                dc.b    $3F, $82, $FF
Tails_Animate_0x0B: ; Offset_0x011EAE:
                dc.b    $07, $08, $08, $09, $FD, $05
Tails_Animate_0x0C: ; Offset_0x011EB4:
                dc.b    $07, $09, $FD, $05
Tails_Animate_Stop: ; Offset_0x011EB8:
                dc.b    $07, $01, $02, $FF
Tails_Animate_Fly: ; Offset_0x011EBC:
                dc.b    $07, $5E, $5F, $FF
Tails_Animate_0x0F: ; Offset_0x011EC0:
                dc.b    $07, $01, $02, $03, $04, $05, $FF
Tails_Animate_Jump: ; Offset_0x011EC7:
                dc.b    $03, $59, $5A, $59, $5A, $59, $5A, $59, $5A, $59, $5A, $59, $5A, $FD, $00
Tails_Animate_0x11: ; Offset_0x011ED6:
                dc.b    $04, $01, $02, $FF
Tails_Animate_0x12: ; Offset_0x011EDA:
                dc.b    $0F, $01, $02, $03, $FE, $01
Tails_Animate_0x13: ; Offset_0x011EE0:
                dc.b    $0F, $01, $02, $FE, $01
Tails_Animate_0x14: ; Offset_0x011EE5:
                dc.b    $3F, $01, $FF
Tails_Animate_0x15: ; Offset_0x011EE8:
                dc.b    $0B, $01, $02, $03, $04, $FD, $00
Tails_Animate_Death1: ; Offset_0x011EEF:
                dc.b    $20, $5D, $FF
Tails_Animate_Unused_Drown: ; Offset_0x011EF2:
                dc.b    $2F, $5D, $FF
Tails_Animate_Death2: ; Offset_0x011EF5:
                dc.b    $03, $5D, $FF
Tails_Animate_0x19: ; Offset_0x011EF8:
                dc.b    $03, $5D, $FF
Tails_Animate_0x1A: ; Offset_0x011EFB:
                dc.b    $03, $5C, $FF
Tails_Animate_0x1B: ; Offset_0x011EFE:
                dc.b    $07, $01, $01, $FF
Tails_Animate_0x1C: ; Offset_0x011F02:
                dc.b    $77, $00, $FD, $00
Tails_Animate_0x1D: ; Offset_0x011F06:
                dc.b    $03, $01, $02, $03, $04, $05, $06, $07, $08, $FF
Tails_Animate_0x1E: ; Offset_0x011F10:
                dc.b    $03, $01, $02, $03, $04, $05, $06, $07, $08, $FF
;=============================================================================== 
; Sub Routine Tails_Animate
; [ End ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine Load_Tails_Tail_Dynamic_PLC
; [ Begin ]                         
;===============================================================================    
Load_Tails_Tail_Dynamic_PLC: ; Offset_0x011F1A:  ; Tails "Tail" subroutine
                moveq   #$00, D0
                move.b  $001A(A0), D0
                cmp.b   ($FFFFF7DF).w, D0
                beq.s   Offset_0x011F94
                move.b  D0, ($FFFFF7DF).w
                lea     (Tails_Dyn_Script), A2  ; Offset_0x07056E
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D5
                subq.w  #$01, D5
                bmi.s   Offset_0x011F94
                move.w  #$F600, D4
                bra.s   Offset_0x011F68  
;=============================================================================== 
; Sub Routine Load_Tails_Tail_Dynamic_PLC
; [ End ]                         
;===============================================================================   
              
;=============================================================================== 
; Sub Routine Load_Tails_Dynamic_PLC
; [ Begin ]                         
;===============================================================================                                                
Load_Tails_Dynamic_PLC: ; Offset_0x011F42:
                moveq   #$00, D0
                move.b  $001A(A0), D0
                cmp.b   ($FFFFF7DE).w, D0
                beq.s   Offset_0x011F94
                move.b  D0, ($FFFFF7DE).w
                lea     (Tails_Dyn_Script), A2 ; Offset_0x07056E
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D5
                subq.w  #$01, D5
                bmi.s   Offset_0x011F94
                move.w  #$F400, D4
Offset_0x011F68:                
                moveq   #$00, D1
                move.w  (A2)+, D1
                move.w  D1, D3
                lsr.w   #$08, D3
                andi.w  #$00F0, D3
                addi.w  #$0010, D3
                andi.w  #$0FFF, D1
                lsl.l   #$05, D1
                addi.l  #Tails_Sprites, D1      ; Offset_0x06254C
                move.w  D4, D2
                add.w   D3, D4
                add.w   D3, D4
                jsr     DMA_68KtoVRAM           ; Offset_0x00156C
                dbra    D5, Offset_0x011F68
Offset_0x011F94:
                rts                    
;=============================================================================== 
; Object 0x05 - Tails "Tail"
; [ Begin ]
;===============================================================================                     
Obj_0x05_Tails_Tail: ; Offset_0x011F96:               
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x011FA4(PC, D0), D1
                jmp     Offset_0x011FA4(PC, D1)
Offset_0x011FA4:
                dc.w    Offset_0x011FA8-Offset_0x011FA4
                dc.w    Offset_0x011FD0-Offset_0x011FA4
Offset_0x011FA8:
                addq.b  #$02, $0024(A0)                  
                move.l  #Tails_Mappings, $0004(A0) ; Offset_0x06FB3C
                move.w  #$07B0, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$02, $0018(A0)
                move.b  #$18, $0019(A0)
                move.b  #$04, $0001(A0)
Offset_0x011FD0:
                move.b  ($FFFFB066).w, $0026(A0)
                move.b  ($FFFFB062).w, $0022(A0)
                move.w  ($FFFFB048).w, $0008(A0)
                move.w  ($FFFFB04C).w, $000C(A0)
                moveq   #$00, D0
                move.b  ($FFFFB05C).w, D0
                cmp.b   $0030(A0), D0
                beq.s   Offset_0x011FFE
                move.b  D0, $0030(A0)
                move.b  Offset_0x012014(PC, D0), $001C(A0)
Offset_0x011FFE:
                lea     (Offset_0x012032), A1
                bsr     Tails_Animate2          ; Offset_0x011BA8
                bsr     Load_Tails_Tail_Dynamic_PLC ; Offset_0x011F1A
                jsr     DisplaySprite           ; Offset_0x00D3C2
                rts
Offset_0x012014:
                dc.b    $00, $00, $03, $03, $00, $01, $00, $02, $01, $07, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                           
Offset_0x012032:
                dc.w    Offset_0x012042-Offset_0x012032
                dc.w    Offset_0x012045-Offset_0x012032
                dc.w    Offset_0x01204C-Offset_0x012032
                dc.w    Offset_0x012054-Offset_0x012032
                dc.w    Offset_0x01205A-Offset_0x012032
                dc.w    Offset_0x012060-Offset_0x012032
                dc.w    Offset_0x012066-Offset_0x012032
                dc.w    Offset_0x01206C-Offset_0x012032
Offset_0x012042:
                dc.b    $20, $00, $FF 
Offset_0x012045:    
                dc.b    $07, $09, $0A, $0B, $0C, $0D, $FF
Offset_0x01204C: 
                dc.b    $03, $09, $0A, $0B, $0C, $0D, $FD, $01 
Offset_0x012054:
                dc.b    $FC, $49, $4A, $4B, $4C, $FF
Offset_0x01205A:
                dc.b    $03, $4D, $4E, $4F, $50, $FF
Offset_0x012060:
                dc.b    $03, $51, $52, $53, $54, $FF
Offset_0x012066:
                dc.b    $03, $55, $56, $57, $58, $FF
Offset_0x01206C: 
                dc.b    $02, $81, $82, $83, $84, $FF
;=============================================================================== 
; Object 0x05 - Tails "Tail"
; [ End ]
;===============================================================================                    
                nop                             ; Filler 
KillTails: ; Offset_0x012074:
                jmp     KillSonic               ; Offset_0x021422
                dc.w    $0000                   ; Filler  
;=============================================================================== 
; Object 0x0A - 
; [ Begin ]
;===============================================================================                                    
Obj_0x0A_Bubbles_And_Numbers: ; Offset_0x01207C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01208A(PC, D0), D1
                jmp     Offset_0x01208A(PC, D1)
Offset_0x01208A:
                dc.w    Offset_0x01209C-Offset_0x01208A
                dc.w    Offset_0x0120F8-Offset_0x01208A
                dc.w    Offset_0x012104-Offset_0x01208A
                dc.w    Offset_0x01216E-Offset_0x01208A
                dc.w    J_DeleteObject_01-Offset_0x01208A ; Offset_0x012182-...
                dc.w    Offset_0x01230C-Offset_0x01208A
                dc.w    Offset_0x012188-Offset_0x01208A
                dc.w    Offset_0x01216E-Offset_0x01208A
                dc.w    J_DeleteObject_01-Offset_0x01208A ; Offset_0x012182-...
Offset_0x01209C:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x0A_Bubbles_Mappings, $0004(A0) ; Offset_0x014374
                move.w  #$8500, $0002(A0)
                move.b  #$84, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  $0028(A0), D0
                bpl.s   Offset_0x0120E4
                addq.b  #$08, $0024(A0)
                move.l  #Obj_0x0A_Numbers_Mappings, $0004(A0) ; Offset_0x0125C2
                move.w  #$0440, $0002(A0)
                andi.w  #$007F, D0
                move.b  D0, $0033(A0)
                bra     Offset_0x01230C
Offset_0x0120E4:
                move.b  D0, $001C(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.w  $0008(A0), $0030(A0)
                move.w  #$FF78, $0012(A0)
Offset_0x0120F8:
                lea     (Offset_0x012530), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
Offset_0x012104:
                move.w  ($FFFFF646).w, D0
                cmp.w   $000C(A0), D0
                bcs.s   Offset_0x01212A
                move.b  #$06, $0024(A0)
                addq.b  #$07, $001C(A0)
                cmpi.b  #$0D, $001C(A0)
                beq.s   Offset_0x01216E
                bcs.s   Offset_0x01216E
                move.b  #$0D, $001C(A0)
                bra.s   Offset_0x01216E
Offset_0x01212A:
                tst.b   ($FFFFF7C7).w
                beq.s   Offset_0x012134
                addq.w  #$04, $0030(A0)
Offset_0x012134:
                move.b  $0026(A0), D0
                addq.b  #$01, $0026(A0)
                andi.w  #$007F, D0
                lea     (Offset_0x01220C), A1
                move.b  $00(A1, D0), D0
                ext.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                bsr.s   Offset_0x0121C0
                jsr     SpeedToPos              ; (Offset_0x00D27A)
                tst.b   $0001(A0)
                bpl.s   J_DeleteObject_00       ; Offset_0x012168
                jmp     DisplaySprite           ; (Offset_0x00D3C2) 
J_DeleteObject_00: ; Offset_0x012168:
                jmp     DeleteObject            ; (Offset_0x00D3B4)    
Offset_0x01216E:
                bsr.s   Offset_0x0121C0
                lea     (Offset_0x012530), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_01: ; Offset_0x012182:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x012188:
                cmpi.w  #$000C, ($FFFFFE14).w
                bhi.s   J_DeleteObject_02       ; Offset_0x0121BA
                subq.w  #$01, $0038(A0)
                bne.s   Offset_0x0121A2
                move.b  #$0E, $0024(A0)
                addq.b  #$07, $001C(A0)
                bra.s   Offset_0x01216E
Offset_0x0121A2:
                lea     (Offset_0x012530), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
                tst.b   $0001(A0)
                bpl.s   J_DeleteObject_02       ; Offset_0x0121BA
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_02: ; Offset_0x0121BA:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x0121C0:
                tst.w   $0038(A0)
                beq.s   Offset_0x01220A
                subq.w  #$01, $0038(A0)
                bne.s   Offset_0x01220A
                cmpi.b  #$07, $001C(A0)
                bcc.s   Offset_0x01220A
                move.w  #$000F, $0038(A0)
                clr.w   $0012(A0)
                move.b  #$80, $0001(A0)
                move.w  $0008(A0), D0
                sub.w   ($FFFFEE00).w, D0
                addi.w  #$0080, D0
                move.w  D0, $0008(A0)
                move.w  $000C(A0), D0
                sub.w   ($FFFFEE04).w, D0
                addi.w  #$0080, D0
                move.w  D0, $000A(A0)
                move.b  #$0C, $0024(A0)
Offset_0x01220A:
                rts

Offset_0x01220C:
                dc.b    $00, $00, $00, $00, $00, $00, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02
                dc.b    $02, $02, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03
                dc.b    $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $02
                dc.b    $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $00, $00, $00, $00, $00
                dc.b    $00, $FF, $FF, $FF, $FF, $FF, $FE, $FE, $FE, $FE, $FE, $FD, $FD, $FD, $FD, $FD
                dc.b    $FD, $FD, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FD
                dc.b    $FD, $FD, $FD, $FD, $FD, $FD, $FE, $FE, $FE, $FE, $FE, $FF, $FF, $FF, $FF, $FF
                dc.b    $00, $00, $00, $00, $00, $00, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02
                dc.b    $02, $02, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03
                dc.b    $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $02
                dc.b    $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $00, $00, $00, $00, $00
                dc.b    $00, $FF, $FF, $FF, $FF, $FF, $FE, $FE, $FE, $FE, $FE, $FD, $FD, $FD, $FD, $FD
                dc.b    $FD, $FD, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FD
                dc.b    $FD, $FD, $FD, $FD, $FD, $FD, $FE, $FE, $FE, $FE, $FE, $FF, $FF, $FF, $FF, $FF
Offset_0x01230C:
                tst.w   $002C(A0)
                bne     Offset_0x0123F6
                cmpi.b  #$06, ($FFFFB024).w
                bcc     Offset_0x0124FC
                btst    #$06, ($FFFFB022).w
                beq     Offset_0x0124FC
                subq.w  #$01, $0038(A0)
                bpl     Offset_0x01241C
                move.w  #$003B, $0038(A0)
                move.w  #$0001, $0036(A0)
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                andi.w  #$0001, D0
                move.b  D0, $0034(A0)
                move.w  ($FFFFFE14).w, D0
                cmpi.w  #$0019, D0
                beq.s   Offset_0x012386
                cmpi.w  #$0014, D0
                beq.s   Offset_0x012386
                cmpi.w  #$000F, D0
                beq.s   Offset_0x012386
                cmpi.w  #$000C, D0
                bhi.s   Offset_0x012390
                bne.s   Offset_0x012372
                move.w  #$008A, D0
                jsr     (Play_Music)            ; Offset_0x0014C0
Offset_0x012372:
                subq.b  #$01, $0032(A0)
                bpl.s   Offset_0x012390
                move.b  $0033(A0), $0032(A0)
                bset    #$07, $0036(A0)
                bra.s   Offset_0x012390
Offset_0x012386:
                move.w  #$00C2, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x012390:
                subq.w  #$01, ($FFFFFE14).w
                bcc     Offset_0x01241A
                bsr     ResumeMusic             ; Offset_0x0124FE
                move.b  #$81, ($FFFFB02A).w
                move.w  #$00B2, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                move.b  #$0A, $0034(A0)
                move.w  #$0001, $0036(A0)
                move.w  #$0078, $002C(A0)
                move.l  A0, -(A7)
                lea     ($FFFFB000).w, A0
                bsr     Sonic_ResetOnFloor      ; Offset_0x01090C
                move.b  #$17, $001C(A0)
                bset    #$01, $0022(A0)
                bset    #$07, $0002(A0)
                move.w  #$0000, $0012(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0014(A0)
                move.b  #$01, ($FFFFEEDC).w
                move.l  (A7)+, A0
                rts
Offset_0x0123F6:
                subq.w  #$01, $002C(A0)
                bne.s   Offset_0x012404
                move.b  #$06, ($FFFFB024).w
                rts
Offset_0x012404:
                move.l  A0, -(A7)
                lea     ($FFFFB000).w, A0
                jsr     SpeedToPos              ; (Offset_0x00D27A)
                addi.w  #$0010, $0012(A0)
                move.l  (A7)+, A0
                bra.s   Offset_0x01241C
Offset_0x01241A:
                bra.s   Offset_0x01242C
Offset_0x01241C:
                tst.w   $0036(A0)
                beq     Offset_0x0124FC
                subq.w  #$01, $003A(A0)
                bpl     Offset_0x0124FC
Offset_0x01242C:
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                andi.w  #$000F, D0
                move.w  D0, $003A(A0)
                jsr     SingleObjectLoad        ; (Offset_0x00E772)
                bne     Offset_0x0124FC
                move.b  #$0A, $0000(A1)
                move.w  ($FFFFB008).w, $0008(A1)
                moveq   #$06, D0
                btst    #$00, ($FFFFB022).w
                beq.s   Offset_0x012462
                neg.w   D0
                move.b  #$40, $0026(A1)
Offset_0x012462:
                add.w   D0, $0008(A1)
                move.w  ($FFFFB00C).w, $000C(A1)
                move.b  #$06, $0028(A1)
                tst.w   $002C(A0)
                beq     Offset_0x0124AE
                andi.w  #$0007, $003A(A0)
                addi.w  #$0000, $003A(A0)
                move.w  ($FFFFB00C).w, D0
                subi.w  #$000C, D0
                move.w  D0, $000C(A1)
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                move.b  D0, $0026(A1)
                move.w  ($FFFFFE04).w, D0
                andi.b  #$03, D0
                bne.s   Offset_0x0124F2
                move.b  #$0E, $0028(A1)
                bra.s   Offset_0x0124F2
Offset_0x0124AE:
                btst    #$07, $0036(A0)
                beq.s   Offset_0x0124F2
                move.w  ($FFFFFE14).w, D2
                lsr.w   #$01, D2
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                andi.w  #$0003, D0
                bne.s   Offset_0x0124DA
                bset    #$06, $0036(A0)
                bne.s   Offset_0x0124F2
                move.b  D2, $0028(A1)
                move.w  #$001C, $0038(A1)
Offset_0x0124DA:
                tst.b   $0034(A0)
                bne.s   Offset_0x0124F2
                bset    #$06, $0036(A0)
                bne.s   Offset_0x0124F2
                move.b  D2, $0028(A1)
                move.w  #$001C, $0038(A1)
Offset_0x0124F2:
                subq.b  #$01, $0034(A0)
                bpl.s   Offset_0x0124FC
                clr.w   $0036(A0)
Offset_0x0124FC:
                rts               
ResumeMusic: ; Offset_0x0124FE:
                cmpi.w  #$000C, ($FFFFFE14).w
                bhi.s   Offset_0x012524
                move.w  #$0082, D0
                tst.b   ($FFFFFE2D).w
                beq.s   Offset_0x012514
                move.w  #$0087, D0
Offset_0x012514:
                tst.b   ($FFFFF7AA).w
                beq.s   Offset_0x01251E
                move.w  #$008C, D0
Offset_0x01251E:
                jsr     (Play_Music)            ; Offset_0x0014C0
Offset_0x012524:
                move.w  #$001E, ($FFFFFE14).w
                clr.b   ($FFFFB372).w
                rts            
Offset_0x012530:
                dc.w    Offset_0x01254E-Offset_0x012530
                dc.w    Offset_0x012557-Offset_0x012530
                dc.w    Offset_0x012560-Offset_0x012530
                dc.w    Offset_0x012569-Offset_0x012530
                dc.w    Offset_0x012572-Offset_0x012530
                dc.w    Offset_0x01257B-Offset_0x012530
                dc.w    Offset_0x012584-Offset_0x012530
                dc.w    Offset_0x012589-Offset_0x012530
                dc.w    Offset_0x012591-Offset_0x012530
                dc.w    Offset_0x012599-Offset_0x012530
                dc.w    Offset_0x0125A1-Offset_0x012530
                dc.w    Offset_0x0125A9-Offset_0x012530
                dc.w    Offset_0x0125B1-Offset_0x012530
                dc.w    Offset_0x0125B9-Offset_0x012530
                dc.w    Offset_0x0125BB-Offset_0x012530
Offset_0x01254E:
                dc.b    $05, $00, $01, $02, $03, $04, $09, $0D, $FC
Offset_0x012557:
                dc.b    $05, $00, $01, $02, $03, $04, $0C, $12, $FC
Offset_0x012560:
                dc.b    $05, $00, $01, $02, $03, $04, $0C, $11, $FC
Offset_0x012569:
                dc.b    $05, $00, $01, $02, $03, $04, $0B, $10, $FC
Offset_0x012572:
                dc.b    $05, $00, $01, $02, $03, $04, $09, $0F, $FC
Offset_0x01257B:
                dc.b    $05, $00, $01, $02, $03, $04, $0A, $0E, $FC
Offset_0x012584:
                dc.b    $0E, $00, $01, $02, $FC
Offset_0x012589:
                dc.b    $07, $16, $0D, $16, $0D, $16, $0D, $FC
Offset_0x012591:
                dc.b    $07, $16, $12, $16, $12, $16, $12, $FC
Offset_0x012599:
                dc.b    $07, $16, $11, $16, $11, $16, $11, $FC
Offset_0x0125A1:
                dc.b    $07, $16, $10, $16, $10, $16, $10, $FC
Offset_0x0125A9:
                dc.b    $07, $16, $0F, $16, $0F, $16, $0F, $FC
Offset_0x0125B1:
                dc.b    $07, $16, $0E, $16, $0E, $16, $0E, $FC
Offset_0x0125B9:
                dc.b    $0E, $FC
Offset_0x0125BB:
                dc.b    $0E, $01, $02, $03, $04, $FC, $00 
Obj_0x0A_Numbers_Mappings: ; Offset_0x0125C2:
                dc.w    Offset_0x0125C4-Obj_0x0A_Numbers_Mappings
Offset_0x0125C4:
                dc.w    $0001
                dc.l    $E80E0000, $0000FFF2                
;=============================================================================== 
; Object 0x0A - 
; [ End ]
;=============================================================================== 
;=============================================================================== 
; Object 0x38 - 
; [ Begin ]
;===============================================================================  
Obj_0x38_Shield: ; Offset_0x0125CE:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x0125DC(PC, D0), D1
                jmp     Offset_0x0125DC(PC, D1)
Offset_0x0125DC:                 
                dc.w    Offset_0x0125E0-Offset_0x0125DC
                dc.w    Offset_0x012616-Offset_0x0125DC
Offset_0x0125E0:
                addq.b  #$02, $0024(A0)
                move.l  #Offset_0x012BB0, $0004(A0)
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$18, $0019(A0)
                move.w  #$04BE, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                btst    #$07, ($FFFFB002).w
                beq.s   Offset_0x012616
                bset    #$07, $0002(A0)
Offset_0x012616:
                tst.b   ($FFFFFE2D).w
                bne.s   Offset_0x012646
                tst.b   ($FFFFFE2C).w
                beq.s   J_DeleteObject_03       ; Offset_0x012648
                move.w  ($FFFFB008).w, $0008(A0)
                move.w  ($FFFFB00C).w, $000C(A0)
                move.b  ($FFFFB022).w, $0022(A0)
                lea     (Offset_0x012BA2), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x012646:
                rts    
J_DeleteObject_03: ; Offset_0x012648:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
;=============================================================================== 
; Object 0x38 - 
; [ End ]
;===============================================================================  
;=============================================================================== 
; Object 0x35 - 
; [ Begin ]
;===============================================================================                   
Obj_0x35_Invincibility: ; Offset_0x01264E:
                moveq   #$00, D0
                move.b  $000A(A0), D0
                move.w  Offset_0x01265C(PC, D0), D1
                jmp     Offset_0x01265C(PC, D1)
Offset_0x01265C:
                dc.w    Offset_0x012660-Offset_0x01265C
                dc.w    Offset_0x01268E-Offset_0x01265C
Offset_0x012660:
                addq.b  #$02, $000A(A0)
                move.l  #Offset_0x012C88, $0004(A0)
                move.w  #$04DE, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                bset    #$06, $0001(A0)
                move.b  #$10, $000E(A0)
                move.b  #$08, $000F(A0)
Offset_0x01268E:
                tst.b   ($FFFFFE2D).w
                beq     DeleteObject            ; Offset_0x00D3B4
                lea     ($FFFFB000).w, A1
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                move.b  $0022(A1), D6
                lea     (Offset_0x0127B0), A2
                move.b  $0026(A1), D1
                btst    #$01, D6
                beq.s   Offset_0x0126C0
                move.b  $002B(A1), D1
                moveq   #$00, D6
Offset_0x0126C0:
                andi.b  #$01, D6
                beq.s   Offset_0x0126C8
                neg.w   D1
Offset_0x0126C8:
                addi.b  #$10, D1
                lsr.b   #$03, D1
                andi.w  #$001C, D1
                lea     $00(A2, D1), A2
                subq.w  #$08, D1
                andi.w  #$0010, D1
                bne.s   Offset_0x0126E2
                eori.b  #$01, D6
Offset_0x0126E2:
                move.b  ($FFFFFE05).w, D0
                andi.b  #$01, D0
                lea     (Offset_0x0127D0), A3
                beq.s   Offset_0x0126FA
                lea     (Offset_0x012938), A3
                addq.w  #$02, A2
Offset_0x0126FA:
                move.w  $0008(A1), D4
                move.b  (A2)+, D1
                ext.w   D1
                andi.b  #$01, D6
                beq.s   Offset_0x01270A
                neg.w   D1
Offset_0x01270A:
                add.w   D1, D4
                move.w  $000C(A1), D5
                move.b  (A2)+, D1
                ext.w   D1
                add.w   D1, D5
                moveq   #$00, D0
                move.b  $001A(A0), D0
                addq.b  #$06, D0
                cmpi.b  #$78, D0
                bcs.s   Offset_0x012726
                moveq   #$00, D0
Offset_0x012726:
                move.b  D0, $001A(A0)
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                lea     $00(A3, D0), A3
                lea     $0010(A0), A2
                moveq   #$00, D0
                moveq   #$05, D1
Offset_0x01273C:                
                move.b  (A3)+, D0
                move.b  (A3)+, D2
                ext.w   D2
                andi.b  #$01, D6
                beq.s   Offset_0x01274A
                neg.w   D2
Offset_0x01274A:
                add.w   D4, D2
                move.b  (A3)+, D3
                ext.w   D3
                add.w   D5, D3
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                addq.w  #$01, A2
                move.b  D0, (A2)+
                dbra    D1, Offset_0x01273C
                move.w  $0008(A1), D4
                move.w  $000C(A1), D5
                moveq   #$00, D0
                move.b  $0004(A0), D0
                addq.b  #$06, D0
                cmpi.b  #$A2, D0
                bcs.s   Offset_0x012776
                moveq   #$00, D0
Offset_0x012776:
                move.b  D0, $0004(A0)
                lea     (Offset_0x012AA0), A3
                lea     $00(A3, D0), A3
                moveq   #$01, D1
Offset_0x012786:                
                move.b  (A3)+, D0
                move.b  (A3)+, D2
                ext.w   D2
                andi.b  #$01, D6
                beq.s   Offset_0x012794
                neg.w   D2
Offset_0x012794:
                add.w   D4, D2
                move.b  (A3)+, D3
                ext.w   D3
                add.w   D5, D3
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                addq.w  #$01, A2
                move.b  D0, (A2)+
                dbra    D1, Offset_0x012786
                move.w  #$0080, D0
                bra     DisplaySprite_Param     ; Offset_0x00D3FE  
Offset_0x0127B0:
                dc.w    $0000, $0000, $00F8, $00F0, $04F0, $04E0, $00F8, $00F0
                dc.w    $0000, $0000, $0008, $0010, $0410, $0420, $0008, $0010  
Offset_0x0127D0:
                dc.b    $02, $F8, $F9, $05, $E5, $F9, $04, $E6, $08, $02, $E8, $FD, $00, $00, $00, $00
                dc.b    $00, $00, $03, $F7, $F9, $02, $F8, $07, $06, $E4, $F9, $05, $E5, $08, $03, $E7
                dc.b    $FD, $00, $00, $00, $04, $F6, $F9, $03, $F7, $07, $05, $E3, $FA, $06, $E4, $09
                dc.b    $04, $E6, $FC, $00, $00, $00, $05, $F5, $F9, $04, $F6, $08, $04, $E2, $FB, $05
                dc.b    $E3, $09, $05, $E5, $FC, $00, $00, $00, $06, $F4, $F9, $05, $F5, $08, $02, $F8
                dc.b    $FD, $03, $E1, $FC, $04, $E2, $0A, $06, $E4, $FB, $05, $F3, $FA, $06, $F4, $09
                dc.b    $03, $F7, $FD, $02, $E0, $FD, $03, $E1, $0A, $05, $E3, $FB, $04, $F2, $FB, $05
                dc.b    $F3, $09, $04, $F6, $FC, $01, $DF, $00, $02, $E0, $0B, $04, $E2, $FA, $03, $F1
                dc.b    $FC, $04, $F2, $0A, $05, $F5, $FC, $02, $F8, $02, $01, $DF, $0B, $03, $E1, $FA
                dc.b    $02, $F0, $FD, $03, $F1, $0A, $06, $F4, $FB, $03, $F7, $02, $02, $E0, $FA, $00
                dc.b    $00, $00, $01, $EF, $00, $02, $F0, $0B, $05, $F3, $FB, $04, $F6, $03, $01, $DF
                dc.b    $FA, $00, $00, $00, $01, $EE, $00, $01, $EF, $0B, $04, $F2, $FA, $05, $F5, $03
                dc.b    $02, $F8, $0E, $00, $00, $00, $01, $ED, $01, $01, $EE, $0C, $03, $F1, $FA, $06
                dc.b    $F4, $03, $03, $F7, $0E, $00, $00, $00, $01, $ED, $03, $01, $ED, $0D, $02, $F0
                dc.b    $FA, $05, $F3, $02, $04, $F6, $0D, $00, $00, $00, $01, $EC, $05, $01, $EC, $0D
                dc.b    $01, $EF, $FA, $04, $F2, $02, $05, $F5, $0D, $02, $F8, $F5, $01, $EB, $07, $01
                dc.b    $EB, $0D, $01, $EE, $F9, $03, $F1, $02, $06, $F4, $0C, $03, $F7, $F5, $01, $EA
                dc.b    $08, $01, $EA, $0D, $01, $ED, $F8, $02, $F0, $01, $05, $F3, $0C, $04, $F6, $F5
                dc.b    $01, $E9, $09, $01, $E9, $0D, $01, $EC, $F8, $01, $EF, $01, $04, $F2, $0B, $05
                dc.b    $F5, $F5, $01, $EB, $F7, $01, $EE, $00, $03, $F1, $0A, $05, $F4, $F6, $02, $E8
                dc.b    $F9, $00, $00, $00, $01, $EA, $F7, $01, $ED, $00, $02, $F0, $0A, $04, $F3, $F6
                dc.b    $03, $E7, $F9, $02, $E8, $07, $01, $E9, $F6, $01, $EC, $00, $01, $EF, $09, $03
                dc.b    $F2, $F6, $04, $E6, $F9, $03, $E7, $07    
Offset_0x012938:
                dc.b    $01, $E6, $00, $01, $E7, $0B, $04, $EA, $FA, $05, $ED, $03, $02, $F0, $0E, $00
                dc.b    $00, $00, $01, $E5, $01, $01, $E6, $0C, $03, $E9, $FA, $06, $EC, $03, $03, $F1
                dc.b    $0E, $00, $00, $00, $01, $E5, $03, $01, $E5, $03, $02, $E8, $FA, $05, $EB, $02
                dc.b    $04, $EE, $0D, $00, $00, $00, $01, $E4, $05, $01, $E4, $0D, $01, $E7, $FA, $04
                dc.b    $EA, $02, $05, $ED, $0D, $02, $F0, $F5, $01, $E3, $07, $01, $E3, $0D, $01, $E6
                dc.b    $F9, $03, $E9, $02, $06, $EC, $0C, $03, $EF, $F5, $01, $E2, $08, $01, $E2, $0D
                dc.b    $01, $E5, $F8, $02, $E8, $01, $05, $EB, $0C, $04, $EE, $F5, $01, $E1, $09, $01
                dc.b    $E1, $0D, $01, $E4, $F8, $01, $E7, $01, $04, $EA, $0B, $05, $ED, $F5, $01, $E3
                dc.b    $F7, $01, $E6, $00, $03, $E9, $0A, $05, $EC, $F6, $02, $E8, $02, $00, $00, $00
                dc.b    $01, $E2, $F7, $01, $E5, $00, $02, $E8, $0A, $04, $EB, $F6, $03, $E7, $02, $02
                dc.b    $E8, $0E, $01, $E1, $F6, $01, $E4, $00, $01, $E7, $09, $03, $EA, $F6, $04, $E6
                dc.b    $03, $03, $E7, $0E, $02, $F0, $F9, $05, $E5, $03, $04, $E6, $0D, $02, $E8, $F5
                dc.b    $00, $00, $00, $00, $00, $00, $03, $EF, $F9, $02, $F0, $07, $06, $E4, $03, $05
                dc.b    $E5, $0D, $03, $E7, $F5, $00, $00, $00, $04, $EE, $F9, $03, $EF, $07, $05, $E3
                dc.b    $02, $06, $E4, $0C, $04, $E6, $F5, $00, $00, $00, $05, $ED, $F9, $04, $EE, $08
                dc.b    $04, $E2, $02, $05, $E3, $0C, $05, $E5, $F5, $00, $00, $00, $06, $EC, $F9, $05
                dc.b    $ED, $08, $02, $F0, $FD, $03, $E1, $02, $04, $E2, $0B, $06, $E4, $F6, $05, $EB
                dc.b    $FA, $06, $EC, $09, $03, $EF, $FD, $02, $E0, $01, $03, $E1, $0A, $05, $E3, $F6
                dc.b    $04, $EA, $FB, $05, $EB, $09, $04, $EE, $FD, $01, $DF, $01, $02, $E0, $0A, $04
                dc.b    $E2, $F6, $03, $E9, $FC, $04, $EA, $0A, $05, $ED, $FC, $02, $F0, $02, $01, $DF
                dc.b    $09, $03, $E1, $F7, $02, $E8, $FD, $03, $E9, $0A, $06, $EC, $FB, $03, $EF, $02
                dc.b    $02, $E0, $F7, $00, $00, $00, $01, $E7, $00, $02, $E8, $0B, $05, $EB, $FB, $04
                dc.b    $EE, $03, $01, $DF, $F8, $00, $00, $00      
Offset_0x012AA0:
                dc.b    $04, $08, $09, $04, $FC, $01, $05, $08, $09, $05, $FC, $01, $06, $08, $09, $06
                dc.b    $FC, $01, $07, $08, $09, $07, $FC, $01, $08, $08, $09, $08, $FC, $01, $07, $08
                dc.b    $09, $07, $FC, $01, $06, $08, $09, $06, $FC, $01, $05, $08, $09, $05, $FC, $01
                dc.b    $04, $08, $09, $04, $FC, $01, $04, $F9, $F7, $04, $0B, $FC, $05, $F9, $F7, $05
                dc.b    $0B, $FC, $06, $F9, $F7, $06, $0B, $FC, $07, $F9, $F7, $07, $0B, $FC, $08, $F9
                dc.b    $F7, $08, $0B, $FC, $07, $F9, $F7, $07, $0B, $FC, $06, $F9, $F7, $06, $0B, $FC
                dc.b    $05, $F9, $F7, $05, $0B, $FC, $04, $F9, $F7, $04, $0B, $FC, $04, $03, $F1, $04
                dc.b    $F4, $09, $05, $03, $F1, $05, $F4, $09, $06, $03, $F1, $06, $F4, $09, $07, $03
                dc.b    $F1, $07, $F4, $09, $08, $03, $F1, $08, $F4, $09, $07, $03, $F1, $07, $F4, $09
                dc.b    $06, $03, $F1, $06, $F4, $09, $05, $03, $F1, $05, $F4, $09, $04, $03, $F1, $04
                dc.b    $F4, $09                                                         
;=============================================================================== 
; Object 0x35 - 
; [ End ]
;===============================================================================       

;=============================================================================== 
; Object 0x08 - 
; [ Begin ]
;===============================================================================       
Obj_0x08_Water_Splash: ; Offset_0x012B42:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x012B50(PC, D0), D1
                jmp     Offset_0x012B50(PC, D1)
Offset_0x012B50:
                dc.w    Offset_0x012B56-Offset_0x012B50
                dc.w    Offset_0x012B84-Offset_0x012B50
                dc.w    J_DeleteObject_04-Offset_0x012B50 ; Offset_0x012B9C-...
Offset_0x012B56:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x08_Mappings, $0004(A0) ; Offset_0x012CF4
                ori.b   #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$10, $0019(A0)
                move.w  #$449C, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.w  ($FFFFB008).w, $0008(A0)
Offset_0x012B84:
                move.w  ($FFFFF646).w, $000C(A0)
                lea     (Offset_0x012CEC), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_04: ; Offset_0x012B9C:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x012BA2:
                dc.w    Offset_0x012BA4-Offset_0x012BA2
Offset_0x012BA4:
                dc.b    $00, $05, $00, $05, $01, $05, $02, $05, $03, $05, $04, $FF
Offset_0x012BB0:
                dc.w    Offset_0x012BBC-Offset_0x012BB0
                dc.w    Offset_0x012BDE-Offset_0x012BB0
                dc.w    Offset_0x012C00-Offset_0x012BB0
                dc.w    Offset_0x012C22-Offset_0x012BB0
                dc.w    Offset_0x012C44-Offset_0x012BB0
                dc.w    Offset_0x012C66-Offset_0x012BB0
Offset_0x012BBC:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF0, $F0050800, $08000000
                dc.l    $00051000, $1000FFF0, $00051800, $18000000
Offset_0x012BDE:
                dc.w    $0004
                dc.l    $F0050004, $0002FFF0, $F0050804, $08020000
                dc.l    $00051004, $1002FFF0, $00051804, $18020000
Offset_0x012C00:
                dc.w    $0004
                dc.l    $F0050008, $0004FFF0, $F0050808, $08040000
                dc.l    $00051008, $1004FFF0, $00051808, $18040000
Offset_0x012C22:
                dc.w    $0004
                dc.l    $F005000C, $0006FFF0, $F005080C, $08060000
                dc.l    $0005100C, $1006FFF0, $0005180C, $18060000
Offset_0x012C44:
                dc.w    $0004
                dc.l    $F0050010, $0008FFF0, $F0050810, $08080000
                dc.l    $00051010, $1008FFF0, $00051810, $18080000
Offset_0x012C66:
                dc.w    $0004
                dc.l    $E00B0014, $000AFFE8, $E00B0814, $080A0000
                dc.l    $000B1014, $100AFFE8, $000B1814, $180A0000
Offset_0x012C88:
                dc.w    Offset_0x012C9A-Offset_0x012C88
                dc.w    Offset_0x012C9C-Offset_0x012C88
                dc.w    Offset_0x012CA6-Offset_0x012C88
                dc.w    Offset_0x012CB0-Offset_0x012C88
                dc.w    Offset_0x012CBA-Offset_0x012C88
                dc.w    Offset_0x012CC4-Offset_0x012C88
                dc.w    Offset_0x012CCE-Offset_0x012C88
                dc.w    Offset_0x012CD8-Offset_0x012C88
                dc.w    Offset_0x012CE2-Offset_0x012C88
Offset_0x012C9A:
                dc.w    $0000
Offset_0x012C9C:
                dc.w    $0001
                dc.l    $F8010000, $0000FFFC
Offset_0x012CA6:
                dc.w    $0001
                dc.l    $F8010002, $0001FFFC
Offset_0x012CB0:
                dc.w    $0001
                dc.l    $F8010004, $0002FFFC
Offset_0x012CBA:
                dc.w    $0001
                dc.l    $F8010006, $0003FFFC
Offset_0x012CC4:
                dc.w    $0001
                dc.l    $F8010008, $0004FFFC
Offset_0x012CCE:
                dc.w    $0001
                dc.l    $F805000A, $0005FFF8
Offset_0x012CD8:
                dc.w    $0001
                dc.l    $F805000E, $0007FFF8
Offset_0x012CE2:
                dc.w    $0001
                dc.l    $F00F0012, $0009FFF0
Offset_0x012CEC:                
                dc.w    Offset_0x012CEE-Offset_0x012CEC
Offset_0x012CEE:
                dc.b    $04, $00, $01, $02, $FC, $00  
Obj_0x08_Mappings:                 
Offset_0x012CF4:
                dc.w    Offset_0x012CFA-Offset_0x012CF4
                dc.w    Offset_0x012D0C-Offset_0x012CF4
                dc.w    Offset_0x012D1E-Offset_0x012CF4
Offset_0x012CFA:
                dc.w    $0002
                dc.l    $F204006D, $0036FFF8, $FA0C006F, $0037FFF0
Offset_0x012D0C:
                dc.w    $0002
                dc.l    $E2000073, $0039FFF8, $EA0E0074, $003AFFF0
Offset_0x012D1E:
                dc.w    $0001
                dc.l    $E20F0080, $0040FFF0
;=============================================================================== 
; Object 0x08 - 
; [ End ]
;===============================================================================

;=============================================================================== 
; Sub Routine Sonic_AnglePos
; [ Begin ]                         
;===============================================================================        
Sonic_AnglePos: ; Offset_0x012D28:
                move.l  #$FFFFD000, ($FFFFF796).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   Offset_0x012D40
                move.l  #$FFFFD600, ($FFFFF796).w
Offset_0x012D40:
                move.b  $003E(A0), D5
                btst    #$03, $0022(A0)
                beq.s   Offset_0x012D58
                moveq   #$00, D0
                move.b  D0, ($FFFFF768).w
                move.b  D0, ($FFFFF76A).w
                rts
Offset_0x012D58:
                moveq   #$03, D0
                move.b  D0, ($FFFFF768).w
                move.b  D0, ($FFFFF76A).w
                move.b  $0026(A0), D0
                addi.b  #$20, D0
                bpl.s   Offset_0x012D7A
                move.b  $0026(A0), D0
                bpl.s   Offset_0x012D74
                subq.b  #$01, D0
Offset_0x012D74:
                addi.b  #$20, D0
                bra.s   Offset_0x012D86
Offset_0x012D7A:
                move.b  $0026(A0), D0
                bpl.s   Offset_0x012D82
                addq.b  #$01, D0
Offset_0x012D82:
                addi.b  #$1F, D0
Offset_0x012D86:
                andi.b  #$C0, D0
                cmpi.b  #$40, D0
                beq     Sonic_WalkVertL         ; Offset_0x012FDC
                cmpi.b  #$80, D0
                beq     Sonic_WalkCeiling       ; Offset_0x012F2E
                cmpi.b  #$C0, D0
                beq     Sonic_WalkVertR         ; Offset_0x012E86
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     ($FFFFF768).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindFloor               ; Offset_0x0132C4
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0017(A0), D0
                ext.w   D0
                neg.w   D0
                add.w   D0, D3
                lea     ($FFFFF76A).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindFloor               ; Offset_0x0132C4
                move.w  (A7)+, D0
                bsr     Sonic_Angle             ; Offset_0x012E4A
                tst.w   D1
                beq.s   Offset_0x012E10
                bpl.s   Offset_0x012E12
                cmpi.w  #$FFF2, D1
                blt.s   Offset_0x012E10
                add.w   D1, $000C(A0)
Offset_0x012E10:
                rts
Offset_0x012E12:
                move.b  $0010(A0), D0
                bpl.s   Offset_0x012E1A
                neg.b   D0
Offset_0x012E1A:
                addq.b  #$04, D0
                cmpi.b  #$0E, D0
                bcs.s   Offset_0x012E26
                move.b  #$0E, D0
Offset_0x012E26:
                cmp.b   D0, D1
                bgt.s   Offset_0x012E30
Offset_0x012E2A:
                add.w   D1, $000C(A0)
                rts
Offset_0x012E30:
                tst.b   $0038(A0)
                bne.s   Offset_0x012E2A 
                bset    #$01, $0022(A0)
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
                rts
                
;=============================================================================== 
; Sub Routine Sonic_Angle
; [ Begin ]                         
;===============================================================================                   
Sonic_Angle: ; Offset_0x012E4A:
                move.b  ($FFFFF76A).w, D2
                cmp.w   D0, D1
                ble.s   Offset_0x012E58
                move.b  ($FFFFF768).w, D2
                move.w  D0, D1
Offset_0x012E58:
                btst    #$00, D2
                bne.s   Offset_0x012E74
                move.b  D2, D0
                sub.b   $0026(A0), D0
                bpl.s   Offset_0x012E68
                neg.b   D0
Offset_0x012E68:
                cmpi.b  #$20, D0
                bcc.s   Offset_0x012E74
                move.b  D2, $0026(A0)
                rts
Offset_0x012E74:
                move.b  $0026(A0), D2
                addi.b  #$20, D2
                andi.b  #$C0, D2
                move.b  D2, $0026(A0)
                rts    
;===============================================================================                
Sonic_WalkVertR: ; Offset_0x012E86:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                neg.w   D0
                add.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     ($FFFFF768).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindWall                ; Offset_0x01349E
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     ($FFFFF76A).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindWall                ; Offset_0x01349E
                move.w  (A7)+, D0
                bsr     Sonic_Angle             ; Offset_0x012E4A                
                tst.w   D1
                beq.s   Offset_0x012EF4
                bpl.s   Offset_0x012EF6
                cmpi.w  #$FFF2, D1
                blt.s   Offset_0x012EF4                 
                add.w   D1, $0008(A0)
Offset_0x012EF4:
                rts
Offset_0x012EF6:
                move.b  $0012(A0), D0
                bpl.s   Offset_0x012EFE
                neg.b   D0  
Offset_0x012EFE:
                addq.b  #$04, D0
                cmpi.b  #$0E, D0
                bcs.s   Offset_0x012F0A
                move.b  #$0E, D0
Offset_0x012F0A:                
                cmp.b   D0, D1
                bgt.s   Offset_0x012F14
Offset_0x012F0E:
                add.w   D1, $0008(A0)
                rts
Offset_0x012F14:
                tst.b   $0038(A0)
                bne.s   Offset_0x012F0E
                bset    #$01, $0022(A0)
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
                rts
;===============================================================================                
Sonic_WalkCeiling: ; Offset_0x012F2E:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D2
                eori.w  #$000F, D2
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     ($FFFFF768).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                bsr     FindFloor               ; Offset_0x0132C4
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D2
                eori.w  #$000F, D2
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D3
                lea     ($FFFFF76A).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                bsr     FindFloor               ; Offset_0x0132C4
                move.w  (A7)+, D0
                bsr     Sonic_Angle             ; Offset_0x012E4A
                tst.w   D1
                beq.s   Offset_0x012FA2
                bpl.s   Offset_0x012FA4
                cmpi.w  #$FFF2, D1
                blt.s   Offset_0x012FA2
                sub.w   D1, $000C(A0)
Offset_0x012FA2:
                rts
Offset_0x012FA4:
                move.b  $0010(A0), D0
                bpl.s   Offset_0x012FAC
                neg.b   D0
Offset_0x012FAC:
                addq.b  #$04, D0
                cmpi.b  #$0E, D0
                bcs.s   Offset_0x012FB8
                move.b  #$0E, D0
Offset_0x012FB8:
                cmp.b   D0, D1
                bgt.s   Offset_0x012FC2
Offset_0x012FBC:
                sub.w   D1, $000C(A0)
                rts
Offset_0x012FC2:
                tst.b   $0038(A0)
                bne.s   Offset_0x012FBC   
                bset    #$01, $0022(A0)
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
                rts
;===============================================================================                
Sonic_WalkVertL: ; Offset_0x012FDC:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D3
                eori.w  #$000F, D3
                lea     ($FFFFF768).w, A4
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                bsr     FindWall                ; Offset_0x01349E
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D3
                eori.w  #$000F, D3
                lea     ($FFFFF76A).w, A4
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                bsr     FindWall                ; Offset_0x01349E
                move.w  (A7)+, D0
                bsr     Sonic_Angle             ; Offset_0x012E4A
                tst.w   D1
                beq.s   Offset_0x013050
                bpl.s   Offset_0x013052
                cmpi.w  #$FFF2, D1
                blt.s   Offset_0x013050
                sub.w   D1, $0008(A0)
Offset_0x013050:
                rts
Offset_0x013052:
                move.b  $0012(A0), D0
                bpl.s   Offset_0x01305A
                neg.b   D0
Offset_0x01305A:
                addq.b  #$04, D0
                cmpi.b  #$0E, D0
                bcs.s   Offset_0x013066
                move.b  #$0E, D0
Offset_0x013066:                
                cmp.b   D0, D1
                bgt.s   Offset_0x013070
Offset_0x01306A:
                sub.w   D1, $0008(A0)
                
                rts
Offset_0x013070:
                tst.b   $0038(A0)
                bne.s   Offset_0x01306A
                bset    #$01, $0022(A0)  
                bclr    #$05, $0022(A0)
                move.b  #$01, $001D(A0)
                rts
                
;=============================================================================== 
; Sub Routine Floor_ChkTile
; [ Begin ]                         
;===============================================================================                  
Floor_ChkTile: ; Offset_0x01308A:
                move.w  D2, D0
                add.w   D0, D0
                andi.w  #$0F00, D0
                move.w  D3, D1
                lsr.w   #$03, D1
                move.w  D1, D4
                lsr.w   #$04, D1
                andi.w  #$007F, D1
                add.w   D1, D0
                moveq   #$FFFFFFFF, D1
                clr.w   D1
                lea     ($FFFF8000).w, A1
                move.b  $00(A1, D0), D1
                add.w   D1, D1
                move.w  Offset_0x0130C4(PC, D1), D1
                move.w  D2, D0
                andi.w  #$0070, D0
                add.w   D0, D1
                andi.w  #$000E, D4
                add.w   D4, D1
                move.l  D1, A1
                rts
Offset_0x0130C4:
                dc.w    $0000, $0080, $0100, $0180, $0200, $0280, $0300, $0380
                dc.w    $0400, $0480, $0500, $0580, $0600, $0680, $0700, $0780
                dc.w    $0800, $0880, $0900, $0980, $0A00, $0A80, $0B00, $0B80
                dc.w    $0C00, $0C80, $0D00, $0D80, $0E00, $0E80, $0F00, $0F80
                dc.w    $1000, $1080, $1100, $1180, $1200, $1280, $1300, $1380
                dc.w    $1400, $1480, $1500, $1580, $1600, $1680, $1700, $1780
                dc.w    $1800, $1880, $1900, $1980, $1A00, $1A80, $1B00, $1B80
                dc.w    $1C00, $1C80, $1D00, $1D80, $1E00, $1E80, $1F00, $1F80
                dc.w    $2000, $2080, $2100, $2180, $2200, $2280, $2300, $2380
                dc.w    $2400, $2480, $2500, $2580, $2600, $2680, $2700, $2780
                dc.w    $2800, $2880, $2900, $2980, $2A00, $2A80, $2B00, $2B80
                dc.w    $2C00, $2C80, $2D00, $2D80, $2E00, $2E80, $2F00, $2F80
                dc.w    $3000, $3080, $3100, $3180, $3200, $3280, $3300, $3380
                dc.w    $3400, $3480, $3500, $3580, $3600, $3680, $3700, $3780
                dc.w    $3800, $3880, $3900, $3980, $3A00, $3A80, $3B00, $3B80
                dc.w    $3C00, $3C80, $3D00, $3D80, $3E00, $3E80, $3F00, $3F80
                dc.w    $4000, $4080, $4100, $4180, $4200, $4280, $4300, $4380
                dc.w    $4400, $4480, $4500, $4580, $4600, $4680, $4700, $4780
                dc.w    $4800, $4880, $4900, $4980, $4A00, $4A80, $4B00, $4B80
                dc.w    $4C00, $4C80, $4D00, $4D80, $4E00, $4E80, $4F00, $4F80
                dc.w    $5000, $5080, $5100, $5180, $5200, $5280, $5300, $5380
                dc.w    $5400, $5480, $5500, $5580, $5600, $5680, $5700, $5780
                dc.w    $5800, $5880, $5900, $5980, $5A00, $5A80, $5B00, $5B80
                dc.w    $5C00, $5C80, $5D00, $5D80, $5E00, $5E80, $5F00, $5F80
                dc.w    $6000, $6080, $6100, $6180, $6200, $6280, $6300, $6380
                dc.w    $6400, $6480, $6500, $6580, $6600, $6680, $6700, $6780
                dc.w    $6800, $6880, $6900, $6980, $6A00, $6A80, $6B00, $6B80
                dc.w    $6C00, $6C80, $6D00, $6D80, $6E00, $6E80, $6F00, $6F80
                dc.w    $7000, $7080, $7100, $7180, $7200, $7280, $7300, $7380
                dc.w    $7400, $7480, $7500, $7580, $7600, $7680, $7700, $7780
                dc.w    $7800, $7880, $7900, $7980, $7A00, $7A80, $7B00, $7B80
                dc.w    $7C00, $7C80, $7D00, $7D80, $7E00, $7E80, $7F00, $7F80
                
;=============================================================================== 
; Sub Routine FindFloor
; [ Begin ]                         
;===============================================================================                  
FindFloor: ; Offset_0x0132C4:                
                bsr     Floor_ChkTile           ; Offset_0x01308A
                move.w  (A1), D0
                move.w  D0, D4
                andi.w  #$03FF, D0
                beq.s   Offset_0x0132D6
                btst    D5, D4
                bne.s   Offset_0x0132E4
Offset_0x0132D6:
                add.w   A3, D2
                bsr     FindFloor2              ; Offset_0x01336A
                sub.w   A3, D2
                addi.w  #$0010, D1
                rts
Offset_0x0132E4:
                move.l  ($FFFFF796).w, A2
                add.w   D0, D0
                move.w  $00(A2, D0), D0
                beq.s   Offset_0x0132D6
                lea     (AngleMap), A2          ; Offset_0x02D1EA
                move.b  $00(A2, D0), (A4)
                lsl.w   #$04, D0
                move.w  D3, D1
                btst    #$0A, D4
                beq.s   Offset_0x013308
                not.w   D1
                neg.b   (A4)
Offset_0x013308:
                btst    #$0B, D4
                beq.s   Offset_0x013318
                addi.b  #$40, (A4)
                neg.b   (A4)
                subi.b  #$40, (A4)                
Offset_0x013318:
                andi.w  #$000F, D1
                add.w   D0, D1
                lea     (Colision_Array_1), A2  ; Offset_0x02D2EA
                move.b  $00(A2, D1), D0
                ext.w   D0
                eor.w   D6, D4
                btst    #$0B, D4
                beq.s   Offset_0x013334
                neg.w   D0
Offset_0x013334:
                tst.w   D0
                beq.s   Offset_0x0132D6
                bmi.s   Offset_0x013350
                cmpi.b  #$10, D0
                beq.s   Offset_0x01335C
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                move.w  #$000F, D1
                sub.w   D0, D1
                rts
Offset_0x013350:
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                bpl     Offset_0x0132D6
Offset_0x01335C:                
                sub.w   A3, D2
                bsr     FindFloor2              ; Offset_0x01336A
                add.w   A3, D2
                subi.w  #$0010, D1
                rts
;=============================================================================== 
; Sub Routine FindFloor
; [ End ]                         
;=============================================================================== 

;=============================================================================== 
; Sub Routine FindFloor2
; [ Begin ]                         
;===============================================================================                 
FindFloor2: ; Offset_0x01336A:
                bsr     Floor_ChkTile           ; Offset_0x01308A
                move.w  (A1), D0
                move.w  D0, D4
                andi.w  #$03FF, D0
                beq.s   Offset_0x01337C
                btst    D5, D4
                bne.s   Offset_0x01338A
Offset_0x01337C:
                move.w  #$000F, D1
                move.w  D2, D0
                andi.w  #$000F, D0
                sub.w   D0, D1
                rts
Offset_0x01338A:
                move.l  ($FFFFF796).w, A2
                add.w   D0, D0
                move.w  $00(A2, D0), D0
                beq.s   Offset_0x01337C
                lea     (AngleMap), A2          ; Offset_0x02D1EA
                move.b  $00(A2, D0), (A4)
                lsl.w   #$04, D0
                move.w  D3, D1
                btst    #$0A, D4
                beq.s   Offset_0x0133AE
                not.w   D1
                neg.b   (A4)
Offset_0x0133AE:
                btst    #$0B, D4
                beq.s   Offset_0x0133BE
                addi.b  #$40, (A4)
                neg.b   (A4)
                subi.b  #$40, (A4)
Offset_0x0133BE:
                andi.w  #$000F, D1
                add.w   D0, D1
                lea     (Colision_Array_1), A2  ; Offset_0x02D2EA
                move.b  $00(A2, D1), D0                  
                ext.w   D0
                eor.w   D6, D4
                btst    #$0B, D4
                beq.s   Offset_0x0133DA
                neg.w   D0                 
Offset_0x0133DA:
                tst.w   D0
                beq.s   Offset_0x01337C 
                bmi.s   Offset_0x0133F0
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                move.w  #$000F, D1
                sub.w   D0, D1
                rts
Offset_0x0133F0:
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                bpl     Offset_0x01337C
                not.w  d1
                rts
Offset_0x013400:
                bsr     Floor_ChkTile           ; Offset_0x01308A
                move.w  (A1), D0
                move.w  D0, D4
                andi.w  #$03FF, D0
                beq.s   Offset_0x013412
                btst    D5, D4
                bne.s   Offset_0x013418
Offset_0x013412:
                move.w  #$0010, D1
                rts
Offset_0x013418:
                move.l  ($FFFFF796).w, A2
                add.w   D0, D0
                move.w  $00(A2, D0), D0
                beq.s   Offset_0x013412
                lea     (AngleMap), A2          ; Offset_0x02D1EA
                move.b  $00(A2, D0), (A4)
                lsl.w   #$04, D0
                move.w  D3, D1
                btst    #$0A, D4
                beq.s   Offset_0x01343C
                not.w   D1
                neg.b   (A4)
Offset_0x01343C:
                btst    #$0B, D4
                beq.s   Offset_0x01344C
                addi.b  #$40, (A4)
                neg.b   (A4)
                subi.b  #$40, (A4)
Offset_0x01344C:
                andi.w  #$000F, D1
                add.w   D0, D1
                lea     (Colision_Array_1), A2  ; Offset_0x02D2EA
                move.b  $00(A2, D1), D0
                ext.w   D0
                eor.w   D6, D4
                btst    #$0B, D4
                beq.s   Offset_0x013468
                neg.w   D0
Offset_0x013468:
                tst.w   D0
                beq.s   Offset_0x013412
                bmi.s   Offset_0x013484
                cmpi.b  #$10, D0
                beq.s   Offset_0x013490
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                move.w  #$000F, D1
                sub.w   D0, D1
                rts
Offset_0x013484:
                move.w  D2, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                bpl     Offset_0x013412
Offset_0x013490:
                sub.w   A3, D2
                bsr     FindFloor2              ; Offset_0x01336A
                add.w   A3, D2
                subi.w  #$0010, D1
                rts
;=============================================================================== 
; Sub Routine FindFloor2
; [ End ]                         
;===============================================================================                 
            
;=============================================================================== 
; Sub Routine FindWall
; [ Begin ]                         
;===============================================================================                  
FindWall: ; Offset_0x01349E:
                bsr     Floor_ChkTile           ; Offset_0x01308A
                move.w  (A1), D0
                move.w  D0, D4
                andi.w  #$03FF, D0
                beq.s   Offset_0x0134B0
                btst    D5, D4
                bne.s   Offset_0x0134BE
Offset_0x0134B0:
                add.w   A3, D3
                bsr     FindWall2               ; Offset_0x013544
                sub.w   A3, D3
                addi.w  #$0010, D1
                rts
Offset_0x0134BE:
                move.l  ($FFFFF796).w, A2
                add.w   D0, D0
                move.w  $00(A2, D0), D0
                beq.s   Offset_0x0134B0
                lea     (AngleMap), A2          ; Offset_0x02D1EA
                move.b  $00(A2, D0), (A4)
                lsl.w   #$04, D0
                move.w  D2, D1
                btst    #$0B, D4
                beq.s   Offset_0x0134EA
                not.w   D1
                addi.b  #$40, (A4)
                neg.b   (A4)
                subi.b  #$40, (A4)
Offset_0x0134EA:
                btst    #$0A, D4
                beq.s   Offset_0x0134F2
                neg.b   (A4)
Offset_0x0134F2:
                andi.w  #$000F, D1
                add.w   D0, D1
                lea     (Colision_Array_2), A2  ; Offset_0x02E2EA
                move.b  $00(A2, D1), D0
                ext.w   D0
                eor.w   D6, D4
                btst    #$0A, D4
                beq.s   Offset_0x01350E
                neg.w   D0
Offset_0x01350E:
                tst.w   D0
                beq.s   Offset_0x0134B0
                bmi.s   Offset_0x01352A
                cmpi.b  #$10, D0
                beq.s   Offset_0x013536
                move.w  D3, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                move.w  #$000F, D1
                sub.w   D0, D1
                rts
Offset_0x01352A:
                move.w  D3, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                bpl     Offset_0x0134B0
Offset_0x013536:
                sub.w   A3, D3
                bsr     FindWall2               ; Offset_0x013544
                add.w   A3, D3
                subi.w  #$0010, D1
                rts
;=============================================================================== 
; Sub Routine FindWall
; [ End ]                         
;===============================================================================    

;=============================================================================== 
; Sub Routine FindWall2
; [ Begin ]                         
;===============================================================================                 
FindWall2: ; Offset_0x013544:
                bsr     Floor_ChkTile           ; Offset_0x01308A
                move.w  (A1), D0
                move.w  D0, D4
                andi.w  #$03FF, D0
                beq.s   Offset_0x013556
                btst    D5, D4
                bne.s   Offset_0x013564
Offset_0x013556:
                move.w  #$000F, D1
                move.w  D3, D0
                andi.w  #$000F, D0
                sub.w   D0, D1
                rts
Offset_0x013564:
                move.l  ($FFFFF796).w, A2
                add.w   D0, D0
                move.w  $00(A2, D0), D0
                beq.s   Offset_0x013556
                lea     (AngleMap), A2          ; Offset_0x02D1EA
                move.b  $00(A2, D0), (A4)
                lsl.w   #$04, D0
                move.w  D2, D1
                btst    #$0B, D4
                beq.s   Offset_0x013590
                not.w   D1
                addi.b  #$40, (A4)
                neg.b   (A4)
                subi.b  #$40, (A4)
Offset_0x013590:
                btst    #$0A, D4
                beq.s   Offset_0x013598
                neg.b   (A4)
Offset_0x013598:
                andi.w  #$000F, D1
                add.w   D0, D1
                lea     (Colision_Array_2), A2  ; Offset_0x02E2EA
                move.b  $00(A2, D1), D0
                ext.w   D0
                eor.w   D6, D4
                btst    #$0A, D4
                beq.s   Offset_0x0135B4
                neg.w   D0
Offset_0x0135B4:                
                tst.w   D0
                beq.s   Offset_0x013556
                bmi.s   Offset_0x0135CA
                move.w  D3, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                move.w  #$000F, D1
                sub.w   D0, D1
                rts
Offset_0x0135CA:
                move.w  D3, D1
                andi.w  #$000F, D1
                add.w   D1, D0
                bpl     Offset_0x013556
                not.w  d1
                rts
;=============================================================================== 
; Sub Routine FindWall2
; [ End ]                         
;===============================================================================  
                
Offset_0x0135DA:
                rts 
;===============================================================================                
; Offset_0x0135DC:
                lea     (Colision_Array_1), A1  ; Offset_0x02D2EA
                lea     (Colision_Array_1), A2  ; Offset_0x02D2EA
                move.w  #$00FF, D3
Offset_0x0135EC:                
                moveq   #$10, D5
                move.w  #$000F, D2
Offset_0x0135F2:                
                moveq   #$00, D4
                move.w  #$000F, D1
Offset_0x0135F8:                
                move.w  (A1)+, D0
                lsr.l   D5, D0
                addx.w  D4, D4
                dbra    D1, Offset_0x0135F8
                move.w  D4, (A2)+
                suba.w  #$0020, A1
                subq.w  #$01, D5
                dbra    D2, Offset_0x0135F2
                adda.w  #$0020, A1
                dbra    D3, Offset_0x0135EC
                lea     (Colision_Array_1), A1  ; Offset_0x02D2EA
                lea     (Colision_Array_2), A2  ; Offset_0x02E2EA
                bsr.s   Offset_0x013630
                lea     (Colision_Array_1), A1  ; Offset_0x02D2EA
                lea     (Colision_Array_1), A2  ; Offset_0x02D2EA
Offset_0x013630:                                
                move.w  #$0FFF, D3
Offset_0x013634:                
                moveq   #$00, D2
                move.w  #$000F, D1
                move.w  (A1)+, D0
                beq.s   Offset_0x013662
                bmi.s   Offset_0x01364C
Offset_0x013640:                
                lsr.w   #$01, D0
                bcc.s   Offset_0x013646
                addq.b  #$01, D2
Offset_0x013646:
                dbra    D1, Offset_0x013640
                bra.s   Offset_0x013664
Offset_0x01364C:
                cmpi.w  #$FFFF, D0
                beq.s   Offset_0x01365E
Offset_0x013652:                
                lsl.w   #$01, D0
                bcc.s   Offset_0x013658
                subq.b  #$01, D2
Offset_0x013658:
                dbra    D1, Offset_0x013652
                bra.s   Offset_0x013664
Offset_0x01365E:
                move.w  #$0010, D0
Offset_0x013662:
                move.w  D0, D2
Offset_0x013664:
                move.b  D2, (A2)+
                dbra    D3, Offset_0x013634
                rts
;=============================================================================== 
; Sub Routine Sonic_WalkSpeed
; [ Begin ]                         
;===============================================================================                                  
Sonic_WalkSpeed: ; Offset_0x01366C:
                move.l  #$FFFFD000, ($FFFFF796).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   Offset_0x013684
                move.l  #$FFFFD600, ($FFFFF796).w
Offset_0x013684:
                move.b  $003F(A0), D5
                move.l  $0008(A0), D3
                move.l  $000C(A0), D2
                move.w  $0010(A0), D1
                ext.l   D1
                asl.l   #$08, D1
                add.l   D1, D3
                move.w  $0012(A0), D1
                ext.l   D1
                asl.l   #$08, D1
                add.l   D1, D2
                swap.w  D2
                swap.w  D3
                move.b  D0, ($FFFFF768).w
                move.b  D0, ($FFFFF76A).w
                move.b  D0, D1
                addi.b  #$20, D0
                bpl.s   Offset_0x0136C4
                move.b  D1, D0
                bpl.s   Offset_0x0136BE
                subq.b  #$01, D0
Offset_0x0136BE:
                addi.b  #$20, D0
                bra.s   Offset_0x0136CE
Offset_0x0136C4:
                move.b  D1, D0
                bpl.s   Offset_0x0136CA
                addq.b  #$01, D0
Offset_0x0136CA:
                addi.b  #$1F, D0
Offset_0x0136CE:
                andi.b  #$C0, D0
                beq     Offset_0x0137CE
                cmpi.b  #$80, D0
                beq     Offset_0x013A3C
                andi.b  #$38, D1
                bne.s   Offset_0x0136E6
                addq.w  #$08, D2
Offset_0x0136E6:
                cmpi.b  #$40, D0
                beq     Offset_0x013B04
                bra     Offset_0x013982                    
Offset_0x0136F2:
                move.l  #$FFFFD000, ($FFFFF796).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   Offset_0x01370A
                move.l  #$FFFFD600, ($FFFFF796).w
Offset_0x01370A:
                move.b  $003F(A0), D5
                move.b  D0, ($FFFFF768).w
                move.b  D0, ($FFFFF76A).w
                addi.b  #$20, D0
                andi.b  #$C0, D0
                cmpi.b  #$40, D0
                beq     Offset_0x013A94
                cmpi.b  #$80, D0
                beq     Sonic_DontRunOnWalls    ; Offset_0x0139CC
                cmpi.b  #$C0, D0
                beq     Offset_0x01391A
Offset_0x013736:                
                move.l  #$FFFFD000, ($FFFFF796).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   Offset_0x01374E
                move.l  #$FFFFD600, ($FFFFF796).w
Offset_0x01374E:
                move.b  $003E(A0), D5
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     ($FFFFF768).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindFloor               ; Offset_0x0132C4
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D3
                lea     ($FFFFF76A).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindFloor               ; Offset_0x0132C4
                move.w  (A7)+, D0
                move.b  #$00, D2
Offset_0x0137AE:                
                move.b  ($FFFFF76A).w, D3
                cmp.w   D0, D1
                ble.s   Offset_0x0137BC
                move.b  ($FFFFF768).w, D3
                exg.l   D1, D0
Offset_0x0137BC:
                btst    #$00, D3
                beq.s   Offset_0x0137C4
                move.b  D2, D3
Offset_0x0137C4:
                rts
; Offset_0x0137C6:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3                
Offset_0x0137CE:
                addi.w  #$000A, D2
                lea     ($FFFFF768).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindFloor               ; Offset_0x0132C4
                move.b  #$00, D2
Offset_0x0137E6:                
                move.b  ($FFFFF768).w, D3
                btst    #$00, D3
                beq.s   Offset_0x0137F2
                move.b  D2, D3
Offset_0x0137F2:
                rts   
                
;=============================================================================== 
; Sub Routine Sonic_HitFloor
; [ Begin ]                         
;===============================================================================                               
Sonic_HitFloor: ; Offset_0x0137F4:
                move.w  $0008(A0), D3
                move.w  $000C(A0), D2
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.l  #$FFFFD000, ($FFFFF796).w
                cmpi.b  #$0C, $003E(A0)
                beq.s   Offset_0x01381E
                move.l  #$FFFFD600, ($FFFFF796).w
Offset_0x01381E:
                lea     ($FFFFF768).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                move.b  $003E(A0), D5
                bsr     FindFloor               ; Offset_0x0132C4
                move.b  ($FFFFF768).w, D3
                btst    #$00, D3
                beq.s   Offset_0x013844
                move.b  #$00, D3
Offset_0x013844:
                rts  
;=============================================================================== 
; Sub Routine Sonic_HitFloor
; [ End ]                         
;===============================================================================                  

;=============================================================================== 
; Sub Routine Sonic_HitFloor2
; [ Begin ]                         
;===============================================================================                 
Sonic_HitFloor2: ; Offset_0x013846:
                move.w  $0008(A1), D3
                move.w  $000C(A1), D2
                moveq   #$00, D0
                move.b  $0016(A1), D0
                ext.w   D0
                add.w   D0, D2
                move.l  #$FFFFD000, ($FFFFF796).w
                cmpi.b  #$0C, $003E(A1)
                beq.s   Offset_0x013870
                move.l  #$FFFFD600, ($FFFFF796).w
Offset_0x013870:
                lea     ($FFFFF768).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                move.b  $003E(A1), D5
                bsr     FindFloor               ; Offset_0x0132C4
                move.b  ($FFFFF768).w, D3
                btst    #$00, D3
                beq.s   Offset_0x013896
                move.b  #$00, D3
Offset_0x013896:
                rts
;=============================================================================== 
; Sub Routine Sonic_HitFloor2
; [ End ]                         
;===============================================================================   

;=============================================================================== 
; Sub Routine ObjHitFloor
; [ Begin ]                         
;===============================================================================                   
ObjHitFloor: ; Offset_0x013898:
                move.w  $0008(A0), D3
ObjHitFloor2: ; Offset_0x01389C:               
                move.w  $000C(A0), D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                lea     ($FFFFF768).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                moveq   #$0C, D5
                bsr     FindFloor               ; Offset_0x0132C4
                move.b  ($FFFFF768).w, D3
                btst    #$00, D3
                beq.s   Offset_0x0138CC
                move.b  #$00, D3
Offset_0x0138CC:
                rts 
;=============================================================================== 
; Sub Routine ObjHitFloor
; [ End ]                         
;===============================================================================  
                 
Offset_0x0138CE:
                move.w  $0008(A1), D3
                move.w  $000C(A1), D2
                move.b  $0016(A1), D0
                ext.w   D0
                add.w   D0, D2
                lea     ($FFFFF768).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                moveq   #$0C, D5
                bra     FindFloor               ; Offset_0x0132C4
Offset_0x0138F4:
                move.w  $0008(A0), D3
                move.w  $000C(A0), D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D2
                lea     ($FFFFF768).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                moveq   #$0C, D5
                bra     Offset_0x013400
;===============================================================================                
Offset_0x01391A:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     ($FFFFF768).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindWall                ; Offset_0x01349E
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     ($FFFFF76A).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindWall                ; Offset_0x01349E
                move.w  (A7)+, D0
                move.b  #$C0, D2
                bra     Offset_0x0137AE 
;===============================================================================                               
Offset_0x01397A:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3                
Offset_0x013982:
                addi.w  #$000A, D3
                lea     ($FFFFF768).w, A4
                move.w  #$0010, A3
                move.w  #$0000, D6
                bsr     FindWall                ; Offset_0x01349E
                move.b  #$C0, D2
                bra     Offset_0x0137E6 
                  
;=============================================================================== 
; Sub Routine ObjHitWallRight
; [ Begin ]                         
;===============================================================================                  
ObjHitWallRight: ; Offset_0x01399E:
                add.w   $0008(A0), D3
                move.w  $000C(A0), D2
                lea     ($FFFFF768).w, A4
                move.b  #$00, (A4)
                move.w  #$0010, A3
                move.w  #$0000, D6
                moveq   #$0D, D5
                bsr     FindWall                ; Offset_0x01349E
                move.b  ($FFFFF768).w, D3
                btst    #$00, D3
                beq.s   Offset_0x0139CA
                move.b  #$C0, D3
Offset_0x0139CA:
                rts
;=============================================================================== 
; Sub Routine ObjHitWallRight
; [ End ]                         
;===============================================================================                  
                
;=============================================================================== 
; Sub Routine Sonic_DontRunOnWalls
; [ Begin ]                         
;===============================================================================                  
Sonic_DontRunOnWalls: ; Offset_0x0139CC:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D2
                eori.w  #$000F, D2
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D3
                lea     ($FFFFF768).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                bsr     FindFloor               ; Offset_0x0132C4
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D2
                eori.w  #$000F, D2
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D3
                lea     ($FFFFF76A).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                bsr     FindFloor               ; Offset_0x0132C4
                move.w  (A7)+, D0
                move.b  #$80, D2
                bra     Offset_0x0137AE
;=============================================================================== 
; Sub Routine Sonic_DontRunOnWalls
; [ End ]                         
;===============================================================================               
              
;Offset_0x013A34:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
Offset_0x013A3C:
                subi.w  #$000A, D2
                eori.w  #$000F, D2
                lea     ($FFFFF768).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                bsr     FindFloor               ; Offset_0x0132C4
                move.b  #$80, D2
                bra     Offset_0x0137E6 
;===============================================================================                
; ObjHitCeiling ; Offset_0x013A5C:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D2
                eori.w  #$000F, D2
                lea     ($FFFFF768).w, A4
                move.w  #$FFF0, A3
                move.w  #$0800, D6
                moveq   #$0D, D5
                bsr     FindFloor               ; Offset_0x0132C4
                move.b  ($FFFFF768).w, D3
                btst    #$00, D3
                beq.s   Offset_0x013A92
                move.b  #$80, D3
Offset_0x013A92:
                rts
;===============================================================================                
Offset_0x013A94:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                sub.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D3
                eori.w  #$000F, D3
                lea     ($FFFFF768).w, A4
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                bsr     FindWall                ; Offset_0x01349E
                move.w  D1, -(A7)
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                moveq   #$00, D0
                move.b  $0017(A0), D0
                ext.w   D0
                add.w   D0, D2
                move.b  $0016(A0), D0
                ext.w   D0
                sub.w   D0, D3
                eori.w  #$000F, D3
                lea     ($FFFFF76A).w, A4
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                bsr     FindWall                ; Offset_0x01349E
                move.w  (A7)+, D0
                move.b  #$40, D2
                bra     Offset_0x0137AE   
                
;=============================================================================== 
; Sub Routine Sonic_HitWall
; [ Begin ]                         
;===============================================================================                   
Sonic_HitWall: ; Offset_0x013AFC:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3                
Offset_0x013B04:
                subi.w  #$000A, D3
                eori.w  #$000F, D3
                lea     ($FFFFF768).w, A4
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                bsr     FindWall                ; Offset_0x01349E
                move.b  #$40, D2
                bra     Offset_0x0137E6    
;===============================================================================                                             
ObjHitWallLeft: ; Offset_0x013B24:
                add.w   $0008(A0), D3
                move.w  $000C(A0), D2
                lea     ($FFFFF768).w, A4
                move.b  #$00, (A4)
                move.w  #$FFF0, A3
                move.w  #$0400, D6
                moveq   #$0D, D5
                bsr     FindWall                ; Offset_0x01349E
                move.b  ($FFFFF768).w, D3
                btst    #$00, D3
                beq.s   Offset_0x013B50
                move.b  #$40, D3
Offset_0x013B50:
                rts
                nop                             ; Filler
;=============================================================================== 
; Object 0x79 - Lamp Post
; [ Begin ]
;===============================================================================                      
Obj_0x79_Lamp_Post: ; Offset_0x013B54:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x013B68(PC, D0), D1
                jsr     Offset_0x013B68(PC, D1)
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
Offset_0x013B68:
                dc.w    Offset_0x013B6E-Offset_0x013B68
                dc.w    Offset_0x013BD0-Offset_0x013B68
                dc.w    Offset_0x013C58-Offset_0x013B68
Offset_0x013B6E:
                addq.b  #$02, $0024(A0)
                move.l  #Lamp_Post_Mappings, $0004(A0) ; Offset_0x013D8E
                move.w  #$047C, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$08, $0019(A0)
                move.b  #$05, $0018(A0)
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                bclr    #$07, $02(A2, D0)
                btst    #$00, $02(A2, D0)
                bne.s   Offset_0x013BC2
                move.b  ($FFFFFE30).w, D1
                andi.b  #$7F, D1
                move.b  $0028(A0), D2
                andi.b  #$7F, D2
                cmp.b   D2, D1
                bcs.s   Offset_0x013BD0
Offset_0x013BC2:
                bset    #$00, $02(A2, D0)
                move.b  #$04, $0024(A0)
                rts
Offset_0x013BD0:
                tst.w   ($FFFFFE08).w
                bne     Offset_0x013C56
                tst.b   ($FFFFB02A).w
                bmi     Offset_0x013C56
                move.b  ($FFFFFE30).w, D1
                andi.b  #$7F, D1
                move.b  $0028(A0), D2
                andi.b  #$7F, D2
                cmp.b   D2, D1
                bcs.s   Offset_0x013C0E
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                bset    #$00, $02(A2, D0)
                move.b  #$04, $0024(A0)
                bra     Offset_0x013C56
Offset_0x013C0E:
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                addi.w  #$0008, D0
                cmpi.w  #$0010, D0
                bcc     Offset_0x013C56
                move.w  ($FFFFB00C).w, D0
                sub.w   $000C(A0), D0
                addi.w  #$0040, D0
                cmpi.w  #$0068, D0
                bcc.s   Offset_0x013C56
                move.w  #$00A1, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                addq.b  #$02, $0024(A0)
                bsr     Lamp_Post_Save_Info     ; Offset_0x013C6A
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                bset    #$00, $02(A2, D0)
Offset_0x013C56:
                rts
Offset_0x013C58:
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$02, D0
                lsr.b   #$01, D0
                addq.b  #$01, D0
                move.b  D0, $001A(A0)
                rts
Lamp_Post_Save_Info: ; Offset_0x013C6A:
                move.b  $0028(A0), ($FFFFFE30).w
                move.b  ($FFFFFE30).w, ($FFFFFE31).w
                move.w  $0008(A0), ($FFFFFE32).w
                move.w  $000C(A0), ($FFFFFE34).w
                move.w  ($FFFFFE20).w, ($FFFFFE36).w
                move.b  ($FFFFFE1B).w, ($FFFFFE54).w
                move.l  ($FFFFFE22).w, ($FFFFFE38).w
                move.b  ($FFFFEEDF).w, ($FFFFFE3C).w
                move.w  ($FFFFEECE).w, ($FFFFFE3E).w
                move.w  ($FFFFEE00).w, ($FFFFFE40).w
                move.w  ($FFFFEE04).w, ($FFFFFE42).w
                move.w  ($FFFFEE08).w, ($FFFFFE44).w
                move.w  ($FFFFEE0C).w, ($FFFFFE46).w
                move.w  ($FFFFEE10).w, ($FFFFFE48).w
                move.w  ($FFFFEE14).w, ($FFFFFE4A).w
                move.w  ($FFFFEE18).w, ($FFFFFE4C).w
                move.w  ($FFFFEE1C).w, ($FFFFFE4E).w
                move.w  ($FFFFF648).w, ($FFFFFE50).w
                move.b  ($FFFFF64D).w, ($FFFFFE52).w
                move.b  ($FFFFF64E).w, ($FFFFFE53).w
                rts
Lamp_Post_Load_Info: ; Offset_0x013CE4:
                move.b  ($FFFFFE31).w, ($FFFFFE30).w
                move.w  ($FFFFFE32).w, ($FFFFB008).w
                move.w  ($FFFFFE34).w, ($FFFFB00C).w
                move.w  ($FFFFFE36).w, ($FFFFFE20).w
                move.b  ($FFFFFE54).w, ($FFFFFE1B).w
                clr.w   ($FFFFFE20).w
                clr.b   ($FFFFFE1B).w
                move.l  ($FFFFFE38).w, ($FFFFFE22).w
                move.b  #$3B, ($FFFFFE25).w
                subq.b  #$01, ($FFFFFE24).w
                move.b  ($FFFFFE3C).w, ($FFFFEEDF).w
                move.b  ($FFFFFE52).w, ($FFFFF64D).w
                move.w  ($FFFFFE3E).w, ($FFFFEECE).w
                move.w  ($FFFFFE3E).w, ($FFFFEEC6).w
                move.w  ($FFFFFE40).w, ($FFFFEE00).w
                move.w  ($FFFFFE42).w, ($FFFFEE04).w
                move.w  ($FFFFFE44).w, ($FFFFEE08).w
                move.w  ($FFFFFE46).w, ($FFFFEE0C).w
                move.w  ($FFFFFE48).w, ($FFFFEE10).w
                move.w  ($FFFFFE4A).w, ($FFFFEE14).w
                move.w  ($FFFFFE4C).w, ($FFFFEE18).w
                move.w  ($FFFFFE4E).w, ($FFFFEE1C).w
                tst.b   ($FFFFF730).w
                beq.s   Offset_0x013D7A
                move.w  ($FFFFFE50).w, ($FFFFF648).w
                move.b  ($FFFFFE52).w, ($FFFFF64D).w
                move.b  ($FFFFFE53).w, ($FFFFF64E).w
Offset_0x013D7A:
                tst.b   ($FFFFFE30).w
                bpl.s   Offset_0x013D8C
                move.w  ($FFFFFE32).w, D0
                subi.w  #$00A0, D0
                move.w  D0, ($FFFFEEC8).w
Offset_0x013D8C:
                rts
Lamp_Post_Mappings:
Offset_0x013D8E:
                dc.w    Offset_0x013D94-Offset_0x013D8E
                dc.w    Offset_0x013DB6-Offset_0x013D8E
                dc.w    Offset_0x013DD8-Offset_0x013D8E
Offset_0x013D94:
                dc.w    $0004
                dc.l    $E8012000, $2000FFF8, $E8012800, $28000000
                dc.l    $F8030006, $0003FFF8, $F8030806, $08030000
Offset_0x013DB6:
                dc.w    $0004
                dc.l    $E8010002, $0001FFF8, $E8010802, $08010000
                dc.l    $F8030006, $0003FFF8, $F8030806, $08030000
Offset_0x013DD8:
                dc.w    $0004
                dc.l    $E8012004, $2002FFF8, $E8012804, $28020000
                dc.l    $F8030006, $0003FFF8, $F8030806, $08030000   
;=============================================================================== 
; Object 0x79 - Lamp Post
; [ End ]
;===============================================================================                    
                nop                             ; Filler             
;=============================================================================== 
; Object 0x7D - Hidden Bonus at end of levels - Sonic 1 Leftover
; [ Begin ]
;===============================================================================                    
Obj_0x7D_Hidden_Bonus: ; Offset_0x013DFC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x013E0A(PC, D0), D1
                jmp     Offset_0x013E0A(PC, D1)
Offset_0x013E0A:
                dc.w    Offset_0x013E0E-Offset_0x013E0A
                dc.w    Offset_0x013EB2-Offset_0x013E0A
Offset_0x013E0E:
                moveq   #$10, D2
                move.w  D2, D3
                add.w   D3, D3
                lea     ($FFFFB000).w, A1
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D2, D0
                cmp.w   D3, D0
                bcc.s   Offset_0x013E90
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                add.w   D2, D1
                cmp.w   D3, D1
                bcc.s   Offset_0x013E90
                tst.w   ($FFFFFE08).w
                bne.s   Offset_0x013E90
                tst.b   ($FFFFF7CD).w
                bne.s   Offset_0x013E90
                addq.b  #$02, $0024(A0)
                move.l  #Hidden_Bonus_Mappings, $0004(A0) ; Offset_0x013ED6
                move.w  #$84B6, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$00, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  $0028(A0), $001A(A0)
                move.w  #$0077, $0030(A0)
                move.w  #$00C9, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.w  Offset_0x013EAA(PC, D0), D0
                jsr     AddPoints               ; (Offset_0x022FD0)
Offset_0x013E90:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_05       ; Offset_0x013EA4
                rts
J_DeleteObject_05: ; Offset_0x013EA4:
                jmp     DeleteObject            ; (Offset_0x00D3B4)                
Offset_0x013EAA:
                dc.w    $0000, $03E8, $0064, $0001  ; Bonus Points
Offset_0x013EB2:
                subq.w  #$01, $0030(A0)
                bmi.s   J_DeleteObject_06       ; Offset_0x013ED0
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_06       ; Offset_0x013ED0
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_06: ; Offset_0x013ED0:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Hidden_Bonus_Mappings:                
Offset_0x013ED6:
                dc.w    Offset_0x013EDE-Offset_0x013ED6
                dc.w    Offset_0x013EE0-Offset_0x013ED6
                dc.w    Offset_0x013EEA-Offset_0x013ED6
                dc.w    Offset_0x013EF4-Offset_0x013ED6
Offset_0x013EDE:
                dc.w    $0000
Offset_0x013EE0:
                dc.w    $0001
                dc.l    $F40E0000, $0000FFF0
Offset_0x013EEA:
                dc.w    $0001
                dc.l    $F40E000C, $0006FFF0
Offset_0x013EF4:
                dc.w    $0001
                dc.l    $F40E0018, $000CFFF0   
;=============================================================================== 
; Object 0x7D - Hidden Bonus at end of levels - Sonic 1 Leftover
; [ End ]
;===============================================================================      
                nop                             ; Filler  
;=============================================================================== 
; Object ??? - Unknow Object 0x013F00
; [ Begin ]
;===============================================================================                  
S1_Obj_0x47: ; Unknow_Obj_0x013F00: ; Offset_0x013F00:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x013F0E(PC, D0), D1
                jmp     Offset_0x013F0E(PC, D1)
Offset_0x013F0E:
                dc.w    Offset_0x013F12-Offset_0x013F0E
                dc.w    Offset_0x013F40-Offset_0x013F0E
Offset_0x013F12:
                addq.b  #$02, $0024(A0)
                move.l  #S1_Obj_0x47_Mappings, $0004(A0) ; Offset_0x01401E
                move.w  #$0380, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  #$D7, $0020(A0)
Offset_0x013F40:
                move.b  $0021(A0), D0
                beq     Offset_0x014002
                lea     ($FFFFB000).w, A1
                bclr    #$00, $0021(A0)
                beq.s   Offset_0x013F56
                bsr.s   Offset_0x013F6C
Offset_0x013F56:
                lea     ($FFFFB040).w, A1
                bclr    #$01, $0021(A0)
                beq.s   Offset_0x013F64
                bsr.s   Offset_0x013F6C
Offset_0x013F64:
                clr.b   $0021(A0)
                bra     Offset_0x014002
Offset_0x013F6C:
                move.w  $0008(A0), D1
                move.w  $000C(A0), D2
                sub.w   $0008(A1), D1
                sub.w   $000C(A1), D2
                jsr     CalcAngle               ; Offset_0x0034A2
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  #$F900, D1
                asr.l   #$08, D1
                move.w  D1, $0010(A1)
                muls.w  #$F900, D0
                asr.l   #$08, D0
                move.w  D0, $0012(A1)
                bset    #$01, $0022(A1)
                bclr    #$04, $0022(A1)
                bclr    #$05, $0022(A1)
                clr.b   $003C(A1)
                move.b  #$01, $001C(A0)
                move.w  #$00B4, D0
                jsr     Play_Sfx                ; (Offset_0x0014C6)
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x013FDA
                cmpi.b  #$8A, $02(A2, D0)
                bcc.s   Offset_0x014000
                addq.b  #$01, $02(A2, D0)
Offset_0x013FDA:
                moveq   #$01, D0
                jsr     AddPoints               ; (Offset_0x022FD0)
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x014000
                move.b  #$29, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  #$04, $001A(A1)
Offset_0x014000:
                rts
Offset_0x014002:
                lea     (Offset_0x014010), A1
                bsr     AnimateSprite           ; Offset_0x00D412
                bra     MarkObjGone             ; Offset_0x00D2A0              
Offset_0x014010:
                dc.w    Offset_0x014014-Offset_0x014010
                dc.w    Offset_0x014017-Offset_0x014010
Offset_0x014014:
                dc.b    $0F, $00, $FF
Offset_0x014017:
                dc.b    $03, $01, $02, $01, $02, $FD, $00
S1_Obj_0x47_Mappings: ; Unknow_Obj_0x013F00_Mappings:   Offset_0x01401E:
                dc.w    Offset_0x014024-S1_Obj_0x47_Mappings
                dc.w    Offset_0x014036-S1_Obj_0x47_Mappings
                dc.w    Offset_0x014048-S1_Obj_0x47_Mappings
Offset_0x014024:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F0070800, $08000000
Offset_0x014036:
                dc.w    $0002
                dc.l    $F4060008, $0004FFF4, $F4020808, $08040004
Offset_0x014048:
                dc.w    $0002
                dc.l    $F007000E, $0007FFF0, $F007080E, $08070000                                  
;=============================================================================== 
; Object ??? - Unknow Object 0x013F00
; [ Begin ]
;===============================================================================          
                nop                             ; Filler
;=============================================================================== 
; Object ??? - Unknow Object 0x01405C
; [ Begin ]
;===============================================================================                  
S1_Obj_0x64: ; Unknow_Obj_0x01405C: ; Offset_0x01405C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01406A(PC, D0), D1
                jmp     Offset_0x01406A(PC, D1)
Offset_0x01406A:
                dc.w    Offset_0x014076-Offset_0x01406A
                dc.w    Offset_0x0140D8-Offset_0x01406A
                dc.w    Offset_0x0140F2-Offset_0x01406A
                dc.w    Offset_0x0141AC-Offset_0x01406A
                dc.w    Offset_0x0141CA-Offset_0x01406A
                dc.w    Offset_0x0141CE-Offset_0x01406A
Offset_0x014076:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x0A_Bubbles_Mappings, $0004(A0) ; Offset_0x014374
                move.w  #$8500, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$84, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  $0028(A0), D0
                bpl.s   Offset_0x0140BE
                addq.b  #$08, $0024(A0)
                andi.w  #$007F, D0
                move.b  D0, $0032(A0)
                move.b  D0, $0033(A0)
                move.b  #$06, $001C(A0)
                bra     Offset_0x0141CE
Offset_0x0140BE:
                move.b  D0, $001C(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  #$FF78, $0012(A0)
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                move.b  D0, $0026(A0)
Offset_0x0140D8:
                lea     (Offset_0x014348), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
                cmpi.b  #$06, $001A(A0)
                bne.s   Offset_0x0140F2
                move.b  #$01, $002E(A0)
Offset_0x0140F2:
                move.w  ($FFFFF646).w, D0
                cmp.w   $000C(A0), D0
                bcs.s   Offset_0x01410A
Offset_0x0140FC                
                move.b  #$06, $0024(A0)
                addq.b  #$03, $001C(A0)
                bra     Offset_0x0141AC
Offset_0x01410A:
                move.b  $0026(A0), D0
                addq.b  #$01, $0026(A0)
                andi.w  #$007F, D0
                lea     (Offset_0x01220C), A1
                move.b  $00(A1, D0), D0
                ext.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                tst.b   $002E(A0)
                beq.s   Offset_0x014196
                bsr     Offset_0x01430A
                beq.s   Offset_0x014196
                bsr     ResumeMusic             ; Offset_0x0124FE
                move.w  #$00AD, D0
                jsr     Play_Sfx                ; (Offset_0x0014C6)
                lea     ($FFFFB000).w, A1
                clr.w   $0010(A1)
                clr.w   $0012(A1)
                clr.w   $0014(A1)
                move.b  #$15, $001C(A1)
                move.w  #$0023, $002E(A1)
                move.b  #$00, $003C(A1)
                bclr    #$05, $0022(A1)
                bclr    #$04, $0022(A1)
                btst    #$02, $0022(A1)
                beq     Offset_0x0140FC
                bclr    #$02, $0022(A1)
                move.b  #$13, $0016(A1)
                move.b  #$09, $0017(A1)
                subq.w  #$05, $000C(A1)
                bra     Offset_0x0140FC
Offset_0x014196:
                bsr     SpeedToPos              ; Offset_0x00D27A
                tst.b   $0001(A0)
                bpl.s   J_DeleteObject_07       ; Offset_0x0141A6
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_07: ; Offset_0x0141A6:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x0141AC:
                lea     (Offset_0x014348), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
                tst.b   $0001(A0)
                bpl.s   J_DeleteObject_08       ; Offset_0x0141C4
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_08: ; Offset_0x0141C4:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x0141CA:
                bra     DeleteObject            ; Offset_0x00D3B4
Offset_0x0141CE:
                tst.w   $0036(A0)
                bne.s   Offset_0x014230
                move.w  ($FFFFF646).w, D0
                cmp.w   $000C(A0), D0
                bcc     Offset_0x0142D6
                tst.b   $0001(A0)
                bpl     Offset_0x0142D6
                subq.w  #$01, $0038(A0)
                bpl     Offset_0x0142CA
                move.w  #$0001, $0036(A0)
Offset_0x0141F6:                
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                move.w  D0, D1
                andi.w  #$0007, D0
                cmpi.w  #$0006, D0
                bcc.s   Offset_0x0141F6
                move.b  D0, $0034(A0)
                andi.w  #$000C, D1
                lea     (Offset_0x0142F8), A1
                adda.w  D1, A1
                move.l  A1, $003C(A0)
                subq.b  #$01, $0032(A0)
                bpl.s   Offset_0x01422E
                move.b  $0033(A0), $0032(A0)
                bset    #$07, $0036(A0)
Offset_0x01422E:
                bra.s   Offset_0x014238
Offset_0x014230:
                subq.w  #$01, $0038(A0)
                bpl     Offset_0x0142CA
Offset_0x014238:
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                andi.w  #$001F, D0
                move.w  D0, $0038(A0)
                bsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   Offset_0x0142AE
                move.w  $0008(A0), $0008(A1)
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                andi.w  #$000F, D0
                subq.w  #$08, D0
                add.w   D0, $0008(A1)
                move.w  $000C(A0), $000C(A1)
                moveq   #$00, D0
                move.b  $0034(A0), D0
                move.l  $003C(A0), A2
                move.b  $00(A2, D0), $0028(A1)
                btst    #$07, $0036(A0)
                beq.s   Offset_0x0142AE
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                andi.w  #$0003, D0
                bne.s   Offset_0x01429A
                bset    #$06, $0036(A0)
                bne.s   Offset_0x0142AE
                move.b  #$02, $0028(A1)
Offset_0x01429A:
                tst.b   $0034(A0)
                bne.s   Offset_0x0142AE
                bset    #$06, $0036(A0)
                bne.s   Offset_0x0142AE
                move.b  #$02, $0028(A1)
Offset_0x0142AE:
                subq.b  #$01, $0034(A0)
                bpl.s   Offset_0x0142CA
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                andi.w  #$007F, D0
                addi.w  #$0080, D0
                add.w   D0, $0038(A0)
                clr.w   $0036(A0)
Offset_0x0142CA:
                lea     (Offset_0x014348), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
Offset_0x0142D6:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                move.w  ($FFFFF646).w, D0
                cmp.w   $000C(A0), D0
                bcs     DisplaySprite           ; Offset_0x00D3C2
                rts   
Offset_0x0142F8:
                dc.w    $0001, $0000, $0000, $0100, $0000, $0001, $0001, $0000
                dc.w    $0100              
Offset_0x01430A:
                tst.b   ($FFFFB02A).w
                bmi.s   Offset_0x014344
                lea     ($FFFFB000).w, A1
                move.w  $0008(A1), D0
                move.w  $0008(A0), D1
                subi.w  #$0010, D1
                cmp.w   D0, D1
                bcc.s   Offset_0x014344
                addi.w  #$0020, D1
                cmp.w   D0, D1
                bcs.s   Offset_0x014344
                move.w  $000C(A1), D0
                move.w  $000C(A0), D1
                cmp.w   D0, D1
                bcc.s   Offset_0x014344
                addi.w  #$0010, D1
                cmp.w   D0, D1
                bcs.s   Offset_0x014344
                moveq   #$01, D0
                rts
Offset_0x014344:
                moveq   #$00, D0
                rts                
Offset_0x014348:
                dc.w    Offset_0x014356-Offset_0x014348
                dc.w    Offset_0x01435B-Offset_0x014348
                dc.w    Offset_0x014361-Offset_0x014348
                dc.w    Offset_0x014368-Offset_0x014348
                dc.w    Offset_0x014368-Offset_0x014348
                dc.w    Offset_0x01436A-Offset_0x014348
                dc.w    Offset_0x01436F-Offset_0x014348
Offset_0x014356:
                dc.b    $0E, $00, $01, $02, $FC
Offset_0x01435B:
                dc.b    $0E, $01, $02, $03, $04, $FC
Offset_0x014361:
                dc.b    $0E, $02, $03, $04, $05, $06, $FC
Offset_0x014368:
                dc.b    $04, $FC
Offset_0x01436A:
                dc.b    $04, $06, $07, $08, $FC
Offset_0x01436F:
                dc.b    $0F, $13, $14, $15, $FF
Obj_0x0A_Bubbles_Mappings: ; Offset_0x014374:
                dc.w    Offset_0x0143A2-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x0143AC-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x0143B6-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x0143C0-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x0143CA-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x0143D4-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x0143DE-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x0143E8-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x01440A-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x01442C-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x014436-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x014440-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x01444A-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x014454-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x01445E-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x014468-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x014472-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x01447C-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x014486-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x014490-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x01449A-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x0144A4-Obj_0x0A_Bubbles_Mappings
                dc.w    Offset_0x0144AE-Obj_0x0A_Bubbles_Mappings
Offset_0x0143A2:
                dc.w    $0001
                dc.l    $FC000000, $0000FFFC
Offset_0x0143AC:
                dc.w    $0001
                dc.l    $FC000001, $0000FFFC
Offset_0x0143B6:
                dc.w    $0001
                dc.l    $FC000002, $0001FFFC
Offset_0x0143C0:
                dc.w    $0001
                dc.l    $F8050003, $0001FFF8
Offset_0x0143CA:
                dc.w    $0001
                dc.l    $F8050007, $0003FFF8
Offset_0x0143D4:
                dc.w    $0001
                dc.l    $F40A000B, $0005FFF4
Offset_0x0143DE:
                dc.w    $0001
                dc.l    $F00F0014, $000AFFF0
Offset_0x0143E8:
                dc.w    $0004
                dc.l    $F0050024, $0012FFF0, $F0050824, $08120000
                dc.l    $00051024, $1012FFF0, $00051824, $18120000
Offset_0x01440A:
                dc.w    $0004
                dc.l    $F0050028, $0014FFF0, $F0050828, $08140000
                dc.l    $00051028, $1014FFF0, $00051828, $18140000
Offset_0x01442C:
                dc.w    $0001
                dc.l    $F406002C, $0016FFF8
Offset_0x014436:
                dc.w    $0001
                dc.l    $F4060032, $0019FFF8
Offset_0x014440:
                dc.w    $0001
                dc.l    $F4060038, $001CFFF8
Offset_0x01444A:
                dc.w    $0001
                dc.l    $F406003E, $001FFFF8
Offset_0x014454:
                dc.w    $0001
                dc.l    $F4062044, $2022FFF8
Offset_0x01445E:
                dc.w    $0001
                dc.l    $F406204A, $2025FFF8
Offset_0x014468:
                dc.w    $0001
                dc.l    $F4062050, $2028FFF8
Offset_0x014472:
                dc.w    $0001
                dc.l    $F4062056, $202BFFF8
Offset_0x01447C:
                dc.w    $0001
                dc.l    $F406205C, $202EFFF8
Offset_0x014486:
                dc.w    $0001
                dc.l    $F4062062, $2031FFF8
Offset_0x014490:
                dc.w    $0001
                dc.l    $F8050068, $0034FFF8
Offset_0x01449A:
                dc.w    $0001
                dc.l    $F805006C, $0036FFF8
Offset_0x0144A4:
                dc.w    $0001
                dc.l    $F8050070, $0038FFF8
Offset_0x0144AE:
                dc.w    $0000                
;=============================================================================== 
; Object 0x03 - Layer Switch (Low / Hi Plane Switch)  
; [ Begin ]
;===============================================================================                 
Obj_0x03_Layer_Switch: ; Offset_0x0144B0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x0144CC(PC, D0), D1
                jsr     Offset_0x0144CC(PC, D1)
                tst.w   ($FFFFFFFA).w
                beq     Offset_0x00D30C
                jmp     MarkObjGone             ; Offset_0x00D2A0
Offset_0x0144CC:
                dc.w    Offset_0x0144D2-Offset_0x0144CC
                dc.w    Offset_0x014538-Offset_0x0144CC
                dc.w    Offset_0x01465C-Offset_0x0144CC
Offset_0x0144D2:                
                addq.b  #$02, $0024(A0)
                move.l  #Layer_Switch_Mappings, $0004(A0) ; Offset_0x0147D0
                move.w  #$26BC, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$05, $0018(A0)
                move.b  $0028(A0), D0
                btst    #$02, D0
                beq.s   Offset_0x014528                 
                addq.b  #$02, $0024(A0)
                andi.w  #$0007, D0
                move.b  D0, $001A(A0)
                andi.w  #$0003, D0
                add.w   D0, D0
                move.w  Offset_0x014520(PC, D0), $0032(A0)
                bra     Offset_0x01465C
Offset_0x014520:
                dc.w    $0020, $0040, $0080, $0100                
Offset_0x014528:
                andi.w  #$0003, D0
                move.b  D0, $001A(A0)
                add.w   D0, D0
                move.w  Offset_0x014520(PC, D0), $0032(A0)
Offset_0x014538:
                tst.w   ($FFFFFE08).w
                bne     Offset_0x01465A
                move.b  #$00, $0034(A0)
                move.w  $0030(A0), D5
                move.w  $0008(A0), D0
                move.w  D0, D1
                subq.w  #$08, D0
                addq.w  #$08, D1
                move.w  $000C(A0), D2
                move.w  D2, D3
                move.w  $0032(A0), D4
                sub.w   D4, D2
                add.w   D4, D3
                lea     (Offset_0x014780), A2
                moveq   #$07, D6
Offset_0x01456A:
                move.l  (A2)+, D4
                beq     Offset_0x01464A
                move.l  D4, A1
                move.w  $0008(A1), D4
                cmp.w   D0, D4
                bcs     Offset_0x01459A
                cmp.w   D1, D4
                bcc     Offset_0x01459A
                move.w  $000C(A1), D4
                cmp.w   D2, D4
                bcs     Offset_0x01459A
                cmp.w   D3, D4
                bcc     Offset_0x01459A
                ori.w   #$8000, D5
                bra     Offset_0x01464A
Offset_0x01459A:
                tst.w   D5
                bpl     Offset_0x01464A
                swap.w  D0
                move.b  $0028(A0), D0
                bpl.s   Offset_0x0145B2
                btst    #$01, $0022(A1)
                bne     Offset_0x014644
Offset_0x0145B2:
                move.w  $0008(A1), D4
                cmp.w   $0008(A0), D4
                bcs.s   Offset_0x0145F6
                btst    #$00, $0001(A0)
                bne.s   Offset_0x0145E2
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
                btst    #$03, D0
                beq.s   Offset_0x0145E2
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x0145E2:
                bclr    #$07, $0002(A1)
                btst    #$05, D0
                beq.s   Offset_0x01462E
                bset    #$07, $0002(A1)
                bra.s   Offset_0x01462E
Offset_0x0145F6:
                btst    #$00, $0001(A0)
                bne.s   Offset_0x01461C
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
                btst    #$04, D0
                beq.s   Offset_0x01461C
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x01461C:
                bclr    #$07, $0002(A1)
                btst    #$06, D0
                beq.s   Offset_0x01462E
                bset    #$07, $0002(A1)
Offset_0x01462E:
                move.b  #$01, $0034(A0)
                tst.w   ($FFFFFFFA).w
                beq.s   Offset_0x014644
                move.w  #$00A1, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x014644:
                swap.w  D0
                andi.w  #$7FFF, D5
Offset_0x01464A:
                add.l   D5, D5
                dbra    D6, Offset_0x01456A
                swap.w  D5
                move.b  D5, $0030(A0)
                bsr     Offset_0x0147A0
Offset_0x01465A:                
                rts
Offset_0x01465C:
                tst.w   ($FFFFFE08).w
                bne     Offset_0x01477E
                move.b  #$00, $0034(A0)
                move.w  $0030(A0), D5
                move.w  $0008(A0), D0
                move.w  D0, D1
                move.w  $0032(A0), D4
                sub.w   D4, D0
                add.w   D4, D1
                move.w  $000C(A0), D2
                move.w  D2, D3
                subq.w  #$08, D2
                addq.w  #$08, D3
                lea     (Offset_0x014780), A2
                moveq   #$07, D6
Offset_0x01468E:
                move.l  (A2)+, D4
                beq     Offset_0x01476E
                move.l  D4, A1
                move.w  $0008(A1), D4
                cmp.w   D0, D4
                bcs     Offset_0x0146BE
                cmp.w   D1, D4
                bcc     Offset_0x0146BE
                move.w  $000C(A1), D4
                cmp.w   D2, D4
                bcs     Offset_0x0146BE
                cmp.w   D3, D4
                bcc     Offset_0x0146BE
                ori.w   #$8000, D5
                bra     Offset_0x01476E
Offset_0x0146BE:
                tst.w   D5
                bpl     Offset_0x01476E
                swap.w  D0
                move.b  $0028(A0), D0
                bpl.s   Offset_0x0146D6
                btst    #$01, $0022(A1)
                bne     Offset_0x014768
Offset_0x0146D6:
                move.w  $000C(A1), D4
                cmp.w   $000C(A0), D4
                bcs.s   Offset_0x01471A
                btst    #$00, $0001(A0)
                bne.s   Offset_0x014706
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
                btst    #$03, D0
                beq.s   Offset_0x014706
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x014706:
                bclr    #$07, $0002(A1)
                btst    #$05, D0
                beq.s   Offset_0x014752
                bset    #$07, $0002(A1)
                bra.s   Offset_0x014752
Offset_0x01471A:
                btst    #$00, $0001(A0)
                bne.s   Offset_0x014740
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
                btst    #$04, D0
                beq.s   Offset_0x014740
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x014740:
                bclr    #$07, $0002(A1)
                btst    #$06, D0
                beq.s   Offset_0x014752
                bset    #$07, $0002(A1)
Offset_0x014752:
                move.b  #$01, $0034(A0)
                tst.w   ($FFFFFFFA).w
                beq.s   Offset_0x014768
                move.w  #$00A1, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x014768:
                swap.w  D0
                andi.w  #$7FFF, D5
Offset_0x01476E:                
                add.l   D5, D5
                dbra    D6, Offset_0x01468E
                swap.w  D5
                move.b  D5, $0030(A0)
                bsr     Offset_0x0147A0
Offset_0x01477E:                
                rts  
Offset_0x014780:    
                dc.l    $FFFFB000, $FFFFB040, $00000000, $00000000
                dc.l    $00000000, $00000000, $00000000, $00000000  
Offset_0x0147A0:
                tst.b   $0034(A0)
                beq.s   Offset_0x0147CE
                tst.w   ($FFFFB002).w
                bpl.s   Offset_0x0147B4
                bset    #$07, ($FFFFB182).w
                bra.s   Offset_0x0147BA
Offset_0x0147B4:
                bclr    #$07, ($FFFFB182).w
Offset_0x0147BA:
                tst.w   ($FFFFB042).w
                bpl.s   Offset_0x0147C8
                bset    #$07, ($FFFFB1C2).w
                bra.s   Offset_0x0147CE
Offset_0x0147C8:
                bclr    #$07, ($FFFFB1C2).w
Offset_0x0147CE:
                rts   
Layer_Switch_Mappings:
Offset_0x0147D0:
                dc.w    Offset_0x0147E0-Offset_0x0147D0
                dc.w    Offset_0x014802-Offset_0x0147D0
                dc.w    Offset_0x014824-Offset_0x0147D0
                dc.w    Offset_0x014824-Offset_0x0147D0
                dc.w    Offset_0x014846-Offset_0x0147D0
                dc.w    Offset_0x014868-Offset_0x0147D0
                dc.w    Offset_0x01488A-Offset_0x0147D0
                dc.w    Offset_0x01488A-Offset_0x0147D0
Offset_0x0147E0:
                dc.w    $0004
                dc.l    $E0050000, $0000FFF8, $F0050000, $0000FFF8
                dc.l    $00050000, $0000FFF8, $10050000, $0000FFF8
Offset_0x014802:
                dc.w    $0004
                dc.l    $C0050000, $0000FFF8, $E0050000, $0000FFF8
                dc.l    $00050000, $0000FFF8, $30050000, $0000FFF8
Offset_0x014824:
                dc.w    $0004
                dc.l    $80050000, $0000FFF8, $E0050000, $0000FFF8
                dc.l    $00050000, $0000FFF8, $70050000, $0000FFF8
Offset_0x014846:
                dc.w    $0004
                dc.l    $F8050000, $0000FFE0, $F8050000, $0000FFF0
                dc.l    $F8050000, $00000000, $F8050000, $00000010
Offset_0x014868:
                dc.w    $0004
                dc.l    $F8050000, $0000FFC0, $F8050000, $0000FFE0
                dc.l    $F8050000, $00000000, $F8050000, $00000030
Offset_0x01488A:
                dc.w    $0004
                dc.l    $F8050000, $0000FF80, $F8050000, $0000FFE0
                dc.l    $F8050000, $00000000, $F8050000, $00000070                                                    
;=============================================================================== 
; Object 0x03 - Layer Switch (Low / Hi Plane Switch)  
; [ End ]
;===============================================================================  

;=============================================================================== 
; Object 0x0B - Chemical Plant - Open / Close Platforms
; [ Begin ]                         
;===============================================================================   
Obj_0x0B_Open_Close_Platform: ; Offset_0x0148AC:              
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x0148BA(PC, D0), D1
                jmp     Offset_0x0148BA(PC, D1)
Offset_0x0148BA:
                dc.w    Offset_0x0148C0-Offset_0x0148BA
                dc.w    Offset_0x014914-Offset_0x0148BA
                dc.w    Offset_0x014922-Offset_0x0148BA
Offset_0x0148C0:
                addq.b  #$02, $0024(A0)
                move.l  #Open_Close_Platform_Mappings, $0004(A0) ; Offset_0x014996
                move.w  #$E3B0, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$00F0, D0
                addi.w  #$0010, D0
                move.w  D0, D1
                subq.w  #$01, D0
                move.w  D0, $0030(A0)
                move.w  D0, $0032(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                addq.w  #$01, D0
                lsl.w   #$04, D0
                move.b  D0, $0036(A0)
Offset_0x014914:
                move.b  ($FFFFFE0F).w, D0
                add.b   $0036(A0), D0
                bne.s   Offset_0x01494C
                addq.b  #$02, $0024(A0)
Offset_0x014922:
                subq.w  #$01, $0030(A0)
                bpl.s   Offset_0x014940
                move.w  #$007F, $0030(A0)
                tst.b   $001C(A0)
                beq.s   Offset_0x01493A
                move.w  $0032(A0), $0030(A0)
Offset_0x01493A:
                bchg    #0, $001C(A0)
Offset_0x014940:
                lea     (Offset_0x014982), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
Offset_0x01494C:
                tst.b   $001A(A0)
                bne.s   Offset_0x014966
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$11, D3
                move.w  $0008(A0), D4
                bsr     Offset_0x00F984
                bra     MarkObjGone             ; Offset_0x00D2A0
Offset_0x014966:
                btst    #$03, $0022(A0)
                beq.s   Offset_0x01497E
                lea     ($FFFFB000).w, A1
                bclr    #$03, $0022(A1)
                bclr    #$03, $0022(A0)
Offset_0x01497E:
                bra     MarkObjGone             ; Offset_0x00D2A0
Offset_0x014982:
                dc.w    Offset_0x014986-Offset_0x014982
                dc.w    Offset_0x01498E-Offset_0x014982
Offset_0x014986:
                dc.b    $07
                dc.b    $00, $01, $02, $03, $04, $FE, $01
Offset_0x01498E:
                dc.b    $07
                dc.b    $04, $03, $02, $01, $00, $FE, $01
Open_Close_Platform_Mappings:                
Offset_0x014996:
                dc.w    Offset_0x0149A0-Offset_0x014996
                dc.w    Offset_0x0149B2-Offset_0x014996
                dc.w    Offset_0x0149C4-Offset_0x014996
                dc.w    Offset_0x0149D6-Offset_0x014996
                dc.w    Offset_0x0149E8-Offset_0x014996
Offset_0x0149A0:
                dc.w    $0002
                dc.l    $F00C0000, $0000FFF0, $F80E0024, $0012FFF0
Offset_0x0149B2:
                dc.w    $0002
                dc.l    $E80F0004, $0002FFF0, $F80E0024, $0012FFF0
Offset_0x0149C4:
                dc.w    $0002
                dc.l    $F40F0014, $000AFFF0, $F80E0024, $0012FFF0
Offset_0x0149D6:
                dc.w    $0002
                dc.l    $000F1004, $1002FFF0, $F80E0024, $0012FFF0
Offset_0x0149E8:
                dc.w    $0002
                dc.l    $100C1000, $1000FFF0, $F80E0024, $0012FFF0
;=============================================================================== 
; Object 0x0B - Chemical Plant - Open / Close Platforms
; [ End ]                         
;===============================================================================  
                nop                             ; Filler 
;=============================================================================== 
; Object 0x0C - 
; [ Begin ]                         
;===============================================================================  
Obj_0x0C: ; Offset_0x0149FC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x014A0A(PC, D0), D1
                jmp     Offset_0x014A0A(PC, D1)
Offset_0x014A0A:
                dc.w    Offset_0x014A0E-Offset_0x014A0A
                dc.w    Offset_0x014A6E-Offset_0x014A0A
Offset_0x014A0E:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x0C_Mappings, $0004(A0) ; Offset_0x014AE6
                move.w  #$E418, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                move.w  $000C(A0), D0
                subi.w  #$0010, D0
                move.w  D0, $003A(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$00F0, D0
                addi.w  #$0010, D0
                move.w  D0, D1
                subq.w  #$01, D0
                move.w  D0, $0030(A0)
                move.w  D0, $0032(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                move.b  D0, $003E(A0)
                move.b  D0, $003F(A0)
Offset_0x014A6E:
                move.b  $003C(A0), D0
                beq.s   Offset_0x014AAC
                cmpi.b  #$80, D0
                bne.s   Offset_0x014ABC
                move.b  $003D(A0), D1
                bne.s   Offset_0x014A8E
                subq.b  #$01, $003E(A0)
                bpl.s   Offset_0x014A8E
                move.b  $003F(A0), $003E(A0)
                bra.s   Offset_0x014ABC
Offset_0x014A8E:
                addq.b  #$01, $003D(A0)
                move.b  D1, D0
                bsr     Offset_0x014AF4
                addi.w  #$0008, D0
                asr.w   #$06, D0
                subi.w  #$0010, D0
                add.w   $003A(A0), D0
                move.w  D0, $000C(A0)
                bra.s   Offset_0x014AD2
Offset_0x014AAC:
                move.w  ($FFFFFE0E).w, D1
                andi.w  #$03FF, D1
                bne.s   Offset_0x014AC0
                move.b  #$01, $003D(A0)
Offset_0x014ABC:
                addq.b  #$01, $003C(A0)
Offset_0x014AC0:
                bsr     Offset_0x014AF4
                addi.w  #$0008, D1
                asr.w   #$04, D1
                add.w   $003A(A0), D1
                move.w  D1, $000C(A0)
Offset_0x014AD2:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$09, D3
                move.w  $0008(A0), D4
                bsr     Offset_0x00F984
                bra     MarkObjGone             ; Offset_0x00D2A0
Obj_0x0C_Mappings:                
Offset_0x014AE6:
                dc.w    Offset_0x014AE8-Offset_0x014AE6
Offset_0x014AE8:
                dc.w    $0001
                dc.l    $F80D0000, $0000FFF0
;=============================================================================== 
; Object 0x0C - 
; [ End ]                         
;===============================================================================  
                nop                             ; Filler 
Offset_0x014AF4:
                jmp     CalcSine                ; Offset_0x00320A
                dc.w    $0000                   ; Filler 
;=============================================================================== 
; Object 0x12 - Hidden Palace - Emerald 
; [ Begin ]                         
;===============================================================================                  
Obj_0x12_Emerald: ; Offset_0x014AFC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x014B0A(PC, D0), D1
                jmp     Offset_0x014B0A(PC, D1)
Offset_0x014B0A:                
                dc.w    Offset_0x014B0E-Offset_0x014B0A
                dc.w    Offset_0x014B36-Offset_0x014B0A
Offset_0x014B0E:
                addq.b  #$02, $0024(A0)
                move.l  #Emerald_Mappings, $0004(A0) ; Offset_0x014B62
                move.w  #$6392, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.b  #$04, $0018(A0)
Offset_0x014B36:
                move.w  #$0020, D1
                move.w  #$0010, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                bsr     SolidObject             ; Offset_0x00F4A0
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2 
Emerald_Mappings: ; Offset_0x014B62:
                dc.w    Offset_0x014B64-Emerald_Mappings
Offset_0x014B64:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFE0, $F00F0010, $00080000
;=============================================================================== 
; Object 0x12 - Hidden Palace - Emerald 
; [ End ]                         
;===============================================================================  
                nop                             ; Filler
;=============================================================================== 
; Object 0x13 - Hidden Palace - Waterfalls 
; [ Begin ]                         
;===============================================================================                  
Obj_0x13_Hpz_Waterfalls: ; Offset_0x014B78:     
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x014B86(PC, D0), D1
                jmp     Offset_0x014B86(PC, D1)
Offset_0x014B86:
                dc.w    Offset_0x014B8C-Offset_0x014B86
                dc.w    Offset_0x014C52-Offset_0x014B86
                dc.w    Offset_0x014CDC-Offset_0x014B86
Offset_0x014B8C:
                addq.b  #$02, $0024(A0)
                move.l  #Hpz_Waterfalls_Mappings, $0004(A0) ; Offset_0x014CF4
                move.w  #$E315, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  #$12, $001A(A0)
                bsr.s   Offset_0x014BF4
                move.b  #$A0, $0016(A1)
                bset    #$04, $0001(A1)
                move.l  A1, $0038(A0)
                move.w  $000C(A0), $0034(A0)
                move.w  $000C(A0), $0036(A0)
                cmpi.b  #$10, $0028(A0)
                bcs.s   Offset_0x014C38
                bsr.s   Offset_0x014BF4
                move.l  A1, $003C(A0)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$0098, $000C(A1)
                bra.s   Offset_0x014C38
Offset_0x014BF4:
                jsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x014C36
                move.b  #$13, $0000(A1)
                addq.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  #Hpz_Waterfalls_Mappings, $0004(A1) ; Offset_0x014CF4
                move.w  #$E315, $0002(A1)
                bsr     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
                move.b  #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$01, $0018(A1)
Offset_0x014C36:                
                rts
Offset_0x014C38:
                moveq   #$00, D1
                move.b  $0028(A0), D1
                move.w  $0034(A0), D0
                subi.w  #$0078, D0
                lsl.w   #$04, D1
                add.w   D1, D0
                move.w  D0, $000C(A0)
                move.w  D0, $0034(A0)
Offset_0x014C52:
                move.l  $0038(A0), A1
                move.b  #$12, $001A(A0)
                move.w  $0034(A0), D0 
                move.w  ($FFFFF646).w, D1
                cmp.w   D0, D1
                bcc.s   Offset_0x014C6A
                move.w  D1, D0
Offset_0x014C6A:
                move.w  D0, $000C(A0)
                sub.w   $0036(A0), D0
                addi.w  #$0080, D0
                bmi.s   Offset_0x014CBC
                lsr.w   #$04, D0
                move.w  D0, D1
                cmpi.w  #$000F, D0
                bcs.s   Offset_0x014C84
                moveq   #$0F, D0
Offset_0x014C84:
                move.b  D0, $001A(A1)
                cmpi.b  #$10, $0028(A0)
                bcs.s   Offset_0x014CA4
                move.l  $003C(A0), A1
                subi.w  #$000F, D1
                bcc.s   Offset_0x014C9C
                moveq   #$00, D1
Offset_0x014C9C:
                addi.w  #$0013, D1
                move.b  D1, $001A(A1) 
Offset_0x014CA4:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2
Offset_0x014CBC:                
                moveq   #$13, D0
                move.b  D0, $001A(A0)
                move.b  D0, $001A(A1)
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                rts
Offset_0x014CDC:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject            ; Offset_0x00D3B4
                bra     DisplaySprite           ; Offset_0x00D3C2 
Hpz_Waterfalls_Mappings:                  
Offset_0x014CF4:
                dc.w    Offset_0x014D2E-Offset_0x014CF4
                dc.w    Offset_0x014D38-Offset_0x014CF4
                dc.w    Offset_0x014D4A-Offset_0x014CF4
                dc.w    Offset_0x014D5C-Offset_0x014CF4
                dc.w    Offset_0x014D76-Offset_0x014CF4
                dc.w    Offset_0x014D90-Offset_0x014CF4
                dc.w    Offset_0x014DB2-Offset_0x014CF4
                dc.w    Offset_0x014DD4-Offset_0x014CF4
                dc.w    Offset_0x014DFE-Offset_0x014CF4
                dc.w    Offset_0x014E28-Offset_0x014CF4
                dc.w    Offset_0x014E5A-Offset_0x014CF4
                dc.w    Offset_0x014E8C-Offset_0x014CF4
                dc.w    Offset_0x014EC6-Offset_0x014CF4
                dc.w    Offset_0x014F00-Offset_0x014CF4
                dc.w    Offset_0x014F42-Offset_0x014CF4
                dc.w    Offset_0x014F84-Offset_0x014CF4
                dc.w    Offset_0x014FCE-Offset_0x014CF4
                dc.w    Offset_0x014FCE-Offset_0x014CF4
                dc.w    Offset_0x014FCE-Offset_0x014CF4
                dc.w    Offset_0x014D2C-Offset_0x014CF4
                dc.w    Offset_0x014FE0-Offset_0x014CF4
                dc.w    Offset_0x014FEA-Offset_0x014CF4
                dc.w    Offset_0x014FF4-Offset_0x014CF4
                dc.w    Offset_0x015006-Offset_0x014CF4
                dc.w    Offset_0x015018-Offset_0x014CF4
                dc.w    Offset_0x015032-Offset_0x014CF4
                dc.w    Offset_0x01504C-Offset_0x014CF4
                dc.w    Offset_0x01506E-Offset_0x014CF4
Offset_0x014D2C:
                dc.w    $0000                
Offset_0x014D2E:
                dc.w    $0001
                dc.l    $800C0010, $0008FFF0
Offset_0x014D38:
                dc.w    $0002
                dc.l    $800C0010, $0008FFF0, $880D002D, $0016FFF0
Offset_0x014D4A:
                dc.w    $0002
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
Offset_0x014D5C:
                dc.w    $0003
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80D002D, $0016FFF0
Offset_0x014D76:
                dc.w    $0003
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0
Offset_0x014D90:
                dc.w    $0004
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80D002D, $0016FFF0
Offset_0x014DB2:
                dc.w    $0004
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
Offset_0x014DD4:
                dc.w    $0005
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80D002D, $0016FFF0
Offset_0x014DFE:
                dc.w    $0005
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0
Offset_0x014E28:
                dc.w    $0006
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080D002D, $0016FFF0
Offset_0x014E5A:
                dc.w    $0006
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
Offset_0x014E8C:
                dc.w    $0007
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
                dc.l    $280D002D, $0016FFF0
Offset_0x014EC6:
                dc.w    $0007
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
                dc.l    $280F0000, $0000FFF0
Offset_0x014F00:
                dc.w    $0008
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
                dc.l    $280F0000, $0000FFF0, $480D002D, $0016FFF0
Offset_0x014F42:
                dc.w    $0008
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
                dc.l    $280F0000, $0000FFF0, $480F0000, $0000FFF0
Offset_0x014F84:
                dc.w    $0009
                dc.l    $800C0010, $0008FFF0, $880F0000, $0000FFF0
                dc.l    $A80F0000, $0000FFF0, $C80F0000, $0000FFF0
                dc.l    $E80F0000, $0000FFF0, $080F0000, $0000FFF0
                dc.l    $280F0000, $0000FFF0, $480F0000, $0000FFF0
                dc.l    $680D002D, $0016FFF0
Offset_0x014FCE:
                dc.w    $0002
                dc.l    $F00A0018, $000CFFE8, $F00A0818, $080C0000
Offset_0x014FE0:
                dc.w    $0001
                dc.l    $E00D002D, $0016FFF0
Offset_0x014FEA:
                dc.w    $0001
                dc.l    $E00F0000, $0000FFF0
Offset_0x014FF4:
                dc.w    $0002
                dc.l    $E00F0000, $0000FFF0, $000D002D, $0016FFF0
Offset_0x015006:
                dc.w    $0002
                dc.l    $E00F0000, $0000FFF0, $000F0000, $0000FFF0
Offset_0x015018:
                dc.w    $0003
                dc.l    $E00F0000, $0000FFF0, $000F0000, $0000FFF0
                dc.l    $200D002D, $0016FFF0
Offset_0x015032:
                dc.w    $0003
                dc.l    $E00F0000, $0000FFF0, $000F0000, $0000FFF0
                dc.l    $200F0000, $0000FFF0
Offset_0x01504C:
                dc.w    $0004
                dc.l    $E00F0000, $0000FFF0, $000F0000, $0000FFF0
                dc.l    $200F0000, $0000FFF0, $400D002D, $0016FFF0
Offset_0x01506E:
                dc.w    $0004
                dc.l    $E00F0000, $0000FFF0, $000F0000, $0000FFF0
                dc.l    $200F0000, $0000FFF0, $400F0000, $0000FFF0                  
                        
;=============================================================================== 
; Object 0x13 - Hidden Palace - Waterfalls 
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Object 0x04 - 
; [ Begin ]                         
;===============================================================================  
Obj_0x04: ; Offset_0x015090:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01509E(PC, D0), D1
                jmp     Offset_0x01509E(PC, D1)
Offset_0x01509E:
                dc.w    Offset_0x0150A4-Offset_0x01509E
                dc.w    Offset_0x0150E4-Offset_0x01509E
                dc.w    Offset_0x015176-Offset_0x01509E
Offset_0x0150A4:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x04_Mappings, $0004(A0) ; Offset_0x0151C2
                move.w  #$8400, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$80, $0019(A0)
                move.w  $0008(A0), $0030(A0)
                cmpi.b  #$0F, ($FFFFFE10).w
                bne.s   Offset_0x0150E4
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x04_Mappings_1, $0004(A0) ;  Offset_0x0152B2
                bra     Offset_0x015176
Offset_0x0150E4:
                move.w  ($FFFFF646).w, D1
                move.w  D1, $000C(A0)
                tst.b   $0032(A0)
                bne.s   Offset_0x015106
                btst    #$07, ($FFFFF605).w
                beq.s   Offset_0x015116
                addq.b  #$03, $001A(A0)
                move.b  #$01, $0032(A0)
                bra.s   Offset_0x015116
Offset_0x015106:
                tst.w   ($FFFFF63A).w
                bne.s   Offset_0x015116
                move.b  #$00, $0032(A0)
                subq.b  #$03, $001A(A0)
Offset_0x015116:
                lea     (Offset_0x015136), A1
                moveq   #$00, D1
                move.b  $001B(A0), D1
                move.b  $00(A1, D1), $001A(A0)
                addq.b  #$01, $001B(A0)
                andi.b  #$3F, $001B(A0)
                bra     J_DisplaySprite_00      ; Offset_0x015720
Offset_0x015136:
                dc.b    $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01
                dc.b    $01, $02, $01, $02, $01, $02, $01, $02, $01, $02, $01, $02, $01, $02, $01, $02
                dc.b    $02, $01, $02, $01, $02, $01, $02, $01, $02, $01, $02, $01, $02, $01, $02, $01
                dc.b    $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
Offset_0x015176:
                move.w  ($FFFFF646).w, D1
                move.w  D1, $000C(A0)
                tst.b   $0032(A0)
                bne.s   Offset_0x015198
                btst    #$07, ($FFFFF605).w
                beq.s   Offset_0x0151A8
                addq.b  #$02, $001A(A0)
                move.b  #$01, $0032(A0)
                bra.s   Offset_0x0151BE
Offset_0x015198:
                tst.w   ($FFFFF63A).w
                bne.s   Offset_0x0151BE
                move.b  #$00, $0032(A0)
                subq.b  #$02, $001A(A0)
Offset_0x0151A8:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x0151BE
                move.b  #$05, $001E(A0)
                addq.b  #$01, $001A(A0)
                andi.b  #$01, $001A(A0)
Offset_0x0151BE:
                bra     J_DisplaySprite_00      ; Offset_0x015720
Obj_0x04_Mappings:
Offset_0x0151C2:
                dc.w    Offset_0x0151CE-Offset_0x0151C2
                dc.w    Offset_0x0151E8-Offset_0x0151C2
                dc.w    Offset_0x015202-Offset_0x0151C2
                dc.w    Offset_0x01521C-Offset_0x0151C2
                dc.w    Offset_0x01524E-Offset_0x0151C2
                dc.w    Offset_0x015280-Offset_0x0151C2                   
Offset_0x0151CE:
                dc.w    $0003
                dc.l    $F80D0000, $0000FFA0, $F80D0000, $0000FFE0
                dc.l    $F80D0000, $00000020
Offset_0x0151E8:
                dc.w    $0003
                dc.l    $F80D0008, $0004FFA0, $F80D0008, $0004FFE0
                dc.l    $F80D0008, $00040020
Offset_0x015202:
                dc.w    $0003
                dc.l    $F80D0010, $0008FFA0, $F80D0010, $0008FFE0
                dc.l    $F80D0010, $00080020
Offset_0x01521C:
                dc.w    $0006
                dc.l    $F80D0000, $0000FFA0, $F80D0008, $0004FFC0
                dc.l    $F80D0000, $0000FFE0, $F80D0008, $00040000
                dc.l    $F80D0000, $00000020, $F80D0008, $00040040
Offset_0x01524E:
                dc.w    $0006
                dc.l    $F80D0008, $0004FFA0, $F80D0010, $0008FFC0
                dc.l    $F80D0008, $0004FFE0, $F80D0010, $00080000
                dc.l    $F80D0008, $00040020, $F80D0010, $00080040
Offset_0x015280:
                dc.w    $0006
                dc.l    $F80D0010, $0008FFA0, $F80D0008, $0004FFC0
                dc.l    $F80D0010, $0008FFE0, $F80D0008, $00040000
                dc.l    $F80D0010, $00080020, $F80D0008, $00040040
Obj_0x04_Mappings_1:
Offset_0x0152B2:
                dc.w    Offset_0x0152BA-Offset_0x0152B2
                dc.w    Offset_0x0152D4-Offset_0x0152B2
                dc.w    Offset_0x0152EE-Offset_0x0152B2
                dc.w    Offset_0x015320-Offset_0x0152B2
Offset_0x0152BA:
                dc.w    $0003
                dc.l    $FC0D0000, $0000FFA0, $FC0D0000, $0000FFE0
                dc.l    $FC0D0000, $00000020
Offset_0x0152D4:
                dc.w    $0003
                dc.l    $FC0D0008, $0004FFA0, $FC0D0008, $0004FFE0
                dc.l    $FC0D0008, $00040020
Offset_0x0152EE:
                dc.w    $0006
                dc.l    $FC0D0000, $0000FFA0, $FC0D0000, $0000FFC0
                dc.l    $FC0D0000, $0000FFE0, $FC0D0000, $00000000
                dc.l    $FC0D0000, $00000020, $FC0D0000, $00000040
Offset_0x015320:
                dc.w    $0006
                dc.l    $FC0D0008, $0004FFA0, $FC0D0008, $0004FFC0
                dc.l    $FC0D0008, $0004FFE0, $FC0D0008, $00040000
                dc.l    $FC0D0008, $00040020, $FC0D0008, $00040040                
;=============================================================================== 
; Object 0x04 - 
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Object 0x49 - Green Hill - Waterfalls 
; [ Begin ]        
;===============================================================================  
Obj_0x49_Waterfall: ; Offset_0x015352:                 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x015360(PC, D0), D1
                jmp     Offset_0x015360(PC, D1)
Offset_0x015360:
                dc.w    Offset_0x015364-Offset_0x015360
                dc.w    Offset_0x01539E-Offset_0x015360
               
Offset_0x015364:
                addq.b  #$02, $0024(A0)
                move.l  #Waterfall_Mappings, $0004(A0) ; Offset_0x015404
                move.w  #$23AE, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                move.b  #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.w  $0008(A0), $0030(A0)
                move.b  #$00, $0018(A0)
                move.b  #$80, $0016(A0)
                bset    #$04, $0001(A0)
Offset_0x01539E:
                tst.w   ($FFFFFFD8).w
                bne.s   Offset_0x0153B8
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_09       ; Offset_0x015726
Offset_0x0153B8:
                move.w  $0008(A0), D1
                move.w  D1, D2
                subi.w  #$0040, D1
                addi.w  #$0040, D2
                move.b  $0028(A0), D3
                move.b  #$00, $001A(A0)
                move.w  ($FFFFB008).w, D0
                cmp.w   D1, D0
                bcs.s   Offset_0x0153EA
                cmp.w   D2, D0
                bcc.s   Offset_0x0153EA
                move.b  #$01, $001A(A0)
                add.b   D3, $001A(A0)
                bra     J_DisplaySprite_00      ; Offset_0x015720
Offset_0x0153EA:
                move.w  ($FFFFB048).w, D0
                cmp.w   D1, D0
                bcs.s   Offset_0x0153FC
                cmp.w   D2, D0
                bcc.s   Offset_0x0153FC
                move.b  #$01, $001A(A0)
Offset_0x0153FC:
                add.b   D3, $001A(A0)
                bra     J_DisplaySprite_00      ; Offset_0x015720
Waterfall_Mappings:                
Offset_0x015404:
                dc.w    Offset_0x015414-Offset_0x015404
                dc.w    Offset_0x015426-Offset_0x015404
                dc.w    Offset_0x0154B8-Offset_0x015404
                dc.w    Offset_0x0154BA-Offset_0x015404
                dc.w    Offset_0x0154B8-Offset_0x015404
                dc.w    Offset_0x0154DC-Offset_0x015404
                dc.w    Offset_0x015414-Offset_0x015404
                dc.w    Offset_0x01552E-Offset_0x015404
Offset_0x015414:
                dc.w    $0002
                dc.l    $800D0000, $0000FFE0, $800D0000, $00000000
Offset_0x015426:
                dc.w    $0012
                dc.l    $800D0000, $0000FFE0, $800D0000, $00000000
                dc.l    $800F0008, $0004FFE0, $800F0008, $00040000
                dc.l    $A00F0008, $0004FFE0, $A00F0008, $00040000
                dc.l    $C00F0008, $0004FFE0, $C00F0008, $00040000
                dc.l    $E00F0008, $0004FFE0, $E00F0008, $00040000
                dc.l    $000F0008, $0004FFE0, $000F0008, $00040000
                dc.l    $200F0008, $0004FFE0, $200F0008, $00040000
                dc.l    $400F0008, $0004FFE0, $400F0008, $00040000
                dc.l    $600F0008, $0004FFE0, $600F0008, $00040000
Offset_0x0154B8:
                dc.w    $0000
Offset_0x0154BA:
                dc.w    $0004
                dc.l    $E00F0008, $0004FFE0, $E00F0008, $00040000
                dc.l    $000F0008, $0004FFE0, $000F0008, $00040000
Offset_0x0154DC:
                dc.w    $000A
                dc.l    $C00F0008, $0004FFE0, $C00F0008, $00040000
                dc.l    $E00F0008, $0004FFE0, $E00F0008, $00040000
                dc.l    $000F0008, $0004FFE0, $000F0008, $00040000
                dc.l    $200F0008, $0004FFE0, $200F0008, $00040000
                dc.l    $400F0008, $0004FFE0, $400F0008, $00040000
Offset_0x01552E:
                dc.w    $000E
                dc.l    $800D0000, $0000FFE0, $800D0000, $00000000
                dc.l    $800F0008, $0004FFE0, $800F0008, $00040000
                dc.l    $A00F0008, $0004FFE0, $A00F0008, $00040000
                dc.l    $C00F0008, $0004FFE0, $C00F0008, $00040000
                dc.l    $E00F0008, $0004FFE0, $E00F0008, $00040000
                dc.l    $000F0008, $0004FFE0, $000F0008, $00040000
                dc.l    $200F0008, $0004FFE0, $200F0008, $00040000
;=============================================================================== 
; Object 0x49 - Green Hill - Waterfalls 
; [ End ]                         
;===============================================================================                

;=============================================================================== 
; Object 0x31 - Hill Top / Metropolis - Lava Attributes 
; [ Begin ]                         
;===============================================================================   
Obj_0x31_Lava_Attributes: ; Offset_0x0155A0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x0155AE(PC, D0), D1
                jmp     Offset_0x0155AE(PC, D1)
Offset_0x0155AE:
                dc.w    Offset_0x0155B6-Offset_0x0155AE
                dc.w    Offset_0x0155EC-Offset_0x0155AE
Offset_0x0155B2: 
                dc.w    $9694, $9500
                
Offset_0x0155B6:
                addq.b  #$02, $0024(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.b  Offset_0x0155B2(PC, D0), $0020(A0)
                move.l  #Lava_Attributes_Mappings, $0004(A0) ; Offset_0x015612
                move.w  #$8680, $0002(A0)
                move.b  #$84, $0001(A0)
                move.b  #$80, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), $001A(A0)
Offset_0x0155EC:                
                tst.w   ($FFFFFFD8).w
                bne.s   Offset_0x015606
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_09       ; Offset_0x015726
Offset_0x015606:
                tst.w   ($FFFFFE08).w
                beq.s   Offset_0x015610
                bsr     J_DisplaySprite_00      ; Offset_0x015720
Offset_0x015610:                
                rts
Lava_Attributes_Mappings:                
Offset_0x015612:
                dc.w    Offset_0x015618-Offset_0x015612
                dc.w    Offset_0x015618-Offset_0x015612
                dc.w    Offset_0x015618-Offset_0x015612
Offset_0x015618:
                dc.w    $0000
;=============================================================================== 
; Object 0x31 - Hill Top / Metropolis - Lava Attributes 
; [ End ]                         
;=============================================================================== 
;=============================================================================== 
; Object 0x74 - Hill Top / Metropolis / Dust Hill... - Invisible Block 
; [ Begin ]                         
;===============================================================================   
Obj_0x74_Invisible_Block: ; Offset_0x01561A:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x015628(PC, D0), D1
                jmp     Offset_0x015628(PC, D1)
Offset_0x015628:
                dc.w    Offset_0x01562C-Offset_0x015628
                dc.w    Offset_0x015668-Offset_0x015628
Offset_0x01562C:
                addq.b  #$02, $0024(A0)
                move.l  #Invisible_Block_Mappings, $0004(A0) ; Offset_0x0156B2
                move.w  #$8680, $0002(A0)
                bsr     ModifySpriteAttr_2P     ; Offset_0x00DC30
                ori.b   #$04, $0001(A0)
                move.b  $0028(A0), D0
                move.b  D0, D1
                andi.w  #$00F0, D0
                addi.w  #$0010, D0
                lsr.w   #$01, D0
                move.b  D0, $0019(A0)
                andi.w  #$000F, D1
                addq.w  #$01, D1
                lsl.w   #$03, D1
                move.b  D1, $0016(A0)
Offset_0x015668:
                bsr     Offset_0x00DDD8
                bne.s   Offset_0x01568A
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     Offset_0x00F4FA
Offset_0x01568A:
                tst.w   ($FFFFFFD8).w
                bne.s   Offset_0x0156A4
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_09       ; Offset_0x015726
Offset_0x0156A4:
                tst.w   ($FFFFFE08).w
                beq.s   Offset_0x0156B0
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x0156B0:
                rts
Invisible_Block_Mappings:
Offset_0x0156B2:
                dc.w    Offset_0x0156B8-Offset_0x0156B2
                dc.w    Offset_0x0156DA-Offset_0x0156B2
                dc.w    Offset_0x0156FC-Offset_0x0156B2
Offset_0x0156B8:
                dc.w    $0004
                dc.l    $F005001C, $000EFFF0, $F005001C, $000E0000
                dc.l    $0005001C, $000EFFF0, $0005001C, $000E0000
Offset_0x0156DA:
                dc.w    $0004
                dc.l    $E005001C, $000EFFC0, $E005001C, $000E0030
                dc.l    $1005001C, $000EFFC0, $1005001C, $000E0030
Offset_0x0156FC:
                dc.w    $0004
                dc.l    $E005001C, $000EFF80, $E005001C, $000E0070
                dc.l    $1005001C, $000EFF80, $1005001C, $000E0070                
;=============================================================================== 
; Object 0x74 - Hill Top / Metropolis / Dust Hill... - Invisible Block 
; [ End ]                         
;===============================================================================   

                nop                             ; Filler 
J_DisplaySprite_00: ; Offset_0x015720:
                jmp     DisplaySprite           ; Offset_0x00D3C2
J_DeleteObject_09: ; Offset_0x015726:
                jmp     DeleteObject            ; Offset_0x00D3B4
;=============================================================================== 
; Object 0x06 - Green Hill / Metropolis - Spiral Loopings Attributes, ... 
; [ Begin ]                         
;===============================================================================                   
Obj_0x06_Spiral_Attributes: ; Offset_0x01572C:   
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01575C(PC, D0), D1
                jsr     Offset_0x01575C(PC, D1)
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x015742
                rts
Offset_0x015742:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_0A       ; Offset_0x015756
                rts
J_DeleteObject_0A: ; Offset_0x015756:
                jmp     DeleteObject            ; Offset_0x00D3B4
Offset_0x01575C:
                dc.w    Offset_0x015762-Offset_0x01575C
                dc.w    Offset_0x01577A-Offset_0x01575C
                dc.w    Offset_0x015A6A-Offset_0x01575C
Offset_0x015762:
                addq.b  #$02, $0024(A0)
                move.b  #$D0, $0019(A0)
                tst.b   $0028(A0)
                bpl.s   Offset_0x01577A
                addq.b  #$02, $0024(A0)
                bra     Offset_0x015A6A
Offset_0x01577A:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                bsr.s   Offset_0x015788
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
Offset_0x015788:
                btst    D6, $0022(A0)
                bne     Offset_0x015822
                btst    #$01, $0022(A1)
                bne     Offset_0x015820
                btst    #$03, $0022(A1)
                bne.s   Offset_0x0157E2
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                tst.w   $0010(A1)
                bmi.s   Offset_0x0157BE
                cmpi.w  #$FF40, D0
                bgt.s   Offset_0x015820
                cmpi.w  #$FF30, D0
                blt.s   Offset_0x015820
                bra.s   Offset_0x0157CA
Offset_0x0157BE:
                cmpi.w  #$00C0, D0
                blt.s   Offset_0x015820
                cmpi.w  #$00D0, D0
                bgt.s   Offset_0x015820
Offset_0x0157CA:
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                subi.w  #$0010, D1
                cmpi.w  #$0030, D1
                bcc.s   Offset_0x015820
                bsr     Offset_0x00FAF2
                rts
Offset_0x0157E2:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                tst.w   $0010(A1)
                bmi.s   Offset_0x0157FE
                cmpi.w  #$FF50, D0
                bgt.s   Offset_0x015820
                cmpi.w  #$FF40, D0
                blt.s   Offset_0x015820
                bra.s   Offset_0x01580A
Offset_0x0157FE:
                cmpi.w  #$00B0, D0
                blt.s   Offset_0x015820
                cmpi.w  #$00C0, D0
                bgt.s   Offset_0x015820
Offset_0x01580A:
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                subi.w  #$0010, D1
                cmpi.w  #$0030, D1
                bcc.s   Offset_0x015820
                bsr     Offset_0x00FAF2
Offset_0x015820:
                rts
Offset_0x015822:
                move.w  $0014(A1), D0
                bpl.s   Offset_0x01582A
                neg.w   D0
Offset_0x01582A:
                cmpi.w  #$0600, D0
                bcs.s   Offset_0x01584C
                btst    #$01, $0022(A1)
                bne.s   Offset_0x01584C
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addi.w  #$00D0, D0
                bmi.s   Offset_0x01584C
                cmpi.w  #$01A0, D0
                bcs.s   Offset_0x015864
Offset_0x01584C:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                rts
Offset_0x015864:
                btst    #$03, $0022(A1)
                beq.s   Offset_0x015820
                move.b  Offset_0x0158CA(PC, D0), D1
                ext.w   D1
                move.w  $000C(A0), D2
                add.w   D1, D2
                moveq   #$00, D1
                move.b  $0016(A1), D1
                subi.w  #$0013, D1
                sub.w   D1, D2
                move.w  D2, $000C(A1)
                lsr.w   #$03, D0
                andi.w  #$003F, D0
                move.b  Offset_0x015896(PC, D0), $0027(A1)
                rts
Offset_0x015896:
                dc.b    $00, $00, $01, $01, $16, $16, $16, $16, $2C, $2C, $2C, $2C, $42, $42, $42, $42
                dc.b    $58, $58, $58, $58, $6E, $6E, $6E, $6E, $84, $84, $84, $84, $9A, $9A, $9A, $9A
                dc.b    $B0, $B0, $B0, $B0, $C6, $C6, $C6, $C6, $DC, $DC, $DC, $DC, $F2, $F2, $F2, $F2
                dc.b    $01, $01, $00, $00
Offset_0x0158CA:
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $1F, $1F
                dc.b    $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1E, $1E, $1E
                dc.b    $1E, $1E, $1E, $1E, $1E, $1E, $1D, $1D, $1D, $1D, $1D, $1C, $1C, $1C, $1C, $1B
                dc.b    $1B, $1B, $1B, $1A, $1A, $1A, $19, $19, $19, $18, $18, $18, $17, $17, $16, $16
                dc.b    $15, $15, $14, $14, $13, $12, $12, $11, $10, $10, $0F, $0E, $0E, $0D, $0C, $0C
                dc.b    $0B, $0A, $0A, $09, $08, $08, $07, $06, $06, $05, $04, $04, $03, $02, $02, $01
                dc.b    $00, $FF, $FE, $FE, $FD, $FC, $FC, $FB, $FA, $F9, $F9, $F8, $F7, $F7, $F6, $F6
                dc.b    $F5, $F5, $F4, $F4, $F3, $F2, $F2, $F1, $F1, $F0, $F0, $EF, $EF, $EE, $EE, $ED
                dc.b    $ED, $ED, $EC, $EB, $EB, $EA, $EA, $E9, $E9, $E8, $E8, $E7, $E7, $E6, $E6, $E5
                dc.b    $E5, $E4, $E4, $E4, $E3, $E3, $E2, $E2, $E2, $E1, $E1, $E1, $E0, $E0, $E0, $DF
                dc.b    $DF, $DF, $DF, $DE, $DE, $DE, $DD, $DD, $DD, $DD, $DD, $DD, $DD, $DD, $DC, $DC
                dc.b    $DC, $DC, $DC, $DC, $DC, $DC, $DC, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB
                dc.b    $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB
                dc.b    $DB, $DB, $DB, $DB, $DC, $DC, $DC, $DC, $DC, $DC, $DC, $DD, $DD, $DD, $DD, $DD
                dc.b    $DD, $DD, $DD, $DE, $DE, $DE, $DF, $DF, $DF, $DF, $E0, $E0, $E0, $E1, $E1, $E1
                dc.b    $E2, $E2, $E2, $E3, $E3, $E4, $E4, $E4, $E5, $E5, $E6, $E6, $E7, $E7, $E8, $E8
                dc.b    $E9, $E9, $EA, $EA, $EB, $EB, $EC, $ED, $ED, $EE, $EE, $EF, $F0, $F0, $F1, $F2
                dc.b    $F2, $F3, $F4, $F5, $F5, $F6, $F7, $F8, $F9, $F9, $FA, $FB, $FC, $FD, $FE, $FF
                dc.b    $00, $01, $02, $03, $04, $05, $06, $07, $08, $08, $09, $0A, $0A, $0B, $0C, $0D
                dc.b    $0D, $0E, $0E, $0F, $0F, $10, $10, $11, $11, $12, $12, $13, $13, $14, $14, $15
                dc.b    $15, $16, $16, $17, $17, $18, $18, $18, $19, $19, $19, $19, $1A, $1A, $1A, $1A
                dc.b    $1B, $1B, $1B, $1B, $1C, $1C, $1C, $1C, $1C, $1C, $1D, $1D, $1D, $1D, $1D, $1D
                dc.b    $1D, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F
                dc.b    $1F, $1F, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20                
Offset_0x015A6A:
                lea     ($FFFFB000).w, A1
                lea     ($FFFFF7B2).w, A2
                moveq   #$03, D6
                bsr.s   Offset_0x015A80
                lea     ($FFFFB040).w, A1
                lea     ($FFFFF7B3).w, A2
                addq.b  #$01, D6
Offset_0x015A80:
                btst    D6, $0022(A0)
                bne     Offset_0x015AEE
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                cmpi.w  #$FF40, D0
                blt.s   Offset_0x015AEC
                cmpi.w  #$00C0, D0
                bge.s   Offset_0x015AEC
                move.w  $000C(A0), D0
                addi.w  #$003C, D0
                move.w  $000C(A1), D2
                move.b  $0016(A1), D1
                ext.w   D1
                add.w   D2, D1
                addq.w  #$04, D1
                sub.w   D1, D0
                bhi.s   Offset_0x015AEC
                cmpi.w  #$FFF0, D0
                bcs.s   Offset_0x015AEC
                cmpi.b  #$06, $0024(A1)
                bcc.s   Offset_0x015AEC
                add.w   D0, D2
                addq.w  #$03, D2
                move.w  D2, $000C(A1)
                move.b  #$01, $0029(A1)
                bsr     Offset_0x00FAF2
                move.w  #$0001, $001C(A1)
                move.b  #$00, (A2)
                tst.w   $0014(A1)
                bne.s   Offset_0x015AEC
                move.w  #$0001, $0014(A1)
Offset_0x015AEC:
                rts
Offset_0x015AEE:
                btst    #$01, $0022(A1)
                bne.s   Offset_0x015B28
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addi.w  #$00C0, D0
                bmi.s   Offset_0x015B0A
                cmpi.w  #$0180, D0
                bcs.s   Offset_0x015B42
Offset_0x015B0A:
                bclr    #$03, $0022(A1)
                bclr    D6, $0022(A0)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                bset    #$01, $0022(A1)
                rts
Offset_0x015B28:
                move.b  (A2), D0
                addi.b  #$20, D0
                cmpi.b  #$40, D0
                bcc.s   Offset_0x015B3A
                asr.w   $0012(A1)
                bra.s   Offset_0x015B0A
Offset_0x015B3A:
                move.w  #$0000, $0012(A1)
                bra.s   Offset_0x015B0A
Offset_0x015B42:
                btst    #$03, $0022(A1)
                beq.s   Offset_0x015AEC
                move.b  (A2), D0
                bsr     Offset_0x015B84
                muls.w  #$2800, D1
                swap.w  D1
                move.w  $000C(A0), D2
                add.w   D1, D2
                moveq   #$00, D1
                move.b  $0016(A1), D1
                subi.w  #$0013, D1
                sub.w   D1, D2
                move.w  D2, $000C(A1)
                move.b  (A2), D0
                move.b  D0, $0027(A1)
                addq.b  #$04, (A2)
                tst.w   $0014(A1)
                bne.s   Offset_0x015B80
                move.w  #$0001, $0014(A1)
Offset_0x015B80:
                rts             
;=============================================================================== 
; Object 0x06 - Green Hill / Metropolis - Spiral Loopings Attributes, ... 
; [ End ]                         
;=============================================================================== 
                nop                             ; Filler
Offset_0x015B84:
                jmp     CalcSine                ; Offset_0x00320A  
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x14 - Hill Top See-saw badnick 
; [ Begin ]                         
;===============================================================================    
Obj_0x14_See_Saw: ; Offset_0x015B8C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x015BA2(PC, D0), D1
                jsr     Offset_0x015BA2(PC, D1)
                move.w  $0030(A0), D0
                bra     Offset_0x016004
Offset_0x015BA2:
                dc.w    Offset_0x015BAE-Offset_0x015BA2
                dc.w    Offset_0x015C1C-Offset_0x015BA2
                dc.w    Offset_0x015CD8-Offset_0x015BA2
                dc.w    Offset_0x015D06-Offset_0x015BA2
                dc.w    Offset_0x015D60-Offset_0x015BA2
                dc.w    Offset_0x015DF8-Offset_0x015BA2
Offset_0x015BAE:
                addq.b  #$02, $0024(A0)
                move.l  #See_Saw_Mappings, $0004(A0)  ; Offset_0x015F54
                move.w  #$03C6, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_00 ; Offset_0x015FF8
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$30, $0019(A0)
                move.w  $0008(A0), $0030(A0)
                tst.b   $0028(A0)
                bne.s   Offset_0x015C08
                bsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x015C08
                move.b  #$14, $0000(A1)
                addq.b  #$06, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $0022(A0), $0022(A1)
                move.l  A0, $003C(A1)
Offset_0x015C08:
                btst    #$00, $0022(A0)
                beq.s   Offset_0x015C16
                move.b  #$02, $001A(A0)
Offset_0x015C16:
                move.b  $001A(A0), $003A(A0)
Offset_0x015C1C:
                move.b  $003A(A0), D1
                btst    #$03, $0022(A0)
                beq.s   Offset_0x015C76
                moveq   #$02, D1  
                lea     ($FFFFB000).w, A1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   Offset_0x015C3C
                neg.w   D0
                moveq   #$00, D1
Offset_0x015C3C:
                cmpi.w  #$0008, D0
                bcc.s   Offset_0x015C44
                moveq   #$01, D1
Offset_0x015C44:
                btst    #$04, $0022(A0)
                beq.s   Offset_0x015CAE
                moveq   #$02, D2
                lea     ($FFFFB040).w, A1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0 
                bcc.s   Offset_0x015C60
                neg.w   D0
                moveq   #$00, D2
Offset_0x015C60:
                cmpi.w  #$0008, D0
                bcc.s   Offset_0x015C68
                moveq   #$01, D2
Offset_0x015C68:
                add.w   D2, D1
                cmpi.w  #$0003, D1   
                bne.s   Offset_0x015C72
                addq.w  #$01, D1
Offset_0x015C72:
                lsr.w   #$01, D1
                bra.s   Offset_0x015CAE
Offset_0x015C76:                
                btst    #$04, $0022(A0)
                beq.s   Offset_0x015C9C
                moveq   #$02, D1
                lea     ($FFFFB040).w, A1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   Offset_0x015C92
                neg.w   D0
                moveq   #$00, D1
Offset_0x015C92:
                cmpi.w  #$0008, D0
                bcc.s   Offset_0x015CAE
                moveq   #$01, D1
                bra.s   Offset_0x015CAE
Offset_0x015C9C:
                move.w  ($FFFFB012).w, D0
                move.w  ($FFFFB052).w, D2
                cmp.w   D0, D2
                blt.s   Offset_0x015CAA
                move.w  D2, D0
Offset_0x015CAA:
                move.w  D0, $0038(A0)
Offset_0x015CAE:
                bsr     Offset_0x015CDA
                lea     (Offset_0x015EF2), A2
                btst    #$00, $001A(A0)
                beq.s   Offset_0x015CC6
                lea     (Offset_0x015F23), A2
Offset_0x015CC6:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$08, D3
                move.w  (A7)+, D4
                bra     Offset_0x00F9D6
Offset_0x015CD8:
                rts
Offset_0x015CDA:
                move.b  $001A(A0), D0
                cmp.b   D1, D0
                beq.s   Offset_0x015D04
                bcc.s   Offset_0x015CE6
                addq.b  #$02, D0
Offset_0x015CE6:
                subq.b  #$01, D0
                move.b  D0, $001A(A0)
                move.b  D1, $003A(A0)
                bclr    #$00, $0001(A0)
                btst    #$01, $001A(A0)
                beq.s   Offset_0x015D04
                bset    #$00, $0001(A0)
Offset_0x015D04:
                rts
Offset_0x015D06:
                addq.b  #$02, $0024(A0)
                move.l  #See_Saw_Badnick_Mappings, $0004(A0) ; Offset_0x015FE0
                move.w  #$03DE, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_00 ; Offset_0x015FF8
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$8B, $0020(A0)
                move.b  #$0C, $0019(A0)
                move.w  $0008(A0), $0030(A0)
                addi.w  #$0028, $0008(A0)
                addi.w  #$0010, $000C(A0)
                move.w  $000C(A0), $0034(A0)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x015D60
                subi.w  #$0050, $0008(A0)
                move.b  #$02, $003A(A0)
Offset_0x015D60:
                bsr     Offset_0x015ECA
                move.l  $003C(A0), A1
                moveq   #$00, D0
                move.b  $003A(A0), D0
                sub.b   $003A(A1), D0
                beq.s   Offset_0x015DBA
                bcc.s   Offset_0x015D78
                neg.b   D0
Offset_0x015D78:
                move.w  #$F7E8, D1
                move.w  #$FEEC, D2
                cmpi.b  #$01, D0
                beq.s   Offset_0x015D9E
                move.w  #$F510, D1
                move.w  #$FF34, D2
                cmpi.w  #$0A00, $0038(A1)
                blt.s   Offset_0x015D9E
                move.w  #$F200, D1
                move.w  #$FF60, D2
Offset_0x015D9E:
                move.w  D1, $0012(A0)
                move.w  D2, $0010(A0)
                move.w  $0008(A0), D0
                sub.w   $0030(A0), D0
                bcc.s   Offset_0x015DB4
                neg.w   $0010(A0)
Offset_0x015DB4:
                addq.b  #$02, $0024(A0)
                bra.s   Offset_0x015DF8
Offset_0x015DBA:
                lea     (Offset_0x015EC0), A2
                moveq   #$00, D0
                move.b  $001A(A1), D0
                move.w  #$0028, D2
                move.w  $0008(A0), D1
                sub.w   $0030(A0), D1
                bcc.s   Offset_0x015DD8
                neg.w   D2
                addq.w  #$02, D0
Offset_0x015DD8:
                add.w   D0, D0
                move.w  $0034(A0), D1
                add.w   $00(A2, D0), D1
                move.w  D1, $000C(A0)
                add.w   $0030(A0), D2
                move.w  D2, $0008(A0)
                clr.w   $000E(A0)
                clr.w   $000A(A0)
                rts
Offset_0x015DF8:
                bsr     Offset_0x015ECA
                tst.w   $0012(A0)
                bpl.s   Offset_0x015E1A
                bsr     J_ObjectFall_00         ; Offset_0x015FFE
                move.w  $0034(A0), D0
                subi.w  #$002F, D0
                cmp.w   $000C(A0), D0
                bgt.s   Offset_0x015E18
                bsr     J_ObjectFall_00         ; Offset_0x015FFE
Offset_0x015E18:
                rts
Offset_0x015E1A:
                bsr     J_ObjectFall_00         ; Offset_0x015FFE
                move.l  $003C(A0), A1
                lea     (Offset_0x015EC0), A2
                moveq   #$00, D0
                move.b  $001A(A1), D0
                move.w  $0008(A0), D1
                sub.w   $0030(A0), D1
                bcc.s   Offset_0x015E3A
                addq.w  #$02, D0
Offset_0x015E3A:
                add.w   D0, D0
                move.w  $0034(A0), D1
                add.w   $00(A2, D0), D1
                cmp.w   $000C(A0), D1
                bgt.s   Offset_0x015E8E
                move.l  $003C(A0), A1
                moveq   #$02, D1
                tst.w   $0010(A0)
                bmi.s   Offset_0x015E58
                moveq   #$00, D1
Offset_0x015E58:
                move.b  D1, $003A(A1)
                move.b  D1, $003A(A0)
                cmp.b   $001A(A1), D1
                beq.s   Offset_0x015E82
                lea     ($FFFFB000).w, A2
                bclr    #$03, $0022(A1)
                beq.s   Offset_0x015E74
                bsr.s   Offset_0x015E90
Offset_0x015E74:
                lea     ($FFFFB040).w, A2
                bclr    #$04, $0022(A1)
                beq.s   Offset_0x015E82
                bsr.s   Offset_0x015E90
Offset_0x015E82:
                clr.w   $0010(A0)
                clr.w   $0012(A0)
                subq.b  #$02, $0024(A0)
Offset_0x015E8E:                
                rts
Offset_0x015E90:
                move.w  $0012(A0), $0012(A2)
                neg.w   $0012(A2)
                bset    #$01, $0022(A2)
                bclr    #$03, $0022(A2)
                clr.b   $003C(A2)
                move.b  #$10, $001C(A2)
                move.b  #$02, $0024(A2)
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x015EC0:                
                dc.w    $FFF8, $FFE4, $FFD1, $FFE4, $FFF8
Offset_0x015ECA:
                move.b  ($FFFFFE05).w, D0
                andi.b  #$03, D0
                bne.s   Offset_0x015EDA
                bchg    #5, $0002(A0)
Offset_0x015EDA:
                andi.b  #$FE, $0001(A0)
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                bcs.s   Offset_0x015EF0
                ori.b   #$01, $0001(A0)
Offset_0x015EF0:
                rts                
Offset_0x015EF2:                
                dc.b    $14, $14, $16, $18, $1A, $1C, $1A, $18, $16, $14, $13, $12, $11, $10, $0F, $0E
                dc.b    $0D, $0C, $0B, $0A, $09, $08, $07, $06, $05, $04, $03, $02, $01, $00, $FF, $FE
                dc.b    $FD, $FC, $FB, $FA, $F9, $F8, $F7, $F6, $F5, $F4, $F3, $F2, $F2, $F2, $F2, $F2
                dc.b    $F2
Offset_0x015F23:
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $00
See_Saw_Mappings:                
Offset_0x015F54:
                dc.w    Offset_0x015F5C-Offset_0x015F54
                dc.w    Offset_0x015F9E-Offset_0x015F54
                dc.w    Offset_0x015F5C-Offset_0x015F54
                dc.w    Offset_0x015F9E-Offset_0x015F54
Offset_0x015F5C:
                dc.w    $0008
                dc.l    $FC054014, $400AFFF8, $0C012012, $2009FFFC
                dc.l    $E4054006, $4003FFD0, $EC05400A, $4005FFE0
                dc.l    $F405400A, $4005FFF0, $FC05400A, $40050000
                dc.l    $0405400A, $40050010, $0C05400E, $40070020
Offset_0x015F9E:
                dc.w    $0008
                dc.l    $FC054014, $400AFFF8, $0C012012, $2009FFFC
                dc.l    $F4054000, $4000FFD0, $F4054002, $4001FFE0
                dc.l    $F4054002, $4001FFF0, $F4054002, $40010000
                dc.l    $F4054002, $40010010, $F4054800, $48000020 
See_Saw_Badnick_Mappings:                               
Offset_0x015FE0:
                dc.w    Offset_0x015FE4-Offset_0x015FE0
                dc.w    Offset_0x015FEE-Offset_0x015FE0
Offset_0x015FE4:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Offset_0x015FEE:
                dc.w    $0001
                dc.l    $F8052000, $2000FFF8  
;=============================================================================== 
; Object 0x14 - Hill Top See-saw badnick 
; [ End ]                         
;===============================================================================                   
J_ModifySpriteAttr_2P_00: ; Offset_0x015FF8:
                jmp     ModifySpriteAttr_2P     ; Offset_0x00DC30  
J_ObjectFall_00: ; ; Offset_0x015FFE:
                jmp     ObjectFall              ; Offset_0x00D24E   
Offset_0x016004:
                jmp     Offset_0x00D2D8                                        
 
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x16 - Hill Top Teleferics
; [ Begin ]                         
;===============================================================================                    
Obj_0x16_Teleferics: ; Offset_0x01600C:   
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01601A(PC, D0), D1
                jmp     Offset_0x01601A(PC, D1)
Offset_0x01601A:
                dc.w    Offset_0x01601E-Offset_0x01601A
                dc.w    Offset_0x016064-Offset_0x01601A
Offset_0x01601E:
                addq.b  #$02, $0024(A0)
                move.l  #Teleferics_Mappings, $0004(A0)  ; Offset_0x01611E
                move.w  #$43E6, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_01 ; Offset_0x016210
                ori.b   #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.b  #$00, $001A(A0)
                move.b  #$01, $0018(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0032(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsl.w   #$03, D0
                move.w  D0, $0034(A0)
Offset_0x016064:
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x016080
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  #$FFD8, D3
                move.w  (A7)+, D4
                bsr     Offset_0x00F984
                bra     J_MarkObjGone_00        ; Offset_0x01620A
Offset_0x016080:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01608E(PC, D0), D1
                jmp     Offset_0x01608E(PC, D1)
Offset_0x01608E:
                dc.w    Offset_0x016094-Offset_0x01608E
                dc.w    Offset_0x0160BC-Offset_0x01608E
                dc.w    Offset_0x016102-Offset_0x01608E
Offset_0x016094:               
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   Offset_0x0160BA
                addq.b  #$02, $0025(A0)
                move.w  #$0200, $0010(A0)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x0160B4
                neg.w   $0010(A0)
Offset_0x0160B4:
                move.w  #$0100, $0012(A0)
Offset_0x0160BA:
                rts
Offset_0x0160BC:
                bsr     J_SpeedToPos_00         ; Offset_0x016216
                subq.w  #$01, $0034(A0)
                bne.s   Offset_0x016100
                addq.b  #$02, $0025(A0)
                move.b  #$02, $001A(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0012(A0)
                bsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x016100
                move.b  #$1C, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  #$06, $0028(A1)
Offset_0x016100:
                rts
Offset_0x016102:
                bsr     J_SpeedToPos_00         ; Offset_0x016216
                addi.w  #$0038, $0012(A0)
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs     J_DeleteObject_0B       ; Offset_0x016204
                rts   
Teleferics_Mappings:
Offset_0x01611E:
                dc.w    Offset_0x016128-Offset_0x01611E
                dc.w    Offset_0x01617A-Offset_0x01611E
                dc.w    Offset_0x0161BC-Offset_0x01611E
                dc.w    Offset_0x0161CE-Offset_0x01611E
                dc.w    Offset_0x0161E8-Offset_0x01611E
Offset_0x016128:
                dc.w    $000A
                dc.l    $C1050000, $0000FFE4, $D0030004, $0002FFE6
                dc.l    $F0030004, $0002FFE6, $10010008, $0004FFE7
                dc.l    $D505000A, $0005000C, $E003000E, $00070011
                dc.l    $10010012, $00090011, $0003000E, $00070011
                dc.l    $200D0014, $000AFFE0, $200D0814, $080A0000
Offset_0x01617A:
                dc.w    $0008
                dc.l    $C1050000, $0000FFE4, $D0030004, $0002FFE6
                dc.l    $F0030004, $0002FFE6, $1001002C, $0016FFE6
                dc.l    $D505000A, $0005000C, $E003000E, $00070011
                dc.l    $1801002E, $00170011, $0003000E, $00070011
Offset_0x0161BC:
                dc.w    $0002
                dc.l    $200D0014, $000AFFE0, $200D0814, $080A0000
Offset_0x0161CE:
                dc.w    $0003
                dc.l    $D805001C, $000EFFF8, $E8070020, $0010FFF8
                dc.l    $08070020, $0010FFF8
Offset_0x0161E8:
                dc.w    $0003
                dc.l    $D8050028, $0014FFF8, $E8070820, $0810FFF8
                dc.l    $08070820, $0810FFF8   
                nop                             ;  Filler
J_DeleteObject_0B: ; Offset_0x016204:
                jmp     DeleteObject            ; Offset_0x00D3B4
J_MarkObjGone_00: ; Offset_0x01620A:           
                jmp     MarkObjGone             ; Offset_0x00D2A0
J_ModifySpriteAttr_2P_01: ; Offset_0x016210:
                jmp     ModifySpriteAttr_2P     ; Offset_0x00DC30
J_SpeedToPos_00: ; Offset_0x016216:
                jmp     SpeedToPos              ; Offset_0x00D27A               
;=============================================================================== 
; Object 0x16 - Hill Top Teleferics
; [ End ]                         
;===============================================================================                             
;=============================================================================== 
; Object 0x19 - Oil Ocean - Elevators
; [ Begin ]                         
;===============================================================================  
Obj_0x19_Elevator: ; Offset_0x01621C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01622A(PC, D0), D1
                jmp     Offset_0x01622A(PC, D1)
Offset_0x01622A:
                dc.w    Offset_0x016238-Offset_0x01622A
                dc.w    Offset_0x0162A0-Offset_0x01622A
Offset_0x01622E                
                dc.b    $20, $00, $18, $01, $20, $02, $40, $03, $30, $04
Offset_0x016238:
                addq.b  #$02, $0024(A0)
                move.l  #Elevator_Mappings, $0004(A0) ; Offset_0x016412
                move.w  #$63A0, $0002(A0)
                cmpi.b  #$0A, ($FFFFFE10).w
                bne.s   Offset_0x016258
                move.w  #$6300, $0002(A0)
Offset_0x016258:
                bsr     J_ModifySpriteAttr_2P_02 ; Offset_0x01645C
                move.b  #$04, $0001(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$001E, D0
                lea     Offset_0x01622E(PC, D0), A2
                move.b  (A2)+, $0019(A0)
                move.b  (A2)+, $001A(A0)
                move.b  #$04, $0018(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0032(A0)
                andi.b  #$0F, $0028(A0)
                cmpi.b  #$07, $0028(A0)
                bne.s   Offset_0x0162A0
                subi.w  #$00C0, $000C(A0)
Offset_0x0162A0:
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x0162D0
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  #$0010, D3
                move.w  (A7)+, D4
                bsr     Offset_0x00F984
                move.w  $0030(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_0C       ; Offset_0x016456
                bra     J_DisplaySprite_01      ; Offset_0x016450
Offset_0x0162D0:
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                add.w   D0, D0
                move.w  Offset_0x0162E4(PC, D0), D1
                jmp     Offset_0x0162E4(PC, D1)
Offset_0x0162E4:
                dc.w    Offset_0x016304-Offset_0x0162E4
                dc.w    Offset_0x01630E-Offset_0x0162E4
                dc.w    Offset_0x01632E-Offset_0x0162E4
                dc.w    Offset_0x01634E-Offset_0x0162E4
                dc.w    Offset_0x01635E-Offset_0x0162E4
                dc.w    Offset_0x01637E-Offset_0x0162E4
                dc.w    Offset_0x016380-Offset_0x0162E4
                dc.w    Offset_0x016380-Offset_0x0162E4
                dc.w    Offset_0x01639C-Offset_0x0162E4
                dc.w    Offset_0x01639C-Offset_0x0162E4
                dc.w    Offset_0x01639C-Offset_0x0162E4
                dc.w    Offset_0x01639C-Offset_0x0162E4
                dc.w    Offset_0x0163D6-Offset_0x0162E4
                dc.w    Offset_0x0163D6-Offset_0x0162E4
                dc.w    Offset_0x0163D6-Offset_0x0162E4
                dc.w    Offset_0x0163D6-Offset_0x0162E4
Offset_0x016304:
                move.b  ($FFFFFE68).w, D0
                move.w  #$0040, D1
                bra.s   Offset_0x016316
Offset_0x01630E:
                move.b  ($FFFFFE6C).w, D0
                move.w  #$0060, D1
Offset_0x016316:
                btst    #$00, $0022(A0)
                beq.s   Offset_0x016322
                neg.w   D0
                add.w   D1, D0
Offset_0x016322:
                move.w  $0030(A0), D1
                sub.w   D0, D1
                move.w  D1, $0008(A0)
                rts
Offset_0x01632E:
                move.b  ($FFFFFE7C).w, D0
                move.w  #$0080, D1
                btst    #$00, $0022(A0)
                beq.s   Offset_0x016342
                neg.w   D0
                add.w   D1, D0
Offset_0x016342:
                move.w  $0032(A0), D1
                sub.w   D0, D1
                move.w  D1, $000C(A0)
                rts
Offset_0x01634E:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   Offset_0x01635C
                addq.b  #$01, $0028(A0)
Offset_0x01635C:
                rts
Offset_0x01635E:
                bsr     J_SpeedToPos_01         ; Offset_0x016462
                moveq   #$08, D1
                move.w  $0032(A0), D0
                subi.w  #$0060, D0
                cmp.w   $000C(A0), D0
                bcc.s   Offset_0x016374
                neg.w   D1
Offset_0x016374:
                add.w   D1, $0012(A0)
                bne.s   Offset_0x01637E
                addq.b  #$01, $0028(A0)
Offset_0x01637E:
                rts
Offset_0x016380:
                bsr     J_SpeedToPos_01         ; Offset_0x016462
                moveq   #$08, D1
                move.w  $0032(A0), D0
                subi.w  #$0060, D0
                cmp.w   $000C(A0), D0
                bcc.s   Offset_0x016396
                neg.w   D1
Offset_0x016396:
                add.w   D1, $0012(A0)
                rts
Offset_0x01639C:
                move.b  ($FFFFFE98).w, D1
                subi.b  #$40, D1
                ext.w   D1
                move.b  ($FFFFFE9C).w, D2
                subi.b  #$40, D2
                ext.w   D2
                btst    #$02, D0
                beq.s   Offset_0x0163BA
                neg.w   D1
                neg.w   D2
Offset_0x0163BA:
                btst    #$01, D0
                beq.s   Offset_0x0163C4
                neg.w   D1
                exg.l   D2, D1
Offset_0x0163C4:
                add.w   $0030(A0), D1
                move.w  D1, $0008(A0)
                add.w   $0032(A0), D2
                move.w  D2, $000C(A0)
                rts
Offset_0x0163D6:
                move.b  ($FFFFFE98).w, D1
                subi.b  #$40, D1
                ext.w   D1
                move.b  ($FFFFFE9C).w, D2
                subi.b  #$40, D2
                ext.w   D2
                btst    #$02, D0
                beq.s   Offset_0x0163F4
                neg.w   D1
                neg.w   D2
Offset_0x0163F4:
                btst    #$01, D0
                beq.s   Offset_0x0163FE
                neg.w   D1
                exg.l   D2, D1
Offset_0x0163FE:
                neg.w   D1
                add.w   $0030(A0), D1
                move.w  D1, $0008(A0)
                add.w   $0032(A0), D2
                move.w  D2, $000C(A0)
                rts
Elevator_Mappings:                
Offset_0x016412:               
                dc.w    Offset_0x016418-Offset_0x016412
                dc.w    Offset_0x01642A-Offset_0x016412
                dc.w    Offset_0x01643C-Offset_0x016412
Offset_0x016418:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFE0, $F00F0800, $08000000
Offset_0x01642A:
                dc.w    $0002
                dc.l    $F00B0000, $0000FFE8, $F00B0800, $08000000
Offset_0x01643C:
                dc.w    $0002
                dc.l    $F00E0000, $0000FFE0, $F00E0800, $08000000    
;=============================================================================== 
; Object 0x19 - Oil Ocean - Elevators
; [ End ]                         
;===============================================================================  
                nop                             ; Filler
J_DisplaySprite_01: ; Offset_0x016450:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_0C: ; Offset_0x016456:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_ModifySpriteAttr_2P_02: ; Offset_0x01645C:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SpeedToPos_01: ; Offset_0x016462:
                jmp     SpeedToPos              ; (Offset_0x00D27A)   
                
;=============================================================================== 
; Object 0x1B - Chemical Plant - Speed Booster
; [ Begin ]                         
;===============================================================================                  
Obj_0x1B_Speed_Booster: ; Offset_0x016468:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x016476(PC, D0), D1
                jmp     Offset_0x016476(PC, D1)
Offset_0x016476:
                dc.w    Offset_0x01647E-Offset_0x016476
                dc.w    Offset_0x0164B4-Offset_0x016476                 
Offset_0x01647A:
                dc.w    $1000, $0A00
Offset_0x01647E:
                addq.b  #$02, $0024(A0)
                move.l  #Speed_Booster_Mappings, $0004(A0) ; Offset_0x01658A
                move.w  #$E39C, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_03 ; Offset_0x0165AA
                ori.b   #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  $0028(A0), D0
                andi.w  #$0002, D0
                move.w  Offset_0x01647A(PC, D0), $0030(A0)
Offset_0x0164B4:
                move.b  ($FFFFFE05).w, D0
                andi.b  #$02, D0
                move.b  D0, $001A(A0)
                move.w  $0008(A0), D0
                move.w  D0, D1
                subi.w  #$0010, D0
                addi.w  #$0010, D1
                move.w  $000C(A0), D2
                move.w  D2, D3
                subi.w  #$0010, D2
                addi.w  #$0010, D3
                lea     ($FFFFB000).w, A1
                btst    #$01, $0022(A1)
                bne.s   Offset_0x016510
                move.w  $0008(A1), D4
                cmp.w   D0, D4
                bcs     Offset_0x016510
                cmp.w   D1, D4
                bcc     Offset_0x016510
                move.w  $000C(A1), D4
                cmp.w   D2, D4
                bcs     Offset_0x016510
                cmp.w   D3, D4
                bcc     Offset_0x016510
                move.w  D0, -(A7)
                bsr     Offset_0x016544
                move.w  (A7)+, D0
Offset_0x016510:
                lea     ($FFFFB040).w, A1
                btst    #$01, $0022(A1)
                bne.s   Offset_0x016540
                move.w  $0008(A1), D4
                cmp.w   D0, D4
                bcs     Offset_0x016540
                cmp.w   D1, D4
                bcc     Offset_0x016540
                move.w  $000C(A1), D4
                cmp.w   D2, D4
                bcs     Offset_0x016540
                cmp.w   D3, D4
                bcc     Offset_0x016540
                bsr     Offset_0x016544
Offset_0x016540:
                bra     J_MarkObjGone_01        ; Offset_0x0165A4
Offset_0x016544:
                move.w  $0030(A0), $0010(A1)
                bclr    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x016562
                bset    #$00, $0022(A1)
                neg.w   $0010(A1)
Offset_0x016562:
                move.w  #$000F, $002E(A1)
                move.w  $0010(A1), $0014(A1)
                bclr    #$05, $0022(A0)
                bclr    #$06, $0022(A0)
                bclr    #$05, $0022(A1)
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Speed_Booster_Mappings:                
Offset_0x01658A:
                dc.w    Offset_0x016590-Offset_0x01658A
                dc.w    Offset_0x016590-Offset_0x01658A
                dc.w    Offset_0x0165A2-Offset_0x01658A
Offset_0x016590:
                dc.w    $0002
                dc.l    $F8050000, $0000FFE8, $F8050000, $00000008
Offset_0x0165A2:
                dc.w    $0000
;=============================================================================== 
; Object 0x1B - Chemical Plant - Speed Booster
; [ End ]                         
;===============================================================================  
J_MarkObjGone_01: ; Offset_0x0165A4:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_ModifySpriteAttr_2P_03: ; Offset_0x0165AA:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)   
;=============================================================================== 
; Object 0x1D - Chemical Plant - Worms
; [ Begin ]                         
;===============================================================================  
Obj_0x1D_Worms: ; Offset_0x0165B0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x0165BE(PC, D0), D1
                jmp     Offset_0x0165BE(PC, D1)
Offset_0x0165BE:
                dc.w    Offset_0x0165D0-Offset_0x0165BE
                dc.w    Offset_0x01667E-Offset_0x0165BE
                dc.w    Offset_0x01669C-Offset_0x0165BE
                dc.w    Offset_0x01667E-Offset_0x0165BE
                dc.w    Offset_0x0166D0-Offset_0x0165BE                 
;Offset_0x0165C8:
                dc.w    $FB80, $FB00, $FA00, $F900                  
Offset_0x0165D0:
                addq.b  #$02, $0024(A0)
                move.w  #$FB80, $0012(A0)
                moveq   #$00, D1
                move.b  $0028(A0), D1
                move.b  D1, D0
                andi.b  #$0F, D1
                moveq   #$02, D5
                andi.b  #$F0, D0
                beq.s   Offset_0x0165F0
                moveq   #$06, D5
Offset_0x0165F0:
                move.b  $0022(A0), D4
                moveq   #$00, D2
                move.l  A0, A1
                bra.s   Offset_0x016600
Offset_0x0165FA:                
                bsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x016678
Offset_0x016600:
                move.b  $0000(A0), $0000(A1)
                move.b  D5, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  #Worms_Mappings, $0004(A1) ; Offset_0x016702
                move.w  #$643C, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_00 ; Offset_0x016716
                move.b  #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$8B, $0020(A1)
                move.w  $0008(A1), $0038(A1)
                move.w  $000C(A1), $0030(A1)
                move.w  $0012(A0), $0012(A1)
                move.w  $0012(A1), $0034(A1)
                move.b  #$08, $0019(A1)
                move.w  #$0060, $003A(A1)
                move.w  #$000B, $0036(A1)
                andi.b  #$01, D4
                beq.s   Offset_0x016672
                neg.w   $0036(A1)
                neg.w   $003A(A1)
Offset_0x016672:
                move.w  D2, $0032(A1)
                addq.w  #$03, D2
Offset_0x016678:
                dbra    D1, Offset_0x0165FA
                rts
Offset_0x01667E:
                subq.w  #$01, $0032(A0)
                bpl.s   Offset_0x016698
                addq.b  #$02, $0024(A0)
                move.w  #$003B, $0032(A0)
                move.w  #$00AE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x016698:
                bra     J_MarkObjGone_02        ; Offset_0x016710
Offset_0x01669C:
                bsr     J_SpeedToPos_02         ; Offset_0x01671C
                move.w  $0036(A0), D0
                add.w   D0, $0010(A0)
                addi.w  #$0018, $0012(A0)
                bne.s   Offset_0x0166B4
                neg.w   $0036(A0)
Offset_0x0166B4:
                move.w  $0030(A0), D0
                cmp.w   $000C(A0), D0
                bhi.s   Offset_0x0166CC
                move.w  $0034(A0), $0012(A0)
                clr.w   $0010(A0)
                subq.b  #$02, $0024(A0)
Offset_0x0166CC:
                bra     J_MarkObjGone_02        ; Offset_0x016710
Offset_0x0166D0:
                bsr     J_SpeedToPos_02         ; Offset_0x01671C
                addi.w  #$0018, $0012(A0)
                bne.s   Offset_0x0166E8
                move.w  $003A(A0), D0
                add.w   $0038(A0), D0
                move.w  D0, $0008(A0)
Offset_0x0166E8:
                move.w  $0030(A0), D0
                cmp.w   $000C(A0), D0
                bhi.s   Offset_0x0166FE
                move.w  $0034(A0), $0012(A0)
                move.w  $0038(A0), $0008(A0)
Offset_0x0166FE:
                bra     J_MarkObjGone_02        ; Offset_0x016710
Worms_Mappings:                
Offset_0x016702:
                dc.w    Offset_0x016704-Offset_0x016702
Offset_0x016704:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8  
;=============================================================================== 
; Object 0x1D - Chemical Plant - Worms
; [ End ]                         
;===============================================================================               
                nop                             ; Filler
J_MarkObjGone_02: ; Offset_0x016710:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_ModifyA1SpriteAttr_2P_00: ; Offset_0x016716:
                jmp     ModifyA1SpriteAttr_2P   ; (Offset_0x00DC4C)
J_SpeedToPos_02: ; Offset_0x01671C:
                jmp     SpeedToPos              ; (Offset_0x00D27A)   
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x1E - Chemical Plant - Tube Attributes
; [ Begin ]                         
;===============================================================================                  
Obj_0x1E_Tube_Attributes: ; Offset_0x016724:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x016740(PC, D0), D1
                jsr     Offset_0x016740(PC, D1)
                move.b  $002C(A0), D0
                add.b   $0036(A0), D0
                beq     Offset_0x01716C
                rts
Offset_0x016740:
                dc.w    Offset_0x01674A-Offset_0x016740
                dc.w    Offset_0x01675E-Offset_0x016740
Offset_0x016744:                
                dc.w    $00A0, $0100, $0120
Offset_0x01674A:
                addq.b  #$02, $0024(A0)
                move.b  $0028(A0), D0
                add.w   D0, D0
                andi.w  #$0006, D0
                move.w  Offset_0x016744(PC, D0), $002A(A0)
Offset_0x01675E:
                lea     ($FFFFB000).w, A1
                lea     $002C(A0), A4
                bsr.s   Offset_0x016770
                lea     ($FFFFB040).w, A1
                lea     $0036(A0), A4
Offset_0x016770:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  Offset_0x01677C(PC, D0), D0
                jmp     Offset_0x01677C(PC, D0)
Offset_0x01677C:
                dc.w    Offset_0x016784-Offset_0x01677C
                dc.w    Offset_0x016898-Offset_0x01677C
                dc.w    Offset_0x01697C-Offset_0x01677C
                dc.w    Offset_0x0169E8-Offset_0x01677C
Offset_0x016784:
                tst.w   ($FFFFFE08).w
                bne     Offset_0x016896
                move.w  $002A(A0), D2
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                cmp.w   D2, D0
                bcc     Offset_0x016896
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                cmpi.w  #$0080, D1
                bcc     Offset_0x016896
                moveq   #$00, D3
                cmpi.w  #$00A0, D2
                beq.s   Offset_0x0167C6
                moveq   #$08, D3
                cmpi.w  #$0120, D2
                beq.s   Offset_0x0167C6
                moveq   #$04, D3
                neg.w   D0
                addi.w  #$0100, D0
Offset_0x0167C6:
                cmpi.w  #$0080, D0
                bcs.s   Offset_0x0167FC
                moveq   #$00, D2
                move.b  $0028(A0), D0
                lsr.w   #$02, D0
                andi.w  #$000F, D0
                move.b  Offset_0x0167EC(PC, D0), D2
                cmpi.b  #$02, D2
Offset_0x0167E0:
                bne.s   Offset_0x016806
                move.b  ($FFFFFE04).w, D2
                andi.b  #$01, D2
                bra.s   Offset_0x016806
Offset_0x0167EC:
                dc.b    $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $00, $02, $00, $01, $02, $01
Offset_0x0167FC:
                moveq   #$02, D2
                cmpi.w  #$0040, D1
                bcc.s   Offset_0x016806
                moveq   #$03, D2
Offset_0x016806:
                move.b  D2, $0001(A4)
                add.w   D3, D2
                add.w   D2, D2
                andi.w  #$001E, D2
                lea     Offset_0x016AFE(PC), A2
                adda.w  $00(A2, D2), A2
                move.w  (A2)+, $0004(A4)
                subq.w  #$04, $0004(A4)
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                move.w  D5, $000C(A1)
                move.l  A2, $0006(A4)
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
Offset_0x016840:
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                addq.b  #$02, (A4)
                move.b  #$81, $002A(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0800, $0014(A1)
                move.w  #$0000, $0010(A1)
Offset_0x016860:
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
                bset    #$01, $0022(A1)
                move.b  #$00, $003C(A1)
                bclr    #$07, $0002(A1)
                move.w  #$0800, D2
                bsr     Offset_0x016A80
                move.w  #$00BE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x016896:
                rts
Offset_0x016898:
                subq.b  #$01, $0002(A4)
                bpl.s   Offset_0x0168DC
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                move.w  D5, $000C(A1)
                tst.b   $0001(A4)
                bpl.s   Offset_0x0168BE
                subq.w  #$08, A2
Offset_0x0168BE:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4)
                beq.s   Offset_0x016902
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                move.w  #$0800, D2
                bra     Offset_0x016A80
Offset_0x0168DC:
                move.l  $0008(A1), D2
                move.l  $000C(A1), D3
                move.w  $0010(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A1)
                move.l  D3, $000C(A1)
                rts
Offset_0x016902:
                cmpi.b  #$04, $0001(A4)
                bcc.s   Offset_0x016924
                move.b  $0028(A0), D0
                andi.w  #$00FC, D0
                add.b   $0001(A4), D0
                move.b  #$04, $0001(A4)
                move.b  Offset_0x01693C(PC, D0), D0
                bne     Offset_0x016A10
Offset_0x016924:
                andi.w  #$07FF, $000C(A1)
                move.b  #$06, (A4)
                clr.b   $002A(A1)
                move.w  #$00BC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x01693C:
                dc.b    $02, $01, $00, $00, $FF, $03, $00, $00, $04, $FE, $00, $00, $FD, $FC, $00, $00
                dc.b    $FB, $FB, $00, $00, $07, $06, $00, $00, $F9, $FA, $00, $00, $08, $09, $00, $00
                dc.b    $F8, $F7, $00, $00, $0B, $0A, $00, $00, $0C, $00, $00, $00, $F5, $F6, $00, $00
                dc.b    $F4, $00, $00, $00, $00, $0D, $00, $00, $F3, $0E, $00, $00, $00, $F2, $00, $00
Offset_0x01697C:
                subq.b  #$01, $0002(A4)
                bpl.s   Offset_0x0169B0
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
                tst.b   $0001(A4)
                bpl.s   Offset_0x01699A
                subq.w  #$08, A2
Offset_0x01699A:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4)
                beq.s   Offset_0x0169D6
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$0800, D2
                bra     Offset_0x016A80
Offset_0x0169B0:
                move.l  $0008(A1), D2
                move.l  $000C(A1), D3
                move.w  $0010(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A1)
                move.l  D3, $000C(A1)
                rts
Offset_0x0169D6:
                andi.w  #$07FF, $000C(A1)
                clr.b   (A4)
                move.w  #$00BC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x0169E8:
                move.w  $002A(A0), D2
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                cmp.w   D2, D0
                bcc     Offset_0x016A0C
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                cmpi.w  #$0080, D1
                bcc     Offset_0x016A0C
                rts
Offset_0x016A0C:
                clr.b   (A4)
                rts
Offset_0x016A10:
                bpl.s   Offset_0x016A42
                neg.b   D0
                move.b  #$FC, $0001(A4)
                add.w   D0, D0
                lea     (Offset_0x017006), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D0
                subq.w  #$04, D0
                move.w  D0, $0004(A4)
                lea     $00(A2, D0), A2
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
                subq.w  #$08, A2
                bra.s   Offset_0x016A62
Offset_0x016A42:
                add.w   D0, D0
                lea     (Offset_0x017006), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, $0004(A4)
                subq.w  #$04, $0004(A4)
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
Offset_0x016A62:
                move.l  A2, $0006(A4)
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$0800, D2
                bsr     Offset_0x016A80
                move.w  #$00BE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                addq.b  #$02, (A4)
                rts
Offset_0x016A80:
                moveq   #$00, D0
                move.w  D2, D3
                move.w  D4, D0
                sub.w   $0008(A1), D0
                bge.s   Offset_0x016A90
                neg.w   D0
                neg.w   D2
Offset_0x016A90:
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                bge.s   Offset_0x016A9E
                neg.w   D1
                neg.w   D3
Offset_0x016A9E:
                cmp.w   D0, D1
                bcs.s   Offset_0x016AD0
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                swap.w  D1
                divs.w  D3, D1
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   $0008(A1), D0
                beq.s   Offset_0x016ABC
                swap.w  D0
                divs.w  D1, D0
Offset_0x016ABC:
                move.w  D0, $0010(A1)
                move.w  D3, $0012(A1)
                tst.w   D1
                bpl.s   Offset_0x016ACA
                neg.w   D1
Offset_0x016ACA:
                move.w  D1, $0002(A4)
                rts
Offset_0x016AD0:
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   $0008(A1), D0
                swap.w  D0
                divs.w  D2, D0
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                beq.s   Offset_0x016AEA
                swap.w  D1
                divs.w  D0, D1
Offset_0x016AEA:
                move.w  D1, $0012(A1)
                move.w  D2, $0010(A1)
                tst.w   D0
                bpl.s   Offset_0x016AF8
                neg.w   D0
Offset_0x016AF8:
                move.w  D0, $0002(A4)
                rts
Offset_0x016AFE:              
                dc.w    Offset_0x016B16-Offset_0x016AFE
                dc.w    Offset_0x016B8C-Offset_0x016AFE
                dc.w    Offset_0x016BEA-Offset_0x016AFE
                dc.w    Offset_0x016C60-Offset_0x016AFE
                dc.w    Offset_0x016CBE-Offset_0x016AFE
                dc.w    Offset_0x016D30-Offset_0x016AFE
                dc.w    Offset_0x016D8E-Offset_0x016AFE
                dc.w    Offset_0x016E00-Offset_0x016AFE
                dc.w    Offset_0x016E5E-Offset_0x016AFE
                dc.w    Offset_0x016ED4-Offset_0x016AFE
                dc.w    Offset_0x016F32-Offset_0x016AFE
                dc.w    Offset_0x016FA8-Offset_0x016AFE
Offset_0x016B16:
                dc.w    $0074
                dc.w    $0090, $0010, $0090, $0070, $0040, $0070, $0035, $006F
                dc.w    $0028, $006A, $001E, $0062, $0015, $0058, $0011, $004A
                dc.w    $0010, $0040, $0011, $0035, $0015, $0027, $001E, $001E
                dc.w    $0028, $0015, $0035, $0011, $0040, $0010, $0050, $0010
                dc.w    $005E, $0012, $0068, $0018, $006D, $0024, $0070, $0030
                dc.w    $006D, $003D, $0068, $0048, $005E, $004E, $0050, $0050
                dc.w    $0030, $0050, $0022, $0052, $0017, $005A, $0011, $0063
                dc.w    $0010, $0070 
Offset_0x016B8C:
                dc.w    $005C
                dc.w    $0090, $0010, $0090, $0070, $0040, $0070, $002E, $006E
                dc.w    $001D, $0062, $0013, $0053, $0010, $0040, $0013, $002D
                dc.w    $001D, $001E, $002E, $0013, $0040, $0010, $0058, $0010
                dc.w    $0064, $0014, $006C, $001A, $0070, $0028, $006C, $0036
                dc.w    $0064, $003C, $0058, $0040, $004B, $003D, $0040, $0038
                dc.w    $0036, $0032, $0028, $0030, $0010, $0030
Offset_0x016BEA:
                dc.w    $0074
                dc.w    $0010, $0070, $0011, $0063, $0017, $005A, $0022, $0052
                dc.w    $0030, $0050, $0050, $0050, $005E, $004E, $0068, $0048
                dc.w    $006D, $003D, $0070, $0030, $006D, $0024, $0068, $0018
                dc.w    $005E, $0012, $0050, $0010, $0040, $0010, $0035, $0011
                dc.w    $0028, $0015, $001E, $001E, $0015, $0027, $0011, $0035
                dc.w    $0010, $0040, $0011, $004A, $0015, $0058, $001E, $0062
                dc.w    $0028, $006A, $0035, $006F, $0040, $0070, $0090, $0070
                dc.w    $0090, $0010
Offset_0x016C60:
                dc.w    $005C
                dc.w    $0010, $0030, $0028, $0030, $0036, $0032, $0040, $0038
                dc.w    $004B, $003D, $0058, $0040, $0064, $003C, $006C, $0036
                dc.w    $0070, $0028, $006C, $001A, $0064, $0014, $0058, $0010
                dc.w    $0040, $0010, $002E, $0013, $001D, $001E, $0013, $002D
                dc.w    $0010, $0040, $0013, $0053, $001D, $0062, $002E, $006E
                dc.w    $0040, $0070, $0090, $0070, $0090, $0010
Offset_0x016CBE:
                dc.w    $0070
                dc.w    $0010, $0010, $0010, $0070, $00C0, $0070, $00CA, $006F
                dc.w    $00D4, $006C, $00DB, $0068, $00E3, $0062, $00E8, $005A
                dc.w    $00ED, $0052, $00EF, $0048, $00F0, $0040, $00EF, $0036
                dc.w    $00ED, $002E, $00E8, $0026, $00E3, $001E, $00DB, $0017
                dc.w    $00D4, $0014, $00CA, $0012, $00C0, $0010, $00B7, $0011
                dc.w    $00AF, $0012, $00A6, $0017, $009E, $001E, $0097, $0026
                dc.w    $0093, $002E, $0091, $0036, $0090, $0040, $0090, $0070                  
Offset_0x016D30:
                dc.w    $005C
                dc.w    $0010, $0010, $0010, $0070, $00C0, $0070, $00D2, $006E
                dc.w    $00E3, $0062, $00ED, $0053, $00F0, $0040, $00ED, $002D
                dc.w    $00E3, $001E, $00D2, $0013, $00C0, $0010, $00A8, $0010
                dc.w    $009C, $0014, $0094, $001A, $0090, $0028, $0094, $0036
                dc.w    $009C, $003C, $00A8, $0040, $00B5, $003D, $00C0, $0038
                dc.w    $00CA, $0032, $00D8, $0030, $00F0, $0030
Offset_0x016D8E:
                dc.w    $0070
                dc.w    $0090, $0070, $0090, $0040, $0091, $0036, $0093, $002E
                dc.w    $0097, $0026, $009E, $001E, $00A6, $0017, $00AF, $0012
                dc.w    $00B7, $0011, $00C0, $0010, $00CA, $0012, $00D4, $0014
                dc.w    $00DB, $0017, $00E3, $001E, $00E8, $0026, $00ED, $002E
                dc.w    $00EF, $0036, $00F0, $0040, $00EF, $0048, $00ED, $0052
                dc.w    $00E8, $005A, $00E3, $0062, $00DB, $0068, $00D4, $006C
                dc.w    $00CA, $006F, $00C0, $0070, $0010, $0070, $0010, $0010                
Offset_0x016E00:
                dc.w    $005C
                dc.w    $00F0, $0030, $00D8, $0030, $00CA, $0032, $00C0, $0038
                dc.w    $00B5, $003D, $00A8, $0040, $009C, $003C, $0094, $0036
                dc.w    $0090, $0028, $0094, $001A, $009C, $0014, $00A8, $0010
                dc.w    $00C0, $0010, $00D2, $0013, $00E3, $001E, $00ED, $002D
                dc.w    $00F0, $0040, $00ED, $0053, $00E3, $0062, $00D2, $006E
                dc.w    $00C0, $0070, $0010, $0070, $0010, $0010
Offset_0x016E5E:
                dc.w    $0074
                dc.w    $0110, $0010, $0110, $0070, $0040, $0070, $0035, $006F
                dc.w    $0028, $006A, $001E, $0062, $0015, $0058, $0011, $004A
                dc.w    $0010, $0040, $0011, $0035, $0015, $0027, $001E, $001E
                dc.w    $0028, $0015, $0035, $0011, $0040, $0010, $0050, $0010
                dc.w    $005E, $0012, $0068, $0018, $006D, $0024, $0070, $0030
                dc.w    $006D, $003D, $0068, $0048, $005E, $004E, $0050, $0050
                dc.w    $0030, $0050, $0022, $0052, $0017, $005A, $0011, $0063
                dc.w    $0010, $0070
Offset_0x016ED4:
                dc.w    $005C
                dc.w    $0110, $0010, $0110, $0070, $0040, $0070, $002E, $006E
                dc.w    $001D, $0062, $0013, $0053, $0010, $0040, $0013, $002D
                dc.w    $001D, $001E, $002E, $0013, $0040, $0010, $0058, $0010
                dc.w    $0064, $0014, $006C, $001A, $0070, $0028, $006C, $0036
                dc.w    $0064, $003C, $0058, $0040, $004B, $003D, $0040, $0038
                dc.w    $0036, $0032, $0028, $0030, $0010, $0030
Offset_0x016F32:
                dc.w    $0074
                dc.w    $0010, $0070, $0011, $0063, $0017, $005A, $0022, $0052
                dc.w    $0030, $0050, $0050, $0050, $005E, $004E, $0068, $0048
                dc.w    $006D, $003D, $0070, $0030, $006D, $0024, $0068, $0018
                dc.w    $005E, $0012, $0050, $0010, $0040, $0010, $0035, $0011
                dc.w    $0028, $0015, $001E, $001E, $0015, $0027, $0011, $0035
                dc.w    $0010, $0040, $0011, $004A, $0015, $0058, $001E, $0062
                dc.w    $0028, $006A, $0035, $006F, $0040, $0070, $0110, $0070
                dc.w    $0110, $0010
Offset_0x016FA8:
                dc.w    $005C
                dc.w    $0010, $0030, $0028, $0030, $0036, $0032, $0040, $0038
                dc.w    $004B, $003D, $0058, $0040, $0064, $003C, $006C, $0036
                dc.w    $0070, $0028, $006C, $001A, $0064, $0014, $0058, $0010
                dc.w    $0040, $0010, $002E, $0013, $001D, $001E, $0013, $002D
                dc.w    $0010, $0040, $0013, $0053, $001D, $0062, $002E, $006E
                dc.w    $0040, $0070, $0110, $0070, $0110, $0010
Offset_0x017006:
                dc.w    Offset_0x017024-Offset_0x017006
                dc.w    Offset_0x017024-Offset_0x017006
                dc.w    Offset_0x01703A-Offset_0x017006
                dc.w    Offset_0x017064-Offset_0x017006
                dc.w    Offset_0x01707A-Offset_0x017006
                dc.w    Offset_0x017090-Offset_0x017006
                dc.w    Offset_0x0170A6-Offset_0x017006
                dc.w    Offset_0x0170B8-Offset_0x017006
                dc.w    Offset_0x0170D2-Offset_0x017006
                dc.w    Offset_0x0170EC-Offset_0x017006
                dc.w    Offset_0x0170FE-Offset_0x017006
                dc.w    Offset_0x017110-Offset_0x017006
                dc.w    Offset_0x01712A-Offset_0x017006
                dc.w    Offset_0x017140-Offset_0x017006
                dc.w    Offset_0x01714E-Offset_0x017006
Offset_0x017024:
                dc.w    $0014
                dc.w    $0790, $03B0, $0710, $03B0, $0710, $06B0, $0A90, $06B0
                dc.w    $0A90, $0670
Offset_0x01703A:
                dc.w    $0028
                dc.w    $0790, $03F0, $0790, $04B0, $0A00, $04B0, $0C10, $04B0
                dc.w    $0C10, $0330, $0D90, $0330, $0D90, $01B0, $0F10, $01B0
                dc.w    $0F10, $02B0, $0F90, $02B0
Offset_0x017064:
                dc.w    $0014
                dc.w    $0AF0, $0630, $0E90, $0630, $0E90, $06B0, $0F90, $06B0
                dc.w    $0F90, $0670
Offset_0x01707A:
                dc.w    $0014
                dc.w    $0F90, $02F0, $0F90, $04B0, $0F10, $04B0, $0F10, $0630
                dc.w    $0F90, $0630
Offset_0x017090:
                dc.w    $0014
                dc.w    $1410, $0530, $1190, $0530, $1190, $06B0, $1410, $06B0
                dc.w    $1410, $0570
Offset_0x0170A6:
                dc.w    $0010
                dc.w    $1AF0, $0530, $1B90, $0530, $1B90, $0330, $1E10, $0330
Offset_0x0170B8:
                dc.w    $0018
                dc.w    $1A90, $0570, $1A90, $05B0, $1C10, $05B0, $1C10, $0430
                dc.w    $1E10, $0430, $1E10, $0370
Offset_0x0170D2:
                dc.w    $0018
                dc.w    $2490, $0370, $2490, $03D0, $2390, $03D0, $2390, $05D0
                dc.w    $2510, $05D0, $2510, $0570
Offset_0x0170EC:
                dc.w    $0010
                dc.w    $24F0, $0330, $2590, $0330, $2590, $0530, $2570, $0530
Offset_0x0170FE:
                dc.w    $0010
                dc.w    $0310, $0330, $0290, $0330, $0290, $0230, $0490, $0230
Offset_0x017110:
                dc.w    $0018
                dc.w    $0310, $0370, $0310, $03B0, $0410, $03B0, $0410, $02B0
                dc.w    $0490, $02B0, $0490, $0270
Offset_0x01712A:
                dc.w    $0014
                dc.w    $0490, $06F0, $0490, $0730, $0690, $0730, $0890, $0730
                dc.w    $0890, $06F0
Offset_0x017140:
                dc.w    $000C
                dc.w    $0BF0, $0330, $0D90, $0330, $0D90, $02F0
Offset_0x01714E:
                dc.w    $001C
                dc.w    $0D90, $02B0, $0C90, $02B0, $0C90, $00B0, $0E80, $00B0
                dc.w    $1110, $00B0, $1110, $0230, $10F0, $0230 
;=============================================================================== 
; Object 0x1E - Chemical Plant - Tube Attributes
; [ End ]                         
;===============================================================================                   
Offset_0x01716C:
                jmp     (Offset_0x00D30C) 
                dc.w    $0000                   ; Filler  
                
;=============================================================================== 
; Object 0x20 - Fireball - Hill Top 
; [ Begin ]                         
;===============================================================================  
Obj_0x20_Fireball: ; Offset_0x017174:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x017182(PC, D0), D1
                jmp     Offset_0x017182(PC, D1)
Offset_0x017182:
                dc.w    Offset_0x017190-Offset_0x017182
                dc.w    Offset_0x0171F2-Offset_0x017182
                dc.w    Offset_0x017200-Offset_0x017182
                dc.w    Offset_0x01729A-Offset_0x017182
                dc.w    Offset_0x0172C0-Offset_0x017182
                dc.w    Offset_0x01734E-Offset_0x017182
                dc.w    Offset_0x0173AE-Offset_0x017182
Offset_0x017190:
                addq.b  #$02, $0024(A0)
                move.b  #$08, $0016(A0)
                move.b  #$08, $0017(A0)
                move.l  #Fireball_Mappings, $0004(A0) ; Offset_0x0173D0
                move.w  #$8416, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_04 ; Offset_0x017470
                ori.b   #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$08, $0019(A0)
                move.w  $000C(A0), $0030(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsl.w   #$03, D0
                andi.w  #$0780, D0
                neg.w   D0
                move.w  D0, $0010(A0)
                move.w  D0, $0012(A0)
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                lsl.w   #$04, D0
                move.w  D0, $0032(A0)
                move.w  D0, $0034(A0)
Offset_0x0171F2:
                lea     (Offset_0x0173B2), A1
                bsr     J_AnimateSprite_00      ; Offset_0x01746A
                bra     J_MarkObjGone_03        ; Offset_0x01745E
Offset_0x017200:
                cmpi.b  #$05, $001E(A0)
                bne.s   Offset_0x017230
                bsr     J_S1SingleObjectLoad_00 ; Offset_0x017464
                bne.s   Offset_0x017222
                bsr.s   Offset_0x01723E
                bsr     J_S1SingleObjectLoad_00 ; Offset_0x017464
                bne.s   Offset_0x017222
                bsr.s   Offset_0x01723E
                neg.w   $0010(A1)
                bset    #$00, $0001(A1)
Offset_0x017222:
                move.w  #$00AE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                addq.b  #$02, $0024(A0)
Offset_0x017230:
                lea     (Offset_0x0173B2), A1
                bsr     J_AnimateSprite_00      ; Offset_0x01746A
                bra     J_MarkObjGone_03        ; Offset_0x01745E
Offset_0x01723E:
                move.b  #$20, $0000(A1)
                move.b  #$08, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0010(A0), $0010(A1)
                move.w  $0012(A0), $0012(A1)
                move.b  #$08, $0016(A1)
                move.b  #$08, $0017(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$08, $0019(A1)
                move.b  #$8B, $0020(A1)
                move.w  $000C(A1), $0030(A1)
                rts
Offset_0x01729A:
                subq.w  #$01, $0032(A0)
                bpl.s   Offset_0x0172B2
                move.w  $0034(A0), $0032(A0)
                move.b  #$02, $0024(A0)
                move.w  #$0001, $001C(A0)
Offset_0x0172B2:
                lea     (Offset_0x0173B2), A1
                bsr     J_AnimateSprite_00      ; Offset_0x01746A
                bra     J_MarkObjGone_03        ; Offset_0x01745E
Offset_0x0172C0:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x0172D6
                move.b  #$07, $001E(A0)
                addq.b  #$01, $001A(A0)
                andi.b  #$01, $001A(A0)
Offset_0x0172D6:
                bsr     J_SpeedToPos_03         ; Offset_0x017476
                addi.w  #$0018, $0012(A0)
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcc.s   Offset_0x0172F2
                bra     J_DeleteObject_0D       ; Offset_0x017458
Offset_0x0172F2:
                bclr    #$01, $0001(A0)
                tst.w   $0012(A0)
                bmi.s   Offset_0x01734A
                bset    #$01, $0001(A0)
                bsr     ObjHitFloor             ; Offset_0x013898
                tst.w   D1
                bpl.s   Offset_0x01734A
                add.w   D1, $000C(A0)
                addq.b  #$02, $0024(A0)
                move.b  #$02, $001C(A0)
                move.b  #$04, $001A(A0)
                move.w  #$0000, $0012(A0)
                move.l  #$00017410, $0004(A0)
                move.w  #$839E, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_04 ; Offset_0x017470
                move.b  #$00, $001A(A0)
                move.w  #$0009, $0032(A0)
                move.b  #$03, $0036(A0)
Offset_0x01734A:
                bra     J_MarkObjGone_03        ; Offset_0x01745E
Offset_0x01734E:
                subq.w  #$01, $0032(A0)
                bpl.s   Offset_0x0173A0
                move.w  #$007F, $0032(A0)
                subq.b  #$01, $0036(A0)
                bmi.s   Offset_0x0173A0
                bsr     J_S1SingleObjectLoad_00 ; Offset_0x017464
                bne.s   Offset_0x0173A0
                moveq   #$00, D0
                move.w  #$000F, D1
Offset_0x01736C:                
                move.l  $00(A0, D0), $00(A1, D0)
                addq.w  #$04, D0
                dbra    D1, Offset_0x01736C
                move.w  #$0009, $0032(A1)
                move.w  #$0200, $001C(A1)
                move.w  #$000E, D0
                tst.w   $0010(A1)
                bpl.s   Offset_0x017390
                neg.w   D0
Offset_0x017390:
                add.w   D0, $0008(A1)
                move.l  A1, -(A7)
                bsr     Offset_0x0138CE
                move.l  (A7)+, A1
                add.w   D1, $000C(A1)
Offset_0x0173A0:
                lea     (Offset_0x0173B2), A1
                bsr     J_AnimateSprite_00      ; Offset_0x01746A
                bra     J_MarkObjGone_03        ; Offset_0x01745E
Offset_0x0173AE:
                bra     J_DeleteObject_0D       ; Offset_0x017458
Offset_0x0173B2:
                dc.w    Offset_0x0173B8-Offset_0x0173B2
                dc.w    Offset_0x0173BF-Offset_0x0173B2
                dc.w    Offset_0x0173C2-Offset_0x0173B2
Offset_0x0173B8:
                dc.b    $0B, $02, $03, $FC, $04, $FD, $01
Offset_0x0173BF:
                dc.b    $7F, $05, $FF
Offset_0x0173C2:
                dc.b    $05, $04, $05, $02, $03, $00, $01, $00, $01, $02, $03, $04, $05, $FC
Fireball_Mappings:                
Offset_0x0173D0:
                dc.w    Offset_0x0173DC-Offset_0x0173D0
                dc.w    Offset_0x0173E6-Offset_0x0173D0
                dc.w    Offset_0x0173F0-Offset_0x0173D0
                dc.w    Offset_0x0173FA-Offset_0x0173D0
                dc.w    Offset_0x017404-Offset_0x0173D0
                dc.w    Offset_0x01740E-Offset_0x0173D0
Offset_0x0173DC:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Offset_0x0173E6:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
Offset_0x0173F0:
                dc.w    $0001
                dc.l    $F9050008, $0004FFF8
Offset_0x0173FA:
                dc.w    $0001
                dc.l    $F6050008, $0004FFF8
Offset_0x017404:
                dc.w    $0001
                dc.l    $F605000C, $0006FFF8
Offset_0x01740E:
                dc.w    $0000
Offset_0x017410_B:
                dc.w    Offset_0x01741C-Offset_0x017410_B
                dc.w    Offset_0x017426-Offset_0x017410_B
                dc.w    Offset_0x017430-Offset_0x017410_B
                dc.w    Offset_0x01743A-Offset_0x017410_B
                dc.w    Offset_0x017444-Offset_0x017410_B
                dc.w    Offset_0x01744E-Offset_0x017410_B
Offset_0x01741C:
                dc.w    $0001
                dc.l    $F0070000, $0000FFF8
Offset_0x017426:
                dc.w    $0001
                dc.l    $F0070800, $0800FFF8
Offset_0x017430:
                dc.w    $0001
                dc.l    $F0070008, $0004FFF8
Offset_0x01743A:
                dc.w    $0001
                dc.l    $F0070808, $0804FFF8
Offset_0x017444:
                dc.w    $0001
                dc.l    $00050010, $0008FFF8
Offset_0x01744E:
                dc.w    $0001
                dc.l    $00050810, $0808FFF8    
J_DeleteObject_0D: ; Offset_0x017458:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_MarkObjGone_03: ; Offset_0x01745E:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_S1SingleObjectLoad_00: ; Offset_0x017464:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_AnimateSprite_00: ; Offset_0x01746A:
                jmp     AnimateSprite           ; (Offset_0x00D412)
J_ModifySpriteAttr_2P_04: ; Offset_0x017470:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SpeedToPos_03: ; Offset_0x017476:
                jmp     SpeedToPos              ; (Offset_0x00D27A)        
;=============================================================================== 
; Object 0x20 - Fireball - Hill Top 
; [ End ]                         
;=============================================================================== 
;=============================================================================== 
; Object 0x2F - Hill Top - Breakable Floor
; [ Begin ]                         
;=============================================================================== 
Obj_0x2F_Breakable_Floor: ; Offset_0x01747C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01748A(PC, D0), D1
                jmp     Offset_0x01748A(PC, D1)
Offset_0x01748A:
                dc.w    Offset_0x01749A-Offset_0x01748A
                dc.w    Offset_0x0174D8-Offset_0x01748A
                dc.w    Offset_0x01764C-Offset_0x01748A
Offset_0x017490:
                dc.b    $24, $00, $20, $02, $18, $04, $10, $06, $08, $08
Offset_0x01749A:
                addq.b  #$02, $0024(A0)
                move.l  #Breakable_Floor_Mappings, $0004(A0) ; Offset_0x01786A
                move.w  #$C000, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_05 ; Offset_0x017A34
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$001E, D0
                lea     Offset_0x017490(PC, D0), A2
                move.b  (A2)+, $0016(A0)
                move.b  (A2)+, $001A(A0)
Offset_0x0174D8:
                move.w  ($FFFFF7D0).w, $0038(A0)
                move.b  ($FFFFB01C).w, $0032(A0)
                move.b  ($FFFFB05C).w, $0033(A0)
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_00        ; Offset_0x017A40
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   Offset_0x017514
Offset_0x017510:                
                bra     J_MarkObjGone_04        ; Offset_0x017A2E
Offset_0x017514:
                cmpi.b  #$18, D0
                bne.s   Offset_0x017578
                cmpi.b  #$02, $0032(A0)
                bne.s   Offset_0x017530
                tst.b   $0028(A0)
                bmi.s   Offset_0x017560
                cmpi.b  #$0E, ($FFFFB03E).w
                beq.s   Offset_0x017560
Offset_0x017530:
                move.b  #$0C, ($FFFFB03E).w
                move.b  #$0D, ($FFFFB03F).w
                cmpi.b  #$02, $0033(A0)
                bne.s   Offset_0x017552
                tst.b   $0028(A0)
                bmi.s   Offset_0x017560
                cmpi.b  #$0E, ($FFFFB07E).w
                beq.s   Offset_0x017560
Offset_0x017552:
                move.b  #$0C, ($FFFFB07E).w
                move.b  #$0D, ($FFFFB07F).w
                bra.s   Offset_0x017510
Offset_0x017560:
                lea     ($FFFFB000).w, A1
                move.b  $0032(A0), D0
                bsr.s   Offset_0x0175AE
                lea     ($FFFFB040).w, A1
                move.b  $0033(A0), D0
                bsr.s   Offset_0x0175AE
                bra     Offset_0x017614
Offset_0x017578:
                move.b  D0, D1
                andi.b  #$08, D1
                beq.s   Offset_0x0175E0
                cmpi.b  #$02, $0032(A0)
                bne.s   Offset_0x017596
                tst.b   $0028(A0)
                bmi.s   Offset_0x0175A6
                cmpi.b  #$0E, ($FFFFB03E).w
                beq.s   Offset_0x0175A6
Offset_0x017596:
                move.b  #$0C, ($FFFFB03E).w
                move.b  #$0D, ($FFFFB03F).w
                bra     Offset_0x017510
Offset_0x0175A6:
                lea     ($FFFFB000).w, A1
                bsr.s   Offset_0x0175B4
                bra.s   Offset_0x017614
Offset_0x0175AE:
                cmpi.b  #$02, D0
                bne.s   Offset_0x0175CC
Offset_0x0175B4:
                bset    #$02, $0022(A1)
                move.b  #$0E, $0016(A1)
                move.b  #$07, $0017(A1)
                move.b  #$02, $001C(A1)
Offset_0x0175CC:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                rts
Offset_0x0175E0:
                andi.b  #$10, D0
                beq     Offset_0x017510
                cmpi.b  #$02, $0033(A0)
                bne.s   Offset_0x0175FE
                tst.b   $0028(A0)
                bmi.s   Offset_0x01760E
                cmpi.b  #$0E, ($FFFFB07E).w
                beq.s   Offset_0x01760E
Offset_0x0175FE:
                move.b  #$0C, ($FFFFB07E).w
                move.b  #$0D, ($FFFFB07F).w
                bra     Offset_0x017510
Offset_0x01760E:
                lea     ($FFFFB040).w, A1
                bsr.s   Offset_0x0175B4
Offset_0x017614:
                move.w  $0038(A0), ($FFFFF7D0).w
                andi.b  #$E7, $0022(A0)
                lea     (Offset_0x017662), A4
                moveq   #$00, D0
                move.b  $001A(A0), D0
                addq.b  #$01, $001A(A0)
                move.l  D0, D1
                add.w   D0, D0
                add.w   D0, D0
                lea     $00(A4, D0), A4
                neg.w   D1
                addi.w  #$0009, D1
                move.w  #$0018, D2
                bsr     Offset_0x017A3A
                bsr     Offset_0x017818
Offset_0x01764C:
                bsr     J_SpeedToPos_04         ; Offset_0x017A46
                addi.w  #$0018, $0012(A0)
                tst.b   $0001(A0)
                bpl     J_DeleteObject_0E       ; Offset_0x017A22
                bra     J_DisplaySprite_02      ; Offset_0x017A1C  
Offset_0x017662:
                dc.w    $FF00, $F800, $0100, $F800, $FF20, $F900, $00E0, $F900
                dc.w    $FF40, $FA00, $00C0, $FA00, $FF60, $FB00, $00A0, $FB00
                dc.w    $FF80, $FC00, $0080, $FC00  
;=============================================================================== 
; Object 0x2F - Hill Top - Breakable Floor
; [ End ]                         
;===============================================================================  
;=============================================================================== 
; Object 0x32 - Rock - Hill Top / Tunel Obstacule - Chemical Plant
; [ Begin ]                         
;=============================================================================== 
Obj_0x32_Breakable_Obstacule: ; Offset_0x01768A:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x017698(PC, D0), D1
                jmp     Offset_0x017698(PC, D1)
Offset_0x017698:
                dc.w    Offset_0x01769E-Offset_0x017698
                dc.w    Offset_0x0176F2-Offset_0x017698
                dc.w    Offset_0x0177DA-Offset_0x017698
Offset_0x01769E:
                addq.b  #$02, $0024(A0)
                move.l  #Rock_Mappings, $0004(A0) ; Offset_0x0179C2
                move.w  #$43B2, $0002(A0)
                move.b  #$18, $0019(A0)
                move.l  #Offset_0x0177F0, $003C(A0)
                cmpi.b  #$0D, ($FFFFFE10).w
                bne.s   Offset_0x0176E2
                move.l  #Tunel_Obstacule_Mappings, $0004(A0) ; Offset_0x0179F6
                move.w  #$6430, $0002(A0)
                move.b  #$10, $0019(A0)
                move.l  #Offset_0x017808, $003C(A0)
Offset_0x0176E2:
                bsr     J_ModifySpriteAttr_2P_05 ; Offset_0x017A34
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
Offset_0x0176F2:
                move.w  ($FFFFF7D0).w, $0038(A0)
                move.b  ($FFFFB01C).w, $0032(A0)
                move.b  ($FFFFB05C).w, $0033(A0)
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_00        ; Offset_0x017A40
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   Offset_0x01772C
Offset_0x017728:                
                bra     J_MarkObjGone_04        ; Offset_0x017A2E
Offset_0x01772C:
                cmpi.b  #$18, D0
                bne.s   Offset_0x01775A
                cmpi.b  #$02, $0032(A0)
                beq.s   Offset_0x017742
                cmpi.b  #$02, $0033(A0)
                bne.s   Offset_0x017728
Offset_0x017742:
                lea     ($FFFFB000).w, A1
                move.b  $0032(A0), D0
                bsr.s   Offset_0x017772
                lea     ($FFFFB040).w, A1
                move.b  $0033(A0), D0
                bsr.s   Offset_0x017772
                bra     Offset_0x0177C2
Offset_0x01775A:
                move.b  D0, D1
                andi.b  #$08, D1
                beq.s   Offset_0x0177AA
                cmpi.b  #$02, $0032(A0)
                bne.s   Offset_0x017728
                lea     ($FFFFB000).w, A1
                bsr.s   Offset_0x017778
                bra.s   Offset_0x0177C2
Offset_0x017772:
                cmpi.b  #$02, D0
                bne.s   Offset_0x017796
Offset_0x017778:
                bset    #$02, $0022(A1)
                move.b  #$0E, $0016(A1)
                move.b  #$07, $0017(A1)
                move.b  #$02, $001C(A1)
                move.w  #$FD00, $0012(A1)
Offset_0x017796:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                rts
Offset_0x0177AA:
                andi.b  #$10, D0
                beq     Offset_0x017728
                cmpi.b  #$02, $0033(A0)
                bne     Offset_0x017728
                lea     ($FFFFB040).w, A1
                bsr.s   Offset_0x017778
Offset_0x0177C2:
                move.w  $0038(A0), ($FFFFF7D0).w
                andi.b  #$E7, $0022(A0)
                move.l  $003C(A0), A4
                bsr     Offset_0x017A3A
                bsr     Offset_0x017818
Offset_0x0177DA:
                bsr     J_SpeedToPos_04         ; Offset_0x017A46
                addi.w  #$0018, $0012(A0)
                tst.b   $0001(A0)
                bpl     J_DeleteObject_0E       ; Offset_0x017A22
                bra     J_DisplaySprite_02      ; Offset_0x017A1C
Offset_0x0177F0:
                dc.w    $FE00, $FE00, $0000, $FD80, $0200, $FE00, $FE40, $FE40
                dc.w    $0000, $FE00, $01C0, $FE40
Offset_0x017808:
                dc.w    $FF00, $FE00, $0100, $FE00, $FF40, $FE40, $00C0, $FE40                
;=============================================================================== 
; Object 0x32 - Rock - Hill Top / Tunel Obstacule - Chemical Plant
; [ End ]                         
;===============================================================================              
Offset_0x017818:
                bsr     J_SingleObjectLoad_00   ; Offset_0x017A28
                bne.s   Offset_0x017860
                move.b  #$29, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  ($FFFFF7D0).w, D2
                addq.w  #$02, ($FFFFF7D0).w
                cmpi.w  #$0006, D2
                bcs.s   Offset_0x017840
                moveq   #$06, D2
Offset_0x017840:
                moveq   #$00, D0
                move.w  Offset_0x017862(PC, D2), D0
                cmpi.w  #$0020, ($FFFFF7D0).w
                bcs.s   Offset_0x017854
                move.w  #$03E8, D0
                moveq   #$0A, D2
Offset_0x017854:
                jsr     AddPoints               ; (Offset_0x022FD0)
                lsr.w   #$01, D2
                move.b  D2, $001A(A1)
Offset_0x017860:
                rts
Offset_0x017862:
                dc.w    $000A, $0014, $0032, $0064
Breakable_Floor_Mappings:                
Offset_0x01786A:
                dc.w    Offset_0x01787E-Offset_0x01786A
                dc.w    Offset_0x0178C8-Offset_0x01786A
                dc.w    Offset_0x01791A-Offset_0x01786A
                dc.w    Offset_0x01791A-Offset_0x01786A
                dc.w    Offset_0x01795C-Offset_0x01786A
                dc.w    Offset_0x01795C-Offset_0x01786A
                dc.w    Offset_0x01798E-Offset_0x01786A
                dc.w    Offset_0x01798E-Offset_0x01786A
                dc.w    Offset_0x0179B0-Offset_0x01786A
                dc.w    Offset_0x0179B0-Offset_0x01786A
Offset_0x01787E:
                dc.w    $0009
                dc.l    $D80D0012, $0009FFF0, $E805004A, $0025FFF0
                dc.l    $E805004A, $00250000, $F805004E, $0027FFF0
                dc.l    $F805004E, $00270000, $08050052, $0029FFF0
                dc.l    $08050052, $00290000, $18050052, $0029FFF0
                dc.l    $18050052, $00290000
Offset_0x0178C8:
                dc.w    $000A
                dc.l    $D8050012, $0009FFF0, $D8050016, $000B0000
                dc.l    $E805004A, $0025FFF0, $E805004A, $00250000
                dc.l    $F805004E, $0027FFF0, $F805004E, $00270000
                dc.l    $08050052, $0029FFF0, $08050052, $00290000
                dc.l    $18050052, $0029FFF0, $18050052, $00290000
Offset_0x01791A:
                dc.w    $0008
                dc.l    $E005004A, $0025FFF0, $E005004A, $00250000
                dc.l    $F005004E, $0027FFF0, $F005004E, $00270000
                dc.l    $00050052, $0029FFF0, $00050052, $00290000
                dc.l    $10050052, $0029FFF0, $10050052, $00290000
Offset_0x01795C:
                dc.w    $0006
                dc.l    $E805004E, $0027FFF0, $E805004E, $00270000
                dc.l    $F8050052, $0029FFF0, $F8050052, $00290000
                dc.l    $08050052, $0029FFF0, $08050052, $00290000
Offset_0x01798E:
                dc.w    $0004
                dc.l    $F0050052, $0029FFF0, $F0050052, $00290000
                dc.l    $00050052, $0029FFF0, $00050052, $00290000
Offset_0x0179B0:
                dc.w    $0002
                dc.l    $F8050052, $0029FFF0, $F8050052, $00290000 
Rock_Mappings:                              
Offset_0x0179C2:
                dc.w    Offset_0x0179C4-Offset_0x0179C2
Offset_0x0179C4:
                dc.w    $0006
                dc.l    $F0050000, $0000FFE8, $F0050004, $0002FFF8
                dc.l    $F0050008, $00040008, $0005000C, $0006FFE8
                dc.l    $00050010, $0008FFF8, $00050010, $00080008
Tunel_Obstacule_Mappings:                  
Offset_0x0179F6:
                dc.w    Offset_0x0179F8-Offset_0x0179F6
Offset_0x0179F8:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF0, $F0050800, $08000000
                dc.l    $00050000, $0000FFF0, $00050800, $08000000
                nop                             ; Filler               
J_DisplaySprite_02: ; Offset_0x017A1C:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_0E: ; Offset_0x017A22:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_SingleObjectLoad_00: ; Offset_0x017A28:
                jmp     SingleObjectLoad        ; (Offset_0x00E772)
J_MarkObjGone_04: ; Offset_0x017A2E:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_ModifySpriteAttr_2P_05: ; Offset_0x017A34:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
Offset_0x017A3A:
                jmp     (Offset_0x00CE50)
J_SolidObject_00: ; Offset_0x017A40:
                jmp     SolidObject             ; (Offset_0x00F4A0)
J_SpeedToPos_04: ; Offset_0x017A46:
                jmp     SpeedToPos              ; (Offset_0x00D27A) 
                
;=============================================================================== 
; Object 0x30 - 
; [ Begin ]                         
;===============================================================================                  
Obj_0x30: ; Offset_0x017A4C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x017A5A(PC, D0), D1
                jmp     Offset_0x017A5A(PC, D1)
Offset_0x017A5A:
                dc.w    Offset_0x017A68-Offset_0x017A5A
                dc.w    Offset_0x017AB4-Offset_0x017A5A
Offset_0x017A5E:
                dc.w    $C000, $C000, $C000, $E000, $FF00
Offset_0x017A68:
                addq.b  #$02, $0024(A0)
                move.w  $000C(A0), $0032(A0)
                move.w  $0008(A0), $0030(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.b  Offset_0x017A5E(PC, D0), $0019(A0)
                cmpi.b  #$06, D0
                bcs.s   Offset_0x017AB4
                bne.s   Offset_0x017A96
                cmpi.w  #$0380, ($FFFFEE04).w
                bcc.s   Offset_0x017AB4
                bra.s   Offset_0x017A9E
Offset_0x017A96:
                cmpi.w  #$0380, ($FFFFEE04).w
                bcs.s   Offset_0x017AB4
Offset_0x017A9E:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x017AB0
                bclr    #$07, $02(A2, D0)
Offset_0x017AB0:
                bra     J_DeleteObject_0F       ; Offset_0x017C80
Offset_0x017AB4:
                move.w  $0032(A0), D0
                add.w   ($FFFFEEE4).w, D0
                move.w  D0, $000C(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.w  Offset_0x017AD8(PC, D0), D1
                jsr     Offset_0x017AD8(PC, D1)
                tst.b   ($FFFFEEBC).w
                beq     Offset_0x017C8C
                rts
Offset_0x017AD8:
                dc.w    Offset_0x017AE2-Offset_0x017AD8
                dc.w    Offset_0x017AE2-Offset_0x017AD8
                dc.w    Offset_0x017AFA-Offset_0x017AD8
                dc.w    Offset_0x017B40-Offset_0x017AD8
                dc.w    Offset_0x017B5A-Offset_0x017AD8
Offset_0x017AE2:
                move.w  #$00CB, D1
                move.w  #$0080, D2
                move.w  #$0081, D3
                move.w  $0008(A0), D4
                bsr     Offset_0x017C92
                bra     Offset_0x00FBF4
Offset_0x017AFA:
                move.w  #$00CB, D1
                move.w  #$0078, D2
                move.w  #$0079, D3
                move.w  $0008(A0), D4
                bsr     Offset_0x017C92
                bsr     Offset_0x00FBF4
Offset_0x017B12:               
                btst    #$03, $0022(A0)
                beq.s   Offset_0x017B28
                move.l  A0, -(A7)
                move.l  A0, A1
                lea     ($FFFFB000).w, A0
                bsr     Offset_0x017C86
                move.l  (A7)+, A0
Offset_0x017B28:
                btst    #$04, $0022(A0)
                beq.s   Offset_0x017B3E
                move.l  A0, -(A7)
                move.l  A0, A1
                lea     ($FFFFB040).w, A0
                bsr     Offset_0x017C86
                move.l  (A7)+, A0
Offset_0x017B3E:
                rts
Offset_0x017B40:
                move.w  #$00EB, D1
                move.w  #$0078, D2
                move.w  #$0079, D3
                move.w  $0008(A0), D4
                bsr     Offset_0x017C92
                bsr     Offset_0x00FBF4
                bra.s   Offset_0x017B12
Offset_0x017B5A:
                move.w  #$010A, D1
                move.w  #$003E, D2
                move.w  $0008(A0), D4
                lea     (Offset_0x017B74), A2
                bsr     Offset_0x017C98
                bra     Offset_0x00FBF4     
Offset_0x017B74:
                dc.b    $40, $40, $40, $40, $40, $40, $40, $40, $3F, $3F, $3E, $3E, $3D, $3D, $3C, $3C
                dc.b    $3B, $3B, $3A, $3A, $39, $39, $38, $38, $37, $37, $36, $36, $35, $35, $34, $34
                dc.b    $33, $33, $32, $32, $31, $31, $30, $30, $2F, $2F, $2E, $2E, $2D, $2D, $2C, $2C
                dc.b    $2B, $2B, $2A, $2A, $29, $29, $28, $28, $27, $27, $26, $26, $25, $25, $24, $24
                dc.b    $23, $23, $22, $22, $21, $21, $20, $20, $1F, $1F, $1E, $1E, $1D, $1D, $1C, $1C
                dc.b    $1B, $1B, $1A, $1A, $19, $19, $18, $18, $17, $17, $16, $16, $15, $15, $14, $14
                dc.b    $13, $13, $12, $12, $11, $11, $10, $10, $0F, $0F, $0E, $0E, $0D, $0D, $0C, $0C
                dc.b    $0B, $0B, $0A, $0A, $09, $09, $08, $08, $07, $07, $06, $06, $05, $05, $04, $04
                dc.b    $03, $03, $02, $02, $01, $01, $00, $00, $FF, $FF, $FE, $FE, $FD, $FD, $FC, $FC
                dc.b    $FB, $FB, $FA, $FA, $F9, $F9, $F8, $F8, $F7, $F7, $F6, $F6, $F5, $F5, $F4, $F4
                dc.b    $F3, $F3, $F2, $F2, $F1, $F1, $F0, $F0, $EF, $EF, $EE, $EE, $ED, $ED, $EC, $EC
                dc.b    $EB, $EB, $EA, $EA, $E9, $E9, $E8, $E8, $E7, $E7, $E6, $E6, $E5, $E5, $E4, $E4
                dc.b    $E3, $E3, $E2, $E2, $E1, $E1, $E0, $E0, $DF, $DF, $DE, $DE, $DD, $DD, $DC, $DC
                dc.b    $DB, $DB, $DA, $DA, $D9, $D9, $D8, $D8, $D7, $D7, $D6, $D6, $D5, $D5, $D4, $D4
                dc.b    $D3, $D3, $D2, $D2, $D1, $D1, $D0, $D0, $CF, $CF, $CE, $CE, $CD, $CD, $CC, $CC
                dc.b    $CB, $CB, $CA, $CA, $C9, $C9, $C8, $C8, $C7, $C7, $C6, $C6, $C5, $C5, $C4, $C4
                dc.b    $C3, $C3, $C2, $C2, $C1, $C1, $C0, $C0, $C0, $C0, $C0, $C0                         
;=============================================================================== 
; Object 0x30 - 
; [ End ]                         
;===============================================================================  
J_DeleteObject_0F: ; Offset_0x017C80:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x017C86:
                jmp     (Offset_0x021370)
Offset_0x017C8C:
                jmp     (Offset_0x00D30C)
Offset_0x017C92:
                jmp     (Offset_0x00F4FA)
Offset_0x017C98:
                jmp     (Offset_0x00F54C)
                dc.w    $0000                   ; Filler                  
;=============================================================================== 
; Object 0x33 - Oil Ocean - Touch to Boost Up
; [ Begin ]                         
;===============================================================================                  
Obj_0x33_Touch_Booster: ; Offset_0x017CA0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x017CAE(PC, D0), D1
                jmp     Offset_0x017CAE(PC, D1)
Offset_0x017CAE:
                dc.w    Offset_0x017CB2-Offset_0x017CAE
                dc.w    Offset_0x017CF6-Offset_0x017CAE
Offset_0x017CB2:
                addq.b  #$02, $0024(A0)
                move.l  #Touch_Booster_Mappings, $0004(A0) ; Offset_0x017EE2
                move.w  #$632C, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_06 ; Offset_0x017EFE
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$18, $0019(A0)
                move.w  $000C(A0), $0030(A0)
                addq.b  #$02, $0025(A0)
                move.w  #$0078, $0036(A0)
                tst.b   $0028(A0)
                beq.s   Offset_0x017CF6
                move.b  #$04, $0025(A0)
Offset_0x017CF6:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x017D22(PC, D0), D1
                jsr     Offset_0x017D22(PC, D1)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$08, D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_01        ; Offset_0x017F04
                bra     J_MarkObjGone_05        ; Offset_0x017EF8
Offset_0x017D22:
                dc.w    Offset_0x017D2C-Offset_0x017D22
                dc.w    Offset_0x017D46-Offset_0x017D22
                dc.w    Offset_0x017D82-Offset_0x017D22
                dc.w    Offset_0x017E68-Offset_0x017D22
                dc.w    Offset_0x017EE0-Offset_0x017D22
Offset_0x017D2C:
                subq.w  #$01, $0036(A0)
                bpl.s   Offset_0x017D44
                move.w  #$0078, $0036(A0)
                move.l  #$FFF69800, $0032(A0)
                addq.b  #$02, $0025(A0)
Offset_0x017D44:
                rts
Offset_0x017D46:
                move.l  $000C(A0), D1
                add.l   $0032(A0), D1
                move.l  D1, $000C(A0)
                addi.l  #$00003800, $0032(A0)
                swap.w  D1
                cmp.w   $0030(A0), D1
                bcs.s   Offset_0x017D80
                move.l  $0032(A0), D0
                cmpi.l  #$00010000, D0
                bcc.s   Offset_0x017D72
                subq.b  #$02, $0025(A0)
Offset_0x017D72:
                lsr.l   #$02, D0
                neg.l   D0
                move.l  D0, $0032(A0)
                move.w  $0030(A0), $000C(A0)
Offset_0x017D80:
                rts
Offset_0x017D82:
                move.w  $0008(A0), D2
                move.w  D2, D3
                subi.w  #$0010, D2
                addi.w  #$0010, D3
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   Offset_0x017DF0
                cmpi.b  #$18, D0
                beq.s   Offset_0x017DF2
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                bsr.s   Offset_0x017DAE
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
Offset_0x017DAE:
                btst    D6, $0022(A0)
                beq.s   Offset_0x017DF0
                move.w  $0008(A1), D0
                cmp.w   D2, D0
                bcs.s   Offset_0x017DF0
                cmp.w   D3, D0
                bcc.s   Offset_0x017DF0
                move.b  #$01, $002A(A1)
                move.w  #$0000, $0014(A1)
                move.w  #$0000, $0010(A1)
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A1)
                bclr    #$07, $0002(A1)
                move.l  #$FFF69800, $0032(A0)
                addq.b  #$02, $0025(A0)
Offset_0x017DF0:
                rts
Offset_0x017DF2:
                lea     ($FFFFB000).w, A1
                move.w  $0008(A1), D0
                cmp.w   D2, D0
                bcs.s   Offset_0x017E66
                cmp.w   D3, D0
                bcc.s   Offset_0x017E66
                lea     ($FFFFB040).w, A2
                move.w  $0008(A2), D0
                cmp.w   D2, D0
                bcs.s   Offset_0x017E66
                cmp.w   D3, D0
                bcc.s   Offset_0x017E66
                move.b  #$01, $002A(A1)
                move.w  #$0000, $0014(A1)
                move.w  #$0000, $0010(A1)
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A1)
                bclr    #$07, $0002(A1)
                move.b  #$01, $002A(A2)
                move.w  #$0000, $0014(A2)
                move.w  #$0000, $0010(A2)
                move.w  #$0000, $0012(A2)
                bclr    #$05, $0022(A2)
                bclr    #$07, $0002(A2)
                move.l  #$FFF69800, $0032(A0)
                addq.b  #$02, $0025(A0)
Offset_0x017E66:
                rts
Offset_0x017E68:
                move.l  $000C(A0), D1
                add.l   $0032(A0), D1
                move.l  D1, $000C(A0)
                addi.l  #$00003800, $0032(A0)
                swap.w  D1
                move.w  $0030(A0), D0
                subi.w  #$007D, D0
                cmp.w   D0, D1
                bne.s   Offset_0x017EDE
                addq.b  #$02, $0025(A0)
                lea     ($FFFFB000).w, A1
                move.b  $0022(A0), D0
                andi.b  #$08, D0
                bsr.s   Offset_0x017EA8
                lea     ($FFFFB040).w, A1
                move.b  $0022(A0), D0
                andi.b  #$10, D0
Offset_0x017EA8:
                beq.s   Offset_0x017EDE
                move.w  $0008(A0), $0008(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0800, $0014(A1)
                bset    #$01, $0022(A1)
                move.w  #$F000, $0012(A1)
                bclr    #$03, $0022(A1)
                move.b  #$00, $002A(A1)
                move.w  #$00CC, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x017EDE:
                rts
Offset_0x017EE0:
                rts
Touch_Booster_Mappings:                
Offset_0x017EE2:
                dc.w    Offset_0x017EE4-Offset_0x017EE2
Offset_0x017EE4:
                dc.w    $0002
                dc.l    $F8090000, $0000FFE8, $F8090800, $08000000
;=============================================================================== 
; Object 0x33 - Oil Ocean - Touch to Boost Up 
; [ End ]                         
;===============================================================================                   
                nop                             ; Filler
J_MarkObjGone_05: ; Offset_0x017EF8:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_ModifySpriteAttr_2P_06: ; Offset_0x017EFE:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_01: ; Offset_0x017F04:
                jmp     SolidObject             ; (Offset_0x00F4A0)
                dc.w    $0000                   ; Filler
                
;=============================================================================== 
; Object 0x43 - Oil Ocean - Giant Spikeball
; [ Begin ]                         
;===============================================================================                 
Obj_0x43_Giant_Spikeball: ; Offset_0x017F0C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x017F1A(PC, D0), D1
                jmp     Offset_0x017F1A(PC, D1)
Offset_0x017F1A:
                dc.w    Offset_0x017F32-Offset_0x017F1A
                dc.w    Offset_0x017FD6-Offset_0x017F1A
                dc.w    Offset_0x018028-Offset_0x017F1A
Offset_0x017F20:
                dc.b    $00, $68, $00, $00, $00, $00, $01, $E8, $FF, $E8, $00, $18, $01, $A8, $FF, $A8
                dc.b    $FF, $D8
Offset_0x017F32:
                addq.b  #$02, $0024(A0)
                move.w  #$C30C, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_07 ; Offset_0x0180CA
                moveq   #$00, D1
                move.b  $0028(A0), D1
                lea     Offset_0x017F20(PC, D1), A2
                move.b  (A2)+, D1
                move.l  A0, A1
                bra.s   Offset_0x017F74
Offset_0x017F50:                
                bsr     J_S1SingleObjectLoad_01  ; Offset_0x0180C4
                bne.s   Offset_0x017FA0
                move.b  $0000(A0), $0000(A1)
                move.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  #$01, $0036(A1)
Offset_0x017F74:
                move.l  #Giant_Spikeball_Mappings, $0004(A1) ; Offset_0x01808E
                move.w  $0002(A0), $0002(A1)
                move.b  #$04, $0001(A1)
                move.b  #$04, $0018(A1)
                move.b  #$18, $0019(A1)
                move.b  #$A5, $0020(A1)
                move.w  $0008(A1), $0030(A1)
Offset_0x017FA0:
                dbra    D1, Offset_0x017F50
                move.l  A0, $003C(A1)
                move.l  A1, $003C(A0)
                moveq   #$00, D1
                move.b  (A2)+, D1
                move.w  $0030(A0), D0
                sub.w   D1, D0
                move.w  D0, $0032(A0)
                move.w  D0, $0032(A1)
                add.w   D1, D0
                add.w   D1, D0
                move.w  D0, $0034(A0)
                move.w  D0, $0034(A1)
                move.w  (A2)+, D0
                add.w   D0, $0008(A0)
                move.w  (A2)+, D0
                add.w   D0, $0008(A1)
Offset_0x017FD6:
                bsr.s   Offset_0x018032
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bls.s   Offset_0x017FFC
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x018002
Offset_0x017FFC:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x018002:
                move.l  $003C(A0), A1
                cmpa.l  A0, A1
                beq.s   Offset_0x018010
                jsr     (Offset_0x00D3B6)
Offset_0x018010:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_10       ; Offset_0x018022
                bclr    #$07, $02(A2, D0)
J_DeleteObject_10: ; Offset_0x018022:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x018028:
                bsr.s   Offset_0x018032
                bsr.s   Offset_0x018068
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x018032:
                tst.b   $0036(A0)
                bne.s   Offset_0x018050
                move.w  $0008(A0), D0
                subq.w  #$01, D0
                cmp.w   $0032(A0), D0
                bne.s   Offset_0x01804A
                move.b  #$01, $0036(A0)
Offset_0x01804A:
                move.w  D0, $0008(A0)
                rts
Offset_0x018050:
                move.w  $0008(A0), D0
                addq.w  #$01, D0
                cmp.w   $0034(A0), D0
                bne.s   Offset_0x018062
                move.b  #$00, $0036(A0)
Offset_0x018062:
                move.w  D0, $0008(A0)
                rts
Offset_0x018068:
                move.l  $003C(A0), A1
                move.w  $0008(A0), D0
                subi.w  #$0018, D0
                move.w  $0008(A1), D2
                addi.w  #$0018, D2
                cmp.w   D0, D2
                bne.s   Offset_0x01808C
                eori.b  #$01, $0036(A0)
                eori.b  #$01, $0036(A1)
Offset_0x01808C:
                rts
Giant_Spikeball_Mappings:
Offset_0x01808E:
                dc.w    Offset_0x018090-Offset_0x01808E
Offset_0x018090:
                dc.w    $0006
                dc.l    $E0050000, $0000FFE8, $D80F0004, $0002FFF8
                dc.l    $F8090014, $000AFFE8, $F809001A, $000D0000
                dc.l    $10051000, $1000FFE8, $080F1004, $1002FFF8                
;=============================================================================== 
; Object 0x43 - Oil Ocean - Big Spikeball
; [ End ]                         
;===============================================================================                
                nop                             ; Filler
J_S1SingleObjectLoad_01: ; Offset_0x0180C4:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_ModifySpriteAttr_2P_07: ; Offset_0x0180CA:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
;=============================================================================== 
; Object 0x07 - 
; [ Begin ]                         
;===============================================================================  
Obj_0x07: ; Offset_0x0180D0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x0180DE(PC, D0), D1
                jmp     Offset_0x0180DE(PC, D1)
Offset_0x0180DE:                
                dc.w    Offset_0x0180E2-Offset_0x0180DE
                dc.w    Offset_0x018104-Offset_0x0180DE   
Offset_0x0180E2:
                addq.b  #$02, $0024(A0)
                move.w  #$0758, $000C(A0)
                move.b  #$20, $0019(A0)
                move.w  $000C(A0), $0030(A0)
                move.b  #$30, $0038(A0)
                bset    #$07, $0022(A0)
Offset_0x018104:
                lea     ($FFFFB000).w, A1
                moveq   #$08, D1
                move.b  $0022(A0), D0
                and.b   D1, D0
                bne.s   Offset_0x018120
                cmpi.b  #$30, $0038(A0)
                beq.s   Offset_0x01812A
                addq.b  #$01, $0038(A0)
                bra.s   Offset_0x01812A
Offset_0x018120:
                tst.b   $0038(A0)
                beq.s   Offset_0x01817E
                subq.b  #$01, $0038(A0)
Offset_0x01812A:
                moveq   #$20, D1
                moveq   #$00, D3
                move.b  $0038(A0), D3
                moveq   #$03, D6
                move.w  $0008(A1), D4
                move.w  D4, $0008(A0)
                bsr     Offset_0x01819A
                lea     ($FFFFB040).w, A1
                moveq   #$10, D1
                move.b  $0022(A0), D0
                and.b   D1, D0
                bne.s   Offset_0x01815C
                cmpi.b  #$30, $003A(A0)
                beq.s   Offset_0x018166
                addq.b  #$01, $003A(A0)
                bra.s   Offset_0x018166
Offset_0x01815C:
                tst.b   $003A(A0)
                beq.s   Offset_0x01817E
                subq.b  #$01, $003A(A0)
Offset_0x018166:
                moveq   #$20, D1
                moveq   #$00, D3
                move.b  $003A(A0), D3
                moveq   #$04, D6
                move.w  $0008(A1), D4
                move.w  D4, $0008(A0)
                bsr     Offset_0x01819A
                rts
Offset_0x01817E:
                not.b  D1
                and.b   D1, $0022(A0)
                move.l  A0, -(A7)
                move.l  A0, A2
                move.l  A1, A0
                bsr     J_KillSonic_01          ; Offset_0x018194
                move.l  (A7)+, A0
                rts
;=============================================================================== 
; Object 0x07 - 
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler            
J_KillSonic_01: ; Offset_0x018194:
                jmp     KillSonic               ; (Offset_0x021422)
Offset_0x01819A:
                jmp     (Offset_0x00F99A)

;=============================================================================== 
; Object 0x45 - Oil Ocean - Spring Push to Boost 
; [ Begin ]                         
;===============================================================================  
Obj_0x45_Spring_Push_Boost: ; Offset_0x0181A0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x0181B2(PC, D0), D1
                jsr     Offset_0x0181B2(PC, D1)
                bra     J_MarkObjGone_06        ; Offset_0x018D78
Offset_0x0181B2:
                dc.w    Offset_0x0181B8-Offset_0x0181B2
                dc.w    Offset_0x01822E-Offset_0x0181B2
                dc.w    Offset_0x018322-Offset_0x0181B2
Offset_0x0181B8:
                addq.b  #$02, $0024(A0)
                move.l  #Spring_Push_Boost_Mappings, $0004(A0) ; Offset_0x0185C2
                move.w  #$43C5, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                move.w  Offset_0x0181EE(PC, D0), D0
                jmp     Offset_0x0181EE(PC, D0)
Offset_0x0181EE:
                dc.w    Offset_0x018216-Offset_0x0181EE
                dc.w    Offset_0x0181F2-Offset_0x0181EE
Offset_0x0181F2:
                move.b  #$04, $0024(A0)
                move.b  #$01, $001C(A0)
                move.b  #$0A, $001A(A0)
                move.w  #$43C5, $0002(A0)
                move.b  #$14, $0019(A0)
                move.w  $0008(A0), $0034(A0)
Offset_0x018216:
                move.b  $0028(A0), D0
                andi.w  #$0002, D0
                move.w  Offset_0x01822A(PC, D0), $0030(A0)
                bsr     J_ModifySpriteAttr_2P_08 ; Offset_0x018D7E
                rts
Offset_0x01822A:
                dc.w    $F000, $F600
Offset_0x01822E:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   Offset_0x018244
                tst.b   $0032(A0)
                beq.s   Offset_0x018250
                subq.b  #$01, $0032(A0)
                bra.s   Offset_0x018250
Offset_0x018244:
                cmpi.b  #$09, $0032(A0)
                beq.s   Offset_0x01826E
                addq.b  #$01, $0032(A0)
Offset_0x018250:
                moveq   #$00, D3
                move.b  $0032(A0), D3
                move.b  D3, $001A(A0)
                add.w   D3, D3
                move.w  #$001B, D1
                move.w  #$0014, D2
                move.w  $0008(A0), D4
                bsr     Offset_0x018D90
                rts
Offset_0x01826E:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                bsr.s   Offset_0x01827C
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
Offset_0x01827C:
                bclr    D6, $0022(A0)
                beq     Offset_0x018320
                move.w  $0030(A0), $0012(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                bpl.s   Offset_0x0182AE
                move.w  #$0000, $0010(A1)
Offset_0x0182AE:
                btst    #$00, D0
                beq.s   Offset_0x0182EE
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                btst    #$01, D0
                bne.s   Offset_0x0182DE
                move.b  #$01, $002C(A1)
Offset_0x0182DE:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x0182EE
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x0182EE:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x018304
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x018304:
                cmpi.b  #$08, D0
                bne.s   Offset_0x018316
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x018316:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x018320:
                rts
Offset_0x018322:
                move.b  #$00, $0036(A0)
                move.w  #$001F, D1
                move.w  #$000C, D2
                move.w  #$000D, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Offset_0x018D8A
                cmpi.w  #$0001, D4
                bne.s   Offset_0x018368
                move.b  $0022(A0), D1
                move.w  $0008(A0), D2
                sub.w   $0008(A1), D2
                bcs.s   Offset_0x01835E
                eori.b  #$01, D1
Offset_0x01835E:
                andi.b  #$01, D1
                bne.s   Offset_0x018368
                bsr     Offset_0x0183E4
Offset_0x018368:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     Offset_0x018D8A
                cmpi.w  #$0001, D4
                bne.s   Offset_0x018396
                move.b  $0022(A0), D1
                move.w  $0008(A0), D2
                sub.w   $0008(A1), D2
                bcs.s   Offset_0x01838E
                eori.b  #$01, D1
Offset_0x01838E:
                andi.b  #$01, D1
                bne.s   Offset_0x018396
                bsr.s   Offset_0x0183E4
Offset_0x018396:
                tst.b   $0036(A0)
                bne.s   Offset_0x0183E2
                move.w  $0034(A0), D0
                cmp.w   $0008(A0), D0
                beq.s   Offset_0x0183E2
                bcc.s   Offset_0x0183C4
                subq.b  #$04, $001A(A0)
                subq.w  #$04, $0008(A0)
                cmp.w   $0008(A0), D0
                bcs.s   Offset_0x0183DE
                move.b  #$0A, $001A(A0)
                move.w  $0034(A0), $0008(A0)
                bra.s   Offset_0x0183DE
Offset_0x0183C4:
                subq.b  #$04, $001A(A0)
                addq.w  #$04, $0008(A0)
                cmp.w   $0008(A0), D0
                bcc.s   Offset_0x0183DE
                move.b  #$0A, $001A(A0)
                move.w  $0034(A0), $0008(A0)
Offset_0x0183DE:
                bsr     Offset_0x018478
Offset_0x0183E2:
                rts
Offset_0x0183E4:
                btst    #$00, $0022(A0)
                beq.s   Offset_0x018420
                btst    #$00, $0022(A1)
                bne     Offset_0x018476
                tst.w   D0
                bne     Offset_0x018406
                tst.w   $0014(A1)
                beq.s   Offset_0x018476
                bpl.s   Offset_0x018470
                bra.s   Offset_0x018476
Offset_0x018406:
                move.w  $0034(A0), D0
                addi.w  #$0012, D0
                cmp.w   $0008(A0), D0
                beq.s   Offset_0x018470
                addq.w  #$01, $0008(A0)
                moveq   #$01, D0
                move.w  #$0040, D1
                bra.s   Offset_0x01844E
Offset_0x018420:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x018476
                tst.w   D0
                bne     Offset_0x018436
                tst.w   $0014(A1)
                bmi.s   Offset_0x018470
                bra.s   Offset_0x018476
Offset_0x018436:
                move.w  $0034(A0), D0
                subi.w  #$0012, D0
                cmp.w   $0008(A0), D0
                beq.s   Offset_0x018470
                subq.w  #$01, $0008(A0)
                moveq   #$FFFFFFFF, D0
                move.w  #$FFC0, D1
Offset_0x01844E:
                add.w   D0, $0008(A1)
                move.w  D1, $0014(A1)
                move.w  #$0000, $0010(A1)
                move.w  $0034(A0), D0
                sub.w   $0008(A0), D0
                bcc.s   Offset_0x018468
                neg.w   D0
Offset_0x018468:
                addi.w  #$000A, D0
                move.b  D0, $001A(A0)
Offset_0x018470:
                move.b  #$01, $0036(A0)
Offset_0x018476:
                rts
Offset_0x018478:
                move.b  $0022(A0), D0
                andi.b  #$60, D0
                beq     Offset_0x018578
                lea     ($FFFFB000).w, A1
                moveq   #$05, D6
                bsr.s   Offset_0x018492
                lea     ($FFFFB040).w, A1
                moveq   #$06, D6
Offset_0x018492:
                bclr    D6, $0022(A0)
                beq     Offset_0x018578
                move.w  $0034(A0), D0
                sub.w   $0008(A0), D0
                bcc.s   Offset_0x0184A6
                neg.w   D0
Offset_0x0184A6:
                addi.w  #$000A, D0
                lsl.w   #$07, D0
                neg.w   D0
                move.w  D0, $0010(A1)
                subq.w  #$04, $0008(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   Offset_0x0184D4
                bclr    #$00, $0022(A1)
                addi.w  #$0008, $0008(A1)
                neg.w   $0010(A1)
Offset_0x0184D4:
                move.w  #$000F, $002E(A1)
                move.w  $0010(A1), $0014(A1)
                btst    #$02, $0022(A1)
                bne.s   Offset_0x0184EE
                move.b  #$00, $001C(A1)
Offset_0x0184EE:
                move.b  $0028(A0), D0
                bpl.s   Offset_0x0184FA
                move.w  #$0000, $0012(A1)
Offset_0x0184FA:
                btst    #$00, D0
                beq.s   Offset_0x01853A
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0
                bne.s   Offset_0x01852A
                move.b  #$03, $002C(A1)
Offset_0x01852A:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x01853A
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x01853A:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x018550
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x018550:
                cmpi.b  #$08, D0
                bne.s   Offset_0x018562
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x018562:
                bclr    #$05, $0022(A1)
                move.b  #$01, $001D(A1)
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x018578:
                rts 
Offset_0x01857A:   ; Unused Obj Conf
                dc.w    Offset_0x01857E-Offset_0x01857A
                dc.w    Offset_0x0185A0-Offset_0x01857A
Offset_0x01857E:
                dc.b    $00, $00, $01, $02, $03, $04, $05, $06, $07, $08, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $08, $07, $06, $05, $04, $03, $02, $01, $00, $00, $00, $00, $00, $00
                dc.b    $00, $FF
Offset_0x0185A0:
                dc.b    $00, $0A, $0B, $0C, $0D, $0E, $0F, $10, $11, $12, $13, $13, $13, $13, $13, $13
                dc.b    $13, $13, $12, $11, $10, $0F, $0E, $0D, $0C, $0B, $0A, $0A, $0A, $0A, $0A, $0A
                dc.b    $0A, $FF                
Spring_Push_Boost_Mappings: 
Offset_0x0185C2:
                dc.w    Offset_0x0185FC-Offset_0x0185C2
                dc.w    Offset_0x018626-Offset_0x0185C2
                dc.w    Offset_0x018650-Offset_0x0185C2
                dc.w    Offset_0x01867A-Offset_0x0185C2
                dc.w    Offset_0x0186A4-Offset_0x0185C2
                dc.w    Offset_0x0186CE-Offset_0x0185C2
                dc.w    Offset_0x0186F8-Offset_0x0185C2
                dc.w    Offset_0x018722-Offset_0x0185C2
                dc.w    Offset_0x01874C-Offset_0x0185C2
                dc.w    Offset_0x018776-Offset_0x0185C2
                dc.w    Offset_0x0187A0-Offset_0x0185C2
                dc.w    Offset_0x0187CA-Offset_0x0185C2
                dc.w    Offset_0x0187F4-Offset_0x0185C2
                dc.w    Offset_0x01881E-Offset_0x0185C2
                dc.w    Offset_0x018848-Offset_0x0185C2
                dc.w    Offset_0x018872-Offset_0x0185C2
                dc.w    Offset_0x01889C-Offset_0x0185C2
                dc.w    Offset_0x0188C6-Offset_0x0185C2
                dc.w    Offset_0x0188F0-Offset_0x0185C2
                dc.w    Offset_0x01891A-Offset_0x0185C2
                dc.w    Offset_0x018944-Offset_0x0185C2
                dc.w    Offset_0x01896E-Offset_0x0185C2
                dc.w    Offset_0x018998-Offset_0x0185C2
                dc.w    Offset_0x0189C2-Offset_0x0185C2
                dc.w    Offset_0x0189EC-Offset_0x0185C2
                dc.w    Offset_0x018A16-Offset_0x0185C2
                dc.w    Offset_0x018A40-Offset_0x0185C2
                dc.w    Offset_0x018A6A-Offset_0x0185C2
                dc.w    Offset_0x018A94-Offset_0x0185C2               
Offset_0x0185FC:
                dc.w    $0005
                dc.l    $EC0C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $04081007, $1003FFF4, $FC08300A, $3005FFF4
                dc.l    $F404100D, $1006FFF8
Offset_0x018626:
                dc.w    $0005
                dc.l    $EE0C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $04081007, $1003FFF4, $FC08300A, $3005FFF4
                dc.l    $F604100D, $1006FFF8
Offset_0x018650:
                dc.w    $0005
                dc.l    $F00C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $04081007, $1003FFF4, $FE08300A, $3005FFF4
                dc.l    $F804100D, $1006FFF8
Offset_0x01867A:
                dc.w    $0005
                dc.l    $F20C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $06081007, $1003FFF4, $0008300A, $3005FFF4
                dc.l    $FA04100D, $1006FFF8
Offset_0x0186A4:
                dc.w    $0005
                dc.l    $F40C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $06081007, $1003FFF4, $0008300A, $3005FFF4
                dc.l    $FC04100D, $1006FFF8
Offset_0x0186CE:
                dc.w    $0005
                dc.l    $F60C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $06081007, $1003FFF4, $0208300A, $3005FFF4
                dc.l    $FE04100D, $1006FFF8
Offset_0x0186F8:
                dc.w    $0005
                dc.l    $F80C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $08081007, $1003FFF4, $0408300A, $3005FFF4
                dc.l    $0004100D, $1006FFF8
Offset_0x018722:
                dc.w    $0005
                dc.l    $FA0C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $08081007, $1003FFF4, $0408300A, $3005FFF4
                dc.l    $0204100D, $1006FFF8
Offset_0x01874C:
                dc.w    $0005
                dc.l    $FC0C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $08081007, $1003FFF4, $0608300A, $3005FFF4
                dc.l    $0404100D, $1006FFF8
Offset_0x018776:
                dc.w    $0005
                dc.l    $FE0C3000, $3000FFF0, $0C083004, $3002FFF4
                dc.l    $0A081007, $1003FFF4, $0808300A, $3005FFF4
                dc.l    $0604100D, $1006FFF8
Offset_0x0187A0:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFEC
                dc.l    $F4020016, $000BFFF4, $F4022019, $200CFFFC
                dc.l    $F801001C, $000E0004
Offset_0x0187CA:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFED
                dc.l    $F4020016, $000BFFF5, $F4022019, $200CFFFD
                dc.l    $F801001C, $000E0004
Offset_0x0187F4:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFEE
                dc.l    $F4020016, $000BFFF6, $F4022019, $200CFFFE
                dc.l    $F801001C, $000E0004
Offset_0x01881E:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFEF
                dc.l    $F4020016, $000BFFF7, $F4022019, $200CFFFF
                dc.l    $F801001C, $000E0004
Offset_0x018848:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF0
                dc.l    $F4020016, $000BFFF8, $F4022019, $200CFFFE
                dc.l    $F801001C, $000E0004
Offset_0x018872:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF1
                dc.l    $F4020016, $000BFFF9, $F4022019, $200CFFFF
                dc.l    $F801001C, $000E0004
Offset_0x01889C:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF2
                dc.l    $F4020016, $000BFFF8, $F4022019, $200CFFFE
                dc.l    $F801001C, $000E0004
Offset_0x0188C6:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF3
                dc.l    $F4020016, $000BFFF9, $F4022019, $200CFFFF
                dc.l    $F801001C, $000E0004
Offset_0x0188F0:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF4
                dc.l    $F4020016, $000BFFFA, $F4022019, $200C0000
                dc.l    $F801001C, $000E0004
Offset_0x01891A:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF5
                dc.l    $F4020016, $000BFFFB, $F4022019, $200C0001
                dc.l    $F801001C, $000E0004
Offset_0x018944:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF6
                dc.l    $F4020016, $000BFFFC, $F4022019, $200C0000
                dc.l    $F801001C, $000E0004
Offset_0x01896E:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF7
                dc.l    $F4020016, $000BFFFD, $F4022019, $200C0001
                dc.l    $F801001C, $000E0004
Offset_0x018998:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF8
                dc.l    $F4020016, $000BFFFC, $F4022019, $200C0000
                dc.l    $F801001C, $000E0004
Offset_0x0189C2:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFF9
                dc.l    $F4020016, $000BFFFD, $F4022019, $200C0001
                dc.l    $F801001C, $000E0004
Offset_0x0189EC:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFFA
                dc.l    $F4020016, $000BFFFE, $F4022019, $200C0002
                dc.l    $F801001C, $000E0004
Offset_0x018A16:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFFB
                dc.l    $F4020016, $000BFFFF, $F4022019, $200C0003
                dc.l    $F801001C, $000E0004
Offset_0x018A40:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFFC
                dc.l    $F4020016, $000B0000, $F4022019, $200C0002
                dc.l    $F801001C, $000E0004
Offset_0x018A6A:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFFD
                dc.l    $F4020016, $000B0001, $F4022019, $200C0003
                dc.l    $F801001C, $000E0004
Offset_0x018A94:
                dc.w    $0005
                dc.l    $F003200F, $2007000C, $F4022013, $2009FFFE
                dc.l    $F4020016, $000B0000, $F4022019, $200C0002
                dc.l    $F801001C, $000E0004                
;=============================================================================== 
; Object 0x45 - Oil Ocean - Spring Push to Boost 
; [ End ]                         
;===============================================================================  

;=============================================================================== 
; Object 0x46 - Oil Ocean - Spring With Ball - Sonic call stay on ball 
; [ Begin ]                         
;===============================================================================  
Obj_0x46_Spring_Ball: ; Offset_0x018ABE:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x018ACC(PC, D0), D1
                jmp     Offset_0x018ACC(PC, D1)
Offset_0x018ACC:
                dc.w    Offset_0x018AD4-Offset_0x018ACC
                dc.w    Offset_0x018B92-Offset_0x018ACC
                dc.w    Offset_0x018BE0-Offset_0x018ACC
                dc.w    Offset_0x018C84-Offset_0x018ACC
Offset_0x018AD4:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x018AF0
                bclr    #$07, $02(A2, D0)
                bset    #$00, $02(A2, D0)
                bne     J_DeleteObject_11       ; Offset_0x018D6C
Offset_0x018AF0:
                addq.b  #$02, $0024(A0)
                move.b  #$0F, $0016(A0)
                move.b  #$0F, $0017(A0)
                move.l  #Spring_Ball_Mappings, $0004(A0) ; Offset_0x018CFA
                move.w  #$6354, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_08 ; Offset_0x018D7E
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0036(A0)
                move.b  #$10, $0019(A0)
                move.b  #$00, $001A(A0)
                move.w  #$0000, $0014(A0)
                move.b  #$01, $001F(A0)
                bsr     J_SingleObjectLoad_01   ; Offset_0x018D72
                bne.s   Offset_0x018B8E
                move.b  #$46, $0000(A1)
                addq.b  #$06, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$0012, $000C(A1)
                move.l  #Spring_Push_Boost_Mappings, $0004(A1) ; Offset_0x0185C2
                move.w  #$43C5, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$04, $0018(A1)
                move.b  #$09, $001A(A1)
                move.l  A0, $003C(A1)
Offset_0x018B8E:
                move.l  A1, $003C(A0)
Offset_0x018B92:
                btst    #$06, ($FFFFF607).w
                bne.s   Offset_0x018BAC
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$04, D0
                tst.b   $00(A2, D0)
                beq.s   Offset_0x018BD8
Offset_0x018BAC:
                addq.b  #$02, $0024(A0)
                bset    #$01, $0022(A0)
                move.w  #$FD00, $0012(A0)
                move.w  #$0100, $0014(A0)
                move.l  $003C(A0), A1
                move.b  #$01, $0030(A1)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x018BD8
                neg.w   $0014(A0)
Offset_0x018BD8:
                bsr     Offset_0x018C98
                bra     J_MarkObjGone_06        ; Offset_0x018D78
Offset_0x018BE0:
                move.w  $0008(A0), -(A7)
                bsr     J_SpeedToPos_05         ; Offset_0x018D96
                btst    #$01, $0022(A0)
                beq.s   Offset_0x018C34
                addi.w  #$0018, $0012(A0)
                bmi.s   Offset_0x018C32
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcs.s   Offset_0x018C6C
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl     Offset_0x018C32
                add.w   D1, $000C(A0)
                clr.w   $0012(A0)
                bclr    #$01, $0022(A0)
                move.w  #$0100, $0010(A0)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x018C32
                neg.w   $0010(A0)
Offset_0x018C32:
                bra.s   Offset_0x018C4C
Offset_0x018C34:
                jsr     ObjHitFloor             ; (Offset_0x013898)
                cmpi.w  #$0008, D1
                blt.s   Offset_0x018C48
                bset    #$01, $0022(A0)
                bra.s   Offset_0x018C4C
Offset_0x018C48:
                add.w   D1, $000C(A0)
Offset_0x018C4C:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  (A7)+, D4
                bsr     J_SolidObject_02        ; Offset_0x018D84
                bsr     Offset_0x018C98
                bra     J_MarkObjGone_06        ; Offset_0x018D78
Offset_0x018C6C:
                move.w  (A7)+, D4
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x018C80
                bclr    #$07, $02(A2, D0)
Offset_0x018C80:
                bra     J_DeleteObject_11       ; Offset_0x018D6C
Offset_0x018C84:
                tst.b   $0030(A0)
                beq.s   Offset_0x018C94
                subq.b  #$01, $001A(A0)
                bne.s   Offset_0x018C94
                clr.b   $0030(A0)
Offset_0x018C94:
                bra     J_MarkObjGone_06        ; Offset_0x018D78
Offset_0x018C98:
                tst.b   $001A(A0)
                beq.s   Offset_0x018CA6
                move.b  #$00, $001A(A0)
                rts
Offset_0x018CA6:
                move.b  $0014(A0), D0
                beq.s   Offset_0x018CD2
                bmi.s   Offset_0x018CDA
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x018CD2
                neg.b   D0
                addq.b  #$08, D0
                bcs.s   Offset_0x018CBC
                moveq   #$00, D0
Offset_0x018CBC:
                move.b  D0, $001E(A0)
                move.b  $001F(A0), D0
                addq.b  #$01, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x018CCE
                moveq   #$01, D0
Offset_0x018CCE:
                move.b  D0, $001F(A0)
Offset_0x018CD2:
                move.b  $001F(A0), $001A(A0)
                rts
Offset_0x018CDA:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x018CD2
                addq.b  #$08, D0
                bcs.s   Offset_0x018CE6
                moveq   #$00, D0
Offset_0x018CE6:
                move.b  D0, $001E(A0)
                move.b  $001F(A0), D0
                subq.b  #$01, D0
                bne.s   Offset_0x018CF4
                moveq   #$03, D0
Offset_0x018CF4:
                move.b  D0, $001F(A0)
                bra.s   Offset_0x018CD2 
Spring_Ball_Mappings: ; Offset_0x018CFA:
                dc.w    Offset_0x018D02-Spring_Ball_Mappings
                dc.w    Offset_0x018D24-Spring_Ball_Mappings
                dc.w    Offset_0x018D46-Spring_Ball_Mappings
                dc.w    Offset_0x018D58-Spring_Ball_Mappings
Offset_0x018D02:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $00051804, $1802FFF0, $00051004, $10020000
Offset_0x018D24:
                dc.w    $0004
                dc.l    $F0050008, $0004FFF0, $F0050808, $08040000
                dc.l    $00051008, $1004FFF0, $00051808, $18040000
Offset_0x018D46:
                dc.w    $0002
                dc.l    $F00D000C, $0006FFF0, $000D180C, $1806FFF0
Offset_0x018D58:
                dc.w    $0002
                dc.l    $F00D080C, $0806FFF0, $000D100C, $1006FFF0                 
;=============================================================================== 
; Object 0x46 - Oil Ocean - Spring With Ball - Sonic call stay on ball 
; [ End ]                         
;===============================================================================            
                nop                             ; Filler
J_DeleteObject_11: ; Offset_0x018D6C:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_SingleObjectLoad_01: ; Offset_0x018D72:
                jmp     SingleObjectLoad        ; (Offset_0x00E772)
J_MarkObjGone_06: ; Offset_0x018D78:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_ModifySpriteAttr_2P_08: ; Offset_0x018D7E:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_02: ; Offset_0x018D84:
                jmp     SolidObject             ; (Offset_0x00F4A0)
Offset_0x018D8A:
                jmp     (Offset_0x00F510)
Offset_0x018D90:
                jmp     (Offset_0x00F5F0)
J_SpeedToPos_05: ; Offset_0x018D96:
                jmp     SpeedToPos              ; (Offset_0x00D27A)
;=============================================================================== 
; Object 0x47 - Switch - Oil Ocean / Dust Hill
; [ Begin ]                         
;===============================================================================                  
Obj_0x47_Switch: ; Offset_0x018D9C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x018DAA(PC, D0), D1
                jmp     Offset_0x018DAA(PC, D1)  
Offset_0x018DAA:                  
                dc.w    Offset_0x018DAE-Offset_0x018DAA
                dc.w    Offset_0x018DDA-Offset_0x018DAA
Offset_0x018DAE:
                addq.b  #$02, $0024(A0)
                move.l  #Switch_Mappings, $0004(A0) ; Offset_0x018E3E
                move.w  #$0424, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_09 ; Offset_0x018E6A
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                addq.w  #$04, $000C(A0)
Offset_0x018DDA:
                tst.b   $0001(A0)
                bpl.s   Offset_0x018E3A
                move.w  #$001B, D1
                move.w  #$0004, D2
                move.w  #$0005, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_03        ; Offset_0x018E70
                move.b  #$00, $001A(A0)
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                lea     ($FFFFF7E0).w, A3
                lea     $00(A3, D0), A3
                moveq   #$00, D3
                btst    #$06, $0028(A0)
                beq.s   Offset_0x018E16
                moveq   #$07, D3
Offset_0x018E16:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   Offset_0x018E24
                bclr    D3, (A3)
                bra.s   Offset_0x018E3A
Offset_0x018E24:
                tst.b   (A3)
                bne.s   Offset_0x018E32
                move.w  #$00CD, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x018E32:
                bset    D3, (A3)
                move.b  #$01, $001A(A0)
Offset_0x018E3A:
                bra     J_MarkObjGone_07        ; Offset_0x018E64 
Switch_Mappings: ; Offset_0x018E3E:
                dc.w    Offset_0x018E44-Switch_Mappings
                dc.w    Offset_0x018E4E-Switch_Mappings
                dc.w    Offset_0x018E58-Switch_Mappings
Offset_0x018E44:
                dc.w    $0001
                dc.l    $F40D0000, $0000FFF0
Offset_0x018E4E:
                dc.w    $0001
                dc.l    $F40D0008, $0004FFF0
Offset_0x018E58:
                dc.w    $0001
                dc.l    $F80D0000, $0000FFF0
;=============================================================================== 
; Object 0x47 - Switch - Oil Ocean / Dust Hill
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler
J_MarkObjGone_07: ; Offset_0x018E64:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_ModifySpriteAttr_2P_09 ; Offset_0x018E6A:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_03: ; Offset_0x018E70:
                jmp     SolidObject             ; (Offset_0x00F4A0)
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x3D - Break to Boost - Oil Ocean
; [ Begin ]                         
;===============================================================================  
Obj_0x3D_Break_Boost: ; Offset_0x018E78:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x018E86(PC, D0), D1
                jmp     Offset_0x018E86(PC, D1)
Offset_0x018E86:
                dc.w    Offset_0x018E8E-Offset_0x018E86
                dc.w    Offset_0x018EB6-Offset_0x018E86
                dc.w    Offset_0x018FCC-Offset_0x018E86
                dc.w    Offset_0x018FE2-Offset_0x018E86
Offset_0x018E8E:
                addq.b  #$02, $0024(A0)
                move.l  #Break_Boost_Mappings, $0004(A0) ; Offset_0x01916E
                move.w  #$6332, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_0A ; Offset_0x019236
                move.b  #$04, $0001(A0)
                move.b  #$18, $0019(A0)
                move.b  #$04, $0018(A0)
Offset_0x018EB6:
                move.b  ($FFFFB01C).w, $0032(A0)
                move.b  ($FFFFB05C).w, $0033(A0)
                move.w  ($FFFFB012).w, $0034(A0)
                move.w  ($FFFFB052).w, $0036(A0)
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_04        ; Offset_0x019242
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne.s   Offset_0x018EF0
Offset_0x018EEC:                
                bra     J_MarkObjGone_08        ; Offset_0x019224
Offset_0x018EF0:
                cmpi.b  #$18, D0
                bne.s   Offset_0x018F26
                cmpi.b  #$02, $0032(A0)
                beq.s   Offset_0x018F06
                cmpi.b  #$02, $0033(A0)
                bne.s   Offset_0x018EEC
Offset_0x018F06:
                lea     ($FFFFB000).w, A1
                move.b  $0032(A0), D0
                move.w  $0034(A0), D1
                bsr.s   Offset_0x018F42
                lea     ($FFFFB040).w, A1
                move.b  $0033(A0), D0
                move.w  $0036(A0), D1
                bsr.s   Offset_0x018F42
                bra     Offset_0x018F94
Offset_0x018F26:
                move.b  D0, D1
                andi.b  #$08, D1
                beq.s   Offset_0x018F78
                cmpi.b  #$02, $0032(A0)
                bne.s   Offset_0x018EEC
                lea     ($FFFFB000).w, A1
                move.w  $0034(A0), D1
                bsr.s   Offset_0x018F48
                bra.s   Offset_0x018F94
Offset_0x018F42:
                cmpi.b  #$02, D0
                bne.s   Offset_0x018F64
Offset_0x018F48:
                bset    #$02, $0022(A1)
                move.b  #$0E, $0016(A1)
                move.b  #$07, $0017(A1)
                move.b  #$02, $001C(A1)
                move.w  D1, $0012(A1)
Offset_0x018F64:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
                rts
Offset_0x018F78:
                andi.b  #$10, D0
                beq     Offset_0x018EEC
                cmpi.b  #$02, $0033(A0)
                bne     Offset_0x018EEC
                lea     ($FFFFB040).w, A1
                move.w  $0036(A0), D1
                bsr.s   Offset_0x018F48
Offset_0x018F94:
                andi.b  #$E7, $0022(A0)
                bsr     J_S1SingleObjectLoad_02  ; Offset_0x01922A
                bne.s   Offset_0x018FB8
                moveq   #$00, D0
                move.w  #$0009, D1
Offset_0x018FA6:                
                move.l  $00(A0, D0), $00(A1, D0)
                addq.w  #$04, D0
                dbra    D1, Offset_0x018FA6
                move.b  #$06, $0024(A1)
Offset_0x018FB8:
                lea     (Offset_0x01912E), A4
                addq.b  #$01, $001A(A0)
                moveq   #$0F, D1
                move.w  #$0018, D2
                bsr     Offset_0x01923C
Offset_0x018FCC:
                bsr     J_SpeedToPos_06         ; Offset_0x019248
                addi.w  #$0018, $0012(A0)
                tst.b   $0001(A0)
                bpl     J_DeleteObject_12       ; Offset_0x01921E
                bra     J_DisplaySprite_03      ; Offset_0x019218
Offset_0x018FE2:
                lea     ($FFFFB000).w, A1
                lea     $002C(A0), A4
                bsr.s   Offset_0x019004
                lea     ($FFFFB040).w, A1
                lea     $0036(A0), A4
                bsr.s   Offset_0x019004
                move.b  $002C(A0), D0
                add.b   $0036(A0), D0
                beq     Offset_0x019230
                rts
Offset_0x019004:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  Offset_0x019010(PC, D0), D0
                jmp     Offset_0x019010(PC, D0)   
Offset_0x019010:
                dc.w    Offset_0x019014-Offset_0x019010
                dc.w    Offset_0x019092-Offset_0x019010
Offset_0x019014:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addi.w  #$0010, D0
                cmpi.w  #$0020, D0
                bcc     Offset_0x019090
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                cmpi.w  #$0010, D1
                bcc     Offset_0x019090
                addq.b  #$02, (A4)
                move.w  $000C(A0), $000C(A1)
                move.b  #$81, $002A(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0800, $0014(A1)
                move.w  #$0800, $0010(A1)
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
                bset    #$01, $0022(A1)
                bset    #$03, $0022(A1)
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.b  D0, $003D(A1)
                move.w  #$00BE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x019090:
                rts
Offset_0x019092:
                bra.s   Offset_0x0190D8
                subq.b  #$01, $0002(A4)
                bpl.s   Offset_0x0190D8
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                move.w  D5, $000C(A1)
                tst.b   $0001(A4)
                bpl.s   Offset_0x0190BA
                subq.w  #$08, A2
Offset_0x0190BA:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4)
                beq.s   Offset_0x0190FE
                move.w  (A2)+, D4
                add.w   $0008(A0), D4
                move.w  (A2)+, D5
                add.w   $000C(A0), D5
                move.w  #$0800, D2
                bra     Offset_0x016A80
Offset_0x0190D8:
                move.l  $0008(A1), D2
                move.l  $000C(A1), D3
                move.w  $0010(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A1)
                move.l  D3, $000C(A1)
                rts
Offset_0x0190FE:
                cmpi.b  #$04, $0001(A4)
                bcc.s   Offset_0x019116
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.b   $0001(A4), D0
                move.b  #$04, $0001(A4)
Offset_0x019116:
                andi.w  #$07FF, $000C(A1)
                move.b  #$06, (A4)
                clr.b   $002A(A1)
                move.w  #$00BC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6     
Offset_0x01912E:
                dc.w    $FC00, $FC00, $FE00, $FC00, $0200, $FC00, $0400, $FC00
                dc.w    $FC40, $FE00, $FE40, $FE00, $01C0, $FE00, $03C0, $FE00
                dc.w    $FC80, $0200, $FE80, $0200, $0180, $0200, $0380, $0200
                dc.w    $FCC0, $0400, $FEC0, $0400, $0140, $0400, $0340, $0400 
Break_Boost_Mappings: ; Offset_0x01916E:
                dc.w    Offset_0x019172-Break_Boost_Mappings
                dc.w    Offset_0x019194-Break_Boost_Mappings
Offset_0x019172:
                dc.w    $0004
                dc.l    $F0030000, $0000FFF0, $F0030000, $0000FFF8
                dc.l    $F0030000, $00000000, $F0030000, $00000008
Offset_0x019194:
                dc.w    $0010
                dc.l    $F0000000, $0000FFF0, $F0000000, $0000FFF8
                dc.l    $F0000000, $00000000, $F0000000, $00000008
                dc.l    $F8000000, $0000FFF0, $F8000000, $0000FFF8
                dc.l    $F8000000, $00000000, $F8000000, $00000008
                dc.l    $00000000, $0000FFF0, $00000000, $0000FFF8
                dc.l    $00000000, $00000000, $00000000, $00000008
                dc.l    $08000000, $0000FFF0, $08000000, $0000FFF8
                dc.l    $08000000, $00000000, $08000000, $00000008                
;=============================================================================== 
; Object 0x3D - Break to Boost - Oil Ocean 
; [ End ]                         
;=============================================================================== 
                nop                             ; Filler
J_DisplaySprite_03: ; Offset_0x019218:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_12: ; Offset_0x01921E:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_MarkObjGone_08: ; Offset_0x019224:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_S1SingleObjectLoad_02: ; Offset_0x01922A:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
Offset_0x019230:
                jmp     (Offset_0x00D30C)
J_ModifySpriteAttr_2P_0A: ; Offset_0x019236:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
Offset_0x01923C:
                jmp     (Offset_0x00CE50)
J_SolidObject_04: ; Offset_0x019242:
                jmp     SolidObject             ; (Offset_0x00F4A0)
J_SpeedToPos_06: ; Offset_0x019248:
                jmp     SpeedToPos              ; (Offset_0x00D27A)
                dc.w    $0000                   ; Filler                    
                
;=============================================================================== 
; Object 0x48 - Cannon - Oil Ocean 
; [ Begin ]                         
;===============================================================================                  
Obj_0x48_Cannon: ; Offset_0x019250:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01926E(PC, D0), D1
                jsr     Offset_0x01926E(PC, D1)
                move.b  $002C(A0), D0
                add.b   $0036(A0), D0
                beq     J_MarkObjGone_09        ; Offset_0x019652
                bra     J_DisplaySprite_04      ; Offset_0x01964C
Offset_0x01926E:
                dc.w    Offset_0x019282-Offset_0x01926E
                dc.w    Offset_0x0192D2-Offset_0x01926E
Offset_0x019272:
                dc.b    $04
Offset_0x019273:
                dc.b    $00, $06, $07, $07, $00, $05, $07, $05, $00, $04, $07, $06, $00, $07, $07
Offset_0x019282:
                addq.b  #$02, $0024(A0)
                move.l  #Cannon_Mappings, $0004(A0) ; Offset_0x0194CA
                move.w  #$6368, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_0B ; Offset_0x019658
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x0192AA
                addq.w  #$04, D0
Offset_0x0192AA:
                add.w   D0, D0
                move.b  Offset_0x019272(PC, D0), $0001(A0)
                move.b  Offset_0x019273(PC, D0), $003F(A0)
                beq.s   Offset_0x0192C0
                move.b  #$01, $003E(A0)
Offset_0x0192C0:
                move.b  $003F(A0), $001A(A0)
                move.b  #$28, $0019(A0)
                move.b  #$01, $0018(A0)
Offset_0x0192D2:
                lea     ($FFFFB000).w, A1
                lea     $002C(A0), A4
                moveq   #$2C, D2
                bsr.s   Offset_0x0192E8
                lea     ($FFFFB040).w, A1
                lea     $0036(A0), A4
                moveq   #$36, D2
Offset_0x0192E8:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  Offset_0x0192F4(PC, D0), D0
                jmp     Offset_0x0192F4(PC, D0)
Offset_0x0192F4:
                dc.w    Offset_0x0192FC-Offset_0x0192F4
                dc.w    Offset_0x0193B0-Offset_0x0192F4
                dc.w    Offset_0x01945E-Offset_0x0192F4
                dc.w    Offset_0x0194BE-Offset_0x0192F4
Offset_0x0192FC:
                tst.w   ($FFFFFE08).w
                bne     Offset_0x0193AE
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addi.w  #$0010, D0
                cmpi.w  #$0020, D0
                bcc     Offset_0x0193AE
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                addi.w  #$0010, D1
                cmpi.w  #$0020, D1
                bcc     Offset_0x0193AE
                btst    #$03, $0022(A1)
                beq.s   Offset_0x01934A
                moveq   #$00, D0
                move.b  $003D(A1), D0
                lsl.w   #$06, D0
                addi.l  #$FFFFB000, D0
                move.l  D0, A3
                move.b  #$00, $00(A3, D2)
Offset_0x01934A:
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.b  D0, $003D(A1)
                addq.b  #$02, (A4)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  #$81, $002A(A1)
                move.b  #$02, $001C(A1)
                move.w  #$1000, $0014(A1)
                move.w  #$0000, $0010(A1)
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
                bset    #$01, $0022(A1)
                bset    #$03, $0022(A1)
                move.b  $003F(A0), $001A(A0)
                move.w  #$00BE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x0193AE:
                rts
Offset_0x0193B0:
                tst.b   $003E(A0)
                bne.s   Offset_0x0193D8
                cmpi.b  #$07, $001A(A0)
                beq.s   Offset_0x0193F2
                subq.w  #$01, $001E(A0)
                bpl.s   Offset_0x0193D6
                move.w  #$0007, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$07, $001A(A0)
                beq.s   Offset_0x0193F2
Offset_0x0193D6:
                rts
Offset_0x0193D8:
                tst.b   $001A(A0)
                beq.s   Offset_0x0193F2
                subq.w  #$01, $001E(A0)
                bpl.s   Offset_0x0193D6
                move.w  #$0007, $001E(A0)
                subq.b  #$01, $001A(A0)
                beq.s   Offset_0x0193F2
                rts
Offset_0x0193F2:
                addq.b  #$02, (A4)
                move.b  $0028(A0), D0
                addq.b  #$01, D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x019404
                subq.b  #$02, D0
Offset_0x019404:
                andi.w  #$0003, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  Offset_0x01944E(PC, D0), $0010(A1)
                move.w  Offset_0x019450(PC, D0), $0012(A1)
                move.w  #$0003, $001E(A0)
                tst.b   $0028(A0)
                bpl.s   Offset_0x01944C
                move.b  #$00, $002A(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$00, $003C(A1)
                move.b  #$02, $0024(A1)
                move.b  #$06, (A4)
                move.w  #$0007, $003C(A0)
Offset_0x01944C:
                rts     
Offset_0x01944E:
                dc.w    $0000
Offset_0x019450:
                dc.w    $F000, $1000, $0000, $0000, $1000, $F000, $0000
Offset_0x01945E:
                cmpi.b  #$02, $002C(A0)
                beq.s   Offset_0x019498
                cmpi.b  #$02, $0036(A0)
                beq.s   Offset_0x019498
                subq.w  #$01, $001E(A0)
                bpl.s   Offset_0x019498
                move.w  #$0001, $001E(A0)
                tst.b   $003E(A0)
                beq.s   Offset_0x01948E
                cmpi.b  #$07, $001A(A0)
                beq.s   Offset_0x019498
                addq.b  #$01, $001A(A0)
                bra.s   Offset_0x019498
Offset_0x01948E:
                tst.b   $001A(A0)
                beq.s   Offset_0x019498
                subq.b  #$01, $001A(A0)
Offset_0x019498:
                move.l  $0008(A1), D2
                move.l  $000C(A1), D3
                move.w  $0010(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A1)
                move.l  D3, $000C(A1)
                rts
Offset_0x0194BE:
                subq.w  #$01, $003C(A0)
                bpl.s   Offset_0x0194C8
                move.b  #$00, (A4)
Offset_0x0194C8:
                rts                
Cannon_Mappings:
Offset_0x0194CA:
                dc.w    Offset_0x0194DA-Offset_0x0194CA
                dc.w    Offset_0x01951C-Offset_0x0194CA
                dc.w    Offset_0x01954E-Offset_0x0194CA
                dc.w    Offset_0x019570-Offset_0x0194CA
                dc.w    Offset_0x019592-Offset_0x0194CA
                dc.w    Offset_0x0195B4-Offset_0x0194CA
                dc.w    Offset_0x0195D6-Offset_0x0194CA
                dc.w    Offset_0x019608-Offset_0x0194CA
Offset_0x0194DA:
                dc.w    $0008
                dc.l    $D8040000, $0000FFF0, $D8040800, $08000000
                dc.l    $E0040002, $0001FFF0, $E0040802, $08010000
                dc.l    $E80A0011, $0008FFE8, $E80A0811, $08080000
                dc.l    $000A1008, $1004FFE8, $000A1808, $18040000
Offset_0x01951C:
                dc.w    $0006
                dc.l    $E0040000, $0000FFF0, $E0040800, $08000000
                dc.l    $E80A0011, $0008FFE8, $E80A0811, $08080000
                dc.l    $000A1008, $1004FFE8, $000A1808, $18040000
Offset_0x01954E:
                dc.w    $0004
                dc.l    $E80A0011, $0008FFE8, $E80A0811, $08080000
                dc.l    $000A1008, $1004FFE8, $000A1808, $18040000
Offset_0x019570:
                dc.w    $0004
                dc.l    $E80A001A, $000DFFE8, $E80A1823, $18110000
                dc.l    $000A0023, $0011FFE8, $000A181A, $180D0000
Offset_0x019592:
                dc.w    $0004
                dc.l    $E80A1023, $1011FFE8, $E80A081A, $080D0000
                dc.l    $000A101A, $100DFFE8, $000A0823, $08110000
Offset_0x0195B4:
                dc.w    $0004
                dc.l    $E80A0008, $0004FFE8, $E80A102C, $10160000
                dc.l    $000A1008, $1004FFE8, $000A002C, $00160000
Offset_0x0195D6:
                dc.w    $0006
                dc.l    $E80A0008, $0004FFE8, $E80A102C, $10160000
                dc.l    $000A1008, $1004FFE8, $000A002C, $00160000
                dc.l    $F0010006, $00030018, $00011006, $10030018
Offset_0x019608:
                dc.w    $0008
                dc.l    $E80A0008, $0004FFE8, $E80A102C, $10160000
                dc.l    $000A1008, $1004FFE8, $000A002C, $00160000
                dc.l    $F0010004, $00020018, $00011004, $10020018
                dc.l    $F0010006, $00030020, $00011006, $10030020                
;=============================================================================== 
; Object 0x48 - Cannon - Oil Ocean 
; [ End ]                         
;===============================================================================   
                nop                             ; Filler
J_DisplaySprite_04: ; Offset_0x01964C:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_MarkObjGone_09: ; Offset_0x019652:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_ModifySpriteAttr_2P_0B: ; Offset_0x019658:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x22 - Arrow Shooter - Neo Green Hill 
; [ Begin ]                         
;===============================================================================  
Obj_0x22_Arrow_Shooter: ; Offset_0x019660:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01966E(PC, D0), D1
                jmp     Offset_0x01966E(PC, D1)
Offset_0x01966E:
                dc.w    Offset_0x019678-Offset_0x01966E
                dc.w    Offset_0x0196AC-Offset_0x01966E
                dc.w    Offset_0x0196F6-Offset_0x01966E
                dc.w    Offset_0x01973C-Offset_0x01966E
                dc.w    Offset_0x019780-Offset_0x01966E
Offset_0x019678:
                addq.b  #$02, $0024(A0)
                move.l  #Arrow_Shooter_Mappings, $0004(A0) ; Offset_0x0197C6
                move.w  #$0417, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_0C ; Offset_0x019844
                ori.b   #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $001A(A0)
                andi.b  #$0F, $0028(A0)
Offset_0x0196AC:
                cmpi.b  #$02, $001C(A0)
                beq.s   Offset_0x0196D2
                moveq   #$00, D2
                lea     ($FFFFB000).w, A1
                bsr.s   Offset_0x0196E0
                lea     ($FFFFB040).w, A1
                bsr.s   Offset_0x0196E0
                tst.b   D2
                bne.s   Offset_0x0196CE
                tst.b   $001C(A0)
                beq.s   Offset_0x0196CE
                moveq   #$02, D2
Offset_0x0196CE:
                move.b  D2, $001C(A0)
Offset_0x0196D2:
                lea     (Offset_0x0197B0), A1
                bsr     J_AnimateSprite_01      ; Offset_0x01983E
                bra     J_MarkObjGone_0A        ; Offset_0x019838
Offset_0x0196E0:
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   Offset_0x0196EC
                neg.w   D0
Offset_0x0196EC:
                cmpi.w  #$0040, D0
                bcc.s   Offset_0x0196F4
                moveq   #$01, D2
Offset_0x0196F4:
                rts
Offset_0x0196F6:
                bsr     J_SingleObjectLoad_02   ; Offset_0x019832
                bne.s   Offset_0x01972A
                move.b  $0000(A0), $0000(A1)
                addq.b  #$06, $0024(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0022(A0), $0022(A1)
Offset_0x01972A:
                subq.b  #$02, $0024(A0)
                lea     (Offset_0x0197B0), A1
                bsr     J_AnimateSprite_01      ; Offset_0x01983E
                bra     J_MarkObjGone_0A        ; Offset_0x019838
Offset_0x01973C:
                addq.b  #$02, $0024(A0)
                move.b  #$08, $0016(A0)
                move.b  #$10, $0017(A0)
                move.b  #$04, $0018(A0)
                move.b  #$9B, $0020(A0)
                move.b  #$08, $0019(A0)
                move.b  #$00, $001A(A0)
                move.w  #$0400, $0010(A0)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x019776
                neg.w   $0010(A0)
Offset_0x019776:
                move.w  #$00AE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x019780:
                bsr     J_SpeedToPos_07         ; Offset_0x01984A
                btst    #$00, $0022(A0)
                bne.s   Offset_0x0197A0
                moveq   #$FFFFFFF8, D3
                bsr     ObjHitWallLeft          ; Offset_0x013B24
                tst.w   D1
                bmi     Offset_0x01979C
                bra     J_MarkObjGone_0A        ; Offset_0x019838
Offset_0x01979C:
                bra     J_DeleteObject_13       ; Offset_0x01982C
Offset_0x0197A0:
                moveq   #$08, D3
                bsr     ObjHitWallRight         ; Offset_0x01399E
                tst.w   D1
                bmi     Offset_0x01979C
                bra     J_MarkObjGone_0A        ; Offset_0x019838
Offset_0x0197B0:                
                dc.w    Offset_0x0197B6-Offset_0x0197B0
                dc.w    Offset_0x0197B9-Offset_0x0197B0
                dc.w    Offset_0x0197BD-Offset_0x0197B0
Offset_0x0197B6:
                dc.b    $1F, $01, $FF
Offset_0x0197B9:
                dc.b    $03, $01, $02, $FF
Offset_0x0197BD:
                dc.b    $07, $03, $04, $FC, $04, $03, $01, $FD, $00
Arrow_Shooter_Mappings:                
Offset_0x0197C6:
                dc.w    Offset_0x0197D0-Offset_0x0197C6
                dc.w    Offset_0x0197DA-Offset_0x0197C6
                dc.w    Offset_0x0197EC-Offset_0x0197C6
                dc.w    Offset_0x019806-Offset_0x0197C6
                dc.w    Offset_0x019818-Offset_0x0197C6
Offset_0x0197D0:
                dc.w    $0001
                dc.l    $FC0C2000, $2000FFF0
Offset_0x0197DA:
                dc.w    $0002
                dc.l    $F8092004, $2002FFF0, $F801200B, $20050008
Offset_0x0197EC:
                dc.w    $0003
                dc.l    $FC00000A, $0005FFFC, $F8092004, $2002FFF0
                dc.l    $F801200B, $20050008
Offset_0x019806:
                dc.w    $0002
                dc.l    $F8092004, $2002FFF0, $F801200D, $20060008
Offset_0x019818:
                dc.w    $0002
                dc.l    $F8092004, $2002FFF0, $F801200F, $20070008
;=============================================================================== 
; Object 0x22 - Arrow Shooter - Neo Green Hill 
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler
J_DeleteObject_13: ; Offset_0x01982C:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_SingleObjectLoad_02: ; Offset_0x019832:
                jmp     SingleObjectLoad        ; (Offset_0x00E772)
J_MarkObjGone_0A: ; Offset_0x019838:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_AnimateSprite_01: ; Offset_0x01983E:
                jmp     AnimateSprite           ; (Offset_0x00D412)
J_ModifySpriteAttr_2P_0C: ; Offset_0x019844:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SpeedToPos_07: ; Offset_0x01984A:
                jmp     SpeedToPos              ; (Offset_0x00D27A)                             
;=============================================================================== 
; Object 0x23 - Neo Green Hill - Pillar That Drops Lower Half 
; [ Begin ]                         
;=============================================================================== 
Obj_0x23_Pillar: ; Offset_0x019850:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01985E(PC, D0), D1
                jmp     Offset_0x01985E(PC, D1)
Offset_0x01985E:
                dc.w    Offset_0x019862-Offset_0x01985E
                dc.w    Offset_0x0198E6-Offset_0x01985E
Offset_0x019862:
                addq.b  #$02, $0024(A0)
                move.l  #Pillar_Mappings, $0004(A0) ; Offset_0x0199AA
                move.w  #$2000, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_0D ; Offset_0x01A0B0
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$20, $0016(A0)
                move.b  #$04, $0018(A0)
                bsr     J_S1SingleObjectLoad_03  ; Offset_0x01A0AA
                bne.s   Offset_0x0198E6
                move.b  $0000(A0), $0000(A1)
                addq.b  #$02, $0024(A1)
                addq.b  #$02, $0025(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $0008(A0), $0030(A1)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$0030, $000C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$10, $0016(A1)
                move.b  #$04, $0018(A1)
                move.b  #$01, $001A(A1)
Offset_0x0198E6:
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x01990C
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     J_SolidObject_05        ; Offset_0x01A0B6
                bra     J_MarkObjGone_0B        ; Offset_0x01A0A4
Offset_0x01990C:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01991A(PC, D0), D1
                jmp     Offset_0x01991A(PC, D1)                 
Offset_0x01991A:
                dc.w    Offset_0x019950-Offset_0x01991A
                dc.w    Offset_0x019922-Offset_0x01991A
                dc.w    Offset_0x019952-Offset_0x01991A
                dc.w    Offset_0x01997C-Offset_0x01991A
Offset_0x019922:
                tst.w   ($FFFFFE08).w
                bne.s   Offset_0x019950
                lea     ($FFFFB000).w, A1
                bsr.s   Offset_0x019932
                lea     ($FFFFB040).w, A1
Offset_0x019932:
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   Offset_0x01993E
                neg.w   D0
Offset_0x01993E:
                cmpi.w  #$0080, D0
                bcc.s   Offset_0x019950
                move.b  #$04, $0025(A0)
                move.w  #$0008, $0034(A0)
Offset_0x019950:
                rts
Offset_0x019952:
                move.w  $0034(A0), D0
                subq.w  #$01, D0
                bcc.s   Offset_0x019960
                addq.b  #$02, $0025(A0)
                rts
Offset_0x019960:
                move.w  D0, $0034(A0)
                move.b  Offset_0x019974(PC, D0), D0
                ext.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                rts
Offset_0x019974:
                dc.b    $00, $01, $FF, $01, $00, $FF, $00, $01
Offset_0x01997C:
                bsr     J_SpeedToPos_08         ; Offset_0x01A0BC
                addi.w  #$0038, $0012(A0)
                bsr     ObjHitFloor             ; Offset_0x013898
                tst.w   D1
                bpl     Offset_0x0199A8
                add.w   D1, $000C(A0)
                clr.w   $0012(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  #$02, $001A(A0)
                clr.b   $0025(A0)
Offset_0x0199A8:
                rts
Pillar_Mappings:                
Offset_0x0199AA:                
                dc.w    Offset_0x0199B0-Offset_0x0199AA
                dc.w    Offset_0x0199E2-Offset_0x0199AA
                dc.w    Offset_0x0199FC-Offset_0x0199AA
Offset_0x0199B0:
                dc.w    $0006
                dc.l    $E005005D, $002EFFE0, $E005085D, $082E0010
                dc.l    $E00D0061, $0030FFF0, $F00D0069, $0034FFF0
                dc.l    $000D0069, $0034FFF0, $100D0071, $0038FFF0
Offset_0x0199E2:
                dc.w    $0003
                dc.l    $F00D0069, $0034FFF0, $000D0079, $003CFFF0
                dc.l    $10040081, $0040FFF0
Offset_0x0199FC:
                dc.w    $0004
                dc.l    $090D208B, $2045FFF0, $F00D0069, $0034FFF0
                dc.l    $000D0079, $003CFFF0, $10040081, $0040FFF0
;=============================================================================== 
; Object 0x23 - Neo Green Hill - Pillar That Drops Lower Half 
; [ End ]                         
;===============================================================================                 
;=============================================================================== 
; Object 0x2B - Neo Green Hill - Breakable Pillar
; [ Begin ]                         
;===============================================================================                       
Obj_0x2B_Breakable_Pillar: ; Offset_0x019A1E:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x019A2C(PC, D0), D1
                jmp     Offset_0x019A2C(PC, D1)
Offset_0x019A2C:
                dc.w    Offset_0x019A32-Offset_0x019A2C
                dc.w    Offset_0x019A60-Offset_0x019A2C
                dc.w    Offset_0x019B50-Offset_0x019A2C
Offset_0x019A32:
                addq.b  #$02, $0024(A0)
                move.l  #Breakable_Pillar_Mappings, $0004(A0) ; Offset_0x019C30
                move.w  #$2000, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_0D ; Offset_0x01A0B0
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$18, $0016(A0)
                move.b  #$04, $0018(A0)
Offset_0x019A60:
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x019AEA
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     J_SolidObject_05        ; Offset_0x01A0B6
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                bne     Offset_0x019A92
                bra     J_MarkObjGone_0B        ; Offset_0x01A0A4
Offset_0x019A92:
                lea     (Offset_0x019B80), A4
                lea     (Offset_0x019B72), A2
                addq.b  #$07, $001A(A0)
                bsr     Offset_0x019BB8
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                bsr.s   Offset_0x019AB8
                lea     ($FFFFB040).w, A1
                addq.b  #$01, D6
                bra     Offset_0x019B50
Offset_0x019AB8:
                bclr    D6, $0022(A0)
                beq.s   Offset_0x019AE8
                bset    #$02, $0022(A1)
                move.b  #$0E, $0016(A1)
                move.b  #$07, $0017(A1)
                move.b  #$02, $001C(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$02, $0024(A1)
Offset_0x019AE8:
                rts
Offset_0x019AEA:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x019AF8(PC, D0), D1
                jmp     Offset_0x019AF8(PC, D1)
Offset_0x019AF8:
                dc.w    Offset_0x019AFE-Offset_0x019AF8
                dc.w    Offset_0x019B28-Offset_0x019AF8
                dc.w    Offset_0x019B26-Offset_0x019AF8
Offset_0x019AFE:
                tst.w   ($FFFFFE08).w
                bne.s   Offset_0x019B26
                lea     ($FFFFB000).w, A1
                bsr.s   Offset_0x019B0E
                lea     ($FFFFB040).w, A1
Offset_0x019B0E:
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   Offset_0x019B1A
                neg.w   D0
Offset_0x019B1A:
                cmpi.w  #$0040, D0
                bcc.s   Offset_0x019B26
                move.b  #$02, $0025(A0)
Offset_0x019B26:
                rts
Offset_0x019B28:
                subq.w  #$01, $0034(A0)
                bcc.s   Offset_0x019B4E
                move.w  #$0003, $0034(A0)
                subq.w  #$04, $000C(A0)
                addq.b  #$04, $0016(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$06, $001A(A0)
                bne.s   Offset_0x019B4E
                move.b  #$04, $0025(A0)
Offset_0x019B4E:
                rts
Offset_0x019B50:
                tst.b   $003F(A0)
                beq.s   Offset_0x019B5C
                subq.b  #$01, $003F(A0)
                bra.s   Offset_0x019B66
Offset_0x019B5C:
                bsr     J_SpeedToPos_08         ; Offset_0x01A0BC
                addi.w  #$0018, $0012(A0)
Offset_0x019B66:
                tst.b   $0001(A0)
                bpl     J_DeleteObject_14       ; Offset_0x01A09E
                bra     J_DisplaySprite_05      ; Offset_0x01A098
Offset_0x019B72:
                dc.b    $00, $00, $00, $00, $04, $04, $08, $08, $0C, $0C, $10, $10, $14, $14                
Offset_0x019B80:
                dc.w    $FE00, $FE00, $0200, $FE00, $FE40, $FE40, $01C0, $FE40
                dc.w    $FE80, $FE80, $0180, $FE80, $FEC0, $FEC0, $0140, $FEC0
                dc.w    $FF00, $FF00, $0100, $FF00, $FF40, $FF40, $00C0, $FF40
                dc.w    $FF80, $FF80, $0080, $FF80  
Offset_0x019BB8:
                moveq   #$00, D0
                move.b  $001A(A0), D0
                add.w   D0, D0
                move.l  $0004(A0), A3
                adda.w  $00(A3, D0), A3
                move.w  (A3)+, D1
                subq.w  #$01, D1
                bset    #$05, $0001(A0)
                move.b  $0000(A0), D4
                move.b  $0001(A0), D5
                move.l  A0, A1
                bra.s   Offset_0x019BE6
Offset_0x019BDE:                
                bsr     J_S1SingleObjectLoad_03  ; Offset_0x01A0AA
                bne.s   Offset_0x019C26
                addq.w  #$08, A3
Offset_0x019BE6:
                move.b  #$04, $0024(A1)
                move.b  D4, $0000(A1)
                move.l  A3, $0004(A1)
                move.b  D5, $0001(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  $0018(A0), $0018(A1)
                move.b  $0019(A0), $0019(A1)
                move.w  (A4)+, $0010(A1)
                move.w  (A4)+, $0012(A1)
                move.b  (A2)+, $003F(A1)
                dbra    D1, Offset_0x019BDE
Offset_0x019C26:
                move.w  #$00CB, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6  
Breakable_Pillar_Mappings:                                             
Offset_0x019C30:
                dc.w    Offset_0x019C4C-Offset_0x019C30
                dc.w    Offset_0x019C7E-Offset_0x019C30
                dc.w    Offset_0x019CB8-Offset_0x019C30
                dc.w    Offset_0x019CF2-Offset_0x019C30
                dc.w    Offset_0x019D34-Offset_0x019C30
                dc.w    Offset_0x019D76-Offset_0x019C30
                dc.w    Offset_0x019DC0-Offset_0x019C30
                dc.w    Offset_0x019E0A-Offset_0x019C30
                dc.w    Offset_0x019E4C-Offset_0x019C30
                dc.w    Offset_0x019E9E-Offset_0x019C30
                dc.w    Offset_0x019EF0-Offset_0x019C30
                dc.w    Offset_0x019F52-Offset_0x019C30
                dc.w    Offset_0x019FB4-Offset_0x019C30
                dc.w    Offset_0x01A026-Offset_0x019C30
Offset_0x019C4C:
                dc.w    $0006
                dc.l    $100D208B, $2045FFF0, $E805005D, $002EFFE0
                dc.l    $E805085D, $082E0010, $E80D0061, $0030FFF0
                dc.l    $F80D0069, $0034FFF0, $080D0083, $0041FFF0
Offset_0x019C7E:
                dc.w    $0007
                dc.l    $140D208B, $2045FFF0, $E405005D, $002EFFE0
                dc.l    $E405085D, $082E0010, $E40D0061, $0030FFF0
                dc.l    $F40D0069, $0034FFF0, $FC0D0069, $0034FFF0
                dc.l    $0C0D0083, $0041FFF0
Offset_0x019CB8:
                dc.w    $0007
                dc.l    $180D208B, $2045FFF0, $E005005D, $002EFFE0
                dc.l    $E005085D, $082E0010, $E00D0061, $0030FFF0
                dc.l    $F00D0069, $0034FFF0, $000D0069, $0034FFF0
                dc.l    $100D0083, $0041FFF0
Offset_0x019CF2:
                dc.w    $0008
                dc.l    $1C0D208B, $2045FFF0, $DC05005D, $002EFFE0
                dc.l    $DC05085D, $082E0010, $DC0D0061, $0030FFF0
                dc.l    $EC0D0069, $0034FFF0, $FC0D0069, $0034FFF0
                dc.l    $040D0069, $0034FFF0, $140D0083, $0041FFF0
Offset_0x019D34:
                dc.w    $0008
                dc.l    $200D208B, $2045FFF0, $D805005D, $002EFFE0
                dc.l    $D805085D, $082E0010, $D80D0061, $0030FFF0
                dc.l    $E80D0069, $0034FFF0, $F80D0069, $0034FFF0
                dc.l    $080D0069, $0034FFF0, $180D0083, $0041FFF0
Offset_0x019D76:
                dc.w    $0009
                dc.l    $240D208B, $2045FFF0, $D405005D, $002EFFE0
                dc.l    $D405085D, $082E0010, $D40D0061, $0030FFF0
                dc.l    $E40D0069, $0034FFF0, $F40D0069, $0034FFF0
                dc.l    $040D0069, $0034FFF0, $0C0D0069, $0034FFF0
                dc.l    $1C0D0083, $0041FFF0
Offset_0x019DC0:
                dc.w    $0009
                dc.l    $280D208B, $2045FFF0, $D005005D, $002EFFE0
                dc.l    $D005085D, $082E0010, $D00D0061, $0030FFF0
                dc.l    $E00D0069, $0034FFF0, $F00D0069, $0034FFF0
                dc.l    $000D0069, $0034FFF0, $100D0069, $0034FFF0
                dc.l    $200D0083, $0041FFF0
Offset_0x019E0A:
                dc.w    $0008
                dc.l    $E805005D, $002EFFE0, $E805085D, $082E0010
                dc.l    $E8050061, $0030FFF0, $E8050065, $00320000
                dc.l    $F8050069, $0034FFF0, $F805006D, $00360000
                dc.l    $08050083, $0041FFF0, $08050087, $00430000
Offset_0x019E4C:
                dc.w    $000A
                dc.l    $E405005D, $002EFFE0, $E405085D, $082E0010
                dc.l    $E4050061, $0030FFF0, $E4050065, $00320000
                dc.l    $F4050069, $0034FFF0, $F405006D, $00360000
                dc.l    $FC050069, $0034FFF0, $FC05006D, $00360000
                dc.l    $0C050083, $0041FFF0, $0C050087, $00430000
Offset_0x019E9E:
                dc.w    $000A
                dc.l    $E005005D, $002EFFE0, $E005085D, $082E0010
                dc.l    $E0050061, $0030FFF0, $E0050065, $00320000
                dc.l    $F0050069, $0034FFF0, $F005006D, $00360000
                dc.l    $00050069, $0034FFF0, $0005006D, $00360000
                dc.l    $10050083, $0041FFF0, $10050087, $00430000
Offset_0x019EF0:
                dc.w    $000C
                dc.l    $DC05005D, $002EFFE0, $DC05085D, $082E0010
                dc.l    $DC050061, $0030FFF0, $DC050065, $00320000
                dc.l    $EC050069, $0034FFF0, $EC05006D, $00360000
                dc.l    $FC050069, $0034FFF0, $FC05006D, $00360000
                dc.l    $04050069, $0034FFF0, $0405006D, $00360000
                dc.l    $14050083, $0041FFF0, $14050087, $00430000
Offset_0x019F52:
                dc.w    $000C
                dc.l    $D805005D, $002EFFE0, $D805085D, $082E0010
                dc.l    $D8050061, $0030FFF0, $D8050065, $00320000
                dc.l    $E8050069, $0034FFF0, $E805006D, $00360000
                dc.l    $F8050069, $0034FFF0, $F805006D, $00360000
                dc.l    $08050069, $0034FFF0, $0805006D, $00360000
                dc.l    $18050083, $0041FFF0, $18050087, $00430000
Offset_0x019FB4:
                dc.w    $000E
                dc.l    $D405005D, $002EFFE0, $D405085D, $082E0010
                dc.l    $D4050061, $0030FFF0, $D4050065, $00320000
                dc.l    $E4050069, $0034FFF0, $E405006D, $00360000
                dc.l    $F4050069, $0034FFF0, $F405006D, $00360000
                dc.l    $04050069, $0034FFF0, $0405006D, $00360000
                dc.l    $0C050069, $0034FFF0, $0C05006D, $00360000
                dc.l    $1C050083, $0041FFF0, $1C050087, $00430000
Offset_0x01A026:
                dc.w    $000E
                dc.l    $D005005D, $002EFFE0, $D005085D, $082E0010
                dc.l    $D0050061, $0030FFF0, $D0050065, $00320000
                dc.l    $E0050069, $0034FFF0, $E005006D, $00360000
                dc.l    $F0050069, $0034FFF0, $F005006D, $00360000
                dc.l    $00050069, $0034FFF0, $0005006D, $00360000
                dc.l    $10050069, $0034FFF0, $1005006D, $00360000
                dc.l    $20050083, $0041FFF0, $20050087, $00430000                
;=============================================================================== 
; Object 0x2B - Neo Green Hill - Breakable Pillar
; [ End ]                         
;=============================================================================== 
J_DisplaySprite_05: ; Offset_0x01A098:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_14: ; Offset_0x01A09E:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_MarkObjGone_0B: ; Offset_0x01A0A4:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_S1SingleObjectLoad_03: ; Offset_0x01A0AA:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_ModifySpriteAttr_2P_0D: ; Offset_0x01A0B0:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_05: ; Offset_0x01A0B6:
                jmp     SolidObject             ; (Offset_0x00F4A0)
J_SpeedToPos_08: ; Offset_0x01A0BC:
                jmp     SpeedToPos              ; (Offset_0x00D27A)
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x2C - Neo Green Hill - Leaves
; [ Begin ]                         
;===============================================================================                  
Obj_0x2C_Leaves: ; Offset_0x01A0C4:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01A0D2(PC, D0), D1
                jmp     Offset_0x01A0D2(PC, D1)
Offset_0x01A0D2:
                dc.w    Offset_0x01A0DC-Offset_0x01A0D2
                dc.w    Offset_0x01A112-Offset_0x01A0D2
                dc.w    Offset_0x01A234-Offset_0x01A0D2
Offset_0x01A0D8:
                dc.b    $D6, $D4, $D5, $00
Offset_0x01A0DC:
                addq.b  #$02, $0024(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.b  Offset_0x01A0D8(PC, D0), $0020(A0)
                move.l  #Lava_Attributes_Mappings, $0004(A0) ; Offset_0x015612
                move.w  #$8680, $0002(A0)
                move.b  #$84, $0001(A0)
                move.b  #$80, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  $0028(A0), $001A(A0)
Offset_0x01A112:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_15       ; Offset_0x01A2F2
                tst.w   ($FFFFFE08).w
                beq.s   Offset_0x01A130
                bsr     J_DisplaySprite_06      ; Offset_0x01A2EC
Offset_0x01A130:
                move.b  $0021(A0), D0
                beq.s   Offset_0x01A16C
                move.b  ($FFFFFE05).w, D0
                andi.w  #$000F, D0
                bne.s   Offset_0x01A150
                lea     ($FFFFB000).w, A2
                bclr    #$00, $0021(A0)
                beq.s   Offset_0x01A168
                bsr.s   Offset_0x01A16E
                bra.s   Offset_0x01A168
Offset_0x01A150:
                addi.w  #$0008, D0
                andi.w  #$000F, D0
                bne.s   Offset_0x01A168
                lea     ($FFFFB040).w, A2
                bclr    #$01, $0021(A0)
                beq.s   Offset_0x01A168
                bsr.s   Offset_0x01A16E
Offset_0x01A168:
                clr.b   $0021(A0)
Offset_0x01A16C:
                rts
Offset_0x01A16E:
                move.w  $0010(A2), D0
                bpl.s   Offset_0x01A176
                neg.w   D0
Offset_0x01A176:
                cmpi.w  #$0200, D0
                bcc.s   Offset_0x01A18A
                move.w  $0012(A2), D0
                bpl.s   Offset_0x01A184
                neg.w   D0
Offset_0x01A184:
                cmpi.w  #$0200, D0
                bcs.s   Offset_0x01A16C
Offset_0x01A18A:
                lea     (Offset_0x01A224), A3
                moveq   #$03, D6
Offset_0x01A192:                
                bsr     J_SingleObjectLoad_03   ; Offset_0x01A2F8
                bne     Offset_0x01A21E
                move.b  #$2C, $0000(A1)
                move.b  #$04, $0024(A1)
                move.w  $0008(A2), $0008(A1)
                move.w  $000C(A2), $000C(A1)
                bsr     Offset_0x01A2FE
                andi.w  #$000F, D0
                subq.w  #$08, D0
                add.w   D0, $0008(A1)
                swap.w  D0
                andi.w  #$000F, D0
                subq.w  #$08, D0
                add.w   D0, $000C(A1)
                move.w  (A3)+, $0010(A1)
                move.w  (A3)+, $0012(A1)
                btst    #$00, $0022(A2)
                beq.s   Offset_0x01A1E0
                neg.w   $0010(A1)
Offset_0x01A1E0:
                move.w  $0008(A1), $0030(A1)
                move.w  $000C(A1), $0034(A1)
                andi.b  #$01, D0
                move.b  D0, $001A(A1)
                move.l  #Leaves_Mappings, $0004(A1) ; Offset_0x01A2BC
                move.w  #$E410, $0002(A1)
                move.b  #$84, $0001(A1)
                move.b  #$08, $0019(A1)
                move.b  #$01, $0018(A1)
                move.b  #$04, $0038(A1)
                move.b  D1, $0026(A0)
Offset_0x01A21E:
                dbra    D6, Offset_0x01A192
                rts  
Offset_0x01A224:
                dc.w    $FF80, $FF80, $00C0, $FFC0, $FF40, $0040, $0080, $0080
Offset_0x01A234:
                move.b  $0038(A0), D0
                add.b   D0, $0026(A0)
                add.b   ($FFFFFE0F).w, D0
                andi.w  #$001F, D0
                bne.s   Offset_0x01A252
                add.b   D7, D0
                andi.b  #$01, D0
                beq.s   Offset_0x01A252
                neg.b   $0038(A0)
Offset_0x01A252:
                move.l  $0030(A0), D2
                move.l  $0034(A0), D3
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0030(A0)
                move.l  D3, $0034(A0)
                swap.w  D2
                andi.w  #$0003, D3
                addq.w  #$04, D3
                add.w   D3, $0012(A0)
                move.b  $0026(A0), D0
                bsr     Offset_0x01A304
                asr.w   #$06, D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                asr.w   #$06, D1
                add.w   $0034(A0), D1
                move.w  D1, $000C(A0)
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x01A2B0
                move.b  #$0B, $001E(A0)
                bchg    #1, $001A(A0)
Offset_0x01A2B0:
                tst.b   $0001(A0)
                bpl     J_DeleteObject_15       ; Offset_0x01A2F2
                bra     J_DisplaySprite_06      ; Offset_0x01A2EC
Leaves_Mappings:                
Offset_0x01A2BC:
                dc.w    Offset_0x01A2C4-Offset_0x01A2BC
                dc.w    Offset_0x01A2CE-Offset_0x01A2BC
                dc.w    Offset_0x01A2D8-Offset_0x01A2BC
                dc.w    Offset_0x01A2E2-Offset_0x01A2BC
Offset_0x01A2C4:
                dc.w    $0001
                dc.l    $FC000000, $0000FFFC
Offset_0x01A2CE:
                dc.w    $0001
                dc.l    $FC040001, $0000FFF8
Offset_0x01A2D8:
                dc.w    $0001
                dc.l    $FC040003, $0001FFF8
Offset_0x01A2E2:
                dc.w    $0001
                dc.l    $FC040005, $0002FFF8                            
;=============================================================================== 
; Object 0x2C - Neo Green Hill - Leaves
; [ End ]                         
;===============================================================================                   
J_DisplaySprite_06: ; Offset_0x01A2EC:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_15: ; Offset_0x01A2F2:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_SingleObjectLoad_03: ; Offset_0x01A2F8:
                jmp     SingleObjectLoad        ; (Offset_0x00E772)
Offset_0x01A2FE:
                jmp     PseudoRandomNumber      ; Offset_0x0031E4
Offset_0x01A304:
                jmp     CalcSine                ; Offset_0x00320A  
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x40 - Chemical Plant / Neo Green Hill - Springs 
; [ Begin ]                         
;===============================================================================  
Obj_0x40_Diagonal_Springs: ; Offset_0x01A30C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01A31E(PC, D0), D1
                jsr     Offset_0x01A31E(PC, D1)
                bra     J_MarkObjGone_0C        ; Offset_0x01A5B4
Offset_0x01A31E:
                dc.w    Offset_0x01A328-Offset_0x01A31E
                dc.w    Offset_0x01A364-Offset_0x01A31E
Offset_0x01A322:
                dc.w    $FC00, $F600, $F800
Offset_0x01A328:
                addq.b  #$02, $0024(A0)
                move.l  #Diagonal_Spring_Mappings, $0004(A0) ; Offset_0x01A58A
                move.w  #$0440, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_0E ; Offset_0x01A5C0
                ori.b   #$04, $0001(A0)
                move.b  #$1C, $0019(A0)
                move.b  #$04, $0018(A0)
                bset    #$07, $0022(A0)
                move.b  $0028(A0), D0
                andi.w  #$0002, D0
                move.w  Offset_0x01A322(PC, D0), $0030(A0)
Offset_0x01A364:
                lea     (Offset_0x01A57E), A1
                bsr     J_AnimateSprite_02      ; Offset_0x01A5BA
                move.w  #$0027, D1
                move.w  #$0008, D2
                move.w  $0008(A0), D4
                lea     Offset_0x01A52E(PC), A2
                tst.b   $001A(A0)
                beq.s   Offset_0x01A388
                lea     Offset_0x01A556(PC), A2
Offset_0x01A388:
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Offset_0x01A5C6
                btst    #$03, $0022(A0)
                beq.s   Offset_0x01A3A0
                bsr.s   Offset_0x01A3BA
Offset_0x01A3A0:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     Offset_0x01A5C6
                btst    #$04, $0022(A0)
                beq.s   Offset_0x01A3B8
                bsr.s   Offset_0x01A3BA
Offset_0x01A3B8:
                rts
Offset_0x01A3BA:
                btst    #$00, $0022(A0)
                bne.s   Offset_0x01A3D2
                move.w  $0008(A0), D0
                subi.w  #$0010, D0
                cmp.w   $0008(A1), D0
                bcs.s   Offset_0x01A3E2
                rts
Offset_0x01A3D2:
                move.w  $0008(A0), D0
                addi.w  #$0010, D0
                cmp.w   $0008(A1), D0
                bcc.s   Offset_0x01A3E2
                rts
Offset_0x01A3E2:
                cmpi.b  #$01, $001C(A0)
                beq.s   Offset_0x01A3F2
                move.w  #$0100, $001C(A0)
                rts
Offset_0x01A3F2:
                tst.b   $001A(A0)
                beq.s   Offset_0x01A3FA
                rts
Offset_0x01A3FA:
                move.w  $0008(A0), D0
                subi.w  #$001C, D0
                sub.w   $0008(A1), D0
                neg.w   D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01A416
                not.w  D0
                addi.w  #$0027, D0
Offset_0x01A416:
                tst.w   D0
                bpl.s   Offset_0x01A41C
                moveq   #$00, D0
Offset_0x01A41C:
                lea     (Offset_0x01A4E6), A3
                move.b  $00(A3, D0), D0
                move.w  #$FC00, $0012(A1)
                sub.b   D0, $0012(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   Offset_0x01A446
                bclr    #$00, $0022(A1)
                neg.b   D0
Offset_0x01A446:
                move.w  $0010(A1), D1
                bpl.s   Offset_0x01A44E
                neg.w   D1
Offset_0x01A44E:
                cmpi.w  #$0400, D1
                bcs.s   Offset_0x01A458
                sub.b   D0, $0010(A1)
Offset_0x01A458:
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                btst    #$00, D0
                beq.s   Offset_0x01A4B4
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0
                bne.s   Offset_0x01A4A4
                move.b  #$03, $002C(A1)
Offset_0x01A4A4:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x01A4B4
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x01A4B4:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x01A4CA
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x01A4CA:
                cmpi.b  #$08, D0
                bne.s   Offset_0x01A4DC
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x01A4DC:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6   
Offset_0x01A4E6:
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02, $02, $02, $02
                dc.b    $03, $03, $03, $03, $03, $03, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00   
Offset_0x01A52E:
                dc.b    $08, $08, $08, $08, $08, $08, $08, $09, $0A, $0B, $0C, $0D, $0E, $0F, $10, $10
                dc.b    $11, $12, $13, $14, $14, $15, $15, $16, $17, $18, $18, $18, $18, $18, $18, $18
                dc.b    $18, $18, $18, $18, $18, $18, $18, $18      
Offset_0x01A556:
                dc.b    $08, $08, $08, $08, $08, $08, $08, $09, $0A, $0B, $0C, $0C, $0C, $0C, $0D, $0D
                dc.b    $0D, $0D, $0D, $0D, $0E, $0E, $0F, $0F, $10, $10, $10, $10, $0F, $0F, $0E, $0E
                dc.b    $0D, $0D, $0D, $0D, $0D, $0D, $0D, $0D                
Offset_0x01A57E:
                dc.w    Offset_0x01A582-Offset_0x01A57E
                dc.w    Offset_0x01A585-Offset_0x01A57E
Offset_0x01A582:
                dc.b    $0F, $00, $FF
Offset_0x01A585:
                dc.b    $03, $01, $00, $FD, $00 
Diagonal_Spring_Mappings:                                                         
Offset_0x01A58A:
                dc.w    Offset_0x01A58E-Offset_0x01A58A
                dc.w    Offset_0x01A5A0-Offset_0x01A58A   
Offset_0x01A58E:
                dc.w    $0002
                dc.l    $E8090000, $0000FFE4, $E80D0006, $0003FFFC
Offset_0x01A5A0:
                dc.w    $0002
                dc.l    $E809000E, $0007FFE4, $E80D0014, $000AFFFC                
;=============================================================================== 
; Object 0x40 - Chemical Plant / Neo Green Hill - Springs 
; [ End ]                         
;===============================================================================  
                nop
J_MarkObjGone_0C: ; Offset_0x01A5B4:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_AnimateSprite_02: ; Offset_0x01A5BA:
                jmp     AnimateSprite           ; (Offset_0x00D412)
J_ModifySpriteAttr_2P_0E: ; Offset_0x01A5C0:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
Offset_0x01A5C6:
                jmp     (Offset_0x00F562)
                
;=============================================================================== 
; Object 0x42 - Metropolis - Steam Vent 
; [ Begin ]                         
;===============================================================================                  
Obj_0x42_Steam_Vent: ; Offset_0x01A5CC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01A5DA(PC, D0), D1
                jmp     Offset_0x01A5DA(PC, D1)
Offset_0x01A5DA:
                dc.w    Offset_0x01A5E0-Offset_0x01A5DA
                dc.w    Offset_0x01A620-Offset_0x01A5DA
                dc.w    Offset_0x01A7CC-Offset_0x01A5DA
Offset_0x01A5E0:
                addq.b  #$02, $0024(A0)
                move.l  #Steam_Vent_Mappings, $0004(A0) ; Offset_0x01A7FE
                move.w  #$6000, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                bsr     J_ModifySpriteAttr_2P_0F ; Offset_0x01A8A8
                move.b  #$07, $001A(A0)
                move.w  $000C(A0), $0034(A0)
                move.w  #$0010, $0036(A0)
                addi.w  #$0010, $000C(A0)
Offset_0x01A620:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Offset_0x01A8AE
                btst    #$03, $0022(A0)
                beq.s   Offset_0x01A64A
                bsr     Offset_0x01A726
Offset_0x01A64A:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     Offset_0x01A8AE
                btst    #$04, $0022(A0)
                beq.s   Offset_0x01A664
                bsr     Offset_0x01A726
Offset_0x01A664:
                move.b  $0025(A0), D0
                bne.s   Offset_0x01A67C
                subq.w  #$01, $0032(A0)
                bpl.s   Offset_0x01A6E0
                move.w  #$007F, $0032(A0)
                addq.b  #$02, $0025(A0)
                bra.s   Offset_0x01A6E0
Offset_0x01A67C:
                subq.b  #$02, D0
                bne.s   Offset_0x01A6AE
                subq.w  #$08, $0036(A0)
                bne.s   Offset_0x01A6A0
                addq.b  #$02, $0025(A0)
                bsr.s   Offset_0x01A6E4
                addi.w  #$0028, $0008(A1)
                bsr.s   Offset_0x01A6E4
                subi.w  #$0028, $0008(A1)
                bset    #$00, $0001(A1)
Offset_0x01A6A0:
                move.w  $0036(A0), D0
                add.w   $0034(A0), D0
                move.w  D0, $000C(A0)
                bra.s   Offset_0x01A6E0
Offset_0x01A6AE:
                subq.b  #$02, D0
                bne.s   Offset_0x01A6C4
                subq.w  #$01, $0032(A0)
                bpl.s   Offset_0x01A6E0
                move.w  #$007F, $0032(A0)
                addq.b  #$02, $0025(A0)
                bra.s   Offset_0x01A6E0
Offset_0x01A6C4:
                addq.w  #$08, $0036(A0)
                cmpi.w  #$0010, $0036(A0)
                bne.s   Offset_0x01A6D4
                clr.b   $0025(A0)
Offset_0x01A6D4:
                move.w  $0036(A0), D0
                add.w   $0034(A0), D0
                move.w  D0, $000C(A0)
Offset_0x01A6E0:
                bra     J_MarkObjGone_0D        ; Offset_0x01A8A2
Offset_0x01A6E4:
                bsr     J_SingleObjectLoad_04   ; Offset_0x01A89C
                bne.s   Offset_0x01A724
                move.b  $0000(A0), $0000(A1)
                addq.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $0034(A0), $000C(A1)
                move.b  #$07, $001E(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  #$2405, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$18, $0019(A1)
                move.b  #$04, $0018(A1)
Offset_0x01A724:
                rts
Offset_0x01A726:
                cmpi.b  #$02, $0025(A0)
                beq.s   Offset_0x01A730
                rts
Offset_0x01A730:
                move.w  #$FA00, $0012(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                bpl.s   Offset_0x01A75A
                move.w  #$0000, $0010(A1)
Offset_0x01A75A:
                btst    #$00, D0
                beq.s   Offset_0x01A79A
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                btst    #$01, D0
                bne.s   Offset_0x01A78A
                move.b  #$01, $002C(A1)
Offset_0x01A78A:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x01A79A
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x01A79A:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x01A7B0
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x01A7B0:
                cmpi.b  #$08, D0
                bne.s   Offset_0x01A7C2
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x01A7C2:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x01A7CC:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x01A7FA
                move.b  #$07, $001E(A0)
                move.b  #$00, $0020(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$02, $001A(A0)
                bne.s   Offset_0x01A7F0
                move.b  #$8B, $0020(A0)
Offset_0x01A7F0:
                cmpi.b  #$07, $001A(A0)
                beq     J_DeleteObject_16       ; Offset_0x01A896
Offset_0x01A7FA:
                bra     J_DisplaySprite_07      ; Offset_0x01A890
Steam_Vent_Mappings:                
Offset_0x01A7FE:
                dc.w    Offset_0x01A80E-Offset_0x01A7FE
                dc.w    Offset_0x01A818-Offset_0x01A7FE
                dc.w    Offset_0x01A822-Offset_0x01A7FE
                dc.w    Offset_0x01A82C-Offset_0x01A7FE
                dc.w    Offset_0x01A83E-Offset_0x01A7FE
                dc.w    Offset_0x01A850-Offset_0x01A7FE
                dc.w    Offset_0x01A86A-Offset_0x01A7FE
                dc.w    Offset_0x01A87C-Offset_0x01A7FE
Offset_0x01A80E:
                dc.w    $0001
                dc.l    $FF000000, $0000FFE8
Offset_0x01A818:
                dc.w    $0001
                dc.l    $FF040001, $0000FFE8
Offset_0x01A822:
                dc.w    $0001
                dc.l    $FC050003, $0001FFEC
Offset_0x01A82C:
                dc.w    $0002
                dc.l    $FC050007, $0003FFF8, $FC050003, $0001FFF0
Offset_0x01A83E:
                dc.w    $0002
                dc.l    $FC051007, $10030000, $FC01100B, $1005FFF8
Offset_0x01A850:
                dc.w    $0003
                dc.l    $FC01000D, $0006000C, $FC01000B, $00050004
                dc.l    $FC01180D, $1806FFFC
Offset_0x01A86A:
                dc.w    $0002
                dc.l    $FC01000D, $00060010, $FC01180D, $18060008
Offset_0x01A87C:
                dc.w    $0002
                dc.l    $F0070015, $000AFFF0, $F007001D, $000E0000                    
;=============================================================================== 
; Object 0x42 - Metropolis - Steam Vent 
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler
J_DisplaySprite_07: ; Offset_0x01A890:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_16: ; Offset_0x01A896:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_SingleObjectLoad_04: ; Offset_0x01A89C:
                jmp     SingleObjectLoad        ; (Offset_0x00E772)
J_MarkObjGone_0D: ; Offset_0x01A8A2:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_ModifySpriteAttr_2P_0F: ; Offset_0x01A8A8:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
Offset_0x01A8AE:
                jmp     (Offset_0x00F510)   
;=============================================================================== 
; Object 0x64 - Metropolis - Pistons 
; [ Begin ]                         
;===============================================================================                  
Obj_0x64_Pistons: ; Offset_0x01A8B4:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01A8C2(PC, D0), D1
                jmp     Offset_0x01A8C2(PC, D1)
Offset_0x01A8C2:
                dc.w    Offset_0x01A8CE-Offset_0x01A8C2
                dc.w    Offset_0x01A936-Offset_0x01A8C2
Offset_0x01A8C6:
                dc.b    $40, $0C, $40, $01, $10, $20, $40, $01
Offset_0x01A8CE:
                addq.b  #$02, $0024(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     Offset_0x01A8C6(PC, D0), A3
                move.b  (A3)+, $0019(A0)
                move.b  (A3)+, $002E(A0)
                lsr.w   #$02, D0
                move.b  D0, $001A(A0)
                bne.s   Offset_0x01A8FE
                move.b  #$6C, $0016(A0)
                bset    #$04, $0001(A0)
Offset_0x01A8FE:
                move.l  #Piston_Mappings, $0004(A0) ; Offset_0x01A9F0
                move.w  #$2000, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_10 ; Offset_0x01AA68
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0030(A0)
                moveq   #$00, D0
                move.b  (A3)+, D0
                move.w  D0, $003C(A0)
                andi.b  #$0F, $0028(A0)
Offset_0x01A936:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.w  Offset_0x01A988(PC, D0), D1
                jsr     Offset_0x01A988(PC, D1)
                move.w  (A7)+, D4
                tst.b   $0001(A0)
                bpl.s   Offset_0x01A96A
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $002E(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_06        ; Offset_0x01AA6E
Offset_0x01A96A:
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_17       ; Offset_0x01A982
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_17: ; Offset_0x01A982:
                jmp     DeleteObject            ; (Offset_0x00D3B4)   
Offset_0x01A988:                              
                dc.w    Offset_0x01A98C-Offset_0x01A988
                dc.w    Offset_0x01A98E-Offset_0x01A988
Offset_0x01A98C:
                rts
Offset_0x01A98E:
                tst.b   $0038(A0)
                bne.s   Offset_0x01A9B2
                tst.w   $003A(A0)
                beq.s   Offset_0x01A9A0
                subq.w  #$08, $003A(A0)
                bra.s   Offset_0x01A9D2
Offset_0x01A9A0:
                subq.w  #$01, $0036(A0)
                bpl.s   Offset_0x01A9D2
                move.w  #$003C, $0036(A0)
                move.b  #$01, $0038(A0)
Offset_0x01A9B2:
                move.w  $003A(A0), D0
                cmp.w   $003C(A0), D0
                beq.s   Offset_0x01A9C2
                addq.w  #$08, $003A(A0)
                bra.s   Offset_0x01A9D2
Offset_0x01A9C2:
                subq.w  #$01, $0036(A0)
                bpl.s   Offset_0x01A9D2
                move.w  #$003C, $0036(A0)
                clr.b   $0038(A0)
Offset_0x01A9D2:
                move.w  $003A(A0), D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01A9E4
                neg.w   D0
                addi.w  #$0040, D0
Offset_0x01A9E4:
                move.w  $0030(A0), D1
                add.w   D0, D1
                move.w  D1, $000C(A0)
                rts                   
Piston_Mappings:
Offset_0x01A9F0:
                dc.w    Offset_0x01A9F4-Offset_0x01A9F0
                dc.w    Offset_0x01AA46-Offset_0x01A9F0
Offset_0x01A9F4:
                dc.w    $000A
                dc.l    $F40E0001, $0000FFC0, $F40E0801, $0800FFE0
                dc.l    $F40E0001, $00000000, $F40E0801, $08000020
                dc.l    $0C07000D, $0006FFD8, $2C07000D, $0006FFD8
                dc.l    $4C07000D, $0006FFD8, $0C07000D, $00060018
                dc.l    $2C07000D, $00060018, $4C07000D, $00060018
Offset_0x01AA46:
                dc.w    $0004
                dc.l    $E0070057, $002BFFF0, $E0070857, $082B0000
                dc.l    $00071057, $102BFFF0, $00071857, $182B0000  
;=============================================================================== 
; Object 0x64 - Metropolis - Pistons 
; [ End ]                         
;===============================================================================                  
J_ModifySpriteAttr_2P_10: ; Offset_0x01AA68:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_06: ; Offset_0x01AA6E:
                jmp     SolidObject             ; (Offset_0x00F4A0)             
;=============================================================================== 
; Object 0x65 - Metropolis - Platform / Platform Over Gears
; [ Begin ]                         
;===============================================================================                 
Obj_0x65_Platform: ; Offset_0x01AA74:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01AA82(PC, D0), D1
                jmp     Offset_0x01AA82(PC, D1)
Offset_0x01AA82:
                dc.w    Offset_0x01AA9A-Offset_0x01AA82
                dc.w    Offset_0x01ABB0-Offset_0x01AA82
                dc.w    Offset_0x01AE08-Offset_0x01AA82
                dc.w    Offset_0x01AE26-Offset_0x01AA82
Offset_0x01AA8A:
                dc.b    $40, $0C, $80, $01, $20, $0C, $40, $03, $10, $10, $20, $00, $40, $0C, $80, $07
Offset_0x01AA9A:
                addq.b  #$02, $0024(A0)
                move.l  #Mz_Platform_Mappings, $0004(A0) ; Offset_0x01AE2C
                move.w  #$6000, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_11 ; Offset_0x01AEB0
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     Offset_0x01AA8A(PC, D0), A3
                move.b  (A3)+, $0019(A0)
                move.b  (A3)+, $0016(A0)
                lsr.w   #$02, D0
                move.b  D0, $001A(A0)
                cmpi.b  #$01, D0
                bne.s   Offset_0x01AAE6
                bset    #$07, $0022(A0)
Offset_0x01AAE6:
                cmpi.b  #$02, D0
                bne.s   Offset_0x01AB02
                addq.b  #$04, $0024(A0)
                move.l  #Obj_0x65_Mappings_1, $0004(A0) ; Offset_0x01AE68
                move.w  #$655F, $0002(A0)
                bra     Offset_0x01AE26
Offset_0x01AB02:
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0030(A0)
                moveq   #$00, D0
                move.b  (A3)+, D0
                move.w  D0, $003C(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                bpl     Offset_0x01ABAA
                andi.b  #$0F, D0
                move.b  D0, $003E(A0)
                move.b  (A3), $0028(A0)
                cmpi.b  #$07, (A3)
                bne.s   Offset_0x01AB38
                move.w  $003C(A0), $003A(A0)
Offset_0x01AB38:
                bsr     J_S1SingleObjectLoad_04  ; Offset_0x01AEAA
                bne.s   Offset_0x01AB98
                move.b  $0000(A0), $0000(A1)
                addq.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$FFB4, $0008(A1)
                addi.w  #$0014, $000C(A1)
                btst    #$00, $0022(A0)
                bne.s   Offset_0x01AB74
                subi.w  #$FFE8, $0008(A1)
                bset    #$00, $0001(A1)
Offset_0x01AB74:
                move.l  #Obj_0x65_Mappings_1, $0004(A1) ; Offset_0x01AE68
                move.w  #$655F, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$04, $0018(A1)
                move.l  A0, $003C(A1)
Offset_0x01AB98:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x01ABAA
                bclr    #$07, $02(A2, D0)
Offset_0x01ABAA:
                andi.b  #$0F, $0028(A0)
Offset_0x01ABB0:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.w  Offset_0x01AC0E(PC, D0), D1
                jsr     Offset_0x01AC0E(PC, D1)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_07        ; Offset_0x01AEB6
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x01ABF6
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x01ABF6:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_18       ; Offset_0x01AC08
                bclr    #$07, $02(A2, D0)
J_DeleteObject_18: ; Offset_0x01AC08:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x01AC0E:
                dc.w    Offset_0x01AC1E-Offset_0x01AC0E
                dc.w    Offset_0x01AC34-Offset_0x01AC0E
                dc.w    Offset_0x01ACC0-Offset_0x01AC0E
                dc.w    Offset_0x01AD1C-Offset_0x01AC0E
                dc.w    Offset_0x01ADC0-Offset_0x01AC0E
                dc.w    Offset_0x01ADCE-Offset_0x01AC0E
                dc.w    Offset_0x01AC20-Offset_0x01AC0E
                dc.w    Offset_0x01ACA0-Offset_0x01AC0E
Offset_0x01AC1E:
                rts
Offset_0x01AC20:
                tst.b   $0038(A0)
                bne.s   Offset_0x01AC32
                subq.w  #$01, $0036(A0)
                bne.s   Offset_0x01AC60
                move.b  #$01, $0038(A0)
Offset_0x01AC32:
                bra.s   Offset_0x01AC52
Offset_0x01AC34:
                tst.b   $0038(A0)
                bne.s   Offset_0x01AC52
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  $003E(A0), D0
                btst    #$00, $00(A2, D0)
                beq.s   Offset_0x01AC60
                move.b  #$01, $0038(A0)
Offset_0x01AC52:
                move.w  $003C(A0), D0
                cmp.w   $003A(A0), D0
                beq.s   Offset_0x01AC7E
                addq.w  #$02, $003A(A0)
Offset_0x01AC60:
                move.w  $003A(A0), D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01AC72
                neg.w   D0
                addi.w  #$0080, D0
Offset_0x01AC72:
                move.w  $0034(A0), D1
                sub.w   D0, D1
                move.w  D1, $0008(A0)
                rts
Offset_0x01AC7E:
                addq.b  #$01, $0028(A0)
                move.w  #$00B4, $0036(A0)
                clr.b   $0038(A0)
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x01AC60
                bset    #$00, $02(A2, D0)
                bra.s   Offset_0x01AC60
Offset_0x01ACA0:
                tst.b   $0038(A0)
                bne.s   Offset_0x01ACBE
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  $003E(A0), D0
                btst    #$00, $00(A2, D0)
                beq.s   Offset_0x01ACDC
                move.b  #$01, $0038(A0)
Offset_0x01ACBE:
                bra.s   Offset_0x01ACD2
Offset_0x01ACC0:
                tst.b   $0038(A0)
                bne.s   Offset_0x01ACD2
                subq.w  #$01, $0036(A0)
                bne.s   Offset_0x01ACDC
                move.b  #$01, $0038(A0)
Offset_0x01ACD2:
                tst.w   $003A(A0)
                beq.s   Offset_0x01ACFA
                subq.w  #$02, $003A(A0)
Offset_0x01ACDC:
                move.w  $003A(A0), D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01ACEE
                neg.w   D0
                addi.w  #$0080, D0
Offset_0x01ACEE:
                move.w  $0034(A0), D1
                sub.w   D0, D1
                move.w  D1, $0008(A0)
                rts
Offset_0x01ACFA:
                subq.b  #$01, $0028(A0)
                move.w  #$00B4, $0036(A0)
                clr.b   $0038(A0)
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x01ACDC
                bclr    #$00, $02(A2, D0)
                bra.s   Offset_0x01ACDC
Offset_0x01AD1C:
                move.w  $0034(A0), D4
                move.w  D4, D5
                btst    #$00, $0022(A0)
                bne.s   Offset_0x01AD34
                subi.w  #$0020, D4
                addi.w  #$0060, D5
                bra.s   Offset_0x01AD3C
Offset_0x01AD34:
                subi.w  #$00A0, D4
                subi.w  #$0020, D5
Offset_0x01AD3C:
                move.w  $000C(A0), D2
                move.w  D2, D3
                subi.w  #$0010, D2
                addi.w  #$0040, D3
                moveq   #$00, D1
                move.w  ($FFFFB008).w, D0
                cmp.w   D4, D0
                bcs.s   Offset_0x01AD66
                cmp.w   D5, D0
                bcc.s   Offset_0x01AD66
                move.w  ($FFFFB00C).w, D0
                cmp.w   D2, D0
                bcs.s   Offset_0x01AD66
                cmp.w   D3, D0
                bcc.s   Offset_0x01AD66
                moveq   #$01, D1
Offset_0x01AD66:
                move.w  ($FFFFB048).w, D0
                cmp.w   D4, D0
                bcs.s   Offset_0x01AD80
                cmp.w   D5, D0
                bcc.s   Offset_0x01AD80
                move.w  ($FFFFB04C).w, D0
                cmp.w   D2, D0
                bcs.s   Offset_0x01AD80
                cmp.w   D3, D0
                bcc.s   Offset_0x01AD80
                moveq   #$01, D1
Offset_0x01AD80:
                tst.b   D1
                beq.s   Offset_0x01AD96
                move.w  $003C(A0), D0
                cmp.w   $003A(A0), D0
                beq.s   Offset_0x01ADBE
                addi.w  #$0010, $003A(A0)
                bra.s   Offset_0x01ADA2
Offset_0x01AD96:
                tst.w   $003A(A0)
                beq.s   Offset_0x01ADA2
                subi.w  #$0010, $003A(A0)
Offset_0x01ADA2:
                move.w  $003A(A0), D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01ADB4
                neg.w   D0
                addi.w  #$0040, D0
Offset_0x01ADB4:
                move.w  $0034(A0), D1
                sub.w   D0, D1
                move.w  D1, $0008(A0)
Offset_0x01ADBE:
                rts
Offset_0x01ADC0:
                btst    #$03, $0022(A0)
                beq.s   Offset_0x01ADCC
                addq.b  #$01, $0028(A0)
Offset_0x01ADCC:
                rts
Offset_0x01ADCE:
                tst.b   $0038(A0)
                bne.s   Offset_0x01ADE8
                addq.w  #$02, $0008(A0)
                cmpi.w  #$1B40, $0008(A0)
                bne.s   Offset_0x01ADFA
                move.b  #$01, $0038(A0)
                bra.s   Offset_0x01ADFA
Offset_0x01ADE8:
                subq.w  #$02, $0008(A0)
                cmpi.w  #$1800, $0008(A0)
                bne.s   Offset_0x01ADFA
                move.b  #$00, $0038(A0)
Offset_0x01ADFA:
                move.w  $0008(A0), $0034(A0)
                move.w  $0008(A0), ($FFFFF7B0).w
                rts
Offset_0x01AE08:
                move.l  $003C(A0), A1
                move.w  $003A(A1), D0
Offset_0x01AE10:                
                andi.w  #$0007, D0
                move.b  Offset_0x01AE1E(PC, D0), $001A(A0)
                bra     J_MarkObjGone_0E        ; Offset_0x01AEA4    
Offset_0x01AE1E:
                dc.b    $00, $00, $02, $02, $02, $01, $01, $01
Offset_0x01AE26:
                move.w  ($FFFFF7B0).w, D0
                bra.s   Offset_0x01AE10  
Mz_Platform_Mappings:                
Offset_0x01AE2C:
                dc.w    Offset_0x01AE34-Offset_0x01AE2C
                dc.w    Offset_0x01AE56-Offset_0x01AE2C
                dc.w    Offset_0x01AE34-Offset_0x01AE2C
                dc.w    Offset_0x01AE34-Offset_0x01AE2C
Offset_0x01AE34:
                dc.w    $0004
                dc.l    $F40E004B, $0025FFC0, $F40E004B, $0025FFE0
                dc.l    $F40E004B, $00250000, $F40E004B, $00250020
Offset_0x01AE56:
                dc.w    $0002
                dc.l    $F40E0039, $001CFFE0, $F40E0839, $081C0000  
Obj_0x65_Mappings_1:                
Offset_0x01AE68:
                dc.w    Offset_0x01AE6E-Offset_0x01AE68
                dc.w    Offset_0x01AE80-Offset_0x01AE68
                dc.w    Offset_0x01AE92-Offset_0x01AE68
Offset_0x01AE6E:
                dc.w    $0002
                dc.l    $F4060000, $0000FFF0, $F4060800, $08000000
Offset_0x01AE80:
                dc.w    $0002
                dc.l    $F4060006, $0003FFF0, $F4061806, $18030000
Offset_0x01AE92:
                dc.w    $0002
                dc.l    $F4061006, $1003FFF0, $F4060806, $08030000                                                    
;=============================================================================== 
; Object 0x65 - Metropolis - Platform Over Gears
; [ End ]                         
;===============================================================================                  
J_MarkObjGone_0E: ; Offset_0x01AEA4:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_S1SingleObjectLoad_04: ; Offset_0x01AEAA:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_ModifySpriteAttr_2P_11: ; Offset_0x01AEB0:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_07: ; Offset_0x01AEB6:
                jmp     SolidObject             ; (Offset_0x00F4A0)     
;=============================================================================== 
; Object 0x66 - Metropolis - Springs on Walls
; [ Begin ]                         
;===============================================================================                   
Obj_0x66_Spring_Wall: ; Offset_0x01AEBC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01AECA(PC, D0), D1
                jmp     Offset_0x01AECA(PC, D1)
Offset_0x01AECA:
                dc.w    Offset_0x01AECE-Offset_0x01AECA
                dc.w    Offset_0x01AF12-Offset_0x01AECA
Offset_0x01AECE:
                addq.b  #$02, $0024(A0)
                move.l  #Spring_Wall_Mappings, $0004(A0) ; Offset_0x01B084
                move.w  #$8680, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_12 ; Offset_0x01B0B8
                ori.b   #$04, $0001(A0)
                move.b  #$08, $0019(A0)
                move.b  #$04, $0018(A0)
                move.b  #$40, $0016(A0)
                move.b  $0028(A0), D0
                lsr.b   #$04, D0
                andi.b  #$07, D0
                move.b  D0, $001A(A0)
                beq.s   Offset_0x01AF12
                move.b  #$80, $0016(A0)
Offset_0x01AF12:
                move.w  #$0013, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Offset_0x01B0BE
                cmpi.b  #$01, D4
                bne.s   Offset_0x01AF5A
                btst    #$01, $0022(A1)
                beq.s   Offset_0x01AF5A
                move.b  $0022(A0), D1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcs.s   Offset_0x01AF52
                eori.b  #$01, D1
Offset_0x01AF52:
                andi.b  #$01, D1
                bne.s   Offset_0x01AF5A
                bsr.s   Offset_0x01AFB0
Offset_0x01AF5A:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     Offset_0x01B0BE
                cmpi.b  #$01, D4
                bne.s   Offset_0x01AF90
                btst    #$01, $0022(A1)
                beq.s   Offset_0x01AF90
                move.b  $0022(A0), D1
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcs.s   Offset_0x01AF88
                eori.b  #$01, D1
Offset_0x01AF88:
                andi.b  #$01, D1
                bne.s   Offset_0x01AF90
                bsr.s   Offset_0x01AFB0
Offset_0x01AF90:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_19       ; Offset_0x01B0B2
                tst.w   ($FFFFFE08).w
                beq.s   Offset_0x01AFAE
                bsr     J_DisplaySprite_08      ; Offset_0x01B0AC
Offset_0x01AFAE:
                rts
Offset_0x01AFB0:
                move.w  $0030(A0), $0010(A1)
                move.w  #$F800, $0010(A1)
                move.w  #$F800, $0012(A1)
                bset    #$00, $0022(A1)
                btst    #$00, $0022(A0)
                bne.s   Offset_0x01AFDA
                bclr    #$00, $0022(A1)
                neg.w   $0010(A1)
Offset_0x01AFDA:
                move.w  #$000F, $002E(A1)
                move.w  $0010(A1), $0014(A1)
                btst    #$02, $0022(A1)
                bne.s   Offset_0x01AFF4
                move.b  #$00, $001C(A1)
Offset_0x01AFF4:
                move.b  $0028(A0), D0
                bpl.s   Offset_0x01B000
                move.w  #$0000, $0012(A1)
Offset_0x01B000:
                btst    #$00, D0
                beq.s   Offset_0x01B040
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$01, $002C(A1)
                move.b  #$08, $002D(A1)
                btst    #$01, D0
                bne.s   Offset_0x01B030
                move.b  #$03, $002C(A1)
Offset_0x01B030:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x01B040
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x01B040:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x01B056
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x01B056:
                cmpi.b  #$08, D0
                bne.s   Offset_0x01B068
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x01B068:
                bclr    #$05, $0022(A0)
                bclr    #$06, $0022(A0)
                bclr    #$05, $0022(A1)
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Spring_Wall_Mappings:                   
Offset_0x01B084:
                dc.w    Offset_0x01B088-Offset_0x01B084
                dc.w    Offset_0x01B09A-Offset_0x01B084                
Offset_0x01B088:
                dc.w    $0002
                dc.l    $C0050034, $001AFFF8, $30050034, $001AFFF8
Offset_0x01B09A:
                dc.w    $0002
                dc.l    $80050034, $001AFFF8, $70050034, $001AFFF8   
;=============================================================================== 
; Object 0x66 - Metropolis - Springs on Walls
; [ End ]                         
;===============================================================================  
J_DisplaySprite_08: ; Offset_0x01B0AC:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_19: ; Offset_0x01B0B2:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_ModifySpriteAttr_2P_12: ; Offset_0x01B0B8:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
Offset_0x01B0BE:
                jmp     (Offset_0x00F510)                  
;=============================================================================== 
; Object 0x67 - Metropolis - Teleport Attributes
; [ Begin ]                         
;===============================================================================                    
Obj_0x67_Teleport_Attributes: ; Offset_0x01B0C4:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01B0EC(PC, D0), D1
                jsr     Offset_0x01B0EC(PC, D1)
                move.b  $002C(A0), D0
                add.b   $0036(A0), D0
                beq     Offset_0x01B518
                lea     (Offset_0x01B4BA), A1
                bsr     J_AnimateSprite_03      ; Offset_0x01B512
                bra     J_DisplaySprite_09      ; Offset_0x01B50C
Offset_0x01B0EC:
                dc.w    Offset_0x01B0F0-Offset_0x01B0EC
                dc.w    Offset_0x01B114-Offset_0x01B0EC
Offset_0x01B0F0:
                addq.b  #$02, $0024(A0)
                move.l  #Teleport_Attributes_Mappings, $0004(A0) ; Offset_0x01B4D4
                move.w  #$633C, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$05, $0018(A0)
Offset_0x01B114:
                lea     ($FFFFB000).w, A1
                lea     $002C(A0), A4
                bsr.s   Offset_0x01B126
                lea     ($FFFFB040).w, A1
                lea     $0036(A0), A4
Offset_0x01B126:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  Offset_0x01B132(PC, D0), D0
                jmp     Offset_0x01B132(PC, D0)
Offset_0x01B132:
                dc.w    Offset_0x01B138-Offset_0x01B132
                dc.w    Offset_0x01B1C8-Offset_0x01B132
                dc.w    Offset_0x01B1FC-Offset_0x01B132
Offset_0x01B138:
                tst.w   ($FFFFFE08).w
                bne     Offset_0x01B1C6
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addq.w  #$03, D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01B156
                addi.w  #$000A, D0
Offset_0x01B156:
                cmpi.w  #$0010, D0
                bcc.s   Offset_0x01B1C6
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                addi.w  #$0020, D1
                cmpi.w  #$0040, D1
                bcc.s   Offset_0x01B1C6
                tst.b   $002A(A1)
                bne.s   Offset_0x01B1C6
                addq.b  #$02, (A4)
                move.b  #$81, $002A(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0800, $0014(A1)
                move.w  #$0000, $0010(A1)
                move.w  #$0000, $0012(A1)
                bclr    #$05, $0022(A0)
                bclr    #$05, $0022(A1)
                bset    #$01, $0022(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                clr.b   $0001(A4)
                move.w  #$00BE, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                move.w  #$0100, $001C(A0)
Offset_0x01B1C6:
                rts
Offset_0x01B1C8:
                move.b  $0001(A4), D0
                addq.b  #$02, $0001(A4)
                jsr     CalcSine                ; Offset_0x00320A
                asr.w   #$05, D0
                move.w  $000C(A0), D2
                sub.w   D0, D2
                move.w  D2, $000C(A1)
                cmpi.b  #$80, $0001(A4)
                bne.s   Offset_0x01B1FA
                bsr     Offset_0x01B278
                addq.b  #$02, (A4)
                move.w  #$00BC, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x01B1FA:
                rts
Offset_0x01B1FC:
                subq.b  #$01, $0002(A4)
                bpl.s   Offset_0x01B230
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
                tst.b   $0028(A0)
                bpl.s   Offset_0x01B21A
                subq.w  #$08, A2
Offset_0x01B21A:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4)
                beq.s   Offset_0x01B256
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$1000, D2
                bra     Offset_0x01B2DC
Offset_0x01B230:
                move.l  $0008(A1), D2
                move.l  $000C(A1), D3
                move.w  $0010(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  $0012(A1), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, $0008(A1)
                move.l  D3, $000C(A1)
                rts
Offset_0x01B256:
                andi.w  #$07FF, $000C(A1)
                clr.b   (A4)
                clr.b   $002A(A1)
                btst    #$04, $0028(A0)
                bne.s   Offset_0x01B276
                move.w  #$0000, $0010(A1)
                move.w  #$0000, $0012(A1)
Offset_0x01B276:
                rts
Offset_0x01B278:
                move.b  $0028(A0), D0
                bpl.s   Offset_0x01B2AC
                neg.b   D0
                andi.w  #$000F, D0
                add.w   D0, D0
                lea     (Offset_0x01B35A), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D0
                subq.w  #$04, D0
                move.w  D0, $0004(A4)
                lea     $00(A2, D0), A2
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
                subq.w  #$08, A2
                bra.s   Offset_0x01B2D0
Offset_0x01B2AC:
                andi.w  #$000F, D0
                add.w   D0, D0
                lea     (Offset_0x01B35A), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, $0004(A4)
                subq.w  #$04, $0004(A4)
                move.w  (A2)+, D4
                move.w  D4, $0008(A1)
                move.w  (A2)+, D5
                move.w  D5, $000C(A1)
Offset_0x01B2D0:
                move.l  A2, $0006(A4)
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$1000, D2
Offset_0x01B2DC:
                moveq   #$00, D0
                move.w  D2, D3
                move.w  D4, D0
                sub.w   $0008(A1), D0
                bge.s   Offset_0x01B2EC
                neg.w   D0
                neg.w   D2
Offset_0x01B2EC:
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                bge.s   Offset_0x01B2FA
                neg.w   D1
                neg.w   D3
Offset_0x01B2FA:
                cmp.w   D0, D1
                bcs.s   Offset_0x01B32C
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                swap.w  D1
                divs.w  D3, D1
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   $0008(A1), D0
                beq.s   Offset_0x01B318
                swap.w  D0
                divs.w  D1, D0
Offset_0x01B318:
                move.w  D0, $0010(A1)
                move.w  D3, $0012(A1)
                tst.w   D1
                bpl.s   Offset_0x01B326
                neg.w   D1
Offset_0x01B326:
                move.w  D1, $0002(A4)
                rts
Offset_0x01B32C:
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   $0008(A1), D0
                swap.w  D0
                divs.w  D2, D0
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   $000C(A1), D1
                beq.s   Offset_0x01B346
                swap.w  D1
                divs.w  D0, D1
Offset_0x01B346:
                move.w  D1, $0012(A1)
                move.w  D2, $0010(A1)
                tst.w   D0
                bpl.s   Offset_0x01B354
                neg.w   D0
Offset_0x01B354:
                move.w  D0, $0002(A4)
                rts
Offset_0x01B35A:
                dc.w    Offset_0x01B37A-Offset_0x01B35A
                dc.w    Offset_0x01B394-Offset_0x01B35A
                dc.w    Offset_0x01B39E-Offset_0x01B35A
                dc.w    Offset_0x01B3A8-Offset_0x01B35A
                dc.w    Offset_0x01B3B2-Offset_0x01B35A
                dc.w    Offset_0x01B3BC-Offset_0x01B35A
                dc.w    Offset_0x01B3C6-Offset_0x01B35A
                dc.w    Offset_0x01B3D0-Offset_0x01B35A
                dc.w    Offset_0x01B3EA-Offset_0x01B35A
                dc.w    Offset_0x01B404-Offset_0x01B35A
                dc.w    Offset_0x01B41E-Offset_0x01B35A
                dc.w    Offset_0x01B438-Offset_0x01B35A
                dc.w    Offset_0x01B452-Offset_0x01B35A
                dc.w    Offset_0x01B46C-Offset_0x01B35A
                dc.w    Offset_0x01B486-Offset_0x01B35A
                dc.w    Offset_0x01B4A0-Offset_0x01B35A
Offset_0x01B37A:
                dc.w    $0018
                dc.b    $07, $28, $02, $70, $06, $D0, $02, $70, $06, $C0, $02, $88, $06, $C0, $03, $E0
                dc.b    $06, $D0, $03, $F0, $07, $28, $03, $F0
Offset_0x01B394:
                dc.w    $0008
                dc.b    $0B, $D8, $05, $F0, $0E, $00, $05, $F0
Offset_0x01B39E:
                dc.w    $0008
                dc.b    $0C, $58, $03, $70, $0E, $00, $03, $70
Offset_0x01B3A8:
                dc.w    $0008
                dc.b    $13, $D8, $01, $F0, $15, $80, $01, $F0
Offset_0x01B3B2:
                dc.w    $0008
                dc.b    $05, $D8, $03, $70, $07, $80, $03, $70
Offset_0x01B3BC:
                dc.w    $0008
                dc.b    $05, $D8, $05, $F0, $07, $00, $05, $F0
Offset_0x01B3C6:
                dc.w    $0008
                dc.b    $0B, $A8, $07, $70, $08, $80, $07, $70
Offset_0x01B3D0:
                dc.w    $0018
                dc.b    $0B, $D8, $01, $F0, $0C, $30, $01, $F0, $0C, $40, $01, $E0, $0C, $40, $00, $C0
                dc.b    $0C, $50, $00, $B0, $0C, $A8, $00, $B0
Offset_0x01B3EA:
                dc.w    $0018
                dc.b    $14, $D8, $04, $B0, $15, $30, $04, $B0, $15, $40, $04, $C0, $15, $40, $05, $A0
                dc.b    $15, $30, $05, $B0, $14, $D8, $05, $B0
Offset_0x01B404:
                dc.w    $0018
                dc.b    $17, $28, $03, $30, $15, $D0, $03, $30, $15, $C0, $03, $20, $15, $C0, $02, $40
                dc.b    $15, $D0, $02, $30, $16, $28, $02, $30
Offset_0x01B41E:
                dc.w    $0018
                dc.b    $0F, $D8, $03, $B0, $10, $30, $03, $B0, $10, $40, $03, $A0, $10, $40, $02, $C0
                dc.b    $10, $50, $02, $B0, $10, $A8, $02, $B0
Offset_0x01B438:
                dc.w    $0018
                dc.b    $0F, $D8, $04, $B0, $10, $B0, $04, $B0, $10, $C0, $04, $A0, $10, $C0, $03, $C0
                dc.b    $10, $D0, $03, $B0, $11, $28, $03, $B0
Offset_0x01B452:
                dc.w    $0018
                dc.b    $1E, $58, $01, $B0, $1F, $30, $01, $B0, $1F, $40, $01, $C0, $1F, $40, $02, $A0
                dc.b    $1F, $50, $02, $B0, $20, $A8, $02, $B0
Offset_0x01B46C:
                dc.w    $0018
                dc.b    $20, $A8, $04, $70, $20, $50, $04, $70, $20, $40, $04, $80, $20, $40, $05, $A0
                dc.b    $20, $50, $05, $B0, $20, $A8, $05, $B0
Offset_0x01B486:
                dc.w    $0018
                dc.b    $22, $58, $05, $B0, $23, $30, $05, $B0, $23, $40, $05, $A0, $23, $40, $04, $C0
                dc.b    $23, $50, $04, $B0, $23, $A8, $04, $B0
Offset_0x01B4A0:
                dc.w    $0018
                dc.b    $22, $D8, $02, $B0, $23, $30, $02, $B0, $23, $40, $02, $C0, $23, $40, $04, $60
                dc.b    $23, $30, $04, $70, $22, $D8, $04, $70                
Offset_0x01B4BA:                 
                dc.w    Offset_0x01B4BE-Offset_0x01B4BA
                dc.w    Offset_0x01B4C1-Offset_0x01B4BA
Offset_0x01B4BE:
                dc.b    $1F, $00, $FF
Offset_0x01B4C1:
                dc.b    $01, $01, $00, $00, $00, $00, $00, $01, $00, $00, $00, $01, $00, $00, $01, $00
                dc.b    $FE, $02, $00   
Teleport_Attributes_Mappings:
Offset_0x01B4D4:
                dc.w    Offset_0x01B4D8-Offset_0x01B4D4
                dc.w    Offset_0x01B4DA-Offset_0x01B4D4
Offset_0x01B4D8:
                dc.w    $0000
Offset_0x01B4DA:
                dc.w    $0006
                dc.l    $E0050000, $0000FFEC, $E0050000, $0000FFF8
                dc.l    $F0050000, $0000FFEC, $F0050000, $0000FFF8
                dc.l    $00050000, $0000FFEC, $00050000, $0000FFF8                             
;=============================================================================== 
; Object 0x67 - Metropolis - Teleport Attributes
; [ End ]                         
;===============================================================================               
J_DisplaySprite_09: ; Offset_0x01B50C:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_AnimateSprite_03: ; Offset_0x01B512:
                jmp     AnimateSprite           ; (Offset_0x00D412)
Offset_0x01B518:
                jmp     (Offset_0x00D30C)
                dc.w    $0000                   ; Filler                       
;=============================================================================== 
; Object 0x68 - Metropolis - Block with Arrow
; [ Begin ]                         
;===============================================================================                    
Obj_0x68_Block_Arrow: ; Offset_0x01B520:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01B52E(PC, D0), D1
                jmp     Offset_0x01B52E(PC, D1)
Offset_0x01B52E:
                dc.w    Offset_0x01B534-Offset_0x01B52E
                dc.w    Offset_0x01B5D6-Offset_0x01B52E
                dc.w    Offset_0x01B5EE-Offset_0x01B52E
Offset_0x01B534:
                addq.b  #$02, $0024(A0)
                move.l  #Block_Arrow_Mappings, $0004(A0) ; Offset_0x01B6DC
                move.w  #$6414, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_13 ; Offset_0x01B7FC
                move.b  #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                bsr     J_S1SingleObjectLoad_05  ; Offset_0x01B7F6
                bne.s   Offset_0x01B5D0
                move.b  $0000(A0), $0000(A1)
                addq.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0008(A1), $0030(A1)
                move.w  $000C(A1), $0032(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  #$241C, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$04, $0018(A1)
                move.w  ($FFFFFE04).w, D0
                lsr.w   #$06, D0
                move.w  D0, D1
                andi.w  #$0001, D0
                move.w  D0, $0036(A1)
                lsr.w   #$01, D1
                add.b   $0028(A0), D1
                andi.w  #$0003, D1
                move.b  D1, $0025(A1)
                move.b  D1, $001A(A1)
                lea     (Offset_0x01B6D8), A2
                move.b  $00(A2, D1), $0020(A1)
Offset_0x01B5D0:
                move.b  #$04, $001A(A0)
Offset_0x01B5D6:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_08        ; Offset_0x01B802
                bra     J_MarkObjGone_0F        ; Offset_0x01B7F0
Offset_0x01B5EE:
                bsr     Offset_0x01B656
                moveq   #$00, D0
                move.b  $0025(A0), D0
                add.w   D0, D0
                move.w  Offset_0x01B60A(PC, D0), D1
                jsr     Offset_0x01B60A(PC, D1)
                move.w  $0030(A0), D0
                bra     Offset_0x01B808
Offset_0x01B60A:
                dc.w    Offset_0x01B612-Offset_0x01B60A
                dc.w    Offset_0x01B624-Offset_0x01B60A
                dc.w    Offset_0x01B634-Offset_0x01B60A
                dc.w    Offset_0x01B644-Offset_0x01B60A
Offset_0x01B612:
                moveq   #$00, D0
                move.b  $0034(A0), D0
                neg.w   D0
                add.w   $0032(A0), D0
                move.w  D0, $000C(A0)
                rts
Offset_0x01B624:
                moveq   #$00, D0
                move.b  $0034(A0), D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                rts
Offset_0x01B634:
                moveq   #$00, D0
                move.b  $0034(A0), D0
                add.w   $0032(A0), D0
                move.w  D0, $000C(A0)
                rts
Offset_0x01B644:
                moveq   #$00, D0
                move.b  $0034(A0), D0
                neg.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $0008(A0)
                rts
Offset_0x01B656:
                tst.w   $0038(A0)
                beq.s   Offset_0x01B67A
                move.b  ($FFFFFE05).w, D0
                andi.b  #$3F, D0
                bne.s   Offset_0x01B6D6
                clr.w   $0038(A0)
                tst.b   $0001(A0)
                bpl.s   Offset_0x01B67A
                move.w  #$00B6, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x01B67A:
                tst.w   $0036(A0)
                beq.s   Offset_0x01B6B6
                subi.w  #$0800, $0034(A0)
                bcc.s   Offset_0x01B6D6
                move.w  #$0000, $0034(A0)
                move.w  #$0000, $0036(A0)
                move.w  #$0001, $0038(A0)
                addq.b  #$01, $0025(A0)
                andi.b  #$03, $0025(A0)
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.b  D0, $001A(A0)
                move.b  Offset_0x01B6D8(PC, D0), $0020(A0)
                rts
Offset_0x01B6B6:
                addi.w  #$0800, $0034(A0)
                cmpi.w  #$2000, $0034(A0)
                bcs.s   Offset_0x01B6D6
                move.w  #$2000, $0034(A0)
                move.w  #$0001, $0036(A0)
                move.w  #$0001, $0038(A0)
Offset_0x01B6D6:
                rts
Offset_0x01B6D8:
                dc.b    $84, $A6, $84, $A6  
Block_Arrow_Mappings:
Offset_0x01B6DC:
                dc.w    Offset_0x01B6E6-Offset_0x01B6DC
                dc.w    Offset_0x01B6F0-Offset_0x01B6DC
                dc.w    Offset_0x01B6FA-Offset_0x01B6DC
                dc.w    Offset_0x01B704-Offset_0x01B6DC
                dc.w    Offset_0x01B70E-Offset_0x01B6DC
Offset_0x01B6E6:
                dc.w    $0001
                dc.l    $F0031000, $1000FFFC
Offset_0x01B6F0:
                dc.w    $0001
                dc.l    $FC0C0004, $0002FFF0
Offset_0x01B6FA:
                dc.w    $0001
                dc.l    $F0030000, $0000FFFC
Offset_0x01B704:
                dc.w    $0001
                dc.l    $FC0C0804, $0802FFF0
Offset_0x01B70E:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F0070800, $08000000                              
;=============================================================================== 
; Object 0x68 - Metropolis - Block with Arrow
; [ End ]                         
;===============================================================================  
;=============================================================================== 
; Object 0x6D - Metropolis - Floor Harpoon
; [ Begin ]                         
;===============================================================================  
Obj_0x6D_Harpoon: ; Offset_0x01B720:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01B72E(PC, D0), D1
                jmp     Offset_0x01B72E(PC, D1)
Offset_0x01B72E:
                dc.w    Offset_0x01B732-Offset_0x01B72E
                dc.w    Offset_0x01B76C-Offset_0x01B72E
Offset_0x01B732:
                addq.b  #$02, $0024(A0)
                move.l  #Block_Arrow_Mappings, $0004(A0) ; Offset_0x01B6DC
                move.w  #$241C, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_13 ; Offset_0x01B7FC
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0019(A0)
                move.b  #$04, $0018(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  #$84, $0020(A0)
Offset_0x01B76C:
                bsr     Offset_0x01B788
                moveq   #$00, D0
                move.b  $0034(A0), D0
                neg.w   D0
                add.w   $0032(A0), D0
                move.w  D0, $000C(A0)
                move.w  $0030(A0), D0
                bra     Offset_0x01B808
Offset_0x01B788:
                tst.w   $003A(A0)
                beq.s   Offset_0x01B794
                subq.w  #$01, $003A(A0)
                rts
Offset_0x01B794:
                tst.w   $0038(A0)
                beq.s   Offset_0x01B7AC
                move.b  ($FFFFFE05).w, D0
                sub.b   $0028(A0), D0
                andi.b  #$7F, D0
                bne.s   Offset_0x01B7EE
                clr.w   $0038(A0)
Offset_0x01B7AC:
                tst.w   $0036(A0)
                beq.s   Offset_0x01B7CE
                subi.w  #$0400, $0034(A0)
                bcc.s   Offset_0x01B7EE
                move.w  #$0000, $0034(A0)
                move.w  #$0000, $0036(A0)
                move.w  #$0001, $0038(A0)
                rts
Offset_0x01B7CE:
                addi.w  #$0400, $0034(A0)
                cmpi.w  #$2000, $0034(A0)
                bcs.s   Offset_0x01B7EE
                move.w  #$2000, $0034(A0)
                move.w  #$0001, $0036(A0)
                move.w  #$0003, $003A(A0)
Offset_0x01B7EE:
                rts
;=============================================================================== 
; Object 0x6D - Metropolis - Floor Harpoon
; [ End ]                         
;===============================================================================  

J_MarkObjGone_0F: ; Offset_0x01B7F0:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_S1SingleObjectLoad_05: ; Offset_0x01B7F6:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_ModifySpriteAttr_2P_13: ; Offset_0x01B7FC:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_08: ; Offset_0x01B802:
                jmp     SolidObject             ; (Offset_0x00F4A0)
Offset_0x01B808:
                jmp     (Offset_0x00D2D8)       
                dc.w    $0000                   ; Filler       
;=============================================================================== 
; Object 0x69 - Metropolis - Screew Nut
; [ Begin ]                         
;===============================================================================                   
Obj_0x69_Screw_Nut: ; Offset_0x01B810:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01B81E(PC, D0), D1
                jmp     Offset_0x01B81E(PC, D1)
Offset_0x01B81E:
                dc.w    Offset_0x01B826-Offset_0x01B81E
                dc.w    Offset_0x01B868-Offset_0x01B81E
                dc.w    Offset_0x01B982-Offset_0x01B81E
                dc.w    Offset_0x01B880-Offset_0x01B81E
Offset_0x01B826:
                addq.b  #$02, $0024(A0)
                move.l  #Screw_Nut_Mappings, $0004(A0) ; Offset_0x01B9A6
                move.w  #$2500, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_14 ; Offset_0x01BA16
                move.b  #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.b  #$0B, $0016(A0)
                move.b  #$04, $0018(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  $0028(A0), D0
                andi.w  #$007F, D0
                lsl.w   #$03, D0
                move.w  D0, $0036(A0)
Offset_0x01B868:
                lea     ($FFFFB000).w, A1
                lea     $0038(A0), A4
                moveq   #$03, D6
                bsr.s   Offset_0x01B898
                lea     ($FFFFB040).w, A1
                lea     $003C(A0), A4
                moveq   #$04, D6
                bsr.s   Offset_0x01B898
Offset_0x01B880:
                move.w  #$002B, D1
                move.w  #$000C, D2
                move.w  #$000D, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_09        ; Offset_0x01BA1C
                bra     J_MarkObjGone_10        ; Offset_0x01BA10
Offset_0x01B898:
                btst    D6, $0022(A0)
                bne.s   Offset_0x01B8A0
                clr.b   (A4)
Offset_0x01B8A0:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  Offset_0x01B8AC(PC, D0), D0
                jmp     Offset_0x01B8AC(PC, D0)
Offset_0x01B8AC:
                dc.w    Offset_0x01B8B2-Offset_0x01B8AC
                dc.w    Offset_0x01B8D2-Offset_0x01B8AC
                dc.w    Offset_0x01B8F4-Offset_0x01B8AC
Offset_0x01B8B2:
                btst    D6, $0022(A0)
                bne.s   Offset_0x01B8BA
                rts
Offset_0x01B8BA:
                addq.b  #$02, (A4)
                move.b  #$00, $0001(A4)
                move.w  $0008(A0), D0
                sub.w   $0008(A1), D0
                bcc.s   Offset_0x01B8D2
                move.b  #$01, $0001(A4)
Offset_0x01B8D2:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                tst.b   $0001(A4)
                beq.s   Offset_0x01B8E4
                addi.w  #$000F, D0
Offset_0x01B8E4:
                cmpi.w  #$0010, D0
                bcc.s   Offset_0x01B8F2
                move.w  $0008(A0), $0008(A1)
                addq.b  #$02, (A4)
Offset_0x01B8F2:
                rts
Offset_0x01B8F4:
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                bcc.s   Offset_0x01B95A
                add.w   D0, $0034(A0)
                move.w  $0008(A0), $0008(A1)
                move.w  $0034(A0), D0
                asr.w   #$03, D0
                move.w  D0, D1
                asr.w   #$01, D0
                andi.w  #$0003, D0
                move.b  D0, $001A(A0)
                neg.w   D1
                add.w   $0032(A0), D1
                move.w  D1, $000C(A0)
                sub.w   $0032(A0), D1
                move.w  $0036(A0), D0
                cmp.w   D0, D1
                blt.s   Offset_0x01B958
                move.w  D0, D1
                add.w   $0032(A0), D1
                move.w  D1, $000C(A0)
                lsl.w   #$03, D0
                neg.w   D0
                move.w  D0, $0034(A0)
                move.b  #$00, $001A(A0)
                tst.b   $0028(A0)
                bmi.s   Offset_0x01B952
                clr.b   (A4)
                rts
Offset_0x01B952:
                move.b  #$04, $0024(A0)
Offset_0x01B958:
                rts
Offset_0x01B95A:
                add.w   D0, $0034(A0)
                move.w  $0008(A0), $0008(A1)
                move.w  $0034(A0), D0
                asr.w   #$03, D0
                move.w  D0, D1
                asr.w   #$01, D0
                andi.w  #$0003, D0
                move.b  D0, $001A(A0)
                neg.w   D1
                add.w   $0032(A0), D1
                move.w  D1, $000C(A0)
                rts
Offset_0x01B982:
                bsr     J_SpeedToPos_09         ; Offset_0x01BA22
                addi.w  #$0038, $0012(A0)
                bsr     J_ObjHitFloor_00        ; Offset_0x01BA28
                tst.w   D1
                bpl     Offset_0x01B9A2
                add.w   D1, $000C(A0)
                clr.w   $0012(A0)
                addq.b  #$02, $0024(A0)
Offset_0x01B9A2:
                bra     Offset_0x01B880     
Screw_Nut_Mappings:
Offset_0x01B9A6:
                dc.w    Offset_0x01B9AE-Offset_0x01B9A6
                dc.w    Offset_0x01B9C0-Offset_0x01B9A6
                dc.w    Offset_0x01B9DA-Offset_0x01B9A6
                dc.w    Offset_0x01B9F4-Offset_0x01B9A6
Offset_0x01B9AE:
                dc.w    $0002
                dc.l    $F40E0000, $0000FFE0, $F40E000C, $00060000
Offset_0x01B9C0:
                dc.w    $0003
                dc.l    $F40A0003, $0001FFE0, $F40E000C, $0006FFF8
                dc.l    $F4020809, $08040018
Offset_0x01B9DA:
                dc.w    $0003
                dc.l    $F4060024, $0012FFE0, $F40E002A, $0015FFF0
                dc.l    $F4060018, $000C0010
Offset_0x01B9F4:
                dc.w    $0003
                dc.l    $F4020027, $0013FFE0, $F40E0018, $000CFFE8
                dc.l    $F40A082D, $08160008                         
;=============================================================================== 
; Object 0x69 - Metropolis - Screew Nut
; [ End ]                         
;===============================================================================  
                nop                             ; Filler
J_MarkObjGone_10: ; Offset_0x01BA10:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_ModifySpriteAttr_2P_14: ; Offset_0x01BA16:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_09: ; Offset_0x01BA1C:
                jmp     SolidObject             ; (Offset_0x00F4A0)
J_SpeedToPos_09: ; Offset_0x01BA22:
                jmp     SpeedToPos              ; (Offset_0x00D27A)
J_ObjHitFloor_00: ; Offset_0x01BA28:
                jmp     ObjHitFloor             ; (Offset_0x013898)
                dc.w    $0000                   ; Filler                     
;=============================================================================== 
; Object 0x6A - Dust Hill - Three Rotating Boxes
; [ Begin ]                         
;===============================================================================                  
Obj_0x6A_Rotating_Boxes: ; Offset_0x01BA30:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01BA3E(PC, D0), D1
                jmp     Offset_0x01BA3E(PC, D1)
Offset_0x01BA3E:
                dc.w    Offset_0x01BA44-Offset_0x01BA3E
                dc.w    Offset_0x01BB5E-Offset_0x01BA3E
                dc.w    Offset_0x01BBE6-Offset_0x01BA3E
Offset_0x01BA44:
                addq.b  #$02, $0024(A0)
                move.l  #Mz_Platform_Mappings, $0004(A0) ; Offset_0x01AE2C
                move.w  #$6000, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$20, $0019(A0)
                move.b  #$0C, $0016(A0)
                move.l  #Offset_0x01BC5C, $002C(A0)
                move.b  #$01, $001A(A0)
                cmpi.b  #$0B, ($FFFFFE10).w
                bne     Offset_0x01BB44
                addq.b  #$02, $0024(A0)
                move.l  #Rotating_Boxes_Mappings, $0004(A0) ; Offset_0x01BCB0
                move.w  #$63D4, $0002(A0)
                move.b  #$20, $0019(A0)
                move.b  #$20, $0016(A0)
                move.l  #Offset_0x01BC74, $002C(A0)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01BABC
                move.l  #Offset_0x01BC92, $002C(A0)
Offset_0x01BABC:
                move.b  #$00, $001A(A0)
                cmpi.b  #$18, $0028(A0)
                bne     Offset_0x01BB50
                bsr     J_S1SingleObjectLoad_06  ; Offset_0x01BCD4
                bne.s   Offset_0x01BB1C
                bsr.s   Offset_0x01BB1E
                addi.w  #$0040, $0008(A1)
                addi.w  #$0040, $000C(A1)
                move.b  #$06, $0028(A1)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01BAF4
                move.b  #$0C, $0028(A1)
Offset_0x01BAF4:
                bsr     J_S1SingleObjectLoad_06  ; Offset_0x01BCD4
                bne.s   Offset_0x01BB1C
                bsr.s   Offset_0x01BB1E
                subi.w  #$0040, $0008(A1)
                addi.w  #$0040, $000C(A1)
                move.b  #$0C, $0028(A1)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01BB1C
                move.b  #$06, $0028(A1)
Offset_0x01BB1C:
                bra.s   Offset_0x01BB44
Offset_0x01BB1E:
                move.b  $0000(A0), $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0008(A0), $0032(A1)
                move.w  $000C(A0), $0030(A1)
                move.b  $0022(A0), $0022(A1)
                rts
Offset_0x01BB44:
                move.w  $0008(A0), $0032(A0)
                move.w  $000C(A0), $0030(A0)
Offset_0x01BB50:
                bsr     J_ModifySpriteAttr_2P_15 ; Offset_0x01BCDA
                move.b  $0028(A0), $0038(A0)
                bra     Offset_0x01BC22
Offset_0x01BB5E:
                move.w  $0008(A0), -(A7)
                tst.w   $0036(A0)
                bne.s   Offset_0x01BBAE
                move.b  $003C(A0), D1
                move.b  $0022(A0), D0
                btst    #$03, D0
                bne.s   Offset_0x01BB8A
                btst    #$03, D1
                beq.s   Offset_0x01BB8E
                move.b  #$01, $0036(A0)
                move.b  #$00, $003C(A0)
                bra.s   Offset_0x01BBBE
Offset_0x01BB8A:
                move.b  D0, $003C(A0)
Offset_0x01BB8E:
                btst    #$04, D0
                bne.s   Offset_0x01BBA8
                btst    #$04, D1
                beq.s   Offset_0x01BBBE
                move.b  #$01, $0036(A0)
                move.b  #$00, $003C(A0)
                bra.s   Offset_0x01BBBE
Offset_0x01BBA8:
                move.b  D0, $003C(A0)
                bra.s   Offset_0x01BBBE
Offset_0x01BBAE:
                jsr     SpeedToPos              ; (Offset_0x00D27A)
                subq.w  #$01, $0034(A0)
                bne.s   Offset_0x01BBBE
                bsr     Offset_0x01BC22
Offset_0x01BBBE:
                move.w  (A7)+, D4
                tst.b   $0001(A0)
                bpl.s   Offset_0x01BBDE
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_0A        ; Offset_0x01BCE0
Offset_0x01BBDE:
                move.w  $0032(A0), D0
                bra     Offset_0x01BCE6
Offset_0x01BBE6:
                move.w  $0008(A0), -(A7)
                jsr     SpeedToPos              ; (Offset_0x00D27A)
                subq.w  #$01, $0034(A0)
                bne.s   Offset_0x01BBFA
                bsr     Offset_0x01BC22
Offset_0x01BBFA:
                move.w  (A7)+, D4
                tst.b   $0001(A0)
                bpl.s   Offset_0x01BC1A
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_0A        ; Offset_0x01BCE0
Offset_0x01BC1A:
                move.w  $0032(A0), D0
                bra     Offset_0x01BCE6
Offset_0x01BC22:
                moveq   #$00, D0
                move.b  $0038(A0), D0
                move.l  $002C(A0), A1
                lea     $00(A1, D0), A1
                move.w  (A1)+, $0010(A0)
                move.w  (A1)+, $0012(A0)
                move.w  (A1)+, $0034(A0)
                move.w  #$0007, $003A(A0)
                move.b  #$00, $0036(A0)
                addq.b  #$06, $0038(A0)
                cmpi.b  #$18, $0038(A0)
                bcs.s   Offset_0x01BC5A
                move.b  #$00, $0038(A0)
Offset_0x01BC5A:
                rts    
Offset_0x01BC5C:
                dc.w    $0000, $0400, $0010, $0400, $FE00, $0020, $0000, $0400
                dc.w    $0010, $FC00, $FE00, $0020
Offset_0x01BC74:
                dc.w    $0000, $0100, $0040, $FF00, $0000, $0080, $0000, $FF00
                dc.w    $0040, $0100, $0000, $0080, $0100, $0000, $0040
Offset_0x01BC92:
                dc.w    $0000, $0100, $0040, $0100, $0000, $0080, $0000, $FF00
                dc.w    $0040, $FF00, $0000, $0080, $FF00, $0000, $0040
Rotating_Boxes_Mappings:                   
Offset_0x01BCB0:
                dc.w    Offset_0x01BCB2-Offset_0x01BCB0
Offset_0x01BCB2:
                dc.w    $0004
                dc.l    $E00F0000, $0000FFE0, $E00F0010, $00080000
                dc.l    $000F1810, $1808FFE0, $000F1800, $18000000                                                                      
;=============================================================================== 
; Object 0x6A - Dust Hill - Three Rotating Boxes
; [ End ]                         
;===============================================================================                   
J_S1SingleObjectLoad_06: ; Offset_0x01BCD4:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_ModifySpriteAttr_2P_15: ; Offset_0x01BCDA:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_0A: ; Offset_0x01BCE0:
                jmp     SolidObject             ; (Offset_0x00F4A0)
Offset_0x01BCE6:
                jmp     (Offset_0x00D2D8)                
;=============================================================================== 
; Object 0x6B - Metropolis Platforms / Chemical Plant - Block
; [ Begin ]                         
;===============================================================================   
Obj_0x6B_Mz_Platform: ; Obj_0x6B_Block: ; Offset_0x01BCEC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01BCFA(PC, D0), D1
                jmp     Offset_0x01BCFA(PC, D1)
Offset_0x01BCFA:
                dc.w    Offset_0x01BD06-Offset_0x01BCFA
                dc.w    Offset_0x01BD88-Offset_0x01BCFA
Offset_0x01BCFE:
                dc.b    $20, $0C, $01, $00, $10, $10, $00, $00
Offset_0x01BD06:
                addq.b  #$02, $0024(A0)
                move.l  #Mz_Platform_Mappings, $0004(A0) ; Offset_0x01AE2C
                move.w  #$6000, $0002(A0)
                cmpi.b  #$0D, ($FFFFFE10).w
                bne.s   Offset_0x01BD2E
                move.l  #Block_Mappings, $0004(A0)       ; Offset_0x01BF4A
                move.w  #$6418, $0002(A0)
Offset_0x01BD2E:
                bsr     J_ModifySpriteAttr_2P_16 ; Offset_0x01BF58
                move.b  #$04, $0001(A0)
                move.b  #$03, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     Offset_0x01BCFE(PC, D0), A2
                move.b  (A2)+, $0019(A0)
                move.b  (A2)+, $0016(A0)
                move.b  (A2)+, $001A(A0)
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0030(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                subq.w  #$08, D0
                bcs.s   Offset_0x01BD88
                lsl.w   #$02, D0
                lea     ($FFFFFE8A).w, A2
                lea     $00(A2, D0), A2
                tst.w   (A2)
                bpl.s   Offset_0x01BD88
                bchg    #0, $0022(A0)
Offset_0x01BD88:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                add.w   D0, D0
                move.w  Offset_0x01BDC8(PC, D0), D1
                jsr     Offset_0x01BDC8(PC, D1)
                move.w  (A7)+, D4
                tst.b   $0001(A0)
                bpl.s   Offset_0x01BDC0
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_0B        ; Offset_0x01BF5E
Offset_0x01BDC0:
                move.w  $0034(A0), D0
                bra     Offset_0x01BF64
Offset_0x01BDC8:
                dc.w    Offset_0x01BDE0-Offset_0x01BDC8
                dc.w    Offset_0x01BDE2-Offset_0x01BDC8
                dc.w    Offset_0x01BDEE-Offset_0x01BDC8
                dc.w    Offset_0x01BE10-Offset_0x01BDC8
                dc.w    Offset_0x01BE1C-Offset_0x01BDC8
                dc.w    Offset_0x01BE3E-Offset_0x01BDC8
                dc.w    Offset_0x01BE5C-Offset_0x01BDC8
                dc.w    Offset_0x01BDE0-Offset_0x01BDC8
                dc.w    Offset_0x01BE8A-Offset_0x01BDC8
                dc.w    Offset_0x01BE9C-Offset_0x01BDC8
                dc.w    Offset_0x01BEAC-Offset_0x01BDC8
                dc.w    Offset_0x01BEBC-Offset_0x01BDC8
Offset_0x01BDE0:
                rts
Offset_0x01BDE2:
                move.w  #$0040, D1
                moveq   #$00, D0
                move.b  ($FFFFFE68).w, D0
                bra.s   Offset_0x01BDF8
Offset_0x01BDEE:
                move.w  #$0080, D1
                moveq   #$00, D0
                move.b  ($FFFFFE7C).w, D0
Offset_0x01BDF8:
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01BE04
                neg.w   D0
                add.w   D1, D0
Offset_0x01BE04:
                move.w  $0034(A0), D1
                sub.w   D0, D1
                move.w  D1, $0008(A0)
                rts
Offset_0x01BE10:
                move.w  #$0040, D1
                moveq   #$00, D0
                move.b  ($FFFFFE68).w, D0
                bra.s   Offset_0x01BE26
Offset_0x01BE1C:
                move.w  #$0080, D1
                moveq   #$00, D0
                move.b  ($FFFFFE7C).w, D0
Offset_0x01BE26:
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01BE32
                neg.w   D0
                add.w   D1, D0
Offset_0x01BE32:
                move.w  $0030(A0), D1
                sub.w   D0, D1
                move.w  D1, $000C(A0)
                rts
Offset_0x01BE3E:
                move.b  ($FFFFFE60).w, D0
                lsr.w   #$01, D0
                add.w   $0030(A0), D0
                move.w  D0, $000C(A0)
                move.b  $0022(A0), D1
                andi.b  #$18, D1
                beq.s   Offset_0x01BE5A
                addq.b  #$01, $0028(A0)
Offset_0x01BE5A:
                rts
Offset_0x01BE5C:
                move.l  $000C(A0), D3
                move.w  $0012(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D3, $000C(A0)
                addi.w  #$0008, $0012(A0)
                move.w  ($FFFFEECE).w, D0
                addi.w  #$00E0, D0
                cmp.w   $000C(A0), D0
                bcc.s   Offset_0x01BE88
                move.b  #$00, $0028(A0)
Offset_0x01BE88:
                rts
Offset_0x01BE8A:
                move.w  #$0010, D1
                moveq   #$00, D0
                move.b  ($FFFFFE88).w, D0
                lsr.w   #$01, D0
                move.w  ($FFFFFE8A).w, D3
                bra.s   Offset_0x01BECA
Offset_0x01BE9C:
                move.w  #$0030, D1
                moveq   #$00, D0
                move.b  ($FFFFFE8C).w, D0
                move.w  ($FFFFFE8E).w, D3
                bra.s   Offset_0x01BECA
Offset_0x01BEAC:
                move.w  #$0050, D1
                moveq   #$00, D0
                move.b  ($FFFFFE90).w, D0
                move.w  ($FFFFFE92).w, D3
                bra.s   Offset_0x01BECA
Offset_0x01BEBC:
                move.w  #$0070, D1
                moveq   #$00, D0
                move.b  ($FFFFFE94).w, D0
                move.w  ($FFFFFE96).w, D3
Offset_0x01BECA:
                tst.w   D3
                bne.s   Offset_0x01BED8
                addq.b  #$01, $0022(A0)
                andi.b  #$03, $0022(A0)
Offset_0x01BED8:
                move.b  $0022(A0), D2
                andi.b  #$03, D2
                bne.s   Offset_0x01BEF8
                sub.w   D1, D0
                add.w   $0034(A0), D0
                move.w  D0, $0008(A0)
                neg.w   D1
                add.w   $0030(A0), D1
                move.w  D1, $000C(A0)
                rts
Offset_0x01BEF8:
                subq.b  #$01, D2
                bne.s   Offset_0x01BF16
                subq.w  #$01, D1
                sub.w   D1, D0
                neg.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $000C(A0)
                addq.w  #$01, D1
                add.w   $0034(A0), D1
                move.w  D1, $0008(A0)
                rts
Offset_0x01BF16:
                subq.b  #$01, D2
                bne.s   Offset_0x01BF34
                subq.w  #$01, D1
                sub.w   D1, D0
                neg.w   D0
                add.w   $0034(A0), D0
                move.w  D0, $0008(A0)
                addq.w  #$01, D1
                add.w   $0030(A0), D1
                move.w  D1, $000C(A0)
                rts
Offset_0x01BF34:
                sub.w   D1, D0
                add.w   $0030(A0), D0
                move.w  D0, $000C(A0)
                neg.w   D1
                add.w   $0034(A0), D1
                move.w  D1, $0008(A0)
                rts 
Block_Mappings:                
Offset_0x01BF4A:
                dc.w    Offset_0x01BF4C-Offset_0x01BF4A
Offset_0x01BF4C:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0                           
;=============================================================================== 
; Object 0x6B - Metropolis Platforms / Chemical Plant - Block
; [ End ]                         
;===============================================================================  
                nop                             ; Filler
J_ModifySpriteAttr_2P_16: ; Offset_0x01BF58:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_0B: ; Offset_0x01BF5E:
                jmp     SolidObject             ; (Offset_0x00F4A0)
Offset_0x01BF64:
                jmp     (Offset_0x00D2D8)    
                dc.w    $0000                   ; Filler      
;=============================================================================== 
; Object 0x6C - Moving platforms - clockwise
; [ Begin ]                         
;===============================================================================                  
Obj_0x6C_Mz_Moving_Platforms: ; Offset_0x01BF6C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01BF94(PC, D0), D1
                jsr     Offset_0x01BF94(PC, D1)
                move.w  $0030(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x01BF90
                bra     J_DisplaySprite_0A      ; Offset_0x01C2C0
Offset_0x01BF90:
                bra     J_DeleteObject_1A       ; Offset_0x01C2C6
Offset_0x01BF94:
                dc.w    Offset_0x01BF98-Offset_0x01BF94
                dc.w    Offset_0x01C0A0-Offset_0x01BF94
Offset_0x01BF98:
                move.b  $0028(A0), D0
                bmi     Offset_0x01C04A
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x6C_Mappings, $0004(A0) ; Offset_0x01C2AA
                move.w  #$63F9, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$04, $0018(A0)
                bsr     J_ModifySpriteAttr_2P_17 ; Offset_0x01C2D2
                move.b  #$00, $001A(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.w  D0, D1
                lsr.w   #$03, D0
                andi.w  #$001E, D0
                lea     Offset_0x01C18A(PC), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, $0038(A0)
                move.l  A2, $003C(A0)
                andi.w  #$000F, D1
                lsl.w   #$02, D1
                move.b  D1, $0038(A0)
                move.b  #$04, $003A(A0)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01C02A
                neg.b   $003A(A0)
                moveq   #$00, D1
                move.b  $0038(A0), D1
                add.b   $003A(A0), D1
                cmp.b   $0039(A0), D1
                bcs.s   Offset_0x01C026
                move.b  D1, D0
                moveq   #$00, D1
                tst.b   D0
                bpl.s   Offset_0x01C026
                move.b  $0039(A0), D1
                subq.b  #$04, D1
Offset_0x01C026:
                move.b  D1, $0038(A0)
Offset_0x01C02A:
                move.w  $00(A2, D1), D0
                add.w   $0030(A0), D0
                move.w  D0, $0034(A0)
                move.w  $02(A2, D1), D0
                add.w   $0032(A0), D0
                move.w  D0, $0036(A0)
                bsr     Offset_0x01C112
                bra     Offset_0x01C0A0
Offset_0x01C04A:
                andi.w  #$007F, D0
                add.w   D0, D0
                lea     (Offset_0x01C20E), A2    
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D1
                move.l  A0, A1
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                bra.s   Offset_0x01C06E
Offset_0x01C068:                
                bsr     J_SingleObjectLoad_05   ; Offset_0x01C2CC
                bne.s   Offset_0x01C098
Offset_0x01C06E:
                move.b  #$6C, $0000(A1)
                move.w  (A2)+, D0
                add.w   D2, D0
                move.w  D0, $0008(A1)
                move.w  (A2)+, D0
                add.w   D3, D0
                move.w  D0, $000C(A1)
                move.w  D2, $0030(A1)
                move.w  D3, $0032(A1)
                move.w  (A2)+, D0
                move.b  D0, $0028(A1)
                move.b  $0022(A0), $0022(A1)
Offset_0x01C098:
                dbra    D1, Offset_0x01C068
                addq.l  #$04, A7
                rts
Offset_0x01C0A0:
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x01C0B6
                moveq   #$00, D1
                move.b  $0019(A0), D1
                moveq   #$08, D3
                move.w  (A7)+, D4
                bra     Offset_0x01C2D8
Offset_0x01C0B6:
                move.w  $0008(A0), D0
                cmp.w   $0034(A0), D0
                bne.s   Offset_0x01C10C
                move.w  $000C(A0), D0
                cmp.w   $0036(A0), D0
                bne.s   Offset_0x01C10C
                moveq   #$00, D1
                move.b  $0038(A0), D1
                add.b   $003A(A0), D1
                cmp.b   $0039(A0), D1
                bcs.s   Offset_0x01C0E8
                move.b  D1, D0
                moveq   #$00, D1
                tst.b   D0
                bpl.s   Offset_0x01C0E8
                move.b  $0039(A0), D1
                subq.b  #$04, D1
Offset_0x01C0E8:
                move.b  D1, $0038(A0)
                move.l  $003C(A0), A1
                move.w  $00(A1, D1), D0
                add.w   $0030(A0), D0
                move.w  D0, $0034(A0)
                move.w  $02(A1, D1), D0
                add.w   $0032(A0), D0
                move.w  D0, $0036(A0)
                bsr     Offset_0x01C112
Offset_0x01C10C:
                bsr     J_SpeedToPos_0A         ; Offset_0x01C2DE
                rts
Offset_0x01C112:
                moveq   #$00, D0
                move.w  #$FF00, D2
                move.w  $0008(A0), D0
                sub.w   $0034(A0), D0
                bcc.s   Offset_0x01C126
                neg.w   D0
                neg.w   D2
Offset_0x01C126:
                moveq   #$00, D1
                move.w  #$FF00, D3
                move.w  $000C(A0), D1
                sub.w   $0036(A0), D1
                bcc.s   Offset_0x01C13A
                neg.w   D1
                neg.w   D3
Offset_0x01C13A:
                cmp.w   D0, D1
                bcs.s   Offset_0x01C164
                move.w  $0008(A0), D0
                sub.w   $0034(A0), D0
                beq.s   Offset_0x01C150
                ext.l   D0
                asl.l   #$08, D0
                divs.w  D1, D0
                neg.w   D0
Offset_0x01C150:
                move.w  D0, $0010(A0)
                move.w  D3, $0012(A0)
                swap.w  D0
                move.w  D0, $000A(A0)
                clr.w   $000E(A0)
                rts
Offset_0x01C164:
                move.w  $000C(A0), D1
                sub.w   $0036(A0), D1
                beq.s   Offset_0x01C176
                ext.l   D1
                asl.l   #$08, D1
                divs.w  D0, D1
                neg.w   D1
Offset_0x01C176:
                move.w  D1, $0012(A0)
                move.w  D2, $0010(A0)
                swap.w  D1
                move.w  D1, $000E(A0)
                clr.w   $000A(A0)
                rts    
Offset_0x01C18A:
                dc.w    Offset_0x01C190-Offset_0x01C18A
                dc.w    Offset_0x01C1BA-Offset_0x01C18A
                dc.w    Offset_0x01C1E4-Offset_0x01C18A
Offset_0x01C190:
                dc.w    $0028
                dc.b    $00, $00, $00, $00, $FF, $EA, $00, $0A, $FF, $E0, $00, $20, $FF, $E0, $00, $E0
                dc.b    $FF, $EA, $00, $F6, $00, $00, $01, $00, $00, $16, $00, $F6, $00, $20, $00, $E0
                dc.b    $00, $20, $00, $20, $00, $16, $00, $0A
Offset_0x01C1BA:
                dc.w    $0028
                dc.b    $00, $00, $00, $00, $FF, $EA, $00, $0A, $FF, $E0, $00, $20, $FF, $E0, $01, $60
                dc.b    $FF, $EA, $01, $76, $00, $00, $01, $80, $00, $16, $01, $76, $00, $20, $01, $60
                dc.b    $00, $20, $00, $20, $00, $16, $00, $0A
Offset_0x01C1E4:
                dc.w    $0028
                dc.b    $00, $00, $00, $00, $FF, $EA, $00, $0A, $FF, $E0, $00, $20, $FF, $E0, $01, $E0
                dc.b    $FF, $EA, $01, $F6, $00, $00, $02, $00, $00, $16, $01, $F6, $00, $20, $01, $E0
                dc.b    $00, $20, $00, $20, $00, $16, $00, $0A                
Offset_0x01C20E: 
                dc.w    Offset_0x01C214-Offset_0x01C20E
                dc.w    Offset_0x01C246-Offset_0x01C20E
                dc.w    Offset_0x01C278-Offset_0x01C20E
Offset_0x01C214:
                dc.w    $0007
                dc.b    $00, $00, $00, $00, $00, $01, $FF, $E0, $00, $3A, $00, $03, $FF, $E0, $00, $80
                dc.b    $00, $03, $FF, $E0, $00, $C6, $00, $03, $00, $00, $01, $00, $00, $06, $00, $20
                dc.b    $00, $C6, $00, $08, $00, $20, $00, $80, $00, $08, $00, $20, $00, $3A, $00, $08  
Offset_0x01C246:
                dc.w    $0007
                dc.b    $00, $00, $00, $00, $00, $11, $FF, $E0, $00, $5A, $00, $13, $FF, $E0, $00, $C0
                dc.b    $00, $13, $FF, $E0, $01, $26, $00, $13, $00, $00, $01, $80, $00, $16, $00, $20
                dc.b    $01, $26, $00, $18, $00, $20, $00, $C0, $00, $18, $00, $20, $00, $5A, $00, $18                
Offset_0x01C278:
                dc.w    $0007
                dc.b    $00, $00, $00, $00, $00, $21, $FF, $E0, $00, $7A, $00, $23, $FF, $E0, $01, $00
                dc.b    $00, $23, $FF, $E0, $01, $86, $00, $23, $00, $00, $02, $00, $00, $26, $00, $20
                dc.b    $01, $86, $00, $28, $00, $20, $01, $00, $00, $28, $00, $20, $00, $7A, $00, $28
                
Obj_0x6C_Mappings:                
Offset_0x01C2AA:
                dc.w    Offset_0x01C2AC-Offset_0x01C2AA
Offset_0x01C2AC:
                dc.w    $0002
                dc.l    $F8050000, $0000FFF0, $F8050800, $08000000                                                  
;=============================================================================== 
; Object 0x6C - Moving platforms - clockwise
; [ End ]                         
;===============================================================================                   
                nop                             ; Filler
J_DisplaySprite_0A: ; Offset_0x01C2C0:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_1A: ; Offset_0x01C2C6:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_SingleObjectLoad_05: ; Offset_0x01C2CC:
                jmp     SingleObjectLoad        ; (Offset_0x00E772)
J_ModifySpriteAttr_2P_17: ; Offset_0x01C2D2:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
Offset_0x01C2D8:
                jmp     (Offset_0x00F984)
J_SpeedToPos_0A: ; Offset_0x01C2DE:
                jmp     SpeedToPos              ; (Offset_0x00D27A)    
;=============================================================================== 
; Object 0x6E - Metropolis - Machine
; [ Begin ]                         
;===============================================================================                   
Obj_0x6E_Machine: ; Offset_0x01C2E4:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01C2F2(PC, D0), D1
                jmp     Offset_0x01C2F2(PC, D1)
Offset_0x01C2F2:
                dc.w    Offset_0x01C300-Offset_0x01C2F2
                dc.w    Offset_0x01C36A-Offset_0x01C2F2
                dc.w    Offset_0x01C3F4-Offset_0x01C2F2
Offset_0x01C2F8: 
                dc.b    $10, $0C, $28, $08, $60, $18, $0C, $0C
Offset_0x01C300:
                addq.b  #$02, $0024(A0)
                move.l  #Machine_Mappings, $0004(A0) ; Offset_0x01C464
                move.w  #$6000, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_18 ; Offset_0x01C4EC
Offset_0x01C316:
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                lea     Offset_0x01C2F8(PC, D0), A3
                move.b  (A3)+, $0019(A0)
                move.b  (A3)+, $0016(A0)
                lsr.w   #$01, D0
                move.b  D0, $001A(A0)
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0030(A0)
                cmpi.b  #$03, D0
                bne.s   Offset_0x01C36A
                addq.b  #$02, $0024(A0)
                move.w  #$63F0, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_18 ; Offset_0x01C4EC
                move.b  #$05, $0018(A0)
                bra     Offset_0x01C3F4
Offset_0x01C36A:
                move.w  $0008(A0), -(A7)
                move.b  ($FFFFFE80).w, D1
                subi.b  #$38, D1
                ext.w   D1
                move.b  ($FFFFFE84).w, D2
                subi.b  #$38, D2
                ext.w   D2
                btst    #$00, $0028(A0)
                beq.s   Offset_0x01C38E
                neg.w   D1
                neg.w   D2
Offset_0x01C38E:
                btst    #$01, $0028(A0)
                beq.s   Offset_0x01C39A
                neg.w   D1
                exg.l   D2, D1
Offset_0x01C39A:
                add.w   $0034(A0), D1
                move.w  D1, $0008(A0)
                add.w   $0030(A0), D2
                move.w  D2, $000C(A0)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_0C        ; Offset_0x01C4F2
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x01C3DC
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x01C3DC:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_1B       ; Offset_0x01C3EE
                bclr    #$07, $02(A2, D0)
J_DeleteObject_1B: ; Offset_0x01C3EE:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x01C3F4:
                move.b  ($FFFFFE80).w, D1
                lsr.b   #$01, D1
                subi.b  #$1C, D1
                ext.w   D1
                move.b  ($FFFFFE84).w, D2
                lsr.b   #$01, D2
                subi.b  #$1C, D2
                ext.w   D2
                btst    #$00, $0028(A0)
                beq.s   Offset_0x01C418
                neg.w   D1
                neg.w   D2
Offset_0x01C418:
                btst    #$01, $0028(A0)
                beq.s   Offset_0x01C424
                neg.w   D1
                exg.l   D2, D1
Offset_0x01C424:
                add.w   $0034(A0), D1
                move.w  D1, $0008(A0)
                add.w   $0030(A0), D2
                move.w  D2, $000C(A0)
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x01C44C
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x01C44C:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_1C       ; Offset_0x01C45E
                bclr    #$07, $02(A2, D0)
J_DeleteObject_1C: ; Offset_0x01C45E:
                jmp     DeleteObject            ; (Offset_0x00D3B4)   
Machine_Mappings:
Offset_0x01C464:
                dc.w    Offset_0x01C46C-Offset_0x01C464
                dc.w    Offset_0x01C476-Offset_0x01C464
                dc.w    Offset_0x01C490-Offset_0x01C464
                dc.w    Offset_0x01C4E2-Offset_0x01C464
Offset_0x01C46C:
                dc.w    $0001
                dc.l    $F40E0025, $0012FFF0
Offset_0x01C476:
                dc.w    $0003
                dc.l    $F80D0031, $0018FFD8, $F80D0031, $0018FFF8
                dc.l    $F8050031, $00180018
Offset_0x01C490:
                dc.w    $000A
                dc.l    $E80E0039, $001CFFA0, $E80E0839, $081CFFC0
                dc.l    $E80E0039, $001CFFE0, $E80E0839, $081C0000
                dc.l    $E80E0039, $001C0020, $E80E0839, $081C0040
                dc.l    $00060045, $0022FFA0, $00060845, $0822FFB0
                dc.l    $00060045, $00220040, $00060845, $08220050
Offset_0x01C4E2:
                dc.w    $0001
                dc.l    $F40A0000, $0000FFF4                             
;=============================================================================== 
; Object 0x6E - Metropolis - Machine
; [ End ]                         
;===============================================================================                   
J_ModifySpriteAttr_2P_18: ; Offset_0x01C4EC:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_0C: ; Offset_0x01C4F2:
                jmp     SolidObject             ; (Offset_0x00F4A0)   
;=============================================================================== 
; Object 0x6F - Metropolis - Parallelogram Elevators
; [ Begin ]                         
;===============================================================================                    
Obj_Ox6F_Parallelogram_Elevator: ; Offset_0x01C4F8:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01C506(PC, D0), D1
                jmp     Offset_0x01C506(PC, D1)
Offset_0x01C506:
                dc.w    Offset_0x01C50A-Offset_0x01C506
                dc.w    Offset_0x01C570-Offset_0x01C506
Offset_0x01C50A:
                addq.b  #$02, $0024(A0)
                move.l  #Parallelogram_Elevator_Mappings, $0004(A0) ; Offset_0x01C7BE
                move.w  #$653F, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_19 ; Offset_0x01C844
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$80, $0019(A0)
                move.b  #$20, $0016(A0)
                move.w  $0008(A0), $0032(A0)
                move.w  $000C(A0), $0030(A0)
                move.b  $0028(A0), D0
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                lea     (Offset_0x01C632), A1
                move.w  $00(A1, D0), D0
                lea     $00(A1, D0), A1
                move.l  A1, $003C(A0)
                bsr     Offset_0x01C604
                bset    #$07, $0022(A0)
                andi.b  #$0F, $0028(A0)
Offset_0x01C570:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                add.w   D0, D0
                move.w  Offset_0x01C5DA(PC, D0), D1
                jsr     Offset_0x01C5DA(PC, D1)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  $0019(A0), D1
                lea     (Offset_0x01C6BE), A2
                bsr     Offset_0x01C84A
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x01C5AE
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x01C5AE:
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x01C5C2
                rts
Offset_0x01C5C2:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_1D       ; Offset_0x01C5D4
                bclr    #$07, $02(A2, D0)
J_DeleteObject_1D: ; Offset_0x01C5D4:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x01C5DA:
                dc.w    Offset_0x01C5E0-Offset_0x01C5DA
                dc.w    Offset_0x01C5E2-Offset_0x01C5DA
                dc.w    Offset_0x01C5F2-Offset_0x01C5DA
Offset_0x01C5E0:
                rts
Offset_0x01C5E2:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   Offset_0x01C5F0
                addq.b  #$01, $0028(A0)
Offset_0x01C5F0:
                rts
Offset_0x01C5F2:
                jsr     SpeedToPos              ; (Offset_0x00D27A)
                subq.w  #$01, $0034(A0)
                bne.s   Offset_0x01C602
                bsr     Offset_0x01C604
Offset_0x01C602:
                rts
Offset_0x01C604:
                moveq   #$00, D0
                move.b  $0038(A0), D0
                move.l  $003C(A0), A1
                move.w  (A1)+, D1
                lea     $00(A1, D0), A1
                move.w  (A1)+, $0010(A0)
                move.w  (A1)+, $0012(A0)
                move.w  (A1)+, $0034(A0)
                addq.b  #$06, $0038(A0)
                cmp.b   $0038(A0), D1
                bhi.s   Offset_0x01C630
                move.b  #$00, $0038(A0)
Offset_0x01C630:
                rts   
Offset_0x01C632:
                dc.w    Offset_0x01C63C-Offset_0x01C632
                dc.w    Offset_0x01C64A-Offset_0x01C632
                dc.w    Offset_0x01C658-Offset_0x01C632
                dc.w    Offset_0x01C672-Offset_0x01C632
                dc.w    Offset_0x01C6A4-Offset_0x01C632
Offset_0x01C63C:
                dc.w    $000C
                dc.b    $01, $00, $FF, $80, $01, $00, $FF, $00, $00, $80, $01, $00
Offset_0x01C64A:
                dc.w    $000C
                dc.b    $01, $00, $FF, $80, $01, $80, $FF, $00, $00, $80, $01, $80
Offset_0x01C658:
                dc.w    $0018
                dc.b    $FF, $00, $00, $80, $00, $80, $FF, $00, $00, $00, $01, $80, $01, $00, $FF, $80
                dc.b    $00, $80, $01, $00, $00, $00, $01, $80
Offset_0x01C672:
                dc.w    $0030
                dc.b    $01, $00, $FF, $80, $02, $00, $01, $00, $00, $00, $01, $00, $FF, $00, $00, $80
                dc.b    $01, $00, $01, $00, $00, $00, $01, $80, $FF, $00, $00, $00, $01, $80, $01, $00
                dc.b    $FF, $80, $01, $00, $FF, $00, $00, $00, $01, $00, $FF, $00, $00, $80, $02, $00
Offset_0x01C6A4:
                dc.w    $0018
                dc.b    $FF, $00, $00, $80, $01, $80, $01, $00, $00, $00, $02, $00, $FF, $00, $00, $00
                dc.b    $02, $00, $01, $00, $FF, $80, $01, $80  
Offset_0x01C6BE:
                dc.w    $E101, $E202, $E303, $E404, $E505, $E606, $E707, $E808
                dc.w    $E909, $EA0A, $EB0B, $EC0C, $ED0D, $EE0E, $EF0F, $F010
                dc.w    $F111, $F212, $F313, $F414, $F515, $F616, $F717, $F818
                dc.w    $F919, $FA1A, $FB1B, $FC1C, $FD1D, $FE1E, $FF1F, $0020
                dc.w    $0121, $0222, $0323, $0424, $0525, $0626, $0727, $0828
                dc.w    $0929, $0A2A, $0B2B, $0C2C, $0D2D, $0E2E, $0F2F, $1030
                dc.w    $1131, $1232, $1333, $1434, $1535, $1636, $1737, $1838
                dc.w    $1939, $1A3A, $1B3B, $1C3C, $1D3D, $1E3E, $1F3F, $2040
                dc.w    $2040, $203F, $203E, $203D, $203C, $203B, $203A, $2039
                dc.w    $2038, $2037, $2036, $2035, $2034, $2033, $2032, $2031
                dc.w    $2030, $202F, $202E, $202D, $202C, $202B, $202A, $2029
                dc.w    $2028, $2027, $2026, $2025, $2024, $2023, $2022, $2021
                dc.w    $2020, $201F, $201E, $201D, $201C, $201B, $201A, $2019
                dc.w    $2018, $2017, $2016, $2015, $2014, $2013, $2012, $2011
                dc.w    $2010, $200F, $200E, $200D, $200C, $200B, $200A, $2009
                dc.w    $2008, $2007, $2006, $2005, $2004, $2003, $2002, $2001   
Parallelogram_Elevator_Mappings:
Offset_0x01C7BE:
                dc.w    Offset_0x01C7C0-Offset_0x01C7BE
Offset_0x01C7C0:
                dc.w    $0010
                dc.l    $100D0000, $0000FF80, $000D0000, $0000FFA0
                dc.l    $100D0008, $0004FFA0, $F00D0000, $0000FFC0
                dc.l    $000F0010, $0008FFC0, $E00D0000, $0000FFE0
                dc.l    $F00D0008, $0004FFE0, $000F0010, $0008FFE0
                dc.l    $E00F0010, $00080000, $000D0008, $00040000
                dc.l    $100D1800, $18000000, $E00F0010, $00080020
                dc.l    $000D1800, $18000020, $E00D0008, $00040040
                dc.l    $F00D1800, $18000040, $E00D1800, $18000060                                                    
;=============================================================================== 
; Object 0x6F - Metropolis - Parallelogram Elevators
; [ End ]                         
;===============================================================================                
                nop                             ; Filler
J_ModifySpriteAttr_2P_19: ; Offset_0x01C844:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
Offset_0x01C84A:
                jmp     (Offset_0x00F59E)   
                
;=============================================================================== 
; Object 0x70 - Metropolis - Rotating Gears
; [ Begin ]                         
;===============================================================================                     
Obj_0x70_Rotating_Gears: ; Offset_0x01C850:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01C85E(PC, D0), D1
                jmp     Offset_0x01C85E(PC, D1)
Offset_0x01C85E:
                dc.w    Offset_0x01C862-Offset_0x01C85E
                dc.w    Offset_0x01C8E2-Offset_0x01C85E
Offset_0x01C862:
                moveq   #$07, D1
                moveq   #$00, D4
                lea     (Offset_0x01C9B6), A2
                move.l  A0, A1
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                bset    #$07, $0022(A0)
                bra.s   Offset_0x01C884
Offset_0x01C87E:                
                bsr     J_S1SingleObjectLoad_07  ; Offset_0x01CBB8
                bne.s   Offset_0x01C8DE
Offset_0x01C884:
                move.b  $0000(A0), $0000(A1)
                addq.b  #$02, $0024(A1)
                move.l  #Rotating_Gears_Mappings, $0004(A1) ; Offset_0x01CA16
                move.w  #$6378, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_01 ; Offset_0x01CBBE
                move.b  #$04, $0001(A1)
                move.b  #$04, $0018(A1)
                move.b  #$10, $0019(A1)
                move.w  D2, $0032(A1)
                move.w  D3, $0030(A1)
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, $0008(A1)
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D3, D0
                move.w  D0, $000C(A1)
                move.b  (A2)+, $001A(A1)
                move.w  D4, $0034(A1)
                addq.w  #$03, D4
                move.b  $0022(A0), $0022(A1)
Offset_0x01C8DE:
                dbra    D1, Offset_0x01C87E
Offset_0x01C8E2:
                move.w  $0008(A0), -(A7)
                move.b  ($FFFFFE05).w, D0
                move.b  D0, D1
                andi.w  #$000F, D0
                bne.s   Offset_0x01C95A
                move.w  $0036(A0), D1
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01C914
                subi.w  #$0018, D1
                bcc.s   Offset_0x01C932
                moveq   #$48, D1
                subq.w  #$03, $0034(A0)
                bcc.s   Offset_0x01C932
                move.w  #$0015, $0034(A0)
                bra.s   Offset_0x01C932
Offset_0x01C914:
                addi.w  #$0018, D1
                cmpi.w  #$0060, D1
                bcs.s   Offset_0x01C932
                moveq   #$00, D1
                addq.w  #$03, $0034(A0)
                cmpi.w  #$0018, $0034(A0)
                bcs.s   Offset_0x01C932
                move.w  #$0000, $0034(A0)
Offset_0x01C932:
                move.w  D1, $0036(A0)
                add.w   $0034(A0), D1
                lea     Offset_0x01C9B6(PC, D1), A1
                move.b  (A1)+, D0
                ext.w   D0
                add.w   $0032(A0), D0
                move.w  D0, $0008(A0)
                move.b  (A1)+, D0
                ext.w   D0
                add.w   $0030(A0), D0
                move.w  D0, $000C(A0)
                move.b  (A1)+, $001A(A0)
Offset_0x01C95A:
                move.b  $001A(A0), D0
                add.w   D0, D0
                andi.w  #$001E, D0
                moveq   #$00, D1
                moveq   #$00, D2
                move.b  Offset_0x01C996(PC, D0), D1
                move.b  Offset_0x01C997(PC, D0), D2
                move.w  D2, D3
                move.w  (A7)+, D4
                bsr     J_SolidObject_0D        ; Offset_0x01CBC4
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_1E       ; Offset_0x01C990
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_1E: ; Offset_0x01C990:
                jmp     DeleteObject            ; (Offset_0x00D3B4)   

Offset_0x01C996:                  
                dc.b    $10
Offset_0x01C997:
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $0C, $10
                dc.b    $08, $10, $0C, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10
Offset_0x01C9B6:
                dc.b    $00, $B8, $00, $32, $CE, $04, $48, $00, $08, $32, $32, $0C, $00, $48, $10, $CE
                dc.b    $32, $14, $B8, $00, $18, $CE, $CE, $1C, $0D, $B8, $01, $3F, $DA, $05, $48, $0C
                dc.b    $09, $27, $3C, $0D, $F3, $48, $11, $C1, $26, $15, $B8, $F4, $19, $D9, $C4, $1D
                dc.b    $19, $BC, $02, $46, $E9, $06, $46, $17, $0A, $19, $44, $0E, $E7, $44, $12, $BA
                dc.b    $17, $16, $BA, $E9, $1A, $E7, $BC, $1E, $27, $C4, $03, $48, $F4, $07, $3F, $26
                dc.b    $0B, $0D, $48, $0F, $D9, $3C, $13, $B8, $0C, $17, $C1, $DA, $1B, $F3, $B8, $1F
Rotating_Gears_Mappings:
Offset_0x01CA16:
                dc.w    Offset_0x01CA56-Offset_0x01CA16
                dc.w    Offset_0x01CA68-Offset_0x01CA16
                dc.w    Offset_0x01CA72-Offset_0x01CA16
                dc.w    Offset_0x01CA7C-Offset_0x01CA16
                dc.w    Offset_0x01CA86-Offset_0x01CA16
                dc.w    Offset_0x01CA90-Offset_0x01CA16
                dc.w    Offset_0x01CA9A-Offset_0x01CA16
                dc.w    Offset_0x01CAA4-Offset_0x01CA16
                dc.w    Offset_0x01CAAE-Offset_0x01CA16
                dc.w    Offset_0x01CAC0-Offset_0x01CA16
                dc.w    Offset_0x01CACA-Offset_0x01CA16
                dc.w    Offset_0x01CAD4-Offset_0x01CA16
                dc.w    Offset_0x01CADE-Offset_0x01CA16
                dc.w    Offset_0x01CAE8-Offset_0x01CA16
                dc.w    Offset_0x01CAF2-Offset_0x01CA16
                dc.w    Offset_0x01CAFC-Offset_0x01CA16
                dc.w    Offset_0x01CB06-Offset_0x01CA16
                dc.w    Offset_0x01CB18-Offset_0x01CA16
                dc.w    Offset_0x01CB22-Offset_0x01CA16
                dc.w    Offset_0x01CB2C-Offset_0x01CA16
                dc.w    Offset_0x01CB36-Offset_0x01CA16
                dc.w    Offset_0x01CB40-Offset_0x01CA16
                dc.w    Offset_0x01CB4A-Offset_0x01CA16
                dc.w    Offset_0x01CB54-Offset_0x01CA16
                dc.w    Offset_0x01CB5E-Offset_0x01CA16
                dc.w    Offset_0x01CB70-Offset_0x01CA16
                dc.w    Offset_0x01CB7A-Offset_0x01CA16
                dc.w    Offset_0x01CB84-Offset_0x01CA16
                dc.w    Offset_0x01CB8E-Offset_0x01CA16
                dc.w    Offset_0x01CB98-Offset_0x01CA16
                dc.w    Offset_0x01CBA2-Offset_0x01CA16
                dc.w    Offset_0x01CBAC-Offset_0x01CA16
Offset_0x01CA56:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F0070800, $08000000
Offset_0x01CA68:
                dc.w    $0001
                dc.l    $F00B0808, $0804FFF4
Offset_0x01CA72:
                dc.w    $0001
                dc.l    $F00F0814, $080AFFF0
Offset_0x01CA7C:
                dc.w    $0001
                dc.l    $F00F0824, $0812FFF0
Offset_0x01CA86:
                dc.w    $0001
                dc.l    $F00F0834, $081AFFF0
Offset_0x01CA90:
                dc.w    $0001
                dc.l    $F00F0844, $0822FFF0
Offset_0x01CA9A:
                dc.w    $0001
                dc.l    $F00F0854, $082AFFF0
Offset_0x01CAA4:
                dc.w    $0001
                dc.l    $F40E0864, $0832FFF0
Offset_0x01CAAE:
                dc.w    $0002
                dc.l    $F00D0870, $0838FFF0, $000D1870, $1838FFF0
Offset_0x01CAC0:
                dc.w    $0001
                dc.l    $F40E1864, $1832FFF0
Offset_0x01CACA:
                dc.w    $0001
                dc.l    $F00F1854, $182AFFF0
Offset_0x01CAD4:
                dc.w    $0001
                dc.l    $F00F1844, $1822FFF0
Offset_0x01CADE:
                dc.w    $0001
                dc.l    $F00F1834, $181AFFF0
Offset_0x01CAE8:
                dc.w    $0001
                dc.l    $F00F1824, $1812FFF0
Offset_0x01CAF2:
                dc.w    $0001
                dc.l    $F00F1814, $180AFFF0
Offset_0x01CAFC:
                dc.w    $0001
                dc.l    $F00B1808, $1804FFF4
Offset_0x01CB06:
                dc.w    $0002
                dc.l    $F0071000, $1000FFF0, $F0071800, $18000000
Offset_0x01CB18:
                dc.w    $0001
                dc.l    $F00B1008, $1004FFF4
Offset_0x01CB22:
                dc.w    $0001
                dc.l    $F00F1014, $100AFFF0
Offset_0x01CB2C:
                dc.w    $0001
                dc.l    $F00F1024, $1012FFF0
Offset_0x01CB36:
                dc.w    $0001
                dc.l    $F00F1034, $101AFFF0
Offset_0x01CB40:
                dc.w    $0001
                dc.l    $F00F1044, $1022FFF0
Offset_0x01CB4A:
                dc.w    $0001
                dc.l    $F00F1054, $102AFFF0
Offset_0x01CB54:
                dc.w    $0001
                dc.l    $F40E1064, $1032FFF0
Offset_0x01CB5E:
                dc.w    $0002
                dc.l    $F00D0070, $0038FFF0, $000D1070, $1038FFF0
Offset_0x01CB70:
                dc.w    $0001
                dc.l    $F40E0064, $0032FFF0
Offset_0x01CB7A:
                dc.w    $0001
                dc.l    $F00F0054, $002AFFF0
Offset_0x01CB84:
                dc.w    $0001
                dc.l    $F00F0044, $0022FFF0
Offset_0x01CB8E:
                dc.w    $0001
                dc.l    $F00F0034, $001AFFF0
Offset_0x01CB98:
                dc.w    $0001
                dc.l    $F00F0024, $0012FFF0
Offset_0x01CBA2:
                dc.w    $0001
                dc.l    $F00F0014, $000AFFF0
Offset_0x01CBAC:
                dc.w    $0001
                dc.l    $F00B0008, $0004FFF4                                                        
;=============================================================================== 
; Object 0x70 - Metropolis - Rotating Gears
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler
J_S1SingleObjectLoad_07: ; Offset_0x01CBB8:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_ModifyA1SpriteAttr_2P_01: ; Offset_0x01CBBE:
                jmp     ModifyA1SpriteAttr_2P   ; (Offset_0x00DC4C)
J_SolidObject_0D: ; Offset_0x01CBC4:
                jmp     SolidObject             ; (Offset_0x00F4A0)  
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x72 - Metropolis - Conveyor Belt Attributes
; [ Begin ]                         
;===============================================================================                   
Obj_0x72_Conveyor_Belt_Attributes: ; Offset_0x01CBCC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01CBDA(PC, D0), D1
                jmp     Offset_0x01CBDA(PC, D1)
Offset_0x01CBDA:
                dc.w    Offset_0x01CBDE-Offset_0x01CBDA
                dc.w    Offset_0x01CBFE-Offset_0x01CBDA
Offset_0x01CBDE:
                addq.b  #$02, $0024(A0)
                move.b  $0028(A0), D0
                lsl.b   #$04, D0
                move.b  D0, $0038(A0)
                move.w  #$0002, $0036(A0)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01CBFE
                neg.w   $0036(A0)
Offset_0x01CBFE:
                lea     ($FFFFB000).w, A1
                bsr.s   Offset_0x01CC0E
                lea     ($FFFFB040).w, A1
                bsr.s   Offset_0x01CC0E
                bra     Offset_0x01CC4C
Offset_0x01CC0E:
                moveq   #$00, D2
                move.b  $0038(A0), D2
                move.w  D2, D3
                add.w   D3, D3
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                add.w   D2, D0
                cmp.w   D3, D0
                bcc.s   Offset_0x01CC48
                move.w  $000C(A1), D1
                sub.w   $000C(A0), D1
                addi.w  #$0030, D1
                cmpi.w  #$0030, D1
                bcc.s   Offset_0x01CC48
                btst    #$01, $0022(A1)
                bne.s   Offset_0x01CC48
                move.w  $0036(A0), D0
                add.w   D0, $0008(A1)
Offset_0x01CC48:
                rts
                
;=============================================================================== 
; Object 0x72 - Metropolis - Conveyor Belt Attributes
; [ End ]                         
;===============================================================================             
                nop                             ; Filler
Offset_0x01CC4C:
                jmp     (Offset_0x00D30C)     
                dc.w    $000                    ; Filler
;=============================================================================== 
; Object 0x73 - Dust Hill - Rotating Rings - Sonic can walk Through
; [ Begin ]                         
;===============================================================================  
Obj_0x73_Rotating_Rings: ; Offset_0x01CC54:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01CC62(PC, D0), D1
                jmp     Offset_0x01CC62(PC, D1)
Offset_0x01CC62:
                dc.w    Offset_0x01CC68-Offset_0x01CC62
                dc.w    Offset_0x01CD56-Offset_0x01CC62
                dc.w    Offset_0x01CDFE-Offset_0x01CC62
Offset_0x01CC68:
                addq.b  #$02, $0024(A0)
                move.l  #Rotating_Rings_Mappings, $0004(A0) ; Offset_0x01CE1C
                move.w  #$26BC, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_1A ; Offset_0x01CE3A
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$08, $0019(A0)
                move.w  $0008(A0), $003A(A0)
                move.w  $000C(A0), $0038(A0)
                move.b  #$00, $0020(A0)
                bset    #$07, $0022(A0)
                move.b  $0028(A0), D1
                andi.b  #$F0, D1
                ext.w   D1
                asl.w   #$03, D1
                move.w  D1, $003E(A0)
                move.b  $0022(A0), D0
                ror.b   #$02, D0
                andi.b  #$C0, D0
                move.b  D0, $0026(A0)
                lea     $0029(A0), A2
                move.b  $0028(A0), D1
                andi.w  #$0007, D1
                move.b  #$00, (A2)+
                move.w  D1, D3
                lsl.w   #$04, D3
                move.b  D3, $003C(A0)
                subq.w  #$01, D1
                bcs.s   Offset_0x01CD48
                btst    #$03, $0028(A0)
                beq.s   Offset_0x01CCEE
                subq.w  #$01, D1
                bcs.s   Offset_0x01CD48
Offset_0x01CCEE:
                bsr     J_SingleObjectLoad_06   ; Offset_0x01CE2E
                bne.s   Offset_0x01CD48
                addq.b  #$01, $0029(A0)
                move.w  A1, D5
                subi.w  #$B000, D5
                lsr.w   #$06, D5
                andi.w  #$007F, D5
                move.b  D5, (A2)+
                move.b  #$04, $0024(A1)
                move.b  $0000(A0), $0000(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0018(A0), $0018(A1)
                move.b  $0019(A0), $0019(A1)
                move.b  $0020(A0), $0020(A1)
                move.b  $0022(A0), $0022(A1)
                subi.b  #$10, D3
                move.b  D3, $003C(A1)
                dbra    D1, Offset_0x01CCEE
Offset_0x01CD48:
                move.w  A0, D5
                subi.w  #$B000, D5
                lsr.w   #$06, D5
                andi.w  #$007F, D5
                move.b  D5, (A2)+
Offset_0x01CD56:
                move.w  $0008(A0), -(A7)
                bsr     Offset_0x01CD74
                move.w  #$0008, D1
                move.w  #$0008, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     J_SolidObject_0E        ; Offset_0x01CE40
                bra     Offset_0x01CDC6
Offset_0x01CD74:
                move.w  $003E(A0), D0
                add.w   D0, $0026(A0)
                move.b  $0026(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                move.w  $0038(A0), D2
                move.w  $003A(A0), D3
                lea     $0029(A0), A2
                moveq   #$00, D6
                move.b  (A2)+, D6
Offset_0x01CD96:                
                moveq   #$00, D4
                move.b  (A2)+, D4
                lsl.w   #$06, D4
                addi.l  #$FFFFB000, D4
                move.l  D4, A1
                moveq   #$00, D4
                move.b  $003C(A1), D4
                move.l  D4, D5
                muls.w  D0, D4
                asr.l   #$08, D4
                muls.w  D1, D5
                asr.l   #$08, D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D4, $000C(A1)
                move.w  D5, $0008(A1)
                dbra    D6, Offset_0x01CD96
                rts
Offset_0x01CDC6:
                move.w  $003A(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Offset_0x01CDDE
                bra     J_DisplaySprite_0B      ; Offset_0x01CE28
Offset_0x01CDDE:
                moveq   #$00, D2
                lea     $0029(A0), A2
                move.b  (A2)+, D2
Offset_0x01CDE6:                
                moveq   #$00, D0
                move.b  (A2)+, D0
                lsl.w   #$06, D0
                addi.l  #$FFFFB000, D0
                move.l  D0, A1
                bsr     Offset_0x01CE34
                dbra    D2, Offset_0x01CDE6
                rts
Offset_0x01CDFE:
                move.w  #$0008, D1
                move.w  #$0008, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0036(A0), D4
                bsr     J_SolidObject_0E        ; Offset_0x01CE40
                move.w  $0008(A0), $0036(A0)
                bra     J_DisplaySprite_0B      ; Offset_0x01CE28  
Rotating_Rings_Mappings:                     
Offset_0x01CE1C:
                dc.w    Offset_0x01CE1E-Offset_0x01CE1C
Offset_0x01CE1E:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8                       
;=============================================================================== 
; Object 0x73 - Dust Hill - Rotating Rings - Sonic can walk Through
; [ End ]                         
;===============================================================================
J_DisplaySprite_0B: ; Offset_0x01CE28:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_SingleObjectLoad_06: ; Offset_0x01CE2E:
                jmp     SingleObjectLoad        ; (Offset_0x00E772)
Offset_0x01CE34:
                jmp     (Offset_0x00D3B6)
J_ModifySpriteAttr_2P_1A: ; Offset_0x01CE3A:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_0E: ; Offset_0x01CE40:
                jmp     SolidObject             ; (Offset_0x00F4A0)      
                dc.w    $0000                   ; Filler     
;=============================================================================== 
; Object 0x75 - Dust Hill - Spikeball with chain
; [ Begin ]                         
;===============================================================================                
Obj_0x75_Spikeball_Chain: ; Offset_0x01CE48:
                btst    #$06, $0001(A0)
                bne     Offset_0x01CE60
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01CE68(PC, D0), D1
                jmp     Offset_0x01CE68(PC, D1)
Offset_0x01CE60:
                move.w  #$0280, D0
                bra     J_DisplaySprite_Param_00  ; Offset_0x01D040
Offset_0x01CE68:
                dc.w    Offset_0x01CE6E-Offset_0x01CE68
                dc.w    Offset_0x01CF4A-Offset_0x01CE68
                dc.w    Offset_0x01CFEC-Offset_0x01CE68
Offset_0x01CE6E:
                addq.b  #$02, $0024(A0)
                move.l  #Spikeball_Chain_Mappings, $0004(A0) ; Offset_0x01D00A
                move.w  #$2000, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_1B ; Offset_0x01D064
                move.b  #$04, $0001(A0)
                move.b  #$05, $0018(A0)
                move.b  #$10, $0019(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0032(A0)
                move.b  $0028(A0), D1
                move.b  D1, D0
                andi.w  #$000F, D1
                andi.b  #$F0, D0
                ext.w   D0
                asl.w   #$03, D0
                move.w  D0, $0034(A0)
                move.b  $0022(A0), D0
                ror.b   #$02, D0
                andi.b  #$C0, D0
                move.b  D0, $0026(A0)
                cmpi.b  #$0F, D1
                bne.s   Offset_0x01CEDE
                addq.b  #$02, $0024(A0)
                move.b  #$04, $0018(A0)
                move.b  #$02, $001A(A0)
                rts
Offset_0x01CEDE:
                move.b  #$9A, $0020(A0)
                bsr     J_S1SingleObjectLoad_08  ; Offset_0x01D05E
                bne.s   Offset_0x01CF4A
                move.b  $0000(A0), $0000(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  $0002(A0), $0002(A1)
                move.b  #$04, $0001(A1)
                bset    #$06, $0001(A1)
                move.b  #$40, $000E(A1)
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                move.b  D1, $000F(A1)
                subq.w  #$01, D1
                lea     $0010(A1), A2
Offset_0x01CF20:                
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                move.w  #$0001, (A2)+
                dbra    D1, Offset_0x01CF20
                move.w  D2, $0008(A1)
                move.w  D3, $000C(A1)
                move.b  #$00, $000B(A1)
                move.l  A1, $003C(A0)
                move.b  #$40, $0014(A1)
                bset    #$04, $0001(A1)
Offset_0x01CF4A:
                move.w  $0034(A0), D0
                add.w   D0, $0026(A0)
                move.b  $0026(A0), D0
                bsr     Offset_0x01D06A
                move.w  $0032(A0), D2
                move.w  $0030(A0), D3
                moveq   #$00, D6
                move.l  $003C(A0), A1
                move.b  $000F(A1), D6
                subq.w  #$01, D6
                bcs.s   Offset_0x01CFBE
                asl.w   #$04, D0
                ext.l   D0
                asl.l   #$08, D0
                asl.w   #$04, D1
                ext.l   D1
                asl.l   #$08, D1
                moveq   #$00, D4
                moveq   #$00, D5
                lea     $0010(A1), A2
Offset_0x01CF84:                
                movem.l D4/D5, -(A7)
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, (A2)+
                move.w  D4, (A2)+
                movem.l (A7)+, D4/D5
                add.l   D0, D4
                add.l   D1, D5
                addq.w  #$02, A2
                dbra    D6, Offset_0x01CF84
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, $0008(A0)
                move.w  D4, $000C(A0)
                move.w  $0028(A1), $0008(A1)
                move.w  $002A(A1), $000C(A1)
Offset_0x01CFBE:
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x01CFC8
                bra     J_DisplaySprite_0C      ; Offset_0x01D046
Offset_0x01CFC8:
                move.w  $0030(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Offset_0x01CFE0
                bra     J_DisplaySprite_0C      ; Offset_0x01D046
Offset_0x01CFE0:
                move.l  $003C(A0), A1
                bsr     Offset_0x01D058
                bra     J_DeleteObject_1F       ; Offset_0x01D04C
Offset_0x01CFEC:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_0F        ; Offset_0x01D070
                bra     J_MarkObjGone_11        ; Offset_0x01D052   
Spikeball_Chain_Mappings:
Offset_0x01D00A:
                dc.w    Offset_0x01D010-Offset_0x01D00A
                dc.w    Offset_0x01D022-Offset_0x01D00A
                dc.w    Offset_0x01D02C-Offset_0x01D00A
Offset_0x01D010:
                dc.w    $0002
                dc.l    $F00D007A, $003DFFF0, $000D187A, $183DFFF0
Offset_0x01D022:
                dc.w    $0001
                dc.l    $F8054066, $4033FFF8
Offset_0x01D02C:
                dc.w    $0002
                dc.l    $F0074040, $4020FFF0, $F0074840, $48200000                             
;=============================================================================== 
; Object 0x75 - Dust Hill - Spikeball with chain
; [ End ]                         
;===============================================================================  
                nop                             ; Filler
J_DisplaySprite_Param_00: ; Offset_0x01D040:                               
                jmp     DisplaySprite_Param     ; (Offset_0x00D3FE)
J_DisplaySprite_0C: ; Offset_0x01D046:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_1F: ; Offset_0x01D04C:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_MarkObjGone_11: ; Offset_0x01D052:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
Offset_0x01D058:
                jmp     (Offset_0x00D3B6)
J_S1SingleObjectLoad_08: ; Offset_0x01D05E:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_ModifySpriteAttr_2P_1B: ; Offset_0x01D064:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
Offset_0x01D06A:
                jmp     CalcSine                ; Offset_0x00320A
J_SolidObject_0F: ; Offset_0x01D070:
                jmp     SolidObject             ; (Offset_0x00F4A0)     
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x76 - Dust Hill - Platform with spikes on sides 
; [ Begin ]                         
;===============================================================================                    
Obj_0x76_Platform_Spikes: ; Offset_0x01D078:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01D086(PC, D0), D1
                jmp     Offset_0x01D086(PC, D1)
Offset_0x01D086:
                dc.w    Offset_0x01D08E-Offset_0x01D086
                dc.w    Offset_0x01D0DE-Offset_0x01D086
Offset_0x01D08A:
                dc.b    $40, $10, $00, $00
Offset_0x01D08E:
                addq.b  #$02, $0024(A0)
                move.l  #Platform_Spikes_Mappings, $0004(A0) ; Offset_0x01D1BA
                move.w  #$0000, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_1C ; Offset_0x01D1F6
                ori.b   #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     Offset_0x01D08A(PC, D0), A2
                move.b  (A2)+, $0019(A0)
                move.b  (A2)+, $0016(A0)
                move.b  (A2)+, $001A(A0)
                move.w  $0008(A0), $0034(A0)
                move.w  $000C(A0), $0030(A0)
                andi.w  #$000F, $0028(A0)
Offset_0x01D0DE:
                move.w  $0008(A0), -(A7)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.w  Offset_0x01D14A(PC, D0), D1
                jsr     Offset_0x01D14A(PC, D1)
                move.w  (A7)+, D4
                tst.b   $0001(A0)
                bpl.s   Offset_0x01D142
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  $0016(A0), D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     J_SolidObject_10        ; Offset_0x01D1FC
                swap.w  D6
                andi.w  #$0003, D6
                beq.s   Offset_0x01D142
                move.b  D6, D0
                andi.b  #$01, D0
                beq.s   Offset_0x01D12E
                lea     ($FFFFB000).w, A1
                bsr     Offset_0x01D1F0
                bclr    #$05, $0022(A0)
Offset_0x01D12E:
                andi.b  #$02, D6
                beq.s   Offset_0x01D142
                lea     ($FFFFB040).w, A1
                bsr     Offset_0x01D1F0
                bclr    #$06, $0022(A0)
Offset_0x01D142:
                move.w  $0034(A0), D0
                bra     Offset_0x01D202
Offset_0x01D14A:                  
                dc.w    Offset_0x01D14E-Offset_0x01D14A
                dc.w    Offset_0x01D19E-Offset_0x01D14A
Offset_0x01D14E:
                lea     ($FFFFB000).w, A1
                bsr.s   Offset_0x01D158
                lea     ($FFFFB040).w, A1
Offset_0x01D158:
                btst    #$01, $0022(A1)
                bne.s   Offset_0x01D19C
                move.w  $0008(A1), D0
                sub.w   $0008(A0), D0
                addi.w  #$00C0, D0
Offset_0x01D16C:
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01D178
                subi.w  #$0100, D0
Offset_0x01D178:
                cmpi.w  #$0080, D0
                bcc.s   Offset_0x01D19C
                move.w  $000C(A1), D0
                sub.w   $000C(A0), D0
                addi.w  #$0010, D0
                cmpi.w  #$0020, D0
                bcc.s   Offset_0x01D19C
                move.b  #$02, $0028(A0)
                move.w  #$0080, $0036(A0)
Offset_0x01D19C:
                rts
Offset_0x01D19E:
                tst.w   $0036(A0)
                beq.s   Offset_0x01D1B8
                subq.w  #$01, $0036(A0)
                moveq   #$FFFFFFFF, D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01D1B4
                neg.w   D0
Offset_0x01D1B4:
                add.w   D0, $0008(A0)
Offset_0x01D1B8:
                rts
Platform_Spikes_Mappings:
Offset_0x01D1BA:
                dc.w    Offset_0x01D1BC-Offset_0x01D1BA
Offset_0x01D1BC:
                dc.w    $0006
                dc.l    $F005242C, $2216FFC0, $0005242C, $2216FFC0
                dc.l    $F0076040, $6020FFD0, $F00F6048, $6024FFE0
                dc.l    $F00F6048, $60240000, $F00F6048, $60240020                
;=============================================================================== 
; Object 0x76 - Dust Hill - Platform with spikes on sides 
; [ End ]                         
;===============================================================================                   
                nop                             ; Filler
Offset_0x01D1F0:
                jmp     Touch_Spikes            ; (Offset_0x00CAD0)
J_ModifySpriteAttr_2P_1C: ; Offset_0x01D1F6:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_10: ; Offset_0x01D1FC:
                jmp     SolidObject             ; (Offset_0x00F4A0)
Offset_0x01D202:
                jmp     (Offset_0x00D2D8)
;=============================================================================== 
; Object 0x77 - Dust Hill - Bridge 
; [ Begin ]                         
;===============================================================================                    
Obj_0x77_Bridge: ; Offset_0x01D208:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01D216(PC, D0), D1
                jmp     Offset_0x01D216(PC, D1)
Offset_0x01D216:
                dc.w    Offset_0x01D21A-Offset_0x01D216
                dc.w    Offset_0x01D23C-Offset_0x01D216
Offset_0x01D21A:
                addq.b  #$02, $0024(A0)
                move.l  #Dhz_Bridge_Mappings, $0004(A0) ; Offset_0x01D2E0
                move.w  #$643C, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_1D ; Offset_0x01D3B2
                ori.b   #$04, $0001(A0)
                move.b  #$80, $0019(A0)
Offset_0x01D23C:
                tst.b   $0034(A0)
                bne.s   Offset_0x01D270
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  $0028(A0), D0
                btst    #$00, $00(A2, D0)
                beq.s   Offset_0x01D270
                move.b  #$01, $0034(A0)
                bchg    #$00, $001C(A0)
                tst.b   $0001(A0)
                bpl.s   Offset_0x01D270
                move.w  #$00BB, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x01D270:
                lea     (Offset_0x01D2D0), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
                tst.b   $001A(A0)
                bne.s   Offset_0x01D29A
                move.w  #$004B, D1
                move.w  #$0008, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_11        ; Offset_0x01D3B8
                bra     J_MarkObjGone_12        ; Offset_0x01D3AC
Offset_0x01D29A:
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   Offset_0x01D2CC
                move.b  D0, D1
                andi.b  #$08, D0
                beq.s   Offset_0x01D2B6
                lea     ($FFFFB000).w, A1
                bclr    #$03, $0022(A1)
Offset_0x01D2B6:
                andi.b  #$10, D1
                beq.s   Offset_0x01D2C6
                lea     ($FFFFB040).w, A1
                bclr    #$03, $0022(A1)
Offset_0x01D2C6:
                andi.b  #$E7, $0022(A0)
Offset_0x01D2CC:
                bra     J_MarkObjGone_12        ; Offset_0x01D3AC  

Offset_0x01D2D0:               
                dc.w    Offset_0x01D2D4-Offset_0x01D2D0
                dc.w    Offset_0x01D2DA-Offset_0x01D2D0
Offset_0x01D2D4:
                dc.b    $03, $02, $01, $00, $FE, $01
Offset_0x01D2DA:
                dc.b    $03, $00, $01, $02, $FE, $01
Dhz_Bridge_Mappings:                
Offset_0x01D2E0:
                dc.w    Offset_0x01D2E6-Offset_0x01D2E0
                dc.w    Offset_0x01D328-Offset_0x01D2E0
                dc.w    Offset_0x01D36A-Offset_0x01D2E0                
Offset_0x01D2E6:
                dc.w    $0008
                dc.l    $F8050000, $0000FFC0, $F8050000, $0000FFD0
                dc.l    $F8050000, $0000FFE0, $F8050000, $0000FFF0
                dc.l    $F8050000, $00000000, $F8050000, $00000010
                dc.l    $F8050000, $00000020, $F8050000, $00000030
Offset_0x01D328:
                dc.w    $0008
                dc.l    $F8050000, $0000FFC0, $04050000, $0000FFCC
                dc.l    $10050000, $0000FFD8, $1C050000, $0000FFE4
                dc.l    $1C050000, $0000000C, $10050000, $00000018
                dc.l    $04050000, $00000024, $F8050000, $00000030
Offset_0x01D36A:
                dc.w    $0008
                dc.l    $F8050000, $0000FFC0, $08050000, $0000FFC0
                dc.l    $18050000, $0000FFC0, $28050000, $0000FFC0
                dc.l    $F8050000, $00000030, $08050000, $00000030
                dc.l    $18050000, $00000030, $28050000, $00000030                            
;=============================================================================== 
; Object 0x77 - Dust Hill - Bridge 
; [ End ]                         
;===============================================================================  
J_MarkObjGone_12: ; Offset_0x01D3AC:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_ModifySpriteAttr_2P_1D: ; Offset_0x01D3B2:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
J_SolidObject_11: ; Offset_0x01D3B8:
                jmp     SolidObject             ; (Offset_0x00F4A0)
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x78 - Chemical Plant - Rotanting Platforms / Down when Touch Platform 
; [ Begin ]                         
;===============================================================================                  
Obj_0x78_Rotating_Platforms: ; Offset_0x01D3C0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01D3D6(PC, D0), D1
                jsr     Offset_0x01D3D6(PC, D1)
                move.w  $0030(A0), D0
                bra     Offset_0x01D58E
Offset_0x01D3D6:
                dc.w    Offset_0x01D3DC-Offset_0x01D3D6
                dc.w    Offset_0x01D460-Offset_0x01D3D6
                dc.w    Offset_0x01D474-Offset_0x01D3D6
Offset_0x01D3DC:
                addq.b  #$02, $0024(A0)
                moveq   #$34, D3
                moveq   #$02, D4
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01D3F0
                moveq   #$3A, D3
                moveq   #$FFFFFFFE, D4
Offset_0x01D3F0:
                move.w  $0008(A0), D2
                move.l  A0, A1
                moveq   #$03, D1
                bra.s   Offset_0x01D408
Offset_0x01D3FA:                
                bsr     J_S1SingleObjectLoad_09 ; Offset_0x01D57C
                bne     Offset_0x01D460
                move.b  #$04, $0024(A1)
Offset_0x01D408:
                move.b  $0000(A0), $0000(A1)
                move.l  #Block_Mappings, $0004(A1) ; Offset_0x01BF4A
                move.w  #$6418, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_02 ; Offset_0x01D582
                move.b  #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$10, $0019(A1)
                move.b  $0028(A0), $0028(A1)
                move.w  D2, $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  $0008(A0), $0030(A1)
                move.w  $000C(A1), $0032(A1)
                addi.w  #$0020, D2
                move.b  D3, $002F(A1)
                move.l  A0, $003C(A1)
                add.b   D4, D3
                dbra    D1, Offset_0x01D3FA
Offset_0x01D460:
                moveq   #$00, D0
                move.b  $0028(A0), D0
                andi.w  #$0007, D0
                add.w   D0, D0
                move.w  Offset_0x01D4AC(PC, D0), D1
                jsr     Offset_0x01D4AC(PC, D1)
Offset_0x01D474:
                move.l  $003C(A0), A2
                moveq   #$00, D0
                move.b  $002F(A0), D0
                move.w  $00(A2, D0), D0
                add.w   $0032(A0), D0
                move.w  D0, $000C(A0)
                moveq   #$00, D1
                move.b  $0019(A0), D1
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  $0008(A0), D4
                bsr     J_SolidObject_12        ; Offset_0x01D588
                swap.w  D6
                or.b    D6, $002E(A2)
                rts
Offset_0x01D4AC:
                dc.w    Offset_0x01D4BC-Offset_0x01D4AC
                dc.w    Offset_0x01D528-Offset_0x01D4AC
                dc.w    Offset_0x01D4E0-Offset_0x01D4AC
                dc.w    Offset_0x01D528-Offset_0x01D4AC
                dc.w    Offset_0x01D4BC-Offset_0x01D4AC
                dc.w    Offset_0x01D552-Offset_0x01D4AC
                dc.w    Offset_0x01D4E0-Offset_0x01D4AC
                dc.w    Offset_0x01D552-Offset_0x01D4AC
Offset_0x01D4BC:
                tst.w   $002C(A0)
                bne.s   Offset_0x01D4D4
                move.b  $002E(A0), D0
                andi.b  #$30, D0
                beq.s   Offset_0x01D4D2
                move.w  #$001E, $002C(A0)
Offset_0x01D4D2:
                rts
Offset_0x01D4D4:
                subq.w  #$01, $002C(A0)
                bne.s   Offset_0x01D4D2
                addq.b  #$01, $0028(A0)
                rts
Offset_0x01D4E0:
                tst.w   $002C(A0)
                bne.s   Offset_0x01D4F8
                move.b  $002E(A0), D0
                andi.b  #$0C, D0
                beq.s   Offset_0x01D4F6
                move.w  #$003C, $002C(A0)
Offset_0x01D4F6:
                rts
Offset_0x01D4F8:
                subq.w  #$01, $002C(A0)
                bne.s   Offset_0x01D504
                addq.b  #$01, $0028(A0)
                rts
Offset_0x01D504:
                lea     $0034(A0), A1
                move.w  $002C(A0), D0
                lsr.b   #$02, D0
                andi.b  #$01, D0
                move.w  D0, (A1)+
                eori.b  #$01, D0
                move.w  D0, (A1)+
                eori.b  #$01, D0
                move.w  D0, (A1)+
                eori.b  #$01, D0
                move.w  D0, (A1)+
                rts
Offset_0x01D528:
                lea     $0034(A0), A1
                cmpi.w  #$0080, (A1)
                beq.s   Offset_0x01D550
                addq.w  #$01, (A1)
                moveq   #$00, D1
                move.w  (A1)+, D1
                swap.w  D1
                lsr.l   #$01, D1
                move.l  D1, D2
                lsr.l   #$01, D1
                move.l  D1, D3
                add.l   D2, D3
                swap.w  D1
                swap.w  D2
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D2, (A1)+
                move.w  D1, (A1)+
Offset_0x01D550:
                rts
Offset_0x01D552:
                lea     $0034(A0), A1
                cmpi.w  #$FF80, (A1)
                beq.s   Offset_0x01D57A
                subq.w  #$01, (A1)
                moveq   #$00, D1
                move.w  (A1)+, D1
                swap.w  D1
                asr.l   #$01, D1
                move.l  D1, D2
                asr.l   #$01, D1
                move.l  D1, D3
                add.l   D2, D3
                swap.w  D1
                swap.w  D2
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D2, (A1)+
                move.w  D1, (A1)+
Offset_0x01D57A:
                rts   
;=============================================================================== 
; Object 0x78 - Chemical Plant - Rotanting Platforms / Down when Touch Platform 
; [ End ]                         
;===============================================================================                   
J_S1SingleObjectLoad_09: ; Offset_0x01D57C:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_ModifyA1SpriteAttr_2P_02: ; Offset_0x01D582:
                jmp     ModifyA1SpriteAttr_2P   ; (Offset_0x00DC4C)
J_SolidObject_12: ; Offset_0x01D588:
                jmp     SolidObject             ; (Offset_0x00F4A0)
Offset_0x01D58E:
                jmp     (Offset_0x00D2D8)  
;=============================================================================== 
; Object 0x7A - Chemical Plant - Platforms - Move horizontally
; [ Begin ]                         
;===============================================================================                     
Obj_0x7A_Platform_Horizontal: ; Offset_0x01D594:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01D5A2(PC, D0), D1
                jmp     Offset_0x01D5A2(PC, D1)
Offset_0x01D5A2:
                dc.w    Offset_0x01D5BA-Offset_0x01D5A2
                dc.w    Offset_0x01D660-Offset_0x01D5A2
                dc.w    Offset_0x01D6B2-Offset_0x01D5A2
Offset_0x01D5A8:                
                dc.b    $00, $70, $FF, $90, $00, $00, $01, $B0, $FF, $50, $00, $40, $01, $F0, $FF, $80
                dc.b    $00, $80
Offset_0x01D5BA:
                addq.b  #$02, $0024(A0)
                move.w  #$E418, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_1E ; Offset_0x01D73E
                moveq   #$00, D1
                move.b  $0028(A0), D1
                lea     Offset_0x01D5A8(PC, D1), A2
                move.b  (A2)+, D1
                move.l  A0, A1
                bra.s   Offset_0x01D5F6
Offset_0x01D5D8:                
                bsr     J_S1SingleObjectLoad_0A  ; Offset_0x01D738
                bne.s   Offset_0x01D61C
                move.b  $0000(A0), $0000(A1)
                move.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
Offset_0x01D5F6:
                move.l  #Platform_Horizontal_Mappings, $0004(A1) ; Offset_0x01D72C
                move.w  $0002(A0), $0002(A1)
                move.b  #$04, $0001(A1)
                move.b  #$04, $0018(A1)
                move.b  #$10, $0019(A1)
                move.w  $0008(A1), $0030(A1)
Offset_0x01D61C:
                dbra    D1, Offset_0x01D5D8
                move.l  A0, $003C(A1)
                move.l  A1, $003C(A0)
                cmpi.b  #$0C, $0028(A0)
                bne.s   Offset_0x01D636
                move.b  #$01, $0036(A0)
Offset_0x01D636:
                moveq   #$00, D1
                move.b  (A2)+, D1
                move.w  $0030(A0), D0
                sub.w   D1, D0
                move.w  D0, $0032(A0)
                move.w  D0, $0032(A1)
                add.w   D1, D0
                add.w   D1, D0
                move.w  D0, $0034(A0)
                move.w  D0, $0034(A1)
                move.w  (A2)+, D0
                add.w   D0, $0008(A0)
                move.w  (A2)+, D0
                add.w   D0, $0008(A1)
Offset_0x01D660:
                bsr.s   Offset_0x01D6BC
                move.w  $0032(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bls.s   Offset_0x01D686
                move.w  $0034(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   Offset_0x01D68C
Offset_0x01D686:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x01D68C:
                move.l  $003C(A0), A1
                cmpa.l  A0, A1
                beq.s   Offset_0x01D69A
                jsr     (Offset_0x00D3B6)
Offset_0x01D69A:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   J_DeleteObject_20       ; Offset_0x01D6AC
                bclr    #$07, $02(A2, D0)
J_DeleteObject_20: ; Offset_0x01D6AC:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x01D6B2:
                bsr.s   Offset_0x01D6BC
                bsr.s   Offset_0x01D706
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x01D6BC:
                move.w  $0008(A0), -(A7)
                tst.b   $0036(A0)
                beq.s   Offset_0x01D6DE
                move.w  $0008(A0), D0
                subq.w  #$01, D0
                cmp.w   $0032(A0), D0
                bne.s   Offset_0x01D6D8
                move.b  #$00, $0036(A0)
Offset_0x01D6D8:
                move.w  D0, $0008(A0)
                bra.s   Offset_0x01D6F4
Offset_0x01D6DE:
                move.w  $0008(A0), D0
                addq.w  #$01, D0
                cmp.w   $0034(A0), D0
                bne.s   Offset_0x01D6F0
                move.b  #$01, $0036(A0)
Offset_0x01D6F0:
                move.w  D0, $0008(A0)
Offset_0x01D6F4:
                moveq   #$00, D1
                move.b  $0019(A0), D1
                move.w  #$0008, D3
                move.w  (A7)+, D4
                bsr     Offset_0x01D744
                rts
Offset_0x01D706:
                move.l  $003C(A0), A1
                move.w  $0008(A0), D0
                subi.w  #$0010, D0
                move.w  $0008(A1), D2
                addi.w  #$0010, D2
                cmp.w   D0, D2
                bne.s   Offset_0x01D72A
                eori.b  #$01, $0036(A0)
                eori.b  #$01, $0036(A1)
Offset_0x01D72A:
                rts
Platform_Horizontal_Mappings: ; Offset_0x01D72C:
                dc.w    Offset_0x01D72E-Platform_Horizontal_Mappings
Offset_0x01D72E:
                dc.w    $0001
                dc.l    $F80D0010, $0008FFF0            
;=============================================================================== 
; Object 0x7A - Chemical Plant - Platforms - Move horizontally
; [ End ]                         
;===============================================================================  
J_S1SingleObjectLoad_0A: ; Offset_0x01D738:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_ModifySpriteAttr_2P_1E: ; Offset_0x01D73E:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
Offset_0x01D744:
                jmp     (Offset_0x00F984)
                dc.w    $0000                   ; Filler    
;=============================================================================== 
; Object 0x7B - Chemical Plant - Spring Over Tubes 
; [ Begin ]                         
;===============================================================================                 
Obj_0x7B_Spring_Tubes: ; Offset_0x01D74C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01D77C(PC, D0), D1
                jsr     Offset_0x01D77C(PC, D1)
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x01D764
                bra     J_DisplaySprite_0D      ; Offset_0x01D964
Offset_0x01D764:
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     J_DeleteObject_21       ; Offset_0x01D96A
                bra     J_DisplaySprite_0D      ; Offset_0x01D964
Offset_0x01D77C:
                dc.w    Offset_0x01D784-Offset_0x01D77C
                dc.w    Offset_0x01D7BA-Offset_0x01D77C
Offset_0x01D780:
                dc.w    $F000, $F600
Offset_0x01D784:
                addq.b  #$02, $0024(A0)
                move.l  #Spring_Tubes_Mappings, $0004(A0) ; Offset_0x01D920
                move.w  #$03E0, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$10, $0019(A0)
                move.b  #$01, $0018(A0)
                move.b  $0028(A0), D0
                andi.w  #$0002, D0
                move.w  Offset_0x01D780(PC, D0), $0030(A0)
                bsr     J_ModifySpriteAttr_2P_1F ; Offset_0x01D976
Offset_0x01D7BA:
                cmpi.b  #$01, $001A(A0)
                beq.s   Offset_0x01D802
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0010, D3
                move.w  $0008(A0), D4
                lea     ($FFFFB000).w, A1
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Offset_0x01D97C
                btst    #$03, $0022(A0)
                beq.s   Offset_0x01D7EA
                bsr.s   Offset_0x01D862
Offset_0x01D7EA:
                movem.l (A7)+, D1-D4
                lea     ($FFFFB040).w, A1
                moveq   #$04, D6
                bsr     Offset_0x01D97C
                btst    #$04, $0022(A0)
                beq.s   Offset_0x01D802
                bsr.s   Offset_0x01D862
Offset_0x01D802:
                move.w  $0008(A0), D4
                move.w  D4, D5
                subi.w  #$0010, D4
                addi.w  #$0010, D5
                move.w  $000C(A0), D2
                move.w  D2, D3
                addi.w  #$0030, D3
                move.w  ($FFFFB008).w, D0
                cmp.w   D4, D0
                bcs.s   Offset_0x01D838
                cmp.w   D5, D0
                bcc.s   Offset_0x01D838
                move.w  ($FFFFB00C).w, D0
                cmp.w   D2, D0
                bcs.s   Offset_0x01D838
                cmp.w   D3, D0
                bcc.s   Offset_0x01D838
                move.b  #$02, $001C(A0)
Offset_0x01D838:
                move.w  ($FFFFB048).w, D0
                cmp.w   D4, D0
                bcs.s   Offset_0x01D856
                cmp.w   D5, D0
                bcc.s   Offset_0x01D856
                move.w  ($FFFFB04C).w, D0
                cmp.w   D2, D0
                bcs.s   Offset_0x01D856
                cmp.w   D3, D0
                bcc.s   Offset_0x01D856
                move.b  #$03, $001C(A0)
Offset_0x01D856:
                lea     (Offset_0x01D908), A1
                bra     J_AnimateSprite_04      ; Offset_0x01D970
                rts
Offset_0x01D862:
                move.w  #$0100, $001C(A0)
                addq.w  #$04, $000C(A1)
                move.w  $0030(A0), $0012(A1)
                bset    #$01, $0022(A1)
                bclr    #$03, $0022(A1)
                move.b  #$10, $001C(A1)
                move.b  #$02, $0024(A1)
                move.b  $0028(A0), D0
                bpl.s   Offset_0x01D896
                move.w  #$0000, $0010(A1)
Offset_0x01D896:
                btst    #$00, D0
                beq.s   Offset_0x01D8D6
                move.w  #$0001, $0014(A1)
                move.b  #$01, $0027(A1)
                move.b  #$00, $001C(A1)
                move.b  #$00, $002C(A1)
                move.b  #$04, $002D(A1)
                btst    #$01, D0
                bne.s   Offset_0x01D8C6
                move.b  #$01, $002C(A1)
Offset_0x01D8C6:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x01D8D6
                neg.b   $0027(A1)
                neg.w   $0014(A1)
Offset_0x01D8D6:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   Offset_0x01D8EC
                move.b  #$0C, $003E(A1)
                move.b  #$0D, $003F(A1)
Offset_0x01D8EC:
                cmpi.b  #$08, D0
                bne.s   Offset_0x01D8FE
                move.b  #$0E, $003E(A1)
                move.b  #$0F, $003F(A1)
Offset_0x01D8FE:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6    
Offset_0x01D908:
                dc.w    Offset_0x01D910-Offset_0x01D908
                dc.w    Offset_0x01D913-Offset_0x01D908
                dc.w    Offset_0x01D917-Offset_0x01D908
                dc.w    Offset_0x01D917-Offset_0x01D908
Offset_0x01D910:
                dc.b    $0F, $00, $FF
Offset_0x01D913:
                dc.b    $00, $03, $FD, $00
Offset_0x01D917:
                dc.b    $05, $01, $02, $02, $02, $04, $FD, $00, $00  
Spring_Tubes_Mappings:
Offset_0x01D920:
                dc.w    Offset_0x01D92A-Offset_0x01D920
                dc.w    Offset_0x01D934-Offset_0x01D920
                dc.w    Offset_0x01D946-Offset_0x01D920
                dc.w    Offset_0x01D958-Offset_0x01D920
                dc.w    Offset_0x01D934-Offset_0x01D920
Offset_0x01D92A:
                dc.w    $0001
                dc.l    $F00D0000, $0000FFF0
Offset_0x01D934:
                dc.w    $0002
                dc.l    $E0070008, $0004FFF0, $E0070808, $08040000
Offset_0x01D946:
                dc.w    $0002
                dc.l    $E0070010, $0008FFF0, $E0070810, $08080000
Offset_0x01D958:
                dc.w    $0001
                dc.l    $F00D0018, $000CFFF0                                
;=============================================================================== 
; Object 0x7B - 
; [ End ]                         
;===============================================================================  
                nop                             ; Filler 
J_DisplaySprite_0D: ; Offset_0x01D964:                                
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_21: ; Offset_0x01D96A:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_AnimateSprite_04: ; Offset_0x01D970:
                jmp     AnimateSprite           ; (Offset_0x00D412)
J_ModifySpriteAttr_2P_1F: ; Offset_0x01D976:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
Offset_0x01D97C:
                jmp     (Offset_0x00F510)
                dc.w    $0000                   ; Filler                    
;=============================================================================== 
; Object 0x4D - Hidden Palace - Rhinobot 
; [ Begin ]                         
;===============================================================================                      
Obj_0x4D_Rhinobot: ; Offset_0x01D984:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01D992(PC, D0), D1
                jmp     Offset_0x01D992(PC, D1)
Offset_0x01D992:
                dc.w    Offset_0x01D996-Offset_0x01D992
                dc.w    Offset_0x01D9E6-Offset_0x01D992
Offset_0x01D996:
                move.l  #Rhinobot_Mappings, $0004(A0) ; Offset_0x01DAEE
                move.w  #$23C4, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$18, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$18, $0017(A0)
                bsr     J_ObjectFall_01         ; Offset_0x01DC4C
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x01D9E4
                add.w   D1, $000C(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
Offset_0x01D9E4:
                rts
Offset_0x01D9E6:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01DA02(PC, D0), D1
                jsr     Offset_0x01DA02(PC, D1)
                lea     (Offset_0x01DAD2), A1
                bsr     J_AnimateSprite_05      ; Offset_0x01DC46
                bra     J_MarkObjGone_13        ; Offset_0x01DC40
Offset_0x01DA02:
                dc.w    Offset_0x01DA06-Offset_0x01DA02
                dc.w    Offset_0x01DA2A-Offset_0x01DA02
Offset_0x01DA06:
                subq.w  #$01, $0030(A0)
                bpl.s   Offset_0x01DA28
                addq.b  #$02, $0025(A0)
                move.w  #$FF80, $0010(A0)
                move.b  #$00, $001C(A0)
                bchg    #0, $0022(A0)
                bne.s   Offset_0x01DA28
                neg.w   $0010(A0)
Offset_0x01DA28:
                rts
Offset_0x01DA2A:
                bsr     Offset_0x01DA74
                bsr     J_ObjectFall_01         ; Offset_0x01DC4C
                jsr     ObjHitFloor             ; (Offset_0x013898)
                cmpi.w  #$FFF8, D1
                blt.s   Offset_0x01DA50
                cmpi.w  #$000C, D1
                bge.s   Offset_0x01DA4E
                move.w  #$0000, $0012(A0)
                add.w   D1, $000C(A0)
Offset_0x01DA4E:
                rts
Offset_0x01DA50:
                subq.b  #$02, $0025(A0)
                move.w  #$003B, $0030(A0)
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                sub.l   D0, $0008(A0)
                move.w  #$0000, $0010(A0)
                move.b  #$01, $001C(A0)
                rts
Offset_0x01DA74:
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bmi.s   Offset_0x01DAA8
                cmpi.w  #$0060, D0
                bgt.s   Offset_0x01DA98
                btst    #$00, $0022(A0)
                bne.s   Offset_0x01DA9A
                move.b  #$02, $001C(A0)
                move.w  #$FE00, $0010(A0)
Offset_0x01DA98:
                rts
Offset_0x01DA9A:
                move.b  #$00, $001C(A0)
                move.w  #$0080, $0010(A0)
                rts
Offset_0x01DAA8:
                cmpi.w  #$FFA0, D0
                blt.s   Offset_0x01DA98
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01DAC4
                move.b  #$02, $001C(A0)
                move.w  #$0200, $0010(A0)
                rts
Offset_0x01DAC4:
                move.b  #$00, $001C(A0)
                move.w  #$FF80, $0010(A0)
                rts
Offset_0x01DAD2:
                dc.w    Offset_0x01DAD8-Offset_0x01DAD2
                dc.w    Offset_0x01DAE6-Offset_0x01DAD2
                dc.w    Offset_0x01DAE9-Offset_0x01DAD2
Offset_0x01DAD8:
                dc.b    $02, $00, $00, $00, $03, $03, $04, $01, $01, $02, $05, $05, $05, $FF
Offset_0x01DAE6:
                dc.b    $0F, $00, $FF
Offset_0x01DAE9:
                dc.b    $02, $06, $07, $FF, $00
Rhinobot_Mappings:                
Offset_0x01DAEE:
                dc.w    Offset_0x01DAFE-Offset_0x01DAEE
                dc.w    Offset_0x01DB28-Offset_0x01DAEE
                dc.w    Offset_0x01DB52-Offset_0x01DAEE
                dc.w    Offset_0x01DB7C-Offset_0x01DAEE
                dc.w    Offset_0x01DBA6-Offset_0x01DAEE
                dc.w    Offset_0x01DBD0-Offset_0x01DAEE
                dc.w    Offset_0x01DBFA-Offset_0x01DAEE
                dc.w    Offset_0x01DC1C-Offset_0x01DAEE
Offset_0x01DAFE:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $0005000A, $0005FFF0
                dc.l    $00090022, $00110000
Offset_0x01DB28:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $0005000E, $0007FFF0
                dc.l    $00090022, $00110000
Offset_0x01DB52:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $00050012, $0009FFF0
                dc.l    $00090022, $00110000
Offset_0x01DB7C:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $0005000A, $0005FFF0
                dc.l    $00090028, $00140000
Offset_0x01DBA6:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $0005000E, $0007FFF0
                dc.l    $00090028, $00140000
Offset_0x01DBD0:
                dc.w    $0005
                dc.l    $F0050000, $0000FFF0, $F0050004, $00020000
                dc.l    $F8010008, $0004FFE8, $00050012, $0009FFF0
                dc.l    $00090028, $00140000
Offset_0x01DBFA:
                dc.w    $0004
                dc.l    $F00B0016, $000BFFE8, $F0050004, $00020000
                dc.l    $00090022, $00110000, $FB01002E, $0017001A
Offset_0x01DC1C:
                dc.w    $0004
                dc.l    $F00B0016, $000BFFE8, $F0050004, $00020000
                dc.l    $00090028, $00140000, $FB010030, $0018001A                
;=============================================================================== 
; Object 0x4D - Hidden Palace - Rhinobot 
; [ End ]                         
;===============================================================================  
                dc.w    $0000                   ; Filler    
J_MarkObjGone_13: ; Offset_0x01DC40:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_AnimateSprite_05: ; Offset_0x01DC46:
                jmp     AnimateSprite           ; (Offset_0x00D412)
J_ObjectFall_01: ; Offset_0x01DC4C:
                jmp     ObjectFall              ; (Offset_0x00D24E)  
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x52 - Piranha 
; [ Begin ]                         
;===============================================================================                  
Obj_0x52_Piranha: ; Offset_0x01DC54:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01DC62(PC, D0), D1
                jmp     Offset_0x01DC62(PC, D1)
Offset_0x01DC62:
                dc.w    Offset_0x01DC68-Offset_0x01DC62
                dc.w    Offset_0x01DCE0-Offset_0x01DC62
                dc.w    Offset_0x01DD50-Offset_0x01DC62
Offset_0x01DC68:
                addq.b  #$02, $0024(A0)
                move.l  #Piranha_Mappings, $0004(A0) ; Offset_0x01DE66
                move.w  #$2530, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                move.b  D0, D1
                andi.w  #$00F0, D1
                add.w   D1, D1
                add.w   D1, D1
                move.w  D1, $003A(A0)
                move.w  D1, $003C(A0)
                andi.w  #$000F, D0
                lsl.w   #$06, D0
                subq.w  #$01, D0
                move.w  D0, $0030(A0)
                move.w  D0, $0032(A0)
                move.w  #$FF80, $0010(A0)
                move.l  #$FFFB8000, $0036(A0)
                move.w  $000C(A0), $0034(A0)
                bset    #$06, $0022(A0)
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01DCE0
                neg.w   $0010(A0)
Offset_0x01DCE0:
                cmpi.w  #$FFFF, $003A(A0)
                beq.s   Offset_0x01DCEC
                subq.w  #$01, $003A(A0)
Offset_0x01DCEC:
                subq.w  #$01, $0030(A0)
                bpl.s   Offset_0x01DD0E
                move.w  $0032(A0), $0030(A0)
                neg.w   $0010(A0)
                bchg    #0, $0022(A0)
                move.b  #$01, $001D(A0)
                move.w  $003C(A0), $003A(A0)
Offset_0x01DD0E:
                lea     (Offset_0x01DE4E), A1
                bsr     J_AnimateSprite_06      ; Offset_0x01DE9E
                bsr     J_SpeedToPos_0B         ; Offset_0x01DEA4
                tst.w   $003A(A0)
                bgt     J_MarkObjGone_14        ; Offset_0x01DE98
                cmpi.w  #$FFFF, $003A(A0)
                beq     J_MarkObjGone_14        ; Offset_0x01DE98
                move.l  #$FFFB8000, $0036(A0)
                addq.b  #$02, $0024(A0)
                move.w  #$FFFF, $003A(A0)
                move.b  #$02, $001C(A0)
                move.w  #$0001, $003E(A0)
                bra     J_MarkObjGone_14        ; Offset_0x01DE98
Offset_0x01DD50:
                move.w  #$0390, ($FFFFF646).w
                lea     (Offset_0x01DE4E), A1
                bsr     J_AnimateSprite_06      ; Offset_0x01DE9E
                move.w  $003E(A0), D0
                sub.w   D0, $0030(A0)
                bsr     Offset_0x01DE00
                tst.l   $0036(A0)
                bpl.s   Offset_0x01DDA8
                move.w  $000C(A0), D0
                cmp.w   ($FFFFF646).w, D0
                bgt     J_MarkObjGone_14        ; Offset_0x01DE98
                move.b  #$03, $001C(A0)
                bclr    #$06, $0022(A0)
                tst.b   $002A(A0)
                bne     J_MarkObjGone_14        ; Offset_0x01DE98
                move.w  $0010(A0), D0
                asl.w   #$01, D0
                move.w  D0, $0010(A0)
                addq.w  #$01, $003E(A0)
                st      $002A(A0)
                bra     J_MarkObjGone_14        ; Offset_0x01DE98
Offset_0x01DDA8:
                move.w  $000C(A0), D0
                cmp.w   ($FFFFF646).w, D0
                bgt.s   Offset_0x01DDBC
                move.b  #$01, $001C(A0)
                bra     J_MarkObjGone_14        ; Offset_0x01DE98
Offset_0x01DDBC:
                move.b  #$00, $001C(A0)
                bset    #$06, $0022(A0)
                bne.s   Offset_0x01DDD6
                move.l  $0036(A0), D0
                asr.l   #$01, D0
                move.l  D0, $0036(A0)
                nop
Offset_0x01DDD6:
                move.w  $0034(A0), D0
                cmp.w   $000C(A0), D0
                bgt     J_MarkObjGone_14        ; Offset_0x01DE98
                subq.b  #$02, $0024(A0)
                tst.b   $002A(A0)
                beq     J_MarkObjGone_14        ; Offset_0x01DE98
                move.w  $0010(A0), D0
                asr.w   #$01, D0
                move.w  D0, $0010(A0)
                sf      $002A(A0)
                bra     J_MarkObjGone_14        ; Offset_0x01DE98
Offset_0x01DE00:
                move.l  $0008(A0), D2
                move.l  $000C(A0), D3
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                add.l   $0036(A0), D3
                btst    #$06, $0022(A0)
                beq.s   Offset_0x01DE3C
                tst.l   $0036(A0)
                bpl.s   Offset_0x01DE34
                addi.l  #$00001000, $0036(A0)
                addi.l  #$00001000, $0036(A0)
Offset_0x01DE34:
                subi.l  #$00001000, $0036(A0)
Offset_0x01DE3C:
                addi.l  #$00001800, $0036(A0)
                move.l  D2, $0008(A0)
                move.l  D3, $000C(A0)
                rts      
Offset_0x01DE4E:                 
                dc.w    Offset_0x01DE56-Offset_0x01DE4E
                dc.w    Offset_0x01DE5A-Offset_0x01DE4E
                dc.w    Offset_0x01DE5E-Offset_0x01DE4E
                dc.w    Offset_0x01DE62-Offset_0x01DE4E
Offset_0x01DE56:
                dc.b    $0E, $00, $01, $FF
Offset_0x01DE5A:
                dc.b    $03, $00, $01, $FF
Offset_0x01DE5E:
                dc.b    $0E, $02, $03, $FF
Offset_0x01DE62:
                dc.b    $03, $02, $03, $FF  
Piranha_Mappings: ; Offset_0x01DE66:
                dc.w    Offset_0x01DE6E-Piranha_Mappings
                dc.w    Offset_0x01DE78-Piranha_Mappings
                dc.w    Offset_0x01DE82-Piranha_Mappings
                dc.w    Offset_0x01DE8C-Piranha_Mappings               
Offset_0x01DE6E:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x01DE78:
                dc.w    $0001
                dc.l    $F00F0010, $0008FFF0
Offset_0x01DE82:
                dc.w    $0001
                dc.l    $F00F0020, $0010FFF0
Offset_0x01DE8C:
                dc.w    $0001
                dc.l    $F00F0030, $0018FFF0                                  
;=============================================================================== 
; Object 0x52 - Piranha 
; [ End ]                         
;===============================================================================   
                dc.w    $0000                   ; Filler   
J_MarkObjGone_14: ; Offset_0x01DE98:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_AnimateSprite_06: ; Offset_0x01DE9E:
                jmp     AnimateSprite           ; (Offset_0x00D412)
J_SpeedToPos_0B: ; Offset_0x01DEA4:
                jmp     SpeedToPos              ; (Offset_0x00D27A)                                                    
                dc.w    $0000                   ; Filler  
;=============================================================================== 
; Object 0x4F - Hidden Palace - Dinobot 
; [ Begin ]                         
;===============================================================================                 
Obj_0x4F_Dinobot: ; Offset_0x01DEAC:               
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01DEBA(PC, D0), D1
                jmp     Offset_0x01DEBA(PC, D1)
Offset_0x01DEBA:                
                dc.w    Offset_0x01DEC0-Offset_0x01DEBA
                dc.w    Offset_0x01DF16-Offset_0x01DEBA
                dc.w    Offset_0x01DFB8-Offset_0x01DEBA
Offset_0x01DEC0:
                move.l  #Dinobot_Mappings, $0004(A0) ; Offset_0x01DFCA
                move.w  #$0500, $0002(A0)
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$06, $0017(A0)
                move.b  #$0C, $0020(A0)
                bsr     J_ObjectFall_02         ; Offset_0x01E002
                jsr     ObjHitFloor             ; Offset_0x013898
                tst.w   D1
                bpl.s   Offset_0x01DF14
                add.w   D1, $000C(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
                bchg    #0, $0022(A0)
Offset_0x01DF14:
                rts
Offset_0x01DF16:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01DF5C(PC, D0), D1
                jsr     Offset_0x01DF5C(PC, D1)
                lea     (Offset_0x01DFBC), A1
                bsr     J_AnimateSprite_07      ; Offset_0x01DFFC
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Offset_0x01DF46
                bra     J_DisplaySprite_0E      ; Offset_0x01DFF0
Offset_0x01DF46:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  $0023(A0), D0
                beq.s   Offset_0x01DF58
                bclr    #$07, $02(A2, D0)
Offset_0x01DF58:
                bra     J_DeleteObject_22       ; Offset_0x01DFF6
Offset_0x01DF5C:               
                ori.b   #$28, D4
                subq.w  #$01, $0030(A0)
                bpl.s   Offset_0x01DF82
                addq.b  #$02, $0025(A0)
                move.w  #$FF80, $0010(A0)
                move.b  #$01, $001C(A0)
                bchg    #0, $0022(A0)
                bne.s   Offset_0x01DF82
                neg.w   $0010(A0)
Offset_0x01DF82:
                rts
                bsr     J_SpeedToPos_0C         ; Offset_0x01E008
                jsr     ObjHitFloor             ; Offset_0x013898
                cmpi.w  #$FFF8, D1
                blt.s   Offset_0x01DFA0
                cmpi.w  #$000C, D1
                bge.s   Offset_0x01DFA0
                add.w   D1, $000C(A0)
                rts
Offset_0x01DFA0:
                subq.b  #$02, $0025(A0)
                move.w  #$003B, $0030(A0)
                move.w  #$0000, $0010(A0)
                move.b  #$00, $001C(A0)
                rts
Offset_0x01DFB8:
                bra     J_DeleteObject_22       ; Offset_0x01DFF6  
Offset_0x01DFBC:
                dc.w    Offset_0x01DFC0-Offset_0x01DFBC
                dc.w    Offset_0x01DFC3-Offset_0x01DFBC
Offset_0x01DFC0:                                 
                dc.b    $09, $01, $FF 
Offset_0x01DFC3:
                dc.b    $09, $00, $01, $02, $01, $FF, $00  
Dinobot_Mappings:                
Offset_0x01DFCA:
                dc.w    Offset_0x01DFD0-Offset_0x01DFCA
                dc.w    Offset_0x01DFDA-Offset_0x01DFCA
                dc.w    Offset_0x01DFE4-Offset_0x01DFCA
Offset_0x01DFD0:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x01DFDA:
                dc.w    $0001
                dc.l    $F00F0010, $0008FFF0
Offset_0x01DFE4:
                dc.w    $0001
                dc.l    $F00F0020, $0010FFF0                               
;=============================================================================== 
; Object 0x4F - Hidden Palace - Dinobot 
; [ End ]                         
;===============================================================================   
                dc.w    $0000                   ; Filler                
J_DisplaySprite_0E: ; Offset_0x01DFF0:
                jmp     DisplaySprite           ; Offset_0x00D3C2
J_DeleteObject_22: ; Offset_0x01DFF6:
                jmp     DeleteObject            ; Offset_0x00D3B4
J_AnimateSprite_07: ; Offset_0x01DFFC:
                jmp     AnimateSprite           ; Offset_0x00D412
J_ObjectFall_02: ; Offset_0x01E002:
                jmp     ObjectFall              ; Offset_0x00D24E  
J_SpeedToPos_0C: ; Offset_0x01E008:
                jmp     SpeedToPos              ; Offset_0x00D27A  
                dc.w    $0000                   ; Filler 
;=============================================================================== 
; Object 0x50 - Oil Ocean - Aquis (Seahorse)  
; [ Begin ]                         
;===============================================================================  
Obj_0x50_Aquis: ; Offset_0x01E010:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01E01E(PC, D0), D1
                jmp     Offset_0x01E01E(PC, D1)
Offset_0x01E01E:
                dc.w    Offset_0x01E02A-Offset_0x01E01E
                dc.w    Offset_0x01E0E2-Offset_0x01E01E
                dc.w    Offset_0x01E10E-Offset_0x01E01E
                dc.w    Offset_0x01E138-Offset_0x01E01E
                dc.w    Offset_0x01E31A-Offset_0x01E01E
                dc.w    Offset_0x01E356-Offset_0x01E01E
Offset_0x01E02A:
                addq.b  #$02, $0024(A0)
                move.l  #Aquis_Mappings, $0004(A0) ; Offset_0x01E4E0
                move.w  #$2570, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.w  #$FF00, $0010(A0)
                move.b  $0028(A0), D0
                move.b  D0, D1
                andi.w  #$00F0, D1
                lsl.w   #$04, D1
                move.w  D1, $002E(A0)
                move.w  D1, $0030(A0)
                andi.w  #$000F, D0
                lsl.w   #$04, D0
                subq.w  #$01, D0
                move.w  D0, $0032(A0)
                move.w  D0, $0034(A0)
                move.w  $000C(A0), $002A(A0)
                bsr     J_SingleObjectLoad_07   ; Offset_0x01E87C
                bne.s   Offset_0x01E0E2
                move.b  #$50, $0000(A1)
                move.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$000A, $0008(A1)
                addi.w  #$FFFA, $000C(A1)
                move.l  #Aquis_Mappings, $0004(A1) ; Offset_0x01E4E0
                move.w  #$24E0, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  #$03, $001C(A1)
                move.l  A1, $0036(A0)
                move.l  A0, $0036(A1)
                bset    #$06, $0022(A0)
Offset_0x01E0E2:
                lea     (Offset_0x01E4A8), A1
                bsr     J_AnimateSprite_08      ; Offset_0x01E888
                move.w  #$039C, ($FFFFF646).w
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01E108(PC, D0), D1
                jsr     Offset_0x01E108(PC, D1)
                bsr     Offset_0x01E2E0
                bra     J_MarkObjGone_15        ; Offset_0x01E882
Offset_0x01E108:
                dc.w    Offset_0x01E14E-Offset_0x01E108
                dc.w    Offset_0x01E160-Offset_0x01E108
                dc.w    Offset_0x01E16E-Offset_0x01E108
Offset_0x01E10E:
                move.l  $0036(A0), A1
                tst.b   (A1)
                beq     J_DeleteObject_23       ; Offset_0x01E876
                cmpi.b  #$50, (A1)
                bne     J_DeleteObject_23       ; Offset_0x01E876
                btst    #$07, $0022(A1)
                bne     J_DeleteObject_23       ; Offset_0x01E876
                lea     (Offset_0x01E4A8), A1
                bsr     J_AnimateSprite_08      ; Offset_0x01E888
                bra     J_DisplaySprite_0F      ; Offset_0x01E870
Offset_0x01E138:
                bsr     Offset_0x01E404
                bsr     J_SpeedToPos_0D         ; Offset_0x01E894
                lea     (Offset_0x01E4A8), A1
                bsr     J_AnimateSprite_08      ; Offset_0x01E888
                bra     J_MarkObjGone_15        ; Offset_0x01E882
Offset_0x01E14E:
                bsr     J_SpeedToPos_0D         ; Offset_0x01E894
                bsr     Offset_0x01E3E6
                bsr     Offset_0x01E28C
                bsr     Offset_0x01E224
                rts
Offset_0x01E160:
                bsr     J_SpeedToPos_0D         ; Offset_0x01E894
                bsr     Offset_0x01E3E6
                bsr     Offset_0x01E2AE
                rts
Offset_0x01E16E:
                bsr     J_ObjectFall_03         ; Offset_0x01E88E
                bsr     Offset_0x01E3E6
                bsr     Offset_0x01E180
                bsr     Offset_0x01E1FC
                rts
Offset_0x01E180:
                tst.b   $002D(A0)
                bne.s   Offset_0x01E18C
                tst.w   $0012(A0)
                bpl.s   Offset_0x01E18E
Offset_0x01E18C:
                rts
Offset_0x01E18E:
                st      $002D(A0)
                bsr     J_SingleObjectLoad_07   ; Offset_0x01E87C
                bne.s   Offset_0x01E1FA
                move.b  #$50, $0000(A1)
                move.b  #$06, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  #Aquis_Mappings, $0004(A1) ; Offset_0x01E4E0
                move.w  #$24E0, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$E5, $0020(A1)
                move.b  #$02, $001C(A1)
                move.w  #$000C, D0
                move.w  #$0010, D1
                move.w  #$FD00, D2
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01E1EE
                neg.w   D1
                neg.w   D2
Offset_0x01E1EE:
                sub.w   D0, $000C(A1)
                sub.w   D1, $0008(A1)
                move.w  D2, $0010(A1)
Offset_0x01E1FA:
                rts
Offset_0x01E1FC:
                move.w  $000C(A0), D0
                cmp.w   ($FFFFF646).w, D0
                blt.s   Offset_0x01E222
                move.b  #$02, $0025(A0)
                move.b  #$00, $001C(A0)
                move.w  $0030(A0), $002E(A0)
                move.w  #$0040, $0012(A0)
                sf      $002D(A0)
Offset_0x01E222:
                rts
Offset_0x01E224:
                tst.b   $002C(A0)
                beq.s   Offset_0x01E28A
                move.w  ($FFFFB008).w, D0
                move.w  ($FFFFB00C).w, D1
                sub.w   $000C(A0), D1
                bpl.s   Offset_0x01E28A
                cmpi.w  #$FFD0, D1
                blt.s   Offset_0x01E28A
                sub.w   $0008(A0), D0
                cmpi.w  #$0048, D0
                bgt.s   Offset_0x01E28A
                cmpi.w  #$FFB8, D0
                blt.s   Offset_0x01E28A
                tst.w   D0
                bpl.s   Offset_0x01E262
                cmpi.w  #$FFD8, D0
                bgt.s   Offset_0x01E28A
                btst    #$00, $0022(A0)
                bne.s   Offset_0x01E28A
                bra.s   Offset_0x01E270
Offset_0x01E262:
                cmpi.w  #$0028, D0
                blt.s   Offset_0x01E28A
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01E28A
Offset_0x01E270:
                moveq   #$20, D0
                cmp.w   $0032(A0), D0
                bgt.s   Offset_0x01E28A
                move.b  #$04, $0025(A0)
                move.b  #$01, $001C(A0)
                move.w  #$FC00, $0012(A0)
Offset_0x01E28A:
                rts
Offset_0x01E28C:
                subq.w  #$01, $002E(A0)
                bne.s   Offset_0x01E2AC
                move.w  $0030(A0), $002E(A0)
                addq.b  #$02, $0025(A0)
                move.w  #$FFC0, D0
                tst.b   $002C(A0)
                beq.s   Offset_0x01E2A8
                neg.w   D0
Offset_0x01E2A8:
                move.w  D0, $0012(A0)
Offset_0x01E2AC:
                rts
Offset_0x01E2AE:
                move.w  $000C(A0), D0
                tst.b   $002C(A0)
                bne.s   Offset_0x01E2CC
                cmp.w   ($FFFFF646).w, D0
                bgt.s   Offset_0x01E2CA
                subq.b  #$02, $0025(A0)
                st      $002C(A0)
                clr.w   $0012(A0)
Offset_0x01E2CA:
                rts
Offset_0x01E2CC:
                cmp.w   $002A(A0), D0
                blt.s   Offset_0x01E2CA
                subq.b  #$02, $0025(A0)
                sf      $002C(A0)
                clr.w   $0012(A0)
                rts
Offset_0x01E2E0:
                moveq   #$0A, D0
                moveq   #$FFFFFFFA, D1
                move.l  $0036(A0), A1
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0023(A0), $0023(A1)
                move.b  $0001(A0), $0001(A1)
                btst    #$00, $0022(A1)
                beq.s   Offset_0x01E310
                neg.w   D0
Offset_0x01E310:
                add.w   D0, $0008(A1)
                add.w   D1, $000C(A1)
                rts
Offset_0x01E31A:
                bsr     J_ObjectFall_03         ; Offset_0x01E88E
                bsr     Offset_0x01E330
                lea     (Offset_0x01E4A8), A1
                bsr     J_AnimateSprite_08      ; Offset_0x01E888
                bra     J_MarkObjGone_15        ; Offset_0x01E882
Offset_0x01E330:
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x01E34A
                add.w   D1, $000C(A0)
                move.w  $0012(A0), D0
                asr.w   #$01, D0
                neg.w   D0
                move.w  D0, $0012(A0)
Offset_0x01E34A:
                subi.b  #$01, $0021(A0)
                beq     J_DeleteObject_23       ; Offset_0x01E876
                rts
Offset_0x01E356:
                bsr     Offset_0x01E3A6
                tst.b   $0025(A0)
                beq.s   Offset_0x01E396
                subi.w  #$0001, $002C(A0)
                beq     J_DeleteObject_23       ; Offset_0x01E876
                move.w  ($FFFFB008).w, $0008(A0)
                move.w  ($FFFFB00C).w, $000C(A0)
                addi.w  #$000C, $000C(A0)
                subi.b  #$01, $002A(A0)
                bne.s   Offset_0x01E398
                move.b  #$03, $002A(A0)
                bchg    #0, $0022(A0)
                bchg    #0, $0001(A0)
Offset_0x01E396:
                rts
Offset_0x01E398:
                lea     (Offset_0x01E4A8), A1
                bsr     J_AnimateSprite_08      ; Offset_0x01E888
                bra     J_DisplaySprite_0F      ; Offset_0x01E870
Offset_0x01E3A6:
                tst.b   $0025(A0)
                bne.s   Offset_0x01E3E4
                move.b  ($FFFFB024).w, D0
                cmpi.b  #$02, D0
                bne.s   Offset_0x01E3E4
                move.w  ($FFFFB008).w, $0008(A0)
                move.w  ($FFFFB00C).w, $000C(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$05, $001C(A0)
                st      $0025(A0)
                move.w  #$012C, $002C(A0)
                move.b  #$03, $002A(A0)
Offset_0x01E3E4:
                rts
Offset_0x01E3E6:
                subq.w  #$01, $0032(A0)
                bpl.s   Offset_0x01E402
                move.w  $0034(A0), $0032(A0)
                neg.w   $0010(A0)
                bchg    #0, $0022(A0)
                move.b  #$01, $001D(A0)
Offset_0x01E402:
                rts
Offset_0x01E404:
                tst.b   $0021(A0)
                beq     Offset_0x01E4A6
                moveq   #$02, D3
Offset_0x01E40E:                
                bsr     J_SingleObjectLoad_07   ; Offset_0x01E87C
                bne.s   Offset_0x01E480
                move.b  $0000(A0), $0000(A1)
                move.b  #$08, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  #$24E0, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.w  #$FF00, $0012(A1)
                move.b  #$04, $001C(A1)
                move.b  #$78, $0021(A1)
                cmpi.w  #$0001, D3
                beq.s   Offset_0x01E47A
                blt.s   Offset_0x01E46C
                move.w  #$00C0, $0010(A1)
                addi.w  #$FF40, $0012(A1)
                bra.s   Offset_0x01E480
Offset_0x01E46C:
                move.w  #$FF00, $0010(A1)
                addi.w  #$FFC0, $0012(A1)
                bra.s   Offset_0x01E480
Offset_0x01E47A:
                move.w  #$0040, $0010(A1)
Offset_0x01E480:
                dbra    D3, Offset_0x01E40E
                bsr     J_SingleObjectLoad_07   ; Offset_0x01E87C
                bne.s   Offset_0x01E4A2
                move.b  $0000(A0), $0000(A1)
                move.b  #$0A, $0024(A1)
                move.l  $0004(A0), $0004(A1)
                move.w  #$24E0, $0002(A1)
Offset_0x01E4A2:
                bra     J_DeleteObject_23       ; Offset_0x01E876
Offset_0x01E4A6:
                rts    
Offset_0x01E4A8:
                dc.w    Offset_0x01E4B8-Offset_0x01E4A8
                dc.w    Offset_0x01E4BB-Offset_0x01E4A8
                dc.w    Offset_0x01E4C3-Offset_0x01E4A8
                dc.w    Offset_0x01E4C9-Offset_0x01E4A8
                dc.w    Offset_0x01E4CD-Offset_0x01E4A8
                dc.w    Offset_0x01E4D0-Offset_0x01E4A8
                dc.w    Offset_0x01E4D3-Offset_0x01E4A8
                dc.w    Offset_0x01E4D7-Offset_0x01E4A8
Offset_0x01E4B8:
                dc.b    $0E, $00, $FF
Offset_0x01E4BB:
                dc.b    $05, $03, $04, $03, $04, $03, $04, $FF
Offset_0x01E4C3:
                dc.b    $03, $05, $06, $07, $06, $FF
Offset_0x01E4C9:
                dc.b    $03, $01, $02, $FF
Offset_0x01E4CD:
                dc.b    $01, $05, $FF
Offset_0x01E4D0:
                dc.b    $0E, $08, $FF
Offset_0x01E4D3:
                dc.b    $01, $09, $0A, $FF
Offset_0x01E4D7:
                dc.b    $05, $0B, $0C, $0B, $0C, $0B, $0C, $FF, $00
Aquis_Mappings:                
Offset_0x01E4E0:
                dc.w    Offset_0x01E4FA-Offset_0x01E4E0
                dc.w    Offset_0x01E514-Offset_0x01E4E0
                dc.w    Offset_0x01E51E-Offset_0x01E4E0
                dc.w    Offset_0x01E528-Offset_0x01E4E0
                dc.w    Offset_0x01E54A-Offset_0x01E4E0
                dc.w    Offset_0x01E56C-Offset_0x01E4E0
                dc.w    Offset_0x01E576-Offset_0x01E4E0
                dc.w    Offset_0x01E580-Offset_0x01E4E0
                dc.w    Offset_0x01E58A-Offset_0x01E4E0
                dc.w    Offset_0x01E594-Offset_0x01E4E0
                dc.w    Offset_0x01E5B6-Offset_0x01E4E0
                dc.w    Offset_0x01E5D8-Offset_0x01E4E0
                dc.w    Offset_0x01E602-Offset_0x01E4E0
Offset_0x01E4FA:
                dc.w    $0003
                dc.l    $E80D0000, $0000FFF0, $F8090016, $000BFFF8
                dc.l    $08050024, $0012FFF8
Offset_0x01E514:
                dc.w    $0001
                dc.l    $F8050028, $0014FFF8
Offset_0x01E51E:
                dc.w    $0001
                dc.l    $F805002C, $0016FFF8
Offset_0x01E528:
                dc.w    $0004
                dc.l    $E8090008, $0004FFF0, $E801000E, $00070008
                dc.l    $F8090016, $000BFFF8, $08050024, $0012FFF8
Offset_0x01E54A:
                dc.w    $0004
                dc.l    $E8090010, $0008FFF0, $E801000E, $00070008
                dc.l    $F8090016, $000BFFF8, $08050024, $0012FFF8
Offset_0x01E56C:
                dc.w    $0001
                dc.l    $F8010030, $0018FFFC
Offset_0x01E576:
                dc.w    $0001
                dc.l    $F8010032, $0019FFFC
Offset_0x01E580:
                dc.w    $0001
                dc.l    $F8010034, $001AFFFC
Offset_0x01E58A:
                dc.w    $0001
                dc.l    $F80D0036, $001BFFF0
Offset_0x01E594:
                dc.w    $0004
                dc.l    $E80D0000, $0000FFF0, $F805001C, $000EFFF8
                dc.l    $F8010020, $00100008, $08050024, $0012FFF8
Offset_0x01E5B6:
                dc.w    $0004
                dc.l    $E80D0000, $0000FFF0, $F805001C, $000EFFF8
                dc.l    $F8010022, $00110008, $08050024, $0012FFF8
Offset_0x01E5D8:
                dc.w    $0005
                dc.l    $E8090008, $0004FFF0, $E801000E, $00070008
                dc.l    $F805001C, $000EFFF8, $F8010020, $00100008
                dc.l    $08050024, $0012FFF8
Offset_0x01E602:
                dc.w    $0005
                dc.l    $E8090010, $0008FFF0, $E801000E, $00070008
                dc.l    $F805001C, $000EFFF8, $F8010022, $00110008
                dc.l    $08050024, $0012FFF8                           
;=============================================================================== 
; Object 0x50 - Oil Ocean - Aquis (Seahorse)  
; [ End ]                         
;===============================================================================  
;=============================================================================== 
; Object 0x51 - Oil Ocean - Aquis (Seahorse)  
; [ Begin ]                         
;===============================================================================  
Obj_0x51_Aquis: ; Offset_0x01E62C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01E63A(PC, D0), D1
                jmp     Offset_0x01E63A(PC, D1)
Offset_0x01E63A:
                dc.w    Offset_0x01E646-Offset_0x01E63A
                dc.w    Offset_0x01E6A4-Offset_0x01E63A
                dc.w    Offset_0x01E6C8-Offset_0x01E63A
Offset_0x01E640:
                dc.w    $0000, $FCE0, $FD1C
Offset_0x01E646:
                addq.b  #$02, $0024(A0)
                move.l  #Aquis_Mappings, $0004(A0) ; Offset_0x01E4E0
                move.w  #$2570, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$06, $001C(A0)
                move.b  $0028(A0), D0
                andi.w  #$000F, D0
                move.w  D0, D1
                lsl.w   #$05, D1
                subq.w  #$01, D1
                move.w  D1, $0032(A0)
                move.w  D1, $0034(A0)
                move.w  $000C(A0), $002A(A0)
                move.w  $000C(A0), $002E(A0)
                addi.w  #$0060, $002E(A0)
                move.w  #$FF00, $0010(A0)
Offset_0x01E6A4:
                lea     Offset_0x01E4A8(PC), A1
                bsr     J_AnimateSprite_08      ; Offset_0x01E888
                move.w  #$039C, ($FFFFF646).w
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01E6C4(PC, D0), D1
                jsr     Offset_0x01E6C4(PC, D1)
                bra     J_MarkObjGone_15        ; Offset_0x01E882
Offset_0x01E6C4:
                dc.w    Offset_0x01E6DC-Offset_0x01E6C4
                dc.w    Offset_0x01E6F2-Offset_0x01E6C4
Offset_0x01E6C8:
                bsr     Offset_0x01E404
                bsr     J_SpeedToPos_0D         ; Offset_0x01E894
                lea     Offset_0x01E4A8(PC), A1
                bsr     J_AnimateSprite_08      ; Offset_0x01E888
                bra     J_MarkObjGone_15        ; Offset_0x01E882
Offset_0x01E6DC:
                bsr     J_SpeedToPos_0D         ; Offset_0x01E894
                bsr     Offset_0x01E3E6
                bsr     Offset_0x01E72E
                bsr     Offset_0x01E810
                bsr     Offset_0x01E780
                rts
Offset_0x01E6F2:
                bsr     J_SpeedToPos_0D         ; Offset_0x01E894
                bsr     Offset_0x01E3E6
                bsr     Offset_0x01E72E
                bsr     Offset_0x01E810
                bsr     Offset_0x01E708
                rts
Offset_0x01E708:
                subq.w  #$01, $0030(A0)
                beq.s   Offset_0x01E71C
                move.w  $0030(A0), D0
                cmpi.w  #$0012, D0
                beq     Offset_0x01E7A6
                rts
Offset_0x01E71C:
                subq.b  #$02, $0025(A0)
                move.b  #$06, $001C(A0)
                move.w  #$00B4, $0030(A0)
                rts
Offset_0x01E72E:
                sf      $002D(A0)
                sf      $002C(A0)
                sf      $0036(A0)
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                bpl.s   Offset_0x01E74E
                btst    #$00, $0022(A0)
                bne.s   Offset_0x01E756
                bra.s   Offset_0x01E75A
Offset_0x01E74E:
                btst    #$00, $0022(A0)
                bne.s   Offset_0x01E75A
Offset_0x01E756:
                st      $002C(A0)
Offset_0x01E75A:
                move.w  ($FFFFB00C).w, D0
                sub.w   $000C(A0), D0
                cmpi.w  #$FFFC, D0
                blt.s   Offset_0x01E77E
                cmpi.w  #$0004, D0
                bgt.s   Offset_0x01E77A
                st      $002D(A0)
                move.w  #$0000, $0012(A0)
                rts
Offset_0x01E77A:
                st      $0036(A0)
Offset_0x01E77E:
                rts
Offset_0x01E780:
                tst.b   $002C(A0)
                bne.s   Offset_0x01E7A4
                subq.w  #$01, $0030(A0)
                bgt.s   Offset_0x01E7A4
                tst.b   $002D(A0)
                beq.s   Offset_0x01E7A4
                move.b  #$07, $001C(A0)
                move.w  #$0024, $0030(A0)
                addi.b  #$02, $0025(A0)
Offset_0x01E7A4:
                rts
Offset_0x01E7A6:
                bsr     J_SingleObjectLoad_07   ; Offset_0x01E87C
                bne.s   Offset_0x01E80E
                move.b  #$51, $0000(A1)
                move.b  #$04, $0024(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.l  #Aquis_Mappings, $0004(A1) ; Offset_0x001E4E0
                move.w  #$24E0, $0002(A1)
                ori.b   #$04, $0001(A1)
                move.b  #$03, $0018(A1)
                move.b  #$02, $001C(A1)
                move.b  #$E5, $0020(A1)
                move.w  #$000C, D0
                move.w  #$0010, D1
                move.w  #$FD00, D2
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01E802
                neg.w   D1
                neg.w   D2
Offset_0x01E802:
                sub.w   D0, $000C(A1)
                sub.w   D1, $0008(A1)
                move.w  D2, $0010(A1)
Offset_0x01E80E:
                rts
Offset_0x01E810:
                tst.b   $002D(A0)
                bne.s   Offset_0x01E86E
                tst.b   $0036(A0)
                beq.s   Offset_0x01E840
                move.w  $002E(A0), D0
                cmp.w   $000C(A0), D0
                ble.s   Offset_0x01E864
                tst.b   $002C(A0)
                beq.s   Offset_0x01E838
                move.w  $002A(A0), D0
                cmp.w   $000C(A0), D0
                bge.s   Offset_0x01E864
                rts
Offset_0x01E838:
                move.w  #$0180, $0012(A0)
                rts
Offset_0x01E840:
                move.w  $002A(A0), D0
                cmp.w   $000C(A0), D0
                bge.s   Offset_0x01E864
                tst.b   $002C(A0)
                beq.s   Offset_0x01E85C
                move.w  $002E(A0), D0
                cmp.w   $000C(A0), D0
                ble.s   Offset_0x01E864
                rts
Offset_0x01E85C:
                move.w  #$FE80, $0012(A0)
                rts
Offset_0x01E864:
                move.w  D0, $000C(A0)
                move.w  #$0000, $0012(A0)
Offset_0x01E86E:
                rts
;=============================================================================== 
; Object 0x51 - Oil Ocean - Aquis (Seahorse)  
; [ End ]                         
;===============================================================================  
J_DisplaySprite_0F: ; Offset_0x01E870:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_23: ; Offset_0x01E876:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_SingleObjectLoad_07: ; Offset_0x01E87C:
                jmp     SingleObjectLoad        ; (Offset_0x00E772)
J_MarkObjGone_15: ; Offset_0x01E882:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_AnimateSprite_08: ; Offset_0x01E888:
                jmp     AnimateSprite           ; (Offset_0x00D412)
J_ObjectFall_03: ; Offset_0x01E88E:
                jmp     ObjectFall              ; (Offset_0x00D24E)
J_SpeedToPos_0D: ; Offset_0x01E894:
                jmp     SpeedToPos              ; (Offset_0x00D27A)
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x4B - Green Hill - Buzz Bomber  
; [ Begin ]                         
;===============================================================================                  
Obj_0x4B_Buzz_Bomber: ; Offset_0x01E89C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01E8AA(PC, D0), D1
                jmp     Offset_0x01E8AA(PC, D1)
Offset_0x01E8AA:
                dc.w    Offset_0x01E8FC-Offset_0x01E8AA
                dc.w    Offset_0x01E9A8-Offset_0x01E8AA
                dc.w    Offset_0x01E8C4-Offset_0x01E8AA
                dc.w    Offset_0x01E8B2-Offset_0x01E8AA
Offset_0x01E8B2:
                bsr     J_SpeedToPos_0E         ; Offset_0x01EBB0
                lea     (Offset_0x01EAF2), A1
                bsr     J_AnimateSprite_09      ; Offset_0x01EB98
                bra     Offset_0x01EBA4
Offset_0x01E8C4:
                move.l  $002A(A0), A1
                tst.b   (A1)
                beq     J_DeleteObject_24       ; Offset_0x01EB8C
                tst.w   $0030(A1)
                bmi.s   Offset_0x01E8D6
                rts
Offset_0x01E8D6:
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                lea     (Offset_0x01EAF2), A1
                bsr     J_AnimateSprite_09      ; Offset_0x01EB98
                bra     Offset_0x01EBA4
Offset_0x01E8FC:
                move.l  #Buzz_Bomber_Mappings, $0004(A0) ; Offset_0x01EB0E
                move.w  #$03E6, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_20 ; Offset_0x01EBAA
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$18, $0017(A0)
                move.b  #$03, $0018(A0)
                addq.b  #$02, $0024(A0)
                bsr     J_S1SingleObjectLoad_0B  ; Offset_0x01EB92
                bne.s   Offset_0x01E9A6
                move.b  #$4B, $0000(A1)
                move.b  #$04, $0024(A1)
                move.l  #Buzz_Bomber_Mappings, $0004(A1) ; Offset_0x01EB0E
                move.w  #$03E6, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_03 ; Offset_0x01EB9E
                move.b  #$04, $0018(A1)
                move.b  #$10, $0019(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  #$01, $001C(A1)
                move.l  A0, $002A(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$0100, $002E(A0)
                move.w  #$FF00, $0010(A0)
                btst    #$00, $0001(A0)
                beq.s   Offset_0x01E9A6
                neg.w   $0010(A0)
Offset_0x01E9A6:
                rts
Offset_0x01E9A8:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01E9C4(PC, D0), D1
                jsr     Offset_0x01E9C4(PC, D1)
                lea     (Offset_0x01EAF2), A1
                bsr     J_AnimateSprite_09      ; Offset_0x01EB98
                bra     Offset_0x01EBA4
Offset_0x01E9C4:
                dc.w    Offset_0x01E9C8-Offset_0x01E9C4
                dc.w    Offset_0x01EA58-Offset_0x01E9C4
Offset_0x01E9C8:
                bsr     Offset_0x01EA0A
                subq.w  #$01, $0030(A0)
                move.w  $0030(A0), D0
                cmpi.w  #$000F, D0
                beq.s   Offset_0x01E9EE
                tst.w   D0
                bpl.s   Offset_0x01E9EC
                subq.w  #$01, $002E(A0)
                bgt     J_SpeedToPos_0E         ; Offset_0x01EBB0
                move.w  #$001E, $0030(A0)
Offset_0x01E9EC:
                rts
Offset_0x01E9EE:
                sf      $0032(A0)
                neg.w   $0010(A0)
                bchg    #0, $0001(A0)
                bchg    #0, $0022(A0)
                move.w  #$0100, $002E(A0)
                rts
Offset_0x01EA0A:
                tst.b   $0032(A0)
                bne     Offset_0x01EA56
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                move.w  D0, D1
                bpl.s   Offset_0x01EA20
                neg.w   D0
Offset_0x01EA20:
                cmpi.w  #$0028, D0
                blt.s   Offset_0x01EA56
                cmpi.w  #$0030, D0
                bgt.s   Offset_0x01EA56
                tst.w   D1
                bpl.s   Offset_0x01EA3A
                btst    #$00, $0001(A0)
                beq.s   Offset_0x01EA56
                bra.s   Offset_0x01EA42
Offset_0x01EA3A:
                btst    #$00, $0001(A0)
                bne.s   Offset_0x01EA56
Offset_0x01EA42:
                st      $0032(A0)
                addq.b  #$02, $0025(A0)
                move.b  #$03, $001C(A0)
                move.w  #$0032, $0034(A0)
Offset_0x01EA56:
                rts
Offset_0x01EA58:
                move.w  $0034(A0), D0
                subq.w  #$01, D0
                blt.s   Offset_0x01EA6C
                move.w  D0, $0034(A0)
                cmpi.w  #$0014, D0
                beq.s   Offset_0x01EA72
                rts
Offset_0x01EA6C:
                subq.b  #$02, $0025(A0)
                rts
Offset_0x01EA72:
                jsr     S1SingleObjectLoad      ; Offset_0x00E788
                bne.s   Offset_0x01EAEC
                move.b  #$4B, $0000(A1)
                move.b  #$06, $0024(A1)
                move.l  #Buzz_Bomber_Mappings, $0004(A1) ; Offset_0x01EB0E
                move.w  #$03E6, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_03 ; Offset_0x01EB9E
                move.b  #$04, $0018(A1)
                move.b  #$98, $0020(A1)
                move.b  #$10, $0019(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  #$02, $001C(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                addi.w  #$0018, $000C(A1)
                move.w  #$000D, D0
                move.w  #$0180, $0012(A1)
                move.w  #$FE80, $0010(A1)
                btst    #$00, $0001(A1)
                beq.s   Offset_0x01EAEC
                neg.w   $0010(A1)
                neg.w   D0
Offset_0x01EAEC:
                add.w   D0, $0008(A1)
                rts                
Offset_0x01EAF2:
                dc.w    Offset_0x01EAFA-Offset_0x01EAF2
                dc.w    Offset_0x01EAFD-Offset_0x01EAF2
                dc.w    Offset_0x01EB01-Offset_0x01EAF2
                dc.w    Offset_0x01EB05-Offset_0x01EAF2
Offset_0x01EAFA:                
                dc.b    $0F, $00, $FF                         
Offset_0x01EAFD:
                dc.b    $02, $03, $04, $FF
Offset_0x01EB01:                
                dc.b    $03, $05, $06, $FF
Offset_0x01EB05:                
                dc.b    $09, $01, $01, $01, $01, $01, $FD, $00, $00 
Buzz_Bomber_Mappings:                    
Offset_0x01EB0E:
                dc.w    Offset_0x01EB1C-Offset_0x01EB0E
                dc.w    Offset_0x01EB2E-Offset_0x01EB0E
                dc.w    Offset_0x01EB48-Offset_0x01EB0E
                dc.w    Offset_0x01EB62-Offset_0x01EB0E
                dc.w    Offset_0x01EB6C-Offset_0x01EB0E
                dc.w    Offset_0x01EB76-Offset_0x01EB0E
                dc.w    Offset_0x01EB80-Offset_0x01EB0E
Offset_0x01EB1C:
                dc.w    $0002
                dc.l    $F8090000, $0000FFE8, $F8090006, $00030000
Offset_0x01EB2E:
                dc.w    $0003
                dc.l    $F8090000, $0000FFE8, $F805000C, $00060000
                dc.l    $08050010, $00080002
Offset_0x01EB48:
                dc.w    $0003
                dc.l    $F8090000, $0000FFE8, $F805000C, $00060000
                dc.l    $08050014, $000A0002
Offset_0x01EB62:
                dc.w    $0001
                dc.l    $F0010014, $000A0004
Offset_0x01EB6C:
                dc.w    $0001
                dc.l    $F0010016, $000B0004
Offset_0x01EB76:
                dc.w    $0001
                dc.l    $F8010018, $000CFFF4
Offset_0x01EB80:
                dc.w    $0001
                dc.l    $F801001A, $000DFFF4                
;=============================================================================== 
; Object 0x4B - Green Hill - Buzz Bomber  
; [ End ]                         
;===============================================================================  
                dc.w    $0000                   ; Filler
J_DeleteObject_24: ; Offset_0x01EB8C:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_S1SingleObjectLoad_0B: ; Offset_0x01EB92:
                jmp     S1SingleObjectLoad      ; Offset_0x00E788
J_AnimateSprite_09: ; Offset_0x01EB98:
                jmp     AnimateSprite           ; Offset_0x00D412
J_ModifyA1SpriteAttr_2P_03: ; Offset_0x01EB9E:
                jmp     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
Offset_0x01EBA4:
                jmp     Offset_0x00D340
J_ModifySpriteAttr_2P_20: ; Offset_0x01EBAA:
                jmp     ModifySpriteAttr_2P     ; Offset_0x00DC30
J_SpeedToPos_0E: ; Offset_0x01EBB0:
                jmp     SpeedToPos              ; Offset_0x00D27A
                dc.w    $0000                   ; Filler                
;=============================================================================== 
; Object 0x4A - Oil Ocean - Octus
; [ Begin ]                         
;===============================================================================                 
Obj_0x4A_Octus: ; Offset_0x01EBB8:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01EBC6(PC, D0), D1
                jmp     Offset_0x01EBC6(PC, D1)
Offset_0x01EBC6:          
                dc.w    Offset_0x01EBF6-Offset_0x01EBC6
                dc.w    Offset_0x01EC5C-Offset_0x01EBC6
                dc.w    Offset_0x01EBEA-Offset_0x01EBC6
                dc.w    Offset_0x01EBCE-Offset_0x01EBC6
Offset_0x01EBCE:
                subi.w  #$0001, $002C(A0)
                bmi.s   Offset_0x01EBD8
                rts
Offset_0x01EBD8:
                bsr     J_ObjectFall_04         ; Offset_0x01EE60
Offset_0x01EBDC:
                lea     (Offset_0x01EDAA), A1
                bsr     J_AnimateSprite_0A      ; Offset_0x01EE5A
                bra     J_MarkObjGone_16        ; Offset_0x01EE54
Offset_0x01EBEA:
                subq.w  #$01, $002C(A0)
                beq     J_DeleteObject_25       ; Offset_0x01EE4E
                bra     J_DisplaySprite_10      ; Offset_0x01EE48
Offset_0x01EBF6:
                move.l  #Octus_Mappings, $0004(A0) ; Offset_0x01EDBC
                move.w  #$238A, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$08, $0017(A0)
                bsr     J_ObjectFall_04         ; Offset_0x01EE60
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x01EC54
                add.w   D1, $000C(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bpl.s   Offset_0x01EC54
Offset_0x01EC4E:
                bchg    #0, $0022(A0)
Offset_0x01EC54:
                move.w  $000C(A0), $002A(A0)
                rts
Offset_0x01EC5C:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01EC78(PC, D0), D1
                jsr     Offset_0x01EC78(PC, D1)
                lea     (Offset_0x01EDAA), A1
                bsr     J_AnimateSprite_0A      ; Offset_0x01EE5A
                bra     J_MarkObjGone_16        ; Offset_0x01EE54
Offset_0x01EC78:
                dc.w    Offset_0x01EC80-Offset_0x01EC78
                dc.w    Offset_0x01ECA0-Offset_0x01EC78
                dc.w    Offset_0x01ECC2-Offset_0x01EC78
                dc.w    Offset_0x01ED94-Offset_0x01EC78
Offset_0x01EC80:
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                cmpi.w  #$0080, D0
                bgt.s   Offset_0x01EC9E
                cmpi.w  #$FF80, D0
                blt.s   Offset_0x01EC9E
                addq.b  #$02, $0025(A0)
                move.b  #$01, $001C(A0)
Offset_0x01EC9E:
                rts
Offset_0x01ECA0:
                subi.l  #$00018000, $000C(A0)
                move.w  $002A(A0), D0
                sub.w   $000C(A0), D0
                cmpi.w  #$0020, D0
                ble.s   Offset_0x01ECC0
                addq.b  #$02, $0025(A0)
                move.w  #$0000, $002C(A0)
Offset_0x01ECC0:
                rts
Offset_0x01ECC2:
                subi.w  #$0001, $002C(A0)
                beq     Offset_0x01ED8E
                bpl     Offset_0x01ED8C
                move.w  #$001E, $002C(A0)
                jsr     SingleObjectLoad        ; (Offset_0x00E772)
                bne.s   Offset_0x01ED28
                move.b  #$4A, $0000(A1)
                move.b  #$04, $0024(A1)
                move.l  #Octus_Mappings, $0004(A1) ; Offset_0x01EDBC
                move.b  #$04, $001A(A1)
                move.w  #$24C6, $0002(A1)
                move.b  #$03, $0018(A1)
                move.b  #$10, $0019(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$001E, $002C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0022(A0), $0022(A1)
Offset_0x01ED28:
                jsr     SingleObjectLoad        ; (Offset_0x00E772)
                bne.s   Offset_0x01ED8C
                move.b  #$4A, $0000(A1)
                move.b  #$06, $0024(A1)
                move.l  #Octus_Mappings, $0004(A1) ; Offset_0x01EDBC
                move.w  #$24C6, $0002(A1)
                move.b  #$04, $0018(A1)
                move.b  #$10, $0019(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.w  #$000F, $002C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  #$02, $001C(A1)
                move.w  #$FA80, $0010(A1)
                btst    #$00, $0001(A1)
                beq.s   Offset_0x01ED8C
                neg.w   $0010(A1)
Offset_0x01ED8C:
                rts
Offset_0x01ED8E:
                addq.b  #$02, $0025(A0)
                rts
Offset_0x01ED94:
                move.w  #$FFFA, D0
                btst    #$00, $0001(A0)
                beq.s   Offset_0x01EDA2
                neg.w   D0
Offset_0x01EDA2:
                add.w   D0, $0008(A0)
                bra     J_MarkObjGone_16        ; Offset_0x01EE54  
Offset_0x01EDAA:
                dc.w    Offset_0x01EDB0-Offset_0x01EDAA
                dc.w    Offset_0x01EDB3-Offset_0x01EDAA
                dc.w    Offset_0x01EDB8-Offset_0x01EDAA
Offset_0x01EDB0:
                dc.b    $0F, $00, $FF
Offset_0x01EDB3:
                dc.b    $03, $01, $02, $03, $FF
Offset_0x01EDB8:
                dc.b    $02, $05, $06, $FF
Octus_Mappings:                
Offset_0x01EDBC:
                dc.w    Offset_0x01EDCA-Offset_0x01EDBC
                dc.w    Offset_0x01EDDC-Offset_0x01EDBC
                dc.w    Offset_0x01EDF6-Offset_0x01EDBC
                dc.w    Offset_0x01EE10-Offset_0x01EDBC
                dc.w    Offset_0x01EE2A-Offset_0x01EDBC
                dc.w    Offset_0x01EE34-Offset_0x01EDBC
                dc.w    Offset_0x01EE3E-Offset_0x01EDBC
Offset_0x01EDCA:
                dc.w    $0002
                dc.l    $F00D0000, $0000FFF0, $000D0008, $0004FFF0
Offset_0x01EDDC:
                dc.w    $0003
                dc.l    $F00D0000, $0000FFF0, $00090010, $0008FFE8
                dc.l    $00090016, $000B0000
Offset_0x01EDF6:
                dc.w    $0003
                dc.l    $F00D0000, $0000FFF0, $0009001C, $000EFFE8
                dc.l    $00090022, $00110000
Offset_0x01EE10:
                dc.w    $0003
                dc.l    $F00D0000, $0000FFF0, $00090028, $0014FFE8
                dc.l    $0009002E, $00170000
Offset_0x01EE2A:
                dc.w    $0001
                dc.l    $F0010034, $001AFFF7
Offset_0x01EE34:
                dc.w    $0001
                dc.l    $F2010036, $001BFFF0
Offset_0x01EE3E:
                dc.w    $0001
                dc.l    $F2010038, $001CFFF0                                         
;=============================================================================== 
; Object 0x4A - Oil Ocean - Octus
; [ End ]                         
;===============================================================================    
J_DisplaySprite_10: ; Offset_0x01EE48:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_25: ; Offset_0x01EE4E:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_MarkObjGone_16: ; Offset_0x01EE54:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_AnimateSprite_0A: ; Offset_0x01EE5A:
                jmp     AnimateSprite           ; (Offset_0x00D412)
J_ObjectFall_04: ; Offset_0x01EE60:
                jmp     ObjectFall              ; (Offset_0x00D24E)
                dc.w    $0000                   ; Filler 
;=============================================================================== 
; Object 0x4C - Hidden Palace - Batbot
; [ Begin ]                         
;=============================================================================== 
Obj_0x4C_Batbot: ; Offset_0x01EE68:  
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01EE76(PC, D0), D1
                jmp     Offset_0x01EE76(PC, D1)
Offset_0x01EE76:
                dc.w    Offset_0x01EE7C-Offset_0x01EE76
                dc.w    Offset_0x01EEBA-Offset_0x01EE76
                dc.w    Offset_0x01EF28-Offset_0x01EE76
Offset_0x01EE7C:                
                move.l  #Batbot_Mappings, $0004(A0)  ; Offset_0x01F106
                move.w  #$2530, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$08, $0017(A0)
                addq.b  #$02, $0024(A0)
                move.w  $000C(A0), $002E(A0)
                rts
Offset_0x01EEBA:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01EEDA(PC, D0), D1
                jsr     Offset_0x01EEDA(PC, D1)
                bsr     Offset_0x01EEE0
                lea     (Offset_0x01F0D2), A1
                bsr     J_AnimateSprite_0B      ; Offset_0x01F2E2
                bra     J_MarkObjGone_17        ; Offset_0x01F2DC
Offset_0x01EEDA:
                dc.w    Offset_0x01F046-Offset_0x01EEDA
                dc.w    Offset_0x01F07E-Offset_0x01EEDA
                dc.w    Offset_0x01F08A-Offset_0x01EEDA                
Offset_0x01EEE0:
                move.b  $003F(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                asr.w   #$06, D0
                add.w   $002E(A0), D0
                move.w  D0, $000C(A0)
                addq.b  #$04, $003F(A0)
                rts
Offset_0x01EEFA:                
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                cmpi.w  #$0080, D0
                bgt.s   Offset_0x01EF26
                cmpi.w  #$FF80, D0
                blt.s   Offset_0x01EF26
                move.b  #$04, $0025(A0)
                move.b  #$02, $001C(A0)
                move.w  #$0008, $002A(A0)
                move.b  #$00, $003E(A0)
Offset_0x01EF26:
                rts
Offset_0x01EF28:
                bsr     Offset_0x01F026
                bsr     Offset_0x01EFC8
                bsr     Offset_0x01EF48
                bsr     J_SpeedToPos_0F         ; Offset_0x01F2E8
                lea     (Offset_0x01F0D2), A1
                bsr     J_AnimateSprite_0B      ; Offset_0x01F2E2
                bra     J_MarkObjGone_17        ; Offset_0x01F2DC
                rts
Offset_0x01EF48:
                tst.b   $003D(A0)
                beq.s   Offset_0x01EF5A
                bset    #$00, $0001(A0)
                bset    #$00, $0022(A0)
Offset_0x01EF5A:
                rts
Offset_0x01EF5C:                
                subi.w  #$0001, $002C(A0)
                bpl.s   Offset_0x01EFA6
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                cmpi.w  #$0060, D0
                bgt.s   Offset_0x01EFA8
                cmpi.w  #$FFA0, D0
                blt.s   Offset_0x01EFA8
                tst.w   D0
                bpl.s   Offset_0x01EF80
                st      $003D(A0)
Offset_0x01EF80:
                move.b  #$40, $003F(A0)
                move.w  #$0400, $0014(A0)
                move.b  #$04, $0024(A0)
                move.b  #$03, $001C(A0)
                move.w  #$000C, $002A(A0)
                move.b  #$01, $003E(A0)
                moveq   #$00, D0
Offset_0x01EFA6:
                rts
Offset_0x01EFA8:
                cmpi.w  #$0080, D0
                bgt.s   Offset_0x01EFB4
                cmpi.w  #$FF80, D0
                bgt.s   Offset_0x01EFA6
Offset_0x01EFB4:
                move.b  #$01, $001C(A0)
                move.b  #$00, $0025(A0)
                move.w  #$0018, $002A(A0)
                rts
Offset_0x01EFC8:
                tst.b   $003D(A0)
                bne.s   Offset_0x01EFE2
                moveq   #$00, D0
                move.b  $003F(A0), D0
                cmpi.w  #$00C0, D0
                bge.s   Offset_0x01EFF6
                addq.b  #$02, D0
                move.b  D0, $003F(A0)
                rts
Offset_0x01EFE2:
                moveq   #$00, D0
                move.b  $003F(A0), D0
                cmpi.w  #$00C0, D0
                beq.s   Offset_0x01EFF6
                subq.b  #$02, D0
                move.b  D0, $003F(A0)
                rts
Offset_0x01EFF6:
                sf      $003D(A0)
                move.b  #$00, $001C(A0)
                move.b  #$02, $0024(A0)
                move.b  #$00, $0025(A0)
                move.w  #$0018, $002A(A0)
                move.b  #$01, $001C(A0)
                bclr    #$00, $0001(A0)
                bclr    #$00, $0022(A0)
                rts
Offset_0x01F026:
                move.b  $003F(A0), D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  $0014(A0), D1
                asr.l   #$08, D1
                move.w  D1, $0010(A0)
                muls.w  $0014(A0), D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
                rts
Offset_0x01F046:
                subi.w  #$0001, $002A(A0)
                bpl.s   Offset_0x01F07C
                bsr     Offset_0x01EEFA
                beq.s   Offset_0x01F07C
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                andi.b  #$FF, D0
                bne.s   Offset_0x01F07C
                move.w  #$0018, $002A(A0)
                move.w  #$001E, $002C(A0)
                addq.b  #$02, $0025(A0)
                move.b  #$01, $001C(A0)
                move.b  #$00, $003E(A0)
Offset_0x01F07C:
                rts
Offset_0x01F07E:
                subq.b  #$01, $002A(A0)
                bpl.s   Offset_0x01F088
                subq.b  #$02, $0025(A0)
Offset_0x01F088:
                rts
Offset_0x01F08A:
                bsr     Offset_0x01EF5C
                beq.s   Offset_0x01F0D0
                subi.w  #$0001, $002A(A0)
                bne.s   Offset_0x01F0D0
                move.b  $003E(A0), D0
                beq.s   Offset_0x01F0B8
                move.b  #$00, $003E(A0)
                move.w  #$0008, $002A(A0)
                bset    #$00, $0001(A0)
                bset    #$00, $0022(A0)
                rts
Offset_0x01F0B8:
                move.b  #$01, $003E(A0)
                move.w  #$000C, $002A(A0)
                bclr    #$00, $0001(A0)
                bclr    #$00, $0022(A0)
Offset_0x01F0D0:
                rts
Offset_0x01F0D2:
                dc.w    Offset_0x01F0DA-Offset_0x01F0D2
                dc.w    Offset_0x01F0DE-Offset_0x01F0D2
                dc.w    Offset_0x01F0ED-Offset_0x01F0D2
                dc.w    Offset_0x01F0FE-Offset_0x01F0D2
Offset_0x01F0DA:  
                dc.b    $01, $00, $05, $FF
Offset_0x01F0DE:
                dc.b    $01, $01, $06, $01, $06, $02, $07, $02, $07, $01, $06, $01, $06, $FD, $00
Offset_0x01F0ED:
                dc.b    $01, $01, $06, $01, $06, $02, $07, $03, $08, $04, $09, $04, $09, $03, $08, $FE
                dc.b    $0A
Offset_0x01F0FE:
                dc.b    $03, $0A, $0B, $0C, $0D, $0E, $FF, $00
Batbot_Mappings:                
Offset_0x01F106:
                dc.w    Offset_0x01F124-Offset_0x01F106
                dc.w    Offset_0x01F146-Offset_0x01F106
                dc.w    Offset_0x01F168-Offset_0x01F106
                dc.w    Offset_0x01F18A-Offset_0x01F106
                dc.w    Offset_0x01F1AC-Offset_0x01F106
                dc.w    Offset_0x01F1C6-Offset_0x01F106
                dc.w    Offset_0x01F1E8-Offset_0x01F106
                dc.w    Offset_0x01F20A-Offset_0x01F106
                dc.w    Offset_0x01F22C-Offset_0x01F106
                dc.w    Offset_0x01F24E-Offset_0x01F106
                dc.w    Offset_0x01F268-Offset_0x01F106
                dc.w    Offset_0x01F282-Offset_0x01F106
                dc.w    Offset_0x01F29C-Offset_0x01F106
                dc.w    Offset_0x01F2AE-Offset_0x01F106
                dc.w    Offset_0x01F2C0-Offset_0x01F106
Offset_0x01F124:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $00050004, $0002FFF8
                dc.l    $F00B0008, $00040005, $F00B0808, $0804FFE3
Offset_0x01F146:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $00050004, $0002FFF8
                dc.l    $F60D0014, $000A0005, $F60D0814, $080AFFDB
Offset_0x01F168:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $00050004, $0002FFF8
                dc.l    $F80D001C, $000E0004, $F80D081C, $080EFFDC
Offset_0x01F18A:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $00050004, $0002FFF8
                dc.l    $F8050024, $0012FFEC, $F8050028, $00140004
Offset_0x01F1AC:
                dc.w    $0003
                dc.l    $F801002C, $00160000, $F0050000, $0000FFF8
                dc.l    $00050004, $0002FFF8
Offset_0x01F1C6:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $0005002E, $0017FFF8
                dc.l    $F00B0008, $00040005, $F00B0808, $0804FFE3
Offset_0x01F1E8:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $0005002E, $0017FFF8
                dc.l    $F60D0014, $000A0005, $F60D0814, $080AFFDB
Offset_0x01F20A:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $0005002E, $0017FFF8
                dc.l    $F80D001C, $000E0004, $F80D081C, $080EFFDC
Offset_0x01F22C:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF8, $0005002E, $0017FFF8
                dc.l    $F8050028, $00140004, $F8050024, $0012FFEC
Offset_0x01F24E:
                dc.w    $0003
                dc.l    $F801002C, $00160000, $F0050000, $0000FFF8
                dc.l    $0005002E, $0017FFF8
Offset_0x01F268:
                dc.w    $0003
                dc.l    $F0070032, $0019FFF8, $F80D001C, $000E0004
                dc.l    $F80D081C, $080EFFDC
Offset_0x01F282:
                dc.w    $0003
                dc.l    $F0070032, $0019FFF8, $F8050028, $00140004
                dc.l    $F8050024, $0012FFEC
Offset_0x01F29C:
                dc.w    $0002
                dc.l    $F801002C, $00160000, $F0070032, $0019FFF8
Offset_0x01F2AE:
                dc.w    $0002
                dc.l    $F801082C, $0816FFF8, $F0070032, $0019FFF8
Offset_0x01F2C0:
                dc.w    $0003
                dc.l    $F0070032, $0019FFF8, $F8050828, $0814FFEC
                dc.l    $F8050824, $08120004   
;=============================================================================== 
; Object 0x4C - Hidden Palace - Batbot
; [ End ]                         
;===============================================================================                
                dc.w    $0000                   ; Filler
J_MarkObjGone_17: ; Offset_0x01F2DC:
                jmp     MarkObjGone             ; Offset_0x00D2A0
J_AnimateSprite_0B: ; Offset_0x01F2E2:
                jmp     AnimateSprite           ; Offset_0x00D412
J_SpeedToPos_0F: ; Offset_0x01F2E8:
                jmp     SpeedToPos              ; Offset_0x00D27A
                dc.w    $0000                   ; Filler
;=============================================================================== 
; Object 0x4E - (Desert Level) - Crocobot 
; [ Begin ]                         
;===============================================================================                   
Obj_0x4E_Crocobot: ; Offset_0x01F2F0:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01F2FE(PC, D0), D1
                jmp     Offset_0x01F2FE(PC, D1)
Offset_0x01F2FE:
                dc.w    Offset_0x01F302-Offset_0x01F2FE
                dc.w    Offset_0x01F352-Offset_0x01F2FE
Offset_0x01F302:
                move.l  #Crocobot_Mappings, $0004(A0) ; Offset_0x01F420
                move.w  #$2300, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$08, $0017(A0)
                bsr     J_ObjectFall_05         ; Offset_0x01F5DC
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x01F350
                add.w   D1, $000C(A0)
                move.w  #$0000, $0012(A0)
                addq.b  #$02, $0024(A0)
Offset_0x01F350:
                rts
Offset_0x01F352:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01F36E(PC, D0), D1
                jsr     Offset_0x01F36E(PC, D1)
                lea     (Offset_0x01F406), A1
                bsr     J_AnimateSprite_0C      ; Offset_0x01F5D6
                bra     J_MarkObjGone_18        ; Offset_0x01F5D0
Offset_0x01F36E:
                dc.w    Offset_0x01F372-Offset_0x01F36E
                dc.w    Offset_0x01F396-Offset_0x01F36E
Offset_0x01F372:
                subq.w  #$01, $0030(A0)
                bpl.s   Offset_0x01F394
                addq.b  #$02, $0025(A0)
                move.w  #$FF40, $0010(A0)
                move.b  #$00, $001C(A0)
                bchg    #0, $0022(A0)
                bne.s   Offset_0x01F394
                neg.w   $0010(A0)
Offset_0x01F394:
                rts
Offset_0x01F396:
                bsr     Offset_0x01F3CE
                bsr     J_SpeedToPos_10         ; Offset_0x01F5E2
                jsr     ObjHitFloor             ; (Offset_0x013898)
                cmpi.w  #$FFF8, D1
                blt.s   Offset_0x01F3B6
                cmpi.w  #$000C, D1
                bge.s   Offset_0x01F3B6
                add.w   D1, $000C(A0)
                rts
Offset_0x01F3B6:
                subq.b  #$02, $0025(A0)
                move.w  #$003B, $0030(A0)
                move.w  #$0000, $0010(A0)
                move.b  #$01, $001C(A0)
                rts
Offset_0x01F3CE:
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bmi.s   Offset_0x01F3E8
                cmpi.w  #$0040, D0
                bgt.s   Offset_0x01F3FE
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01F3F6
                rts
Offset_0x01F3E8:
                cmpi.w  #$FFC0, D0
                blt.s   Offset_0x01F3FE
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01F3FE
Offset_0x01F3F6:
                move.b  #$02, $001C(A0)
                rts
Offset_0x01F3FE:
                move.b  #$00, $001C(A0)
                rts        

Offset_0x01F406:
                dc.w    Offset_0x01F40C-Offset_0x01F406
                dc.w    Offset_0x01F414-Offset_0x01F406
                dc.w    Offset_0x01F417-Offset_0x01F406
Offset_0x01F40C:
                dc.b    $03, $00, $04, $02, $03, $01, $05, $FF
Offset_0x01F414:
                dc.b    $0F, $00, $FF
Offset_0x01F417:
                dc.b    $03, $06, $0A, $08, $09, $07, $0B, $FF, $00
Crocobot_Mappings:                
Offset_0x01F420:
                dc.w    Offset_0x01F438-Offset_0x01F420
                dc.w    Offset_0x01F45A-Offset_0x01F420
                dc.w    Offset_0x01F47C-Offset_0x01F420
                dc.w    Offset_0x01F49E-Offset_0x01F420
                dc.w    Offset_0x01F4C0-Offset_0x01F420
                dc.w    Offset_0x01F4E2-Offset_0x01F420
                dc.w    Offset_0x01F504-Offset_0x01F420
                dc.w    Offset_0x01F526-Offset_0x01F420
                dc.w    Offset_0x01F548-Offset_0x01F420
                dc.w    Offset_0x01F56A-Offset_0x01F420
                dc.w    Offset_0x01F58C-Offset_0x01F420
                dc.w    Offset_0x01F5AE-Offset_0x01F420
Offset_0x01F438:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050020, $0010000C
Offset_0x01F45A:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050024, $0012000C
Offset_0x01F47C:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050028, $0014000C
Offset_0x01F49E:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050020, $0010000C
Offset_0x01F4C0:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050024, $0012000C
Offset_0x01F4E2:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050028, $0014000C
Offset_0x01F504:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050020, $0010000C
Offset_0x01F526:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050024, $0012000C
Offset_0x01F548:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001C, $000E0004, $00050028, $0014000C
Offset_0x01F56A:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050020, $0010000C
Offset_0x01F58C:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050024, $0012000C
Offset_0x01F5AE:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC, $F8050018, $000C0004
                dc.l    $0001001E, $000F0004, $00050028, $0014000C                
;=============================================================================== 
; Object 0x4E - (Desert Level) - Crocobot 
; [ End ]                         
;===============================================================================                 
J_MarkObjGone_18: ; Offset_0x01F5D0:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_AnimateSprite_0C: ; Offset_0x01F5D6:
                jmp     AnimateSprite           ; (Offset_0x00D412)
J_ObjectFall_05: ; Offset_0x01F5DC:
                jmp     ObjectFall              ; (Offset_0x00D24E)
J_SpeedToPos_10: ; Offset_0x01F5E2:
                jmp     SpeedToPos              ; (Offset_0x00D27A)                 
;=============================================================================== 
; Object 0x53 - Green Hill - Chopper
; [ Begin ]                         
;===============================================================================                  
Obj_0x53_Chopper: ; Offset_0x01F5E8: 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01F5FA(PC, D0), D1
                jsr     Offset_0x01F5FA(PC, D1)
                bra     J_MarkObjGone_19        ; Offset_0x01F6D0
Offset_0x01F5FA:
                dc.w    Offset_0x01F5FE-Offset_0x01F5FA
                dc.w    Offset_0x01F638-Offset_0x01F5FA
Offset_0x01F5FE:
                addq.b  #$02, $0024(A0)
                move.l  #Chopper_Mappings, $0004(A0) ; Offset_0x01F696
                move.w  #$041C, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_21 ; Offset_0x01F6DC
                move.b  #$04, $0001(A0)
                move.b  #$04, $0018(A0)
                move.b  #$09, $0020(A0)
                move.b  #$10, $0019(A0)
                move.w  #$FC00, $0012(A0)
                move.w  $000C(A0), $0030(A0)
Offset_0x01F638:
                lea     (Offset_0x01F684), A1
                bsr     J_AnimateSprite_0D      ; Offset_0x01F6D6
                bsr     J_SpeedToPos_11         ; Offset_0x01F6E2
                addi.w  #$0018, $0012(A0)
                move.w  $0030(A0), D0
                cmp.w   $000C(A0), D0
                bcc.s   Offset_0x01F660
                move.w  D0, $000C(A0)
                move.w  #$FB00, $0012(A0)
Offset_0x01F660:
                move.b  #$01, $001C(A0)
                subi.w  #$00C0, D0
                cmp.w   $000C(A0), D0
                bcc.s   Offset_0x01F682
                move.b  #$00, $001C(A0)
                tst.w   $0012(A0)
                bmi.s   Offset_0x01F682
                move.b  #$02, $001C(A0)
Offset_0x01F682:
                rts
Offset_0x01F684:
                dc.w    Offset_0x01F68A-Offset_0x01F684
                dc.w    Offset_0x01F68E-Offset_0x01F684
                dc.w    Offset_0x01F692-Offset_0x01F684
Offset_0x01F68A:
                dc.b    $07, $00, $01, $FF
Offset_0x01F68E:
                dc.b    $03, $00, $01, $FF
Offset_0x01F692:
                dc.b    $07, $00, $FF, $00
Chopper_Mappings:                
Offset_0x01F696:
                dc.w    Offset_0x01F69A-Offset_0x01F696
                dc.w    Offset_0x01F6B4-Offset_0x01F696
Offset_0x01F69A:
                dc.w    $0003
                dc.l    $F0050000, $0000FFF4, $F0010004, $00020004
                dc.l    $0009000A, $0005FFF4
Offset_0x01F6B4:
                dc.w    $0003
                dc.l    $F0050000, $0000FFF4, $F0050006, $00030002
                dc.l    $00090010, $0008FFF4                  
;=============================================================================== 
; Object 0x53 - Green Hill - Chopper
; [ End ]                         
;=============================================================================== 
                dc.w    $0000                   ; Filler  
J_MarkObjGone_19: ; Offset_0x01F6D0:
                jmp     MarkObjGone             ; Offset_0x00D2A0
J_AnimateSprite_0D: ; Offset_0x01F6D6:
                jmp     AnimateSprite           ; Offset_0x00D412
J_ModifySpriteAttr_2P_21: ; Offset_0x01F6DC:
                jmp     ModifySpriteAttr_2P     ; Offset_0x00DC30
J_SpeedToPos_11: ; Offset_0x01F6E2:
                jmp     SpeedToPos              ; Offset_0x00D27A  
;=============================================================================== 
; Object 0x54 - Green Hill - Motobug
; [ Begin ]                         
;===============================================================================  
Obj_0x54_Motobug: ; Offset_0x01F6E8:                 
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01F6F6(PC, D0), D1
                jmp     Offset_0x01F6F6(PC, D1)
Offset_0x01F6F6:                
                dc.w    Offset_0x01F700-Offset_0x01F6F6
                dc.w    Offset_0x01F7A0-Offset_0x01F6F6
                dc.w    Offset_0x01F8CC-Offset_0x01F6F6
                dc.w    Offset_0x01F904-Offset_0x01F6F6
                dc.w    Offset_0x01F88A-Offset_0x01F6F6
Offset_0x01F700:
                move.l  #Motobug_Mappings, $0004(A0) ; Offset_0x01F938
                move.w  #$0402, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_22 ; Offset_0x01F98A
                ori.b   #$04, $0001(A0)
                move.b  #$0A, $0020(A0)
                move.b  #$04, $0018(A0)
                move.b  #$10, $0019(A0)
                move.b  #$10, $0016(A0)
                move.b  #$0E, $0017(A0)
                bsr     J_S1SingleObjectLoad_0C  ; Offset_0x01F972
                bne.s   Offset_0x01F788
                move.b  #$54, $0000(A1)
                move.b  #$06, $0024(A1)
                move.l  #Motobug_Mappings, $0004(A1) ; Offset_0x01F938
                move.w  #$2402, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_04 ; Offset_0x01F97E
                move.b  #$03, $0018(A1)
                move.b  #$10, $0019(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0001(A0), $0001(A1)
                move.l  A0, $002A(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  #$02, $001A(A1)
Offset_0x01F788:
                addq.b  #$02, $0024(A0)
                move.w  #$FF80, D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01F79A
                neg.w   D0
Offset_0x01F79A:
                move.w  D0, $0010(A0)
                rts
Offset_0x01F7A0:
                bsr     Offset_0x01F7E8
                bsr     J_SpeedToPos_12         ; Offset_0x01F996
                jsr     ObjHitFloor             ; Offset_0x013898
                cmpi.w  #$FFF8, D1
                blt.s   Offset_0x01F7CC
                cmpi.w  #$000C, D1
                bge.s   Offset_0x01F7CC
                add.w   D1, $000C(A0)
                lea     (Offset_0x01F92C), A1
                bsr     J_AnimateSprite_0E      ; Offset_0x01F978
                bra     Offset_0x01F984
Offset_0x01F7CC:
                addq.b  #$02, $0024(A0)
                move.w  #$0014, $0030(A0)
                st      $0034(A0)
                lea     (Offset_0x01F92C), A1
                bsr     J_AnimateSprite_0E      ; Offset_0x01F978
                bra     Offset_0x01F984
Offset_0x01F7E8:
                tst.b   $0035(A0)
                bne.s   Offset_0x01F82A
                move.w  ($FFFFB008).w, D0
                sub.w   $0008(A0), D0
                cmpi.w  #$0064, D0
                bgt.s   Offset_0x01F82A
                cmpi.w  #$FF9C, D0
                blt.s   Offset_0x01F82A
                tst.w   D0
                bmi.s   Offset_0x01F810
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01F82A
                bra.s   Offset_0x01F818
Offset_0x01F810:
                btst    #$00, $0022(A0)
                bne.s   Offset_0x01F82A
Offset_0x01F818:
                move.w  $0010(A0), D0
                asl.w   #$02, D0
                move.w  D0, $0010(A0)
                st      $0035(A0)
                bsr     Offset_0x01F82C
Offset_0x01F82A:
                rts
Offset_0x01F82C:
                bsr     J_S1SingleObjectLoad_0C  ; Offset_0x01F972
                bne.s   Offset_0x01F888
                move.b  #$54, $0000(A1)
                move.b  #$08, $0024(A1)
                move.l  #Buzz_Bomber_Mappings, $0004(A1) ; Offset_0x01EB0E
                move.w  #$03E6, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_04 ; Offset_0x01F97E
                move.b  #$04, $0018(A1)
                move.b  #$10, $0019(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0001(A0), $0001(A1)
                move.l  A0, $002A(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                addq.w  #$07, $000C(A1)
                addi.w  #$000D, $0008(A1)
                move.b  #$01, $001C(A1)
Offset_0x01F888:
                rts
Offset_0x01F88A:
                move.l  $002A(A0), A1
                cmpi.b  #$54, (A1)
                bne     J_DeleteObject_26       ; Offset_0x01F96C
                tst.b   $0034(A1)
                bne     J_DeleteObject_26       ; Offset_0x01F96C
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                addq.w  #$07, $000C(A0)
                moveq   #$0D, D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01F8BA
                neg.w   D0
Offset_0x01F8BA:
                add.w   D0, $0008(A0)
                lea     (Offset_0x01EAF2), A1
                bsr     J_AnimateSprite_0E      ; Offset_0x01F978
                bra     Offset_0x01F984
Offset_0x01F8CC:
                subi.w  #$0001, $0030(A0)
                bpl     Offset_0x01F984
                neg.w   $0010(A0)
                bsr     J_ObjectFall_06         ; Offset_0x01F990
                move.w  $0010(A0), D0
                asr.w   #$02, D0
                move.w  D0, $0010(A0)
                bchg    #0, $0022(A0)
                bchg    #0, $0001(A0)
                subq.b  #$02, $0024(A0)
                sf      $0034(A0)
                sf      $0035(A0)
                bra     Offset_0x01F984
Offset_0x01F904:
                move.l  $002A(A0), A1
                cmpi.b  #$54, (A1)
                bne     J_DeleteObject_26       ; Offset_0x01F96C
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                bra     Offset_0x01F984
Offset_0x01F92C:
                dc.w    Offset_0x01F930-Offset_0x01F92C
                dc.w    Offset_0x01F934-Offset_0x01F92C
Offset_0x01F930:
                dc.b    $05, $00, $01, $FF
Offset_0x01F934:
                dc.b    $01, $00, $01, $FF
Motobug_Mappings:                
Offset_0x01F938:
                dc.w    Offset_0x01F93E-Offset_0x01F938
                dc.w    Offset_0x01F950-Offset_0x01F938
                dc.w    Offset_0x01F962-Offset_0x01F938
Offset_0x01F93E:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $01090014, $000AFFF4
Offset_0x01F950:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $01091014, $100AFFF4
Offset_0x01F962:
                dc.w    $0001
                dc.l    $FA050010, $0008FFE9                     
;=============================================================================== 
; Object 0x54 - Green Hill - Motobug
; [ End ]                         
;=============================================================================== 
J_DeleteObject_26: ; Offset_0x01F96C:
                jmp     DeleteObject            ; Offset_0x00D3B4
J_S1SingleObjectLoad_0C: ; Offset_0x01F972:
                jmp     S1SingleObjectLoad      ; Offset_0x00E788
J_AnimateSprite_0E: ; Offset_0x01F978:
                jmp     AnimateSprite           ; Offset_0x00D412
J_ModifyA1SpriteAttr_2P_04: ; Offset_0x01F97E:
                jmp     ModifyA1SpriteAttr_2P   ; Offset_0x00DC4C
Offset_0x01F984:
                jmp     Offset_0x00D340
J_ModifySpriteAttr_2P_22: ; Offset_0x01F98A:
                jmp     ModifySpriteAttr_2P     ; Offset_0x00DC30
J_ObjectFall_06: ; Offset_0x01F990:
                jmp     ObjectFall              ; Offset_0x00D24E
J_SpeedToPos_12: ; Offset_0x01F996:
                jmp     SpeedToPos              ; Offset_0x00D27A   
;=============================================================================== 
; Object 0x57 - 
; [ Begin ]                         
;===============================================================================                    
Obj_0x57: ; Offset_0x01F99C:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01F9AA(PC, D0), D1
                jmp     Offset_0x01F9AA(PC, D1)
Offset_0x01F9AA:
                dc.w    Offset_0x01F9B6-Offset_0x01F9AA
                dc.w    Offset_0x01F9DC-Offset_0x01F9AA
                dc.w    Offset_0x01FA38-Offset_0x01F9AA
                dc.w    Offset_0x01FA6A-Offset_0x01F9AA
                dc.w    Offset_0x01FA94-Offset_0x01F9AA
                dc.w    Offset_0x01FAAE-Offset_0x01F9AA
Offset_0x01F9B6:
                move.b  #$00, $0020(A0)
                cmpi.w  #$29D0, $0008(A0)
                ble.s   Offset_0x01F9CE
                subi.w  #$0001, $0008(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01F9CE:
                move.w  #$29D0, $0008(A0)
                addq.b  #$02, $0025(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01F9DC:
                moveq   #$00, D0
                move.b  $002C(A0), D0
                move.w  Offset_0x01F9EA(PC, D0), D1
                jmp     Offset_0x01F9EA(PC, D1)
Offset_0x01F9EA:
                dc.w    Offset_0x01F9EE-Offset_0x01F9EA
                dc.w    Offset_0x01FA14-Offset_0x01F9EA
Offset_0x01F9EE:
                cmpi.w  #$041E, $000C(A0)
                bge.s   Offset_0x01FA00
                addi.w  #$0001, $000C(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FA00:
                addq.b  #$02, $002C(A0)
                bset    #$00, $002D(A0)
                move.w  #$003C, $002A(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FA14:
                subi.w  #$0001, $002A(A0)
                bpl     J_DisplaySprite_11      ; Offset_0x0202DC
                move.w  #$FE00, $0010(A0)
                addq.b  #$02, $0025(A0)
                move.b  #$0F, $0020(A0)
                bset    #$01, $002D(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FA38:
                bsr     Offset_0x01FBA8
                bsr     Offset_0x01FB86
                move.w  $002E(A0), D0
                lsr.w   #$01, D0
                subi.w  #$0014, D0
                move.w  D0, $000C(A0)
                move.w  #$0000, $002E(A0)
                move.l  $0008(A0), D2
                move.w  $0010(A0), D0
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.l  D2, $0008(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FA6A:
                subq.w  #$01, $003C(A0)
                dc.w    $6A00, $0000
                bset    #$00, $0022(A0)
                bclr    #$07, $0022(A0)
                clr.w   $0010(A0)
                addq.b  #$02, $0025(A0)
                move.w  #$FFDA, $003C(A0)
                move.w  #$000C, $002A(A0)
                rts
Offset_0x01FA94:
                addq.w  #$01, $000C(A0)
                subq.w  #$01, $002A(A0)
                bpl     J_DisplaySprite_11      ; Offset_0x0202DC
                addq.b  #$02, $0025(A0)
                move.b  #$00, $002C(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FAAE:
                moveq   #$00, D0
                move.b  $002C(A0), D0
                move.w  Offset_0x01FAC0(PC, D0), D1
                jsr     Offset_0x01FAC0(PC, D1)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FAC0:
                dc.w    Offset_0x01FAC6-Offset_0x01FAC0
                dc.w    Offset_0x01FB3E-Offset_0x01FAC0
                dc.w    Offset_0x01FB58-Offset_0x01FAC0
Offset_0x01FAC6:
                bclr    #$00, $002D(A0)
                bsr     J_S1SingleObjectLoad_0D ; Offset_0x0202EE
                bne     J_DisplaySprite_11      ; Offset_0x0202DC
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #Obj_0x57_Mappings, $0004(A1) ; Offset_0x020168
                move.w  #$2540, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_05 ; Offset_0x0202FA
                move.b  #$04, $0001(A1)
                move.b  #$20, $0019(A1)
                move.b  #$04, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addi.w  #$000C, $000C(A1)
                move.b  $0022(A0), $0022(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  #$08, $0024(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0010, $002A(A1)
                move.w  #$0032, $002A(A0)
                addq.b  #$02, $002C(A0)
                rts
Offset_0x01FB3E:
                subi.w  #$0001, $002A(A0)
                bpl.s   Offset_0x01FB56
                bset    #$02, $002D(A0)
                move.w  #$0060, $002A(A0)
                addq.b  #$02, $002C(A0)
Offset_0x01FB56:
                rts
Offset_0x01FB58:
                subq.w  #$01, $000C(A0)
                subi.w  #$0001, $002A(A0)
                bpl.s   Offset_0x01FB84
                addq.w  #$01, $000C(A0)
                addq.w  #$02, $0008(A0)
                cmpi.w  #$2B08, $0008(A0)
                bcs.s   Offset_0x01FB84
                tst.b   ($FFFFF7A7).w
                bne.s   Offset_0x01FB84
                move.b  #$01, ($FFFFF7A7).w
                bra     J_DeleteObject_27       ; Offset_0x0202E2
Offset_0x01FB84:
                rts
Offset_0x01FB86:
                move.w  $0008(A0), D0
                cmpi.w  #$2720, D0
                ble.s   Offset_0x01FB96
                cmpi.w  #$2B08, D0
                blt.s   Offset_0x01FBA6
Offset_0x01FB96:
                bchg    #0, $0022(A0)
                bchg    #0, $0001(A0)
                neg.w   $0010(A0)
Offset_0x01FBA6:
                rts
Offset_0x01FBA8:
                cmpi.b  #$06, $0025(A0)
                bcc.s   Offset_0x01FBEE
                tst.b   $0022(A0)
                bmi.s   Offset_0x01FBF0
                tst.b   $0020(A0)
                bne.s   Offset_0x01FBEE
                tst.b   $003E(A0)
                bne.s   Offset_0x01FBD2
                move.b  #$20, $003E(A0)
                move.w  #$00AC, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x01FBD2:
                lea     ($FFFFFB22).w, A1
                moveq   #$00, D0
                tst.w   (A1)
                bne.s   Offset_0x01FBE0
                move.w  #$0EEE, D0
Offset_0x01FBE0:
                move.w  D0, (A1)
                subq.b  #$01, $003E(A0)
                bne.s   Offset_0x01FBEE
                move.b  #$0F, $0020(A0)
Offset_0x01FBEE:
                rts
Offset_0x01FBF0:
                moveq   #$64, D0
                bsr     AddPoints               ; Offset_0x022FD0
                move.b  #$06, $0025(A0)
                move.w  #$00B3, $003C(A0)
                bset    #$03, $002D(A0)
                rts                       
;=============================================================================== 
; Object 0x57 - 
; [ End ]                         
;===============================================================================   

;=============================================================================== 
; Object 0x58 - 
; [ Begin ]                         
;===============================================================================  
Obj_0x58: ; Offset_0x01FC0A:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x01FC18(PC, D0), D1
                jmp     Offset_0x01FC18(PC, D1)
Offset_0x01FC18:
                dc.w    Offset_0x01FC46-Offset_0x01FC18
                dc.w    Offset_0x01FCCC-Offset_0x01FC18
                dc.w    Offset_0x01FD1E-Offset_0x01FC18
                dc.w    Offset_0x01FE00-Offset_0x01FC18
                dc.w    Offset_0x01FC22-Offset_0x01FC18
Offset_0x01FC22:
                subi.w  #$0001, $000C(A0)
                subi.w  #$0001, $002A(A0)
                bpl     J_DisplaySprite_11      ; Offset_0x0202DC
                move.b  #$00, $0024(A0)
                lea     (Offset_0x02012E), A1
                bsr     J_AnimateSprite_0F      ; Offset_0x0202F4
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FC46:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01FC54(PC, D0), D1
                jmp     Offset_0x01FC54(PC, D1)
Offset_0x01FC54:
                dc.w    Offset_0x01FC58-Offset_0x01FC54
                dc.w    Offset_0x01FCA2-Offset_0x01FC54
Offset_0x01FC58:
                move.l  $0034(A0), A1
                cmpi.b  #$55, (A1)
                bne     J_DeleteObject_27       ; Offset_0x0202E2
                btst    #$00, $002D(A1)
                beq.s   Offset_0x01FC7C
                move.b  #$01, $001C(A0)
                move.w  #$0018, $002A(A0)
                addq.b  #$02, $0025(A0)
Offset_0x01FC7C:
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                lea     (Offset_0x02012E), A1
                bsr     J_AnimateSprite_0F      ; Offset_0x0202F4
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FCA2:
                subi.w  #$0001, $002A(A0)
                bpl.s   Offset_0x01FCBE
                cmpi.w  #$FFF0, $002A(A0)
                ble     J_DeleteObject_27       ; Offset_0x0202E2
                addi.w  #$0001, $000C(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FCBE:
                lea     (Offset_0x02012E), A1
                bsr     J_AnimateSprite_0F      ; Offset_0x0202F4
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FCCC:
                move.l  $0034(A0), A1
                cmpi.b  #$55, (A1)
                bne     J_DeleteObject_27       ; Offset_0x0202E2
                btst    #$01, $002D(A1)
                beq     J_DisplaySprite_11      ; Offset_0x0202DC
                btst    #$02, $002D(A1)
                bne     Offset_0x01FD0E
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                addi.w  #$0008, $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FD0E:
                move.b  #$08, $001A(A0)
                move.b  #$00, $0018(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FD1E:
                moveq   #$00, D0
                move.b  $0025(A0), D0
                move.w  Offset_0x01FD2C(PC, D0), D1
                jmp     Offset_0x01FD2C(PC, D1)
Offset_0x01FD2C:
                dc.w    Offset_0x01FD34-Offset_0x01FD2C
                dc.w    Offset_0x01FD52-Offset_0x01FD2C
                dc.w    Offset_0x01FDB2-Offset_0x01FD2C
                dc.w    Offset_0x01FDDE-Offset_0x01FD2C
Offset_0x01FD34:
                move.l  $0034(A0), A1
                cmpi.b  #$55, (A1)
                bne     J_DeleteObject_27       ; Offset_0x0202E2
                btst    #$01, $002D(A1)
                beq     J_DisplaySprite_11      ; Offset_0x0202DC
                addq.b  #$02, $0025(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FD52:
                move.l  $0034(A0), A1
                cmpi.b  #$55, (A1)
                bne     J_DeleteObject_27       ; Offset_0x0202E2
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                tst.b   $0022(A0)
                bpl.s   Offset_0x01FD74
                addq.b  #$02, $0025(A0)
Offset_0x01FD74:
                bsr     Offset_0x01FB86
                bsr     J_ObjectFall_07         ; Offset_0x020306
                jsr     ObjHitFloor             ; (Offset_0x013898)
                tst.w   D1
                bpl.s   Offset_0x01FD8A
                add.w   D1, $000C(A0)
Offset_0x01FD8A:
                move.w  #$0100, $0012(A0)
                cmpi.b  #$01, $0018(A0)
                bne.s   Offset_0x01FDA4
                move.w  $000C(A0), D0
                move.l  $0034(A0), A1
                add.w   D0, $002E(A1)
Offset_0x01FDA4:
                lea     (Offset_0x02023C), A1
                bsr     J_AnimateSprite_0F      ; Offset_0x0202F4
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FDB2:
                subi.w  #$0001, $002A(A0)
                bpl     J_DisplaySprite_11      ; Offset_0x0202DC
                addq.b  #$02, $0025(A0)
                move.w  #$000A, $002A(A0)
                move.w  #$FD00, $0012(A0)
                cmpi.b  #$01, $0018(A0)
                beq     J_DisplaySprite_11      ; Offset_0x0202DC
                neg.w   $0010(A0)
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FDDE:
                subq.w  #$01, $002A(A0)
                bpl     J_DisplaySprite_11      ; Offset_0x0202DC
                bsr     J_ObjectFall_07         ; Offset_0x020306
                bsr     J_ObjHitFloor_01        ; Offset_0x020300
                tst.w   D1
                bpl.s   Offset_0x01FDFC
                move.w  #$FE00, $0012(A0)
                add.w   D1, $000C(A0)
Offset_0x01FDFC:
                bra     J_MarkObjGone_1A        ; Offset_0x0202E8
Offset_0x01FE00:
                move.l  $0034(A0), A1
                cmpi.b  #$55, (A1)
                bne     J_DeleteObject_27       ; Offset_0x0202E2
                btst    #$03, $002D(A1)
                bne.s   Offset_0x01FE66
                bsr     Offset_0x01FE86
                btst    #$01, $002D(A1)
                beq     J_DisplaySprite_11      ; Offset_0x0202DC
                move.b  #$8B, $0020(A0)
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                addi.w  #$0010, $000C(A0)
                move.w  #$FFCA, D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01FE54
                neg.w   D0
Offset_0x01FE54:
                add.w   D0, $0008(A0)
                lea     (Offset_0x02023C), A1
                bsr     J_AnimateSprite_0F      ; Offset_0x0202F4
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FE66:
                move.w  #$FFFD, D0
                btst    #$00, $0022(A0)
                beq.s   Offset_0x01FE74
                neg.w   D0
Offset_0x01FE74:
                add.w   D0, $0008(A0)
                lea     (Offset_0x02023C), A1
                bsr     J_AnimateSprite_0F      ; Offset_0x0202F4
                bra     J_DisplaySprite_11      ; Offset_0x0202DC
Offset_0x01FE86:
                cmpi.b  #$01, $0021(A1)
                beq.s   Offset_0x01FE90
                rts
Offset_0x01FE90:
                move.w  $0008(A0), D0
                sub.w   ($FFFFB008).w, D0
                bpl.s   Offset_0x01FEA4
                btst    #$00, $0022(A1)
                bne.s   Offset_0x01FEAE
                rts
Offset_0x01FEA4:
                btst    #$00, $0022(A1)
                beq.s   Offset_0x01FEAE
                rts
Offset_0x01FEAE:
                bset    #$03, $002D(A1)
                rts  
Offset_0x01FEB6:
                jsr     S1SingleObjectLoad      ; (Offset_0x00E788)
                bne.s   Offset_0x01FF2E
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #Offset_0x020250, $0004(A1)
                move.w  #$24C0, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_05 ; Offset_0x0202FA
                move.b  #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$01, $0018(A1)
                move.b  #$10, $0016(A1)
                move.b  #$10, $0017(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addi.w  #$001C, $0008(A1)
                addi.w  #$000C, $000C(A1)
                move.w  #$FE00, $0010(A1)
                move.b  #$04, $0024(A1)
                move.b  #$04, $001A(A1)
                move.b  #$01, $001C(A1)
                move.w  #$0016, $002A(A1)
Offset_0x01FF2E:
                jsr     S1SingleObjectLoad      ; (Offset_0x00E788)
                bne.s   Offset_0x01FFA6
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #Offset_0x020250, $0004(A1)
                move.w  #$24C0, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_05 ; Offset_0x0202FA
                move.b  #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$01, $0018(A1)
                move.b  #$10, $0016(A1)
                move.b  #$10, $0017(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addi.w  #$FFF4, $0008(A1)
                addi.w  #$000C, $000C(A1)
                move.w  #$FE00, $0010(A1)
                move.b  #$04, $0024(A1)
                move.b  #$04, $001A(A1)
                move.b  #$01, $001C(A1)
                move.w  #$004B, $002A(A1)
Offset_0x01FFA6:
                jsr     S1SingleObjectLoad      ; (Offset_0x00E788)
                bne.s   Offset_0x02001E
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #Offset_0x020250, $0004(A1)
                move.w  #$24C0, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_05 ; Offset_0x0202FA
                move.b  #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$02, $0018(A1)
                move.b  #$10, $0016(A1)
                move.b  #$10, $0017(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addi.w  #$FFD4, $0008(A1)
                addi.w  #$000C, $000C(A1)
                move.w  #$FE00, $0010(A1)
                move.b  #$04, $0024(A1)
                move.b  #$06, $001A(A1)
                move.b  #$02, $001C(A1)
                move.w  #$0030, $002A(A1)
Offset_0x02001E:
                jsr     S1SingleObjectLoad      ; (Offset_0x00E788)
                bne.s   Offset_0x02007E
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #Offset_0x020250, $0004(A1)
                move.w  #$24C0, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_05 ; Offset_0x0202FA
                move.b  #$04, $0001(A1)
                move.b  #$10, $0019(A1)
                move.b  #$01, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addi.w  #$FFCA, $0008(A1)
                addi.w  #$0008, $000C(A1)
                move.b  #$06, $0024(A1)
                move.b  #$01, $001A(A1)
                move.b  #$00, $001C(A1)
Offset_0x02007E:
                rts                
Offset_0x020080:
                jsr     S1SingleObjectLoad      ; (Offset_0x00E788)
                bne.s   Offset_0x0200C8
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #Offset_0x020250, $0004(A1)
                move.w  #$04C0, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_05 ; Offset_0x0202FA
                move.b  #$04, $0001(A1)
                move.b  #$20, $0019(A1)
                move.b  #$02, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                move.b  #$02, $0024(A1)
Offset_0x0200C8:
                bsr     Offset_0x01FEB6
                subi.w  #$0008, $0038(A0)
                move.w  #$2A00, $0008(A0)
                move.w  #$02C0, $000C(A0)
                jsr     S1SingleObjectLoad      ; (Offset_0x00E788)
                bne.s   Offset_0x02012C
                move.b  #$58, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #Offset_0x020168, $0004(A1)
                move.w  #$2540, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_05 ; Offset_0x0202FA
                move.b  #$04, $0001(A1)
                move.b  #$20, $0019(A1)
                move.b  #$04, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                move.w  #$001E, $002A(A1)
                move.b  #$00, $0024(A1)
Offset_0x02012C:
                rts                
Offset_0x02012E:
                dc.w    Offset_0x020134-Offset_0x02012E
                dc.w    Offset_0x020138-Offset_0x02012E
                dc.w    Offset_0x02014E-Offset_0x02012E
Offset_0x020134:
                dc.b    $01, $05, $06, $FF
Offset_0x020138:
                dc.b    $01, $01, $01, $01, $02, $02, $02, $03, $03, $03, $04, $04, $04, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $FF
Offset_0x02014E:
                dc.b    $01, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $03, $03, $03, $02
                dc.b    $02, $02, $01, $01, $01, $05, $06, $FE, $02, $00               
Obj_0x57_Mappings:
Offset_0x020168:
                dc.w    Offset_0x020176-Offset_0x020168
                dc.w    Offset_0x020180-Offset_0x020168
                dc.w    Offset_0x0201AA-Offset_0x020168
                dc.w    Offset_0x0201D4-Offset_0x020168
                dc.w    Offset_0x0201EE-Offset_0x020168
                dc.w    Offset_0x020208-Offset_0x020168
                dc.w    Offset_0x020222-Offset_0x020168
Offset_0x020176:
                dc.w    $0001
                dc.l    $D8050000, $00000002
Offset_0x020180:
                dc.w    $0005
                dc.l    $D8050004, $00020002, $D80D000C, $00060012
                dc.l    $D80D000C, $00060032, $D80D000C, $0006FFE2
                dc.l    $D80D000C, $0006FFC2
Offset_0x0201AA:
                dc.w    $0005
                dc.l    $D8050004, $00020002, $D80D000C, $00060012
                dc.l    $D8050008, $00040032, $D80D000C, $0006FFE2
                dc.l    $D8050008, $0004FFD2
Offset_0x0201D4:
                dc.w    $0003
                dc.l    $D8050004, $00020002, $D80D000C, $00060012
                dc.l    $D80D000C, $0006FFE2
Offset_0x0201EE:
                dc.w    $0003
                dc.l    $D8050004, $00020002, $D8050008, $00040012
                dc.l    $D8050008, $0004FFF2
Offset_0x020208:
                dc.w    $0003
                dc.l    $D8050000, $00000002, $D80D000C, $00060012
                dc.l    $D80D000C, $00060032
Offset_0x020222:
                dc.w    $0003
                dc.l    $D8050004, $00020002, $D80D000C, $0006FFE2
                dc.l    $D80D000C, $0006FFC2     
Offset_0x02023C:
                dc.w    Offset_0x020242-Offset_0x02023C
                dc.w    Offset_0x020247-Offset_0x02023C
                dc.w    Offset_0x02024B-Offset_0x02023C
Offset_0x020242:
                dc.b    $05, $01, $02, $03, $FF
Offset_0x020247:
                dc.b    $01, $04, $05, $FF
Offset_0x02024B:
                dc.b    $01, $06, $07, $FF, $00 

Offset_0x020250:
                dc.w    Offset_0x020262-Offset_0x020250
                dc.w    Offset_0x02027C-Offset_0x020250
                dc.w    Offset_0x020286-Offset_0x020250
                dc.w    Offset_0x020290-Offset_0x020250
                dc.w    Offset_0x02029A-Offset_0x020250
                dc.w    Offset_0x0202A4-Offset_0x020250
                dc.w    Offset_0x0202AE-Offset_0x020250
                dc.w    Offset_0x0202B8-Offset_0x020250
                dc.w    Offset_0x0202C2-Offset_0x020250
Offset_0x020262:
                dc.w    $0003
                dc.l    $F00F0000, $0000FFD0, $F00F0010, $0008FFF0
                dc.l    $F00F0020, $00100010
Offset_0x02027C:
                dc.w    $0001
                dc.l    $F00F0030, $0018FFF0
Offset_0x020286:
                dc.w    $0001
                dc.l    $F00F0040, $0020FFF0
Offset_0x020290:
                dc.w    $0001
                dc.l    $F00F0050, $0028FFF0
Offset_0x02029A:
                dc.w    $0001
                dc.l    $F00F0060, $0030FFF0
Offset_0x0202A4:
                dc.w    $0001
                dc.l    $F00F1060, $1030FFF0
Offset_0x0202AE:
                dc.w    $0001
                dc.l    $F00F0070, $0038FFF0
Offset_0x0202B8:
                dc.w    $0001
                dc.l    $F00F1070, $1038FFF0
Offset_0x0202C2:
                dc.w    $0003
                dc.l    $F00F8000, $8000FFD0, $F00F8010, $8008FFF0
                dc.l    $F00F8020, $80100010                                       
;=============================================================================== 
; Object 0x58 - 
; [ End ]                         
;===============================================================================    
J_DisplaySprite_11: ; Offset_0x0202DC:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_27: ; Offset_0x0202E2:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_MarkObjGone_1A: ; Offset_0x0202E8:
                jmp     MarkObjGone             ; (Offset_0x00D2A0)
J_S1SingleObjectLoad_0D: ; Offset_0x0202EE:
                jmp     S1SingleObjectLoad      ; (Offset_0x00E788)
J_AnimateSprite_0F: ; Offset_0x0202F4:
                jmp     AnimateSprite           ; (Offset_0x00D412)
J_ModifyA1SpriteAttr_2P_05: ; Offset_0x0202FA:
                jmp     ModifyA1SpriteAttr_2P   ; (Offset_0x00DC4C)
J_ObjHitFloor_01: ; Offset_0x020300:
                jmp     ObjHitFloor             ; (Offset_0x013898)
J_ObjectFall_07: ; Offset_0x020306:
                jmp     ObjectFall              ; (Offset_0x00D24E)
;=============================================================================== 
; Object 0x55 - Ghz Boss
; [ Begin ]                         
;===============================================================================                 
Obj_0x55_Ghz_Boss: ; Offset_0x02030C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x02031A(PC, D0), D1
                jmp     Offset_0x02031A(PC, D1)
Offset_0x02031A:
                dc.w    Offset_0x020324-Offset_0x02031A
                dc.w    Offset_0x02044E-Offset_0x02031A
                dc.w    Offset_0x02048C-Offset_0x02031A
                dc.w    Offset_0x0204BE-Offset_0x02031A
                dc.w    Offset_0x020560-Offset_0x02031A
Offset_0x020324:
                move.l  #Ghz_Boss_Mappings, $0004(A0) ; Offset_0x0206BA
                move.w  #$2400, $0002(A0)
                ori.b   #$04, $0001(A0)
                move.b  #$20, $0019(A0)
                move.b  #$03, $0018(A0)
                move.b  #$0F, $0020(A0)
                move.b  #$08, $0021(A0)
                addq.b  #$02, $0024(A0)
                move.w  $0008(A0), $0030(A0)
                move.w  $000C(A0), $0038(A0)
                move.b  $0028(A0), D0
                cmpi.b  #$81, D0
                bne.s   Offset_0x020370
                addi.w  #$0060, $0002(A0)
Offset_0x020370:
                bsr     J_ModifySpriteAttr_2P_23 ; Offset_0x02073A
                jsr     S1SingleObjectLoad      ; (Offset_0x00E788)
                bne     Offset_0x020434
                move.b  #$55, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  A1, $0034(A0)
                move.l  #Ghz_Boss_Mappings, $0004(A1) ; Offset_0x0206BA
                move.w  #$0400, $0002(A1)
                move.b  #$04, $0001(A1)
                move.b  #$20, $0019(A1)
                move.b  #$03, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addq.b  #$04, $0024(A1)
                move.b  #$01, $001C(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0028(A0), D0
                cmpi.b  #$81, D0
                bne.s   Offset_0x0203D8
                addi.w  #$0060, $0002(A1)
Offset_0x0203D8:
                bsr     J_ModifyA1SpriteAttr_2P_06 ; Offset_0x020734
                tst.b   $0028(A0)
                bmi.s   Offset_0x020434
                jsr     S1SingleObjectLoad      ; (Offset_0x00E788)
                bne.s   Offset_0x020434
                move.b  #$55, $0000(A1)
                move.l  A0, $0034(A1)
                move.l  #Ghz_Boss_Mappings_1, $0004(A1) ; Offset_0x020612
                move.w  #$04D0, $0002(A1)
                bsr     J_ModifyA1SpriteAttr_2P_06 ; Offset_0x020734
                move.b  #$01, $001E(A0)
                move.b  #$04, $0001(A1)
                move.b  #$20, $0019(A1)
                move.b  #$03, $0018(A1)
                move.l  $0008(A0), $0008(A1)
                move.l  $000C(A0), $000C(A1)
                addq.b  #$06, $0024(A1)
                move.b  $0001(A0), $0001(A1)
Offset_0x020434:
                move.b  $0028(A0), D0
                andi.w  #$007F, D0
                add.w   D0, D0
                add.w   D0, D0
                move.l  Offset_0x020446(PC, D0), A1
                jmp     (A1)
Offset_0x020446:
                dc.l    $00000000
                dc.l    Offset_0x020080 
Offset_0x02044E:
                move.b  $0028(A0), D0
                andi.w  #$007F, D0
                add.w   D0, D0
                add.w   D0, D0
                move.l  Offset_0x020484(PC, D0), A1
                jsr     (A1)
                lea     (Offset_0x0206AE), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
                move.b  $0022(A0), D0
                andi.b  #$03, D0
                andi.b  #$FC, $0001(A0)
                or.b    D0, $0001(A0)
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x020484:
                dc.l    $00000000
                dc.l    Obj_0x57  ; Offset_0x01F99C
Offset_0x02048C:
                move.l  $0034(A0), A1
                move.l  $0008(A1), $0008(A0)
                move.l  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                move.l  #Offset_0x0206AE, A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
                jmp     DisplaySprite           ; (Offset_0x00D3C2)                   
Offset_0x0204BA:
                dc.b    $00, $FF, $01, $00
Offset_0x0204BE:
                btst    #$07, $0022(A0)
                bne.s   Offset_0x020512
                move.l  $0034(A0), A1
                move.l  $0008(A1), $0008(A0)
                move.l  $000C(A1), $000C(A0)
                move.b  $0022(A1), $0022(A0)
                move.b  $0001(A1), $0001(A0)
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x020506
                move.b  #$01, $001E(A0)
                move.b  $002A(A0), D0
                addq.b  #$01, D0
                cmpi.b  #$02, D0
                ble.s   Offset_0x0204FC
                moveq   #$00, D0
Offset_0x0204FC:
                move.b  Offset_0x0204BA(PC, D0), $001A(A0)
                move.b  D0, $002A(A0)
Offset_0x020506:
                cmpi.b  #$FF, $001A(A0)
                bne     J_DisplaySprite_12      ; Offset_0x020728
                rts
Offset_0x020512:
                move.l  $0034(A0), A1
                btst    #$06, $002E(A1)
                bne.s   Offset_0x020520
                rts
Offset_0x020520:
                addq.b  #$02, $0024(A0)
                move.l  #Ghz_Boss_Mappings_2, $0004(A0) ; Offset_0x02062A
                move.w  #$04D8, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_23 ; Offset_0x02073A
                move.b  #$00, $001A(A0)
                move.b  #$05, $001E(A0)
                move.l  $0034(A0), A1
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                addi.w  #$0004, $000C(A0)
                subi.w  #$0028, $0008(A0)
                rts
Offset_0x020560:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x0205A2
                move.b  #$05, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$04, $001A(A0)
                bne     Offset_0x0205A2
                move.b  #$00, $001A(A0)
                move.l  $0034(A0), A1
                move.b  (A1), D0
                beq     J_DeleteObject_28       ; Offset_0x02072E
                move.w  $0008(A1), $0008(A0)
                move.w  $000C(A1), $000C(A0)
                addi.w  #$0004, $000C(A0)
                subi.w  #$0028, $0008(A0)
Offset_0x0205A2:
                bra     J_DisplaySprite_12      ; Offset_0x020728
;=============================================================================== 
; Object 0x55 - Ghz Boss
; [ End ]                         
;===============================================================================                                        
;=============================================================================== 
; Object 0x56 - Ghz Boss
; [ Begin ]                         
;===============================================================================  
Obj_0x56: ; Offset_0x0205A6:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x0205B4(PC, D0), D1
                jmp     Offset_0x0205B4(PC, D1)
Offset_0x0205B4:
                dc.w    Offset_0x0205B8-Offset_0x0205B4
                dc.w    Offset_0x0205F4-Offset_0x0205B4
Offset_0x0205B8:
                addq.b  #$02, $0024(A0)
                move.l  #Obj_0x56_Mappings, $0004(A0) ; Offset_0x02065A
                move.w  #$05A0, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_23 ; Offset_0x02073A
                move.b  #$04, $0001(A0)
                move.b  #$01, $0018(A0)
                move.b  #$00, $0020(A0)
                move.b  #$0C, $0019(A0)
                move.b  #$07, $001E(A0)
                move.b  #$00, $001A(A0)
                rts
Offset_0x0205F4:
                subq.b  #$01, $001E(A0)
                bpl.s   Offset_0x02060E
                move.b  #$07, $001E(A0)
                addq.b  #$01, $001A(A0)
                cmpi.b  #$07, $001A(A0)
                beq     J_DeleteObject_28       ; Offset_0x02072E
Offset_0x02060E:
                bra     J_DisplaySprite_12      ; Offset_0x020728
Ghz_Boss_Mappings_1: 
Offset_0x020612:
                dc.w    Offset_0x020616-Offset_0x020612
                dc.w    Offset_0x020620-Offset_0x020612
Offset_0x020616:
                dc.w    $0001
                dc.l    $00050000, $0000001C
Offset_0x020620:
                dc.w    $0001
                dc.l    $00050004, $0002001C
Ghz_Boss_Mappings_2: 
Offset_0x02062A:
                dc.w    Offset_0x020632-Offset_0x02062A
                dc.w    Offset_0x02063C-Offset_0x02062A
                dc.w    Offset_0x020646-Offset_0x02062A
                dc.w    Offset_0x020650-Offset_0x02062A
Offset_0x020632:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Offset_0x02063C:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
Offset_0x020646:
                dc.w    $0001
                dc.l    $F8050008, $0004FFF8
Offset_0x020650:
                dc.w    $0001
                dc.l    $F805000C, $0006FFF8    
Obj_0x56_Mappings:
Offset_0x02065A:
                dc.w    Offset_0x020668-Offset_0x02065A
                dc.w    Offset_0x020672-Offset_0x02065A
                dc.w    Offset_0x02067C-Offset_0x02065A
                dc.w    Offset_0x020686-Offset_0x02065A
                dc.w    Offset_0x020690-Offset_0x02065A
                dc.w    Offset_0x02069A-Offset_0x02065A
                dc.w    Offset_0x0206A4-Offset_0x02065A
Offset_0x020668:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
Offset_0x020672:
                dc.w    $0001
                dc.l    $F00F0004, $0002FFF0
Offset_0x02067C:
                dc.w    $0001
                dc.l    $F00F0014, $000AFFF0
Offset_0x020686:
                dc.w    $0001
                dc.l    $F00F0024, $0012FFF0
Offset_0x020690:
                dc.w    $0001
                dc.l    $F00F0034, $001AFFF0
Offset_0x02069A:
                dc.w    $0001
                dc.l    $F00F0044, $0022FFF0
Offset_0x0206A4:
                dc.w    $0001
                dc.l    $F00F0054, $002AFFF0                           
Offset_0x0206AE:
                dc.w    Offset_0x0206B2-Offset_0x0206AE
                dc.w    Offset_0x0206B5-Offset_0x0206AE
Offset_0x0206B2:
                dc.b    $0F, $00, $FF
Offset_0x0206B5:
                dc.b    $07, $01, $02, $FF, $00 
Ghz_Boss_Mappings:                 
Offset_0x0206BA:
                dc.w    Offset_0x0206C0-Offset_0x0206BA
                dc.w    Offset_0x0206E2-Offset_0x0206BA
                dc.w    Offset_0x020704-Offset_0x0206BA
Offset_0x0206C0:
                dc.w    $0004
                dc.l    $F8050000, $0000FFE0, $08050004, $0002FFE0
                dc.l    $F80F0008, $0004FFF0, $F8070018, $000C0010
Offset_0x0206E2:
                dc.w    $0004
                dc.l    $E8050028, $0014FFE0, $E80D0030, $0018FFF0
                dc.l    $E8050024, $00120010, $D8050020, $00100002
Offset_0x020704:
                dc.w    $0004
                dc.l    $E8050028, $0014FFE0, $E80D0038, $001CFFF0
                dc.l    $E8050024, $00120010, $D8050020, $00100002                              
;=============================================================================== 
; Object 0x56 - Ghz Boss
; [ End ]                         
;===============================================================================                  
                nop                             ; Filler
J_DisplaySprite_12: ; Offset_0x020728:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_28: ; Offset_0x02072E:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
J_ModifyA1SpriteAttr_2P_06: ; Offset_0x020734:
                jmp     ModifyA1SpriteAttr_2P   ; (Offset_0x00DC4C)
J_ModifySpriteAttr_2P_23: ; Offset_0x02073A:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
;=============================================================================== 
; Object 0x8A - Credits - Sonic 1 Leftover
; [ Begin ]                         
;=============================================================================== 
Obj_0x8A_Credits: ; Offset_0x020740:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x02074E(PC, D0), D1
                jmp     Offset_0x02074E(PC, D1)
Offset_0x02074E:
                dc.w    Offset_0x020752-Offset_0x02074E
                dc.w    Offset_0x0207C0-Offset_0x02074E
Offset_0x020752:
                addq.b  #$02, $0024(A0)
                move.w  #$0120, $0008(A0)
                move.w  #$00F0, $000A(A0)
                move.l  #Credits_Mappings, $0004(A0) ; Offset_0x0207C6
                move.w  #$05A0, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_24 ; Offset_0x020E54
                move.w  ($FFFFFFF4).w, D0
                move.b  D0, $001A(A0)
                move.b  #$00, $0001(A0)
                move.b  #$00, $0018(A0)
                cmpi.b  #$04, ($FFFFF600).w
                bne.s   Offset_0x0207C0
                move.w  #$0300, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_24 ; Offset_0x020E54
                move.b  #$0A, $001A(A0)
                tst.b   ($FFFFFFD3).w
                beq.s   Offset_0x0207C0
                cmpi.b  #$72, ($FFFFF604).w
                bne.s   Offset_0x0207C0
                move.w  #$0EEE, ($FFFFFBC0).w
                move.w  #$0880, ($FFFFFBC2).w
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x0207C0:
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Credits_Mappings:                
Offset_0x0207C6:                      
                dc.w    Offset_0x0207DC-Offset_0x0207C6
                dc.w    Offset_0x02084E-Offset_0x0207C6
                dc.w    Offset_0x0208D0-Offset_0x0207C6
                dc.w    Offset_0x020922-Offset_0x0207C6
                dc.w    Offset_0x0209E4-Offset_0x0207C6
                dc.w    Offset_0x020A86-Offset_0x0207C6
                dc.w    Offset_0x020B58-Offset_0x0207C6
                dc.w    Offset_0x020C12-Offset_0x0207C6
                dc.w    Offset_0x020D0C-Offset_0x0207C6
                dc.w    Offset_0x020D86-Offset_0x0207C6
                dc.w    Offset_0x020DC8-Offset_0x0207C6
Offset_0x0207DC:
                dc.w    $000E
                dc.l    $F805002E, $0017FF88, $F8050026, $0013FF98
                dc.l    $F805001A, $000DFFA8, $F8010046, $0023FFB8
                dc.l    $F805001E, $000FFFC0, $F805003E, $001FFFD8
                dc.l    $F805000E, $0007FFE8, $F8050004, $0002FFF8
                dc.l    $F8090008, $00040008, $F805002E, $00170028
                dc.l    $F805003E, $001F0038, $F8050004, $00020048
                dc.l    $F805005C, $002E0058, $F805005C, $002E0068
Offset_0x02084E:
                dc.w    $0010
                dc.l    $D8050000, $0000FF80, $D8050004, $0002FF90
                dc.l    $D8090008, $0004FFA0, $D805000E, $0007FFB4
                dc.l    $D8050012, $0009FFD0, $D8050016, $000BFFE0
                dc.l    $D8050004, $0002FFF0, $D805001A, $000D0000
                dc.l    $0805001E, $000FFFC8, $08050004, $0002FFD8
                dc.l    $08050022, $0011FFE8, $08050026, $0013FFF8
                dc.l    $08050016, $000B0008, $0805002A, $00150020
                dc.l    $08050004, $00020030, $0805002E, $00170044
Offset_0x0208D0:
                dc.w    $000A
                dc.l    $D8050012, $0009FF80, $D8050022, $0011FF90
                dc.l    $D8050026, $0013FFA0, $D8050000, $0000FFB0
                dc.l    $D8050022, $0011FFC0, $D8050004, $0002FFD0
                dc.l    $D8090008, $0004FFE0, $0805002A, $0015FFE8
                dc.l    $08050032, $0019FFF8, $08050036, $001B0008
Offset_0x020922:
                dc.w    $0018
                dc.l    $D805001E, $000FFF88, $D805003A, $001DFF98
                dc.l    $D8050004, $0002FFA8, $D8050022, $0011FFB8
                dc.l    $D8050004, $0002FFC8, $D805001E, $000FFFD8
                dc.l    $D805003E, $001FFFE8, $D805000E, $0007FFF8
                dc.l    $D8050022, $00110008, $D8050042, $00210020
                dc.l    $D805000E, $00070030, $D805002E, $00170040
                dc.l    $D8010046, $00230050, $D8050000, $00000058
                dc.l    $D805001A, $000D0068, $08050048, $0024FFC0
                dc.l    $08010046, $0023FFD0, $08050000, $0000FFD8
                dc.l    $08010046, $0023FFE8, $0805002E, $0017FFF0
                dc.l    $08050016, $000B0000, $08050004, $00020010
                dc.l    $0805001A, $000D0020, $08050042, $00210030
Offset_0x0209E4:
                dc.w    $0014
                dc.l    $D0050042, $0021FFA0, $D005000E, $0007FFB0
                dc.l    $D005002E, $0017FFC0, $D0010046, $0023FFD0
                dc.l    $D0050000, $0000FFD8, $D005001A, $000DFFE8
                dc.l    $0005004C, $0026FFE8, $00010046, $0023FFF8
                dc.l    $0005001A, $000D0004, $0005002A, $00150014
                dc.l    $00050004, $00020024, $20050012, $0009FFD0
                dc.l    $2005003A, $001DFFE0, $2005000E, $0007FFF0
                dc.l    $2005001A, $000D0000, $20010046, $00230010
                dc.l    $20050050, $00280018, $20050022, $00110030
                dc.l    $20010046, $00230040, $2005000E, $00070048
Offset_0x020A86:
                dc.w    $001A
                dc.l    $D805002E, $0017FF98, $D8050026, $0013FFA8
                dc.l    $D8050032, $0019FFB8, $D805001A, $000DFFC8
                dc.l    $D8050054, $002AFFD8, $D8050012, $0009FFF8
                dc.l    $D8050022, $00110008, $D8050026, $00130018
                dc.l    $D8050042, $00210028, $D8050032, $00190038
                dc.l    $D805001E, $000F0048, $D805000E, $00070058
                dc.l    $08090008, $0004FF88, $08050004, $0002FF9C
                dc.l    $0805002E, $0017FFAC, $08050004, $0002FFBC
                dc.l    $0805003E, $001FFFCC, $08050026, $0013FFDC
                dc.l    $0805001A, $000DFFF8, $08050004, $00020008
                dc.l    $08050058, $002C0018, $08050004, $00020028
                dc.l    $08090008, $00040038, $08050032, $0019004C
                dc.l    $08050022, $0011005C, $08050004, $0002006C
Offset_0x020B58:
                dc.w    $0017
                dc.l    $D005002E, $0017FF98, $D0050026, $0013FFA8
                dc.l    $D0050032, $0019FFB8, $D005001A, $000DFFC8
                dc.l    $D0050054, $002AFFD8, $D0050012, $0009FFF8
                dc.l    $D0050022, $00110008, $D0050026, $00130018
                dc.l    $D0050000, $00000028, $D0050022, $00110038
                dc.l    $D0050004, $00020048, $D0090008, $00040058
                dc.l    $0005004C, $0026FFD0, $00010046, $0023FFE0
                dc.l    $00090008, $0004FFE8, $00010046, $0023FFFC
                dc.l    $0005003E, $001F0004, $00050004, $00020014
                dc.l    $20090008, $0004FFD0, $20050004, $0002FFE4
                dc.l    $2005001E, $000FFFF4, $20050058, $002C0004
                dc.l    $2005002A, $00150014
Offset_0x020C12:
                dc.w    $001F
                dc.l    $D805002E, $0017FF80, $D8050012, $0009FF90
                dc.l    $D805000E, $0007FFA0, $D805001E, $000FFFB0
                dc.l    $D8010046, $0023FFC0, $D8050004, $0002FFC8
                dc.l    $D8050016, $000BFFD8, $D805003E, $001FFFF8
                dc.l    $D805003A, $001D0008, $D8050004, $00020018
                dc.l    $D805001A, $000D0028, $D8050058, $002C0038
                dc.l    $D805002E, $00170048, $0005005C, $002EFFB0
                dc.l    $00050032, $0019FFC0, $0005004C, $0026FFD0
                dc.l    $00010046, $0023FFE0, $00050026, $0013FFE8
                dc.l    $00090008, $00040000, $00010046, $00230014
                dc.l    $0005001A, $000D001C, $0005000E, $0007002C
                dc.l    $00050000, $0000003C, $00010046, $0023004C
                dc.l    $0005002E, $00170054, $0005003A, $001D0064
                dc.l    $00010046, $00230074, $20050012, $0009FFF8
                dc.l    $20050004, $00020008, $20050012, $00090018
                dc.l    $20050004, $00020028
Offset_0x020D0C:
                dc.w    $000F
                dc.l    $F8050012, $0009FF80, $F8050022, $0011FF90
                dc.l    $F805000E, $0007FFA0, $F805002E, $0017FFB0
                dc.l    $F805000E, $0007FFC0, $F805001A, $000DFFD0
                dc.l    $F805003E, $001FFFE0, $F805000E, $0007FFF0
                dc.l    $F8050042, $00210000, $F8050048, $00240018
                dc.l    $F805002A, $00150028, $F805002E, $00170040
                dc.l    $F805000E, $00070050, $F8050000, $00000060
                dc.l    $F8050004, $00020070
Offset_0x020D86:
                dc.w    $0008
                dc.l    $3005003E, $001FFFC0, $30050022, $0011FFD0
                dc.l    $3005002A, $0015FFE0, $30050004, $0002FFF8
                dc.l    $30050000, $00000008, $30050004, $00020018
                dc.l    $30010046, $00230028, $3005001A, $000D0030
Offset_0x020DC8:
                dc.w    $0011
                dc.l    $E805002E, $0017FFB4, $E8050026, $0013FFC4
                dc.l    $E805001A, $000DFFD4, $E8010046, $0023FFE4
                dc.l    $E805001E, $000FFFEC, $E805003E, $001F0004
                dc.l    $E805000E, $00070014, $E8050004, $00020024
                dc.l    $E8090008, $00040034, $00050012, $0009FFC0
                dc.l    $00050022, $0011FFD0, $0005000E, $0007FFE0
                dc.l    $0005002E, $0017FFF0, $0005000E, $00070000
                dc.l    $0005001A, $000D0010, $0005003E, $001F0020
                dc.l    $0005002E, $00170030
;=============================================================================== 
; Object 0x8A - Credits - Sonic 1 Leftover
; [ End ]                         
;=============================================================================== 
                nop                             ; Filler
J_ModifySpriteAttr_2P_24: ; Offset_0x020E54:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
                dc.w     $0000                  ; Filler
;=============================================================================== 
; Object 0x3E - Egg Prison / Animals Container
; [ Begin ]                         
;=============================================================================== 
Obj_0x3E_Egg_Prison: ; Offset_0x020E5C:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x020E88(PC, D0), D1
                jsr     Offset_0x020E88(PC, D1)
                move.w  $0008(A0), D0
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   J_DeleteObject_29       ; Offset_0x020E82
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
J_DeleteObject_29: ; Offset_0x020E82:
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x020E88:
                dc.w    Offset_0x020EA8-Offset_0x020E88
                dc.w    Offset_0x020EF6-Offset_0x020E88
                dc.w    Offset_0x020F32-Offset_0x020E88
                dc.w    Offset_0x020F9A-Offset_0x020E88
                dc.w    Offset_0x020F9A-Offset_0x020E88
                dc.w    Offset_0x020F9A-Offset_0x020E88
                dc.w    Offset_0x021032-Offset_0x020E88
                dc.w    Offset_0x021082-Offset_0x020E88
Offset_0x020E98:
                dc.w    $0220, $0400, $040C, $0501, $0610, $0403, $0810, $0305
Offset_0x020EA8:
                move.l  #Offset_0x0210AC, $0004(A0)
                move.w  #$049D, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_25 ; Offset_0x021158
                move.b  #$04, $0001(A0)
                move.w  $000C(A0), $0030(A0)
                moveq   #$00, D0
                move.b  $0028(A0), D0
                lsl.w   #$02, D0
                lea     Offset_0x020E98(PC, D0), A1
                move.b  (A1)+, $0024(A0)
                move.b  (A1)+, $0019(A0)
                move.b  (A1)+, $0018(A0)
                move.b  (A1)+, $001A(A0)
                cmpi.w  #$0008, D0
                bne.s   Offset_0x020EF4
                move.b  #$06, $0020(A0)
                move.b  #$08, $0021(A0)
Offset_0x020EF4:
                rts
Offset_0x020EF6:
                cmpi.b  #$02, ($FFFFF7A7).w
                beq.s   Offset_0x020F14
                move.w  #$002B, D1
                move.w  #$0018, D2
                move.w  #$0018, D3
                move.w  $0008(A0), D4
                jmp     SolidObject             ; (Offset_0x00F4A0)
Offset_0x020F14:
                tst.b   $0025(A0)
                beq.s   Offset_0x020F2A
                clr.b   $0025(A0)
                bclr    #$03, ($FFFFB022).w
                bset    #$01, ($FFFFB022).w
Offset_0x020F2A:
                move.b  #$02, $001A(A0)
                rts
Offset_0x020F32:
                move.w  #$0017, D1
                move.w  #$0008, D2
                move.w  #$0008, D3
                move.w  $0008(A0), D4
                jsr     SolidObject             ; (Offset_0x00F4A0)
                lea     (Offset_0x0210A4), A1
                jsr     AnimateSprite           ; (Offset_0x00D412)
                move.w  $0030(A0), $000C(A0)
                move.b  $0022(A0), D0
                andi.b  #$18, D0
                beq.s   Offset_0x020F98
                addq.w  #$08, $000C(A0)
                move.b  #$0A, $0024(A0)
                move.w  #$003C, $001E(A0)
                clr.b   ($FFFFFE1E).w
                clr.b   ($FFFFF7AA).w
                move.b  #$01, ($FFFFF7CC).w
                move.w  #$0800, ($FFFFF602).w
                clr.b   $0025(A0)
                bclr    #$03, ($FFFFB022).w
                bset    #$01, ($FFFFB022).w
Offset_0x020F98:
                rts
Offset_0x020F9A:
                moveq   #$07, D0
                and.b   ($FFFFFE0F).w, D0
                bne.s   Offset_0x020FD8
                jsr     SingleObjectLoad        ; (Offset_0x00E772)
                bne.s   Offset_0x020FD8
                move.b  #$3F, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                moveq   #$00, D1
                move.b  D0, D1
                lsr.b   #$02, D1
                subi.w  #$0020, D1
                add.w   D1, $0008(A1)
                lsr.w   #$08, D0
                lsr.b   #$03, D0
                add.w   D0, $000C(A1)
Offset_0x020FD8:
                subq.w  #$01, $001E(A0)
                beq.s   Offset_0x020FE0
                rts
Offset_0x020FE0:
                move.b  #$02, ($FFFFF7A7).w
                move.b  #$0C, $0024(A0)
                move.b  #$06, $001A(A0)
                move.w  #$0096, $001E(A0)
                addi.w  #$0020, $000C(A0)
                moveq   #$07, D6
                move.w  #$009A, D5
                moveq   #$FFFFFFE4, D4    
Offset_0x021006:                            
                jsr     SingleObjectLoad        ; (Offset_0x00E772)
                bne.s   Offset_0x021030
                move.b  #$28, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                add.w   D4, $0008(A1)
                addq.w  #$07, D4
                move.w  D5, $0036(A1)
                subq.w  #$08, D5
                dbra    D6, Offset_0x021006
Offset_0x021030:
                rts
Offset_0x021032:
                moveq   #$07, D0
                and.b   ($FFFFFE0F).w, D0
                bne.s   Offset_0x021070
                jsr     SingleObjectLoad        ; (Offset_0x00E772)
                bne.s   Offset_0x021070
                move.b  #$28, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                jsr     PseudoRandomNumber      ; Offset_0x0031E4
                andi.w  #$001F, D0
                subq.w  #$06, D0
                tst.w   D1
                bpl.s   Offset_0x021066
                neg.w   D0
Offset_0x021066:
                add.w   D0, $0008(A1)
                move.w  #$000C, $0036(A1)
Offset_0x021070:
                subq.w  #$01, $001E(A0)
                bne.s   Offset_0x021080
                addq.b  #$02, $0024(A0)
                move.w  #$00B4, $001E(A0)
Offset_0x021080:
                rts
Offset_0x021082:
                moveq   #$3E, D0
                moveq   #$28, D1
                moveq   #$40, D2
                lea     ($FFFFB040).w, A1
Offset_0x02108C:                
                cmp.b   (A1), D1
                beq.s   Offset_0x0210A2
                adda.w  D2, A1
                dbra    D0, Offset_0x02108C
                jsr     (Offset_0x00F352)
                jmp     DeleteObject            ; (Offset_0x00D3B4)
Offset_0x0210A2:
                rts                        
Offset_0x0210A4:                
                dc.w    Offset_0x0210A8-Offset_0x0210A4
                dc.w    Offset_0x0210A8-Offset_0x0210A4
Offset_0x0210A8:
                dc.b    $02, $01, $03, $FF

Offset_0x0210AC:
                dc.w    Offset_0x0210BA-Offset_0x0210AC
                dc.w    Offset_0x0210F4-Offset_0x0210AC
                dc.w    Offset_0x0210FE-Offset_0x0210AC
                dc.w    Offset_0x021130-Offset_0x0210AC
                dc.w    Offset_0x02113A-Offset_0x0210AC
                dc.w    Offset_0x02114C-Offset_0x0210AC
                dc.w    Offset_0x021156-Offset_0x0210AC
Offset_0x0210BA:
                dc.w    $0007
                dc.l    $E00C2000, $2000FFF0, $E80D2004, $2002FFE0
                dc.l    $E80D200C, $20060000, $F80E2014, $200AFFE0
                dc.l    $F80E2020, $20100000, $100D202C, $2016FFE0
                dc.l    $100D2034, $201A0000
Offset_0x0210F4:
                dc.w    $0001
                dc.l    $F809003C, $001EFFF4
Offset_0x0210FE:
                dc.w    $0006
                dc.l    $00082042, $2021FFE0, $080C2045, $2022FFE0
                dc.l    $00042049, $20240010, $080C204B, $20250000
                dc.l    $100D202C, $2016FFE0, $100D2034, $201A0000
Offset_0x021130:
                dc.w    $0001
                dc.l    $F809004F, $0027FFF4
Offset_0x02113A:
                dc.w    $0002
                dc.l    $E80E2055, $202AFFF0, $000E2061, $2030FFF0
Offset_0x02114C:
                dc.w    $0001
                dc.l    $F007206D, $2036FFF8
Offset_0x021156:
                dc.w    $0000                                
;=============================================================================== 
; Object 0x3E - Egg Prison / Animals Container
; [ End ]                         
;=============================================================================== 
J_ModifySpriteAttr_2P_25: ; Offset_0x021158:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
                dc.w    $0000                   ; Filler
                
;=============================================================================== 
; Sub Routine TouchResponse
; [ Begin ]                         
;===============================================================================  
TouchResponse: ; Offset_0x021160:   
                nop
                bsr     Offset_0x021502
                move.w  $0008(A0), D2
                move.w  $000C(A0), D3
                subi.w  #$0008, D2
                moveq   #$00, D5
                move.b  $0016(A0), D5
                subq.b  #$03, D5
                sub.w   D5, D3
                cmpi.b  #$39, $001A(A0)
                bne.s   Offset_0x02118A
                addi.w  #$000C, D3
                moveq   #$0A, D5
Offset_0x02118A:
                move.w  #$0010, D4
                add.w   D5, D5
                lea     ($FFFFB800).w, A1
                move.w  #$005F, D6
Offset_0x021198:
                move.b  $0020(A1), D0
                bne.s   Touch_Height            ; Offset_0x0211F8
Offset_0x02119E:                
                lea     $0040(A1), A1
                dbra    D6, Offset_0x021198  
                moveq   #$00, D0
Touch_Sizes: ; Offset_0x0211A8:                
                rts  
                dc.b    $14, $14, $0C, $14, $14, $0C, $04, $10, $0C, $12, $10, $10, $06, $06, $18, $0C
                dc.b    $0C, $10, $10, $0C, $08, $08, $14, $10, $14, $08, $0E, $0E, $18, $18, $28, $10
                dc.b    $10, $18, $08, $10, $20, $70, $40, $20, $80, $20, $20, $20, $08, $08, $04, $04
                dc.b    $20, $08, $0C, $0C, $08, $04, $18, $04, $28, $04, $04, $08, $04, $18, $04, $28
                dc.b    $04, $20, $18, $18, $0C, $18, $48, $08, $18, $28, $10, $04, $20, $02
;===============================================================================
Touch_Height: ; Offset_0x0211F8:
                andi.w  #$003F, D0
                add.w   D0, D0
                lea     Touch_Sizes(PC, D0), A2 ; Offset_0x0211A8
                moveq   #$00, D1
                move.b  (A2)+, D1
                move.w  $0008(A1), D0
                sub.w   D1, D0
                sub.w   D2, D0
                bcc.s   Offset_0x02121A
                add.w   D1, D1
                add.w   D1, D0
                bcs.s   Offset_0x021220
                bra     Offset_0x02119E
Offset_0x02121A:                
                cmp.w   D4, D0
                bhi     Offset_0x02119E
Offset_0x021220:                
                moveq   #$00, D1
                move.b  (A2)+, D1
                move.w  $000C(A1), D0
                sub.w   D1, D0
                sub.w   D3, D0
                bcc.s   Offset_0x021238
                add.w   D1, D1
                add.w   D1, D0
                bcs.s   Offset_0x02123E
                bra     Offset_0x02119E                
Offset_0x021238:
                cmp.w   D5, D0
                bhi     Offset_0x02119E
Offset_0x02123E:
                move.b  $0020(A1), D1
                andi.b  #$C0, D1
                beq     Offset_0x0212B8
                cmpi.b  #$C0, D1
                beq     Touch_Special           ; Offset_0x02147A
                tst.b   D1
                bmi     Offset_0x021370
                move.b  $0020(A1), D0
                andi.b  #$3F, D0
                cmpi.b  #$06, D0
                beq.s   Offset_0x021278
                cmpi.w  #$005A, $0030(A0)
                bcc     Offset_0x021276
                move.b  #$04, $0024(A1)
Offset_0x021276:                
                rts
Offset_0x021278:                
                tst.w   $0012(A0)
                bpl.s   Offset_0x0212A4
                move.w  $000C(A0), D0
                subi.w  #$0010, D0
                cmp.w   $000C(A1), D0  
                bcs.s   Offset_0x0212B6
                neg.w   $0012(A0)
                move.w  #$FE80, $0012(A1)
                tst.b   $0025(A1)
                bne.s   Offset_0x0212B6
                move.b  #$04, $0025(A1)
                rts
Offset_0x0212A4:
                cmpi.b  #$02, $001C(A0)
                bne.s   Offset_0x0212B6
                neg.w   $0012(A0)
                move.b  #$04, $0024(A1)
Offset_0x0212B6:
                rts
Offset_0x0212B8:
                tst.b   ($FFFFFE2D).w
                bne.s   Offset_0x0212D0
                cmpi.b  #$09, $001C(A0)
                beq.s   Offset_0x0212D0
                cmpi.b  #$02, $001C(A0)
                bne     Offset_0x021370
Offset_0x0212D0:
                tst.b   $0021(A1)
                beq.s   Touch_KillEnemy         ; Offset_0x0212FA
                neg.w   $0010(A0)
                neg.w   $0012(A0)
                asr.w   $0010(A0)
                asr.w   $0012(A0)
                move.b  #$00, $0020(A1)
                subq.b  #$01, $0021(A1)
                bne.s   Offset_0x0212F8
                bset    #$07, $0022(A1)
Offset_0x0212F8:
                rts
;===============================================================================                
Touch_KillEnemy: ; Offset_0x0212FA:
                bset    #$07, $0022(A1)
                moveq   #$00, D0
                move.w  ($FFFFF7D0).w, D0
                addq.w  #$02, ($FFFFF7D0).w
                cmpi.w  #$0006, D0
                bcs.s   Offset_0x021312
                moveq   #$06, D0
Offset_0x021312:
                move.w  D0, $003E(A1)
                move.w  Enemy_Points(PC, D0), D0 ; Offset_0x021362
                cmpi.w  #$0020, ($FFFFF7D0).w
                bcs.s   Offset_0x02132C
                move.w  #$03E8, D0
                move.w  #$000A, $003E(A1)
Offset_0x02132C:
                bsr     AddPoints               ; Offset_0x022FD0                
                move.b  #$27, $0000(A1)
                move.b  #$00, $0024(A1)
                tst.w   $0012(A0)
                bmi.s   Offset_0x021352
                move.w  $000C(A0), D0
                cmp.w   $000C(A1), D0
                bcc.s   Offset_0x02135A
                neg.w   $0012(A0)
                rts
Offset_0x021352:
                addi.w  #$0100, $0012(A0)
                rts
Offset_0x02135A:
                subi.w  #$0100, $0012(A0)
                rts                                
Enemy_Points: ; Offset_0x021362:
                dc.w    $000A, $0014, $0032, $0064
Offset_0x02136A:
                bset    #$07, $0022(A1)                                
Offset_0x021370:
                tst.b   ($FFFFFE2D).w
                beq.s   Touch_Hurt              ; Offset_0x02137A
Offset_0x021376:                
                moveq   #$FFFFFFFF, D0
                rts
;===============================================================================                
Touch_Hurt: ; Offset_0x02137A:
                nop
                tst.w   $0030(A0)
                bne.s   Offset_0x021376
                move.l  A1, A2  

;=============================================================================== 
; Sub Routine HurtSonic
; [ Begin ]                         
;===============================================================================                 
HurtSonic: ; Offset_0x021384:
                tst.b   ($FFFFFE2C).w
                bne.s   HurtShield              ; Offset_0x0213AC
                tst.w   ($FFFFFE20).w
                beq     Hurt_NoRings            ; Offset_0x02141A
                jsr     SingleObjectLoad        ; Offset_0x00E772
                bne.s   HurtShield              ; Offset_0x0213AC
                move.b  #$37, $0000(A1)
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
HurtShield: ; Offset_0x0213AC:
                move.b  #$00, ($FFFFFE2C).w
                move.b  #$04, $0024(A0)
                bsr     J_Sonic_ResetOnFloor_00 ; Offset_0x0214FC
                bset    #$01, $0022(A0)
                move.w  #$FC00, $0012(A0)
                move.w  #$FE00, $0010(A0)
                btst    #$06, $0022(A0)
                beq.s   Hurt_Reverse            ; Offset_0x0213E2
                move.w  #$FE00, $0012(A0)
                move.w  #$FF00, $0010(A0)
Hurt_Reverse: ; Offset_0x0213E2:
                move.w  $0008(A0), D0
                cmp.w   $0008(A2), D0
                bcs.s   Hurt_ChkSpikes          ; Offset_0x0213F0 
                neg.w   $0010(A0)
Hurt_ChkSpikes: ; Offset_0x0213F0:
                move.w  #$0000, $0014(A0)
                move.b  #$1A, $001C(A0)
                move.w  #$0078, $0030(A0)
                move.w  #$00A3, D0
                cmpi.b  #$36, (A2)
                bne.s   Offset_0x021410
                move.w  #$00A6, D0
Offset_0x021410:
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                moveq   #$FFFFFFFF, D0
                rts
Hurt_NoRings: ; Offset_0x02141A:
                tst.w   ($FFFFFFFA).w
                bne     HurtShield              ; Offset_0x0213AC 
;=============================================================================== 
; Sub Routine HurtSonic
; [ End ]                         
;===============================================================================  
                       
;=============================================================================== 
; Sub Routine KillSonic
; [ Begin ]                         
;===============================================================================                  
KillSonic: ; Offset_0x021422:
                tst.w   ($FFFFFE08).w
                bne.s   Kill_NoDeath            ; Offset_0x021476
                move.b  #$00, ($FFFFFE2D).w
                move.b  #$06, $0024(A0)
                bsr     J_Sonic_ResetOnFloor_00 ; Offset_0x0214FC
                bset    #1, $0022(A0)
                move.w  #$F900, $0012(A0)
                move.w  #$0000, $0010(A0)
                move.w  #$0000, $0014(A0)
                move.w  $000C(A0), $0038(A0)
                move.b  #$18, $001C(A0)
                bset    #7, $0002(A0)
                move.w  #$00A3, D0
                cmpi.b  #$36, (A2)
                bne.s   Offset_0x021470
                move.w  #$00A6, D0   
Offset_0x021470:
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Kill_NoDeath ; Offset_0x021476:                
                moveq   #$FFFFFFFF, D0
                rts
;=============================================================================== 
; Sub Routine KillSonic
; [ End ]                         
;===============================================================================
                   
Touch_Special: ; Offset_0x02147A:
                move.b  $0020(A1), D1
                andi.b  #$3F, D1
                cmpi.b  #$0B, D1
                beq.s   Touch_Caterkiller       ; Offset_0x0214AE
                cmpi.b  #$0C, D1
                beq.s   Touch_Yadrin            ; Offset_0x0214B2
                cmpi.b  #$14, D1
                beq.s   Touch_D7                ; Offset_0x0214E4
                cmpi.b  #$15, D1
                beq.s   Touch_D7                ; Offset_0x0214E4
                cmpi.b  #$16, D1
                beq.s   Touch_D7                ; Offset_0x0214E4
                cmpi.b  #$17, D1
                beq.s   Touch_D7                ; Offset_0x0214E4
                cmpi.b  #$21, D1
                beq.s   Touch_E1                ; Offset_0x0214F6
                rts
Touch_Caterkiller: ; Offset_0x0214AE:
                bra     Offset_0x02136A
Touch_Yadrin: ; Offset_0x0214B2:
                sub.w   D0, D5
                cmpi.w  #$0008, D5
                bcc.s   Offset_0x0214E0
                move.w  $0008(A1), D0
                subq.w  #$04, D0
                btst    #$00, $0022(A1)
                beq.s   Offset_0x0214CC
                subi.w  #$0010, D0
Offset_0x0214CC:
                sub.w   D2, D0
                bcc.s   Offset_0x0214D8
                addi.w  #$0018, D0
                bcs.s   Offset_0x0214DC
                bra.s   Offset_0x0214E0
Offset_0x0214D8:
                cmp.w   D4, D0
                bhi.s   Offset_0x0214E0
Offset_0x0214DC:
                bra     Offset_0x021370
Offset_0x0214E0:
                bra     Offset_0x0212B8
Touch_D7: ; Offset_0x0214E4:
                move.w  A0, D1
                subi.w  #$B000, D1
                beq.s   Offset_0x0214F0
                addq.b  #$01, $0021(A1)
Offset_0x0214F0:
                addq.b  #$01, $0021(A1)
                rts
Touch_E1: ; Offset_0x0214F6:                
                addq.b  #$01, $0021(A1)
                rts              
J_Sonic_ResetOnFloor_00: ; Offset_0x0214FC:
                jmp     Sonic_ResetOnFloor      ; Offset_0x01090C
Offset_0x021502:
                jmp     TouchRings              ; Offset_0x00DF6C 
;=============================================================================== 
; Sub Routine TouchResponse
; [ End ]                         
;=============================================================================== 
                
;===============================================================================
; Special Stage - Sub-routine
; [ Begin ]              
;===============================================================================
S1_SS_Show_Layout: ; Offset_0x021508:
                bsr     Offset_0x02164A
                bsr     Offset_0x02188A
                move.w  D5, -(A7)
                lea     ($FFFF8000).w, A1
                move.b  ($FFFFF750).w, D0
                andi.b  #$FC, D0
                jsr     CalcSine                ; Offset_0x00320A
                move.w  D0, D4
                move.w  D1, D5
                muls.w  #$0018, D4
                muls.w  #$0018, D5
                moveq   #$00, D2
                move.w  ($FFFFEE00).w, D2
                divu.w  #$0018, D2
                swap.w  D2
                neg.w   D2
                addi.w  #$FF4C, D2
                moveq   #$00, D3
                move.w  ($FFFFEE04).w, D3
                divu.w  #$0018, D3
                swap.w  D3
                neg.w   D3
                addi.w  #$FF4C, D3
                move.w  #$000F, D7
Offset_0x021558:                
                movem.w D0-D2, -(A7)
                movem.w D0/D1, -(A7)
                neg.w   D0
                muls.w  D2, D1
                muls.w  D3, D0
                move.l  D0, D6
                add.l   D1, D6
                movem.w (A7)+, D0/D1
                muls.w  D2, D0
                muls.w  D3, D1
                add.l   D0, D1
                move.l  D6, D2
                move.w  #$000F, D6
Offset_0x02157A:                
                move.l  D2, D0
                asr.l   #$08, D0
                move.w  D0, (A1)+
                move.l  D1, D0
                asr.l   #$08, D0
                move.w  D0, (A1)+
                add.l   D5, D2
                add.l   D4, D1
                dbra    D6, Offset_0x02157A
                movem.w (A7)+, D0-D2
                addi.w  #$0018, D3
                dbra    D7, Offset_0x021558
                move.w  (A7)+, D5
                lea     ($FFFF0000), A0
                moveq   #$00, D0
                move.w  ($FFFFEE04).w, D0
                divu.w  #$0018, D0
                mulu.w  #$0080, D0
                adda.l  D0, A0
                moveq   #$00, D0
                move.w  ($FFFFEE00).w, D0
                divu.w  #$0018, D0
                adda.w  D0, A0
                lea     ($FFFF8000).w, A4
                move.w  #$000F, D7
Offset_0x0215C6:                
                move.w  #$000F, D6
Offset_0x0215CA:                
                moveq   #$00, D0
                move.b  (A0)+, D0
                beq.s   Offset_0x021622
                cmpi.b  #$4E, D0
                bhi.s   Offset_0x021622
                move.w  (A4), D3
                addi.w  #$0120, D3
                cmpi.w  #$0070, D3
                bcs.s   Offset_0x021622
                cmpi.w  #$01D0, D3
                bcc.s   Offset_0x021622
                move.w  $0002(A4), D2
                addi.w  #$00F0, D2
                cmpi.w  #$0070, D2
                bcs.s   Offset_0x021622
                cmpi.w  #$0170, D2
                bcc.s   Offset_0x021622
                lea     ($FFFF4000), A5
                lsl.w   #$03, D0
                lea     $00(A5, D0), A5
                move.l  (A5)+, A1
                move.w  (A5)+, D1
                add.w   D1, D1
                adda.w  $00(A1, D1), A1
                move.w  (A5)+, A3
                moveq   #$00, D1
                move.b  (A1)+, D1
                subq.b  #$01, D1
                bmi.s   Offset_0x021622
                jsr     (Offset_0x00D6F0)
Offset_0x021622:
                addq.w  #$04, A4
                dbra    D6, Offset_0x0215CA
                lea     $0070(A0), A0
                dbra    D7, Offset_0x0215C6
                move.b  D5, ($FFFFF62C).w
                cmpi.b  #$50, D5
                beq.s   Offset_0x021642
                move.l  #$00000000, (A2)
                rts
Offset_0x021642:
                move.b  #$00, -5(A2)
                rts  
Offset_0x02164A:
                lea     ($FFFF400C), A1
                moveq   #$00, D0
                move.b  ($FFFFF750).w, D0
                lsr.b   #$02, D0
                andi.w  #$000F, D0
                moveq   #$23, D1
Offset_0x02165E:                
                move.w  D0, (A1)
                addq.w  #$08, A1
                dbra    D1, Offset_0x02165E
                lea     ($FFFF4005), A1
                subq.b  #$01, ($FFFFFEC2).w
                bpl.s   Offset_0x021682
                move.b  #$07, ($FFFFFEC2).w
                addq.b  #$01, ($FFFFFEC3).w
                andi.b  #$03, ($FFFFFEC3).w
Offset_0x021682:
                move.b  ($FFFFFEC3).w, $01D0(A1)
                subq.b  #$01, ($FFFFFEC4).w
                bpl.s   Offset_0x02169E
                move.b  #$07, ($FFFFFEC4).w
                addq.b  #$01, ($FFFFFEC5).w
                andi.b  #$01, ($FFFFFEC5).w
Offset_0x02169E:
                move.b  ($FFFFFEC5).w, D0
                move.b  D0, $0138(A1)
                move.b  D0, $0160(A1)
                move.b  D0, $0148(A1)
                move.b  D0, $0150(A1)
                move.b  D0, $01D8(A1)
                move.b  D0, $01E0(A1)
                move.b  D0, $01E8(A1)
                move.b  D0, $01F0(A1)
                move.b  D0, $01F8(A1)
                move.b  D0, $0200(A1)
                subq.b  #$01, ($FFFFFEC6).w
                bpl.s   Offset_0x0216E0
                move.b  #$04, ($FFFFFEC6).w
                addq.b  #$01, ($FFFFFEC7).w
                andi.b  #$03, ($FFFFFEC7).w
Offset_0x0216E0:
                move.b  ($FFFFFEC7).w, D0
                move.b  D0, $0168(A1)
                move.b  D0, $0170(A1)
                move.b  D0, $0178(A1)
                move.b  D0, $0180(A1)
                subq.b  #$01, ($FFFFFEC0).w
                bpl.s   Offset_0x02170A
                move.b  #$07, ($FFFFFEC0).w
                subq.b  #$01, ($FFFFFEC1).w
                andi.b  #$07, ($FFFFFEC1).w
Offset_0x02170A:
                lea     ($FFFF4016), A1
                lea     (S1SS_WaRiVramSet), A0  ; Offset_0x0217F4
                moveq   #$00, D0
                move.b  ($FFFFFEC1).w, D0
                add.w   D0, D0
                lea     $00(A0, D0), A0
                move.w  (A0), (A1)
                move.w  $0002(A0), $0008(A1)
                move.w  $0004(A0), $0010(A1)
                move.w  $0006(A0), $0018(A1)
                move.w  $0008(A0), $0020(A1)
                move.w  $000A(A0), $0028(A1)
                move.w  $000C(A0), $0030(A1)
                move.w  $000E(A0), $0038(A1)
                adda.w  #$0020, A0
                adda.w  #$0048, A1
                move.w  (A0), (A1)
                move.w  $0002(A0), $0008(A1)
                move.w  $0004(A0), $0010(A1)
                move.w  $0006(A0), $0018(A1)
                move.w  $0008(A0), $0020(A1)
                move.w  $000A(A0), $0028(A1)
                move.w  $000C(A0), $0030(A1)
                move.w  $000E(A0), $0038(A1)
                adda.w  #$0020, A0
                adda.w  #$0048, A1
                move.w  (A0), (A1)
                move.w  $0002(A0), $0008(A1)
                move.w  $0004(A0), $0010(A1)
                move.w  $0006(A0), $0018(A1)
                move.w  $0008(A0), $0020(A1)
                move.w  $000A(A0), $0028(A1)
                move.w  $000C(A0), $0030(A1)
                move.w  $000E(A0), $0038(A1)
                adda.w  #$0020, A0
                adda.w  #$0048, A1
                move.w  (A0), (A1)
                move.w  $0002(A0), $0008(A1)
                move.w  $0004(A0), $0010(A1)
                move.w  $0006(A0), $0018(A1)
                move.w  $0008(A0), $0020(A1)
                move.w  $000A(A0), $0028(A1)
                move.w  $000C(A0), $0030(A1)
                move.w  $000E(A0), $0038(A1)
                adda.w  #$0020, A0
                adda.w  #$0048, A1
                rts   
S1SS_WaRiVramSet: ; Offset_0x0217F4:
                dc.w    $0142, $6142, $0142, $0142, $0142, $0142, $0142, $6142
                dc.w    $0142, $6142, $0142, $0142, $0142, $0142, $0142, $6142
                dc.w    $2142, $0142, $2142, $2142, $2142, $2142, $2142, $0142
                dc.w    $2142, $0142, $2142, $2142, $2142, $2142, $2142, $0142
                dc.w    $4142, $2142, $4142, $4142, $4142, $4142, $4142, $2142
                dc.w    $4142, $2142, $4142, $4142, $4142, $4142, $4142, $2142
                dc.w    $6142, $4142, $6142, $6142, $6142, $6142, $6142, $4142
                dc.w    $6142, $4142, $6142, $6142, $6142, $6142, $6142, $4142                
Offset_0x021874:
                lea     ($FFFF4400), A2
                move.w  #$001F, D0
Offset_0x02187E:                
                tst.b   (A2)
                beq.s   Offset_0x021888
                addq.w  #$08, A2
                dbra    D0, Offset_0x02187E
Offset_0x021888:
                rts
Offset_0x02188A:               
                lea     ($FFFF4400), A0
                move.w  #$001F, D7
Offset_0x021894:                
                moveq   #$00, D0
                move.b  (A0), D0
                beq.s   Offset_0x0218A2
                lsl.w   #$02, D0
                move.l  S1SS_AniIndex-$04(PC, D0), A1 ; Offset_0x0218AA
                jsr     (A1)
Offset_0x0218A2:
                addq.w  #$08, A0
                dbra    D7, Offset_0x021894
                rts 
;===============================================================================                
S1SS_AniIndex: ; Offset_0x0218AA: 
                dc.l    Offset_0x0218C2
                dc.l    Offset_0x0218F2
                dc.l    Offset_0x021928
                dc.l    Offset_0x021958
                dc.l    Offset_0x02198E
                dc.l    Offset_0x0219CE
Offset_0x0218C2:
                subq.b  #$01, $0002(A0)
                bpl.s   Offset_0x0218EA
                move.b  #$05, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  Offset_0x0218EC(PC, D0), D0
                move.b  D0, (A1)
                bne.s   Offset_0x0218EA
                clr.l   (A0)
                clr.l   $0004(A0)                
Offset_0x0218EA:
                rts
Offset_0x0218EC:
                dc.b    $42, $43, $44, $45, $00, $00
Offset_0x0218F2:
                subq.b  #$01, $0002(A0)
                bpl.s   Offset_0x021920
                move.b  #$07, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  Offset_0x021922(PC, D0), D0
                bne.s   Offset_0x02191E
                clr.l   (A0)
                clr.l   $0004(A0)
                move.b  #$25, (A1)
                rts
Offset_0x02191E:
                move.b  D0, (A1)
Offset_0x021920:
                rts
Offset_0x021922:
                dc.b    $32, $33, $32, $33, $00, $00
Offset_0x021928:
                subq.b  #$01, $0002(A0)
                bpl.s   Offset_0x021950
                move.b  #$05, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  Offset_0x021952(PC, D0), D0
                move.b  D0, (A1)
                bne.s   Offset_0x021950
                clr.l   (A0)
                clr.l   $0004(A0)
Offset_0x021950:
                rts
Offset_0x021952:
                dc.b    $46, $47, $48, $49, $00, $00
Offset_0x021958:
                subq.b  #$01, $0002(A0)
                bpl.s   Offset_0x021986
                move.b  #$07, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  Offset_0x021988(PC, D0), D0
                bne.s   Offset_0x021984
                clr.l   (A0)
                clr.l   $0004(A0)
                move.b  #$2B, (A1)
                rts
Offset_0x021984:
                move.b  D0, (A1)
Offset_0x021986:
                rts
Offset_0x021988:
                dc.b    $2B, $31, $2B, $31, $00, $00
Offset_0x02198E:
                subq.b  #$01, $0002(A0)
                bpl.s   Offset_0x0219C6
                move.b  #$05, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  Offset_0x0219C8(PC, D0), D0
                move.b  D0, (A1)
                bne.s   Offset_0x0219C6
                clr.l   (A0)
                clr.l   $0004(A0)
                move.b  #$04, ($FFFFB024).w
                move.w  #$00A8, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x0219C6:
                rts
Offset_0x0219C8:
                dc.b    $46, $47, $48, $49, $00, $00
Offset_0x0219CE:
                subq.b  #$01, $0002(A0)
                bpl.s   Offset_0x0219FA
                move.b  #$01, $0002(A0)
                moveq   #$00, D0
                move.b  $0003(A0), D0
                addq.b  #$01, $0003(A0)
                move.l  $0004(A0), A1
                move.b  Offset_0x0219FC(PC, D0), D0
                move.b  D0, (A1)
                bne.s   Offset_0x0219FA
                move.b  $0004(A0), (A1)
                clr.l   (A0)
                clr.l   $0004(A0)
Offset_0x0219FA:
                rts    
Offset_0x0219FC:                           
                dc.b    $4B, $4C, $4D, $4E, $4B, $4C, $4D, $4E, $00, $00                
S1SS_LayoutIndex: ; Offset_0x021A06:                
                dc.l    Special_Stage_1   ; Offset_0x031CEA                             
                dc.l    Special_Stage_2   ; Offset_0x031F64
                dc.l    Special_Stage_3   ; Offset_0x032376        
                dc.l    Special_Stage_4   ; Offset_0x0326D2
                dc.l    Special_Stage_5   ; Offset_0x032BAC
                dc.l    Special_Stage_6   ; Offset_0x03305C
S1SS_StartLoc: ; Offset_0x021A1E:
                dc.l    $03D002E0   ; Sonic Start Position in Special Stage 1
                dc.l    $03280574   ; Sonic Start Position in Special Stage 2
                dc.l    $04E402E0   ; Sonic Start Position in Special Stage 3
                dc.l    $03AD02E0   ; Sonic Start Position in Special Stage 4
                dc.l    $034006B8   ; Sonic Start Position in Special Stage 5
                dc.l    $049B0358   ; Sonic Start Position in Special Stage 6
S1_Special_Stage_Load: ; Offset_0x021A36:
                moveq   #$00, D0
                move.b  ($FFFFFE16).w, D0
                addq.b  #$01, ($FFFFFE16).w
                cmpi.b  #$06, ($FFFFFE16).w
                bcs.s   Offset_0x021A4E
                move.b  #$00, ($FFFFFE16).w
Offset_0x021A4E:
                cmpi.b  #$06, ($FFFFFE57).w
                beq.s   Offset_0x021A70
                moveq   #$00, D1
                move.b  ($FFFFFE57).w, D1
                subq.b  #$01, D1
                bcs.s   Offset_0x021A70
                lea     ($FFFFFE58).w, A3
Offset_0x021A64:                
                cmp.b   $00(A3, D1), D0
                bne.s   Offset_0x021A6C
                bra.s   S1_Special_Stage_Load   ; Offset_0x021A36
Offset_0x021A6C:
                dbra    D1, Offset_0x021A64
Offset_0x021A70:
                lsl.w   #$02, D0
                lea     S1SS_StartLoc(PC, D0), A1 ; Offset_0x021A1E
                move.w  (A1)+, ($FFFFB008).w
                move.w  (A1)+, ($FFFFB00C).w
                move.l  S1SS_LayoutIndex(PC, D0), A0 ; Offset_0x021A06
                lea     ($FFFF4000), A1
                move.w  #$0000, D0
                jsr     EnigmaDec               ; Offset_0x0018DA
                lea     ($FFFF0000), A1
                move.w  #$0FFF, D0
Offset_0x021A9C:                
                clr.l   (A1)+
                dbra    D0, Offset_0x021A9C
                lea     ($FFFF1020), A1
                lea     ($FFFF4000), A0
                moveq   #$3F, D1
Offset_0x021AB0:                
                moveq   #$3F, D2
Offset_0x021AB2:                
                move.b  (A0)+, (A1)+
                dbra    D2, Offset_0x021AB2
                lea     $0040(A1), A1
                dbra    D1, Offset_0x021AB0
                lea     ($FFFF4008), A1
                lea     (Offset_0x021AF2), A0
                moveq   #$4D, D1
Offset_0x021ACE:                
                move.l  (A0)+, (A1)+
                move.w  #$0000, (A1)+
                move.b  -4(A0), -1(A1)
                move.w  (A0)+, (A1)+
                dbra    D1, Offset_0x021ACE
                lea     ($FFFF4400), A1
                move.w  #$003F, D1
Offset_0x021AEA:                
                clr.l   (A1)+
                dbra    D1, Offset_0x021AEA
                rts
Offset_0x021AF2:
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6                 
                dc.w    $0142 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0142 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0142 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0142 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $2142 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $2142  
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $4142
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $4142                      
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $4142 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $4142   
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $6142   
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $6142   
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $6142   
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $6142  
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $6142 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $6142 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $6142 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $6142 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $6142  
                dc.l    S1_Obj_0x47_Mappings ; Offset_0x01401E
                dc.w    $023B
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0570
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0251
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0370
                dc.l    SS_Up_Mappings          ; Offset_0x021CFA
                dc.w    $0263
                dc.l    SS_Down_Mappings        ; Offset_0x021D0A
                dc.w    $0263
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6                
                dc.w    $22F0
                dc.l    SS_Red_White_Ball_Mappings ; Offset_0x021CDA
                dc.w    $0470
                dc.l    SS_Red_White_Ball_Mappings ; Offset_0x021CDA
                dc.w    $05F0
                dc.l    SS_Red_White_Ball_Mappings ; Offset_0x021CDA
                dc.w    $65F0
                dc.l    SS_Red_White_Ball_Mappings ; Offset_0x021CDA
                dc.w    $25F0
                dc.l    SS_Red_White_Ball_Mappings ; Offset_0x021CDA
                dc.w    $45F0
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $02F0
                dc.l    (($01<<$18)|S1_Obj_0x47_Mappings) ; Offset_0x01401E
                dc.w    $023B
                dc.l    (($02<<$18)|S1_Obj_0x47_Mappings) ; Offset_0x01401E
                dc.w    $023B 
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0797
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $07A0
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $07A9
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $0797
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $07A0
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $07A9
                dc.l    Rings_Mappings          ; Offset_0x00B036
                dc.w    $27B2
                dc.l    SS_Emerald_Mappings     ; Offset_0x021D22
                dc.w    $0770
                dc.l    SS_Emerald_Mappings     ; Offset_0x021D22
                dc.w    $2770
                dc.l    SS_Emerald_Mappings     ; Offset_0x021D22
                dc.w    $4770
                dc.l    SS_Emerald_Mappings     ; Offset_0x021D22                   
                dc.w    $6770
                dc.l    SS_Red_Emerald_Mappings ; Offset_0x021D1A
                dc.w    $0770
                dc.l    SS_Gray_Emerald_Mappings ; Offset_0x021D1E
                dc.w    $0770
                dc.l    SS_Reverse_Goal_Mappings ; Offset_0x021CC6
                dc.w    $04F0
                dc.l    (($04<<$18)|Rings_Mappings) ; Offset_0x00B036
                dc.w    $27B2
                dc.l    (($05<<$18)|Rings_Mappings) ; Offset_0x00B036                   
                dc.w    $27B2
                dc.l    (($06<<$18)|Rings_Mappings) ; Offset_0x00B036  
                dc.w    $27B2
                dc.l    (($07<<$18)|Rings_Mappings) ; Offset_0x00B036 
                dc.w    $27B2
                dc.l    SS_Red_White_Ball_Mappings ; Offset_0x021CDA
                dc.w    $23F0
                dc.l    (($01<<$18)|SS_Red_White_Ball_Mappings) ; Offset_0x021CDA
                dc.w    $23F0
                dc.l    (($02<<$18)|SS_Red_White_Ball_Mappings) ; Offset_0x021CDA
                dc.w    $23F0
                dc.l    (($03<<$18)|SS_Red_White_Ball_Mappings) ; Offset_0x021CDA
                dc.w    $23F0  
                dc.l    (($02<<$18)|SS_Reverse_Goal_Mappings) ; Offset_0x021CC6
                dc.w    $04F0
                dc.l    SS_Red_White_Ball_Mappings ; Offset_0x021CDA                  
                dc.w    $05F0                   
                dc.l    SS_Red_White_Ball_Mappings ; Offset_0x021CDA 
                dc.w    $65F0
                dc.l    SS_Red_White_Ball_Mappings ; Offset_0x021CDA 
                dc.w    $25F0
                dc.l    SS_Red_White_Ball_Mappings ; Offset_0x021CDA 
                dc.w    $45F0     
SS_Reverse_Goal_Mappings: ; Offset_0x021CC6:   
                dc.w    Offset_0x021CCC-SS_Reverse_Goal_Mappings
                dc.w    Offset_0x021CD2-SS_Reverse_Goal_Mappings
                dc.w    Offset_0x021CD8-SS_Reverse_Goal_Mappings
Offset_0x021CCC:
                dc.b    $01
                dc.b    $F4, $0A, $00, $00, $F4        ; Sonic 1 Mappings Format
Offset_0x021CD2:
                dc.b    $01
                dc.b    $F4, $0A, $00, $09, $F4        ; Sonic 1 Mappings Format
Offset_0x021CD8:
                dc.b    $00
                dc.b    $00                     ; Filler     
SS_Red_White_Ball_Mappings: ; Offset_0x021CDA:
                dc.w    Offset_0x021CE2-SS_Red_White_Ball_Mappings
                dc.w    Offset_0x021CE8-SS_Red_White_Ball_Mappings
                dc.w    Offset_0x021CEE-SS_Red_White_Ball_Mappings
                dc.w    Offset_0x021CF4-SS_Red_White_Ball_Mappings
Offset_0x021CE2:
                dc.b    $01
                dc.b    $F4, $0A, $00, $00, $F4        ; Sonic 1 Mappings Format
Offset_0x021CE8:
                dc.b    $01
                dc.b    $F4, $0A, $08, $00, $F4        ; Sonic 1 Mappings Format
Offset_0x021CEE:
                dc.b    $01
                dc.b    $F4, $0A, $18, $00, $F4        ; Sonic 1 Mappings Format
Offset_0x021CF4:
                dc.b    $01
                dc.b    $F4, $0A, $10, $00, $F4        ; Sonic 1 Mappings Format   
SS_Up_Mappings: ; Offset_0x021CFA:
                dc.w    Offset_0x021CFE-SS_Up_Mappings
                dc.w    Offset_0x021D04-SS_Up_Mappings
Offset_0x021CFE:
                dc.b    $01
                dc.b    $F4, $0A, $00, $00, $F4        ; Sonic 1 Mappings Format
Offset_0x021D04:
                dc.b    $01
                dc.b    $F4, $0A, $00, $12, $F4        ; Sonic 1 Mappings Format 
SS_Down_Mappings: ; Offset_0x021D0A:
                dc.w    Offset_0x021D0E-SS_Down_Mappings
                dc.w    Offset_0x021D14-SS_Down_Mappings
Offset_0x021D0E:
                dc.b    $01
                dc.b    $F4, $0A, $00, $09, $F4        ; Sonic 1 Mappings Format 
Offset_0x021D14:
                dc.b    $01
                dc.b    $F4, $0A, $00, $12, $F4        ; Sonic 1 Mappings Format
SS_Red_Emerald_Mappings: ; Offset_0x021D1A:
                dc.w    Offset_0x021D26-SS_Red_Emerald_Mappings
                dc.w    Offset_0x021D38-SS_Red_Emerald_Mappings
SS_Gray_Emerald_Mappings: ; Offset_0x021D1E:
                dc.w    Offset_0x021D2C-SS_Gray_Emerald_Mappings
                dc.w    Offset_0x021D38-SS_Gray_Emerald_Mappings                
SS_Emerald_Mappings: ; Offset_0x021D22:  {Blue / Yellow / Purple / Green}  
                dc.w    Offset_0x021D32-SS_Emerald_Mappings
                dc.w    Offset_0x021D38-SS_Emerald_Mappings
Offset_0x021D26:
                dc.b    $01
                dc.b    $F8, $05, $00, $00, $F8        ; Sonic 1 Mappings Format   
Offset_0x021D2C:
                dc.b    $01
                dc.b    $F8, $05, $00, $04, $F8        ; Sonic 1 Mappings Format                
Offset_0x021D32:
                dc.b    $01
                dc.b    $F8, $05, $00, $08, $F8        ; Sonic 1 Mappings Format
Offset_0x021D38:
                dc.b    $01
                dc.b    $F8, $05, $00, $0C, $F8        ; Sonic 1 Mappings Format                                                       
;===============================================================================
; Special Stage - Sub-routine
; [ End ]              
;===============================================================================  
                nop                             ; Filler                        
;=============================================================================== 
; Object 0x09 - Sonic In Special Stage
; [ Begin ]                         
;===============================================================================                 
Obj_0x09_Sonic_In_Special_Stage: ; Offset_0x021D40:
                tst.w   ($FFFFFE08).w
                beq.s   Sonic_In_SS_Normal      ; Offset_0x021D4E
                bsr     S1SS_FixCamera          ; Offset_0x021F76
                bra     Debug_Mode              ; Offset_0x023B70
Sonic_In_SS_Normal: ; Offset_0x021D4E:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x021D5C(PC, D0), D1
                jmp     Offset_0x021D5C(PC, D1)
Offset_0x021D5C:                
                dc.w    Offset_0x021D64-Offset_0x021D5C
                dc.w    Offset_0x021DA4-Offset_0x021D5C
                dc.w    Offset_0x021FA0-Offset_0x021D5C
                dc.w    Offset_0x021FF4-Offset_0x021D5C
Offset_0x021D64:
                addq.b  #$02, $0024(A0)    
                move.b  #$0E, $0016(A0)
                move.b  #$07, $0017(A0)
                move.l  #Sonic_Mappings, $0004(A0) ; Offset_0x0614C0
                move.w  #$0780, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_26 ; Offset_0x0223E4
                move.b  #$04, $0001(A0)
                move.b  #$00, $0018(A0)
                move.b  #$02, $001C(A0)
                bset    #$02, $0022(A0)
                bset    #$01, $0022(A0)
Offset_0x021DA4:
                tst.w   ($FFFFFFFA).w
                beq.s   Offset_0x021DB8
                btst    #$04, ($FFFFF605).w
                beq.s   Offset_0x021DB8
                move.w  #$0001, ($FFFFFE08).w
Offset_0x021DB8:
                move.b  #$00, $0030(A0)
                moveq   #$00, D0
                move.b  $0022(A0), D0
                andi.w  #$0002, D0
                move.w  SonicInSS_Modes(PC, D0), D1 ; Offset_0x021DDC
                jsr     SonicInSS_Modes(PC, D1)     ; Offset_0x021DDC
                jsr     Load_Sonic_Dynamic_PLC  ; (Offset_0x010DDC)
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
SonicInSS_Modes: ; Offset_0x021DDC:
                dc.w    SonicInSS_OnWall-SonicInSS_Modes ; Offset_0x021DE0
                dc.w    SonicInSS_InAir-SonicInSS_Modes  ; Offset_0x021DEE
SonicInSS_OnWall: ; Offset_0x021DE0:
                bsr     SonicInSS_Jump          ; Offset_0x021F16
                bsr     SonicInSS_Move          ; Offset_0x021E20
                bsr     SonicInSS_Fall          ; Offset_0x022016
                bra.s   SonicInSS_Display       ; Offset_0x021DFA
SonicInSS_InAir: ; Offset_0x021DEE:
                bsr     SonicInSS_Null          ; Offset_0x021F5A
                bsr     SonicInSS_Move          ; Offset_0x021E20
                bsr     SonicInSS_Fall          ; Offset_0x022016
SonicInSS_Display: ; Offset_0x021DFA:
                bsr     SonicInSS_ChkItems      ; Offset_0x022112
                bsr     SonicInSS_ChkItems2     ; Offset_0x02224E
                jsr     SpeedToPos              ; (Offset_0x00D27A)
                bsr     S1SS_FixCamera          ; Offset_0x021F76
                move.w  ($FFFFF750).w, D0
                add.w   ($FFFFF752).w, D0
                move.w  D0, ($FFFFF750).w
                jsr     Sonic_Animate           ; (Offset_0x010AB2)
                rts
SonicInSS_Move: ; Offset_0x021E20:
                btst    #$02, ($FFFFF602).w
                beq.s   Offset_0x021E2C
                bsr     SonicInSS_MoveLeft          ; Offset_0x021EB8
Offset_0x021E2C:
                btst    #$03, ($FFFFF602).w
                beq.s   Offset_0x021E38
                bsr     SonicInSS_MoveRight     ; Offset_0x021EE8
Offset_0x021E38:
                move.b  ($FFFFF602).w, D0
                andi.b  #$0C, D0
                bne.s   Offset_0x021E68
                move.w  $0014(A0), D0
                beq.s   Offset_0x021E68
                bmi.s   Offset_0x021E5A
                subi.w  #$000C, D0
                bcc.s   Offset_0x021E54
                move.w  #$0000, D0
Offset_0x021E54:
                move.w  D0, $0014(A0)
                bra.s   Offset_0x021E68
Offset_0x021E5A:
                addi.w  #$000C, D0
                bcc.s   Offset_0x021E64
                move.w  #$0000, D0
Offset_0x021E64:
                move.w  D0, $0014(A0)
Offset_0x021E68:
                move.b  ($FFFFF750).w, D0
                addi.b  #$20, D0
                andi.b  #$C0, D0
                neg.b   D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  $0014(A0), D1
                add.l   D1, $0008(A0)
                muls.w  $0014(A0), D0
                add.l   D0, $000C(A0)
                movem.l D0/D1, -(A7)
                move.l  $000C(A0), D2
                move.l  $0008(A0), D3
                bsr     Offset_0x0220A8
                beq.s   Offset_0x021EB2
                movem.l (A7)+, D0/D1
                sub.l   D1, $0008(A0)
                sub.l   D0, $000C(A0)
                move.w  #$0000, $0014(A0)
                rts
Offset_0x021EB2:
                movem.l (A7)+, D0/D1
                rts
                
;=============================================================================== 
; Sub Routine SonicInSS_MoveLeft
; [ Begin ]                         
;===============================================================================                 
SonicInSS_MoveLeft: ; Offset_0x021EB8:
                bset    #$00, $0022(A0)
                move.w  $0014(A0), D0
                beq.s   Offset_0x021EC6
                bpl.s   Offset_0x021EDA
Offset_0x021EC6:
                subi.w  #$000C, D0
                cmpi.w  #$F800, D0
                bgt.s   Offset_0x021ED4
                move.w  #$F800, D0
Offset_0x021ED4:
                move.w  D0, $0014(A0)
                rts
Offset_0x021EDA:
                subi.w  #$0040, D0
                bcc.s   Offset_0x021EE2
                nop
Offset_0x021EE2:
                move.w  D0, $0014(A0)
                rts
;=============================================================================== 
; Sub Routine SonicInSS_MoveLeft
; [ End ]                         
;===============================================================================                 

;=============================================================================== 
; Sub Routine SonicInSS_MoveRight
; [ Begin ]                         
;===============================================================================                 
SonicInSS_MoveRight: ; Offset_0x021EE8:
                bclr    #$00, $0022(A0)
                move.w  $0014(A0), D0
                bmi.s   Offset_0x021F08
                addi.w  #$000C, D0
                cmpi.w  #$0800, D0
                blt.s   Offset_0x021F02
                move.w  #$0800, D0
Offset_0x021F02:
                move.w  D0, $0014(A0)
                bra.s   Offset_0x021F14
Offset_0x021F08:
                addi.w  #$0040, D0
                bcc.s   Offset_0x021F10
                nop
Offset_0x021F10:
                move.w  D0, $0014(A0)
Offset_0x021F14:
                rts
;=============================================================================== 
; Sub Routine SonicInSS_MoveRight
; [ End ]                         
;===============================================================================
                 
;=============================================================================== 
; Sub Routine SonicInSS_Jump
; [ Begin ]                         
;===============================================================================                 
SonicInSS_Jump: ; Offset_0x021F16:
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq.s   Offset_0x021F58
                move.b  ($FFFFF750).w, D0
                andi.b  #$FC, D0
                neg.b   D0
                subi.b  #$40, D0
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  #$0680, D1
                asr.l   #$08, D1
                move.w  D1, $0010(A0)
                muls.w  #$0680, D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
                bset    #$01, $0022(A0)
                move.w  #$00A0, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x021F58:
                rts
;=============================================================================== 
; Sub Routine SonicInSS_Jump
; [ End ]                         
;===============================================================================                 

;=============================================================================== 
; Sub Routine SonicInSS_Null
; [ Begin ]                         
;===============================================================================                 
SonicInSS_Null: ; Offset_0x021F5A:   
                rts
;=============================================================================== 
; Sub Routine SonicInSS_Null
; [ End ]                         
;===============================================================================                 

                move.w  #$FC00, D1
                cmp.w   $0012(A0), D1
                ble.s   Offset_0x021F74
                move.b  ($FFFFF602).w, D0
                andi.b  #$70, D0
                bne.s   Offset_0x021F74
                move.w  D1, $0012(A0)
Offset_0x021F74:
                rts
                
;=============================================================================== 
; Sub Routine S1SS_FixCamera
; [ Begin ]                         
;===============================================================================  
S1SS_FixCamera: ; Offset_0x021F76:
                move.w  $000C(A0), D2
                move.w  $0008(A0), D3
                move.w  ($FFFFEE00).w, D0
                subi.w  #$00A0, D3
                bcs.s   Offset_0x021F8E
                sub.w   D3, D0
                sub.w   D0, ($FFFFEE00).w
Offset_0x021F8E:
                move.w  ($FFFFEE04).w, D0
                subi.w  #$0070, D2
                bcs.s   Offset_0x021F9E
                sub.w   D2, D0
                sub.w   D0, ($FFFFEE04).w
Offset_0x021F9E:
                rts
;=============================================================================== 
; Sub Routine S1SS_FixCamera
; [ End ]                         
;===============================================================================                  
Offset_0x021FA0:
                addi.w  #$0040, ($FFFFF752).w
                cmpi.w  #$1800, ($FFFFF752).w
                bne.s   Offset_0x021FB4
                move.b  #$0C, ($FFFFF600).w
Offset_0x021FB4:
                cmpi.w  #$3000, ($FFFFF752).w
                blt.s   Offset_0x021FD2
                move.w  #$0000, ($FFFFF752).w
                move.w  #$4000, ($FFFFF750).w
                addq.b  #$02, $0024(A0)
                move.w  #$003C, $0038(A0)
Offset_0x021FD2:
                move.w  ($FFFFF750).w, D0
                add.w   ($FFFFF752).w, D0
                move.w  D0, ($FFFFF750).w
                jsr     Sonic_Animate           ; (Offset_0x010AB2)
                jsr     Load_Sonic_Dynamic_PLC  ; (Offset_0x010DDC)
                bsr     S1SS_FixCamera          ; Offset_0x021F76
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x021FF4:
                subq.w  #$01, $0038(A0)
                bne.s   Offset_0x022000
                move.b  #$0C, ($FFFFF600).w
Offset_0x022000:
                jsr     Sonic_Animate           ; (Offset_0x010AB2)
                jsr     Load_Sonic_Dynamic_PLC  ; (Offset_0x010DDC)
                bsr     S1SS_FixCamera          ; Offset_0x021F76
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
                
;=============================================================================== 
; Sub Routine SonicInSS_Fall
; [ Begin ]                         
;===============================================================================                  
SonicInSS_Fall: ; Offset_0x022016:
                move.l  $000C(A0), D2
                move.l  $0008(A0), D3
                move.b  ($FFFFF750).w, D0
                andi.b  #$FC, D0
                jsr     CalcSine                ; Offset_0x00320A
                move.w  $0010(A0), D4
                ext.l   D4
                asl.l   #$08, D4
                muls.w  #$002A, D0
                add.l   D4, D0
                move.w  $0012(A0), D4
                ext.l   D4
                asl.l   #$08, D4
                muls.w  #$002A, D1
                add.l   D4, D1
                add.l   D0, D3
                bsr     Offset_0x0220A8
                beq.s   Offset_0x022070
                sub.l   D0, D3
                moveq   #$00, D0
                move.w  D0, $0010(A0)
                bclr    #$01, $0022(A0)
                add.l   D1, D2
                bsr     Offset_0x0220A8
                beq.s   Offset_0x022086
                sub.l   D1, D2
                moveq   #$00, D1
                move.w  D1, $0012(A0)
                rts
Offset_0x022070:
                add.l   D1, D2
                bsr     Offset_0x0220A8
                beq.s   Offset_0x022094
                sub.l   D1, D2
                moveq   #$00, D1
                move.w  D1, $0012(A0)
                bclr    #$01, $0022(A0)
Offset_0x022086:
                asr.l   #$08, D0
                asr.l   #$08, D1
                move.w  D0, $0010(A0)
                move.w  D1, $0012(A0)
                rts
Offset_0x022094:
                asr.l   #$08, D0
                asr.l   #$08, D1
                move.w  D0, $0010(A0)
                move.w  D1, $0012(A0)
                bset    #$01, $0022(A0)
                rts
;=============================================================================== 
; Sub Routine SonicInSS_Fall
; [ End ]                         
;===============================================================================  
                
Offset_0x0220A8:
                lea     ($FFFF0000), A1
                moveq   #$00, D4
                swap.w  D2
                move.w  D2, D4
                swap.w  D2
                addi.w  #$0044, D4
                divu.w  #$0018, D4
                mulu.w  #$0080, D4
                adda.l  D4, A1
                moveq   #$00, D4
                swap.w  D3
                move.w  D3, D4
                swap.w  D3
                addi.w  #$0014, D4
                divu.w  #$0018, D4
                adda.w  D4, A1
                moveq   #$00, D5
                move.b  (A1)+, D4
                bsr.s   Offset_0x0220F0
                move.b  (A1)+, D4
                bsr.s   Offset_0x0220F0
                adda.w  #$007E, A1
                move.b  (A1)+, D4
                bsr.s   Offset_0x0220F0
                move.b  (A1)+, D4
                bsr.s   Offset_0x0220F0
                tst.b   D5
                rts
Offset_0x0220F0:
                beq.s   Offset_0x022104
                cmpi.b  #$28, D4
                beq.s   Offset_0x022104
                cmpi.b  #$3A, D4
                bcs.s   Offset_0x022106
                cmpi.b  #$4B, D4
                bcc.s   Offset_0x022106
Offset_0x022104:
                rts
Offset_0x022106:
                move.b  D4, $0030(A0)
                move.l  A1, $0032(A0)                
                moveq   #$FFFFFFFF, D5
                rts
                
;=============================================================================== 
; Sub Routine SonicInSS_ChkItems
; [ Begin ]                         
;===============================================================================                  
SonicInSS_ChkItems: ; Offset_0x022112:
                lea     ($FFFF0000), A1
                moveq   #$00, D4
                move.w  $000C(A0), D4
                addi.w  #$0050, D4
                divu.w  #$0018, D4
                mulu.w  #$0080, D4
                adda.l  D4, A1
                moveq   #$00, D4
                move.w  $0008(A0), D4
                addi.w  #$0020, D4
                divu.w  #$0018, D4
                adda.w  D4, A1
                move.b  (A1), D4
                bne.s   Offset_0x02214C
                tst.b   $003A(A0)
                bne     Offset_0x02221C
                moveq   #$00, D4
                rts
Offset_0x02214C:
                cmpi.b  #$3A, D4
                bne.s   Offset_0x022188
                bsr     Offset_0x021874
                bne.s   Offset_0x022160
                move.b  #$01, (A2)
                move.l  A1, $0004(A2)
Offset_0x022160:
                jsr     (Offset_0x00AD22)
                cmpi.w  #$0032, ($FFFFFE20).w
                bcs.s   Offset_0x022184
                bset    #$00, ($FFFFFE1B).w
                bne.s   Offset_0x022184
                addq.b  #$01, ($FFFFFE18).w
                move.w  #$00BF, D0
                jsr     (Play_Music)            ; Offset_0x0014C0
Offset_0x022184:
                moveq   #$00, D4
                rts
Offset_0x022188:
                cmpi.b  #$28, D4
                bne.s   Offset_0x0221B2
                bsr     Offset_0x021874
                bne.s   Offset_0x02219C
                move.b  #$03, (A2)
                move.l  A1, $0004(A2)
Offset_0x02219C:
                addq.b  #$01, ($FFFFFE12).w
                addq.b  #$01, ($FFFFFE1C).w
                move.w  #$0088, D0
                jsr     (Play_Music)            ; Offset_0x0014C0
                moveq   #$00, D4
                rts
Offset_0x0221B2:
                cmpi.b  #$3B, D4
                bcs.s   Offset_0x0221F8
                cmpi.b  #$40, D4
                bhi.s   Offset_0x0221F8
                bsr     Offset_0x021874
                bne.s   Offset_0x0221CC
                move.b  #$05, (A2)
                move.l  A1, $0004(A2)
Offset_0x0221CC:
                cmpi.b  #$06, ($FFFFFE57).w
                beq.s   Offset_0x0221EA
                subi.b  #$3B, D4
                moveq   #$00, D0
                move.b  ($FFFFFE57).w, D0
                lea     ($FFFFFE58).w, A2
                move.b  D4, $00(A2, D0)
                addq.b  #$01, ($FFFFFE57).w
Offset_0x0221EA:
                move.w  #$0093, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                moveq   #$00, D4
                rts
Offset_0x0221F8:
                cmpi.b  #$41, D4
                bne.s   Offset_0x022204
                move.b  #$01, $003A(A0)
Offset_0x022204:
                cmpi.b  #$4A, D4
                bne.s   Offset_0x022218
                cmpi.b  #$01, $003A(A0)
                bne.s   Offset_0x022218
                move.b  #$02, $003A(A0)
Offset_0x022218:                  
                moveq   #$FFFFFFFF, D4
                rts
Offset_0x02221C:
                cmpi.b  #$02, $003A(A0)
                bne.s   Offset_0x022246
                lea     ($FFFF1020), A1
                moveq   #$3F, D1
Offset_0x02222C:                
                moveq   #$3F, D2
Offset_0x02222E:                
                cmpi.b  #$41, (A1)
                bne.s   Offset_0x022238
                move.b  #$2C, (A1)
Offset_0x022238:
                addq.w  #$01, A1
                dbra    D2, Offset_0x02222E
                lea     $0040(A1), A1
                dbra    D1, Offset_0x02222C
Offset_0x022246:
                clr.b   $003A(A0)
                moveq   #$00, D4
                rts
;=============================================================================== 
; Sub Routine SonicInSS_ChkItems
; [ End ]                         
;===============================================================================                  

;=============================================================================== 
; Sub Routine SonicInSS_ChkItems2
; [ Begin ]                         
;===============================================================================                  
SonicInSS_ChkItems2: ; Offset_0x02224E:
                move.b  $0030(A0), D0
                bne.s   Offset_0x02226E
                subq.b  #$01, $0036(A0)
                bpl.s   Offset_0x022260
                move.b  #$00, $0036(A0)
Offset_0x022260:
                subq.b  #$01, $0037(A0)
                bpl.s   Offset_0x02226C
                move.b  #$00, $0037(A0)
Offset_0x02226C:
                rts
Offset_0x02226E:
                cmpi.b  #$25, D0
                bne.s   Offset_0x0222E6
                move.l  $0032(A0), D1
                subi.l  #$FFFF0001, D1
                move.w  D1, D2
                andi.w  #$007F, D1
                mulu.w  #$0018, D1
                subi.w  #$0014, D1
                lsr.w   #$07, D2
                andi.w  #$007F, D2
                mulu.w  #$0018, D2
                subi.w  #$0044, D2
                sub.w   $0008(A0), D1
                sub.w   $000C(A0), D2
                jsr     CalcAngle               ; Offset_0x0034A2
                jsr     CalcSine                ; Offset_0x00320A
                muls.w  #$F900, D1
                asr.l   #$08, D1
                move.w  D1, $0010(A0)
                muls.w  #$F900, D0
                asr.l   #$08, D0
                move.w  D0, $0012(A0)
                bset    #$01, $0022(A0)
                bsr     Offset_0x021874
                bne.s   Offset_0x0222DC
                move.b  #$02, (A2)
                move.l  $0032(A0), D0
                subq.l  #$01, D0
                move.l  D0, $0004(A2)
Offset_0x0222DC:
                move.w  #$00B4, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x0222E6:
                cmpi.b  #$27, D0
                bne.s   Offset_0x0222FC
                addq.b  #$02, $0024(A0)
                move.w  #$00A8, D0
                jsr     (Play_Sfx)              ; Offset_0x0014C6
                rts
Offset_0x0222FC:
                cmpi.b  #$29, D0
                bne.s   Offset_0x022330
                tst.b   $0036(A0)
                bne     Offset_0x0223E0
                move.b  #$1E, $0036(A0)
                btst    #$06, ($FFFFF753).w
                beq.s   Offset_0x022326
                asl.w   ($FFFFF752).w
                move.l  $0032(A0), A1
                subq.l  #$01, A1
                move.b  #$2A, (A1)
Offset_0x022326:
                move.w  #$00A9, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x022330:
                cmpi.b  #$2A, D0
                bne.s   Offset_0x022364
                tst.b   $0036(A0)
                bne     Offset_0x0223E0
                move.b  #$1E, $0036(A0)
                btst    #$06, ($FFFFF753).w
                bne.s   Offset_0x02235A
                asr.w   ($FFFFF752).w
                move.l  $0032(A0), A1
                subq.l  #$01, A1
                move.b  #$29, (A1)
Offset_0x02235A:
                move.w  #$00A9, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x022364:
                cmpi.b  #$2B, D0
                bne.s   Offset_0x02239A
                tst.b   $0037(A0)
                bne     Offset_0x0223E0
                move.b  #$1E, $0037(A0)
                bsr     Offset_0x021874
                bne.s   Offset_0x02238C
                move.b  #$04, (A2)
                move.l  $0032(A0), D0
                subq.l  #$01, D0
                move.l  D0, $0004(A2)
Offset_0x02238C:
                neg.w   ($FFFFF752).w
                move.w  #$00A9, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x02239A:
                cmpi.b  #$2D, D0
                beq.s   Offset_0x0223B2
                cmpi.b  #$2E, D0
                beq.s   Offset_0x0223B2
                cmpi.b  #$2F, D0
                beq.s   Offset_0x0223B2
                cmpi.b  #$30, D0
                bne.s   Offset_0x0223E0
Offset_0x0223B2:
                bsr     Offset_0x021874
                bne.s   Offset_0x0223D6
                move.b  #$06, (A2)
                move.l  $0032(A0), A1
                subq.l  #$01, A1
                move.l  A1, $0004(A2)
                move.b  (A1), D0
                addq.b  #$01, D0
                cmpi.b  #$30, D0
                bls.s   Offset_0x0223D2
                clr.b   D0
Offset_0x0223D2:
                move.b  D0, $0004(A2)
Offset_0x0223D6:
                move.w  #$00BA, D0
                jmp     (Play_Sfx)              ; Offset_0x0014C6
Offset_0x0223E0:
                rts
;=============================================================================== 
; Sub Routine SonicInSS_ChkItems2
; [ Begin ]                         
;===============================================================================                  
                
;=============================================================================== 
; Object 0x09 - Sonic In Special Stage
; [ End ]                         
;===============================================================================  
                
;=============================================================================== 
; Object 0x10
; [ Begin ]                         
;===============================================================================                                 
Obj_0x10: 
Offset_0x0223E2:
                rts   
;=============================================================================== 
; Object 0x10
; [ End ]                         
;===============================================================================                 
J_ModifySpriteAttr_2P_26: ; Offset_0x0223E4:                                
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
                dc.w    $0000                   ; Filler
                
                
Dynamic_Art_Cues: ; Offset_0x0223EC: ; Dynamic reload sprites routine
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  Offset_0x02240A(PC, D0), D1
                lea     Offset_0x022408(PC, D1), A2
                move.w  Offset_0x022408(PC, D0), D0
                jmp     Offset_0x022408(PC, D0)
                rts 
Offset_0x022408:        ; Dynamic_Normal => Offset_0x022630
                dc.w    Dynamic_Normal-Offset_0x022408 ; Green Hill               
Offset_0x02240A:
                dc.w    Offset_0x022698-Offset_0x022408 ; Green Hill                
                dc.w    Offset_0x02244C-Offset_0x022408 ; Null
                dc.w    Offset_0x022866-Offset_0x022408 ; Null
                dc.w    Offset_0x02244C-Offset_0x022408 ; Wood (Null)
                dc.w    Offset_0x022866-Offset_0x022408 ; Wood (Null)
                dc.w    Offset_0x02244C-Offset_0x022408 ; Null
                dc.w    Offset_0x022866-Offset_0x022408 ; Null
                dc.w    Dynamic_Normal-Offset_0x022408 ; Metropolis
                dc.w    Offset_0x0226FC-Offset_0x022408 ; Metropolis
                dc.w    Dynamic_Normal-Offset_0x022408 ; Metropolis
                dc.w    Offset_0x0226FC-Offset_0x022408 ; Metropolis
                dc.w    Offset_0x02244C-Offset_0x022408 ; Null
                dc.w    Offset_0x022866-Offset_0x022408 ; Null
                dc.w    Offset_0x02244E-Offset_0x022408 ; Hill Top 
                dc.w    Offset_0x022754-Offset_0x022408 ; Hill Top 
                dc.w    Dynamic_Normal-Offset_0x022408 ; Hidden Palace
                dc.w    Offset_0x0227B8-Offset_0x022408 ; Hidden Palace
                dc.w    Offset_0x02244C-Offset_0x022408 ; Null
                dc.w    Offset_0x022866-Offset_0x022408 ; Null
                dc.w    Dynamic_Normal-Offset_0x022408 ; Oil Ocean
                dc.w    Offset_0x0227E4-Offset_0x022408 ; Oil Ocean
                dc.w    Offset_0x02244C-Offset_0x022408 ; Dust Hill
                dc.w    Offset_0x022866-Offset_0x022408 ; Dust Hill
                dc.w    Offset_0x02244C-Offset_0x022408 ; Casino Night
                dc.w    Offset_0x022866-Offset_0x022408 ; Casino Night
                dc.w    Dynamic_Normal-Offset_0x022408 ; Chemical Plant
                dc.w    CPz_Animate-Offset_0x022408 ; Chemical Plant ; Offset_0x02282A
                dc.w    Offset_0x02244C-Offset_0x022408 ; Genocide City (Null)
                dc.w    Offset_0x022866-Offset_0x022408 ; Genocide City (Null)
                dc.w    Dynamic_Normal-Offset_0x022408 ; Neo Green Hill
                dc.w    Offset_0x02283C-Offset_0x022408 ; Neo Green Hill
                dc.w    Offset_0x02244C-Offset_0x022408 ; Death Egg (Null)
                dc.w    Offset_0x022866-Offset_0x022408 ; Death Egg (Null)
Offset_0x02244C:
                rts       
Offset_0x02244E:
                tst.w   ($FFFFFFD8).w
                bne     Dynamic_Normal          ; Offset_0x022630
                lea     ($FFFFF7F0).w, A3
                moveq   #$00, D0
                move.w  ($FFFFEE00).w, D1
                neg.w   D1
                asr.w   #$03, D1
                move.w  ($FFFFEE00).w, D0
                lsr.w   #$04, D0
                add.w   D1, D0
                subi.w  #$0010, D0
                divu.w  #$0030, D0
                swap.w  D0
                cmp.b   $0001(A3), D0
                beq.s   Offset_0x0224C0
                move.b  D0, $0001(A3)
                move.w  D0, D2
                andi.w  #$0007, D0
                add.w   D0, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                andi.w  #$0038, D2
                lsr.w   #$02, D2
                add.w   D2, D0
                lea     Offset_0x0224C4(PC, D0), A4
                moveq   #$05, D5
                move.w  #$A000, D4
Offset_0x0224A4:
                moveq   #$FFFFFFFF, D1
                move.w  (A4)+, D1
                andi.l  #$00FFFFFF, D1
                move.w  D4, D2
                moveq   #$40, D3
                jsr     DMA_68KtoVRAM           ; Offset_0x00156C
                addi.w  #$0080, D4
                dbra    D5, Offset_0x0224A4
Offset_0x0224C0:
                bra     Offset_0x022584                 
Offset_0x0224C4:
                dc.w    $0080, $0280, $0380, $0580, $0600, $0880, $0080, $0280
                dc.w    $0380, $0580, $0600, $0880, $0980, $0A80, $0B80, $0C80
                dc.w    $0E80, $0F00, $0980, $0A80, $0B80, $0C80, $0E80, $0F00
                dc.w    $1080, $1180, $1200, $1280, $1300, $1380, $1080, $1180
                dc.w    $1200, $1280, $1300, $1380, $1400, $1480, $1500, $1600
                dc.w    $1900, $1D00, $1400, $1480, $1500, $1600, $1900, $1D00
                dc.w    $1D80, $1E00, $2280, $2400, $2580, $2600, $1D80, $1E00
                dc.w    $2280, $2400, $2580, $2600, $2680, $2780, $2B00, $3280
                dc.w    $3600, $3680, $2680, $2780, $2B00, $3280, $3600, $3680
                dc.w    $3C80, $3D00, $3F00, $3F80, $4080, $4480, $3C80, $3D00
                dc.w    $3F00, $3F80, $4080, $4480, $4580, $4880, $4900, $4B80
                dc.w    $4C80, $4D80, $4580, $4880, $4900, $4B80, $4C80, $4D80                 
Offset_0x022584:
                lea     ($FFFFA800).w, A1
                move.w  ($FFFFEE00).w, D2
                neg.w   D2
                asr.w   #$03, D2
                move.l  A2, -(A7)
                lea     (Hill_Top_Background_Unc), A0 ; Offset_0x028C2A
                lea     ($FFFF7C00), A2
                moveq   #$0F, D1
Offset_0x0225A0:
                move.w  (A1)+, D0
                neg.w   D0
                add.w   D2, D0
                andi.w  #$001F, D0
                lsr.w   #$01, D0
                bcc.s   Offset_0x0225B2
                addi.w  #$0200, D0
Offset_0x0225B2:
                lea     $00(A0, D0), A4
                lsr.w   #$01, D0
                bcs.s   Offset_0x0225DC
                move.l  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.l  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.l  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.l  (A4)+, (A2)+
                suba.w  #$00C0, A2
                adda.w  #$0020, A0
                dbra    D1, Offset_0x0225A0  
                bra.s   Offset_0x022614
Offset_0x0225DC:
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                adda.w  #$003C, A2
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                move.b  (A4)+, (A2)+
                suba.w  #$00C0, A2
                adda.w  #$0020, A0
                dbra    D1, Offset_0x0225A0
Offset_0x022614:
                move.l  #$00FF7C00, D1
                move.w  #$A300, D2
                move.w  #$0080, D3
                jsr     DMA_68KtoVRAM           ; Offset_0x00156C
                move.l  (A7)+, A2
                addq.w  #$02, A3
                bra     Offset_0x022634                            
Dynamic_Normal: ; Offset_0x022630:
                lea     ($FFFFF7F0).w, A3
Offset_0x022634:                
                move.w  (A2)+, D6
Offset_0x022636:
                subq.b  #$01, (A3)
                bpl.s   Offset_0x02267C
                moveq   #$00, D0
                move.b  $0001(A3), D0
                cmp.b   $0006(A2), D0
                bcs.s   Offset_0x02264C
                moveq   #$00, D0
                move.b  D0, $0001(A3)
Offset_0x02264C:
                addq.b  #$01, $0001(A3)
                move.b  (A2), (A3)
                bpl.s   Offset_0x02265A
                add.w   D0, D0
                move.b  $09(A2, D0), (A3)
Offset_0x02265A:
                move.b  $08(A2, D0), D0
                lsl.w   #$05, D0
                move.w  $0004(A2), D2
                move.l  (A2), D1
                andi.l  #$00FFFFFF, D1
                add.l   D0, D1
                moveq   #$00, D3
                move.b  $0007(A2), D3
                lsl.w   #$04, D3
                jsr     DMA_68KtoVRAM           ; Offset_0x00156C
Offset_0x02267C:
                move.b  $0006(A2), D0
                tst.b   (A2)
                bpl.s   Offset_0x022686
                add.b   D0, D0
Offset_0x022686:                
                addq.b  #$01, D0
                andi.w  #$00FE, D0
                lea     $08(A2, D0), A2
                addq.w  #$02, A3
                dbra    D6, Offset_0x022636
                rts   
Offset_0x022698: ; Green Hill Dynamic Reload Sprites                  
                dc.w    $0004                   ; Total of Animations
                dc.l    ($FF<<$18)|Ghz_Flower_1 ; Offset_0x028000
                dc.w    $7280                   ; VRam 
                dc.w    $0602                   ; Frames/Tiles
                dc.w    $007F, $0213, $0007, $0207, $0007, $0207 ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Flower_2 ; Offset_0x028080                  
                dc.w    $72C0                   ; VRam
                dc.w    $0802                   ; Frames/Tiles
                dc.w    $027F, $000B, $020B, $000B, $0205, $0005, $0205, $0005 ; Frame Load/Frame Time
                dc.l    ($07<<$18)|Ghz_Flower_3 ; Offset_0x028100  
                dc.w    $7300                   ; VRam
                dc.w    $0202                   ; Frames/Tiles
                dc.w    $0002                   ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Flower_4 ; Offset_0x028180    
                dc.w    $7340                   ; VRam
                dc.w    $0802                   ; Frames/Tiles
                dc.w    $007F, $0207, $0007, $0207, $0007, $020B, $000B, $020B ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Dyn_Wall ; Offset_0x028200  
                dc.w    $7380                   ; VRam
                dc.w    $0602                   ; Frames/Tiles
                dc.w    $0017, $0209, $040B, $0617, $040B, $0209 ; Frame Load/Frame Time
Offset_0x0226FC: ; Metropolis Dynamic Reload Sprites   
                dc.w    $0005                   ; Total of Animations
                dc.l    Mz_Spinnig_Cylinder     ; Offset_0x02902A  
                dc.w    $6980                   ; VRam
                dc.w    $0810                   ; Frames/Tiles
                dc.w    $0010, $2030, $4050, $6070 ; Frame Load/Frame Time
                dc.l    ($0D<<$18)|Mz_Lava      ; Offset_0x02A02A:
                dc.w    $6800                   ; VRam
                dc.w    $060C                   ; Frames/Tiles
                dc.w    $000C, $1824, $180C     ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Mz_Pistons   ; Offset_0x02A06A:
                dc.w    $6B80                   ; VRam
                dc.w    $0406                   ; Frames/Tiles
                dc.w    $0013, $0607, $0C13, $0607 ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Mz_Pistons   ; Offset_0x02A06A:
                dc.w    $6C40                   ; VRam
                dc.w    $0406                   ; Frames/Tiles
                dc.w    $0C13, $0607, $0013, $0607 ; Frame Load/Frame Time
                dc.l    ($05<<$18)|Mz_Drills    ; Offset_0x02A86A:
                dc.w    $6D00                   ; VRam
                dc.w    $0408                   ; Frames/Tiles
                dc.w    $0008, $1018            ; Frame Load/Frame Time
                dc.l    ($05<<$18)|Mz_Drills    ; Offset_0x02A86A:
                dc.w    $6E00                   ; VRam
                dc.w    $0408                   ; Frames/Tiles
                dc.w    $0008, $1018            ; Frame Load/Frame Time
Offset_0x022754: ; Hill Top Dynamic Reload Sprites  
                dc.w    $0004                   ; Total of Animations
                dc.l    ($FF<<$18)|Ghz_Flower_1 ; Offset_0x028000
                dc.w    $7280                   ; VRam 
                dc.w    $0602                   ; Frames/Tiles
                dc.w    $007F, $0213, $0007, $0207, $0007, $0207 ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Flower_2 ; Offset_0x028080                  
                dc.w    $72C0                   ; VRam
                dc.w    $0802                   ; Frames/Tiles
                dc.w    $027F, $000B, $020B, $000B, $0205, $0005, $0205, $0005 ; Frame Load/Frame Time
                dc.l    ($07<<$18)|Ghz_Flower_3 ; Offset_0x028100  
                dc.w    $7300                   ; VRam
                dc.w    $0202                   ; Frames/Tiles
                dc.w    $0002                   ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Flower_4 ; Offset_0x028180    
                dc.w    $7340                   ; VRam
                dc.w    $0802                   ; Frames/Tiles
                dc.w    $007F, $0207, $0007, $0207, $0007, $020B, $000B, $020B ; Frame Load/Frame Time
                dc.l    ($FF<<$18)|Ghz_Dyn_Wall ; Offset_0x028200  
                dc.w    $7380                   ; VRam
                dc.w    $0602                   ; Frames/Tiles
                dc.w    $0017, $0209, $040B, $0617, $040B, $0209 ; Frame Load/Frame Time
Offset_0x0227B8: ; Hidden Palace Dynamic Reload Sprites  
                dc.w    $0002                   ; Total of Animations
                dc.l    ($08<<$18)|HPz_Orbs     ; Offset_0x02B46A
                dc.w    $5D00                   ; VRam
                dc.w    $0608                   ; Frames/Tiles
                dc.w    $0000, $0810, $1008     ; Frame Load/Frame Time                 
                dc.l    ($08<<$18)|HPz_Orbs     ; Offset_0x02B46A
                dc.w    $5E00                   ; VRam
                dc.w    $0608                   ; Frames/Tiles
                dc.w    $0810, $1008, $0000     ; Frame Load/Frame Time
                dc.l    ($08<<$18)|HPz_Orbs     ; Offset_0x02B46A
                dc.w    $5F00                   ; VRam
                dc.w    $0608                   ; Frames/Tiles
                dc.w    $1008, $0000, $0810     ; Frame Load/Frame Time    
Offset_0x0227E4: ; Oil Ocean Dynamic Reload Sprites              
                dc.w    $0004                   ; Total of Animations
                dc.l    ($FF<<$18)|OOz_Red_Balls ; Offset_0x02B76A
                dc.w    $5A00                   ; VRam
                dc.w    $0404                   ; Frames/Tiles
                dc.w    $000B, $0405, $0809, $0403 ; Frame Load/Frame Time 
                dc.l    ($06<<$18)|OOz_Rotating_Square_1 ; Offset_0x02B8EA
                dc.w    $5A80                   ; VRam
                dc.w    $0404                   ; Frames/Tiles
                dc.w    $0004, $080C            ; Frame Load/Frame Time
                dc.l    ($06<<$18)|OOz_Rotating_Square_2 ; Offset_0x02BAEA
                dc.w    $5B00                   ; VRam
                dc.w    $0404                   ; Frames/Tiles
                dc.w    $0004, $080C            ; Frame Load/Frame Time
                dc.l    ($11<<$18)|OOz_Oil_1    ; Offset_0x02BCEA
                dc.w    $5B80                   ; VRam
                dc.w    $0610                   ; Frames/Tiles
                dc.w    $0010, $2030, $2010     ; Frame Load/Frame Time
                dc.l    ($11<<$18)|OOz_Oil_2 ; Offset_0x02C4EA
                dc.w    $5D80                   ; VRam
                dc.w    $0610                   ; Frames/Tiles
                dc.w    $0010, $2030, $2010     ; Frame Load/Frame Time
CPz_Animate: ; Offset_0x02282A: ; Chemical Plant Dynamic Reload Sprites              
                dc.w    $0000                   ; Total of Animations
                dc.l    ($04<<$18)|CPz_Dyn_Background ; Offset_0x02CCEA:
                dc.w    $6E00                   ; VRam
                dc.w    $0802                   ; Frames/Tiles
                dc.w    $0002, $0406, $080A, $0C0E ; Frame Load/Frame Time
Offset_0x02283C: ; Neo Green Hill Dynamic Reload Sprites 
                dc.w    $0003                   ; Total of Animations
                dc.l    ($05<<$18)|NGHz_Water_Falls_1 ; Offset_0x02CEEA
                dc.w    $7F80                   ; VRam
                dc.w    $0204                   ; Frames/Tiles    
                dc.w    $0004                   ; Frame Load/Frame Time
                dc.l    ($05<<$18)|NGHz_Water_Falls_1 ; Offset_0x02CEEA
                dc.w    $7F00                   ; VRam
                dc.w    $0204                   ; Frames/Tiles    
                dc.w    $0400                   ; Frame Load/Frame Time
                dc.l    ($05<<$18)|NGHz_Water_Falls_2 ; Offset_0x02CFEA
                dc.w    $7E80                   ; VRam
                dc.w    $0204                   ; Frames/Tiles 
                dc.w    $0004                   ; Frame Load/Frame Time
                dc.l    ($05<<$18)|NGHz_Water_Falls_3 ; Offset_0x02D0EA
                dc.w    $7E00                   ; VRam
                dc.w    $0204                   ; Frames/Tiles 
                dc.w    $0004                   ; Frame Load/Frame Time               
Offset_0x022866:
                cmpi.b  #$0D, ($FFFFFE10).w
                beq.s   Offset_0x022870
Offset_0x02286E:
                rts
Offset_0x022870:
                move.w  ($FFFFEE00).w, D0
                cmpi.w  #$1940, D0
                bcs.s   Offset_0x02286E  
                cmpi.w  #$1F80, D0
                bcc.s   Offset_0x02286E
                subq.b  #$01, ($FFFFF721).w
                bpl.s   Offset_0x02286E
                move.b  #$07, ($FFFFF721).w
                move.b  #$01, ($FFFFF720).w
                lea     ($FFFF7500), A1
                bsr.s   Offset_0x0228A0
                lea     ($FFFF7D00), A1
Offset_0x0228A0:
                move.w  #$0007, D1
Offset_0x0228A4:
                move.w  (A1), D0
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0072(A1), (A1)+
                adda.w  #$0070, A1
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0072(A1), (A1)+
                adda.w  #$0070, A1
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0072(A1), (A1)+
                adda.w  #$0070, A1
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  $0002(A1), (A1)+
                move.w  D0, (A1)+
                suba.w  #$0180, A1
                dbra    D1, Offset_0x0228A4
                rts    
Load_16x16_Mappings_For_Dyn_Sprites: ; Offset_0x02293A: ; Load 16x16 mappings used by dynamic reload sprites...
                cmpi.b  #$07, ($FFFFFE10).w
                bne.s   Offset_0x022952
                bsr     Offset_0x022D62
                move.b  #$FF, ($FFFFF7F1).w
                move.w  #$FFFF, ($FFFFA820).w
Offset_0x022952:
                cmpi.b  #$0D, ($FFFFFE10).w
                bne.s   Offset_0x022960
                move.b  #$FF, ($FFFFF7F1).w
Offset_0x022960:
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
                add.w   D0, D0
                move.w  Map16Delta_Index(PC, D0), D0 ; Offset_0x0229A2
                lea     Map16Delta_Index(PC, D0), A0 ; Offset_0x0229A2
                tst.w   (A0)
                beq.s   Offset_0x022988
                lea     ($FFFF9000).w, A1
                adda.w  (A0)+, A1
                move.w  (A0)+, D1
                tst.w   ($FFFFFFD8).w
                bne.s   Offset_0x02298A
Offset_0x022982:
                move.w  (A0)+, (A1)+
                dbra    D1, Offset_0x022982
Offset_0x022988:
                rts
Offset_0x02298A:
                move.w  (A0)+, D0
                move.w  D0, D1
                andi.w  #$F800, D0
                andi.w  #$07FF, D1
                lsr.w   #$01, D1
                or.w    D1, D0
                move.w  D0, (A1)+
                dbra    D1, Offset_0x02298A
                rts
Map16Delta_Index: ; Offset_0x0229A2:                    
                dc.w    Map16Delta_GHz-Map16Delta_Index  ; Offset_0x0229C4 - Green Hill 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; Offset_0x022D60 - Null
                dc.w    Map16Delta_Null-Map16Delta_Index ; Offset_0x022D60 - Wood (Null)
                dc.w    Map16Delta_Null-Map16Delta_Index ; Offset_0x022D60 - Null
                dc.w    Map16Delta_Mz-Map16Delta_Index   ; Offset_0x022A40 - Metropolis 16x16 mappings
                dc.w    Map16Delta_Mz-Map16Delta_Index   ; Offset_0x022A40 - Metropolis 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; Offset_0x022D60 - Null
                dc.w    Map16Delta_GHz-Map16Delta_Index  ; Offset_0x0229C4 - Hill Top 16x16 mappings
                dc.w    Map16Delta_HPz-Map16Delta_Index  ; Offset_0x022B14 - Hidden Palace 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; Offset_0x022D60 - Null
                dc.w    Map16Delta_OOz-Map16Delta_Index  ; Offset_0x022C08 - Oil Ocean 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; Offset_0x022D60 - Dust Hill (Null)
                dc.w    Map16Delta_CNz-Map16Delta_Index  ; Offset_0x022C6C - Casino Night 16x16 mappings
                dc.w    Map16Delta_CPz-Map16Delta_Index  ; Offset_0x022D10 - Chemical Plant 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; Offset_0x022D60 - Genocide City (Null)
                dc.w    Map16Delta_NGHz-Map16Delta_Index ; Offset_0x022D1C - Neo Green Hill 16x16 mappings
                dc.w    Map16Delta_Null-Map16Delta_Index ; Offset_0x022D60 - Death Egg (Null)                  
;===============================================================================
; Green Hill Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================
Map16Delta_GHz: ; Offset_0x0229C4: ; Green Hill / Hill Top 16x16 mappings used by dynamic reload sprites...                
                dc.w    $1788 ; Ram Address to start loading ($1788+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $003B ; Number of words to load in Ram Array ($0000..$003B) -> move.w  (A0)+, D1
                dc.w    $4500, $4504, $4501, $4505, $4508, $450C, $4509, $450D
                dc.w    $4510, $4514, $4511, $4515, $4502, $4506, $4503, $4507
                dc.w    $450A, $450E, $450B, $450F, $4512, $4516, $4513, $4517
                dc.w    $6518, $651A, $6519, $651B, $651C, $651E, $651D, $651F
                dc.w    $439C, $4B9C, $439D, $4B9D, $4158, $439C, $4159, $439D
                dc.w    $4B9C, $4958, $4B9D, $4959, $6394, $6B94, $6395, $6B95
                dc.w    $E396, $EB96, $E397, $EB97, $6398, $6B98, $6399, $6B99
                dc.w    $E39A, $EB9A, $E39B, $EB9B
;===============================================================================
; Green Hill Mappings 16x16 Delta  
; [ End ]
;===============================================================================  

;===============================================================================
; Metropolis Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================              
Map16Delta_Mz: ; Offset_0x022A40: ; Metropolis 16x16 mappings used by dynamic reload sprites...  
                dc.w    $1730 ; Ram Address to start loading ($1730+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $0067 ; Number of words to load in Ram Array ($0000..$0067) -> move.w  (A0)+, D1
                dc.w    $235C, $2B5C, $235D, $2B5D, $235E, $2B5E, $235F, $2B5F
                dc.w    $635A, $635A, $635B, $635B, $6358, $6358, $6359, $6359
                dc.w    $6356, $6356, $6357, $6357, $6354, $6354, $6355, $6355
                dc.w    $6352, $6352, $6353, $6353, $6350, $6350, $6351, $6351
                dc.w    $634E, $634E, $634F, $634F, $634C, $634C, $634D, $634D
                dc.w    $2360, $2B60, $2361, $2B61, $2362, $2B62, $2363, $2B63
                dc.w    $2364, $2B64, $2365, $2B65, $2366, $2B66, $2367, $2B67
                dc.w    $0000, $0000, $4340, $4341, $0000, $0000, $4342, $4343
                dc.w    $4344, $4345, $4348, $4349, $4346, $4347, $434A, $434B
                dc.w    $E35A, $E35A, $E35B, $E35B, $E358, $E358, $E359, $E359
                dc.w    $E356, $E356, $E357, $E357, $E354, $E354, $E355, $E355
                dc.w    $E352, $E352, $E353, $E353, $E350, $E350, $E351, $E351
                dc.w    $E34E, $E34E, $E34F, $E34F, $E34C, $E34C, $E34D, $E34D
;===============================================================================
; Metropolis Mappings 16x16 Delta  
; [ End ]
;=============================================================================== 

;===============================================================================
; Hidden Palace Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================                   
Map16Delta_HPz: ; Offset_0x022B14: ; Hidden Palace 16x16 mappings used by dynamic reload sprites...  
                dc.w    $1710 ; Ram Address to start loading ($1710+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $0077 ; Number of words to load in Ram Array ($0000..$0077) -> move.w  (A0)+, D1
                dc.w    $62E8, $62E9, $62EA, $62EB, $62EC, $62ED, $62EE, $62EF
                dc.w    $62F0, $62F1, $62F2, $62F3, $62F4, $62F5, $62F6, $62F7
                dc.w    $62F8, $62F9, $62FA, $62FB, $62FC, $62FD, $62FE, $62FF
                dc.w    $42E8, $42E9, $42EA, $42EB, $42EC, $42ED, $42EE, $42EF
                dc.w    $42F0, $42F1, $42F2, $42F3, $42F4, $42F5, $42F6, $42F7
                dc.w    $42F8, $42F9, $42FA, $42FB, $42FC, $42FD, $42FE, $42FF
                dc.w    $0000, $62E8, $0000, $62EA, $62E9, $62EC, $62EB, $62EE
                dc.w    $62ED, $0000, $62EF, $0000, $0000, $62F0, $0000, $62F2
                dc.w    $62F1, $62F4, $62F3, $62F6, $62F5, $0000, $62F7, $0000
                dc.w    $0000, $62F8, $0000, $62FA, $62F9, $62FC, $62FB, $62FE
                dc.w    $62FD, $0000, $62FF, $0000, $0000, $42E8, $0000, $42EA
                dc.w    $42E9, $42EC, $42EB, $42EE, $42ED, $0000, $42EF, $0000
                dc.w    $0000, $42F0, $0000, $42F2, $42F1, $42F4, $42F3, $42F6
                dc.w    $42F5, $0000, $42F7, $0000, $0000, $42F8, $0000, $42FA
                dc.w    $42F9, $42FC, $42FB, $42FE, $42FD, $0000, $42FF, $0000
;===============================================================================
; Hidden Palace Mappings 16x16 Delta  
; [ End ]
;===============================================================================  

;===============================================================================
; Oil Ocean Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================                  
Map16Delta_OOz: ; Offset_0x022C08: ; Oil Ocean 16x16 mappings used by dynamic reload sprites...                
                dc.w    $17A0 ; Ram Address to start loading ($17A0+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $002F ; Number of words to load in Ram Array ($0000..$002F) -> move.w  (A0)+, D1
                dc.w    $82D0, $82D2, $82D1, $82D3, $E2D4, $E2D5, $E2D6, $E2D7
                dc.w    $0000, $62D8, $0000, $62DA, $62D9, $0000, $62DB, $0000
                dc.w    $C2DC, $C2DD, $C2E4, $C2E5, $C2DE, $C2DF, $C2E6, $C2E7
                dc.w    $C2E0, $C2E1, $C2E8, $C2E9, $C2E2, $C2E3, $C2EA, $C2EB
                dc.w    $C2EC, $C2ED, $C2F4, $C2F5, $C2EE, $C2EF, $C2F6, $C2F7
                dc.w    $C2F0, $C2F1, $C2F8, $C2F9, $C2F2, $C2F3, $C2FA, $C2FB
;===============================================================================
; Oil Ocean Mappings 16x16 Delta  
; [ End ]
;===============================================================================   

;===============================================================================
; Casino Night Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================                   
Map16Delta_CNz: ; Offset_0x022C6C: ; Casino Night 16x16 mappings used by dynamic reload sprites...  
                dc.w    $1760 ; Ram Address to start loading ($1760+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $004F ; Number of words to load in Ram Array ($0000..$004F) -> move.w  (A0)+, D1
                dc.w    $43D2, $43D4, $43D3, $43D5, $4BD4, $43D6, $4BD5, $43D7
                dc.w    $53D3, $53D5, $53D2, $53D4, $5BD5, $5BD3, $5BD4, $5BD2
                dc.w    $43D8, $43DA, $43D9, $43DB, $4BDA, $4BD8, $4BDB, $4BD9
                dc.w    $43DC, $43DE, $43DD, $43DF, $4BDE, $4BDC, $4BDF, $4BDD
                dc.w    $43E0, $43E2, $43E1, $43E3, $4BE2, $4BE0, $4BE3, $4BE1
                dc.w    $43E4, $43E6, $43E5, $43E7, $4BE6, $4BE4, $4BE7, $4BE5
                dc.w    $63E8, $63EA, $63E9, $63EB, $63EC, $63EE, $63ED, $63EF
                dc.w    $63F0, $63F2, $63F1, $63F3, $63F4, $63F6, $63F5, $63F7
                dc.w    $7BF7, $7BF5, $7BF6, $7BF4, $63F8, $63FA, $63F9, $63FB
                dc.w    $6BF6, $6BF4, $6BF7, $6BF5, $7BEB, $7BE9, $7BEA, $7BE8
;===============================================================================
; Casino Night Mappings 16x16 Delta  
; [ End ]
;===============================================================================   

;===============================================================================
; Chemical Plant Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================                 
Map16Delta_CPz: ; Offset_0x022D10: ; Chemical Plant 16x16 mappings used by dynamic reload sprites...
                dc.w    $17F8 ; Ram Address to start loading ($17F8+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $0003 ; Number of words to load in Ram Array ($0000..$0003) -> move.w  (A0)+, D1
                dc.w    $4370, $4371, $4370, $4371
;===============================================================================
; Chemical Plant Mappings 16x16 Delta  
; [ End ]
;===============================================================================  

;===============================================================================
; Neo Green Hill Mappings 16x16 Delta  
; [ Begin ]
;===============================================================================  
Map16Delta_NGHz: ; Offset_0x022D1C: ; Neo Green Hill 16x16 mappings used by dynamic reload sprites...               
                dc.w    $17C0 ; Ram Address to start loading ($17C0+$FFFF9000)      -> adda.w  (A0)+, A1
                dc.w    $001F ; Number of words to load in Ram Array ($0000..$001F) -> move.w  (A0)+, D1
                dc.w    $C3F0, $C3F1, $C3F2, $C3F3, $C3F4, $C3F5, $C3F6, $C3F7
                dc.w    $C3F8, $C3F9, $C3FA, $C3FB, $C3FC, $C3FD, $C3FE, $C3FF
                dc.w    $43F0, $43F1, $43F2, $43F3, $43F4, $43F5, $43F6, $43F7
                dc.w    $43F8, $43F9, $43FA, $43FB, $43FC, $43FD, $43FE, $43FF
;===============================================================================
; Neo Green Hill Mappings 16x16 Delta  
; [ End ]
;===============================================================================
                  
;===============================================================================
; Null Mappings 16x16 Delta  
; [ Begin ]
;=============================================================================== 
Map16Delta_Null: ; Offset_0x022D60:
                dc.w    $0000 ; Null
;===============================================================================
; Null Mappings 16x16 Delta  
; [ End ]
;===============================================================================                 
                
Offset_0x022D62: ; Load Hill Top 8x8 Extra Background Tiles In To Ram               
                lea     (Hill_Top_Background), A0 ; Offset_0x028300
                lea     ($FFFFB800).w, A4
                bsr     Offset_0x022DF4
                lea     ($FFFFB800).w, A1
                lea     (Offset_0x022D94), A4
                moveq   #$00, D2
                moveq   #$2F, D3
Offset_0x022D7E:
                moveq   #$FFFFFFFF, D0
                move.w  (A4)+, D0
                move.l  D0, A2
                moveq   #$1F, D1
Offset_0x022D86:
                move.l  (A1), (A2)+
                move.l  D2, (A1)+
                dbra    D1, Offset_0x022D86
                dbra    D3, Offset_0x022D7E
                rts  
Offset_0x022D94:
                dc.w    $0080, $0280, $0380, $0580, $0600, $0880, $0980, $0A80
                dc.w    $0B80, $0C80, $0E80, $0F00, $1080, $1180, $1200, $1280
                dc.w    $1300, $1380, $1400, $1480, $1500, $1600, $1900, $1D00
                dc.w    $1D80, $1E00, $2280, $2400, $2580, $2600, $2680, $2780
                dc.w    $2B00, $3280, $3600, $3680, $3C80, $3D00, $3F00, $3F80
                dc.w    $4080, $4480, $4580, $4880, $4900, $4B80, $4C80, $4D80
Offset_0x022DF4:
                jmp     NemesisDec_ToRAM        ; Offset_0x00160E 
                dc.w    $0000 ; Filler    
Obj_0x21_Head_Up_Display: ; Offset_0x022DFC:
                moveq   #$00, D0
                move.b  $0024(A0), D0
                move.w  Offset_0x022E0A(PC, D0), D1
                jmp     Offset_0x022E0A(PC, D1)
Offset_0x022E0A:
                dc.w    Offset_0x022E0E-Offset_0x022E0A
                dc.w    Offset_0x022E3C-Offset_0x022E0A
Offset_0x022E0E:
                addq.b  #$02, $0024(A0)
                move.w  #$0090, $0008(A0)
                move.w  #$0108, $000A(A0)
                move.l  #Head_Up_Display_Mappings, $0004(A0) ; Offset_0x022E80
                move.w  #$06CA, $0002(A0)
                bsr     J_ModifySpriteAttr_2P_27 ; Offset_0x023B68
                move.b  #$00, $0001(A0)
                move.b  #$00, $0018(A0)
Offset_0x022E3C:
                tst.w   ($FFFFFE20).w
                beq.s   Offset_0x022E60
                moveq   #$00, D0
                btst    #$03, ($FFFFFE05).w
                bne.s   Offset_0x022E56
                cmpi.b  #$09, ($FFFFFE23).w
                bne.s   Offset_0x022E56
                addq.w  #$02, D0
Offset_0x022E56:
                move.b  D0, $001A(A0)
                jmp     DisplaySprite           ; Offset_0x00D3C2
Offset_0x022E60:
                moveq   #$00, D0
                btst    #$03, ($FFFFFE05).w
                bne.s   Offset_0x022E76
                addq.w  #$01, D0
                cmpi.b  #$09, ($FFFFFE23).w
                bne.s   Offset_0x022E76
                addq.w  #$02, D0
Offset_0x022E76:
                move.b  D0, $001A(A0)
                jmp     DisplaySprite           ; Offset_0x00D3C2  
Head_Up_Display_Mappings: ; Offset_0x022E80:
                dc.w    HUD_Map_01-Head_Up_Display_Mappings
                dc.w    HUD_Map_02-Head_Up_Display_Mappings
                dc.w    HUD_Map_03-Head_Up_Display_Mappings 
                dc.w    HUD_Map_04-Head_Up_Display_Mappings
HUD_Map_01: ; Offset_0x022E88:
                dc.w    $000A
                dc.l    $800DA000, $A0000000, $800DA018, $A00C0020
                dc.l    $800DA020, $A0100040, $900DA010, $A0080000
                dc.l    $900DA028, $A0140028, $A00DA008, $A0040000
                dc.l    $A001A000, $A0000020, $A009A030, $A0180030
                dc.l    $4005810A, $80850000, $400DA10E, $A0870010
HUD_Map_02: ; Offset_0x022EDA:                
                dc.w    $000A
                dc.l    $800DA000, $A0000000, $800DA018, $A00C0020
                dc.l    $800DA020, $A0100040, $900DA010, $A0080000
                dc.l    $900DA028, $A0140028, $A00D8008, $80040000
                dc.l    $A0018000, $80000020, $A009A030, $A0180030
                dc.l    $4005810A, $80850000, $400DA10E, $A0870010
HUD_Map_03: ; Offset_0x022F2C:
                dc.w    $000A   
                dc.l    $800DA000, $A0000000, $800DA018, $A00C0020
                dc.l    $800DA020, $A0100040, $900D8010, $80080000
                dc.l    $900DA028, $A0140028, $A00DA008, $A0040000
                dc.l    $A001A000, $A0000020, $A009A030, $A0180030
                dc.l    $4005810A, $80850000, $400DA10E, $A0870010  
HUD_Map_04: ; Offset_0x022F7E:                       
                dc.w    $000A             
                dc.l    $800DA000, $A0000000, $800DA018, $A00C0020
                dc.l    $800DA020, $A0100040, $900D8010, $80080000
                dc.l    $900DA028, $A0140028, $A00D8008, $80040000
                dc.l    $A0018000, $80000020, $A009A030, $A0180030
                dc.l    $4005810A, $80850000, $400DA10E, $A0870010
;===============================================================================
; AddPoints - Sub-routine
; [ Begin ]              
;===============================================================================                
AddPoints: ; Offset_0x022FD0:
                move.b  #$01, ($FFFFFE1F).w
                lea     ($FFFFFE26).w, A3
                add.l   D0, (A3)
                move.l  #$000F423F, D1
                cmp.l   (A3), D1  
                bhi.s   Offset_0x022FE8
                move.l  D1, (A3)
Offset_0x022FE8:
                move.l  (A3), D0
                cmp.l   ($FFFFFFC0).w, D0
                bcs.s   Offset_0x023010
                addi.l  #$00001388, ($FFFFFFC0).w
                tst.b   ($FFFFFFF8).w
                bmi.s   Offset_0x023010
                addq.b  #$01, ($FFFFFE12).w
                addq.b  #$01, ($FFFFFE1C).w
                move.w  #$0088, D0           ; +1UP Sound - Sonic 1 LeftOver
                jmp     (Play_Music)            ; Offset_0x0014C0
Offset_0x023010:
                rts
HudUpdate: ; Offset_0x023012:
                nop
                lea     ($00C00000), A6
                tst.w   ($FFFFFFFA).w
                bne     Offset_0x023104
                tst.b   ($FFFFFE1F).w
                beq.s   Offset_0x02303A
                clr.b   ($FFFFFE1F).w
                move.l  #$5C800003, D0
                move.l  ($FFFFFE26).w, D1
                bsr     Offset_0x023250
Offset_0x02303A:
                tst.b   ($FFFFFE1D).w
                beq.s   Offset_0x02305A
                bpl.s   Offset_0x023046
                bsr     Offset_0x023170
Offset_0x023046:
                clr.b   ($FFFFFE1D).w
                move.l  #$5F400003, D0
Offset_0x023050:                
                moveq   #$00, D1
                move.w  ($FFFFFE20).w, D1
                bsr     Offset_0x023246
Offset_0x02305A:
                tst.b   ($FFFFFE1E).w
                beq.s   Offset_0x0230B6 
                tst.w   ($FFFFF63A).w
                bne.s   Offset_0x0230B6
                lea     ($FFFFFE22).w, A1
                cmpi.l  #$00093B3B, (A1)+
                nop
                addq.b  #1, -(A1)
                cmpi.b  #$3C, (A1)
                bcs.s   Offset_0x0230B6
                move.b  #$00, (A1)
                addq.b  #1, -(A1)
                cmpi.b  #$3C, (A1)
                bcs.s   Offset_0x023096
                move.b  #$00, (A1)
                addq.b  #1, -(A1)
                cmpi.b  #$09, (A1)
                bcs.s   Offset_0x023096
                move.b  #$09, (A1)
Offset_0x023096:
                move.l  #$5E400003, D0
                moveq   #$00, D1
                move.b  ($FFFFFE23).w, D1
                bsr     Offset_0x02331E
                move.l  #$5EC00003, D0
                moveq   #$00, D1
                move.b  ($FFFFFE24).w, D1
                bsr     Offset_0x023326
Offset_0x0230B6:                
                tst.b   ($FFFFFE1C).w
                beq.s   Offset_0x0230C4
                clr.b   ($FFFFFE1C).w
                bsr     Offset_0x0233DE
Offset_0x0230C4:
                tst.b   ($FFFFF7D6).w
                beq.s   Offset_0x0230EC
                clr.b   ($FFFFF7D6).w
                move.l  #$6E000002, ($00C00004)
                moveq   #$00, D1
                move.w  ($FFFFF7D2).w, D1
                bsr     Offset_0x02337E
                moveq   #$00, D1
                move.w  ($FFFFF7D4).w, D1
                bsr     Offset_0x02337E
Offset_0x0230EC:              
                rts  
Sub_Time_Over: ; Offset_0x0230EE:
                clr.b   ($FFFFFE1E).w
                lea     ($FFFFB000).w, A0
                move.l  A0, A2
                bsr     KillSonic               ; Offset_0x021422
                move.b  #$01, ($FFFFFE1A).w
                rts                
Offset_0x023104:
                bsr     Offset_0x0231DC
                tst.b   ($FFFFFE1D).w
                beq.s   Offset_0x023128
                bpl.s   Offset_0x023114
                bsr     Offset_0x023170
Offset_0x023114:
                clr.b   ($FFFFFE1D).w
                move.l  #$5F400003, D0
                moveq   #$00, D1
                move.w  ($FFFFFE20).w, D1
                bsr     Offset_0x023246
Offset_0x023128:
                move.l  #$5EC00003, D0
                moveq   #$00, D1
                move.b  ($FFFFF62C).w, D1
                bsr     Offset_0x023326
                tst.b   ($FFFFFE1C).w
                beq.s   Offset_0x023146
                clr.b   ($FFFFFE1C).w
                bsr     Offset_0x0233DE
Offset_0x023146:
                tst.b   ($FFFFF7D6).w
                beq.s   Offset_0x02316E
                clr.b   ($FFFFF7D6).w   
                move.l  #$6E000002, ($00C00004)
                moveq   #$00, D1
                move.w  ($FFFFF7D2).w, D1
                bsr     Offset_0x02337E
                moveq   #$00, D1
                move.w  ($FFFFF7D4).w, D1
                bsr     Offset_0x02337E
Offset_0x02316E:                
                rts
Offset_0x023170:
                move.l  #$5F400003, ($00C00004)
                lea     Offset_0x0231D8(PC), A2
                move.w  #$0002, D2
                bra.s   Offset_0x0231A0
Head_Up_Display_Base: ; Offset_0x023184: ; HUD routine               
                lea     ($00C00000), A6
                bsr     Offset_0x0233DE
                move.l  #$5C400003, ($00C00004)
                lea     Offset_0x0231CC(PC), A2
                move.w  #$000E, D2
Offset_0x0231A0:
                lea     Offset_0x023448(PC), A1
Offset_0x0231A4:                
                move.w  #$000F, D1
                move.b  (A2)+, D0
                bmi.s   Offset_0x0231C0  
                ext.w   D0
                lsl.w   #5, D0
                lea     $00(A1, D0), A3                   
Offset_0x0231B4:
                move.l  (A3)+, (A6)
                dbra    D1, Offset_0x0231B4
Offset_0x0231BA:                
                dbra    D2, Offset_0x0231A4
                rts 
Offset_0x0231C0:
                move.l  #$00000000, (A6)
                dbra    D1, Offset_0x0231C0
                bra.s   Offset_0x0231BA            
Offset_0x0231CC:
                dc.l    $16FFFFFF, $FFFFFF00, $00140000
Offset_0x0231D8:
                dc.l    $FFFF0000
Offset_0x0231DC:
                move.l  #$5C400003, ($00C00004)
                move.w  ($FFFFEE00).w, D1
                lsr.w   #7, D1
                move.w  ($FFFFFE04).w, D1
                lsr.w   #6, D1
                swap.w  D1
                move.w  ($FFFFB008).w, D1 
                bsr.s   Offset_0x02320E
                move.w  ($FFFFEE04).w, D1
                move.w  ($FFFFEE08).w, D1
                lsr.w   #7, D1
                move.b  ($FFFFFE78).w, D1
                swap.w  D1
                move.w  ($FFFFB00C).w, D1
Offset_0x02320E:
                moveq   #$07, D6
                lea     (Offset_0x023888), A1
Offset_0x023216:                
                rol.w   #4, D1
                move.w  D1, D2
                andi.w  #$000F, D2
                cmpi.w  #$000A, D2
                bcs.s   Offset_0x023228
                addi.w  #$0007, D2
Offset_0x023228:
                lsl.w   #5, D2
                lea     $00(A1, D2), A3
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                swap.w  D1
                dbra    D6, Offset_0x023216
                rts
Offset_0x023246:
                lea     (Offset_0x023312), A2
                moveq   #$02, D6
                bra.s   Offset_0x023258
Offset_0x023250:
                lea     (Offset_0x023306), A2
                moveq   #$05, D6
Offset_0x023258:
                moveq   #$00, D4
                lea     Offset_0x023448(PC), A1
Offset_0x02325E:                
                moveq   #$00, D2
                move.l  (A2)+, D3
Offset_0x023262:                
                sub.l   D3, D1
                bcs.s   Offset_0x02326A
                addq.w  #1, D2
                bra.s   Offset_0x023262
Offset_0x02326A:
                add.l   D3, D1
                tst.w   D2
                beq.s   Offset_0x023274
                move.w  #$0001, D4
Offset_0x023274:
                tst.w   D4
                beq.s   Offset_0x0232A2
                lsl.w   #6, D2
                move.l  D0, $0004(A6)
                lea     $00(A1, D2), A3
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
Offset_0x0232A2:                
                addi.l  #$00400000, D0
                dbra    D6, Offset_0x02325E
                rts 
; Offset_0x0232AE:
                move.l  #$5F800003, ($00C00004)
                lea     ($00C00000), A6
                lea     (Offset_0x023316), A2
                moveq   #$01, D6
                moveq   #$00, D4
                lea     Offset_0x023448(PC), A1
Offset_0x0232CC:                
                moveq   #$00, D2
                move.l  (A2)+, D3
Offset_0x0232D0:                
                sub.l   D3, D1
                bcs.s   Offset_0x0232D8
                addq.w  #$01, D2
                bra.s   Offset_0x0232D0
Offset_0x0232D8:
                add.l   D3, D1
                lsl.w   #$06, D2
                lea     $00(A1, D2), A3
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                dbra    D6, Offset_0x0232CC
                rts                   
Offset_0x023306:
                dc.l    $000186A0
;Offset_0x02330A:                
                dc.l    $00002710
Offset_0x02330E:                
                dc.l    $000003E8
Offset_0x023312:                 
                dc.l    $00000064
Offset_0x023316:
                dc.l    $0000000A 
Offset_0x02331A:
                dc.l    $00000001                                  
Offset_0x02331E: 
                lea     Offset_0x02331A(PC), A2 
                moveq   #$00, D6
                bra.s   Offset_0x02332C
Offset_0x023326:                
                lea     Offset_0x023316(PC), A2  
                moveq   #$01, D6
Offset_0x02332C:                
                moveq   #$00, D4 
                lea     Offset_0x023448(PC), A1
Offset_0x023332:                
                moveq   #$00, D2
                move.l  (A2)+, D3
Offset_0x023336:                
                sub.l   D3, D1
                bcs.s   Offset_0x02333E
                addq.w  #1, D2
                bra.s   Offset_0x023336
Offset_0x02333E:                      
                add.l   D3, D1
                tst.w   D2
                beq.s   Offset_0x023348
                move.w  #$0001, D4
Offset_0x023348:
                lsl.w   #6, D2
                move.l  D0, $0004(A6)
                lea     $00(A1, D2), A3
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                addi.l  #$00400000, D0
                dbra    D6, Offset_0x023332
                rts   
Offset_0x02337E:                   
                lea     Offset_0x02330E(PC), A2 
                moveq   #$03, D6
                moveq   #$00, D4
                lea     Offset_0x023448(PC), A1
Offset_0x02338A:                
                moveq   #$00, D2
                move.l  (A2)+, D3
Offset_0x02338E:                
                sub.l   D3, D1
                bcs.s   Offset_0x023396
                addq.w  #1, D2
                bra.s   Offset_0x02338E 
Offset_0x023396:
                add.l   D3, D1
                tst.w   D2
                beq.s   Offset_0x0233A0
                move.w  #$0001, D4                  
Offset_0x0233A0:
                tst.w   D4
                beq.s   Offset_0x0233D0
                lsl.w   #6, D2
                lea     $00(A1, D2), A3                
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
Offset_0x0233CA:                
                dbra    D6, Offset_0x02338A
                rts   
Offset_0x0233D0:
                moveq   #$0F, D5
Offset_0x0233D2:                
                move.l  #$00000000, (A6)
                dbra    D5, Offset_0x0233D2
                bra.s   Offset_0x0233CA              
Offset_0x0233DE:
                move.l  #$7BA00003, D0
                moveq   #$00, D1
                move.b  ($FFFFFE12).w, D1
                lea     Offset_0x023316(PC), A2               
                moveq   #$01, D6
                moveq   #$00, D4
                lea     Offset_0x023748(PC), A1
Offset_0x0233F6:                
                move.l  D0, $0004(A6)
                moveq   #$00, D2
                move.l  (A2)+, D3
Offset_0x0233FE:                
                sub.l   D3, D1
                bcs.s   Offset_0x023406
                addq.w  #$01, D2
                bra.s   Offset_0x0233FE
Offset_0x023406:
                add.l   D3, D1
                tst.w   D2
                beq.s   Offset_0x023410
                move.w  #$0001, D4
Offset_0x023410:
                tst.w   D4
                beq.s   Offset_0x023436
Offset_0x023414:                
                lsl.w   #$05, D2
                lea     $00(A1, D2), A3
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
                move.l  (A3)+, (A6)
Offset_0x02342A:
                addi.l  #$00400000, D0
                dbra    D6, Offset_0x0233F6
                rts
Offset_0x023436:
                tst.w   D6
                beq.s   Offset_0x023414
                moveq   #$07, D5
Offset_0x02343C:                
                move.l  #$00000000, (A6)
                dbra    D5, Offset_0x02343C
                bra.s   Offset_0x02342A                                     
Offset_0x023448:  
                incbin  'data\sprites\bignumbr.dat' 
Offset_0x023748:                
                incbin  'data\sprites\smallnum.dat'             
Offset_0x023888:
                incbin  'data\sprites\debugnum.dat'
J_ModifySpriteAttr_2P_27: ; Offset_0x023B68:
                jmp     ModifySpriteAttr_2P     ; Offset_0x00DC30
                dc.w    $0000                   ; Filler
Debug_Mode: ; Offset_0x023B70: ; Debug Mode Routine                 
                moveq   #$00, D0
                move.b  ($FFFFFE08).w, D0
                move.w  Offset_0x023B7E(PC, D0), D1
                jmp     Offset_0x023B7E(PC, D1)
Offset_0x023B7E:
                dc.w    Offset_0x023B82-Offset_0x023B7E
                dc.w    Offset_0x023BEC-Offset_0x023B7E
Offset_0x023B82:
                addq.b  #$02, ($FFFFFE08).w
                move.w  ($FFFFEECC).w, ($FFFFFEF0).w
                move.w  ($FFFFEEC6).w, ($FFFFFEF2).w
                andi.w  #$07FF, ($FFFFB00C).w
                andi.w  #$07FF, ($FFFFEE04).w
                andi.w  #$07FF, ($FFFFEE0C).w
                move.b  #$00, $001A(A0)
                move.b  #$00, $001C(A0)
                cmpi.b  #$10, ($FFFFF600).w
                bne.s   Offset_0x023BBC
                moveq   #$06, D0
                bra.s   Offset_0x023BC2
Offset_0x023BBC:
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
Offset_0x023BC2:
                lea     (Debug_Index), A2   ;Offset_0x023DBE 
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D6
                cmp.b   ($FFFFFE06).w, D6
                bhi.s   Offset_0x023BDC
                move.b  #$00, ($FFFFFE06).w
Offset_0x023BDC:
                bsr     Offset_0x023D9E
                move.b  #$0C, ($FFFFFE0A).w
                move.b  #$01, ($FFFFFE0B).w
Offset_0x023BEC:
                moveq   #$06, D0
                cmpi.b  #$10, ($FFFFF600).w
                beq.s   Offset_0x023BFC
                moveq   #$00, D0
                move.b  ($FFFFFE10).w, D0
Offset_0x023BFC:
                lea     (Debug_Index), A2 ; Offset_0x023DBE
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D6
                bsr     Offset_0x023C14
                jmp     DisplaySprite           ; (Offset_0x00D3C2)
Offset_0x023C14:
                moveq   #$00, D4
                move.w  #$0001, D1
                move.b  ($FFFFF605).w, D4
                andi.w  #$000F, D4
                bne.s   Offset_0x023C56
                move.b  ($FFFFF604).w, D0
                andi.w  #$000F, D0
                bne.s   Offset_0x023C3E
                move.b  #$0C, ($FFFFFE0A).w
                move.b  #$0F, ($FFFFFE0B).w
                bra     Offset_0x023CBA
Offset_0x023C3E:
                subq.b  #$01, ($FFFFFE0A).w
                bne.s   Offset_0x023C5A
                move.b  #$01, ($FFFFFE0A).w
                addq.b  #$01, ($FFFFFE0B).w
                bne.s   Offset_0x023C56
                move.b  #$FF, ($FFFFFE0B).w
Offset_0x023C56:
                move.b  ($FFFFF604).w, D4
Offset_0x023C5A:
                moveq   #$00, D1
                move.b  ($FFFFFE0B).w, D1
                addq.w  #$01, D1
                swap.w  D1
                asr.l   #$04, D1
                move.l  $000C(A0), D2
                move.l  $0008(A0), D3
                btst    #$00, D4
                beq.s   Offset_0x023C84
                sub.l   D1, D2
                moveq   #$00, D0
                move.w  ($FFFFEECC).w, D0
                swap.w  D0
                cmp.l   D0, D2
                bge.s   Offset_0x023C84
                move.l  D0, D2
Offset_0x023C84:
                btst    #$01, D4
                beq.s   Offset_0x023C9E
                add.l   D1, D2
                moveq   #$00, D0
                move.w  ($FFFFEEC6).w, D0
                addi.w  #$00DF, D0
                swap.w  D0
                cmp.l   D0, D2
                blt.s   Offset_0x023C9E
                move.l  D0, D2
Offset_0x023C9E:
                btst    #$02, D4
                beq.s   Offset_0x023CAA
                sub.l   D1, D3
                bcc.s   Offset_0x023CAA
                moveq   #$00, D3
Offset_0x023CAA:
                btst    #$03, D4
                beq.s   Offset_0x023CB2
                add.l   D1, D3
Offset_0x023CB2:
                move.l  D2, $000C(A0)
                move.l  D3, $0008(A0)
Offset_0x023CBA:
                btst    #$06, ($FFFFF604).w
                beq.s   Offset_0x023CF2
                btst    #$05, ($FFFFF605).w
                beq.s   Offset_0x023CD6
                subq.b  #$01, ($FFFFFE06).w
                bcc.s   Offset_0x023CEE
                add.b   D6, ($FFFFFE06).w
                bra.s   Offset_0x023CEE
Offset_0x023CD6:
                btst    #$06, ($FFFFF605).w
                beq.s   Offset_0x023CF2
                addq.b  #$01, ($FFFFFE06).w
                cmp.b   ($FFFFFE06).w, D6
                bhi.s   Offset_0x023CEE
                move.b  #$00, ($FFFFFE06).w
Offset_0x023CEE:
                bra     Offset_0x023D9E
Offset_0x023CF2:
                btst    #$05, ($FFFFF605).w
                beq.s   Offset_0x023D36
                jsr     SingleObjectLoad        ; (Offset_0x00E772)
                bne.s   Offset_0x023D36
                move.w  $0008(A0), $0008(A1)
                move.w  $000C(A0), $000C(A1)
                move.b  $0004(A0), $0000(A1)
                move.b  $0001(A0), $0001(A1)
                move.b  $0001(A0), $0022(A1)
                andi.b  #$7F, $0022(A1)
                moveq   #$00, D0
                move.b  ($FFFFFE06).w, D0
                lsl.w   #$03, D0
                move.b  $04(A2, D0), $0028(A1)
                rts
Offset_0x023D36:
                btst    #$04, ($FFFFF605).w
                beq.s   Offset_0x023D9C
                moveq   #$00, D0
                move.w  D0, ($FFFFFE08).w
                move.l  #Sonic_Mappings, ($FFFFB004).w ; Offset_0x0614C0
                move.w  #$0780, ($FFFFB002).w
                tst.w   ($FFFFFFD8).w
                beq.s   Offset_0x023D5E
                move.w  #$03C0, ($FFFFB002).w
Offset_0x023D5E:
                move.b  D0, ($FFFFB01C).w
                move.w  D0, $000A(A0)
                move.w  D0, $000E(A0)
                move.w  $0008(A0), ($FFFFB048).w
                move.w  $000C(A0), ($FFFFB04C).w
                move.w  ($FFFFFEF0).w, ($FFFFEECC).w
                move.w  ($FFFFFEF2).w, ($FFFFEEC6).w
                cmpi.b  #$10, ($FFFFF600).w
                bne.s   Offset_0x023D9C
                move.b  #$02, ($FFFFB01C).w
                bset    #$02, ($FFFFB022).w
                bset    #$01, ($FFFFB022).w
Offset_0x023D9C:
                rts
Offset_0x023D9E:
                moveq   #$00, D0
                move.b  ($FFFFFE06).w, D0
                lsl.w   #$03, D0
                move.l  $00(A2, D0), $0004(A0)
                move.w  $06(A2, D0), $0002(A0)
                move.b  $05(A2, D0), $001A(A0)
                bsr     J_ModifySpriteAttr_2P_28 ; Offset_0x02434C
                rts
Debug_Index: ; Offset_0x023DBE:                  
                dc.w    Debug_GHz-Debug_Index   ; Green Hill
                dc.w    Debug_Null-Debug_Index  ; Null
                dc.w    Debug_Null-Debug_Index  ; Wood
                dc.w    Debug_Null-Debug_Index  ; Null
                dc.w    Debug_Mz-Debug_Index    ; Metropolis
                dc.w    Debug_Mz-Debug_Index    ; Metropolis
                dc.w    Debug_Null-Debug_Index  ; Null
                dc.w    Debug_HTz-Debug_Index   ; Hill Top
                dc.w    Debug_HPz-Debug_Index   ; Hidden Palace
                dc.w    Debug_Null-Debug_Index  ; Null
                dc.w    Debug_OOz-Debug_Index   ; Oil Ocean
                dc.w    Debug_DHz-Debug_Index   ; Dust Hill
                dc.w    Debug_CNz-Debug_Index   ; Casino Night
                dc.w    Debug_CPz-Debug_Index   ; Chemical Plant
                dc.w    Debug_Null-Debug_Index  ; Genocide City
                dc.w    Debug_NGHz-Debug_Index  ; Neo Green Hill
                dc.w    Debug_Null-Debug_Index  ; Death Egg
Debug_Null: ; Offset_0x023DE0:  ; Null
                dc.w    $0002
                dc.l    ($25<<$18)|Rings_Mappings              ; Offset_0x00B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; Offset_0x00B6D2
                dc.b    $00, $00, $06, $80
Debug_GHz: ; Offset_0x023DF2:  ; Green Hill
                dc.w    $0012                          
                dc.l    ($25<<$18)|Rings_Mappings              ; Offset_0x00B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; Offset_0x00B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($79<<$18)|Lamp_Post_Mappings          ; Offset_0x013D8E
                dc.b    $01, $00, $04, $7C
                dc.l    ($03<<$18)|Layer_Switch_Mappings       ; Offset_0x0147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($49<<$18)|Waterfall_Mappings          ; Offset_0x015404
                dc.b    $00, $00, $23, $AE
                dc.l    ($49<<$18)|Waterfall_Mappings          ; Offset_0x015404                
                dc.b    $02, $03, $23, $AE
                dc.l    ($49<<$18)|Waterfall_Mappings          ; Offset_0x015404 
                dc.b    $04, $05, $23, $AE
                dc.l    ($18<<$18)|Ghz_Platform_Mappings       ; Offset_0x009078
                dc.b    $01, $00, $40, $00
                dc.l    ($18<<$18)|Ghz_Platform_Mappings       ; Offset_0x009078
                dc.b    $9A, $01, $40, $00
                dc.l    ($36<<$18)|Spike_Mappings              ; Offset_0x00CBA0
                dc.b    $00, $00, $24, $34
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $81, $00, $04, $5C
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $90, $03, $04, $70
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $A0, $06, $04, $5C
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $30, $07, $04, $3C
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $40, $0A, $04, $3C
                dc.l    ($4B<<$18)|Buzz_Bomber_Mappings        ; Offset_0x01EB0E
                dc.b    $00, $00, $03, $E6
                dc.l    ($54<<$18)|Motobug_Mappings            ; Offset_0x01F938
                dc.b    $00, $00, $04, $02
                dc.l    ($53<<$18)|Chopper_Mappings            ; Offset_0x01F696                
                dc.b    $00, $00, $04, $1C
                dc.l    ($4F<<$18)|Dinobot_Mappings            ; Offset_0x01DFCA  ; Out of Pointers
                dc.b    $00, $00, $05, $00
                dc.l    ($52<<$18)|Piranha_Mappings            ; Offset_0x01DE66  ; Out of Pointers
                dc.b    $00, $00, $25, $30
                dc.l    ($50<<$18)|Aquis_Mappings              ; Offset_0x01E4E0  ; Out of Pointers
                dc.b    $00, $00, $25, $70
                dc.l    ($51<<$18)|Aquis_Mappings              ; Offset_0x01E4E0  ; Out of Pointers
                dc.b    $00, $00, $25, $70
                dc.l    ($4D<<$18)|Rhinobot_Mappings           ; Offset_0x01DAEE  ; Out of Pointers
                dc.b    $00, $00, $23, $C4
                dc.l    ($4B<<$18)|Buzz_Bomber_Mappings        ; Offset_0x01EB0E  ; Out of Pointers
                dc.b    $00, $00, $03, $2C
                dc.l    ($4E<<$18)|Crocobot_Mappings           ; Offset_0x01F420  ; Out of Pointers
                dc.b    $00, $00, $23, $00
                dc.l    ($4C<<$18)|Batbot_Mappings             ; Offset_0x01F106  ; Out of Pointers
                dc.b    $00, $00, $23, $50
                dc.l    ($4A<<$18)|Octus_Mappings              ; Offset_0x01EDBC  ; Out of Pointers
                dc.b    $00, $00, $23, $8A
Debug_Mz: ; Offset_0x023ECC:  ; Metropolis
                dc.w    $001C
                dc.l    ($25<<$18)|Rings_Mappings              ; Offset_0x00B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; Offset_0x00B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($79<<$18)|Lamp_Post_Mappings          ; Offset_0x013D8E
                dc.b    $01, $00, $04, $7C
                dc.l    ($03<<$18)|Layer_Switch_Mappings       ; Offset_0x0147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($42<<$18)|Steam_Vent_Mappings         ; Offset_0x01A7FE                 
                dc.b    $01, $07, $60, $00
                dc.l    ($64<<$18)|Piston_Mappings             ; Offset_0x01A9F0
                dc.b    $01, $00, $20, $00
                dc.l    ($64<<$18)|Piston_Mappings             ; Offset_0x01A9F0
                dc.b    $11, $01, $20, $00
                dc.l    ($65<<$18)|Mz_Platform_Mappings        ; Offset_0x01AE2C
                dc.b    $80, $00, $60, $00
                dc.l    ($65<<$18)|Mz_Platform_Mappings        ; Offset_0x01AE2C
                dc.b    $13, $01, $60, $00
                dc.l    ($47<<$18)|Switch_Mappings             ; Offset_0x018E3E
                dc.b    $00, $02, $04, $24
                dc.l    ($2D<<$18)|Automatic_Door_Mappings     ; Offset_0x009E1E
                dc.b    $01, $01, $60, $00
                dc.l    ($66<<$18)|Spring_Wall_Mappings        ; Offset_0x01B084
                dc.b    $01, $00, $86, $80
                dc.l    ($66<<$18)|Spring_Wall_Mappings        ; Offset_0x01B084
                dc.b    $11, $01, $86, $80
                dc.l    ($68<<$18)|Block_Arrow_Mappings        ; Offset_0x01B6DC
                dc.b    $00, $04, $64, $14
                dc.l    ($69<<$18)|Screw_Nut_Mappings          ; Offset_0x01B9A6
                dc.b    $04, $00, $25, $00
                dc.l    ($6A<<$18)|Mz_Platform_Mappings        ; Offset_0x01AE2C
                dc.b    $00, $01, $60, $00
                dc.l    ($6B<<$18)|Mz_Platform_Mappings        ; Offset_0x01AE2C
                dc.b    $01, $01, $60, $00
                dc.l    ($6D<<$18)|Block_Arrow_Mappings        ; Offset_0x01B6DC
                dc.b    $00, $00, $24, $1C
                dc.l    ($6E<<$18)|Machine_Mappings            ; Offset_0x01C464
                dc.b    $00, $00, $60, $00
                dc.l    ($6E<<$18)|Machine_Mappings            ; Offset_0x01C464
                dc.b    $10, $01, $60, $00
                dc.l    ($6E<<$18)|Machine_Mappings            ; Offset_0x01C464
                dc.b    $20, $02, $60, $00
                dc.l    ($6F<<$18)|Parallelogram_Elevator_Mappings ; Offset_0x01C7BE
                dc.b    $00, $00, $65, $3F
                dc.l    ($70<<$18)|Rotating_Gears_Mappings     ; Offset_0x01CA16
                dc.b    $10, $00, $E3, $78
                dc.l    ($71<<$18)|Lava_Bubble_Mappings        ; Offset_0x009BBE
                dc.b    $22, $05, $45, $36
                dc.l    ($1C<<$18)|Offset_0x009B9A
                dc.b    $00, $00, $43, $FD
                dc.l    ($1C<<$18)|Offset_0x009B9A
                dc.b    $01, $01, $43, $FD
                dc.l    ($1C<<$18)|Offset_0x009B9A
                dc.b    $03, $02, $23, $FD
                dc.l    ($65<<$18)|Mz_Platform_Mappings        ; Offset_0x01AE2C
                dc.b    $B0, $00, $60, $00
Debug_HTz: ; Offset_0x023FAE:  ; Hill Top
                dc.w    $0019
                dc.l    ($25<<$18)|Rings_Mappings              ; Offset_0x00B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; Offset_0x00B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($79<<$18)|Lamp_Post_Mappings          ; Offset_0x013D8E
                dc.b    $01, $00, $04, $7C
                dc.l    ($03<<$18)|Layer_Switch_Mappings       ; Offset_0x0147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($18<<$18)|Ghz_Platform_Mappings       ; Offset_0x009078                    
                dc.b    $01, $00, $40, $00
                dc.l    ($18<<$18)|Ghz_Platform_Mappings       ; Offset_0x009078  
                dc.b    $9A, $01, $40, $00
                dc.l    ($36<<$18)|Spike_Mappings              ; Offset_0x00CBA0
                dc.b    $00, $00, $24, $34
                dc.l    ($14<<$18)|See_Saw_Mappings            ; Offset_0x015F54
                dc.b    $00, $00, $03, $C6
                dc.l    ($2D<<$18)|Automatic_Door_Mappings     ; Offset_0x009E1E
                dc.b    $00, $00, $24, $26
                dc.l    ($2F<<$18)|Breakable_Floor_Mappings    ; Offset_0x01786A
                dc.b    $00, $00, $C0, $00
                dc.l    ($20<<$18)|Fireball_Mappings           ; Offset_0x0173D0
                dc.b    $44, $02, $84, $16                   
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $81, $00, $04, $5C                  
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $90, $03, $04, $70                  
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $A0, $06, $04, $5C                     
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $30, $07, $04, $3C                    
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $40, $0A, $04, $3C
                dc.l    ($16<<$18)|Teleferics_Mappings         ; Offset_0x01611E
                dc.b    $00, $00, $43, $E6
                dc.l    ($1C<<$18)|Teleferics_Mappings         ; Offset_0x01611E
                dc.b    $04, $03, $43, $E6
                dc.l    ($1C<<$18)|Teleferics_Mappings         ; Offset_0x01611E
                dc.b    $05, $04, $43, $E6
                dc.l    ($1C<<$18)|Offset_0x009B3A
                dc.b    $07, $00, $40, $00
                dc.l    ($1C<<$18)|Offset_0x009B3A
                dc.b    $08, $01, $40, $00
                dc.l    ($32<<$18)|Rock_Mappings               ; Offset_0x0179C2
                dc.b    $00, $00, $43, $B2
                dc.l    ($31<<$18)|Lava_Attributes_Mappings    ; Offset_0x015612
                dc.b    $00, $00, $86, $80
                dc.l    ($31<<$18)|Lava_Attributes_Mappings    ; Offset_0x015612
                dc.b    $01, $01, $86, $80
                dc.l    ($31<<$18)|Lava_Attributes_Mappings    ; Offset_0x015612
                dc.b    $02, $02, $86, $80
Debug_HPz: ; Offset_0x024078:  ; Hidden Palace
                dc.w    $0008
                dc.l    ($25<<$18)|Rings_Mappings              ; Offset_0x00B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; Offset_0x00B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($71<<$18)|Hpz_Orbs_Mappings           ; Offset_0x009AFA
                dc.b    $11, $03, $E3, $5A
                dc.l    ($13<<$18)|Hpz_Waterfalls_Mappings     ; Offset_0x014CF4
                dc.b    $04, $04, $E3, $15
                dc.l    ($1A<<$18)|HPz_Collapsing_Platforms_Mappings ; Offset_0x009858
                dc.b    $00, $00, $43, $4A
                dc.l    ($03<<$18)|Layer_Switch_Mappings       ; Offset_0x0147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($4F<<$18)|Dinobot_Mappings            ; Offset_0x01DFCA  
                dc.b    $00, $00, $05, $00
                dc.l    ($4C<<$18)|Batbot_Mappings             ; Offset_0x01F106  
                dc.b    $00, $00, $25, $30
                dc.l    ($52<<$18)|Piranha_Mappings            ; Offset_0x01DE66  ; Out of Pointers
                dc.b    $00, $00, $25, $30
                dc.l    ($50<<$18)|Aquis_Mappings              ; Offset_0x01E4E0  ; Out of Pointers
                dc.b    $00, $00, $25, $70
                dc.l    ($51<<$18)|Aquis_Mappings              ; Offset_0x01E4E0  ; Out of Pointers
                dc.b    $00, $00, $25, $70                 
                dc.l    ($4D<<$18)|Rhinobot_Mappings           ; Offset_0x01DAEE  ; Out of Pointers
                dc.b    $00, $00, $23, $C4                   
                dc.l    ($4B<<$18)|Buzz_Bomber_Mappings        ; Offset_0x01EB0E  ; Out of Pointers
                dc.b    $00, $00, $03, $2C                  
                dc.l    ($4E<<$18)|Crocobot_Mappings           ; Offset_0x01F420  ; Out of Pointers
                dc.b    $00, $00, $23, $00                  
                dc.l    ($4A<<$18)|Octus_Mappings              ; Offset_0x01EDBC  ; Out of Pointers
                dc.b    $00, $00, $23, $8A
Debug_OOz: ; Offset_0x0240F2:  ; Oil Ocean
                dc.w    $0010
                dc.l    ($25<<$18)|Rings_Mappings              ; Offset_0x00B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; Offset_0x00B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($33<<$18)|Touch_Booster_Mappings      ; Offset_0x017EE2
                dc.b    $01, $00, $63, $2C
                dc.l    ($43<<$18)|Giant_Spikeball_Mappings    ; Offset_0x01808E
                dc.b    $00, $00, $C3, $0C
                dc.l    ($19<<$18)|Elevator_Mappings           ; Offset_0x016412
                dc.b    $23, $02, $63, $00
                dc.l    ($45<<$18)|Spring_Push_Boost_Mappings  ; Offset_0x0185C2
                dc.b    $02, $00, $43, $C5
                dc.l    ($45<<$18)|Spring_Push_Boost_Mappings  ; Offset_0x0185C2
                dc.b    $12, $0A, $43, $C5
                dc.l    ($46<<$18)|Spring_Ball_Mappings        ; Offset_0x018CFA
                dc.b    $00, $01, $63, $54 
                dc.l    ($47<<$18)|Switch_Mappings             ; Offset_0x018E3E
                dc.b    $00, $02, $04, $24
                dc.l    ($15<<$18)|Swing_Platforms_Mappings    ; Offset_0x008AD8
                dc.b    $88, $01, $43, $E3
                dc.l    ($3D<<$18)|Break_Boost_Mappings        ; Offset_0x01916E
                dc.b    $00, $00, $63, $32
                dc.l    ($48<<$18)|Cannon_Mappings             ; Offset_0x0194CA
                dc.b    $80, $00, $63, $68
                dc.l    ($48<<$18)|Cannon_Mappings             ; Offset_0x0194CA
                dc.b    $81, $01, $63, $68
                dc.l    ($48<<$18)|Cannon_Mappings             ; Offset_0x0194CA
                dc.b    $82, $02, $63, $68
                dc.l    ($48<<$18)|Cannon_Mappings             ; Offset_0x0194CA
                dc.b    $83, $03, $63, $68
                dc.l    ($1F<<$18)|OOz_Collapsing_Platforms_Mappings ; Offset_0x009902
                dc.b    $00, $00, $63, $9D
                dc.l    ($1C<<$18)|Offset_0x009B6A                              ; Out of Pointers
                dc.b    $0A, $00, $43, $46
                dc.l    ($1C<<$18)|Offset_0x009B6A                              ; Out of Pointers
                dc.b    $0B, $01, $43, $46
                dc.l    ($1C<<$18)|Offset_0x009B6A                              ; Out of Pointers
                dc.b    $0C, $02, $43, $46
                dc.l    ($1C<<$18)|Offset_0x009B6A                              ; Out of Pointers
                dc.b    $0D, $03, $43, $46
Debug_DHz: ; Offset_0x024194:  ; Dust Hill
                dc.w    $0010
                dc.l    ($25<<$18)|Rings_Mappings              ; Offset_0x00B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; Offset_0x00B6D2
                dc.b    $00, $00, $06, $80
                dc.l    ($15<<$18)|Dhz_Swing_Platforms_Mappings ; Offset_0x008B46
                dc.b    $48, $02, $00, $00
                dc.l    ($1F<<$18)|Dhz_Collapsing_Platforms_Mappings ; Offset_0x009942
                dc.b    $00, $00, $63, $F4
                dc.l    ($73<<$18)|Rotating_Rings_Mappings     ; Offset_0x01CE1C
                dc.b    $F5, $00, $26, $BC
                dc.l    ($6A<<$18)|Rotating_Boxes_Mappings     ; Offset_0x01BCB0
                dc.b    $18, $00, $63, $D4
                dc.l    ($2A<<$18)|Up_Down_Pillar_Mappings     ; Offset_0x009CAE
                dc.b    $00, $00, $40, $00
                dc.l    ($36<<$18)|Spike_Mappings              ; Offset_0x00CBA0
                dc.b    $00, $00, $24, $34
                dc.l    ($36<<$18)|Spike_Mappings              ; Offset_0x00CBA0
                dc.b    $40, $04, $24, $34
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $81, $00, $04, $5C
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $90, $03, $04, $70
                dc.l    ($40<<$18)|Diagonal_Spring_Mappings    ; Offset_0x01A58A
                dc.b    $01, $00, $04, $40
                dc.l    ($74<<$18)|Invisible_Block_Mappings    ; Offset_0x0156B2
                dc.b    $11, $00, $86, $80
                dc.l    ($75<<$18)|Spikeball_Chain_Mappings    ; Offset_0x01D00A
                dc.b    $18, $02, $20, $00
                dc.l    ($76<<$18)|Platform_Spikes_Mappings    ; Offset_0x01D1BA
                dc.b    $00, $00, $00, $00
                dc.l    ($77<<$18)|Dhz_Bridge_Mappings         ; Offset_0x01D2E0
                dc.b    $01, $00, $64, $3C
Debug_CNz: ; Offset_0x024216:  ; Casino Night
                dc.w    $0002
                dc.l    ($25<<$18)|Rings_Mappings              ; Offset_0x00B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; Offset_0x00B6D2
                dc.b    $00, $00, $06, $80
Debug_CPz: ; Offset_0x024228:  ; Chemical Plant
                dc.w    $0013
                dc.l    ($25<<$18)|Rings_Mappings              ; Offset_0x00B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; Offset_0x00B6D2
                dc.b    $07, $00, $06, $80
                dc.l    ($0B<<$18)|Open_Close_Platform_Mappings ; Offset_0x014996
                dc.b    $70, $00, $E3, $B0
                dc.l    ($1B<<$18)|Speed_Booster_Mappings      ; Offset_0x01658A
                dc.b    $00, $00, $E3, $9C
                dc.l    ($1D<<$18)|Worms_Mappings              ; Offset_0x016702
                dc.b    $15, $00, $E4, $3C
                dc.l    ($19<<$18)|Elevator_Mappings           ; Offset_0x016412
                dc.b    $06, $00, $63, $A0
                dc.l    ($2D<<$18)|Automatic_Door_Mappings     ; Offset_0x009E1E
                dc.b    $02, $02, $23, $94
                dc.l    ($32<<$18)|Tunel_Obstacule_Mappings    ; Offset_0x0179F6
                dc.b    $00, $00, $64, $30
                dc.l    ($6B<<$18)|Block_Mappings              ; Offset_0x01BF4A
                dc.b    $10, $00, $64, $18
                dc.l    ($78<<$18)|Block_Mappings              ; Offset_0x01BF4A
                dc.b    $00, $00, $64, $18        
                dc.l    ($7A<<$18)|Platform_Horizontal_Mappings ; Offset_0x01D72C
                dc.b    $00, $00, $E4, $18
                dc.l    ($7B<<$18)|Spring_Tubes_Mappings       ; Offset_0x01D920
                dc.b    $02, $00, $03, $E0
                dc.l    ($03<<$18)|Layer_Switch_Mappings       ; Offset_0x0147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($03<<$18)|Layer_Switch_Mappings       ; Offset_0x0147D0
                dc.b    $0D, $05, $26, $BC
                dc.l    ($36<<$18)|Spike_Mappings              ; Offset_0x00CBA0
                dc.b    $00, $00, $24, $34
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $81, $00, $04, $5C  
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $90, $03, $04, $70                                  
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $A0, $06, $04, $5C       
                dc.l    ($40<<$18)|Diagonal_Spring_Mappings    ; Offset_0x01A58A
                dc.b    $01, $00, $04, $40
Debug_NGHz: ; Offset_0x0242C2:  ; Neo Green Hill
                dc.w    $0011
                dc.l    ($25<<$18)|Rings_Mappings              ; Offset_0x00B036
                dc.b    $00, $00, $26, $BC
                dc.l    ($26<<$18)|Monitors_Mappings           ; Offset_0x00B6D2
                dc.b    $00, $00, $06, $80
                dc.l    ($15<<$18)|Nghz_Swing_Platforms_Mappings ; Offset_0x008B0E
                dc.b    $88, $02, $00, $00
                dc.l    ($18<<$18)|Nghz_Platform_Mappings      ; Offset_0x0090D0
                dc.b    $01, $00, $40, $00
                dc.l    ($18<<$18)|Nghz_Platform_Mappings      ; Offset_0x0090D0
                dc.b    $9A, $01, $40, $00
                dc.l    ($22<<$18)|Arrow_Shooter_Mappings     ; Offset_0x0197C6
                dc.b    $00, $01, $04, $17
                dc.l    ($23<<$18)|Pillar_Mappings             ; Offset_0x0199AA
                dc.b    $00, $00, $20, $00
                dc.l    ($2B<<$18)|Breakable_Pillar_Mappings   ; Offset_0x019C30
                dc.b    $00, $00, $20, $00
                dc.l    ($2C<<$18)|Lava_Attributes_Mappings    ; Offset_0x015612
                dc.b    $00, $00, $86, $80
                dc.l    ($2C<<$18)|Lava_Attributes_Mappings    ; Offset_0x015612
                dc.b    $01, $01, $86, $80
                dc.l    ($2C<<$18)|Lava_Attributes_Mappings    ; Offset_0x015612
                dc.b    $02, $02, $86, $80
                dc.l    ($40<<$18)|Diagonal_Spring_Mappings    ; Offset_0x01A58A
                dc.b    $01, $00, $04, $40                  
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70                  
                dc.b    $81, $00, $04, $5C                  
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70                  
                dc.b    $90, $03, $04, $70    
                dc.l    ($41<<$18)|Spring_Mappings             ; Offset_0x00EF70
                dc.b    $A0, $06, $04, $5C    
                dc.l    ($03<<$18)|Layer_Switch_Mappings       ; Offset_0x0147D0
                dc.b    $09, $01, $26, $BC
                dc.l    ($36<<$18)|Spike_Mappings              ; Offset_0x00CBA0
                dc.b    $00, $00, $24, $34
J_ModifySpriteAttr_2P_28: ; Offset_0x02434C:
                jmp     ModifySpriteAttr_2P     ; (Offset_0x00DC30)
                dc.w    $0000                   ; Filler
TilesMainTable: ; Offset_0x024354:  
                dc.l    ($04<<$18)|Green_Hill_8x8_Tiles   ; Offset_0x081C00 $04 = Sprite Pointer in 0x024420 
                dc.l    ($05<<$18)|Green_Hill_16x16_Map   ; Offset_0x080C60 $05 = Sprite Pointer in 0x024420
                dc.l    ($04<<$18)|Green_Hill_128x128_Map ; Offset_0x08692E $04 = Palette Pointer in 0x00294E
                dc.l    ($06<<$18)|Green_Hill_8x8_Tiles   ; Offset_0x081C00 $06 = Sprite Pointer in 0x024420 
                dc.l    ($07<<$18)|Green_Hill_16x16_Map   ; Offset_0x080C60 $07 = Sprite Pointer in 0x024420
                dc.l    ($05<<$18)|Green_Hill_128x128_Map ; Offset_0x08692E $05 = Palette Pointer in 0x00294E
                dc.l    ($08<<$18)|Wood_8x8_Tiles         ; Offset_0x08AB2E $08 = Sprite Pointer in 0x024420 
                dc.l    ($09<<$18)|Wood_16x16_Map         ; Offset_0x089B8E $09 = Sprite Pointer in 0x024420
                dc.l    ($06<<$18)|Wood_128x128_Map       ; Offset_0x08E826 $06 = Palette Pointer in 0x00294E
                dc.l    ($0A<<$18)|Green_Hill_8x8_Tiles   ; Offset_0x081C00 $0A = Sprite Pointer in 0x024420 
                dc.l    ($0B<<$18)|Green_Hill_16x16_Map   ; Offset_0x080C60 $0B = Sprite Pointer in 0x024420
                dc.l    ($07<<$18)|Green_Hill_128x128_Map ; Offset_0x08692E $07 = Palette Pointer in 0x00294E
                dc.l    ($0C<<$18)|Metropolis_8x8_Tiles   ; Offset_0x091716 $0C = Sprite Pointer in 0x024420 
                dc.l    ($0D<<$18)|Metropolis_16x16_Map   ; Offset_0x090456 $0D = Sprite Pointer in 0x024420
                dc.l    ($08<<$18)|Metropolis_128x128_Map ; Offset_0x094C56 $08 = Palette Pointer in 0x00294E
                dc.l    ($0C<<$18)|Metropolis_8x8_Tiles   ; Offset_0x091716 $0C = Sprite Pointer in 0x024420 
                dc.l    ($0D<<$18)|Metropolis_16x16_Map   ; Offset_0x090456 $0D = Sprite Pointer in 0x024420
                dc.l    ($08<<$18)|Metropolis_128x128_Map ; Offset_0x094C56 $08 = Palette Pointer in 0x00294E
                dc.l    ($10<<$18)|Green_Hill_8x8_Tiles   ; Offset_0x081C00 $10 = Sprite Pointer in 0x024420 
                dc.l    ($11<<$18)|Green_Hill_16x16_Map   ; Offset_0x080C60 $11 = Sprite Pointer in 0x024420
                dc.l    ($0A<<$18)|Green_Hill_128x128_Map ; Offset_0x08692E $0A = Palette Pointer in 0x00294E
                dc.l    ($12<<$18)|Green_Hill_8x8_Tiles   ; Offset_0x081C00 $12 = Sprite Pointer in 0x024420 
                dc.l    ($13<<$18)|Green_Hill_16x16_Map   ; Offset_0x080C60 $13 = Sprite Pointer in 0x024420
                dc.l    ($0B<<$18)|Green_Hill_128x128_Map ; Offset_0x08692E $0B = Palette Pointer in 0x00294E
                dc.l    ($14<<$18)|Hidden_Palace_8x8_Tiles   ; Offset_0x098B76 $14 = Sprite Pointer in 0x024420 
                dc.l    ($15<<$18)|Hidden_Palace_16x16_Map   ; Offset_0x097596 $15 = Sprite Pointer in 0x024420
                dc.l    ($0C<<$18)|Hidden_Palace_128x128_Map ; Offset_0x09B9F8 $0C = Palette Pointer in 0x00294E
                dc.l    ($16<<$18)|Green_Hill_8x8_Tiles   ; Offset_0x081C00 $16 = Sprite Pointer in 0x024420 
                dc.l    ($17<<$18)|Green_Hill_16x16_Map   ; Offset_0x080C60 $17 = Sprite Pointer in 0x024420
                dc.l    ($0D<<$18)|Green_Hill_128x128_Map ; Offset_0x08692E $0D = Palette Pointer in 0x00294E
                dc.l    ($18<<$18)|Oil_Ocean_8x8_Tiles    ; Offset_0x09ED58 $18 = Sprite Pointer in 0x024420 
                dc.l    ($19<<$18)|Oil_Ocean_16x16_Map    ; Offset_0x09D778 $19 = Sprite Pointer in 0x024420
                dc.l    ($0E<<$18)|Oil_Ocean_128x128_Map  ; Offset_0x0A1A58 $0E = Palette Pointer in 0x00294E
                dc.l    ($1A<<$18)|Dust_Hill_8x8_Tiles    ; Offset_0x0A5248 $1A = Sprite Pointer in 0x024420 
                dc.l    ($1B<<$18)|Dust_Hill_16x16_Map    ; Offset_0x0A3F88 $1B = Sprite Pointer in 0x024420
                dc.l    ($0F<<$18)|Dust_Hill_128x128_Map  ; Offset_0x0A8B6A $0F = Palette Pointer in 0x00294E
                dc.l    ($1C<<$18)|Casino_Night_8x8_Tiles   ; Offset_0x0ABF2A $1C = Sprite Pointer in 0x024420 
                dc.l    ($1D<<$18)|Casino_Night_16x16_Map   ; Offset_0x0AB5CA $1D = Sprite Pointer in 0x024420
                dc.l    ($10<<$18)|Casino_Night_128x128_Map ; Offset_0x0AF026 $10 = Palette Pointer in 0x00294E
                dc.l    ($1E<<$18)|Chemical_Plant_8x8_Tiles   ; Offset_0x0B2506 $1E = Sprite Pointer in 0x024420 
                dc.l    ($1F<<$18)|Chemical_Plant_16x16_Map   ; Offset_0x0B0F26 $1F = Sprite Pointer in 0x024420
                dc.l    ($11<<$18)|Chemical_Plant_128x128_Map ; Offset_0x0B6058 $11 = Palette Pointer in 0x00294E
                dc.l    ($20<<$18)|Green_Hill_8x8_Tiles   ; Offset_0x081C00 $20 = Sprite Pointer in 0x024420 
                dc.l    ($21<<$18)|Green_Hill_16x16_Map   ; Offset_0x080C60 $21 = Sprite Pointer in 0x024420
                dc.l    ($12<<$18)|Green_Hill_128x128_Map ; Offset_0x08692E $12 = Palette Pointer in 0x00294E
                dc.l    ($22<<$18)|Neo_Green_Hill_8x8_Tiles   ; Offset_0x0B9E58 $22 = Sprite Pointer in 0x024420 
                dc.l    ($23<<$18)|Neo_Green_Hill_16x16_Map   ; Offset_0x0B8558 $23 = Sprite Pointer in 0x024420
                dc.l    ($13<<$18)|Neo_Green_Hill_128x128_Map ; Offset_0x0BF568 $13 = Palette Pointer in 0x00294E
                dc.l    ($24<<$18)|Green_Hill_8x8_Tiles   ; Offset_0x081C00 $24 = Sprite Pointer in 0x024420 
                dc.l    ($25<<$18)|Green_Hill_16x16_Map   ; Offset_0x080C60 $25 = Sprite Pointer in 0x024420
                dc.l    ($14<<$18)|Green_Hill_128x128_Map ; Offset_0x08692E $14 = Palette Pointer in 0x00294E
ArtLoadCues: ; Offset_0x024420:
                dc.w    Standard_Sprites_1-ArtLoadCues ; $00
                dc.w    Standard_Sprites_2-ArtLoadCues ; $01
                dc.w    Standard_Sprites_3-ArtLoadCues ; $02                
                dc.w    Standard_Sprites_4-ArtLoadCues ; $03
                dc.w    Green_Hill_Sprites_1-ArtLoadCues ; $04 - Green Hill
                dc.w    Green_Hill_Sprites_2-ArtLoadCues ; $05 - Green Hill                
                dc.w    Wood_Sprites_1-ArtLoadCues ; $06 
                dc.w    Wood_Sprites_1-ArtLoadCues ; $07 
                dc.w    Wood_Sprites_1-ArtLoadCues ; $08 
                dc.w    Wood_Sprites_2-ArtLoadCues ; $09  
                dc.w    Metropolis_Sprites_1-ArtLoadCues ; $0A  
                dc.w    Metropolis_Sprites_1-ArtLoadCues ; $0B
                dc.w    Metropolis_Sprites_1-ArtLoadCues ; $0C
                dc.w    Metropolis_Sprites_2-ArtLoadCues ; $0D                
                dc.w    Hill_Top_Sprites_1-ArtLoadCues ; $0E
                dc.w    Hill_Top_Sprites_1-ArtLoadCues ; $0F 
                dc.w    Hill_Top_Sprites_1-ArtLoadCues ; $10
                dc.w    Hill_Top_Sprites_1-ArtLoadCues ; $11
                dc.w    Hill_Top_Sprites_1-ArtLoadCues ; $12                
                dc.w    Hill_Top_Sprites_2-ArtLoadCues ; $13
                dc.w    Hidden_Palace_Sprites_1-ArtLoadCues ; $14 
                dc.w    Hidden_Palace_Sprites_2-ArtLoadCues ; $15                
                dc.w    Oil_Ocean_Sprites_1-ArtLoadCues ; $16 
                dc.w    Oil_Ocean_Sprites_1-ArtLoadCues ; $17 
                dc.w    Oil_Ocean_Sprites_1-ArtLoadCues ; $18 
                dc.w    Oil_Ocean_Sprites_2-ArtLoadCues ; $19  
                dc.w    Dust_Hill_Sprites_1-ArtLoadCues ; $1A  
                dc.w    Dust_Hill_Sprites_2-ArtLoadCues ; $1B
                dc.w    Casino_Night_Sprites_1-ArtLoadCues ; $1C
                dc.w    Casino_Night_Sprites_2-ArtLoadCues ; $1D                
                dc.w    Chemical_Plant_Sprites_1-ArtLoadCues ; $1E
                dc.w    Chemical_Plant_Sprites_2-ArtLoadCues ; $1F 
                dc.w    Neo_Green_Hill_Sprites_1-ArtLoadCues ; $20
                dc.w    Neo_Green_Hill_Sprites_1-ArtLoadCues ; $21
                dc.w    Neo_Green_Hill_Sprites_1-ArtLoadCues ; $22                
                dc.w    Neo_Green_Hill_Sprites_2-ArtLoadCues ; $23
                dc.w    End_Level_Results_Sprites-ArtLoadCues ; $24 
                dc.w    End_Level_Results_Sprites-ArtLoadCues ; $25                
                dc.w    End_Level_Results_Sprites-ArtLoadCues ; $26 
                dc.w    End_Level_Sprites-ArtLoadCues ; $27 
                dc.w    Green_Hill_Boss-ArtLoadCues ; $28 
                dc.w    Green_Hill_Boss-ArtLoadCues ; $29  
                dc.w    Green_Hill_Boss-ArtLoadCues ; $2A  
                dc.w    Green_Hill_Boss-ArtLoadCues ; $2B
                dc.w    Green_Hill_Boss-ArtLoadCues ; $2C          
Standard_Sprites_1:  
Offset_0x02447A: 
                dc.w    (((Offset_0x02449A-Offset_0x02447A-$02)/$06)-$01)
                dc.l    Lamp_Post               ; Offset_0x079278: 
                dc.w    $8F80 
                dc.l    Head_up_display_Sprites ; Offset_0x078A12
                dc.w    $D940   
                dc.l    Head_up_display_Sonic   ; Offset_0x078B1A 
                dc.w    $FA80  
                dc.l    Rings                   ; Offset_0x078C30: 
                dc.w    $D780  
                dc.l    Enemy_Points_Spr        ; Offset_0x07919E:  
                dc.w    $9580                
Offset_0x02449A:  
Standard_Sprites_2:           
                dc.w    (((Offset_0x0244AE-Offset_0x02449A-$02)/$06)-$01)
                dc.l    Monitors                ; Offset_0x078D24
                dc.w    $D000
                dc.l    Shield                  ; Offset_0x06DF8E 
                dc.w    $97C0
                dc.l    Invencibility_Stars     ; Offset_0x06E114
                dc.w    $9BC0
Offset_0x0244AE:   
Standard_Sprites_3:           
                dc.w    (((Offset_0x0244C2-Offset_0x0244AE-$02)/$06)-$01)
                dc.l    Explosion               ; Offset_0x07F012
                dc.w    $B400  
                dc.l    Rabbit                  ; Offset_0x080348
                dc.w    $B000 
                dc.l    White_Bird              ; Offset_0x0804A0 
                dc.w    $B240
Standard_Sprites_4:  
Offset_0x0244C2:
                dc.w    (((Offset_0x0244CA-Offset_0x0244C2-$02)/$06)-$01)
                dc.l    Game_Time_Over          ; Offset_0x07F678
                dc.w    $ABC0
Green_Hill_Sprites_1:   
Offset_0x0244CA:
                dc.w    (((Offset_0x0244FC-Offset_0x0244CA-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Green_Hill_8x8_Tiles    ; Offset_0x081C00
                dc.w    $0000                    
                dc.l    Ghz_Waterfall           ; Offset_0x073B3C
                dc.w    $75C0 
                dc.l    Ghz_Bridge              ; Offset_0x073D90  
                dc.w    $78C0    
                dc.l    FireBall                ; Offset_0x0739C6  
                dc.w    $79C0 
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680   
                dc.l    Diagonal_Spring         ; Offset_0x07883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00
Green_Hill_Sprites_2:                  
Offset_0x0244FC: 
                dc.w    (((Offset_0x024510-Offset_0x0244FC-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Ghz_Buzzer_Bomber       ; Offset_0x07A4BC
                dc.w    $7CC0 
                dc.l    Ghz_Motobug             ; Offset_0x07C514
                dc.w    $8040   
                dc.l    Ghz_Chopper             ; Offset_0x07CA92
                dc.w    $8380    
Wood_Sprites_1:   
Offset_0x024510:
                dc.w    (((Offset_0x024518-Offset_0x024510-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Wood_8x8_Tiles          ; Offset_0x08AB2E
                dc.w    $0000     
Wood_Sprites_2: 
Offset_0x024518: 
                dc.w    (((Offset_0x024532-Offset_0x024518-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680 
                dc.l    Diagonal_Spring         ; Offset_0x07883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00                   
Metropolis_Sprites_1:   
Offset_0x024532:
                dc.w    (((Offset_0x02456A-Offset_0x024532-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Metropolis_8x8_Tiles    ; Offset_0x091716
                dc.w    $0000 
                dc.l    Mz_Teleport             ; Offset_0x075382
                dc.w    $6780   
                dc.l    Mz_Rotating_Gear        ; Offset_0x07461C
                dc.w    $6F00 
                dc.l    Mz_Machine_Ball         ; Offset_0x074A74
                dc.w    $7E00   
                dc.l    Offset_0x074EE2
                dc.w    $7F20  
                dc.l    Offset_0x0751FE
                dc.w    $7FA0
                dc.l    Mz_Steam                ; Offset_0x074BEA  
                dc.w    $80A0
                dc.l    Mz_Block                ; Offset_0x074B1C  
                dc.w    $8280
                dc.l    Mz_Harpoon              ; Offset_0x074CF4
                dc.w    $8380
Offset_0x02456A: 
Metropolis_Sprites_2: 
                dc.w    (((Offset_0x0245A2-Offset_0x02456A-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Switch                  ; Offset_0x078580
                dc.w    $8480     
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680 
                dc.l    Diagonal_Spring         ; Offset_0x07883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00   
                dc.l    Mz_Screw_Nut            ; Offset_0x074DB6
                dc.w    $A000
                dc.l    Mz_Lava_Bubble          ; Offset_0x074E2C
                dc.w    $A6C0 
                dc.l    Mz_Parallelogram_Elevator  ; Offset_0x074F52    
                dc.w    $A7E0  
                dc.l    Mz_Mini_Gear            ; Offset_0x0752A0
                dc.w    $ABE0       
Hill_Top_Sprites_1:   
Offset_0x0245A2:
                dc.w    (((Offset_0x0245E0-Offset_0x0245A2-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Green_Hill_8x8_Tiles    ; Offset_0x081C00
                dc.w    $0000 
                dc.l    Hill_Top_8x8_Tiles      ; Offset_0x085200
                dc.w    $3F80
                dc.l    FireBall                ; Offset_0x0739C6  
                dc.w    $73C0   
                dc.l    Htz_Rock                ; Offset_0x07447A
                dc.w    $7640   
                dc.l    Htz_See_saw             ; Offset_0x0741D4
                dc.w    $78C0 
                dc.l    Htz_See_saw_badnick     ; Offset_0x0745B0 
                dc.w    $7BC0 
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680                
                dc.l    Diagonal_Spring         ; Offset_0x07883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00 
Hill_Top_Sprites_2:                   
Offset_0x0245E0: 
                dc.w    (((Offset_0x0245F4-Offset_0x0245E0-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Htz_Teleferic           ; Offset_0x073E68 
                dc.w    $7CC0 
                dc.l    Htz_Lava_Bubble         ; Offset_0x073C42
                dc.w    $82C0 
                dc.l    Htz_Automatic_Door      ; Offset_0x07415C 
                dc.w    $84C0 
Hidden_Palace_Sprites_1:   
Offset_0x0245F4:
                dc.w    (((Offset_0x024626-Offset_0x0245F4-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Hidden_Palace_8x8_Tiles ; Offset_0x098B76
                dc.w    $0000 
                dc.l    Hpz_Bridge              ; Offset_0x07538E 
                dc.w    $6000 
                dc.l    Hpz_Waterfall           ; Offset_0x075506
                dc.w    $62A0 
                dc.l    Hpz_Platform            ; Offset_0x075ADA
                dc.w    $6940     
                dc.l    Hpz_Orbs_Comp           ; Offset_0x075B9A   
                dc.w    $6B40 
                dc.l    Hpz_Unknow_Platform     ; Offset_0x075DD6   
                dc.w    $6F80 
                dc.l    Hpz_Emerald             ; Offset_0x075868
                dc.w    $7240  
                dc.l    Water_Surface           ; Offset_0x0777D2  
                dc.w    $8000  
Hidden_Palace_Sprites_2:                                        
Offset_0x024626: 
                dc.w   (((Offset_0x02463A-Offset_0x024626-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Hpz_Dinobot             ; Offset_0x07B114 
                dc.w    $A000 
                dc.l    Hpz_Batbot              ; Offset_0x07A6A2
                dc.w    $A600                  
Offset_0x02463A: ; Not all sprites are loaded in to VRam               
                dc.l    Hpz_Crocobot            ; Offset_0x07A11A ; Left Over 
                dc.w    $6000 
                dc.l    Ghz_Buzzer_Bomber       ; Offset_0x07A4BC
                dc.w    $6580  
                dc.l    Hpz_Batbot              ; Offset_0x07A6A2
                dc.w    $6A00  
                dc.l    Hpz_Rhinobot            ; Offset_0x07AD18 ; Left Over
                dc.w    $7880 
                dc.l    Hpz_Dinobot             ; Offset_0x07B114 
                dc.w    $A000 
                dc.l    Hpz_Piranha             ; Offset_0x07B4EA ; Left Over
                dc.w    $A600   
Oil_Ocean_Sprites_1:   
Offset_0x024658:
                dc.w    (((Offset_0x024684-Offset_0x024658-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Oil_Ocean_8x8_Tiles     ; Offset_0x09ED58
                dc.w    $0000
                dc.l    OOz_Elevator            ; Offset_0x075F70
                dc.w    $6000   
                dc.l    OOz_Giant_Spikeball     ; Offset_0x076060
                dc.w    $6180 
                dc.l    OOz_Touch_Boost_Up      ; Offset_0x076258
                dc.w    $6580  
                dc.l    OOz_Break_Boost         ; Offset_0x0762EE
                dc.w    $6640 
                dc.l    OOz_Oil                 ; Offset_0x07635A
                dc.w    $66C0    
                dc.l    OOz_Tube_Oil            ; Offset_0x0764D6
                dc.w    $68C0                  
Oil_Ocean_Sprites_2:    
Offset_0x024684: 
                dc.w    (((Offset_0x0246C2-Offset_0x024684-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    OOz_Ball                ; Offset_0x076602 
                dc.w    $6A80 
                dc.l    OOz_Cannon              ; Offset_0x076722
                dc.w    $6D00 
                dc.l    OOz_Collapsing_Platform ; Offset_0x076A12
                dc.w    $73A0  
                dc.l    OOz_Spring_Push_Boost   ; Offset_0x076CA6
                dc.w    $78A0       
                dc.l    OOz_Swing_Platform      ; Offset_0x076E68
                dc.w    $7C60 
                dc.l    Switch                  ; Offset_0x078580
                dc.w    $8480   
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680   
                dc.l    Diagonal_Spring         ; Offset_0x07883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00 
Dust_Hill_Sprites_1:   
Offset_0x0246C2:
                dc.w    (((Offset_0x0246E2-Offset_0x0246C2-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Dust_Hill_8x8_Tiles     ; Offset_0x0A5248
                dc.w    $0000 
                dc.l    Dhz_Box                 ; Offset_0x07708A
                dc.w    $7A80  
                dc.l    Dhz_Collapsing_Platform ; Offset_0x0772C8
                dc.w    $7E80     
                dc.l    Dhz_Vines               ; Offset_0x077472
                dc.w    $81C0   
                dc.l    Dhz_Vines_1             ; Offset_0x07756A
                dc.w    $83C0 
Dust_Hill_Sprites_2:  
Offset_0x0246E2:      
                dc.w    (((Offset_0x024708-Offset_0x0246E2-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Dhz_Horizontal_Spikes   ; Offset_0x079A44        
                dc.w    $8580 
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680   
                dc.l    Dhz_Bridge              ; Offset_0x077614
                dc.w    $8780  
                dc.l    Diagonal_Spring_1       ; Offset_0x0798F4
                dc.w    $8800  
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00   
Casino_Night_Sprites_1:   
Offset_0x024708:
                dc.w    (((Offset_0x024716-Offset_0x024708-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Casino_Night_8x8_Tiles  ; Offset_0x0ABF2A
                dc.w    $0000                   
                dc.l    Cnz_Cards               ; Offset_0x0AEF3C
                dc.w    $7A00   
Casino_Night_Sprites_2:  
Offset_0x024716: 
                dc.w    (((Offset_0x024730-Offset_0x024716-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680   
                dc.l    Diagonal_Spring         ; Offset_0x07883E
                dc.w    $8780                
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00                 
Chemical_Plant_Sprites_1:   
Offset_0x024730:
                dc.w    (((Offset_0x02476E-Offset_0x024730-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Chemical_Plant_8x8_Tiles ; Offset_0x0B2506
                dc.w    $0000 
                dc.l    Cpz_Metal_Structure     ; Offset_0x077A1C  
                dc.w    $6E60
                dc.l    Cpz_Automatic_Door      ; Offset_0x077C66
                dc.w    $7280 
                dc.l    Cpz_Speed_Booster       ; Offset_0x077942
                dc.w    $7380
                dc.l    Cpz_Elevator            ; Offset_0x077684
                dc.w    $7400  
                dc.l    Cpz_Open_Close_Platform ; Offset_0x077CD2 
                dc.w    $7600  
                dc.l    Cpz_Spring_Tubes        ; Offset_0x078074
                dc.w    $7C00   
                dc.l    Water_Surface           ; Offset_0x0777D2  
                dc.w    $8000
                dc.l    Cpz_Platforms           ; Offset_0x077EB4
                dc.w    $8300 
                dc.l    Offset_0x077C26
                dc.w    $8600 
Chemical_Plant_Sprites_2:      
Offset_0x02476E:
                dc.w    (((Offset_0x024794-Offset_0x02476E-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Air_Bubbles_Numbers     ; Offset_0x079AC0
                dc.w    $A000 
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680  
                dc.l    Cpz_Worms               ; Offset_0x0779AA
                dc.w    $8780  
                dc.l    Diagonal_Spring_1       ; Offset_0x0798F4
                dc.w    $8800  
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00      
Neo_Green_Hill_Sprites_1:   
Offset_0x024794:
                dc.w    (((Offset_0x0247B4-Offset_0x024794-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Neo_Green_Hill_8x8_Tiles ; Offset_0x0B9E58
                dc.w    $0000 
                dc.l    Nghz_Water_Surface      ; Offset_0x078270
                dc.w    $8000   
                dc.l    Nghz_Leaves             ; Offset_0x078356
                dc.w    $8200    
                dc.l    Nghz_Arrow_Shooter      ; Offset_0x0783E2
                dc.w    $82E0  
                dc.l    Nghz_Water_Splash       ; Offset_0x078540
                dc.w    $8500  
Neo_Green_Hill_Sprites_2:                                       
Offset_0x0247B4:
                dc.w    (((Offset_0x0247D4-Offset_0x0247B4-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Air_Bubbles_Numbers     ; Offset_0x079AC0
                dc.w    $A000 
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680   
                dc.l    Diagonal_Spring_1       ; Offset_0x0798F4
                dc.w    $8800   
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00    
End_Level_Results_Sprites:                 
Offset_0x0247D4:  
                dc.w    (((Offset_0x0247DC-Offset_0x0247D4-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Title_Cards             ; Offset_0x07EA04    
                dc.w    $B000   
End_Level_Sprites:                                
Offset_0x0247DC:
                dc.w    (((Offset_0x0247E4-Offset_0x0247DC-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto                  
                dc.l    End_Panel               ; Offset_0x07931E 
                dc.w    $8680
Offset_0x0247E4: ; Not all sprites are loaded in to VRam                   
                dc.l    Hidden_Points           ; Offset_0x07FB5C
                dc.w    $96C0
                dc.l    Big_Ring_Flash          ; Offset_0x07F9E8
                dc.w    $8C40
Green_Hill_Boss:
Offset_0x0247F0:   
                dc.w    (((Offset_0x024804-Offset_0x0247F0-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Robotnik_Ship           ; Offset_0x07CC9E 
                dc.w    $8C00
                dc.l    Ghz_Boss_Car            ; Offset_0x07E124
                dc.w    $9800
                dc.l    Ghz_Boss_Blades         ; Offset_0x07E910
                dc.w    $A800 
Offset_0x024804: ; Not all sprites are loaded in to VRam  
                dc.l    Robotnik_Ship           ; Offset_0x07CC9E 
                dc.w    $8000
                dc.l    Cpz_Boss                ; Offset_0x07D3DA   
                dc.w    $8C00
                dc.l    Ship_Boost              ; Offset_0x07DFC0 
                dc.w    $9A00 
                dc.l    Boss_Smoke              ; Offset_0x07E03E 
                dc.w    $9B00 
                dc.l    Ghz_Boss_Car            ; Offset_0x07E124
                dc.w    $9D00
                dc.l    Ghz_Boss_Blades         ; Offset_0x07E910
                dc.w    $AD00                 
                dc.w    (Diagonal_Spring_1&$FFFF) ; Offset_0x0798F4 ; Left over from previous build
                dc.w    $8800                   
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00  
Offset_0x024838:                
                dc.w    (((Offset_0x024840-Offset_0x024838-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto 
                dc.l    Title_Cards             ; Offset_0x07EA04    
                dc.w    $B000   
Offset_0x024840:  
                dc.w    (((Offset_0x024848-Offset_0x024840-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    End_Panel               ; Offset_0x07931E 
                dc.w    $8680
Offset_0x024848:     
                dc.l    Hidden_Points           ; Offset_0x07FB5C
                dc.w    $96C0
                dc.l    Big_Ring_Flash          ; Offset_0x07F9E8
                dc.w    $8C40
Offset_0x024854:                   
                dc.w    (((Offset_0x024868-Offset_0x024854-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Robotnik_Ship           ; Offset_0x07CC9E 
                dc.w    $8C00
                dc.l    Ghz_Boss_Car            ; Offset_0x07E124
                dc.w    $9800
                dc.l    Ghz_Boss_Blades         ; Offset_0x07E910
                dc.w    $A800 
Offset_0x024868:                  
                dc.l    Robotnik_Ship           ; Offset_0x07CC9E 
                dc.w    $8000
                dc.l    Cpz_Boss                ; Offset_0x07D3DA   
                dc.w    $8C00
                dc.l    Ship_Boost              ; Offset_0x07DFC0 
                dc.w    $9A00 
                dc.l    Boss_Smoke              ; Offset_0x07E03E 
                dc.w    $9B00 
                dc.l    Ghz_Boss_Car            ; Offset_0x07E124
                dc.w    $9D00
                dc.l    Ghz_Boss_Blades         ; Offset_0x07E910
                dc.w    $AD00
                dc.w    (Boss_Smoke&$FFFF)      ; Offset_0x07E03E ; Left over from previous build
                dc.w    $9B00 
                dc.l    Ghz_Boss_Car            ; Offset_0x07E124
                dc.w    $9D00
                dc.l    Ghz_Boss_Blades         ; Offset_0x07E910
                dc.w    $AD00
                dc.l    Dhz_Bridge              ; Offset_0x077614
                dc.w    $8780
                dc.l    (Diagonal_Spring_1-$0188) ; Offset_0x07976C ; Left over from previous build
                dc.w    $8800  
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80 
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00 
Casino_Night_Sprites_Previous_Build_1:                 
Offset_0x0248B4:
                dc.w    (((Offset_0x0248C2-Offset_0x0248B4-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto 
                dc.l    Casino_Night_8x8_Tiles-$07E2 ; Offset_0x0AB748 ; Left over from previous build
                dc.w    $0000
                dc.l    Cnz_Cards-$07E2              ; Offset_0x0AE75A ; Left over from previous build
                dc.w    $7A00 
Casino_Night_Sprites_Previous_Build_2:                   
Offset_0x0248C2:     
                dc.w    (((Offset_0x0248DC-Offset_0x0248C2-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680   
                dc.l    Diagonal_Spring         ; Offset_0x07883E
                dc.w    $8780   
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80 
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00 
Chemical_Plant_Sprites_Previous_Build_1:                  
Offset_0x0248DC:                 
                dc.w    (((Offset_0x02491A-Offset_0x0248DC-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Chemical_Plant_8x8_Tiles-$07E2 ; Offset_0x0B1D24
                dc.w    $0000 
                dc.l    Cpz_Metal_Structure     ; Offset_0x077A1C  
                dc.w    $6E60
                dc.l    Cpz_Automatic_Door      ; Offset_0x077C66
                dc.w    $7280 
                dc.l    Cpz_Speed_Booster       ; Offset_0x077942
                dc.w    $7380
                dc.l    Cpz_Elevator            ; Offset_0x077684
                dc.w    $7400  
                dc.l    Cpz_Open_Close_Platform ; Offset_0x077CD2 
                dc.w    $7600  
                dc.l    Cpz_Spring_Tubes        ; Offset_0x078074
                dc.w    $7C00   
                dc.l    Water_Surface           ; Offset_0x0777D2  
                dc.w    $8000
                dc.l    Cpz_Platforms           ; Offset_0x077EB4
                dc.w    $8300 
                dc.l    Offset_0x077C26
                dc.w    $8600 
Chemical_Plant_Sprites_Previous_Build_2:                                   
Offset_0x02491A: 
                dc.w    (((Offset_0x02493A-Offset_0x02491A-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680  
                dc.l    Cpz_Worms               ; Offset_0x0779AA
                dc.w    $8780                         
                dc.l    (Diagonal_Spring_1-$0188) ; Offset_0x07976C 
                dc.w    $8800  
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00   
Neo_Green_Hill_Sprites_Previous_Build_1:                    
Offset_0x02493A:      
                dc.w    (((Offset_0x02495A-Offset_0x02493A-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Neo_Green_Hill_8x8_Tiles-$07D2 ; Offset_0x0B9686
                dc.w    $0000
                dc.l    Nghz_Water_Surface      ; Offset_0x078270
                dc.w    $8000   
                dc.l    Nghz_Leaves             ; Offset_0x078356
                dc.w    $8200    
                dc.l    Nghz_Arrow_Shooter      ; Offset_0x0783E2
                dc.w    $82E0  
                dc.l    Nghz_Water_Splash       ; Offset_0x078540
                dc.w    $8500  
Neo_Green_Hill_Sprites_Previous_Build_2:                  
Offset_0x02495A:    
                dc.w    (((Offset_0x024974-Offset_0x02495A-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Spikes                  ; Offset_0x07914E
                dc.w    $8680   
                dc.l    (Diagonal_Spring_1-$0188) ; Offset_0x07976C 
                dc.w    $8800   
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80   
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00   
End_Level_Results_Sprites_Previous_Build:                    
Offset_0x024974:  
                dc.w    (((Offset_0x02497C-Offset_0x024974-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Title_Cards-$07E2       ; Offset_0x07E222    
                dc.w    $B000  
End_Level_Sprites_Previous_Build:                                
Offset_0x02497C: 
                dc.w    (((Offset_0x024990-Offset_0x02497C-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto                  
                dc.l    End_Panel               ; Offset_0x07931E 
                dc.w    $D000
                dc.l    Hidden_Points-$07E2     ; Offset_0x07F37A
                dc.w    $96C0
                dc.l    Big_Ring_Flash-$07E2    ; Offset_0x07F206
                dc.w    $8C40
Green_Hill_Boss_Previous_Build:
Offset_0x024990: 
                dc.w    (((Offset_0x0249A4-Offset_0x024990-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Robotnik_Ship-$07E2     ; Offset_0x07C4BC 
                dc.w    $8C00
                dc.l    Ghz_Boss_Car-$07E2      ; Offset_0x07D942
                dc.w    $9800
                dc.l    Ghz_Boss_Blades-$07E2   ; Offset_0x07E12E
                dc.w    $A800 
Offset_0x0249A4:                
                dc.l    Robotnik_Ship-$07E2     ; Offset_0x07C4BC 
                dc.w    $8000                   
                dc.l    Cpz_Boss-$07E2          ; Offset_0x07CBF8   
                dc.w    $8C00                 
                dc.l    Ship_Boost-$07E2        ; Offset_0x07D7DE 
                dc.w    $9A00                   
                dc.l    Boss_Smoke-$07E2        ; Offset_0x07D85C 
                dc.w    $9B00 
                dc.l    Ghz_Boss_Car-$07E2      ; Offset_0x07D942
                dc.w    $9D00                   
                dc.l    Ghz_Boss_Blades-$07E2   ; Offset_0x07E12E
                dc.w    $AD00   
                dc.w    $8680               
                dc.l    (Diagonal_Spring_1-$0188) ; Offset_0x07976C 
                dc.w    $8800  
                dc.l    Vertical_Spring         ; Offset_0x078658
                dc.w    $8B80 
                dc.l    Horizontal_Spring       ; Offset_0x078774
                dc.w    $8E00 
Offset_0x0249DC:  
                dc.w    (((Offset_0x0249E4-Offset_0x0249DC-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Title_Cards-$07E2       ; Offset_0x07E222    
                dc.w    $B000  
Offset_0x0249E4: 
                dc.w    (((Offset_0x0249F8-Offset_0x0249E4-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto                  
                dc.l    End_Panel               ; Offset_0x07931E 
                dc.w    $D000
                dc.l    Hidden_Points-$07E2     ; Offset_0x07F37A
                dc.w    $96C0
                dc.l    Big_Ring_Flash-$07E2    ; Offset_0x07F206
                dc.w    $8C40 
Offset_0x0249F8: 
                dc.w    (((Offset_0x024A0C-Offset_0x0249F8-$02)/$06)-$01) ; Auto Detect Number of Sprites Esrael L. G. Neto
                dc.l    Robotnik_Ship-$07E2     ; Offset_0x07C4BC 
                dc.w    $8C00
                dc.l    Ghz_Boss_Car-$07E2      ; Offset_0x07D942
                dc.w    $9800
                dc.l    Ghz_Boss_Blades-$07E2   ; Offset_0x07E12E
                dc.w    $A800 
Offset_0x024A0C: 
                dc.l    Robotnik_Ship-$07E2     ; Offset_0x07C4BC 
                dc.w    $8000                   
                dc.l    Cpz_Boss-$07E2          ; Offset_0x07CBF8   
                dc.w    $8C00                 
                dc.l    Ship_Boost-$07E2        ; Offset_0x07D7DE 
                dc.w    $9A00                   
                dc.l    Boss_Smoke-$07E2        ; Offset_0x07D85C 
                dc.w    $9B00 
                dc.l    Ghz_Boss_Car-$07E2      ; Offset_0x07D942
                dc.w    $9D00                   
                dc.l    Ghz_Boss_Blades-$07E2   ; Offset_0x07E12E
                dc.w    $AD00                  
Unknow_Data_0x024A30:
Offset_0x024A30:
                dc.b    $00, $78, $00, $06, $00, $07, $00, $06, $00, $10, $80, $06, $03, $0A, $06, $00
                dc.b    $07, $08, $60, $00, $06, $66, $88, $89, $07, $01, $10, $06, $0A, $01, $07, $00
                dc.b    $01, $10, $00, $11, $10, $00, $70, $02, $06, $77, $00, $11, $11, $66, $77, $03
                dc.b    $01, $07, $03, $01, $17, $03, $02, $9F, $10, $02, $02, $01, $10, $02, $01, $01
                dc.b    $02, $02, $09, $61, $02, $0A, $18, $66, $09, $EF, $87, $00, $97, $10, $6F, $76
                dc.b    $02, $0C, $10, $10, $77, $11, $06, $00, $17, $00, $10, $00, $01, $10, $02, $2D
                dc.b    $01, $01, $01, $61, $11, $06, $10, $77, $86, $17, $78, $88, $F7, $11, $0F, $07
                dc.b    $77, $00, $66, $FF, $17, $61, $01, $06, $07, $70, $67, $71, $16, $10, $76, $11
                dc.b    $10, $01, $10, $61, $06, $00, $61, $77, $E8, $9E, $9E, $E9, $77, $03, $0C, $F0
                dc.b    $07, $10, $00, $7F, $00, $01, $00, $17, $F0, $77, $61, $02, $0E, $77, $07, $67
                dc.b    $87, $11, $67, $F8, $11, $00, $01, $E9, $86, $66, $11, $02, $02, $07, $11, $05
                dc.b    $02, $E0, $71, $05, $01, $0E, $05, $0C, $71, $00, $E0, $77, $70, $00, $77, $77
                dc.b    $70, $16, $00, $70, $02, $01, $10, $02, $08, $07, $00, $07, $07, $00, $01, $00
                dc.b    $70, $04, $0E, $70, $00, $10, $00, $07, $00, $01, $07, $00, $10, $00, $11, $66
                dc.b    $71, $03, $02, $07, $11, $02, $01, $70, $04, $01, $01, $03, $01, $10, $02, $01
                dc.b    $70, $03, $01, $07, $03, $04, $61, $00, $01, $16, $0A, $02, $10, $70, $02, $01
                dc.b    $07, $02, $01, $01, $04, $01, $70, $05, $04, $60, $01, $76, $66, $10, $01, $70
                dc.b    $09, $06, $11, $00, $98, $88, $67, $10, $0B, $03, $01, $00, $0E, $05, $05, $70
                dc.b    $00, $E0, $07, $07, $04, $04, $88, $76, $61, $66, $05, $01, $10, $18, $04, $16
                dc.b    $66, $00, $01, $02, $05, $01, $10, $70, $00, $01, $04, $01, $07, $0B, $01, $07
                dc.b    $02, $08, $66, $00, $66, $76, $00, $70, $01, $10, $02, $01, $10, $02, $02, $07
                dc.b    $01, $07, $02, $71, $01, $03, $01, $11, $03, $04, $10, $66, $66, $61, $08, $01
                dc.b    $11, $03, $01, $10, $10, $05, $01, $66, $88, $89, $17, $03, $02, $77, $70, $02
                dc.b    $03, $70, $00, $E0, $05, $01, $70, $07, $02, $07, $70, $02, $06, $07, $76, $68
                dc.b    $88, $07, $01, $08, $01, $10, $02, $01, $70, $04, $01, $01, $02, $03, $07, $00
                dc.b    $10, $02, $06, $70, $01, $66, $66, $61, $11, $09, $05, $01, $10, $00, $10, $67
                dc.b    $02, $02, $06, $07, $02, $02, $70, $70, $02, $14, $07, $00, $10, $00, $FF, $8F
                dc.b    $FF, $EE, $87, $00, $10, $70, $18, $F7, $76, $F8, $01, $78, $FF, $07, $02, $08
                dc.b    $70, $70, $00, $10, $00, $01, $00, $01, $04, $10, $17, $10, $EE, $9E, $E8, $91
                dc.b    $77, $07, $88, $80, $88, $88, $61, $11, $01, $11, $02, $01, $10, $0F, $01, $10
                dc.b    $03, $01, $10, $1B, $03, $61, $10, $11, $02, $01, $10, $04, $08, $10, $00, $07
                dc.b    $10, $01, $01, $E0, $71, $03, $06, $07, $10, $00, $0E, $00, $71, $02, $07, $E0
                dc.b    $07, $01, $88, $86, $77, $16, $02, $03, $10, $00, $10, $03, $01, $01, $03, $01
                dc.b    $70, $08, $04, $10, $01, $07, $77, $03, $05, $76, $10, $00, $11, $70, $0A, $01
                dc.b    $01, $03, $02, $01, $01, $03, $01, $70, $03, $02, $07, $10, $02, $04, $66, $11
                dc.b    $66, $66, $05, $01, $17, $06, $01, $11, $03, $01, $10, $04, $01, $70, $06, $04
                dc.b    $11, $66, $66, $66, $10, $01, $71, $0B, $01, $61, $1A, $01, $01, $03, $05, $10
                dc.b    $22, $22, $22, $33, $1C, $0B, $23, $23, $44, $44, $10, $00, $70, $00, $11, $01
                dc.b    $07, $03, $02, $10, $70, $02, $02, $01, $07, $03, $01, $10, $07, $04, $01, $66
                dc.b    $66, $61, $03, $01, $71, $06, $01, $07, $02, $03, $07, $70, $71, $02, $03, $11
                dc.b    $77, $10, $04, $01, $01, $02, $05, $01, $60, $00, $16, $10, $1B, $05, $17, $66
                dc.b    $66, $68, $9E, $04, $0B, $07, $70, $0E, $00, $70, $17, $00, $EE, $01, $01, $70
                dc.b    $03, $06, $07, $77, $00, $01, $01, $10, $02, $06, $10, $01, $98, $89, $88, $88
                dc.b    $08, $01, $E0, $03, $02, $0E, $E0, $02, $02, $70, $0E, $02, $01, $07, $07, $08
                dc.b    $97, $00, $99, $EE, $00, $07, $01, $70, $07, $01, $17, $03, $01, $01, $05, $02
                dc.b    $07, $01, $05, $06, $E0, $77, $11, $00, $07, $01, $02, $01, $70, $08, $01, $10
                dc.b    $0E, $04, $99, $86, $61, $11, $11, $01, $0E, $0A, $06, $99, $98, $61, $11, $00
                dc.b    $10, $1A, $08, $99, $86, $66, $10, $00, $0E, $00, $71, $03, $01, $07, $02, $01
                dc.b    $E0, $04, $01, $07, $0A, $0D, $0E, $00, $9E, $E9, $89, $70, $17, $00, $10, $10
                dc.b    $10, $77, $71, $02, $01, $07, $02, $01, $01, $04, $04, $07, $01, $01, $11, $03
                dc.b    $17, $10, $70, $07, $00, $77, $77, $66, $10, $70, $70, $10, $01, $00, $07, $01
                dc.b    $10, $07, $00, $70, $10, $00, $07, $70, $02, $05, $70, $10, $07, $00, $01, $04
                dc.b    $07, $10, $70, $00, $76, $77, $00, $07, $03, $01, $70, $18, $03, $76, $66, $66
                dc.b    $07, $09, $01, $00, $01, $00, $17, $00, $70, $11, $78, $02, $05, $7F, $80, $00
                dc.b    $07, $80, $02, $09, $08, $01, $10, $66, $6E, $FE, $E8, $00, $16, $02, $3C, $11
                dc.b    $78, $FF, $F0, $FF, $00, $11, $18, $00, $80, $10, $01, $11, $00, $01, $10, $01
                dc.b    $00, $01, $11, $10, $01, $00, $01, $FF, $FE, $EF, $FF, $70, $00, $61, $00, $0F
                dc.b    $FF, $87, $11, $81, $11, $00, $FF, $10, $01, $08, $00, $01, $10, $00, $11, $11
                dc.b    $10, $00, $10, $10, $00, $10, $01, $FF, $FE, $FE, $EE, $02, $03, $01, $01, $10
                dc.b    $02, $1A, $10, $71, $00, $10, $77, $87, $11, $07, $07, $08, $F7, $00, $71, $00
                dc.b    $08, $70, $00, $01, $10, $80, $00, $FF, $FE, $87, $00, $10, $02, $01, $10, $02
                dc.b    $08, $01, $00, $10, $01, $70, $00, $71, $07, $02, $01, $77, $03, $02, $10, $17
                dc.b    $02, $01, $07, $03, $04, $01, $11, $10, $16, $02, $02, $11, $77, $02, $02, $10
                dc.b    $07, $02, $02, $01, $70, $07, $01, $17, $08, $06, $10, $01, $00, $01, $01, $01
                dc.b    $07, $01, $10, $02, $01, $70, $0C, $01, $10, $02, $05, $70, $66, $88, $88, $10
                dc.b    $13, $02, $10, $0E, $02, $01, $07, $03, $04, $9E, $0E, $99, $98, $03, $01, $01
                dc.b    $0E, $01, $70, $06, $01, $E0, $02, $04, $89, $86, $61, $11, $05, $01, $10, $02
                dc.b    $01, $10, $13, $04, $99, $98, $61, $11, $02, $01, $07, $19, $04, $99, $98, $66
                dc.b    $11, $1C, $04, $99, $98, $88, $61, $0F, $01, $E7, $0C, $06, $89, $EE, $EE, $96
                dc.b    $00, $70, $03, $04, $70, $00, $71, $07, $03, $06, $07, $70, $00, $07, $11, $07
                dc.b    $03, $01, $17, $02, $02, $71, $07, $02, $06, $70, $11, $67, $00, $10, $01, $03
                dc.b    $01, $70, $07, $01, $77, $02, $03, $10, $00, $10, $02, $05, $70, $10, $70, $00
                dc.b    $07, $02, $04, $77, $07, $67, $70, $1D, $0E, $08, $99, $98, $00, $08, $11, $10
                dc.b    $00, $08, $00, $01, $00, $80, $11, $03, $02, $01, $01, $02, $01, $10, $02, $01
                dc.b    $80, $02, $19, $77, $7F, $F8, $88, $FF, $FE, $E8, $89, $10, $10, $11, $01, $00
                dc.b    $11, $01, $10, $01, $10, $01, $11, $11, $10, $11, $10, $01, $02, $1E, $01, $01
                dc.b    $00, $10, $10, $00, $88, $88, $00, $10, $89, $98, $00, $10, $11, $01, $01, $01
                dc.b    $10, $11, $00, $11, $10, $01, $10, $01, $11, $01, $11, $10, $02, $14, $10, $01
                dc.b    $01, $00, $10, $00, $88, $88, $00, $01, $99, $80, $FE, $01, $11, $80, $00, $10
                dc.b    $00, $80, $02, $09, $11, $08, $00, $10, $10, $00, $01, $00, $01, $04, $0A, $08
                dc.b    $77, $88, $8F, $F7, $77, $66, $00, $01, $11, $06, $01, $10, $07, $02, $01, $11
                dc.b    $02, $04, $10, $11, $10, $07, $02, $08, $71, $00, $70, $11, $61, $66, $61, $10
                dc.b    $17, $01, $10, $02, $06, $01, $00, $61, $00, $01, $11, $07, $01, $01, $0B, $03
                dc.b    $10, $07, $10, $05, $05, $07, $70, $78, $88, $9E, $05, $01, $E0, $02, $01, $70
                dc.b    $07, $01, $0E, $0B, $01, $E0, $02, $01, $EE, $06, $01, $0E, $0F, $01, $E0, $05
                dc.b    $03, $9E, $E9, $77, $02, $07, $70, $10, $70, $00, $01, $01, $07, $08, $01, $07
                dc.b    $02, $02, $10, $70, $07, $05, $01, $10, $00, $01, $01, $07, $02, $07, $10, $06
                dc.b    $02, $70, $01, $07, $01, $70, $02, $04, $16, $61, $11, $61, $03, $01, $07, $02
                dc.b    $01, $10, $04, $01, $70, $06, $01, $01, $08, $01, $07, $03, $02, $11, $10, $0B
                dc.b    $01, $01, $03, $01, $70, $08, $01, $10, $04, $05, $06, $66, $07, $00, $07, $02
                dc.b    $05, $01, $01, $70, $00, $70, $09, $02, $07, $E0, $06, $07, $10, $97, $71, $00
                dc.b    $10, $00, $10, $04, $02, $01, $07, $03, $01, $77, $07, $01, $01, $02, $02, $17
                dc.b    $70, $04, $04, $77, $66, $70, $71, $03, $0B, $70, $77, $70, $77, $01, $00, $77
                dc.b    $11, $00, $10, $01, $02, $06, $17, $70, $00, $10, $00, $10, $06, $07, $06, $01
                dc.b    $16, $66, $10, $01, $07, $03, $01, $10, $04, $01, $07, $06, $01, $17, $04, $01
                dc.b    $71, $04, $05, $66, $11, $07, $06, $07, $02, $0C, $77, $70, $11, $10, $71, $01
                dc.b    $00, $10, $10, $10, $00, $01, $02, $02, $01, $10, $06, $01, $01, $02, $08, $10
                dc.b    $00, $11, $66, $10, $00, $10, $70, $02, $02, $01, $07, $03, $01, $10, $03, $01
                dc.b    $01, $0C, $08, $88, $88, $66, $66, $00, $0E, $00, $70, $05, $01, $E0, $06, $03
                dc.b    $0E, $00, $07, $09, $05, $E7, $77, $61, $17, $07, $06, $01, $10, $09, $01, $70
                dc.b    $04, $02, $01, $07, $04, $04, $70, $00, $11, $16, $08, $03, $70, $07, $01, $07
                dc.b    $02, $70, $10, $08, $04, $66, $66, $61, $11, $1C, $04, $66, $10, $00, $01, $0C
                dc.b    $01, $07, $0F, $00, $0E, $F6, $0A, $00, $10, $00, $5F, $00, $11, $00, $5F, $00
                dc.b    $01, $04, $80, $8C, $60, $C6, $60, $C7, $00, $10, $00, $10, $80, $D6, $80, $D7
                dc.b    $00, $14, $00, $15, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11
                dc.b    $00, $10, $00, $10, $00, $17, $00, $16, $00, $15, $00, $14, $80, $D2, $80, $D2
                dc.b    $00, $10, $00, $10, $08, $93, $00, $92, $00, $10, $00, $10, $00, $B2, $08, $B3
                dc.b    $00, $10, $00, $10, $80, $D4, $80, $D4, $00, $10, $00, $10, $00, $16, $00, $16
                dc.b    $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11
                dc.b    $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16
                dc.b    $00, $10, $00, $10, $80, $D4, $80, $D4, $00, $10, $00, $10, $88, $F7, $88, $B7
                dc.b    $00, $50, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $45, $00, $16
                dc.b    $03, $07, $10, $00, $51, $00, $42, $00, $10, $02, $04, $08, $41, $08, $51, $03
                dc.b    $07, $10, $00, $52, $00, $41, $00, $10, $03, $2D, $16, $00, $55, $00, $10, $00
                dc.b    $10, $00, $12, $E8, $52, $00, $10, $E8, $50, $08, $31, $08, $31, $00, $10, $00
                dc.b    $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $00
                dc.b    $10, $00, $63, $00, $62, $00, $61, $02, $03, $08, $61, $08, $04, $5D, $61, $00
                dc.b    $72, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $08, $F1, $08, $F1, $80, $10, $80, $10, $80
                dc.b    $12, $80, $12, $80, $13, $00, $10, $80, $15, $00, $16, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $88, $13, $00
                dc.b    $12, $88, $11, $88, $10, $80, $10, $00, $91, $08, $31, $03, $38, $A1, $00, $A2
                dc.b    $00, $91, $00, $A2, $00, $22, $00, $91, $00, $16, $00, $25, $00, $10, $00, $12
                dc.b    $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $00, $12
                dc.b    $08, $27, $00, $10, $08, $25, $08, $24, $00, $16, $08, $22, $08, $A2, $00, $12
                dc.b    $08, $00, $08, $A1, $08, $02, $80, $AB, $C6, $00, $C7, $00, $10, $00, $12, $00
                dc.b    $30, $00, $30, $00, $10, $00, $10, $00, $F6, $00, $14, $00, $F0, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $00, $16, $08, $11, $00, $10, $00, $10, $08
                dc.b    $15, $08, $F2, $00, $10, $08, $F0, $00, $14, $00, $16, $00, $10, $00, $10, $00
                dc.b    $32, $00, $30, $00, $12, $00, $10, $08, $DD, $08, $DF, $00, $10, $00, $10, $00
                dc.b    $12, $00, $10, $00, $10, $00, $10, $00, $10, $08, $11, $00, $10, $00, $10, $01
                dc.b    $19, $09, $1E, $00, $43, $00, $47, $00, $50, $00, $51, $00, $52, $00, $53, $09
                dc.b    $4D, $09, $42, $00, $10, $00, $1F, $08, $48, $00, $49, $00, $30, $00, $30, $00
                dc.b    $10, $00, $10, $00, $11, $00, $11, $00, $6E, $08, $6F, $00, $22, $00, $22, $00
                dc.b    $20, $00, $22, $00, $26, $00, $24, $00, $26, $08, $27, $00, $24, $08, $25, $08
                dc.b    $27, $08, $25, $00, $24, $00, $26, $00, $24, $00, $24, $00, $22, $00, $22, $08
                dc.b    $2B, $08, $46, $03, $3F, $6C, $00, $5D, $00, $5E, $00, $1A, $00, $16, $00, $18
                dc.b    $08, $15, $00, $16, $00, $1A, $00, $73, $08, $7C, $00, $70, $00, $70, $00, $76
                dc.b    $00, $76, $00, $70, $00, $70, $00, $72, $00, $72, $00, $70, $00, $70, $08, $73
                dc.b    $08, $73, $00, $70, $00, $70, $00, $76, $00, $76, $00, $70, $00, $70, $00, $0C
                dc.b    $00, $4A, $00, $47, $02, $14, $08, $09, $08, $0A, $00, $24, $00, $24, $08, $27
                dc.b    $08, $27, $08, $25, $00, $24, $00, $2F, $08, $76, $03, $1F, $5B, $00, $5C, $00
                dc.b    $5D, $00, $30, $00, $30, $00, $32, $00, $32, $00, $30, $00, $30, $08, $33, $08
                dc.b    $33, $00, $30, $00, $30, $00, $36, $08, $6C, $08, $5B, $03, $35, $1B, $00, $6A
                dc.b    $00, $1B, $00, $10, $00, $3D, $00, $44, $00, $70, $00, $70, $00, $72, $08, $73
                dc.b    $00, $70, $00, $70, $00, $46, $00, $44, $00, $24, $00, $24, $00, $2D, $08, $50
                dc.b    $08, $00, $08, $7D, $08, $7E, $08, $7F, $00, $26, $00, $26, $08, $25, $00, $59
                dc.b    $08, $7D, $03, $0B, $3D, $08, $3D, $00, $70, $00, $70, $00, $4D, $08, $15, $03
                dc.b    $07, $30, $00, $59, $00, $68, $00, $30, $03, $2B, $75, $00, $1D, $00, $67, $00
                dc.b    $61, $00, $73, $00, $75, $00, $03, $00, $53, $00, $01, $08, $50, $00, $06, $08
                dc.b    $07, $08, $05, $08, $05, $00, $53, $00, $03, $00, $30, $00, $10, $00, $10, $08
                dc.b    $1B, $08, $7A, $00, $0B, $03, $2F, $10, $00, $02, $00, $18, $00, $90, $00, $28
                dc.b    $00, $96, $00, $2E, $00, $28, $00, $28, $00, $8F, $00, $89, $00, $8D, $00, $8B
                dc.b    $08, $2B, $08, $2B, $00, $28, $00, $28, $00, $2E, $00, $2E, $00, $28, $00, $90
                dc.b    $00, $20, $08, $92, $00, $10, $02, $81, $0E, $08, $15, $00, $0F, $00, $10, $00
                dc.b    $10, $00, $66, $00, $66, $00, $F0, $00, $F0, $00, $F0, $00, $F0, $00, $F2, $00
                dc.b    $F2, $00, $10, $00, $10, $00, $43, $00, $41, $08, $42, $08, $40, $00, $41, $00
                dc.b    $43, $08, $F2, $08, $F0, $00, $10, $00, $E1, $00, $A0, $00, $51, $00, $51, $00
                dc.b    $53, $00, $53, $00, $51, $00, $51, $00, $43, $00, $D9, $00, $CB, $00, $03, $00
                dc.b    $0C, $00, $89, $00, $86, $00, $30, $00, $30, $00, $32, $00, $32, $00, $30, $00
                dc.b    $30, $00, $26, $00, $26, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $08, $E7, $08, $E7, $00, $F2, $00, $F2, $00, $F2, $00, $F2, $00, $F0, $00
                dc.b    $F0, $00, $86, $00, $86, $00, $10, $00, $10, $08, $3E, $08, $37, $00, $10, $00
                dc.b    $E1, $00, $89, $00, $71, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $00, $06, $00, $06, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $08, $25, $08, $25, $00, $30, $00, $30, $00, $32, $00, $32, $00, $30, $00
                dc.b    $30, $00, $80, $00, $80, $00, $10, $00, $10, $00, $82, $00, $82, $00, $10, $00
                dc.b    $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $BA, $00, $BA, $00, $0C, $00
                dc.b    $03, $08, $D3, $08, $DC, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $08, $45, $08, $45, $00, $43, $00, $51, $00, $41, $00, $53, $00, $53, $00
                dc.b    $51, $00, $E3, $00, $E8, $00, $E1, $00, $10, $08, $C8, $08, $D9, $00, $B0, $00
                dc.b    $59, $00, $59, $00, $B1, $00, $5B, $03, $23, $72, $00, $C1, $00, $10, $00, $10
                dc.b    $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $C4, $00, $3D
                dc.b    $00, $D4, $00, $A3, $00, $2D, $00, $5B, $00, $F9, $08, $D4, $03, $1D, $2D, $08
                dc.b    $C5, $00, $3D, $00, $3D, $08, $C4, $00, $3B, $08, $C2, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $08, $D1, $00, $39, $03, $2F, $5B, $08, $E8
                dc.b    $08, $B2, $00, $59, $08, $B0, $08, $DA, $08, $10, $00, $8B, $00, $7B, $00, $0A
                dc.b    $00, $30, $00, $10, $00, $10, $00, $16, $00, $16, $00, $EC, $00, $ED, $88, $79
                dc.b    $88, $78, $08, $87, $00, $F0, $80, $EE, $88, $88, $00, $30, $03, $01, $10, $03
                dc.b    $01, $70, $02, $80, $F4, $80, $AF, $80, $FC, $00, $10, $00, $01, $00, $11, $00
                dc.b    $01, $00, $11, $00, $01, $00, $F5, $00, $F4, $00, $10, $00, $10, $81, $1B, $81
                dc.b    $1B, $00, $10, $00, $10, $00, $12, $00, $10, $00, $10, $00, $16, $00, $10, $00
                dc.b    $16, $00, $07, $00, $07, $89, $7D, $89, $7D, $00, $F0, $00, $F0, $89, $8A, $89
                dc.b    $8A, $00, $16, $00, $14, $00, $16, $00, $14, $00, $0B, $00, $0B, $00, $0B, $00
                dc.b    $0B, $00, $09, $00, $09, $00, $09, $08, $0A, $08, $10, $00, $10, $08, $10, $08
                dc.b    $13, $00, $0B, $00, $1A, $01, $08, $00, $3B, $01, $1B, $00, $10, $00, $3F, $00
                dc.b    $16, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $13, $08
                dc.b    $13, $00, $10, $00, $10, $00, $16, $09, $34, $00, $10, $09, $1B, $08, $77, $08
                dc.b    $5E, $00, $0C, $00, $0C, $00, $0E, $00, $0E, $00, $0C, $00, $0C, $00, $0E, $00
                dc.b    $0E, $00, $08, $00, $08, $00, $0A, $00, $57, $00, $08, $00, $55, $89, $D5, $89
                dc.b    $D5, $00, $30, $00, $30, $00, $32, $00, $32, $00, $30, $00, $30, $00, $12, $00
                dc.b    $12, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $80, $00
                dc.b    $80, $00, $10, $00, $10, $88, $33, $08, $31, $00, $10, $00, $10, $08, $09, $88
                dc.b    $0B, $00, $0C, $00, $03, $08, $17, $08, $18, $00, $22, $00, $22, $08, $25, $08
                dc.b    $2A, $00, $10, $00, $1F, $08, $1E, $08, $1F, $04, $2C, $08, $78, $08, $79, $00
                dc.b    $F2, $00, $F2, $00, $F2, $00, $F2, $00, $F0, $00, $F0, $08, $80, $00, $81, $00
                dc.b    $24, $00, $24, $08, $24, $00, $25, $00, $22, $00, $22, $88, $21, $88, $23, $00
                dc.b    $10, $00, $10, $E0, $1A, $E0, $19, $04, $0C, $68, $29, $68, $21, $00, $E1, $00
                dc.b    $10, $68, $C8, $68, $31, $80, $A4, $5C, $E0, $00, $E0, $00, $E0, $00, $E0, $00
                dc.b    $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00
                dc.b    $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00
                dc.b    $E0, $00, $60, $00, $E0, $00, $60, $00, $E0, $00, $60, $00, $E0, $00, $60, $00
                dc.b    $E0, $00, $20, $00, $E0, $00, $20, $00, $60, $0A, $E0, $09, $00, $10, $00, $10
                dc.b    $00, $12, $80, $10, $00, $22, $00, $22, $08, $25, $08, $2A, $00, $10, $00, $1F
                dc.b    $68, $1F, $68, $1E, $04, $1F, $E0, $0A, $E0, $09, $00, $10, $00, $10, $60, $1A
                dc.b    $40, $19, $80, $00, $A0, $00, $40, $00, $40, $00, $40, $00, $40, $00, $A0, $00
                dc.b    $A0, $00, $A0, $00, $A0, $1B, $01, $E0, $03, $43, $E0, $00, $80, $00, $10, $03
                dc.b    $80, $00, $10, $03, $C0, $00, $E0, $00, $C0, $00, $E0, $00, $C0, $00, $E0, $00
                dc.b    $C0, $00, $E0, $00, $C0, $00, $E0, $00, $C0, $00, $E0, $00, $E0, $00, $E0, $00
                dc.b    $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $40, $00
                dc.b    $E0, $00, $E0, $00, $60, $00, $80, $00, $E0, $00, $C0, $00, $20, $03, $01, $60
                dc.b    $03, $07, $60, $00, $40, $00, $60, $00, $40, $03, $27, $C0, $00, $20, $00, $C0
                dc.b    $00, $60, $00, $80, $00, $60, $00, $80, $00, $E0, $00, $20, $00, $E0, $00, $E0
                dc.b    $00, $80, $00, $20, $00, $80, $00, $E0, $00, $C0, $00, $20, $00, $C0, $00, $20
                dc.b    $00, $40, $03, $01, $40, $03, $01, $C0, $03, $01, $C0, $03, $15, $60, $00, $80
                dc.b    $00, $60, $00, $80, $00, $C0, $00, $E0, $00, $C0, $00, $60, $00, $E0, $00, $60
                dc.b    $00, $E0, $03, $01, $E0, $37, $11, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $11
                dc.b    $11, $11, $11, $00, $11, $11, $11, $11, $05, $02, $11, $11, $02, $02, $11, $11
                dc.b    $04, $01, $11, $03, $01, $11, $03, $07, $11, $11, $11, $00, $11, $11, $11, $05
                dc.b    $02, $11, $11, $02, $02, $11, $11, $06, $02, $11, $11, $02, $02, $11, $11, $07
                dc.b    $01, $01, $03, $01, $01, $0E, $08, $11, $11, $11, $00, $11, $11, $11, $11, $07
                dc.b    $01, $11, $06, $19, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $00, $11, $0F, $11
                dc.b    $11, $BB, $F0, $EE, $22, $99, $00, $FF, $CC, $33, $FF, $00, $FF, $19, $03, $FF
                dc.b    $FF, $FF, $02, $04, $FF, $FF, $00, $FF, $80, $D5, $09, $A2, $A8, $A1, $A1, $05
                dc.b    $A8, $A1, $A1, $A7, $24, $0B, $64, $65, $66, $67, $0C, $0C, $0C, $67, $68, $69
                dc.b    $6A, $08, $11, $A0, $A1, $A1, $A1, $04, $03, $03, $03, $06, $07, $04, $07, $04
                dc.b    $07, $04, $07, $04, $02, $02, $07, $04, $02, $02, $07, $04, $02, $0A, $07, $99
                dc.b    $9E, $A2, $24, $B1, $3C, $00, $81, $8A, $25, $0C, $8B, $8C, $00, $48, $C2, $C6
                dc.b    $4B, $04, $49, $4A, $4B, $4C, $0D, $21, $7B, $74, $75, $80, $FA, $F6, $0B, $FF
                dc.b    $F1, $F6, $0B, $0A, $F0, $F4, $F4, $F7, $F0, $F4, $F4, $F7, $F0, $F4, $F4, $F7
                dc.b    $2E, $2F, $81, $06, $24, $AF, $00, $84, $8A, $08, $18, $02, $03, $04, $05, $02
                dc.b    $03, $04, $05, $02, $03, $04, $05, $02, $03, $04, $05, $02, $03, $04, $05, $02
                dc.b    $03, $04, $05, $05, $0C, $8D, $8E, $8F, $90, $DC, $DC, $DC, $C4, $51, $52, $53
                dc.b    $54, $05, $2A, $A9, $AA, $AB, $AC, $04, $AA, $AB, $AC, $D6, $7C, $7D, $83, $FF
                dc.b    $FE, $FB, $04, $F4, $FE, $FB, $FA, $F3, $FF, $F9, $FF, $F3, $FF, $F9, $FF, $F3
                dc.b    $FF, $F9, $FF, $2D, $2C, $84, $FB, $D6, $2A, $00, $79, $78, $85, $06, $1A, $09
                dc.b    $0A, $0B, $0C, $04, $04, $0B, $0C, $04, $04, $0B, $0C, $04, $04, $0B, $0C, $04
                dc.b    $04, $0B, $0C, $04, $04, $0B, $0C, $0D, $0E, $07, $09, $40, $41, $42, $43, $04
                dc.b    $41, $42, $43, $44, $0D, $22, $7B, $71, $72, $88, $F2, $F3, $F4, $0F, $F9, $F3
                dc.b    $F4, $F5, $F8, $F9, $FB, $F0, $F8, $F9, $FB, $F0, $F8, $F9, $FB, $F0, $26, $27
                dc.b    $89, $02, $2F, $25, $00, $80, $81, $8A, $05, $1C, $10, $11, $12, $13, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $14, $15, $16, $17, $06, $09, $48, $49, $4A, $4B, $04, $49, $4A, $4B
                dc.b    $4C, $02, $07, $60, $61, $62, $00, $60, $61, $62, $02, $24, $73, $6C, $79, $7A
                dc.b    $05, $1B, $12, $16, $1B, $0F, $12, $16, $1B, $0F, $12, $16, $1B, $0F, $12, $16
                dc.b    $1B, $0F, $12, $16, $0F, $CD, $C5, $C3, $79, $39, $2A, $25, $00, $83, $84, $8A
                dc.b    $05, $1F, $18, $19, $1A, $1B, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $1B, $1A, $19, $1F, $07, $07
                dc.b    $07, $03, $09, $50, $51, $52, $53, $04, $51, $52, $53, $54, $02, $07, $55, $5F
                dc.b    $63, $00, $55, $5F, $63, $02, $25, $7B, $74, $81, $82, $05, $0B, $F1, $F6, $0B
                dc.b    $FF, $F1, $F6, $0B, $FF, $F1, $F6, $0B, $FF, $F1, $F6, $0B, $FF, $F1, $F6, $FF
                dc.b    $FD, $DE, $DB, $81, $FB, $D7, $D7, $85, $79, $79, $78, $85, $04, $1F, $20, $21
                dc.b    $22, $23, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $44, $44, $44, $27, $60, $61, $62, $04, $0A, $59
                dc.b    $5A, $5B, $00, $CC, $CC, $5B, $00, $95, $96, $09, $25, $7B, $7C, $84, $82, $FD
                dc.b    $FB, $F4, $FE, $FB, $04, $F4, $FE, $FB, $04, $F4, $FE, $FB, $04, $F4, $FE, $FB
                dc.b    $04, $F4, $FE, $02, $05, $DE, $D3, $84, $02, $2E, $2E, $8A, $80, $80, $81, $8A
                dc.b    $04, $1F, $28, $29, $2A, $2B, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $79, $72, $4D, $2F, $55, $5F
                dc.b    $63, $05, $09, $3F, $91, $92, $93, $AB, $91, $92, $93, $94, $09, $25, $7B, $71
                dc.b    $89, $82, $FD, $F6, $F9, $F3, $F4, $0F, $F9, $F3, $F4, $0F, $F9, $F3, $F4, $0F
                dc.b    $F9, $F3, $F4, $0F, $F9, $F3, $0F, $05, $C0, $C0, $89, $01, $33, $35, $8A, $83
                dc.b    $83, $84, $8A, $07, $02, $01, $06, $02, $02, $01, $06, $02, $02, $30, $37, $02
                dc.b    $02, $30, $37, $02, $02, $01, $06, $02, $02, $01, $06, $0A, $3A, $B9, $58, $44
                dc.b    $00, $B9, $58, $44, $40, $4E, $4F, $44, $40, $4E, $4F, $44, $73, $6C, $6D, $78
                dc.b    $0A, $16, $06, $14, $14, $02, $12, $16, $1B, $0F, $12, $16, $1B, $0F, $12, $16
                dc.b    $1B, $0F, $12, $16, $1B, $1B, $F3, $F5, $F7, $CF, $3B, $A4, $9A, $1E, $1E, $80
                dc.b    $BD, $01, $05, $BD, $BD, $BC, $B8, $05, $02, $08, $0F, $02, $02, $08, $0F, $02
                dc.b    $02, $31, $36, $02, $02, $31, $36, $02, $02, $08, $0F, $02, $02, $08, $0F, $04
                dc.b    $40, $40, $58, $44, $40, $18, $1C, $0C, $1C, $14, $44, $48, $5C, $4C, $48, $56
                dc.b    $57, $4C, $48, $56, $57, $4C, $7B, $74, $75, $80, $FA, $F6, $05, $F4, $F4, $02
                dc.b    $F1, $F6, $0B, $FF, $F1, $F6, $0B, $FF, $F1, $F6, $0B, $FF, $F1, $F6, $0B, $0A
                dc.b    $EB, $74, $E8, $C7, $28, $B6, $9D, $C7, $C6, $36, $80, $F4, $FF, $80, $80, $81
                dc.b    $8A, $04, $18, $32, $33, $34, $35, $32, $33, $34, $35, $32, $33, $34, $35, $32
                dc.b    $33, $34, $35, $32, $33, $34, $35, $32, $33, $34, $35, $03, $44, $48, $5C, $4C
                dc.b    $48, $14, $10, $1C, $76, $08, $4C, $50, $3E, $54, $45, $46, $47, $4D, $45, $46
                dc.b    $47, $4D, $7B, $7C, $7D, $83, $FF, $FE, $0D, $FF, $F9, $01, $F4, $FE, $FB, $04
                dc.b    $F4, $FE, $FB, $04, $F4, $FE, $FB, $04, $F4, $FE, $FB, $10, $EC, $7C, $E3, $23
                dc.b    $29, $B6, $9E, $C9, $C8, $35, $83, $F9, $BF, $BB, $BA, $BD, $FB, $01, $00, $F9
                dc.b    $F9, $02, $05, $F9, $F9, $00, $F9, $F9, $02, $02, $F9, $F9, $09, $13, $F9, $F9
                dc.b    $00, $03, $C7, $C7, $3E, $6A, $39, $53, $57, $6E, $6A, $53, $6F, $39, $53, $00
                dc.b    $38, $02, $02, $5A, $59, $02, $06, $5A, $66, $3E, $3E, $3E, $01, $19, $09, $D9
                dc.b    $DD, $A6, $03, $E0, $DD, $A6, $03, $39, $1C, $04, $82, $82, $82, $82, $1C, $04
                dc.b    $BB, $BB, $BB, $BB, $7A, $00, $0C, $D6, $0A, $00, $10, $00, $3D, $00, $11, $00
                dc.b    $3D, $00, $01, $04, $64, $61, $0D, $61, $0E, $00, $10, $00, $10, $00, $12, $08
                dc.b    $13, $00, $10, $00, $10, $00, $12, $08, $10, $00, $11, $08, $11, $00, $11, $08
                dc.b    $35, $00, $35, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $08
                dc.b    $17, $00, $10, $00, $10, $00, $11, $08, $12, $00, $10, $00, $10, $08, $13, $08
                dc.b    $13, $00, $10, $00, $10, $00, $15, $00, $17, $00, $10, $00, $10, $00, $12, $00
                dc.b    $37, $00, $10, $00, $35, $08, $13, $08, $13, $00, $10, $08, $04, $08, $11, $00
                dc.b    $05, $08, $04, $00, $10, $00, $22, $08, $37, $04, $04, $08, $EA, $08, $EA, $04
                dc.b    $02, $08, $EA, $08, $02, $08, $EA, $09, $1F, $5B, $00, $5A, $00, $5B, $00, $5A
                dc.b    $00, $55, $00, $54, $00, $55, $00, $54, $00, $57, $00, $56, $00, $57, $00, $56
                dc.b    $00, $51, $00, $50, $08, $BB, $00, $50, $04, $04, $08, $EA, $00, $5D, $03, $25
                dc.b    $30, $00, $5C, $00, $32, $00, $30, $00, $45, $00, $05, $00, $72, $00, $10, $00
                dc.b    $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $1E, $00, $1E, $00, $10, $00
                dc.b    $10, $00, $6F, $00, $6E, $05, $0D, $7B, $00, $7A, $00, $10, $00, $10, $00, $71
                dc.b    $00, $70, $00, $73, $03, $0D, $2D, $00, $2D, $00, $30, $00, $10, $00, $42, $08
                dc.b    $3D, $00, $10, $03, $2D, $B5, $08, $88, $00, $89, $00, $10, $00, $8B, $00, $12
                dc.b    $00, $10, $00, $10, $00, $1E, $00, $1E, $00, $10, $00, $10, $00, $12, $00, $8E
                dc.b    $00, $10, $00, $8C, $00, $16, $00, $16, $00, $10, $00, $10, $00, $12, $00, $90
                dc.b    $00, $10, $03, $03, $93, $00, $7D, $03, $1F, $F0, $00, $7C, $00, $F2, $00, $F0
                dc.b    $00, $F0, $00, $25, $00, $27, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10
                dc.b    $00, $10, $00, $1E, $00, $A0, $00, $10, $03, $15, $12, $00, $BC, $00, $10, $00
                dc.b    $10, $00, $16, $00, $16, $00, $10, $00, $10, $00, $12, $00, $B0, $00, $10, $03
                dc.b    $0D, $CD, $00, $59, $00, $F0, $08, $43, $00, $D6, $00, $1A, $08, $67, $02, $7E
                dc.b    $08, $F6, $08, $C8, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10
                dc.b    $00, $1E, $00, $1E, $00, $10, $00, $10, $00, $CF, $00, $12, $00, $CD, $00, $10
                dc.b    $00, $16, $00, $16, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10
                dc.b    $00, $FC, $00, $4F, $00, $10, $00, $30, $00, $A3, $00, $B7, $00, $30, $00, $B5
                dc.b    $00, $45, $00, $47, $00, $E9, $00, $10, $00, $EB, $00, $12, $00, $10, $00, $10
                dc.b    $00, $1E, $00, $1E, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $08, $13
                dc.b    $00, $16, $08, $15, $08, $1B, $08, $1B, $08, $19, $08, $19, $08, $1B, $00, $E2
                dc.b    $08, $66, $08, $1A, $00, $30, $00, $D7, $08, $0A, $00, $CD, $00, $10, $02, $04
                dc.b    $08, $B4, $08, $67, $03, $0F, $10, $00, $66, $00, $24, $00, $10, $00, $30, $00
                dc.b    $24, $00, $79, $00, $30, $03, $03, $78, $08, $48, $03, $0F, $30, $08, $49, $00
                dc.b    $04, $00, $30, $00, $10, $00, $04, $08, $76, $00, $10, $02, $14, $08, $D3, $00
                dc.b    $BD, $00, $10, $00, $70, $00, $08, $00, $72, $00, $70, $00, $70, $00, $CC, $00
                dc.b    $32, $03, $27, $0B, $00, $FC, $00, $09, $00, $0D, $00, $0F, $00, $0F, $00, $09
                dc.b    $00, $0D, $00, $0B, $08, $0A, $08, $0C, $00, $0B, $00, $0D, $00, $0D, $00, $0F
                dc.b    $00, $0F, $00, $0D, $00, $0D, $08, $F1, $00, $0B, $02, $0E, $08, $48, $08, $DC
                dc.b    $00, $70, $00, $30, $08, $13, $00, $EC, $00, $30, $02, $04, $08, $ED, $08, $72
                dc.b    $03, $27, $98, $00, $82, $00, $78, $00, $68, $00, $78, $00, $48, $00, $58, $00
                dc.b    $48, $00, $58, $08, $58, $08, $48, $08, $58, $08, $48, $08, $78, $08, $68, $08
                dc.b    $78, $08, $68, $08, $98, $00, $EA, $08, $98, $03, $0B, $37, $00, $DC, $00, $30
                dc.b    $00, $30, $00, $F7, $00, $F6, $04, $04, $08, $00, $08, $C4, $03, $07, $30, $00
                dc.b    $C5, $00, $EE, $00, $30, $02, $04, $68, $E2, $68, $0D, $1C, $05, $01, $00, $01
                dc.b    $00, $01, $03, $01, $01, $07, $03, $09, $00, $09, $1D, $03, $60, $00, $08, $05
                dc.b    $03, $69, $00, $01, $15, $03, $09, $00, $09, $1D, $03, $60, $00, $60, $07, $01
                dc.b    $68, $03, $09, $01, $00, $68, $00, $01, $00, $01, $00, $01, $09, $03, $09, $00
                dc.b    $09, $1D, $03, $60, $00, $60, $07, $01, $68, $05, $03, $68, $00, $01, $05, $01
                dc.b    $01, $07, $03, $69, $00, $69, $2D, $03, $68, $00, $68, $0D, $03, $68, $00, $68
                dc.b    $2D, $03, $68, $00, $68, $0D, $03, $61, $00, $61, $0D, $05, $61, $00, $61, $00
                dc.b    $61, $03, $01, $61, $03, $23, $61, $00, $61, $00, $61, $00, $61, $00, $61, $00
                dc.b    $61, $00, $61, $00, $61, $00, $61, $00, $61, $00, $61, $00, $61, $00, $61, $00
                dc.b    $61, $00, $61, $00, $61, $00, $61, $00, $61, $51, $01, $80, $07, $01, $80, $0F
                dc.b    $03, $80, $00, $80, $15, $03, $80, $00, $80, $15, $03, $60, $00, $60, $05, $03
                dc.b    $60, $00, $60, $19, $01, $60, $03, $01, $60, $2D, $01, $60, $03, $01, $60, $1D
                dc.b    $03, $60, $00, $60, $81, $2D, $49, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0
                dc.b    $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0
                dc.b    $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0
                dc.b    $00, $60, $00, $E0, $00, $60, $00, $E0, $00, $60, $00, $E0, $00, $60, $00, $E0
                dc.b    $00, $20, $00, $E0, $00, $20, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0
                dc.b    $03, $01, $E0, $03, $01, $60, $03, $01, $60, $0D, $01, $40, $03, $19, $40, $00
                dc.b    $80, $00, $A0, $00, $80, $00, $A0, $00, $40, $00, $40, $00, $40, $00, $40, $00
                dc.b    $A0, $00, $A0, $00, $A0, $00, $A0, $1B, $01, $E0, $03, $43, $E0, $00, $80, $00
                dc.b    $E0, $00, $80, $00, $E0, $00, $C0, $00, $E0, $00, $C0, $00, $E0, $00, $C0, $00
                dc.b    $E0, $00, $C0, $00, $E0, $00, $C0, $00, $E0, $00, $C0, $00, $E0, $00, $E0, $00
                dc.b    $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00, $E0, $00
                dc.b    $40, $00, $E0, $00, $E0, $00, $60, $00, $80, $00, $E0, $00, $C0, $00, $20, $03
                dc.b    $01, $60, $03, $07, $60, $00, $40, $00, $60, $00, $40, $03, $27, $C0, $00, $20
                dc.b    $00, $C0, $00, $60, $00, $80, $00, $60, $00, $80, $00, $E0, $00, $20, $00, $E0
                dc.b    $00, $E0, $00, $80, $00, $20, $00, $80, $00, $E0, $00, $C0, $00, $20, $00, $C0
                dc.b    $00, $20, $00, $40, $03, $01, $40, $03, $01, $C0, $03, $01, $C0, $03, $15, $60
                dc.b    $00, $80, $00, $60, $00, $80, $00, $C0, $00, $E0, $00, $C0, $00, $60, $00, $E0
                dc.b    $00, $60, $00, $E0, $03, $01, $E0, $81, $3C, $04, $0D, $0D, $0D, $0D, $28, $04
                dc.b    $0D, $0D, $0D, $0D, $0D, $0A, $0D, $0D, $04, $0B, $01, $07, $09, $06, $01, $07
                dc.b    $02, $0E, $0E, $0C, $0F, $0E, $0E, $0C, $06, $08, $01, $07, $09, $06, $01, $07
                dc.b    $08, $08, $0E, $0C, $0F, $0E, $0E, $0C, $0F, $0E, $02, $04, $0D, $0D, $0D, $0D
                dc.b    $0D, $04, $0D, $0D, $0D, $0D, $06, $0C, $09, $08, $0B, $0A, $0C, $03, $0F, $0D
                dc.b    $05, $0B, $04, $07, $0A, $10, $09, $08, $0B, $0A, $0C, $03, $0F, $0D, $05, $0B
                dc.b    $04, $07, $0D, $0D, $0D, $0D, $0D, $10, $04, $0B, $0C, $0A, $09, $06, $01, $1A
                dc.b    $1C, $1F, $1E, $04, $1C, $1F, $1E, $19, $0A, $08, $09, $06, $01, $07, $09, $06
                dc.b    $01, $07, $04, $0A, $09, $06, $01, $07, $09, $06, $0C, $0A, $0D, $0D, $0D, $04
                dc.b    $0D, $0D, $0D, $0D, $03, $0A, $15, $14, $17, $16, $04, $04, $17, $16, $11, $10
                dc.b    $1B, $04, $0D, $0D, $0D, $0D, $0D, $04, $0D, $0D, $0D, $0D, $03, $0A, $2D, $2C
                dc.b    $2F, $2E, $04, $04, $2F, $2E, $29, $28, $05, $10, $0E, $0C, $0F, $0E, $0E, $0C
                dc.b    $0F, $0E, $09, $06, $01, $07, $09, $06, $01, $07, $06, $04, $0D, $0D, $0D, $0D
                dc.b    $0D, $04, $0D, $0D, $0D, $0D, $03, $0A, $25, $24, $27, $26, $04, $04, $27, $26
                dc.b    $21, $20, $03, $0C, $09, $08, $0B, $0A, $0C, $03, $0F, $0D, $05, $0B, $04, $07
                dc.b    $0C, $04, $0D, $0D, $0D, $0D, $0D, $1A, $03, $01, $02, $03, $0E, $0C, $0F, $33
                dc.b    $3C, $3F, $3E, $04, $04, $3F, $37, $3F, $39, $07, $12, $1C, $12, $15, $1B, $1A
                dc.b    $13, $12, $0C, $0A, $0E, $0C, $0F, $0E, $0E, $0C, $02, $03, $0D, $0D, $0D, $1A
                dc.b    $06, $07, $08, $06, $0F, $0D, $05, $3E, $30, $30, $36, $04, $04, $37, $36, $31
                dc.b    $30, $00, $2B, $2A, $23, $22, $2B, $2A, $23, $22, $0A, $0C, $09, $08, $0B, $0A
                dc.b    $0C, $03, $0F, $0D, $08, $06, $09, $0A, $0D, $04, $0D, $0D, $0D, $0D, $03, $19
                dc.b    $4D, $4C, $4F, $4E, $04, $04, $4F, $4E, $49, $48, $00, $3B, $3A, $33, $32, $3B
                dc.b    $3A, $3A, $34, $01, $07, $09, $06, $01, $07, $0C, $04, $0D, $0D, $0D, $0D, $0D
                dc.b    $04, $0D, $0D, $0D, $0D, $03, $13, $45, $44, $47, $46, $04, $04, $47, $46, $41
                dc.b    $40, $00, $4B, $4A, $43, $42, $4B, $4A, $43, $42, $12, $04, $0D, $0D, $0D, $0D
                dc.b    $0D, $04, $0D, $0D, $0D, $0D, $03, $13, $5D, $5C, $5F, $5E, $04, $04, $5F, $5E
                dc.b    $59, $58, $00, $5B, $5A, $55, $54, $5B, $5A, $55, $54, $12, $04, $0D, $0D, $0D
                dc.b    $0D, $80, $C4, $00, $00, $00, $0A, $20, $06, $66, $08, $88, $0C, $AA, $0E, $CC
                dc.b    $02, $46, $00, $08, $00, $0E, $04, $6A, $06, $8C, $08, $CE, $0E, $22, $0E, $62
                dc.b    $00, $00, $0E, $EE, $00, $00, $06, $22, $06, $44, $08, $66, $0A, $88, $0C, $CC
                dc.b    $02, $26, $04, $6E, $08, $AE, $00, $EE, $00, $0A, $02, $4C, $00, $6E, $00, $AE
                dc.b    $00, $00, $0E, $EE, $00, $00, $00, $26, $02, $48, $0A, $40, $0E, $60, $04, $44
                dc.b    $08, $66, $0A, $88, $00, $4E, $00, $CE, $00, $0A, $02, $82, $02, $C2, $04, $E2
                dc.b    $00, $00, $0E, $EE, $00, $00, $04, $EE, $04, $CE, $04, $8C, $02, $68, $00, $46
                dc.b    $02, $60, $0C, $88, $0C, $CA, $02, $28, $0E, $86, $02, $80, $00, $C0, $02, $E2
                dc.b    $00, $00, $0E, $EE, $20, $00, $00, $20, $05, $33, $33, $33, $33, $10, $02, $05
                dc.b    $01, $01, $07, $00, $10, $02, $01, $70, $05, $02, $01, $70, $02, $01, $10, $02
                dc.b    $0C, $10, $07, $00, $07, $01, $07, $77, $00, $77, $11, $00, $70, $02, $02, $10
                dc.b    $07, $02, $03, $01, $17, $77, $02, $01, $07, $03, $0E, $10, $11, $00, $11, $01
                dc.b    $00, $11, $00, $10, $33, $77, $77, $61, $22, $02, $0B, $70, $01, $00, $07, $01
                dc.b    $10, $00, $70, $10, $00, $70, $03, $08, $07, $01, $00, $03, $10, $00, $03, $30
                dc.b    $02, $09, $30, $00, $10, $01, $25, $55, $11, $10, $07, $02, $03, $01, $10, $70
                dc.b    $02, $01, $01, $05, $01, $33, $02, $03, $07, $00, $30, $04, $06, $01, $01, $55
                dc.b    $56, $67, $76, $0C, $01, $77, $02, $07, $07, $00, $70, $00, $70, $11, $17, $05
                dc.b    $05, $01, $66, $67, $00, $76, $05, $04, $77, $77, $70, $77, $02, $0A, $07, $00
                dc.b    $01, $11, $10, $01, $10, $00, $01, $10, $05, $06, $33, $30, $66, $66, $55, $56
                dc.b    $0C, $01, $77, $02, $07, $07, $00, $70, $00, $70, $11, $07, $03, $01, $10, $02
                dc.b    $03, $66, $67, $07, $02, $06, $07, $70, $11, $00, $70, $11, $02, $03, $01, $00
                dc.b    $03, $03, $03, $30, $70, $01, $07, $10, $70, $10, $30, $07, $70, $01, $12, $11
                dc.b    $11, $11, $11, $03, $33, $33, $33, $30, $13, $06, $22, $22, $22, $22, $11, $10
                dc.b    $02, $08, $30, $01, $11, $00, $03, $33, $30, $11, $02, $01, $03, $04, $01, $30
                dc.b    $08, $05, $25, $55, $55, $56, $07, $04, $03, $77, $00, $07, $02, $07, $70, $70
                dc.b    $10, $00, $07, $00, $01, $02, $01, $01, $08, $0B, $66, $70, $00, $01, $00, $07
                dc.b    $00, $11, $77, $70, $70, $02, $0F, $07, $00, $10, $11, $00, $77, $01, $00, $10
                dc.b    $07, $70, $33, $01, $00, $07, $04, $04, $33, $00, $11, $66, $09, $02, $03, $33
                dc.b    $02, $13, $30, $80, $33, $10, $00, $08, $80, $01, $30, $80, $08, $00, $03, $08
                dc.b    $00, $11, $00, $33, $BB, $04, $01, $03, $04, $01, $33, $02, $15, $03, $00, $33
                dc.b    $33, $30, $33, $00, $03, $03, $00, $33, $31, $80, $30, $00, $10, $A2, $21, $11
                dc.b    $00, $10, $02, $02, $07, $01, $02, $01, $07, $03, $17, $70, $01, $00, $77, $70
                dc.b    $10, $77, $77, $11, $07, $07, $01, $33, $74, $00, $13, $00, $40, $40, $00, $88
                dc.b    $00, $03, $04, $02, $10, $80, $02, $01, $03, $03, $01, $30, $03, $02, $01, $38
                dc.b    $02, $02, $03, $13, $03, $0F, $31, $44, $45, $54, $47, $01, $10, $00, $07, $15
                dc.b    $50, $10, $70, $50, $50, $04, $01, $07, $02, $03, $01, $00, $01, $02, $03, $70
                dc.b    $10, $05, $02, $0B, $03, $46, $66, $12, $30, $70, $10, $30, $00, $01, $03, $06
                dc.b    $02, $10, $30, $02, $01, $03, $03, $01, $30, $06, $07, $03, $33, $23, $00, $03
                dc.b    $30, $10, $06, $03, $03, $00, $30, $07, $03, $03, $00, $03, $02, $09, $33, $30
                dc.b    $00, $03, $33, $33, $30, $02, $33, $06, $01, $01, $02, $01, $30, $06, $01, $33
                dc.b    $06, $09, $01, $33, $00, $01, $10, $33, $00, $17, $01, $06, $01, $07, $02, $03
                dc.b    $01, $00, $01, $04, $05, $01, $01, $11, $00, $11, $02, $02, $11, $10, $04, $03
                dc.b    $03, $33, $33, $09, $01, $03, $02, $01, $10, $05, $0E, $30, $00, $01, $10, $03
                dc.b    $00, $10, $01, $10, $33, $01, $11, $06, $11, $06, $01, $07, $02, $01, $01, $06
                dc.b    $09, $01, $01, $10, $00, $11, $00, $01, $00, $10, $02, $08, $10, $11, $61, $10
                dc.b    $01, $00, $07, $01, $02, $0C, $70, $70, $10, $00, $07, $61, $11, $00, $11, $00
                dc.b    $01, $01, $02, $04, $33, $10, $00, $33, $02, $01, $03, $02, $02, $33, $30, $02
                dc.b    $01, $30, $03, $02, $03, $30, $03, $02, $03, $33, $02, $0A, $01, $00, $33, $33
                dc.b    $01, $11, $11, $00, $33, $11, $03, $02, $30, $10, $02, $02, $03, $01, $06, $01
                dc.b    $03, $02, $04, $33, $30, $00, $33, $02, $06, $11, $11, $11, $11, $00, $70, $03
                dc.b    $08, $77, $77, $77, $77, $16, $77, $77, $77, $04, $01, $01, $03, $01, $10, $02
                dc.b    $01, $70, $02, $0C, $07, $47, $00, $07, $74, $00, $07, $70, $40, $04, $74, $44
                dc.b    $02, $13, $62, $23, $34, $40, $11, $17, $70, $00, $11, $07, $00, $40, $30, $10
                dc.b    $70, $00, $33, $17, $70, $02, $04, $17, $04, $00, $13, $03, $03, $31, $17, $40
                dc.b    $02, $0E, $06, $21, $11, $03, $01, $03, $33, $00, $70, $11, $03, $00, $47, $70
                dc.b    $02, $03, $04, $43, $13, $03, $01, $31, $03, $01, $03, $04, $11, $12, $22, $22
                dc.b    $34, $03, $30, $01, $00, $88, $03, $00, $70, $00, $80, $00, $04, $80, $03, $18
                dc.b    $38, $80, $00, $40, $13, $03, $17, $00, $36, $21, $74, $00, $04, $70, $72, $11
                dc.b    $00, $47, $01, $33, $00, $04, $77, $10, $02, $02, $44, $71, $03, $01, $40, $03
                dc.b    $01, $07, $03, $01, $04, $05, $17, $05, $55, $44, $00, $50, $11, $77, $55, $11
                dc.b    $77, $11, $01, $77, $11, $03, $00, $01, $03, $30, $17, $10, $30, $88, $02, $01
                dc.b    $08, $02, $01, $03, $02, $08, $46, $65, $2B, $B8, $00, $07, $00, $03, $06, $01
                dc.b    $01, $08, $05, $10, $00, $07, $00, $01, $02, $06, $70, $00, $14, $55, $52, $11
                dc.b    $02, $01, $03, $04, $07, $01, $30, $00, $30, $11, $03, $33, $04, $01, $01, $02
                dc.b    $13, $01, $17, $00, $11, $10, $77, $01, $01, $12, $52, $22, $10, $30, $08, $00
                dc.b    $03, $08, $80, $80, $04, $04, $30, $80, $00, $80, $04, $01, $30, $02, $01, $80
                dc.b    $04, $04, $30, $88, $8B, $A2, $02, $02, $03, $10, $03, $01, $31, $07, $01, $03
                dc.b    $0C, $04, $33, $00, $03, $33, $02, $03, $03, $00, $10, $02, $06, $30, $10, $30
                dc.b    $00, $03, $01, $04, $01, $03, $03, $01, $10, $04, $0C, $30, $00, $01, $01, $12
                dc.b    $23, $00, $10, $00, $01, $00, $01, $05, $01, $01, $02, $03, $10, $00, $30, $07
                dc.b    $01, $03, $02, $05, $01, $33, $33, $31, $10, $02, $03, $03, $01, $10, $02, $06
                dc.b    $30, $10, $30, $00, $03, $01, $04, $01, $03, $03, $01, $10, $04, $05, $30, $00
                dc.b    $11, $13, $30, $05, $01, $11, $03, $01, $01, $03, $02, $30, $03, $02, $01, $03
                dc.b    $04, $02, $30, $30, $02, $02, $03, $03, $03, $02, $33, $03, $03, $01, $03, $17
                dc.b    $0B, $03, $22, $55, $54, $12, $10, $70, $01, $50, $01, $07, $02, $04, $30, $10
                dc.b    $00, $10, $02, $02, $70, $05, $04, $01, $30, $04, $12, $10, $70, $10, $66, $77
                dc.b    $11, $55, $77, $77, $11, $50, $11, $10, $70, $15, $33, $01, $07, $02, $03, $30
                dc.b    $10, $01, $03, $07, $70, $00, $30, $01, $00, $33, $33, $02, $18, $22, $14, $77
                dc.b    $70, $00, $50, $11, $77, $05, $11, $77, $11, $51, $77, $11, $03, $00, $01, $03
                dc.b    $30, $17, $10, $30, $88, $02, $01, $08, $02, $01, $03, $02, $14, $07, $65, $5D
                dc.b    $DD, $77, $77, $77, $77, $11, $11, $11, $11, $33, $33, $33, $30, $88, $88, $00
                dc.b    $03, $02, $01, $80, $07, $19, $80, $00, $DC, $C9, $14, $45, $71, $15, $50, $10
                dc.b    $07, $71, $01, $77, $11, $07, $17, $11, $00, $10, $00, $03, $30, $00, $71, $02
                dc.b    $04, $01, $00, $30, $03, $03, $13, $55, $66, $77, $41, $77, $77, $71, $15, $11
                dc.b    $10, $07, $01, $33, $01, $10, $77, $00, $30, $01, $06, $05, $33, $30, $10, $33
                dc.b    $30, $02, $04, $61, $30, $0B, $BA, $05, $01, $03, $04, $01, $08, $02, $01, $10
                dc.b    $02, $48, $17, $00, $30, $80, $00, $01, $03, $08, $00, $70, $10, $33, $54, $17
                dc.b    $76, $61, $00, $01, $00, $07, $00, $50, $10, $07, $00, $50, $17, $71, $05, $01
                dc.b    $70, $10, $00, $10, $01, $03, $50, $07, $10, $30, $01, $00, $03, $08, $67, $77
                dc.b    $65, $2A, $77, $70, $00, $70, $77, $77, $77, $77, $11, $00, $11, $07, $00, $11
                dc.b    $00, $11, $33, $33, $33, $00, $88, $88, $00, $33, $02, $07, $88, $00, $B8, $80
                dc.b    $00, $88, $03, $03, $02, $11, $38, $02, $19, $70, $03, $88, $00, $77, $10, $33
                dc.b    $88, $17, $71, $10, $33, $01, $70, $01, $10, $30, $10, $00, $10, $03, $32, $22
                dc.b    $30, $88, $02, $32, $31, $00, $80, $03, $01, $00, $80, $03, $33, $88, $00, $33
                dc.b    $30, $33, $33, $03, $30, $00, $33, $30, $08, $33, $00, $88, $80, $22, $22, $BB
                dc.b    $88, $11, $00, $10, $30, $00, $10, $01, $03, $30, $01, $00, $10, $03, $00, $07
                dc.b    $01, $00, $30, $17, $70, $88, $02, $01, $07, $04, $05, $88, $30, $10, $07, $03
                dc.b    $03, $15, $30, $01, $07, $07, $00, $10, $70, $00, $11, $07, $07, $77, $00, $07
                dc.b    $70, $11, $70, $11, $01, $03, $71, $02, $1A, $30, $01, $11, $10, $00, $11, $00
                dc.b    $10, $30, $00, $10, $01, $03, $33, $01, $00, $10, $00, $30, $07, $01, $00, $03
                dc.b    $17, $70, $88, $02, $01, $07, $04, $04, $88, $00, $31, $65, $02, $02, $03, $03
                dc.b    $04, $01, $33, $04, $07, $33, $33, $00, $11, $11, $10, $03, $02, $04, $10, $30
                dc.b    $00, $01, $02, $12, $22, $23, $33, $33, $30, $00, $33, $01, $03, $33, $00, $01
                dc.b    $00, $03, $33, $33, $33, $30, $03, $04, $88, $88, $00, $08, $03, $01, $80, $03
                dc.b    $0E, $BA, $AD, $DC, $44, $10, $07, $01, $00, $11, $00, $70, $10, $00, $10, $02
                dc.b    $01, $30, $0B, $01, $30, $03, $07, $03, $32, $26, $71, $30, $00, $30, $03, $01
                dc.b    $01, $02, $17, $03, $00, $70, $00, $30, $10, $01, $33, $01, $07, $00, $11, $10
                dc.b    $70, $15, $00, $77, $01, $00, $70, $65, $5C, $C9, $05, $01, $03, $04, $01, $08
                dc.b    $02, $01, $10, $02, $10, $17, $00, $30, $80, $00, $01, $03, $08, $00, $70, $10
                dc.b    $33, $CD, $D2, $23, $33, $05, $01, $08, $08, $01, $80, $03, $0E, $80, $03, $80
                dc.b    $08, $00, $33, $08, $80, $33, $30, $00, $33, $10, $33, $02, $08, $01, $10, $03
                dc.b    $01, $00, $13, $00, $10, $02, $0C, $30, $11, $10, $03, $03, $33, $01, $11, $30
                dc.b    $00, $30, $10, $02, $07, $03, $01, $30, $00, $33, $01, $30, $04, $01, $03, $03
                dc.b    $04, $30, $00, $10, $33, $02, $01, $07, $02, $2E, $11, $70, $11, $11, $07, $01
                dc.b    $00, $77, $70, $10, $36, $07, $77, $77, $00, $07, $00, $11, $05, $10, $70, $00
                dc.b    $05, $01, $07, $70, $50, $11, $77, $77, $01, $77, $00, $07, $17, $01, $11, $11
                dc.b    $00, $10, $33, $33, $17, $11, $30, $88, $0C, $0C, $01, $70, $13, $80, $50, $07
                dc.b    $01, $38, $05, $10, $70, $13, $02, $0E, $70, $10, $99, $45, $AA, $B3, $00, $80
                dc.b    $88, $88, $00, $08, $03, $38, $02, $02, $83, $03, $04, $06, $80, $00, $08, $30
                dc.b    $38, $80, $02, $03, $30, $08, $88, $02, $05, $32, $22, $33, $00, $01, $07, $0D
                dc.b    $01, $70, $03, $33, $17, $00, $10, $11, $00, $07, $01, $00, $70, $02, $09, $10
                dc.b    $70, $10, $70, $32, $AD, $CD, $DA, $08, $06, $24, $08, $08, $00, $08, $80, $30
                dc.b    $88, $83, $33, $03, $33, $31, $11, $11, $11, $10, $11, $07, $70, $11, $3B, $AD
                dc.b    $51, $01, $5D, $08, $30, $10, $00, $83, $01, $07, $00, $30, $10, $70, $02, $13
                dc.b    $11, $77, $70, $00, $33, $10, $07, $3B, $80, $01, $00, $88, $83, $01, $00, $A3
                dc.b    $30, $01, $22, $04, $01, $01, $02, $10, $30, $70, $10, $01, $13, $07, $01, $10
                dc.b    $01, $00, $77, $00, $11, $00, $07, $01, $03, $08, $10, $00, $DD, $52, $01, $66
                dc.b    $08, $03, $02, $24, $80, $30, $17, $00, $03, $11, $70, $00, $30, $11, $77, $70
                dc.b    $00, $33, $10, $07, $3B, $80, $01, $00, $88, $83, $01, $00, $A2, $20, $01, $22
                dc.b    $70, $01, $00, $30, $07, $00, $10, $03, $02, $06, $10, $00, $07, $01, $00, $03
                dc.b    $02, $05, $03, $30, $00, $10, $30, $02, $01, $03, $02, $18, $DA, $B8, $80, $03
                dc.b    $80, $00, $80, $30, $38, $88, $33, $00, $03, $33, $00, $11, $33, $00, $01, $07
                dc.b    $00, $33, $01, $17, $08, $05, $33, $22, $66, $66, $01, $02, $15, $10, $10, $07
                dc.b    $00, $05, $07, $70, $01, $50, $70, $01, $15, $00, $70, $01, $05, $00, $07, $00
                dc.b    $10, $50, $02, $04, $01, $00, $10, $70, $02, $04, $01, $07, $00, $05, $03, $01
                dc.b    $10, $02, $01, $70, $05, $01, $01, $05, $19, $70, $00, $10, $07, $00, $15, $66
                dc.b    $77, $77, $72, $00, $07, $00, $11, $01, $00, $70, $00, $10, $77, $77, $00, $07
                dc.b    $00, $07, $02, $04, $11, $11, $00, $71, $02, $05, $11, $10, $00, $33, $33, $04
                dc.b    $02, $11, $03, $02, $01, $01, $04, $01, $30, $06, $02, $01, $30, $02, $02, $10
                dc.b    $13, $02, $08, $31, $11, $33, $00, $03, $32, $33, $03, $0B, $01, $30, $06, $01
                dc.b    $03, $02, $0F, $03, $30, $00, $03, $30, $00, $01, $31, $11, $66, $66, $01, $00
                dc.b    $70, $01, $02, $01, $07, $09, $01, $01, $07, $0C, $10, $00, $07, $07, $70, $12
                dc.b    $25, $52, $00, $30, $08, $88, $05, $01, $30, $06, $03, $17, $13, $08, $03, $0A
                dc.b    $30, $80, $01, $71, $03, $08, $50, $00, $10, $30, $03, $01, $38, $04, $04, $05
                dc.b    $17, $00, $08, $02, $0A, $01, $30, $00, $51, $70, $13, $00, $05, $17, $01, $02
                dc.b    $08, $51, $67, $99, $91, $14, $46, $00, $08, $05, $03, $30, $00, $08, $02, $14
                dc.b    $88, $80, $03, $01, $30, $03, $30, $17, $03, $30, $11, $70, $11, $11, $77, $01
                dc.b    $10, $07, $11, $01, $02, $04, $05, $10, $10, $70, $03, $05, $01, $50, $51, $07
                dc.b    $05, $02, $06, $70, $10, $00, $05, $01, $50, $02, $01, $15, $03, $08, $14, $32
                dc.b    $21, $99, $07, $10, $38, $8B, $02, $08, $3B, $33, $00, $11, $03, $B8, $07, $70
                dc.b    $02, $1C, $10, $00, $13, $88, $51, $07, $01, $22, $05, $11, $77, $77, $12, $76
                dc.b    $77, $70, $31, $10, $07, $70, $31, $11, $07, $00, $03, $00, $10, $70, $02, $12
                dc.b    $10, $00, $03, $01, $00, $70, $21, $10, $77, $14, $77, $77, $11, $50, $00, $07
                dc.b    $77, $22, $04, $01, $01, $08, $1D, $17, $10, $01, $15, $00, $01, $10, $50, $51
                dc.b    $70, $07, $00, $05, $17, $70, $12, $22, $67, $00, $30, $11, $77, $00, $30, $10
                dc.b    $70, $00, $03, $01, $02, $24, $03, $01, $70, $07, $31, $17, $07, $71, $17, $70
                dc.b    $70, $13, $70, $07, $01, $30, $07, $61, $23, $00, $07, $10, $33, $33, $00, $01
                dc.b    $01, $11, $77, $11, $01, $10, $12, $33, $30, $01, $02, $03, $03, $30, $30, $02
                dc.b    $23, $03, $08, $88, $80, $00, $08, $BB, $B3, $22, $33, $01, $11, $07, $11, $10
                dc.b    $07, $77, $07, $77, $70, $70, $17, $00, $07, $01, $00, $70, $00, $10, $01, $07
                dc.b    $00, $03, $00, $10, $02, $0F, $16, $67, $07, $71, $77, $70, $00, $15, $70, $07
                dc.b    $70, $00, $11, $11, $07, $03, $03, $10, $00, $33, $05, $01, $10, $05, $0E, $25
                dc.b    $66, $66, $15, $07, $00, $10, $00, $10, $70, $01, $00, $01, $07, $02, $04, $30
                dc.b    $10, $70, $15, $04, $01, $30, $04, $07, $10, $00, $15, $00, $22, $25, $41, $02
                dc.b    $02, $08, $88, $02, $03, $80, $00, $10, $04, $04, $30, $80, $00, $01, $03, $1C
                dc.b    $70, $03, $08, $80, $00, $10, $30, $08, $52, $20, $12, $33, $00, $03, $10, $10
                dc.b    $80, $00, $31, $10, $08, $00, $03, $30, $00, $88, $00, $03, $06, $03, $88, $00
                dc.b    $80, $02, $05, $88, $3B, $BB, $AA, $AA, $02, $07, $11, $11, $00, $33, $33, $00
                dc.b    $03, $02, $17, $33, $00, $08, $88, $00, $33, $38, $80, $88, $03, $33, $38, $80
                dc.b    $80, $03, $03, $38, $A2, $22, $66, $13, $00, $77, $02, $02, $10, $70, $02, $0A
                dc.b    $01, $07, $00, $01, $30, $10, $70, $70, $03, $01, $02, $05, $80, $00, $07, $07
                dc.b    $80, $03, $1A, $44, $76, $00, $66, $00, $10, $77, $11, $01, $00, $77, $00, $10
                dc.b    $77, $11, $11, $07, $01, $00, $33, $00, $10, $33, $00, $70, $03, $02, $13, $01
                dc.b    $30, $00, $08, $32, $11, $11, $19, $00, $54, $44, $45, $05, $17, $77, $71, $51
                dc.b    $70, $11, $02, $05, $01, $30, $77, $00, $03, $08, $16, $30, $00, $01, $75, $66
                dc.b    $06, $11, $76, $66, $71, $76, $13, $33, $17, $10, $38, $80, $01, $03, $80, $08
                dc.b    $30, $0C, $10, $71, $9C, $CD, $56, $15, $41, $17, $77, $01, $00, $70, $11, $70
                dc.b    $07, $01, $33, $02, $02, $13, $08, $03, $02, $80, $07, $07, $15, $66, $07, $65
                dc.b    $DC, $11, $76, $66, $71, $76, $13, $33, $17, $10, $38, $80, $01, $33, $80, $08
                dc.b    $30, $80, $0B, $06, $83, $BA, $AA, $33, $00, $01, $02, $01, $03, $02, $01, $03
                dc.b    $06, $02, $07, $10, $03, $01, $01, $03, $02, $70, $03, $02, $07, $07, $03, $3B
                dc.b    $AD, $DD, $00, $80, $04, $07, $88, $80, $30, $88, $00, $08, $03, $04, $01, $30
                dc.b    $02, $01, $10, $03, $02, $01, $03, $02, $03, $67, $61, $33, $02, $05, $70, $03
                dc.b    $08, $00, $01, $05, $01, $80, $10, $04, $CD, $AB, $B8, $88, $03, $01, $80, $13
                dc.b    $01, $80, $04, $06, $8B, $BA, $AA, $30, $00, $01, $05, $01, $03, $06, $02, $07
                dc.b    $10, $03, $02, $01, $30, $02, $01, $70, $03, $05, $07, $30, $01, $00, $11, $06
                dc.b    $08, $70, $05, $30, $00, $01, $50, $00, $17, $02, $0F, $11, $70, $10, $00, $07
                dc.b    $00, $10, $00, $07, $70, $01, $50, $00, $07, $01, $02, $0E, $77, $01, $05, $00
                dc.b    $77, $77, $10, $11, $11, $00, $71, $33, $30, $10, $02, $02, $03, $01, $07, $19
                dc.b    $01, $00, $55, $22, $11, $15, $00, $70, $01, $03, $07, $70, $00, $11, $70, $01
                dc.b    $11, $11, $01, $10, $03, $33, $10, $03, $30, $02, $01, $30, $02, $01, $03, $02
                dc.b    $19, $08, $30, $08, $88, $80, $30, $08, $80, $00, $13, $33, $08, $88, $11, $11
                dc.b    $33, $00, $01, $11, $00, $33, $33, $33, $33, $33, $04, $02, $88, $80, $04, $06
                dc.b    $03, $23, $00, $08, $83, $11, $02, $06, $80, $00, $88, $88, $03, $11, $03, $01
                dc.b    $13, $02, $05, $30, $30, $00, $03, $33, $02, $01, $03, $02, $06, $33, $32, $22
                dc.b    $25, $11, $10, $02, $02, $11, $11, $02, $07, $03, $30, $10, $07, $30, $03, $01
                dc.b    $04, $01, $01, $06, $06, $01, $10, $23, $00, $32, $BB, $02, $01, $08, $0B, $12
                dc.b    $08, $00, $01, $30, $00, $80, $00, $03, $00, $08, $70, $11, $33, $00, $17, $01
                dc.b    $00, $52, $07, $01, $77, $02, $04, $01, $00, $51, $71, $04, $05, $10, $70, $05
                dc.b    $17, $77, $02, $0E, $51, $10, $01, $21, $9C, $C5, $67, $03, $80, $00, $01, $10
                dc.b    $00, $83, $02, $21, $08, $00, $10, $71, $30, $30, $00, $07, $13, $01, $07, $11
                dc.b    $71, $10, $71, $55, $17, $77, $15, $32, $60, $66, $49, $00, $10, $10, $00, $03
                dc.b    $07, $71, $38, $10, $31, $04, $32, $77, $12, $10, $31, $71, $77, $73, $17, $15
                dc.b    $11, $16, $71, $50, $55, $45, $DC, $91, $22, $03, $80, $00, $01, $30, $00, $83
                dc.b    $00, $10, $08, $00, $10, $71, $30, $30, $00, $07, $13, $01, $07, $11, $71, $10
                dc.b    $71, $55, $17, $77, $15, $12, $77, $00, $14, $03, $04, $77, $30, $00, $07, $02
                dc.b    $12, $10, $70, $11, $01, $00, $01, $00, $10, $00, $10, $03, $00, $01, $00, $30
                dc.b    $00, $10, $03, $03, $01, $30, $02, $02, $10, $30, $02, $12, $01, $03, $30, $11
                dc.b    $00, $10, $03, $00, $10, $01, $10, $33, $01, $00, $01, $00, $30, $10, $02, $07
                dc.b    $03, $01, $00, $45, $22, $03, $AA, $03, $01, $80, $05, $02, $70, $03, $05, $01
                dc.b    $51, $05, $01, $10, $02, $07, $07, $00, $08, $9C, $DD, $AB, $03, $02, $01, $08
                dc.b    $10, $01, $30, $02, $01, $80, $05, $04, $BB, $BA, $55, $61, $02, $02, $07, $70
                dc.b    $03, $05, $01, $00, $10, $70, $10, $02, $01, $01, $04, $05, $03, $01, $00, $10
                dc.b    $30, $04, $04, $10, $00, $66, $41, $02, $03, $70, $15, $11, $04, $03, $10, $07
                dc.b    $01, $04, $04, $30, $01, $00, $70, $04, $03, $03, $00, $10, $02, $03, $30, $00
                dc.b    $71, $02, $0F, $17, $10, $00, $31, $07, $11, $03, $01, $10, $70, $30, $33, $01
                dc.b    $00, $33, $04, $0B, $03, $01, $01, $00, $30, $10, $70, $30, $33, $22, $DC, $02
                dc.b    $01, $08, $05, $01, $03, $05, $12, $08, $00, $10, $30, $00, $80, $01, $03, $00
                dc.b    $08, $70, $10, $33, $00, $DA, $AB, $33, $03, $06, $02, $80, $03, $06, $01, $08
                dc.b    $04, $01, $80, $03, $02, $08, $88, $04, $04, $88, $88, $88, $30, $03, $01, $03
                dc.b    $04, $01, $30, $02, $02, $30, $03, $02, $0F, $03, $00, $33, $33, $00, $30, $00
                dc.b    $03, $80, $03, $00, $03, $80, $03, $01, $03, $01, $01, $02, $09, $30, $03, $00
                dc.b    $03, $00, $30, $01, $30, $33, $02, $03, $33, $00, $03, $07, $19, $30, $10, $11
                dc.b    $44, $76, $77, $05, $11, $17, $76, $51, $07, $61, $23, $00, $71, $33, $08, $17
                dc.b    $13, $08, $80, $01, $00, $80, $09, $10, $06, $65, $DD, $CC, $66, $67, $77, $11
                dc.b    $33, $32, $11, $77, $88, $00, $33, $10, $03, $02, $31, $08, $02, $02, $03, $80
                dc.b    $07, $17, $11, $14, $44, $55, $50, $51, $16, $77, $15, $17, $70, $11, $71, $70
                dc.b    $11, $BB, $00, $01, $3B, $00, $17, $00, $08, $07, $18, $30, $80, $67, $76, $74
                dc.b    $19, $77, $77, $11, $55, $11, $10, $77, $11, $33, $01, $10, $70, $80, $30, $01
                dc.b    $07, $00, $03, $02, $01, $08, $02, $01, $10, $04, $0A, $CC, $45, $11, $02, $10
                dc.b    $00, $70, $00, $01, $01, $02, $0E, $70, $10, $00, $03, $00, $01, $00, $10, $00
                dc.b    $70, $07, $01, $00, $07, $03, $08, $01, $70, $70, $15, $20, $25, $52, $30, $07
                dc.b    $17, $30, $03, $30, $00, $03, $00, $30, $03, $60, $30, $00, $31, $76, $13, $32
                dc.b    $01, $00, $71, $11, $03, $26, $60, $01, $03, $01, $70, $05, $0E, $30, $17, $00
                dc.b    $03, $01, $70, $00, $10, $10, $70, $07, $01, $11, $07, $02, $0C, $30, $10, $00
                dc.b    $70, $17, $67, $76, $62, $00, $07, $00, $03, $06, $01, $01, $08, $05, $10, $00
                dc.b    $07, $00, $01, $02, $06, $70, $00, $50, $11, $16, $77, $02, $12, $11, $77, $00
                dc.b    $11, $77, $11, $01, $77, $11, $03, $00, $01, $03, $30, $17, $10, $30, $88, $02
                dc.b    $01, $08, $02, $01, $03, $02, $17, $06, $74, $4C, $CD, $71, $10, $00, $10, $07
                dc.b    $71, $01, $77, $11, $07, $17, $11, $00, $10, $00, $03, $30, $00, $71, $02, $04
                dc.b    $01, $00, $30, $03, $03, $13, $55, $66, $77, $44, $77, $77, $71, $10, $11, $10
                dc.b    $07, $01, $33, $01, $10, $77, $00, $30, $01, $06, $05, $33, $30, $10, $33, $30
                dc.b    $02, $17, $22, $14, $47, $67, $50, $51, $16, $77, $15, $17, $70, $11, $71, $70
                dc.b    $11, $BB, $00, $01, $3B, $00, $17, $00, $08, $07, $18, $30, $80, $67, $76, $74
                dc.b    $19, $77, $77, $11, $55, $11, $10, $77, $11, $33, $01, $10, $70, $80, $30, $01
                dc.b    $07, $00, $03, $02, $01, $08, $02, $01, $10, $04, $14, $9C, $44, $66, $10, $51
                dc.b    $16, $77, $11, $17, $70, $11, $03, $70, $11, $03, $38, $01, $03, $38, $80, $02
                dc.b    $1A, $80, $00, $10, $30, $00, $08, $00, $08, $00, $80, $66, $5D, $DD, $44, $66
                dc.b    $67, $77, $11, $33, $32, $11, $77, $88, $00, $33, $10, $03, $02, $31, $08, $02
                dc.b    $02, $03, $80, $07, $10, $22, $55, $54, $11, $11, $67, $71, $50, $33, $32, $17
                dc.b    $15, $88, $00, $31, $70, $04, $01, $08, $03, $01, $80, $07, $07, $52, $30, $0B
                dc.b    $AC, $17, $03, $08, $02, $25, $10, $30, $88, $00, $71, $03, $30, $01, $07, $11
                dc.b    $03, $50, $10, $77, $61, $05, $01, $07, $71, $00, $01, $70, $10, $99, $45, $22
                dc.b    $30, $00, $80, $03, $31, $00, $08, $03, $32, $88, $88, $02, $29, $33, $33, $33
                dc.b    $00, $10, $00, $33, $00, $10, $33, $00, $08, $33, $00, $88, $80, $22, $23, $B8
                dc.b    $80, $11, $01, $03, $08, $00, $10, $10, $00, $33, $01, $01, $30, $00, $30, $10
                dc.b    $03, $00, $03, $00, $10, $88, $02, $01, $01, $06, $02, $31, $10, $08, $03, $88
                dc.b    $00, $30, $02, $13, $03, $00, $10, $33, $30, $01, $11, $10, $00, $01, $00, $10
                dc.b    $30, $03, $33, $16, $20, $15, $55, $02, $02, $10, $10, $04, $07, $70, $10, $10
                dc.b    $01, $07, $11, $70, $02, $0F, $77, $01, $55, $07, $01, $15, $00, $41, $15, $50
                dc.b    $00, $41, $14, $32, $19, $07, $11, $08, $00, $10, $71, $30, $01, $51, $07, $13
                dc.b    $15, $05, $10, $71, $50, $00, $51, $17, $02, $06, $05, $01, $11, $23, $34, $11
                dc.b    $03, $01, $10, $02, $08, $70, $00, $03, $10, $00, $01, $31, $07, $02, $14, $10
                dc.b    $70, $01, $05, $77, $01, $15, $50, $41, $15, $50, $00, $41, $62, $21, $99, $77
                dc.b    $10, $38, $8B, $02, $07, $3B, $33, $10, $11, $03, $B8, $01, $03, $10, $30, $10
                dc.b    $13, $88, $03, $01, $01, $22, $00, $30, $00, $77, $33, $30, $11, $66, $09, $02
                dc.b    $03, $33, $02, $13, $30, $80, $33, $10, $00, $08, $80, $01, $30, $80, $08, $00
                dc.b    $03, $08, $00, $11, $00, $33, $BB, $04, $01, $03, $04, $01, $33, $02, $15, $03
                dc.b    $00, $33, $33, $30, $33, $00, $03, $03, $00, $33, $31, $80, $30, $00, $10, $A2
                dc.b    $21, $11, $00, $10, $02, $02, $07, $01, $02, $01, $07, $03, $1C, $70, $01, $00
                dc.b    $77, $70, $10, $77, $77, $11, $07, $07, $01, $33, $71, $00, $13, $00, $01, $00
                dc.b    $12, $22, $00, $07, $00, $11, $77, $70, $70, $02, $0F, $07, $00, $10, $11, $00
                dc.b    $77, $01, $00, $10, $07, $70, $33, $01, $00, $07, $04, $04, $88, $33, $21, $67
                dc.b    $08, $03, $88, $00, $30, $02, $14, $03, $00, $10, $33, $30, $01, $11, $10, $00
                dc.b    $01, $00, $10, $00, $33, $33, $03, $3B, $88, $88, $03, $03, $02, $11, $38, $02
                dc.b    $19, $70, $03, $88, $00, $77, $10, $33, $88, $17, $71, $10, $33, $01, $70, $01
                dc.b    $10, $30, $10, $00, $10, $03, $32, $22, $30, $88, $02, $07, $31, $00, $80, $03
                dc.b    $01, $00, $80, $02, $10, $88, $00, $30, $00, $33, $33, $03, $33, $00, $33, $30
                dc.b    $00, $33, $00, $88, $88, $02, $05, $8B, $AC, $88, $00, $01, $02, $09, $80, $37
                dc.b    $65, $00, $80, $10, $00, $88, $03, $02, $12, $33, $30, $17, $15, $00, $33, $01
                dc.b    $00, $33, $08, $30, $00, $03, $3A, $21, $64, $00, $01, $05, $01, $03, $06, $02
                dc.b    $07, $10, $03, $02, $01, $30, $02, $01, $70, $03, $07, $07, $33, $3B, $AD, $DD
                dc.b    $00, $80, $04, $07, $88, $80, $30, $88, $00, $08, $03, $04, $01, $30, $02, $01
                dc.b    $10, $03, $02, $01, $03, $02, $04, $AA, $33, $32, $23, $02, $01, $01, $02, $02
                dc.b    $80, $30, $05, $05, $80, $08, $03, $11, $08, $04, $01, $80, $03, $01, $08, $02
                dc.b    $01, $30, $02, $02, $32, $30, $04, $01, $08, $02, $06, $30, $00, $80, $00, $03
                dc.b    $08, $03, $09, $30, $08, $00, $10, $00, $80, $88, $01, $03, $02, $06, $21, $01
                dc.b    $2A, $B8, $00, $01, $02, $01, $03, $02, $01, $03, $06, $02, $07, $10, $03, $01
                dc.b    $01, $03, $02, $70, $03, $02, $14, $07, $52, $77, $64, $44, $74, $61, $15, $00
                dc.b    $17, $77, $71, $50, $31, $71, $07, $15, $83, $06, $10, $0D, $09, $C5, $07, $02
                dc.b    $5C, $17, $01, $30, $80, $70, $0B, $01, $10, $05, $09, $30, $80, $00, $01, $03
                dc.b    $08, $BA, $AA, $33, $02, $05, $08, $00, $03, $00, $80, $02, $01, $08, $02, $01
                dc.b    $30, $03, $1C, $01, $80, $00, $03, $00, $80, $00, $30, $10, $80, $03, $01, $00
                dc.b    $42, $20, $02, $22, $06, $01, $03, $33, $00, $70, $11, $03, $50, $17, $70, $02
                dc.b    $03, $01, $16, $13, $03, $01, $61, $03, $01, $06, $02, $13, $11, $10, $17, $77
                dc.b    $66, $71, $03, $30, $01, $00, $88, $03, $00, $70, $00, $80, $00, $01, $80, $03
                dc.b    $2D, $38, $80, $00, $10, $13, $03, $17, $01, $66, $21, $71, $10, $01, $70, $77
                dc.b    $55, $00, $17, $01, $33, $01, $01, $77, $10, $00, $10, $11, $71, $10, $01, $10
                dc.b    $10, $07, $70, $01, $07, $00, $07, $00, $01, $70, $10, $70, $11, $11, $02, $10
                dc.b    $01, $11, $17, $70, $00, $11, $07, $00, $10, $30, $10, $70, $01, $33, $17, $70
                dc.b    $02, $04, $17, $01, $00, $13, $02, $09, $10, $61, $17, $11, $07, $71, $16, $76
                dc.b    $61, $04, $01, $03, $04, $01, $33, $02, $06, $03, $00, $33, $33, $30, $33, $02
                dc.b    $01, $03, $03, $08, $80, $00, $30, $00, $B3, $00, $03, $33, $10, $01, $33, $04
                dc.b    $01, $33, $04, $06, $33, $00, $33, $33, $33, $11, $03, $01, $11, $04, $01, $01
                dc.b    $03, $02, $01, $11, $03, $06, $10, $11, $11, $00, $01, $10, $03, $06, $01, $00
                dc.b    $33, $BB, $30, $06, $08, $02, $30, $88, $02, $01, $03, $04, $01, $30, $02, $01
                dc.b    $10, $03, $02, $01, $03, $02, $04, $11, $01, $56, $71, $03, $01, $77, $02, $01
                dc.b    $07, $02, $03, $10, $70, $11, $02, $01, $01, $03, $0D, $10, $03, $01, $01, $00
                dc.b    $30, $00, $10, $03, $00, $10, $00, $30, $02, $02, $10, $30, $02, $12, $01, $03
                dc.b    $30, $11, $00, $10, $03, $00, $10, $01, $10, $33, $01, $00, $01, $00, $30, $10
                dc.b    $02, $02, $03, $01, $03, $02, $30, $10, $02, $09, $30, $11, $00, $03, $01, $13
                dc.b    $33, $30, $10, $02, $01, $11, $02, $01, $11, $02, $1D, $13, $01, $11, $11, $01
                dc.b    $10, $33, $00, $11, $11, $33, $33, $BB, $11, $10, $30, $88, $30, $11, $03, $30
                dc.b    $03, $01, $10, $03, $00, $30, $01, $10, $02, $04, $10, $01, $30, $03, $02, $02
                dc.b    $13, $33, $02, $04, $20, $01, $67, $77, $03, $04, $77, $30, $00, $07, $02, $18
                dc.b    $10, $70, $11, $01, $00, $01, $00, $10, $00, $10, $03, $00, $01, $00, $30, $00
                dc.b    $10, $03, $00, $A2, $16, $02, $54, $83, $04, $01, $07, $02, $13, $31, $71, $07
                dc.b    $15, $17, $70, $10, $00, $70, $01, $71, $50, $41, $77, $15, $00, $05, $11, $50
                dc.b    $02, $0B, $50, $55, $54, $00, $05, $01, $10, $00, $05, $10, $11, $02, $05, $01
                dc.b    $BB, $00, $51, $1B, $02, $07, $10, $00, $0A, $05, $07, $1A, $A7, $02, $0E, $AA
                dc.b    $07, $41, $16, $EE, $44, $77, $11, $55, $00, $70, $77, $11, $50, $02, $0D, $70
                dc.b    $15, $00, $77, $77, $00, $77, $11, $17, $00, $71, $0B, $B0, $02, $01, $B0, $02
                dc.b    $1C, $16, $DC, $C5, $54, $06, $01, $03, $33, $10, $70, $11, $03, $00, $17, $70
                dc.b    $00, $01, $01, $16, $13, $70, $11, $10, $61, $07, $77, $01, $16, $02, $0E, $77
                dc.b    $01, $76, $66, $77, $77, $71, $11, $77, $01, $07, $77, $00, $10, $02, $0A, $11
                dc.b    $01, $00, $11, $00, $11, $01, $00, $01, $11, $02, $37, $11, $11, $00, $01, $11
                dc.b    $11, $00, $01, $10, $17, $10, $00, $11, $07, $10, $10, $10, $11, $11, $11, $11
                dc.b    $00, $11, $11, $11, $10, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
                dc.b    $11, $66, $76, $67, $10, $71, $11, $07, $00, $07, $77, $70, $00, $11, $11, $11
                dc.b    $11, $10, $03, $37, $11, $01, $01, $01, $11, $11, $11, $11, $11, $11, $11, $11
                dc.b    $31, $01, $01, $32, $01, $10, $00, $33, $82, $76, $10, $00, $08, $57, $71, $00
                dc.b    $80, $82, $67, $10, $38, $80, $07, $01, $13, $03, $17, $30, $36, $21, $74, $03
                dc.b    $15, $22, $51, $12, $33, $33, $00, $03, $33, $00, $33, $02, $17, $33, $30, $33
                dc.b    $08, $88, $03, $00, $38, $80, $80, $30, $03, $08, $B3, $30, $10, $30, $33, $00
                dc.b    $10, $03, $33, $16, $04, $01, $30, $03, $01, $03, $03, $2A, $33, $00, $01, $00
                dc.b    $01, $00, $10, $74, $01, $11, $07, $00, $11, $07, $70, $40, $00, $16, $56, $35
                dc.b    $00, $10, $31, $70, $00, $01, $10, $00, $11, $00, $07, $15, $00, $10, $01, $50
                dc.b    $33, $01, $01, $50, $00, $30, $04, $0A, $17, $10, $11, $46, $60, $73, $05, $17
                dc.b    $71, $11, $02, $02, $2B, $33, $02, $0A, $38, $88, $05, $10, $13, $88, $00, $53
                dc.b    $71, $33, $02, $02, $43, $61, $03, $06, $43, $34, $44, $44, $44, $17, $02, $07
                dc.b    $07, $01, $70, $00, $70, $00, $07, $03, $02, $10, $70, $02, $1B, $01, $07, $70
                dc.b    $30, $00, $10, $70, $03, $00, $01, $10, $55, $66, $66, $67, $77, $77, $77, $77
                dc.b    $01, $11, $11, $00, $10, $33, $00, $11, $02, $01, $33, $04, $01, $33, $04, $02
                dc.b    $10, $30, $02, $04, $32, $21, $11, $11, $0D, $05, $53, $50, $00, $43, $16, $02
                dc.b    $02, $17, $71, $02, $03, $54, $67, $15, $02, $03, $07, $77, $22, $02, $01, $01
                dc.b    $02, $03, $51, $70, $10, $02, $01, $07, $02, $03, $05, $10, $71, $02, $02, $51
                dc.b    $07, $03, $01, $11, $04, $04, $19, $99, $14, $47, $02, $20, $80, $03, $38, $00
                dc.b    $08, $00, $03, $80, $00, $80, $00, $38, $00, $08, $11, $03, $88, $00, $77, $11
                dc.b    $33, $88, $11, $77, $11, $23, $50, $11, $77, $76, $00, $01, $05, $02, $07, $05
                dc.b    $06, $01, $70, $06, $01, $07, $05, $04, $32, $76, $60, $10, $02, $02, $01, $11
                dc.b    $02, $02, $01, $11, $02, $02, $11, $11, $02, $02, $11, $11, $02, $0E, $11, $11
                dc.b    $00, $01, $11, $11, $00, $01, $11, $11, $32, $22, $32, $66, $1C, $04, $43, $32
                dc.b    $22, $66, $02, $02, $01, $11, $02, $02, $01, $11, $03, $01, $11, $03, $01, $11
                dc.b    $03, $01, $11, $03, $01, $11, $03, $25, $11, $71, $00, $10, $11, $11, $11, $11
                dc.b    $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
                dc.b    $11, $11, $11, $11, $11, $11, $11, $11, $11, $23, $26, $67, $10, $0D, $01, $50
                dc.b    $03, $01, $01, $04, $01, $07, $05, $2C, $22, $66, $71, $01, $00, $11, $11, $11
                dc.b    $00, $11, $11, $11, $00, $11, $11, $11, $00, $01, $11, $11, $00, $01, $11, $11
                dc.b    $00, $01, $11, $11, $00, $01, $11, $11, $21, $02, $BA, $32, $00, $03, $80, $88
                dc.b    $03, $10, $0B, $88, $02, $02, $03, $33, $03, $05, $30, $00, $30, $08, $03, $03
                dc.b    $0B, $80, $00, $01, $38, $08, $22, $30, $65, $99, $30, $10, $02, $05, $83, $00
                dc.b    $70, $00, $80, $03, $05, $23, $10, $04, $00, $11, $03, $01, $31, $03, $02, $83
                dc.b    $10, $02, $04, $80, $32, $13, $45, $03, $01, $70, $02, $01, $01, $03, $01, $30
                dc.b    $11, $04, $52, $23, $33, $24, $04, $01, $17, $03, $02, $50, $01, $05, $08, $08
                dc.b    $01, $00, $03, $00, $05, $70, $10, $04, $07, $38, $11, $61, $10, $03, $00, $30
                dc.b    $03, $01, $03, $02, $01, $88, $04, $02, $80, $30, $06, $02, $08, $03, $04, $15
                dc.b    $30, $AD, $BB, $00, $03, $17, $10, $33, $00, $01, $01, $10, $33, $00, $10, $01
                dc.b    $10, $00, $01, $00, $01, $02, $01, $11, $04, $01, $10, $03, $05, $01, $33, $30
                dc.b    $01, $16, $05, $05, $30, $10, $00, $33, $01, $02, $14, $11, $10, $00, $70, $70
                dc.b    $00, $07, $01, $77, $77, $70, $15, $07, $01, $01, $50, $33, $45, $40, $54, $03
                dc.b    $01, $17, $02, $01, $05, $04, $01, $10, $03, $01, $57, $03, $01, $04, $08, $20
                dc.b    $33, $44, $44, $33, $11, $67, $70, $77, $03, $31, $17, $70, $03, $8B, $31, $17
                dc.b    $10, $B8, $8B, $31, $71, $03, $B8, $83, $47, $61, $03, $B3, $04, $17, $11, $11
                dc.b    $02, $01, $70, $07, $01, $07, $02, $01, $01, $03, $01, $50, $0E, $24, $22, $27
                dc.b    $76, $01, $00, $01, $11, $11, $00, $01, $11, $11, $00, $01, $11, $11, $00, $11
                dc.b    $11, $11, $00, $11, $11, $11, $00, $11, $11, $11, $00, $11, $11, $11, $22, $23
                dc.b    $23, $26, $1C, $04, $44, $33, $22, $27, $03, $01, $01, $03, $01, $01, $03, $01
                dc.b    $01, $03, $01, $01, $03, $01, $01, $03, $01, $01, $04, $24, $66, $11, $10, $10
                dc.b    $00, $01, $11, $11, $00, $01, $11, $11, $00, $01, $11, $11, $00, $11, $11, $11
                dc.b    $00, $11, $11, $11, $00, $11, $11, $11, $00, $11, $11, $11, $22, $77, $60, $10
                dc.b    $06, $01, $07, $08, $02, $70, $05, $06, $03, $07, $00, $01, $02, $04, $37, $77
                dc.b    $76, $76, $02, $02, $11, $11, $02, $03, $01, $11, $01, $02, $05, $11, $00, $11
                dc.b    $00, $01, $02, $12, $11, $00, $07, $77, $00, $10, $71, $11, $77, $01, $DC, $CC
                dc.b    $DD, $AA, $33, $33, $33, $33, $08, $19, $03, $03, $03, $03, $33, $33, $33, $33
                dc.b    $33, $33, $33, $33, $33, $33, $33, $33, $03, $33, $03, $33, $00, $30, $00, $30
                dc.b    $30, $03, $03, $30, $00, $30, $03, $01, $30, $0D, $05, $88, $88, $8B, $AC, $88
                dc.b    $04, $01, $80, $03, $01, $80, $02, $06, $88, $00, $30, $00, $33, $33, $03, $01
                dc.b    $33, $02, $13, $33, $00, $30, $00, $11, $45, $21, $17, $00, $50, $00, $10, $00
                dc.b    $01, $70, $01, $00, $05, $17, $03, $02, $01, $77, $02, $2A, $01, $77, $00, $05
                dc.b    $17, $01, $00, $01, $70, $10, $19, $9D, $A2, $33, $08, $00, $08, $00, $30, $80
                dc.b    $00, $88, $13, $38, $80, $00, $01, $03, $38, $88, $77, $11, $13, $33, $66, $10
                dc.b    $01, $10, $00, $01, $11, $10, $04, $01, $33, $04, $01, $30, $02, $02, $80, $03
                dc.b    $02, $08, $80, $33, $00, $01, $33, $00, $01, $10, $02, $02, $01, $11, $04, $04
                dc.b    $01, $16, $72, $22, $02, $01, $15, $05, $01, $10, $04, $0E, $70, $15, $00, $77
                dc.b    $00, $50, $00, $77, $70, $40, $00, $11, $07, $04, $02, $03, $11, $67, $34, $02
                dc.b    $20, $01, $17, $30, $01, $00, $01, $03, $01, $11, $00, $80, $30, $10, $61, $08
                dc.b    $03, $31, $77, $00, $88, $00, $17, $88, $88, $00, $01, $55, $41, $12, $22, $70
                dc.b    $15, $02, $01, $07, $07, $02, $07, $15, $02, $01, $71, $03, $01, $01, $03, $01
                dc.b    $70, $03, $04, $34, $50, $54, $43, $1C, $0C, $32, $22, $66, $71, $00, $01, $11
                dc.b    $11, $00, $01, $11, $11, $02, $02, $11, $11, $02, $02, $11, $11, $02, $02, $11
                dc.b    $11, $02, $02, $01, $11, $02, $06, $01, $11, $32, $76, $60, $11, $1C, $04, $54
                dc.b    $17, $71, $10, $1C, $24, $66, $71, $00, $10, $11, $11, $11, $11, $01, $11, $11
                dc.b    $11, $01, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $01, $11, $11
                dc.b    $11, $01, $11, $11, $11, $23, $23, $23, $23, $1C, $04, $32, $22, $22, $32, $02
                dc.b    $02, $01, $11, $02, $02, $11, $11, $02, $02, $11, $11, $02, $21, $11, $11, $00
                dc.b    $01, $11, $11, $00, $01, $11, $11, $00, $01, $11, $11, $32, $26, $76, $67, $00
                dc.b    $51, $16, $77, $05, $17, $70, $11, $00, $70, $11, $BB, $51, $01, $3B, $03, $01
                dc.b    $08, $07, $18, $30, $80, $10, $76, $74, $19, $77, $77, $11, $55, $11, $10, $77
                dc.b    $11, $33, $01, $10, $70, $80, $30, $01, $07, $00, $03, $02, $01, $08, $02, $01
                dc.b    $10, $04, $05, $88, $88, $30, $16, $08, $02, $01, $70, $04, $0E, $08, $00, $01
                dc.b    $00, $30, $88, $30, $00, $03, $33, $17, $15, $11, $11, $02, $10, $07, $70, $17
                dc.b    $15, $34, $17, $10, $67, $00, $07, $01, $03, $00, $10, $00, $38, $0F, $01, $38
                dc.b    $04, $05, $11, $51, $10, $00, $88, $04, $03, $03, $00, $03, $03, $01, $10, $03
                dc.b    $05, $11, $00, $80, $30, $01, $06, $14, $03, $00, $88, $83, $33, $00, $88, $03
                dc.b    $33, $30, $80, $88, $80, $03, $38, $00, $08, $80, $13, $80, $02, $0C, $01, $3B
                dc.b    $88, $83, $10, $11, $33, $31, $01, $10, $11, $10, $02, $02, $07, $33, $09, $02
                dc.b    $10, $70, $03, $13, $01, $00, $01, $07, $05, $00, $10, $70, $10, $00, $77, $11
                dc.b    $50, $00, $66, $77, $22, $23, $11, $02, $11, $10, $77, $61, $11, $07, $70, $06
                dc.b    $67, $70, $17, $71, $01, $11, $01, $07, $10, $55, $02, $0B, $01, $00, $11, $07
                dc.b    $01, $00, $07, $64, $45, $00, $70, $03, $02, $01, $50, $02, $01, $15, $03, $01
                dc.b    $50, $11, $02, $05, $44, $1C, $04, $33, $22, $37, $76, $02, $02, $11, $11, $02
                dc.b    $02, $01, $11, $02, $02, $01, $11, $02, $02, $11, $11, $02, $02, $11, $11, $02
                dc.b    $02, $01, $11, $02, $06, $01, $11, $33, $27, $67, $10, $1C, $04, $05, $41, $77
                dc.b    $11, $1C, $24, $27, $76, $01, $10, $00, $11, $11, $11, $00, $11, $11, $11, $01
                dc.b    $11, $11, $11, $01, $11, $11, $11, $00, $11, $11, $11, $00, $11, $11, $11, $00
                dc.b    $11, $11, $11, $22, $23, $23, $23, $3C, $07, $54, $32, $21, $11, $00, $01, $03
                dc.b    $03, $01, $10, $02, $17, $70, $00, $30, $51, $00, $01, $03, $00, $07, $00, $10
                dc.b    $05, $10, $00, $13, $05, $17, $01, $30, $9C, $52, $20, $32, $08, $0C, $88, $00
                dc.b    $30, $10, $30, $00, $30, $11, $30, $00, $03, $30, $03, $0C, $03, $08, $88, $80
                dc.b    $00, $5D, $AB, $B0, $24, $07, $10, $38, $03, $01, $3B, $02, $05, $11, $03, $00
                dc.b    $07, $70, $02, $0C, $10, $00, $13, $00, $51, $07, $01, $65, $05, $11, $66, $50
                dc.b    $11, $06, $0A, $00, $10, $00, $80, $00, $11, $60, $80, $60, $01, $05, $81, $D3
                dc.b    $2C, $00, $2D, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $80
                dc.b    $33, $80, $93, $00, $10, $00, $10, $00, $B0, $00, $12, $00, $10, $00, $10, $00
                dc.b    $70, $00, $70, $00, $DD, $08, $DE, $80, $90, $88, $91, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $80, $9D, $80, $9F, $00, $10, $00, $10, $80
                dc.b    $53, $80, $51, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00
                dc.b    $1E, $00, $12, $00, $10, $00, $10, $00, $1E, $00, $16, $00, $10, $00, $10, $00
                dc.b    $3F, $00, $39, $00, $10, $00, $10, $00, $12, $00, $16, $00, $10, $00, $10, $00
                dc.b    $F7, $00, $30, $00, $10, $00, $10, $80, $99, $80, $5A, $00, $10, $00, $10, $80
                dc.b    $71, $80, $73, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00
                dc.b    $1E, $00, $12, $00, $10, $00, $10, $00, $1E, $00, $16, $00, $10, $00, $10, $00
                dc.b    $DA, $00, $D4, $00, $10, $00, $10, $00, $97, $00, $70, $00, $10, $00, $10, $00
                dc.b    $70, $00, $30, $00, $10, $00, $10, $80, $52, $80, $FD, $00, $10, $00, $10, $00
                dc.b    $12, $00, $16, $00, $10, $00, $10, $00, $16, $00, $12, $00, $10, $00, $10, $00
                dc.b    $12, $00, $1E, $00, $10, $00, $10, $00, $1E, $00, $12, $00, $10, $00, $10, $00
                dc.b    $12, $00, $16, $00, $10, $00, $10, $80, $7C, $80, $74, $00, $10, $00, $10, $00
                dc.b    $1E, $00, $12, $00, $10, $00, $10, $00, $58, $00, $58, $00, $10, $00, $10, $00
                dc.b    $12, $00, $16, $00, $10, $00, $10, $00, $16, $00, $12, $00, $10, $00, $10, $00
                dc.b    $12, $00, $1E, $00, $10, $00, $10, $00, $1E, $00, $12, $00, $10, $00, $10, $00
                dc.b    $B2, $00, $B6, $00, $BE, $00, $10, $00, $B8, $00, $12, $00, $10, $00, $10, $00
                dc.b    $10, $00, $11, $00, $10, $00, $10, $00, $DC, $00, $DD, $00, $10, $00, $10, $00
                dc.b    $12, $00, $16, $00, $10, $00, $10, $00, $16, $00, $12, $00, $10, $00, $10, $00
                dc.b    $16, $00, $12, $00, $10, $00, $10, $00, $14, $00, $1C, $00, $10, $00, $10, $00
                dc.b    $1E, $00, $12, $00, $10, $00, $10, $00, $3A, $00, $FF, $00, $10, $00, $10, $00
                dc.b    $9E, $00, $5B, $00, $10, $00, $10, $00, $5D, $00, $5F, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $00, $D7, $00, $D5, $00, $10, $00, $10, $00
                dc.b    $D1, $00, $32, $00, $10, $00, $D3, $00, $12, $00, $30, $00, $93, $00, $91, $00
                dc.b    $38, $00, $F7, $00, $DD, $00, $10, $00, $12, $00, $DD, $00, $10, $00, $DF, $00
                dc.b    $16, $00, $16, $00, $10, $00, $10, $00, $34, $00, $34, $00, $10, $00, $10, $00
                dc.b    $12, $00, $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $00, $10, $00
                dc.b    $F4, $00, $35, $03, $03, $C0, $08, $C0, $02, $02, $08, $C0, $03, $01, $C3, $03
                dc.b    $57, $75, $00, $B7, $20, $6B, $20, $6A, $00, $03, $00, $03, $20, $46, $20, $47
                dc.b    $00, $20, $00, $30, $80, $30, $80, $84, $00, $B4, $00, $10, $00, $B5, $00, $B7
                dc.b    $00, $B7, $00, $B5, $80, $A6, $80, $A6, $00, $30, $00, $30, $00, $32, $00, $32
                dc.b    $00, $30, $00, $30, $00, $6C, $00, $12, $00, $10, $00, $6E, $00, $6C, $00, $6C
                dc.b    $00, $70, $00, $71, $00, $2C, $00, $2D, $00, $10, $00, $10, $00, $3E, $00, $3E
                dc.b    $00, $10, $00, $10, $00, $D8, $00, $30, $03, $07, $10, $00, $EA, $00, $33, $00
                dc.b    $10, $03, $03, $FA, $00, $22, $03, $05, $10, $00, $DA, $00, $32, $05, $03, $DA
                dc.b    $00, $32, $03, $05, $10, $00, $DA, $00, $22, $04, $04, $61, $DA, $00, $33, $03
                dc.b    $07, $10, $61, $FA, $00, $23, $00, $10, $03, $1B, $32, $00, $13, $00, $10, $00
                dc.b    $10, $00, $3E, $00, $3E, $00, $10, $00, $1B, $00, $2D, $00, $20, $00, $10, $00
                dc.b    $10, $00, $11, $00, $16, $04, $04, $01, $9D, $01, $9D, $0B, $01, $0F, $03, $03
                dc.b    $0F, $08, $0F, $02, $02, $08, $F8, $03, $80, $A7, $10, $00, $C7, $00, $D3, $00
                dc.b    $F4, $00, $10, $00, $10, $00, $24, $00, $23, $00, $22, $00, $21, $00, $12, $00
                dc.b    $1E, $00, $10, $00, $10, $08, $1F, $08, $1F, $08, $11, $00, $10, $00, $2E, $08
                dc.b    $20, $08, $21, $08, $22, $00, $12, $00, $16, $00, $10, $00, $10, $08, $F7, $08
                dc.b    $F7, $00, $10, $00, $10, $00, $16, $00, $12, $00, $10, $00, $10, $00, $12, $00
Ghz_Flower_1:            ; Offset_0x028000:
                incbin  'data\ghz\flower_1.dat'
Ghz_Flower_2:            ; Offset_0x028080: 
                incbin  'data\ghz\flower_2.dat'
Ghz_Flower_3:            ; Offset_0x028100:  
                incbin  'data\ghz\flower_3.dat'
Ghz_Flower_4:            ; Offset_0x028180:         
                incbin  'data\ghz\flower_4.dat'                 
Ghz_Dyn_Wall:            ; Offset_0x028200:
                incbin  'data\ghz\dyn_wall.dat'                
Hill_Top_Background:     ; Offset_0x028300:
                incbin  'data\htz\backgnd.nem'
Hill_Top_Background_Unc: ; Offset_0x028C2A:                
                incbin  'data\htz\backgnd.dat'                    
Mz_Spinnig_Cylinder:     ; Offset_0x02902A:
                incbin  'data\mz\spin_cyl.dat'
Mz_Lava:                 ; Offset_0x02A02A:
                incbin  'data\mz\lava.dat'  
Mz_Pistons:              ; Offset_0x02A06A:
                incbin  'data\mz\pistons.dat' 
Mz_Drills:               ; Offset_0x02A86A:
                incbin  'data\mz\drills.dat'                                               
HPz_Dyn_Background:      ; Offset_0x02B06A: Unused - Left over from previous build
                incbin  'data\hpz\backgnd.dat' 
HPz_Orbs:                ; Offset_0x02B46A:
                incbin  'data\hpz\orbs.dat' 
OOz_Red_Balls:           ; Offset_0x02B76A:
                incbin  'data\ooz\red_ball.dat'  
OOz_Rotating_Square_1:   ; Offset_0x02B8EA:
                incbin  'data\ooz\r_squar1.dat'                             
OOz_Rotating_Square_2:   ; Offset_0x02BAEA:
                incbin  'data\ooz\r_squar2.dat'  
OOz_Oil_1:               ; Offset_0x02BCEA:
                incbin  'data\ooz\oil_1.dat'   
OOz_Oil_2:               ; Offset_0x02C4EA:
                incbin  'data\ooz\oil_2.dat'                                 
CPz_Dyn_Background:      ; Offset_0x02CCEA:
                incbin  'data\cpz\backgnd.dat'  
NGHz_Water_Falls_1:      ; Offset_0x02CEEA:
                incbin  'data\nghz\water_f1.dat'                
NGHz_Water_Falls_2:      ; Offset_0x02CFEA:
                incbin  'data\nghz\water_f2.dat'                 
NGHz_Water_Falls_3:      ; Offset_0x02D0EA:
                incbin  'data\nghz\water_f3.dat' 
;=============================================================================== 
; Colision Array
; [ Begin ]
;===============================================================================                 
AngleMap: ; Offset_0x02D1EA:  
                incbin  'data\all\anglemap.dat' 
Colision_Array_1: ; Offset_0x02D2EA: 
                incbin  'data\all\c_array1.dat' 
Colision_Array_2: ; Offset_0x02E2EA: 
                incbin  'data\all\c_array2.dat' 
;=============================================================================== 
; Colision Array
; [ End ]
;===============================================================================                  
;=============================================================================== 
; 16x16 Colision Index
; [ Begin ]
;===============================================================================                                          
Green_Hill_Colision_1:     ; Offset_0x02F2EA:                
                incbin  'data\ghz\ghz_col1.dat'
Green_Hill_Colision_2:     ; Offset_0x02F5EA:                
                incbin  'data\ghz\ghz_col2.dat'
Wood_Colision:             ; Offset_0x02F8EA:
                incbin  'data\wz\wz_col.dat' 
Metropolis_Colision:       ; Offset_0x02FBEA:
                incbin  'data\mz\mz_col.dat' 
Hidden_Palace_Colision_1:  ; Offset_0x02FEEA:                
                incbin  'data\hpz\hpz_col1.dat'
Hidden_Palace_Colision_2:  ; Offset_0x0301EA:                
                incbin  'data\hpz\hpz_col2.dat' 
Oil_Ocean_Colision:        ; Offset_0x0304EA:                
                incbin  'data\ooz\ooz_col.dat' 
Dust_Hill_Colision:        ; Offset_0x0307EA:                
                incbin  'data\dhz\dhz_col.dat'  
Casino_Night_Colision_1:   ; Offset_0x030AEA:                
                incbin  'data\cnz\cnz_col1.dat'  
Casino_Night_Colision_2:   ; Offset_0x030DEA:                
                incbin  'data\cnz\cnz_col2.dat'  
Chemical_Plant_Colision_1: ; Offset_0x0310EA:                
                incbin  'data\cpz\cpz_col1.dat' 
Chemical_Plant_Colision_2: ; Offset_0x0313EA:                
                incbin  'data\cpz\cpz_col2.dat' 
Neo_Green_Hill_Colision_1: ; Offset_0x0316EA:                
                incbin  'data\nghz\nghzcol1.dat'
Neo_Green_Hill_Colision_2: ; Offset_0x0319EA:                
                incbin  'data\nghz\nghzcol2.dat'                                                                                                                                                                              
;=============================================================================== 
; 16x16 Colision Index
; [ End ]
;===============================================================================                  
;=============================================================================== 
; Special Stage Layout
; [ Begin ]
;===============================================================================        
Special_Stage_1: ; Offset_0x031CEA:
                IncBin  ".\data\ss\stage_1.eni"  
Special_Stage_2: ; Offset_0x031F64:
                IncBin  ".\data\ss\stage_2.eni"  
Special_Stage_3: ; Offset_0x032376:        
                IncBin  ".\data\ss\stage_3.eni"  
Special_Stage_4: ; Offset_0x0326D2:
                IncBin  ".\data\ss\stage_4.eni"  
Special_Stage_5: ; Offset_0x032BAC:
                IncBin  ".\data\ss\stage_5.eni"  
Special_Stage_6: ; Offset_0x03305C:
                IncBin  ".\data\ss\stage_6.eni"                                                               
;=============================================================================== 
; Special Stage Layout
; [ End ]
;===============================================================================  
;=============================================================================== 
; Level Layout
; [ Begin ]
;===============================================================================                  
Level_Layout: ; Offset_0x03334E:                       
                dc.w    Ghz_1_Foreground-Level_Layout,Ghz_Background-Level_Layout ; $0000
                dc.w    Ghz_2_Foreground-Level_Layout,Ghz_Background-Level_Layout ; $0001                
                dc.w    Null_Layout_1-Level_Layout,Null_Layout_1-Level_Layout ; $0100
                dc.w    Null_Layout_1-Level_Layout,Null_Layout_1-Level_Layout ; $0101                
                dc.w    Wz_1_Foreground-Level_Layout,Wz_1_Background-Level_Layout ; $0200
                dc.w    Wz_2_Foreground-Level_Layout,Wz_2_Background-Level_Layout ; $0201
                dc.w    Null_Layout_2-Level_Layout,Null_Layout_2-Level_Layout ; $0300
                dc.w    Null_Layout_2-Level_Layout,Null_Layout_2-Level_Layout ; $0301
                dc.w    Mz_1_Foreground-Level_Layout,Mz_Background-Level_Layout ; $0400
                dc.w    Mz_2_Foreground-Level_Layout,Mz_Background-Level_Layout ; $0401
                dc.w    Mz_3_Foreground-Level_Layout,Mz_Background-Level_Layout ; $0500
                dc.w    Mz_3_Foreground-Level_Layout,Mz_Background-Level_Layout ; $0501                  
                dc.w    Null_Layout_3-Level_Layout,Null_Layout_3-Level_Layout ; $0600
                dc.w    Null_Layout_3-Level_Layout,Null_Layout_3-Level_Layout ; $0601
                dc.w    Htz_1_Foreground-Level_Layout,Htz_1_Background-Level_Layout ; $0700
                dc.w    Htz_2_Foreground-Level_Layout,Htz_2_Background-Level_Layout ; $0701
                dc.w    Hpz_Foreground-Level_Layout,Hpz_Background-Level_Layout ; $0800
                dc.w    Hpz_Foreground-Level_Layout,Hpz_Background-Level_Layout ; $0801
                dc.w    Null_Layout_4-Level_Layout,Null_Layout_4-Level_Layout ; $0900
                dc.w    Null_Layout_4-Level_Layout,Null_Layout_4-Level_Layout ; $0901
                dc.w    OOz_1_Foreground-Level_Layout,OOz_Background-Level_Layout ; $0A00
                dc.w    OOz_2_Foreground-Level_Layout,OOz_Background-Level_Layout ; $0A01
                dc.w    Dhz_1_Foreground-Level_Layout,Dhz_Background-Level_Layout ; $0B00
                dc.w    Dhz_2_Foreground-Level_Layout,Dhz_Background-Level_Layout ; $0B01
                dc.w    Cnz_1_Foreground-Level_Layout,Cnz_1_Background-Level_Layout ; $0C00
                dc.w    Cnz_2_Foreground-Level_Layout,Cnz_2_Background-Level_Layout ; $0C01
                dc.w    Cpz_1_Foreground-Level_Layout,Cpz_Background-Level_Layout ; $0D00
                dc.w    Cpz_2_Foreground-Level_Layout,Cpz_Background-Level_Layout ; $0D01
                dc.w    Null_Layout_5-Level_Layout,Null_Layout_5-Level_Layout ; $0E00
                dc.w    Null_Layout_5-Level_Layout,Null_Layout_5-Level_Layout ; $0E01
                dc.w    Nghz_1_Foreground-Level_Layout,Nghz_1_Background-Level_Layout ; $0F00
                dc.w    Nghz_2_Foreground-Level_Layout,Nghz_2_Background-Level_Layout ; $0F01
                dc.w    Null_Layout_6-Level_Layout,Null_Layout_6-Level_Layout ; $1000
                dc.w    Null_Layout_6-Level_Layout,Null_Layout_6-Level_Layout ; $1001                     
Ghz_1_Foreground:  ; Offset_0x0333D6:               
                incbin  'data\ghz\foreact1.dat'
Ghz_2_Foreground:  ; Offset_0x033BD8:                
                incbin  'data\ghz\foreact2.dat'

Ghz_Background:    ; Offset_0x0343DA:            
                dc.b    $03, $01 ; x / y
                dc.b    $F8, $F9, $FA, $FB, $FC, $FD, $FE, $FF                 
Null_Layout_1:     ; Offset_0x0343E4:             
                dc.b    $00, $00, $00, $00                  
Wz_1_Foreground:   ; Offset_0x0343E8:           
                incbin  'data\wz\foreact1.dat'
Wz_2_Foreground:   ; Offset_0x034BEA: 
                incbin  'data\wz\foreact2.dat'
Wz_1_Background:   ; Offset_0x0353EC: 
                incbin  'data\wz\backact1.dat'   
Wz_2_Background:   ; Offset_0x035BEE:  
                incbin  'data\wz\backact2.dat'
Null_Layout_2:     ; Offset_0x0363F0:             
                dc.b    $00, $00, $00, $00                  
Mz_1_Foreground:   ; Offset_0x0363F4: 
                incbin  'data\mz\foreact1.dat'                                    
Mz_2_Foreground:   ; Offset_0x036BF6: 
                incbin  'data\mz\foreact2.dat'   
Mz_Background:     ; Offset_0x0373F8:            
                dc.b    $05, $05 ; x / y
                dc.b    $60, $61, $62, $63, $64, $F2, $70, $71, $72, $73, $74, $60, $E0, $E1, $E2, $E3
                dc.b    $E4, $70, $F0, $F1, $F2, $F3, $F4, $E2, $62, $61, $60, $63, $64, $62, $72, $71
                dc.b    $70, $73, $74, $72                
Mz_3_Foreground:   ; Offset_0x03741E:  
                incbin  'data\mz\foreact3.dat'               
Null_Layout_3:     ; Offset_0x037C20:            
                dc.b    $00, $00, $00, $00                                                
Htz_1_Foreground:  ; Offset_0x037C24: 
                incbin  'data\htz\foreact1.dat'
Htz_2_Foreground:  ; Offset_0x038426:  
                incbin  'data\htz\foreact2.dat'              
Htz_1_Background:  ; Offset_0x038C28:              
                incbin  'data\htz\backact1.dat'                                 
Htz_2_Background:  ; Offset_0x03942A:               
                incbin  'data\htz\backact2.dat'                              
Hpz_Foreground:    ; Offset_0x039C2C:  
                incbin  'data\hpz\foreact1.dat'                   
Hpz_Background:    ; Offset_0x03942E:                             
                dc.b    $07, $08 ; x / y
                dc.b    $A3, $A3, $A3, $A3, $A3, $A3, $A3, $A3, $A0, $A1, $A0, $A1, $A0, $A1, $A0, $A1
                dc.b    $C0, $C1, $C2, $C3, $C4, $C5, $C6, $C7, $D0, $D1, $D2, $D3, $D4, $D5, $D6, $D7
                dc.b    $E0, $E1, $E2, $E3, $E4, $E5, $E6, $E7, $B0, $B1, $B0, $B1, $B0, $B1, $B0, $B1
                dc.b    $A2, $A2, $A2, $A2, $A2, $A2, $A2, $A2, $B2, $B2, $B2, $B2, $B2, $B2, $B2, $B2
                dc.b    $B2, $B2, $B2, $B2, $B2, $B2, $B2, $B2                  
Null_Layout_4:     ; Offset_0x03A478:            
                dc.b    $00, $00, $00, $00                                          
OOz_1_Foreground:  ; Offset_0x03A47C:  
                incbin  'data\ooz\foreact1.dat'                        
OOz_2_Foreground:  ; Offset_0x03AC7E:   
                incbin  'data\ooz\foreact2.dat'                         
OOz_Background:    ; Offset_0x03B480:             
                dc.b    $05, $03  ; x / y
                dc.b    $00, $00, $00, $00, $00, $00, $02, $4F, $02, $1F, $02, $1F, $49, $4A, $4B, $23
                dc.b    $54, $6C, $4C, $4D, $4E, $32, $5A, $74                  
Dhz_1_Foreground:  ; Offset_0x03B49A:  
                incbin  'data\dhz\foreact1.dat'                
Dhz_2_Foreground:  ; Offset_0x03BC9C:               
                incbin  'data\dhz\foreact2.dat'                
Dhz_Background:    ; Offset_0x03C49E:              
                dc.b    $03, $03 ; x / y
                dc.b    $58, $5C, $63, $64, $65, $66, $6E, $6F, $73, $80, $86, $A3, $B0, $E7, $E8, $E9   
Cnz_1_Foreground:  ; Offset_0x03C4B0:  
                incbin  'data\cnz\foreact1.dat' 
Cnz_2_Foreground:  ; Offset_0x03CCB2:          
                incbin  'data\cnz\foreact2.dat'
Cnz_1_Background:  ; Offset_0x03D4B4:
                incbin  'data\cnz\backact1.dat' 
Cnz_2_Background:  ; Offset_0x03DCB6: 
                dc.b    $03, $01 ; x / y
                dc.b    $8B, $8C, $8D, $8E, $8F, $90, $91, $92
Cpz_1_Foreground:  ; Offset_0x03DCC0:  
                incbin  'data\cpz\foreact1.dat'                
Cpz_2_Foreground:  ; Offset_0x03E4C2: 
                incbin  'data\cpz\foreact2.dat'                
Cpz_Background:    ; Offset_0x03ECC4: 
                dc.b    $05, $06 ; x / y
                dc.b    $A0, $A1, $A2, $00, $A4, $A5, $B0, $B1, $B2, $B3, $B4, $B5, $C0, $C1, $C2, $C3
                dc.b    $C4, $C5, $D0, $D1, $D2, $D3, $D4, $D5, $E0, $E1, $E2, $E3, $E4, $E5, $E0, $E3
                dc.b    $E2, $E3, $E4, $E5, $E0, $E4, $E2, $E1, $E4, $E5
Null_Layout_5:     ; Offset_0x03ECF0:            
                dc.b    $00, $00, $00, $00      
Nghz_1_Foreground: ; Offset_0x03ECF4:    
                incbin  'data\nghz\foreact1.dat'                
Nghz_2_Foreground: ; Offset_0x03F4F6: 
                incbin  'data\nghz\foreact2.dat'                 
Nghz_1_Background: ; Offset_0x03ECF8:  
                incbin  'data\nghz\backact1.dat'                 
Nghz_2_Background: ; Offset_0x0404FA:  
                incbin  'data\nghz\backact2.dat'                            
Null_Layout_6:     ; Offset_0x040CFC:             
                dc.b    $00, $00, $00, $00    
;=============================================================================== 
; Level Object Layout
; [ End ]
;===============================================================================                    
Offset_0x040D00: ; Big Ring - Left Over from Sonic 1                
                incbin  'data\sprites\bigring.dat'
Offset_0x041940: ; Neo Green Hill Foreground Act 2 overwrite by Big Ring- Left Over from previous build ???                 
                incbin  'data\nghz\fgunused.dat'  
Offset_0x041B72: ; Neo Green Hill Background Act 1 - Left Over from previous build ???                 
                incbin  'data\nghz\backact1.dat'                                
Offset_0x042374: ; Neo Green Hill Background Act 2 - Left Over from previous build ???                 
                incbin  'data\nghz\bgunused.dat'  
Offset_0x042B76: ; Filler for Null Level Layout - Left Over from previous build ???                                
                dc.b    $00, $00, $00, $00                                    
Offset_0x042B7A: ; Another Big Ring - Left Over from Sonic 1  
                incbin  'data\sprites\bigring.dat'       
Unknow_Pallete_0x0437BA: ; Offset_0x0437BA:
                dc.w    $0000, $0262, $02A4, $04E8, $0000, $0EEE                
Unknow_Data_0x0437C6: ; Offset_0x0437C6:
                dc.b    $20, $00, $00, $2D, $01, $20, $02, $02, $02, $12, $03, $02, $C6, $20, $02, $03
                dc.b    $0B, $72, $20, $02, $06, $AD, $62, $02, $FF, $DC, $61, $02, $02, $01, $66, $02
                dc.b    $06, $07, $B1, $00, $02, $6A, $A0, $02, $01, $10, $02, $01, $21, $06, $09, $20
                dc.b    $00, $1A, $00, $12, $66, $1A, $AB, $16, $03, $01, $10, $03, $02, $10, $01, $03
                dc.b    $01, $01, $02, $52, $07, $01, $6D, $DD, $10, $67, $77, $DD, $01, $66, $BA, $00
                dc.b    $76, $06, $CD, $DD, $BB, $BC, $CD, $DD, $DD, $CB, $BA, $AA, $66, $06, $67, $77
                dc.b    $BB, $66, $66, $61, $00, $A1, $00, $70, $00, $B1, $07, $07, $0A, $01, $16, $60
                dc.b    $C1, $B0, $67, $76, $CB, $B6, $11, $67, $BC, $61, $17, $BA, $61, $16, $71, $00
                dc.b    $11, $00, $67, $DD, $00, $06, $66, $D6, $70, $16, $1B, $0B, $01, $11, $A0, $00
                dc.b    $60, $35, $FF, $FF, $76, $32, $02, $03, $AB, $66, $20, $02, $09, $A1, $10, $00
                dc.b    $B0, $A0, $02, $00, $6D, $77, $02, $06, $06, $76, $11, $20, $66, $AB, $02, $04
                dc.b    $42, $FF, $23, $02, $02, $06, $22, $16, $00, $02, $16, $6B, $02, $05, $7B, $A0
                dc.b    $00, $21, $10, $02, $05, $07, $A0, $00, $02, $11, $06, $16, $20, $16, $A0, $BC
                dc.b    $66, $11, $6B, $BC, $BB, $76, $16, $CB, $00, $B0, $61, $16, $00, $01, $17, $11
                dc.b    $00, $0A, $05, $01, $70, $02, $26, $01, $00, $DD, $DC, $61, $07, $DD, $DC, $CB
                dc.b    $BB, $BA, $AB, $BC, $DD, $67, $76, $60, $66, $11, $66, $66, $BB, $70, $70, $1A
                dc.b    $00, $77, $07, $1B, $00, $70, $76, $10, $A0, $44, $45, $56, $7D, $02, $02, $02
                dc.b    $20, $03, $01, $02, $16, $0A, $22, $33, $00, $02, $16, $66, $00, $21, $70, $10
                dc.b    $03, $05, $10, $02, $17, $00, $10, $03, $05, $11, $21, $70, $00, $11, $03, $0B
                dc.b    $11, $67, $00, $11, $0B, $BB, $BB, $AA, $A0, $A0, $A0, $02, $02, $0A, $AA, $03
                dc.b    $01, $AA, $03, $01, $AA, $03, $01, $AA, $03, $01, $AA, $02, $05, $01, $A0, $A0
                dc.b    $00, $11, $03, $01, $11, $03, $01, $11, $03, $01, $11, $03, $01, $11, $03, $01
                dc.b    $11, $03, $01, $11, $03, $0E, $FE, $FC, $F5, $54, $11, $31, $30, $01, $03, $00
                dc.b    $03, $01, $00, $10, $06, $06, $01, $00, $10, $00, $10, $F0, $02, $14, $01, $00
                dc.b    $01, $00, $03, $FF, $F0, $20, $B1, $2E, $F0, $10, $0B, $A2, $33, $20, $00, $0B
                dc.b    $BB, $BB, $10, $04, $22, $22, $22, $22, $04, $01, $20, $03, $01, $02, $04, $01
                dc.b    $20, $05, $05, $01, $00, $02, $00, $11, $03, $05, $11, $02, $FF, $DD, $DC, $02
                dc.b    $01, $A0, $02, $3D, $A0, $AA, $A0, $00, $10, $00, $0A, $00, $70, $00, $11, $02
                dc.b    $0A, $00, $07, $00, $11, $00, $70, $00, $27, $0A, $01, $32, $20, $CB, $71, $C6
                dc.b    $01, $07, $71, $0B, $70, $10, $16, $A0, $A1, $01, $11, $1A, $07, $10, $60, $66
                dc.b    $B0, $01, $10, $01, $70, $71, $71, $01, $17, $00, $16, $17, $7C, $BD, $DD, $71
                dc.b    $A0, $02, $01, $1A, $03, $03, $A0, $0A, $AA, $02, $73, $0A, $07, $A0, $A0, $00
                dc.b    $A6, $70, $1B, $BA, $01, $0A, $66, $67, $C1, $06, $DD, $D0, $16, $76, $00, $D1
                dc.b    $DD, $71, $00, $0C, $00, $76, $00, $0A, $0B, $70, $00, $06, $A6, $D6, $00, $D1
                dc.b    $10, $AB, $00, $07, $61, $7B, $00, $0A, $61, $16, $CD, $B0, $B0, $C7, $11, $00
                dc.b    $A0, $B1, $00, $0A, $10, $07, $10, $01, $00, $61, $17, $70, $70, $D6, $11, $77
                dc.b    $00, $A7, $1A, $B7, $01, $11, $60, $01, $10, $61, $0D, $0A, $01, $03, $76, $0A
                dc.b    $01, $10, $1B, $A1, $07, $72, $0B, $17, $0B, $10, $06, $61, $70, $00, $0D, $60
                dc.b    $AA, $10, $0A, $70, $B1, $70, $01, $11, $67, $12, $26, $66, $DC, $DF, $05, $02
                dc.b    $01, $A0, $06, $02, $01, $0A, $02, $07, $10, $A0, $BA, $21, $0A, $0A, $11, $03
                dc.b    $08, $01, $DC, $A0, $AA, $16, $00, $0A, $01, $04, $01, $77, $02, $01, $10, $02
                dc.b    $15, $A1, $07, $00, $AB, $10, $61, $10, $10, $06, $67, $16, $00, $66, $BA, $10
                dc.b    $01, $71, $00, $DD, $00, $0A, $0E, $02, $07, $7D, $02, $06, $67, $61, $D0, $00
                dc.b    $7A, $B7, $02, $04, $5F, $F4, $2F, $FD, $03, $01, $21, $02, $1E, $02, $17, $02
                dc.b    $22, $30, $16, $20, $11, $16, $67, $06, $70, $60, $10, $06, $77, $06, $77, $00
                dc.b    $10, $61, $16, $16, $60, $66, $71, $70, $00, $01, $10, $02, $1A, $10, $10, $66
                dc.b    $00, $11, $77, $76, $77, $07, $06, $01, $11, $61, $6B, $71, $60, $06, $AB, $66
                dc.b    $10, $0A, $B6, $17, $0D, $D0, $BD, $02, $01, $A0, $02, $1B, $AA, $A0, $00, $77
                dc.b    $D7, $DC, $00, $DD, $DD, $77, $D0, $AA, $AA, $AB, $1D, $77, $77, $BA, $60, $7D
                dc.b    $77, $61, $A0, $0A, $00, $60, $B7, $02, $03, $11, $10, $10, $03, $0C, $10, $11
                dc.b    $11, $10, $01, $75, $57, $71, $17, $20, $02, $27, $04, $0C, $10, $20, $00, $20
                dc.b    $12, $05, $44, $67, $00, $01, $01, $67, $02, $06, $67, $02, $10, $01, $02, $20
                dc.b    $02, $04, $20, $00, $02, $20, $06, $0F, $17, $07, $52, $22, $00, $46, $13, $33
                dc.b    $70, $11, $15, $00, $25, $77, $71, $02, $03, $22, $07, $50, $02, $01, $22, $07
                dc.b    $01, $02, $02, $07, $02, $56, $50, $11, $13, $66, $33, $02, $01, $01, $03, $01
                dc.b    $01, $04, $01, $07, $03, $01, $07, $03, $01, $07, $07, $09, $70, $00, $02, $7C
                dc.b    $16, $00, $02, $7A, $A6, $02, $02, $27, $A1, $03, $01, $6A, $02, $02, $02, $1B
                dc.b    $03, $01, $26, $03, $01, $02, $04, $05, $33, $32, $32, $24, $17, $04, $3B, $70
                dc.b    $11, $06, $66, $00, $17, $66, $B6, $10, $71, $B1, $CB, $A1, $0A, $0A, $1D, $C7
                dc.b    $BA, $DC, $22, $1B, $A7, $17, $5F, $DB, $70, $06, $A0, $01, $10, $10, $B0, $01
                dc.b    $10, $17, $6D, $D6, $01, $7A, $66, $11, $17, $B0, $B1, $71, $01, $00, $C1, $11
                dc.b    $17, $BA, $66, $67, $61, $67, $AD, $CB, $11, $6D, $02, $02, $A0, $7A, $02, $02
                dc.b    $01, $11, $02, $02, $07, $07, $02, $02, $01, $11, $03, $01, $71, $02, $02, $A0
                dc.b    $07, $05, $03, $0A, $17, $07, $03, $07, $07, $00, $01, $70, $01, $AA, $A7, $02
                dc.b    $08, $66, $60, $11, $01, $11, $11, $10, $76, $02, $14, $11, $12, $10, $00, $22
                dc.b    $20, $10, $17, $42, $00, $10, $61, $62, $00, $70, $76, $20, $00, $01, $02, $02
                dc.b    $02, $71, $20, $02, $01, $12, $03, $01, $20, $07, $04, $24, $FF, $FF, $55, $02
                dc.b    $10, $0A, $16, $00, $0A, $B6, $77, $00, $B1, $06, $61, $07, $01, $BA, $AA, $00
                dc.b    $1A, $02, $01, $07, $04, $01, $A0, $02, $0E, $60, $DA, $0B, $DB, $76, $6A, $00
                dc.b    $61, $16, $10, $0B, $BA, $10, $A0, $02, $01, $70, $03, $1A, $10, $A0, $00, $AB
                dc.b    $00, $1A, $AA, $10, $00, $01, $11, $00, $0B, $B0, $66, $BB, $A0, $A0, $06, $D0
                dc.b    $00, $16, $D1, $00, $0B, $6D, $02, $14, $B0, $D0, $A1, $00, $0B, $00, $16, $7D
                dc.b    $0A, $00, $6D, $A0, $01, $AB, $D0, $A0, $67, $70, $DC, $16, $03, $01, $01, $03
                dc.b    $01, $01, $03, $01, $01, $03, $01, $01, $03, $01, $01, $03, $01, $01, $03, $06
                dc.b    $01, $71, $76, $0C, $60, $10, $03, $01, $10, $03, $01, $10, $03, $01, $10, $03
                dc.b    $01, $10, $03, $01, $10, $03, $01, $10, $03, $04, $1D, $0D, $DD, $D7, $1C, $0D
                dc.b    $0B, $6C, $C1, $C6, $01, $77, $77, $71, $10, $11, $11, $10, $51, $03, $18, $25
                dc.b    $10, $00, $01, $62, $51, $00, $17, $07, $47, $46, $12, $57, $66, $22, $62, $57
                dc.b    $24, $75, $77, $01, $20, $01, $10, $03, $01, $01, $04, $02, $10, $70, $02, $16
                dc.b    $70, $00, $11, $16, $20, $00, $05, $52, $20, $00, $02, $22, $06, $75, $03, $33
                dc.b    $77, $71, $50, $00, $11, $10, $04, $16, $50, $00, $01, $11, $15, $00, $67, $77
                dc.b    $71, $00, $22, $20, $71, $00, $22, $56, $15, $00, $33, $45, $73, $34, $03, $01
                dc.b    $70, $03, $01, $70, $03, $01, $70, $03, $01, $70, $03, $01, $70, $03, $01, $70
                dc.b    $03, $05, $70, $22, $22, $01, $66, $06, $0F, $01, $01, $00, $10, $11, $11, $11
                dc.b    $11, $11, $11, $10, $10, $10, $10, $10, $02, $11, $70, $00, $07, $07, $77, $33
                dc.b    $01, $06, $6B, $02, $60, $10, $A0, $00, $A1, $00, $A0, $03, $01, $10, $03, $1C
                dc.b    $7A, $00, $A1, $10, $11, $02, $6A, $70, $06, $00, $1A, $B1, $00, $42, $06, $C7
                dc.b    $66, $70, $07, $C6, $77, $10, $07, $00, $11, $00, $01, $A0, $03, $01, $10, $03
                dc.b    $01, $60, $02, $01, $07, $03, $01, $0A, $02, $10, $DD, $DA, $76, $61, $BB, $B1
                dc.b    $17, $70, $BB, $BB, $B6, $67, $B0, $BB, $06, $61, $03, $13, $01, $B0, $BB, $A6
                dc.b    $61, $BB, $BB, $16, $66, $BB, $11, $17, $77, $CC, $67, $54, $44, $11, $10, $02
                dc.b    $02, $76, $60, $02, $01, $67, $07, $01, $77, $03, $02, $66, $60, $02, $02, $66
                dc.b    $10, $02, $06, $77, $71, $44, $44, $70, $07, $02, $07, $77, $00, $01, $11, $70
                dc.b    $01, $10, $02, $01, $10, $02, $01, $01, $02, $06, $AA, $11, $00, $0A, $00, $11
                dc.b    $03, $17, $61, $AA, $A0, $0A, $07, $A0, $0A, $A0, $21, $1A, $A0, $11, $00, $71
                dc.b    $11, $00, $02, $17, $00, $77, $00, $21, $77, $02, $02, $02, $11, $03, $08, $22
                dc.b    $11, $44, $34, $44, $66, $00, $17, $02, $08, $07, $00, $77, $00, $70, $11, $10
                dc.b    $77, $02, $02, $01, $11, $04, $02, $01, $10, $02, $08, $12, $22, $01, $16, $64
                dc.b    $44, $76, $76, $02, $1E, $16, $76, $00, $07, $71, $1B, $77, $70, $10, $1B, $11
                dc.b    $11, $01, $60, $00, $01, $17, $AB, $11, $10, $07, $CB, $77, $76, $66, $CB, $67
                dc.b    $61, $76, $BB, $03, $01, $01, $03, $02, $01, $01, $02, $16, $70, $00, $10, $61
                dc.b    $16, $16, $77, $66, $67, $17, $71, $06, $01, $21, $10, $10, $66, $50, $70, $1D
                dc.b    $07, $10, $03, $01, $10, $02, $02, $01, $10, $02, $15, $66, $66, $10, $0A, $B6
                dc.b    $71, $70, $01, $AB, $16, $11, $16, $6B, $61, $01, $10, $16, $7D, $7D, $D0, $D0
                dc.b    $06, $01, $A0, $02, $0B, $0A, $76, $00, $7D, $77, $61, $A0, $DD, $DD, $BA, $60
                dc.b    $02, $16, $BC, $11, $DD, $DD, $61, $01, $27, $31, $71, $37, $00, $22, $16, $26
                dc.b    $05, $65, $71, $62, $00, $54, $61, $02, $02, $02, $55, $56, $03, $01, $05, $08
                dc.b    $04, $55, $31, $54, $33, $03, $0E, $66, $61, $20, $01, $05, $20, $00, $05, $50
                dc.b    $07, $02, $50, $00, $42, $04, $01, $50, $02, $02, $04, $07, $02, $02, $60, $14
                dc.b    $02, $02, $65, $50, $02, $01, $50, $17, $0A, $0B, $BA, $88, $89, $B1, $32, $FF
                dc.b    $01, $02, $0F, $02, $04, $10, $F0, $00, $F0, $04, $01, $3F, $07, $01, $10, $02
                dc.b    $0B, $0F, $2D, $DE, $F0, $00, $30, $31, $F0, $00, $10, $1F, $06, $02, $03, $0F
                dc.b    $03, $0E, $10, $FF, $FF, $01, $33, $00, $01, $00, $31, $21, $23, $FF, $ED, $30
                dc.b    $02, $06, $FE, $31, $DD, $0F, $00, $30, $03, $0F, $01, $F0, $F0, $11, $10, $1F
                dc.b    $00, $1F, $F1, $01, $1F, $F0, $0F, $E0, $E0, $02, $0D, $0E, $FF, $FE, $DD, $77
                dc.b    $FF, $01, $22, $9A, $00, $FF, $00, $13, $02, $02, $F0, $01, $04, $03, $F0, $00
                dc.b    $0F, $05, $01, $1F, $03, $07, $93, $DD, $EE, $22, $0B, $11, $23, $02, $03, $BB
                dc.b    $01, $11, $02, $02, $BB, $BB, $10, $04, $AA, $AA, $AA, $AA, $04, $0C, $11, $10
                dc.b    $01, $11, $00, $01, $11, $23, $BB, $B0, $13, $10, $02, $01, $31, $03, $01, $10
                dc.b    $05, $0A, $AA, $B0, $23, $33, $11, $01, $01, $10, $01, $23, $02, $07, $32, $00
                dc.b    $30, $01, $0F, $10, $03, $04, $02, $30, $F0, $07, $04, $CC, $32, $22, $21, $02
                dc.b    $08, $12, $22, $01, $23, $21, $10, $03, $10, $02, $01, $01, $06, $03, $01, $00
                dc.b    $0F, $02, $16, $01, $00, $F0, $00, $02, $3D, $E1, $12, $11, $01, $23, $30, $33
                dc.b    $11, $01, $11, $00, $30, $11, $11, $00, $03, $04, $01, $33, $04, $02, $33, $10
                dc.b    $03, $04, $23, $33, $33, $32, $03, $04, $10, $11, $11, $11, $04, $02, $01, $11
                dc.b    $02, $01, $10, $03, $04, $03, $30, $00, $01, $04, $0B, $30, $21, $00, $01, $22
                dc.b    $00, $01, $11, $11, $01, $10, $02, $09, $10, $33, $33, $33, $33, $11, $11, $11
                dc.b    $01, $02, $01, $01, $03, $08, $12, $01, $00, $01, $20, $22, $33, $32, $05, $01
                dc.b    $11, $04, $01, $10, $02, $15, $30, $10, $00, $11, $21, $00, $11, $03, $00, $11
                dc.b    $33, $30, $11, $33, $01, $10, $10, $11, $11, $10, $03, $03, $01, $11, $03, $05
                dc.b    $3F, $00, $01, $00, $10, $03, $01, $10, $02, $01, $10, $03, $01, $01, $04, $06
                dc.b    $EF, $11, $00, $01, $00, $11, $02, $01, $0F, $04       
;=============================================================================== 
; Level Object Layout
; [ Begin ]
;===============================================================================                            
Objects_Layout: ; Offset_0x044000:  
                dc.w    Ghz_1_Objects_Layout-Objects_Layout
                dc.w    Ghz_2_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Mz_1_Objects_Layout-Objects_Layout
                dc.w    Mz_2_Objects_Layout-Objects_Layout
                dc.w    Mz_3_Objects_Layout-Objects_Layout
                dc.w    Mz_3_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Htz_1_Objects_Layout-Objects_Layout
                dc.w    Htz_2_Objects_Layout-Objects_Layout
                dc.w    Hpz_1_Objects_Layout-Objects_Layout
                dc.w    Hpz_2_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    OOz_1_Objects_Layout-Objects_Layout
                dc.w    OOz_2_Objects_Layout-Objects_Layout
                dc.w    Dhz_1_Objects_Layout-Objects_Layout
                dc.w    Dhz_2_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Cpz_1_Objects_Layout-Objects_Layout
                dc.w    Cpz_2_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Nghz_1_Objects_Layout-Objects_Layout
                dc.w    Nghz_2_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    Null_Objects_Layout-Objects_Layout
                dc.w    $FFFF, $0000, $0000 ; The Game will crash if these bytes are missing
Ghz_1_Objects_Layout:  ; Offset_0x04404A:
                incbin  'data\ghz\obj_act1.dat'
Ghz_2_Objects_Layout:  ; Offset_0x0442C6:
                incbin  'data\ghz\obj_act2.dat'
Mz_1_Objects_Layout:   ; Offset_0x0445C0:
                incbin  'data\mz\obj_act1.dat'
Mz_2_Objects_Layout:   ; Offset_0x04488A:
                incbin  'data\mz\obj_act2.dat'
Mz_3_Objects_Layout:   ; Offset_0x044B30:
                incbin  'data\mz\obj_act3.dat'
Htz_1_Objects_Layout:  ; Offset_0x044EFC:
                incbin  'data\htz\obj_act1.dat'
Htz_2_Objects_Layout:  ; Offset_0x045130:
                incbin  'data\htz\obj_act2.dat'
Hpz_1_Objects_Layout:  ; Offset_0x04554A:
                incbin  'data\hpz\obj_act1.dat'
Hpz_2_Objects_Layout:  ; Offset_0x045652:
                dc.w    $FFFF, $0000, $0000 
                dc.w    $FFFF, $0000, $0000 
OOz_1_Objects_Layout:  ; Offset_0x04565E: 
                incbin  'data\ooz\obj_act1.dat'
OOz_2_Objects_Layout:  ; Offset_0x0457C0:
                incbin  'data\ooz\obj_act2.dat'
Dhz_1_Objects_Layout:  ; Offset_0x0459AC:
                incbin  'data\dhz\obj_act1.dat'
Dhz_2_Objects_Layout:  ; Offset_0x045A24:
                dc.w    $FFFF, $0000, $0000 
Cpz_1_Objects_Layout:  ; Offset_0x045A2A:
                incbin  'data\cpz\obj_act1.dat'
Cpz_2_Objects_Layout:  ; Offset_0x045CC4:
                incbin  'data\cpz\obj_act2.dat'
Nghz_1_Objects_Layout: ; Offset_0x04605A:
                incbin  'data\nghz\obj_act1.dat'
Nghz_2_Objects_Layout: ; Offset_0x046216:
                incbin  'data\nghz\obj_act2.dat'
Null_Objects_Layout:   ; Offset_0x046348:
                dc.w    $FFFF, $0000, $0000 
;=============================================================================== 
; Level Object Layout
; [ End ]
;===============================================================================                            
Unknow_Data_0x04634E: ; Offset_0x04634E:
                dc.b    $00, $00, $77, $07, $70, $01, $11, $17, $07, $70, $70, $11, $00, $07, $07, $11
                dc.b    $11, $01, $11, $01, $01, $10, $11, $00, $01, $16, $77, $00, $16, $61, $11, $77
                dc.b    $61, $01, $16, $01, $11, $17, $70, $10, $77, $71, $11, $76, $11, $11, $11, $11
                dc.b    $11, $10, $00, $67, $70, $70, $02, $21, $07, $07, $00, $10, $00, $07, $00, $60
                dc.b    $07, $71, $07, $07, $70, $11, $71, $11, $11, $17, $00, $11, $10, $70, $10, $00
                dc.b    $11, $01, $0A, $01, $17, $10, $A0, $00, $70, $02, $07, $11, $00, $0A, $00, $7C
                dc.b    $BB, $A0, $05, $01, $A0, $13, $01, $0A, $03, $01, $0A, $02, $01, $AA, $12, $01
                dc.b    $0A, $08, $05, $01, $AB, $BB, $C6, $66, $08, $01, $10, $04, $03, $07, $00, $10
                dc.b    $0C, $24, $66, $70, $77, $76, $00, $07, $70, $11, $00, $17, $77, $10, $00, $11
                dc.b    $07, $01, $00, $01, $70, $11, $00, $10, $77, $01, $00, $10, $70, $77, $00, $11
                dc.b    $11, $11, $DD, $DD, $76, $11, $0A, $01, $01, $03, $02, $A0, $70, $04, $01, $A0
                dc.b    $03, $01, $A0, $03, $03, $DD, $CC, $C1, $02, $02, $10, $77, $02, $02, $10, $07
                dc.b    $03, $0A, $70, $01, $00, $01, $07, $00, $10, $11, $07, $70, $02, $35, $17, $10
                dc.b    $00, $01, $01, $00, $06, $76, $77, $7D, $01, $11, $00, $0A, $01, $10, $00, $1A
                dc.b    $01, $00, $A0, $BA, $01, $0A, $AA, $AA, $17, $1A, $0B, $0A, $00, $76, $67, $66
                dc.b    $01, $11, $11, $11, $DD, $DD, $71, $6D, $00, $0A, $00, $7A, $00, $0A, $07, $0A
                dc.b    $00, $0A, $01, $02, $01, $A0, $02, $08, $AA, $A0, $00, $70, $00, $A0, $01, $0A
                dc.b    $02, $06, $01, $00, $66, $66, $10, $BA, $02, $03, $70, $00, $70, $03, $01, $07
                dc.b    $04, $01, $70, $06, $02, $01, $07, $02, $01, $10, $03, $04, $AA, $BB, $77, $DD
                dc.b    $07, $02, $01, $0A, $02, $02, $01, $0A, $02, $04, $01, $00, $0A, $70, $04, $09
                dc.b    $01, $A0, $00, $10, $01, $5D, $C1, $77, $7C, $03, $01, $A0, $03, $01, $AA, $03
                dc.b    $02, $0A, $20, $02, $02, $0A, $01, $09, $06, $10, $00, $DC, $CB, $BA, $AA, $03
                dc.b    $01, $0A, $02, $01, $0A, $03, $01, $0A, $04, $09, $A1, $A0, $00, $0A, $17, $0A
                dc.b    $AA, $A1, $71, $02, $06, $17, $11, $01, $66, $61, $01, $03, $13, $16, $10, $01
                dc.b    $01, $71, $07, $10, $17, $1A, $71, $16, $6B, $AA, $11, $71, $A0, $0A, $17, $1A
                dc.b    $02, $02, $71, $AA, $02, $0D, $71, $A0, $00, $0A, $61, $AA, $A0, $0A, $AA, $00
                dc.b    $A0, $00, $A0, $03, $01, $A0, $0F, $06, $AA, $AB, $BB, $CD, $00, $01, $02, $04
                dc.b    $A0, $01, $07, $11, $04, $04, $0A, $01, $01, $17, $02, $01, $70, $02, $03, $01
                dc.b    $00, $70, $02, $06, $10, $00, $CB, $11, $7D, $BB, $04, $05, $70, $10, $A0, $00
                dc.b    $01, $11, $05, $A0, $00, $BA, $AA, $A0, $05, $01, $A0, $03, $01, $A0, $05, $01
                dc.b    $0A, $03, $01, $01, $03, $01, $0B, $07, $02, $AA, $AB, $05, $01, $AA, $03, $03
                dc.b    $A0, $00, $10, $04, $02, $A0, $A0, $02, $05, $A0, $00, $01, $00, $0A, $03, $06
                dc.b    $B1, $16, $67, $66, $00, $70, $0C, $03, $01, $00, $07, $0B, $07, $61, $10, $06
                dc.b    $67, $00, $10, $77, $02, $02, $10, $77, $02, $02, $10, $77, $02, $02, $01, $77
                dc.b    $02, $03, $11, $70, $11, $02, $0A, $70, $11, $00, $10, $77, $00, $DD, $CC, $B6
                dc.b    $06, $11, $01, $0A, $03, $01, $0A, $06, $04, $CD, $DC, $C1, $77, $02, $06, $17
                dc.b    $70, $00, $01, $10, $07, $02, $02, $10, $77, $02, $03, $10, $00, $01, $02, $01
                dc.b    $70, $02, $02, $10, $70, $02, $26, $10, $70, $76, $77, $66, $11, $11, $00, $A0
                dc.b    $00, $11, $0A, $AA, $00, $01, $0A, $AA, $00, $01, $00, $AA, $00, $01, $00, $AA
                dc.b    $A0, $00, $10, $AA, $A0, $00, $10, $0A, $00, $11, $00, $10, $11, $02, $0D, $11
                dc.b    $00, $11, $01, $11, $00, $01, $11, $11, $00, $01, $01, $10, $05, $01, $70, $02
                dc.b    $01, $07, $04, $04, $61, $10, $01, $BC, $09, $09, $10, $0A, $A0, $00, $10, $10
                dc.b    $A0, $10, $10, $02, $01, $10, $03, $01, $01, $02, $05, $0A, $AB, $B0, $7D, $D7
                dc.b    $05, $03, $07, $00, $01, $05, $03, $A1, $00, $01, $03, $1A, $01, $00, $10, $00
                dc.b    $11, $00, $70, $00, $12, $DC, $06, $76, $75, $00, $07, $10, $10, $00, $07, $00
                dc.b    $11, $00, $07, $00, $10, $01, $03, $04, $20, $00, $70, $07, $02, $1C, $07, $71
                dc.b    $00, $10, $00, $11, $57, $77, $01, $17, $00, $17, $11, $71, $01, $71, $17, $1A
                dc.b    $17, $11, $71, $00, $71, $17, $10, $A0, $11, $71, $02, $02, $17, $10, $02, $09
                dc.b    $71, $00, $10, $A0, $1A, $AA, $BA, $A0, $A0, $1F, $01, $A0, $03, $01, $A0, $16
                dc.b    $09, $0A, $00, $AB, $DC, $B1, $00, $07, $00, $70, $03, $02, $70, $0A, $02, $03
                dc.b    $70, $00, $10, $02, $01, $A0, $06, $01, $07, $04, $04, $10, $16, $7C, $CC, $02
                dc.b    $01, $0A, $04, $01, $AA, $04, $01, $01, $04, $01, $01, $03, $01, $11, $03, $07
                dc.b    $01, $10, $00, $BB, $BB, $BA, $AA, $03, $01, $0A, $02, $05, $0A, $A0, $AA, $AA
                dc.b    $A0, $0C, $08, $10, $00, $01, $01, $01, $00, $01, $10, $06, $01, $01, $05, $09
                dc.b    $77, $00, $10, $00, $70, $11, $00, $07, $70, $02, $01, $07, $03, $07, $77, $00
                dc.b    $07, $77, $01, $11, $70, $05, $01, $10, $0E, $01, $01, $06, $24, $11, $11, $16
                dc.b    $66, $00, $10, $07, $01, $00, $10, $07, $01, $00, $11, $77, $01, $00, $01, $77
                dc.b    $71, $00, $10, $07, $77, $00, $11, $00, $70, $00, $10, $11, $11, $DD, $DD, $D7
                dc.b    $61, $12, $01, $A0, $03, $01, $01, $04, $05, $70, $CC, $DD, $77, $07, $03, $01
                dc.b    $77, $03, $01, $77, $07, $01, $77, $03, $02, $77, $01, $02, $01, $07, $02, $09
                dc.b    $01, $11, $77, $67, $7D, $77, $01, $10, $AA, $02, $02, $10, $AA, $02, $17, $10
                dc.b    $0A, $00, $01, $10, $01, $01, $01, $01, $10, $10, $77, $77, $77, $77, $11, $11
                dc.b    $11, $11, $16, $66, $66, $61, $0C, $01, $10, $02, $01, $77, $04, $01, $07, $02
                dc.b    $01, $01, $02, $0A, $70, $00, $23, $66, $10, $6A, $00, $01, $06, $1A, $02, $06
                dc.b    $61, $66, $02, $17, $17, $11, $02, $06, $01, $71, $00, $01, $0A, $B7, $03, $07
                dc.b    $0B, $00, $70, $A0, $00, $FD, $BA, $06, $01, $A0, $03, $01, $6A, $03, $14, $16
                dc.b    $A0, $0A, $00, $11, $6A, $0A, $00, $71, $16, $A0, $0A, $B7, $11, $1A, $0A, $F4
                dc.b    $10, $67, $CB, $02, $06, $01, $70, $00, $20, $17, $06, $02, $1C, $70, $66, $00
                dc.b    $21, $06, $61, $02, $17, $66, $10, $00, $77, $11, $0A, $21, $01, $70, $0A, $67
                dc.b    $77, $BA, $A0, $70, $6A, $00, $0A, $71, $A0, $02, $01, $1A, $03, $01, $A0, $04
                dc.b    $01, $A0, $03, $01, $A0, $04, $01, $0A, $03, $01, $0A, $05, $01, $A0, $03, $01
                dc.b    $A0, $02, $01, $AA, $02, $01, $AA, $02, $14, $0A, $00, $11, $00, $A0, $11, $07
                dc.b    $0A, $01, $07, $71, $0A, $AB, $B6, $67, $00, $AA, $A0, $00, $AA, $02, $12, $10
                dc.b    $00, $10, $11, $01, $11, $01, $00, $07, $07, $77, $77, $61, $70, $11, $11, $00
                dc.b    $11, $03, $09, $77, $61, $01, $11, $01, $00, $01, $00, $10, $04, $01, $70, $02
                dc.b    $05, $77, $11, $00, $10, $11, $05, $01, $11, $02, $09, $16, $77, $01, $16, $70
                dc.b    $00, $66, $00, $70, $02, $02, $07, $70, $03, $01, $77, $03, $01, $07, $03, $03
                dc.b    $07, $70, $70, $02, $02, $07, $77, $03, $06, $70, $67, $77, $77, $77, $10, $0D
                dc.b    $0B, $70, $77, $77, $07, $77, $70, $70, $70, $70, $70, $70, $03, $01, $77, $04
                dc.b    $01, $70, $02, $02, $07, $70, $02, $01, $77, $03, $01, $07, $02, $01, $01, $03
                dc.b    $01, $01, $09, $05, $01, $11, $11, $00, $10, $0A, $01, $01, $07, $01, $10, $06
                dc.b    $1B, $01, $01, $01, $11, $60, $01, $11, $01, $70, $00, $11, $10, $11, $01, $01
                dc.b    $01, $67, $11, $01, $6C, $BA, $10, $66, $B0, $00, $16, $BA, $02, $01, $6B, $03
                dc.b    $06, $AA, $00, $AB, $CC, $0A, $0A, $04, $01, $10, $03, $01, $07, $0A, $01, $A0
                dc.b    $03, $07, $01, $00, $01, $CD, $76, $70, $01, $02, $02, $10, $70, $02, $02, $10
                dc.b    $70, $04, $04, $10, $00, $10, $70, $02, $06, $10, $70, $00, $01, $10, $70, $02
                dc.b    $0A, $10, $70, $16, $66, $6C, $6C, $00, $10, $0A, $AA, $02, $1C, $0A, $AA, $00
                dc.b    $10, $0A, $AA, $00, $10, $0A, $AA, $00, $10, $0A, $AA, $00, $10, $0A, $AA, $01
                dc.b    $10, $0A, $AA, $16, $71, $66, $BA, $00, $07, $05, $01, $10, $02, $02, $07, $A0
                dc.b    $02, $01, $01, $03, $01, $7A, $03, $01, $10, $02, $0A, $07, $A0, $0A, $00, $71
                dc.b    $0A, $0A, $00, $10, $0A, $06, $01, $0A, $05, $01, $A0, $03, $01, $A0, $03, $03
                dc.b    $0A, $00, $10, $02, $08, $D6, $0D, $CB, $0A, $00, $01, $17, $A0, $02, $03, $01
                dc.b    $10, $01, $02, $0A, $7B, $A0, $70, $02, $17, $00, $01, $20, $00, $07, $02, $0F
                dc.b    $21, $10, $12, $00, $02, $67, $13, $45, $5F, $10, $17, $00, $0A, $77, $10, $02
                dc.b    $02, $71, $70, $04, $03, $01, $00, $11, $02, $01, $11, $05, $01, $70, $02, $05
                dc.b    $DC, $CB, $BB, $B1, $A0, $02, $09, $A0, $AA, $00, $AA, $01, $A0, $AA, $00, $17
                dc.b    $02, $20, $11, $71, $10, $11, $07, $11, $01, $00, $71, $17, $00, $07, $11, $71
                dc.b    $11, $00, $01, $67, $16, $61, $01, $10, $71, $01, $10, $01, $11, $10, $77, $77
                dc.b    $10, $77, $02, $02, $76, $11, $02, $03, $10, $00, $11, $04, $06, $10, $77, $77
                dc.b    $77, $76, $10, $03, $10, $01, $01, $00, $01, $70, $11, $00, $17, $07, $01, $01
                dc.b    $71, $00, $01, $07, $10, $02, $02, $11, $0A, $02, $0F, $70, $00, $67, $76, $10
                dc.b    $1D, $17, $1B, $AA, $10, $61, $A0, $00, $A6, $0A, $02, $02, $01, $A0, $02, $01
                dc.b    $0A, $07, $01, $A0, $03, $06, $A0, $CC, $CC, $CC, $CC, $10, $03, $01, $01, $03
                dc.b    $02, $60, $10, $02, $13, $16, $01, $00, $10, $AB, $71, $11, $11, $00, $A6, $11
                dc.b    $10, $00, $0A, $C6, $11, $CC, $CC, $C6, $11, $09, $10, $10, $01, $00, $01, $01
                dc.b    $10, $11, $11, $04, $03, $11, $11, $10, $03, $0B, $10, $00, $01, $01, $00, $01
                dc.b    $01, $10, $00, $01, $11, $02, $01, $11, $0A, $01, $01, $03, $01, $66, $02, $02
                dc.b    $06, $1A, $02, $05, $61, $A0, $00, $06, $1A, $02, $13, $61, $A0, $00, $01, $1A
                dc.b    $00, $0B, $16, $AA, $0A, $B6, $7A, $0A, $A1, $60, $B0, $00, $AB, $DD, $05, $14
                dc.b    $0A, $AB, $BB, $0A, $B1, $67, $77, $A1, $77, $11, $11, $66, $11, $01, $11, $10
                dc.b    $11, $10, $00, $11, $03, $06, $C6, $67, $00, $01, $00, $10, $02, $05, $A0, $07
                dc.b    $00, $10, $01, $04, $04, $70, $01, $00, $10, $03, $03, $07, $00, $10, $05, $06
                dc.b    $61, $11, $11, $11, $00, $01, $03, $3D, $11, $00, $70, $00, $11, $07, $71, $00
                dc.b    $10, $07, $70, $01, $10, $70, $70, $01, $10, $70, $10, $00, $11, $11, $00, $16
                dc.b    $77, $7D, $7D, $01, $00, $AA, $AA, $01, $00, $AA, $BA, $01, $00, $AA, $BA, $01
                dc.b    $0A, $AA, $AA, $17, $1A, $0B, $0A, $00, $76, $67, $66, $01, $11, $11, $11, $01
                dc.b    $17, $DD, $DD, $10, $7A, $02, $02, $07, $10, $02, $02, $01, $A0, $02, $01, $7A
                dc.b    $03, $02, $10, $0A, $02, $02, $A0, $0A, $06, $08, $DC, $B0, $00, $0A, $21, $0A
                dc.b    $00, $A0, $03, $03, $01, $00, $70, $05, $01, $07, $02, $10, $A0, $10, $02, $11
                dc.b    $00, $01, $00, $07, $00, $70, $43, $03, $5F, $32, $71, $20, $06, $01, $12, $0B
                dc.b    $01, $20, $07, $0F, $23, $33, $34, $44, $01, $00, $07, $77, $00, $10, $00, $11
                dc.b    $00, $01, $11, $03, $02, $01, $16, $02, $02, $10, $70, $02, $17, $10, $70, $10
                dc.b    $00, $10, $70, $71, $10, $07, $11, $71, $11, $71, $AA, $10, $17, $1A, $00, $16
                dc.b    $61, $A0, $00, $71, $03, $02, $10, $0A, $02, $01, $10, $03, $02, $10, $0A, $02
                dc.b    $08, $AA, $00, $AA, $AB, $00, $AA, $00, $01, $02, $01, $A0, $07, $01, $0A, $06
                dc.b    $01, $A0, $03, $09, $A0, $0A, $01, $BB, $DC, $B0, $AB, $00, $07, $06, $0D, $17
                dc.b    $00, $0A, $00, $01, $10, $0A, $00, $10, $70, $1A, $00, $70, $03, $01, $11, $03
                dc.b    $03, $21, $71, $A0, $06, $06, $01, $A0, $00, $02, $17, $1A, $02, $07, $21, $66
                dc.b    $BA, $00, $02, $21, $66, $02, $02, $02, $21, $03, $05, $02, $FF, $FF, $FF, $FF
                dc.b    $04, $07, $A0, $00, $0A, $00, $A0, $00, $0A, $05, $01, $BA, $03, $02, $66, $BA
                dc.b    $02, $17, $21, $66, $BA, $00, $41, $10, $76, $DD, $B6, $77, $70, $11, $0A, $11
                dc.b    $07, $70, $00, $A0, $10, $07, $00, $0A, $01, $03, $02, $A0, $10, $02, $02, $0A
                dc.b    $01, $03, $06, $A0, $DD, $DD, $DD, $D1, $10, $02, $02, $11, $01, $02, $08, $6A
                dc.b    $00, $10, $01, $A0, $70, $00, $07, $03, $05, $11, $00, $07, $00, $7A, $03, $1B
                dc.b    $10, $0A, $BB, $C7, $6D, $D6, $00, $A1, $10, $10, $0A, $16, $01, $00, $01, $60
                dc.b    $10, $77, $A7, $00, $07, $00, $01, $01, $70, $01, $10, $02, $0E, $10, $70, $17
                dc.b    $10, $11, $01, $07, $67, $77, $00, $77, $77, $70, $77, $02, $01, $07, $04, $05
                dc.b    $01, $11, $11, $01, $11, $02, $02, $10, $01, $03, $01, $10, $03, $06, $76, $67
                dc.b    $77, $77, $00, $10, $02, $01, $01, $02, $02, $01, $10, $02, $01, $01, $02, $02
                dc.b    $01, $01, $02, $02, $01, $10, $02, $01, $01, $02, $0D, $01, $00, $07, $10, $10
                dc.b    $60, $70, $11, $70, $77, $01, $00, $77, $02, $16, $10, $77, $70, $10, $00, $77
                dc.b    $01, $00, $07, $00, $01, $00, $07, $70, $01, $00, $07, $01, $10, $00, $61, $10
                dc.b    $03, $02, $A0, $A0, $02, $25, $AA, $AA, $00, $0A, $0A, $AA, $00, $0A, $0A, $AA
                dc.b    $00, $0A, $AA, $AA, $A0, $AA, $AA, $AA, $A0, $A0, $AA, $AA, $00, $AA, $0A, $00
                dc.b    $AA, $0A, $00, $AA, $00, $0A, $0A, $A0, $00, $0A, $A0, $02, $02, $A0, $0A, $03
                dc.b    $01, $A0, $02, $01, $1A, $02, $02, $A0, $B0, $02, $08, $A0, $FF, $DC, $B0, $CD
                dc.b    $00, $21, $0A, $03, $01, $70, $02, $03, $02, $11, $12, $02, $01, $07, $03, $02
                dc.b    $21, $20, $02, $01, $02, $08, $01, $20, $02, $01, $02, $03, $01, $27, $02, $02
                dc.b    $02, $6A, $03, $01, $10, $02, $05, $26, $A0, $72, $00, $01, $02, $08, $02, $1A
                dc.b    $00, $A0, $02, $3F, $FF, $F2, $0F, $01, $02, $07, $01, $20, $03, $25, $01, $45
                dc.b    $5F, $5F, $DC, $10, $0A, $A0, $00, $10, $10, $AA, $00, $01, $10, $00, $AA, $70
                dc.b    $10, $10, $00, $16, $71, $01, $16, $60, $16, $66, $61, $17, $76, $66, $66, $AA
                dc.b    $AB, $B1, $07, $02, $1F, $A1, $71, $00, $0A, $17, $16, $AA, $A1, $71, $10, $01
                dc.b    $66, $11, $70, $76, $11, $17, $00, $11, $67, $70, $01, $77, $00, $11, $10, $60
                dc.b    $01, $0A, $AA, $60, $02, $05, $0A, $00, $10, $A0, $0A, $04, $02, $01, $0A, $02
                dc.b    $02, $10, $A0, $03, $01, $A0, $02, $02, $AA, $A0, $02, $1C, $0A, $DD, $DD, $DF
                dc.b    $01, $00, $01, $02, $07, $00, $01, $10, $A1, $00, $01, $00, $10, $00, $01, $00
                dc.b    $70, $00, $01, $00, $10, $00, $10, $10, $02, $05, $10, $10, $00, $01, $10, $02
                dc.b    $1F, $01, $00, $12, $00, $01, $01, $12, $00, $11, $01, $10, $00, $11, $10, $02
                dc.b    $00, $10, $01, $20, $01, $11, $02, $00, $01, $02, $20, $00, $22, $20, $00, $02
                dc.b    $13, $01, $02, $08, $0C, $44, $23, $5F, $F4, $10, $07, $A0, $A0, $00, $01, $A0
                dc.b    $17, $02, $04, $A0, $01, $01, $1A, $04, $0D, $0A, $70, $00, $70, $00, $10, $A0
                dc.b    $10, $01, $00, $D7, $1A, $C6, $02, $02, $77, $10, $02, $01, $10, $05, $01, $11
                dc.b    $02, $01, $11, $02, $01, $01, $03, $0D, $10, $00, $07, $01, $00, $07, $70, $00
                dc.b    $76, $61, $11, $01, $71, $03, $06, $16, $10, $00, $11, $10, $61, $02, $03, $01
                dc.b    $06, $10, $02, $08, $10, $70, $77, $00, $01, $01, $00, $77, $02, $10, $66, $66
                dc.b    $00, $07, $00, $10, $00, $70, $01, $11, $07, $77, $01, $10, $07, $70, $02, $06
                dc.b    $07, $70, $01, $00, $77, $77, $02, $35, $70, $70, $01, $11, $11, $11, $66, $76
                dc.b    $77, $77, $00, $11, $00, $0A, $00, $11, $00, $0A, $01, $11, $00, $0A, $01, $10
                dc.b    $00, $0A, $00, $11, $11, $11, $77, $77, $77, $77, $11, $11, $11, $11, $DD, $7D
                dc.b    $7D, $77, $A0, $AA, $AA, $00, $AA, $AA, $AA, $00, $A0, $AA, $0A, $02, $13, $A0
                dc.b    $01, $01, $11, $11, $10, $10, $77, $77, $77, $77, $11, $11, $11, $11, $DD, $DD
                dc.b    $DD, $DD, $0D, $07, $0A, $00, $0A, $00, $0A, $00, $A0, $02, $02, $0A, $01, $02
                dc.b    $01, $A0, $03, $02, $A0, $67, $02, $03, $0A, $70, $A0, $02, $02, $10, $A0, $02
                dc.b    $01, $A7, $02, $02, $0A, $01, $02, $02, $0A, $0A, $08, $02, $CD, $B0, $02, $02
                dc.b    $71, $7B, $02, $03, $77, $77, $A0, $02, $10, $07, $6A, $A0, $77, $00, $76, $1A
                dc.b    $10, $07, $07, $71, $00, $77, $00, $70, $A6, $03, $04, $0A, $CB, $BB, $BB, $10
                dc.b    $01, $AA, $03, $02, $61, $A0, $02, $02, $70, $0A, $02, $05, $46, $77, $DD, $DC
                dc.b    $02, $02, $03, $01, $00, $20, $03, $01, $02, $04, $01, $20, $03, $02, $02, $20
                dc.b    $03, $01, $02, $04, $05, $23, $33, $44, $45, $10, $02, $01, $01, $02, $07, $70
                dc.b    $00, $10, $00, $07, $00, $01, $02, $16, $70, $00, $11, $00, $07, $22, $00, $11
                dc.b    $10, $00, $22, $22, $01, $45, $55, $FF, $DD, $10, $00, $A0, $00, $10, $04, $05
                dc.b    $10, $0A, $00, $01, $01, $02, $16, $70, $00, $10, $A0, $07, $70, $01, $0A, $11
                dc.b    $16, $66, $66, $DD, $DD, $DD, $C6, $00, $0A, $00, $0A, $00, $0A, $0E, $01, $A0
                dc.b    $03, $08, $6C, $CB, $BB, $BB, $C6, $CB, $BB, $BB, $04, $01, $0A, $09, $01, $A0
                dc.b    $03, $01, $A0, $05, $08, $BB, $BB, $BB, $BB, $BB, $BB, $BB, $BB, $02, $01, $0A
                dc.b    $03, $01, $0A, $02, $01, $A0, $03, $03, $A0, $00, $0A, $02, $0E, $0A, $A0, $00
                dc.b    $AA, $A0, $11, $BC, $66, $77, $66, $43, $33, $22, $20, $0B, $01, $21, $06, $02
                dc.b    $02, $17, $03, $01, $01, $02, $11, $21, $6A, $23, $4F, $DC, $A0, $21, $70, $00
                dc.b    $A0, $00, $0B, $00, $A0, $02, $17, $A0, $02, $07, $01, $1A, $0A, $00, $20, $70
                dc.b    $AA, $02, $0A, $11, $0A, $00, $02, $07, $10, $FF, $FF, $DC, $BA, $04, $01, $A0
                dc.b    $02, $02, $A0, $A0, $02, $05, $10, $A0, $00, $0A, $0A, $0C, $14, $5D, $BA, $A0
                dc.b    $BA, $00, $71, $10, $AA, $02, $17, $71, $10, $00, $21, $17, $76, $00, $02, $21
                dc.b    $11, $02, $02, $02, $20, $03, $01, $02, $04, $04, $FF, $FF, $FF, $FF, $04, $02
                dc.b    $AA, $A0, $02, $0C, $11, $1B, $AA, $AA, $66, $77, $66, $66, $00, $11, $11, $11
                dc.b    $03, $02, $01, $20, $03, $04, $FD, $DD, $DD, $DC, $09, $01, $0A, $03, $01, $0A
                dc.b    $05, $01, $0A, $03, $01, $A0, $02, $06, $0A, $01, $00, $0A, $A0, $10, $02, $01
                dc.b    $01, $02, $1B, $A0, $10, $07, $0A, $01, $00, $70, $A0, $10, $07, $01, $01, $00
                dc.b    $70, $10, $10, $77, $01, $00, $07, $00, $10, $00, $BC, $CC, $DD, $DD, $04, $01
                dc.b    $0A, $03, $01, $0A, $03, $09, $A0, $00, $0A, $00, $10, $00, $0A, $00, $7B, $03
                dc.b    $01, $17, $03, $12, $D6, $CC, $BA, $BA, $00, $70, $01, $11, $0A, $10, $01, $11
                dc.b    $00, $07, $71, $10, $00, $A1, $04, $01, $07, $02, $02, $0A, $70, $04, $0D, $10
                dc.b    $AB, $BB, $06, $BA, $01, $01, $01, $BA, $00, $10, $11, $01, $03, $0F, $11, $00
                dc.b    $A0, $00, $0A, $0A, $AA, $0A, $AA, $0A, $AA, $A0, $0A, $A0, $AA, $02, $02, $0A
                dc.b    $A0, $06, $01, $AA, $03, $02, $11, $A0, $02, $03, $BB, $0B, $A0, $02, $02, $AB
                dc.b    $A0, $09, $06, $CC, $CD, $DD, $DD, $00, $01, $02, $02, $10, $01, $02, $02, $10
                dc.b    $11, $03, $02, $11, $10, $02, $05, $11, $10, $00, $11, $11, $03, $07, $10, $02
                dc.b    $02, $DD, $DD, $74, $DF, $02, $01, $01, $06, $02, $0A, $0A, $07, $01, $A0, $02
                dc.b    $01, $A0, $03, $01, $0A, $02, $04, $FF, $5F, $FF, $FF, $09, $0F, $02, $22, $20
                dc.b    $00, $21, $11, $12, $02, $17, $66, $61, $00, $71, $AA, $A6, $03, $05, $0A, $00
                dc.b    $0A, $00, $0B, $03, $01, $01, $03, $04, $A0, $00, $0A, $A0, $02, $13, $71, $0A
                dc.b    $01, $20, $17, $11, $17, $61, $01, $66, $61, $BC, $77, $77, $77, $DF, $55, $55
                dc.b    $55, $04, $01, $12, $03, $02, $71, $20, $03, $12, $12, $02, $22, $61, $10, $21
                dc.b    $66, $11, $17, $7C, $BB, $6C, $CA, $A0, $00, $5F, $FF, $DA, $02, $02, $02, $6A
                dc.b    $02, $09, $26, $10, $00, $22, $61, $A0, $00, $16, $BA, $02, $01, $6B, $02, $02
                dc.b    $0A, $A0, $02, $01, $A1, $02, $05, $AB, $11, $FF, $FF, $76, $04, $01, $71, $02
                dc.b    $01, $20, $04, $01, $17, $06, $01, $02, $04, $01, $01, $04, $04, $5F, $FF, $F5
                dc.b    $67, $07, $01, $0A, $02, $04, $01, $10, $00, $0A, $02, $02, $A0, $0A, $04, $02
                dc.b    $A0, $A0, $06, $01, $A1, $03, $13, $0A, $0A, $00, $0A, $AB, $B6, $AB, $B6, $66
                dc.b    $60, $67, $61, $11, $17, $11, $11, $67, $70, $11, $02, $1D, $01, $00, $07, $00
                dc.b    $01, $CC, $60, $70, $1B, $BC, $67, $71, $A0, $70, $07, $1A, $00, $07, $61, $00
                dc.b    $0A, $71, $00, $A0, $0A, $10, $00, $A0, $A0, $02, $02, $A0, $A0, $02, $1C, $A0
                dc.b    $00, $AA, $AA, $0A, $BB, $00, $0A, $01, $07, $00, $A0, $10, $70, $0A, $01, $07
                dc.b    $01, $A0, $17, $70, $10, $11, $70, $11, $00, $77, $01, $02, $02, $11, $10, $02
                dc.b    $02, $11, $10, $03, $01, $10, $02, $01, $11, $0D, $01, $01, $02, $0C, $01, $01
                dc.b    $10, $00, $01, $00, $10, $D0, $17, $DD, $DD, $A0, $03, $14, $10, $01, $A0, $00
                dc.b    $06, $17, $1A, $00, $77, $11, $66, $BA, $00, $01, $11, $66, $11, $11, $10, $01
                dc.b    $04, $04, $DD, $DD, $DD, $DD, $04, $07, $A0, $00, $0A, $00, $A0, $00, $0A, $05
                dc.b    $01, $BA, $03, $02, $66, $BA, $02, $03, $01, $66, $BA, $02, $03, $0A, $DF, $55
                dc.b    $02, $04, $03, $33, $11, $1B, $03, $12, $01, $AB, $BB, $77, $77, $10, $16, $00
                dc.b    $06, $16, $6B, $11, $61, $71, $A0, $AA, $07, $1A, $02, $0A, $DB, $A0, $00, $02
                dc.b    $22, $22, $20, $00, $11, $11, $02, $02, $0D, $D0, $06, $02, $0D, $D0, $02, $07
                dc.b    $11, $11, $00, $02, $22, $22, $20, $04, $07, $02, $22, $22, $20, $00, $11, $11
                dc.b    $02, $02, $0D, $D0, $06, $02, $0D, $D0, $02, $07, $11, $11, $00, $02, $22, $22
                dc.b    $20, $04, $07, $02, $22, $22, $20, $00, $11, $11, $02, $02, $0D, $D0, $06, $02
                dc.b    $0D, $D0, $02, $17, $11, $11, $00, $02, $22, $22, $20, $DD, $DD, $DD, $DD, $06
                dc.b    $11, $11, $11, $07, $C7, $77, $77, $00, $B1, $11, $11, $02, $02, $0A, $AA, $02
                dc.b    $02, $AA, $AA, $08, $38, $01, $67, $D7, $77, $11, $11, $11, $11, $77, $77, $77
                dc.b    $77, $11, $11, $11, $11, $AA, $AA, $AA, $AA, $AA, $AA, $AA, $AA, $04, $44, $40
                dc.b    $00, $40, $00, $04, $00, $33, $33, $33, $77, $11, $11, $11, $11, $77, $77, $77
                dc.b    $77, $11, $11, $11, $11, $AA, $AA, $AA, $AA, $AA, $AA, $AA, $AA, $03, $01, $44
                dc.b    $02, $0B, $04, $00, $77, $77, $73, $33, $01, $11, $11, $11, $10, $03, $05, $07
                dc.b    $77, $77, $77, $70, $03, $04, $01, $11, $11, $11, $04, $0C, $0A, $AA, $AA, $AA
                dc.b    $6D, $DD, $DD, $DD, $11, $11, $11, $11, $04, $04, $77, $77, $77, $77, $04, $04
                dc.b    $11, $11, $11, $11, $04, $04, $AA, $AA, $AA, $AA, $04, $07, $02, $22, $22, $20
                dc.b    $00, $11, $11, $02, $02, $0D, $D0, $06, $02, $0D, $D0, $02, $07, $11, $11, $00
                dc.b    $02, $22, $22, $20, $07, $01, $A0, $03, $01, $A0, $03, $01, $A0, $03, $01, $A0
                dc.b    $0E, $01, $A0, $03, $01, $A0, $13, $01, $A0, $03, $39, $A0, $00, $AB, $AB, $CD
                dc.b    $DF, $01, $10, $71, $12, $01, $10, $77, $10, $11, $10, $76, $10, $11, $10, $71
                dc.b    $10, $01, $10, $01, $00, $01, $07, $71, $02, $10, $00, $70, $02, $66, $61, $13
                dc.b    $22, $11, $10, $12, $00, $70, $71, $10, $20, $67, $77, $01, $00, $70, $77, $11
                dc.b    $00, $10, $00, $11, $02, $0B, $71, $11, $12, $07, $71, $11, $10, $43, $43, $23
                dc.b    $22, $07, $01, $02, $02, $02, $02, $2B, $02, $23, $2B, $B3, $00, $02, $B3, $35
                dc.b    $00, $0B, $30, $55, $00, $20, $00, $50, $00, $2B, $88, $89, $02, $2B, $BB, $00
                dc.b    $2B, $B3, $33, $B1, $B6, $65, $50, $3B, $60, $55, $50, $03, $05, $03, $24, $50
                dc.b    $00, $33, $30, $00, $03, $0B, $B3, $99, $8B, $A1, $1D, $07, $00, $10, $70, $07
                dc.b    $10, $00, $70, $10, $76, $01, $07, $B1, $70, $60, $11, $3B, $17, $06, $60, $03
                dc.b    $B1, $70, $17, $02, $06, $17, $11, $AA, $BB, $B9, $EE, $02, $04, $03, $33, $00
                dc.b    $2B, $03, $03, $02, $BB, $BB, $03, $13, $16, $00, $02, $16, $6B, $00, $21, $71
                dc.b    $A0, $00, $07, $1A, $00, $A9, $BD, $7D, $D6, $30, $0B, $02, $10, $0B, $B0, $00
                dc.b    $B0, $B1, $66, $11, $B0, $7C, $BB, $67, $1B, $A0, $00, $AB, $C7, $03, $01, $0A
                dc.b    $04, $05, $56, $6D, $DD, $CA, $30, $02, $15, $17, $00, $B0, $10, $11, $0B, $01
                dc.b    $71, $10, $B0, $17, $07, $11, $11, $71, $10, $71, $CC, $BA, $01, $07, $02, $06
                dc.b    $AA, $B1, $DC, $BA, $0A, $A0, $0A, $01, $A0, $06, $0F, $B1, $11, $11, $00, $C7
                dc.b    $77, $77, $01, $11, $11, $11, $33, $33, $33, $77, $04, $07, $40, $00, $04, $00
                dc.b    $04, $44, $40, $05, $10, $11, $11, $11, $11, $77, $77, $77, $77, $11, $11, $11
                dc.b    $11, $77, $77, $73, $33, $06, $01, $04, $04, $01, $44, $04, $14, $11, $11, $11
                dc.b    $11, $77, $77, $77, $77, $11, $11, $11, $11, $6D, $DD, $DD, $DD, $0A, $AA, $AA
                dc.b    $AA, $04, $05, $01, $11, $11, $11, $70, $03, $05, $07, $77, $77, $77, $10, $03
                dc.b    $0C, $01, $11, $11, $11, $DD, $DD, $DD, $DD, $AA, $AA, $AA, $AA, $04, $04, $11
                dc.b    $11, $11, $11, $04, $04, $77, $77, $77, $77, $04, $0F, $11, $11, $11, $11, $DD
                dc.b    $DD, $DD, $DD, $02, $22, $22, $20, $00, $11, $11, $02, $02, $0D, $D0, $06, $02
                dc.b    $0D, $D0, $02, $07, $11, $11, $00, $02, $22, $22, $20, $10, $01, $B0, $03, $01
                dc.b    $B0, $18, $01, $0A, $03, $01, $0A, $08, $01, $0A, $03, $41, $0A, $00, $AB, $BB
                dc.b    $CD, $CD, $01, $07, $71, $00, $01, $07, $70, $10, $01, $07, $70, $10, $01, $07
                dc.b    $71, $00, $10, $07, $00, $12, $77, $71, $10, $20, $11, $10, $00, $22, $66, $11
                dc.b    $10, $10, $00, $01, $01, $10, $07, $71, $01, $10, $07, $77, $01, $10, $70, $77
                dc.b    $10, $00, $77, $70, $11, $02, $70, $11, $12, $20, $11, $02, $20, $01
Unknow_Pallete_0x0474AC:
Offset_0x0474AC:
                dc.w    $0000, $0A20, $0666, $0888, $0CAA, $0ECC, $0246, $0008
                dc.w    $000E, $046A, $068C, $08CE, $0E22, $0E62, $0000, $0EEE
                dc.w    $0000, $0A42, $0C64, $0E86, $048A, $08CE, $0046, $0068
                dc.w    $008A, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE
                dc.w    $0000, $044C, $066E, $0AAE, $048A, $08CE, $0E46, $0E68
                dc.w    $0E8A, $04CE, $0A24, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0E22, $0E42, $0E62, $0E82, $0C68, $0848, $0628
                dc.w    $0E88, $0E66, $0E44, $0C22, $0A02, $0602, $0000, $0EEE
                dc.w    $0664, $0444, $0666, $0888, $0444, $0666, $0888, $0444
                dc.w    $0888, $0666, $0222, $0262, $02A4, $04E8, $0000, $0EEE
                dc.w    $0664, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE, $0EEE
                dc.w    $0EEE, $0EEE, $0EEE, $0262, $02A4, $04E8, $0000, $0EEE
                dc.w    $0664, $0C4C, $0C8C, $0CCC, $026A, $048C, $04CC, $0A84
                dc.w    $0EA6, $0AAA, $0222, $0262, $02A4, $04E8, $0000, $0EEE
                dc.w    $0664, $0A2C, $0E4E, $0EAE, $006C, $048C, $00CE, $0E62
                dc.w    $0E84, $0888, $0222, $0262, $02A4, $04E8, $0000, $0EEE
                dc.w    $0664, $080A, $0C4C, $0C8E, $004A, $046C, $00AE, $0C40
                dc.w    $0E84, $0666, $0000, $0262, $02A4, $04E8, $0000, $0EEE
                dc.w    $0622, $0262, $02A4, $04E8, $0400, $0620, $0840, $0A40
                dc.w    $0A40, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE
                dc.w    $0622, $0262, $02A4, $04E8, $0600, $0820, $0A60, $0C82
                dc.w    $0EA4, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE 
Unknow_Data_0x04760C:
Offset_0x04760C:
                dc.b    $40, $00, $00, $2D, $01, $20, $02, $02, $02, $12, $03, $02, $C6, $20, $02, $03
                dc.b    $0B, $72, $20, $02, $06, $AD, $62, $02, $FF, $DC, $61, $02, $02, $01, $66, $02
                dc.b    $06, $07, $B1, $00, $02, $6A, $A0, $02, $01, $10, $02, $01, $21, $06, $09, $20
                dc.b    $00, $1A, $00, $12, $66, $1A, $AB, $16, $03, $01, $10, $03, $02, $10, $01, $03
                dc.b    $01, $01, $02, $52, $07, $01, $6D, $DD, $10, $67, $77, $DD, $01, $66, $BA, $00
                dc.b    $76, $06, $CD, $DD, $BB, $BC, $CD, $DD, $DD, $CB, $BA, $AA, $66, $06, $67, $77
                dc.b    $BB, $66, $66, $61, $00, $A1, $00, $70, $00, $B1, $07, $07, $0A, $01, $16, $60
                dc.b    $C1, $B0, $67, $76, $CB, $B6, $11, $67, $BC, $61, $17, $BA, $61, $16, $71, $00
                dc.b    $11, $00, $67, $DD, $00, $06, $66, $D6, $70, $16, $1B, $0B, $01, $11, $A0, $00
                dc.b    $60, $35, $FF, $FF, $76, $32, $02, $03, $AB, $66, $20, $02, $09, $A1, $10, $00
                dc.b    $B0, $A0, $02, $00, $6D, $77, $02, $06, $06, $76, $11, $20, $66, $AB, $02, $04
                dc.b    $42, $FF, $23, $02, $02, $06, $22, $16, $00, $02, $16, $6B, $02, $05, $7B, $A0
                dc.b    $00, $21, $10, $02, $05, $07, $A0, $00, $02, $11, $06, $16, $20, $16, $A0, $BC
                dc.b    $66, $11, $6B, $BC, $BB, $76, $16, $CB, $00, $B0, $61, $16, $00, $01, $17, $11
                dc.b    $00, $0A, $05, $01, $70, $02, $26, $01, $00, $DD, $DC, $61, $07, $DD, $DC, $CB
                dc.b    $BB, $BA, $AB, $BC, $DD, $67, $76, $60, $66, $11, $66, $66, $BB, $70, $70, $1A
                dc.b    $00, $77, $07, $1B, $00, $70, $76, $10, $A0, $44, $45, $56, $7D, $02, $02, $02
                dc.b    $20, $03, $01, $02, $16, $0A, $22, $33, $00, $02, $16, $66, $00, $21, $70, $10
                dc.b    $03, $05, $10, $02, $17, $00, $10, $03, $05, $11, $21, $70, $00, $11, $03, $0B
                dc.b    $11, $67, $00, $11, $0B, $BB, $BB, $AA, $A0, $A0, $A0, $02, $02, $0A, $AA, $03
                dc.b    $01, $AA, $03, $01, $AA, $03, $01, $AA, $03, $01, $AA, $02, $05, $01, $A0, $A0
                dc.b    $00, $11, $03, $01, $11, $03, $01, $11, $03, $01, $11, $03, $01, $11, $03, $01
                dc.b    $11, $03, $01, $11, $03, $0D, $76, $66, $6C, $CC, $0C, $66, $67, $77, $1B, $AA
                dc.b    $AB, $BB, $07, $0A, $01, $0A, $03, $01, $A0, $02, $13, $0A, $00, $10, $CC, $C6
                dc.b    $66, $77, $77, $77, $76, $BB, $BB, $B1, $16, $00, $AA, $A0, $10, $AA, $04, $05
                dc.b    $01, $10, $00, $01, $10, $02, $01, $10, $03, $04, $66, $66, $67, $61, $04, $01
                dc.b    $20, $03, $01, $02, $04, $01, $20, $05, $05, $01, $00, $02, $00, $11, $03, $05
                dc.b    $11, $02, $FF, $DD, $DC, $02, $01, $A0, $02, $3D, $A0, $AA, $A0, $00, $10, $00
                dc.b    $0A, $00, $70, $00, $11, $02, $0A, $00, $07, $00, $11, $00, $70, $00, $27, $0A
                dc.b    $01, $32, $20, $CB, $71, $C6, $01, $07, $71, $0B, $70, $10, $16, $A0, $A1, $01
                dc.b    $11, $1A, $07, $10, $60, $66, $B0, $01, $10, $01, $70, $71, $71, $01, $17, $00
                dc.b    $16, $17, $7C, $BD, $DD, $71, $A0, $02, $01, $1A, $03, $03, $A0, $0A, $AA, $02
                dc.b    $73, $0A, $07, $A0, $A0, $00, $A6, $70, $1B, $BA, $01, $0A, $66, $67, $C1, $06
                dc.b    $DD, $D0, $16, $76, $00, $D1, $DD, $71, $00, $0C, $00, $76, $00, $0A, $0B, $70
                dc.b    $00, $06, $A6, $D6, $00, $D1, $10, $AB, $00, $07, $61, $7B, $00, $0A, $61, $16
                dc.b    $CD, $B0, $B0, $C7, $11, $00, $A0, $B1, $00, $0A, $10, $07, $10, $01, $00, $61
                dc.b    $17, $70, $70, $D6, $11, $77, $00, $A7, $1A, $B7, $01, $11, $60, $01, $10, $61
                dc.b    $0D, $0A, $01, $03, $76, $0A, $01, $10, $1B, $A1, $07, $72, $0B, $17, $0B, $10
                dc.b    $06, $61, $70, $00, $0D, $60, $AA, $10, $0A, $70, $B1, $70, $01, $11, $67, $12
                dc.b    $26, $66, $DC, $DF, $05, $02, $01, $A0, $06, $02, $01, $0A, $02, $07, $10, $A0
                dc.b    $BA, $21, $0A, $0A, $11, $03, $08, $01, $DC, $A0, $AA, $16, $00, $0A, $01, $04
                dc.b    $01, $77, $02, $01, $10, $02, $15, $A1, $07, $00, $AB, $10, $61, $10, $10, $06
                dc.b    $67, $16, $00, $66, $BA, $10, $01, $71, $00, $DD, $00, $0A, $0E, $02, $07, $7D
                dc.b    $02, $06, $67, $61, $D0, $00, $7A, $B7, $02, $04, $5F, $F4, $2F, $FD, $03, $01
                dc.b    $21, $02, $1E, $02, $17, $02, $22, $30, $16, $20, $11, $16, $67, $06, $70, $60
                dc.b    $10, $06, $77, $06, $77, $00, $10, $61, $16, $16, $60, $66, $71, $70, $00, $01
                dc.b    $10, $02, $1A, $10, $10, $66, $00, $11, $77, $76, $77, $07, $06, $01, $11, $61
                dc.b    $6B, $71, $60, $06, $AB, $66, $10, $0A, $B6, $17, $0D, $D0, $BD, $02, $01, $A0
                dc.b    $02, $28, $AA, $A0, $00, $77, $D7, $DC, $00, $DD, $DD, $77, $D0, $AA, $AA, $AB
                dc.b    $1D, $77, $77, $BA, $60, $7D, $77, $61, $A0, $6C, $67, $06, $C1, $00, $76, $01
                dc.b    $77, $77, $11, $07, $10, $11, $A0, $01, $01, $AA, $02, $11, $AA, $00, $A1, $01
                dc.b    $A0, $AA, $16, $16, $6A, $77, $61, $01, $17, $01, $DC, $66, $76, $03, $05, $10
                dc.b    $00, $0A, $00, $07, $02, $02, $01, $07, $03, $0B, $07, $07, $B0, $10, $70, $01
                dc.b    $76, $66, $11, $16, $11, $02, $0A, $77, $61, $61, $61, $70, $77, $70, $00, $77
                dc.b    $07, $02, $01, $77, $03, $01, $07, $05, $06, $07, $00, $11, $11, $16, $77, $03
                dc.b    $05, $17, $22, $22, $01, $10, $02, $01, $01, $03, $01, $01, $04, $01, $07, $03
                dc.b    $01, $07, $03, $01, $07, $07, $09, $70, $00, $02, $7C, $16, $00, $02, $7A, $A6
                dc.b    $02, $02, $27, $A1, $03, $01, $6A, $02, $02, $02, $1B, $03, $01, $26, $03, $01
                dc.b    $02, $04, $05, $33, $32, $32, $24, $17, $04, $3B, $70, $11, $06, $66, $00, $17
                dc.b    $66, $B6, $10, $71, $B1, $CB, $A1, $0A, $0A, $1D, $C7, $BA, $DC, $22, $1B, $A7
                dc.b    $17, $5F, $DB, $70, $06, $A0, $01, $10, $10, $B0, $01, $10, $17, $6D, $D6, $01
                dc.b    $7A, $66, $11, $17, $B0, $B1, $71, $01, $00, $C1, $11, $17, $BA, $66, $67, $61
                dc.b    $67, $AD, $CB, $11, $6D, $02, $02, $A0, $7A, $02, $02, $01, $11, $02, $02, $07
                dc.b    $07, $02, $02, $01, $11, $03, $01, $71, $02, $02, $A0, $07, $05, $03, $0A, $17
                dc.b    $07, $03, $07, $07, $00, $01, $70, $01, $AA, $A7, $02, $08, $66, $60, $11, $01
                dc.b    $11, $11, $10, $76, $02, $14, $11, $12, $10, $00, $22, $20, $10, $17, $42, $00
                dc.b    $10, $61, $62, $00, $70, $76, $20, $00, $01, $02, $02, $02, $71, $20, $02, $01
                dc.b    $12, $03, $01, $20, $07, $04, $24, $FF, $FF, $55, $02, $10, $0A, $16, $00, $0A
                dc.b    $B6, $77, $00, $B1, $06, $61, $07, $01, $BA, $AA, $00, $1A, $02, $01, $07, $04
                dc.b    $01, $A0, $02, $0E, $60, $DA, $0B, $DB, $76, $6A, $00, $61, $16, $10, $0B, $BA
                dc.b    $10, $A0, $02, $01, $70, $03, $1A, $10, $A0, $00, $AB, $00, $1A, $AA, $10, $00
                dc.b    $01, $11, $00, $0B, $B0, $66, $BB, $A0, $A0, $06, $D0, $00, $16, $D1, $00, $0B
                dc.b    $6D, $02, $14, $B0, $D0, $A1, $00, $0B, $00, $16, $7D, $0A, $00, $6D, $A0, $01
                dc.b    $AB, $D0, $A0, $67, $70, $DC, $16, $03, $01, $01, $03, $01, $01, $03, $01, $01
                dc.b    $03, $01, $01, $03, $01, $01, $03, $01, $01, $03, $06, $01, $71, $76, $0C, $60
                dc.b    $10, $03, $01, $10, $03, $01, $10, $03, $01, $10, $03, $01, $10, $03, $01, $10
                dc.b    $03, $01, $10, $03, $04, $1D, $0D, $DD, $D7, $1C, $14, $7C, $1C, $C1, $C1, $07
                dc.b    $B7, $00, $76, $01, $00, $77, $1A, $0A, $01, $11, $00, $0A, $0A, $0A, $A0, $02
                dc.b    $30, $A0, $0A, $17, $A0, $00, $A6, $01, $7B, $BB, $71, $10, $67, $77, $11, $06
                dc.b    $07, $00, $76, $0A, $10, $77, $1A, $0A, $A1, $11, $A0, $01, $0A, $AA, $0A, $07
                dc.b    $AA, $00, $A1, $01, $66, $CC, $76, $01, $77, $66, $77, $07, $77, $61, $66, $01
                dc.b    $70, $02, $1C, $0A, $17, $70, $01, $00, $A1, $11, $00, $0A, $0A, $A0, $11, $01
                dc.b    $A0, $A6, $00, $06, $7C, $60, $00, $61, $01, $11, $10, $43, $22, $01, $07, $03
                dc.b    $01, $70, $03, $01, $70, $03, $01, $70, $03, $01, $70, $03, $01, $70, $03, $01
                dc.b    $70, $03, $05, $70, $22, $22, $01, $66, $06, $0F, $01, $01, $00, $10, $11, $11
                dc.b    $11, $11, $11, $11, $10, $10, $10, $10, $10, $02, $11, $70, $00, $07, $07, $77
                dc.b    $33, $01, $06, $6B, $02, $60, $10, $A0, $00, $A1, $00, $A0, $03, $01, $10, $03
                dc.b    $1C, $7A, $00, $A1, $10, $11, $02, $6A, $70, $06, $00, $1A, $B1, $00, $42, $06
                dc.b    $C7, $66, $70, $07, $C6, $77, $10, $07, $00, $11, $00, $01, $A0, $03, $01, $10
                dc.b    $03, $01, $60, $02, $01, $07, $03, $01, $0A, $02, $10, $DD, $DA, $76, $61, $BB
                dc.b    $B1, $17, $70, $BB, $BB, $B6, $67, $B0, $BB, $06, $61, $03, $13, $01, $B0, $BB
                dc.b    $A6, $61, $BB, $BB, $16, $66, $BB, $11, $17, $77, $CC, $67, $54, $44, $11, $10
                dc.b    $02, $02, $76, $60, $02, $01, $67, $07, $01, $77, $03, $02, $66, $60, $02, $02
                dc.b    $66, $10, $02, $06, $77, $71, $44, $44, $70, $07, $02, $07, $77, $00, $01, $11
                dc.b    $70, $01, $10, $02, $01, $10, $02, $01, $01, $02, $06, $AA, $11, $00, $0A, $00
                dc.b    $11, $03, $17, $61, $AA, $A0, $0A, $07, $A0, $0A, $A0, $21, $1A, $A0, $11, $00
                dc.b    $71, $11, $00, $02, $17, $00, $77, $00, $21, $77, $02, $02, $02, $11, $03, $08
                dc.b    $22, $11, $44, $34, $44, $66, $00, $17, $02, $08, $07, $00, $77, $00, $70, $11
                dc.b    $10, $77, $02, $02, $01, $11, $04, $02, $01, $10, $02, $08, $12, $22, $01, $16
                dc.b    $64, $44, $76, $76, $02, $1E, $16, $76, $00, $07, $71, $1B, $77, $70, $10, $1B
                dc.b    $11, $11, $01, $60, $00, $01, $17, $AB, $11, $10, $07, $CB, $77, $76, $66, $CB
                dc.b    $67, $61, $76, $BB, $03, $01, $01, $03, $02, $01, $01, $02, $16, $70, $00, $10
                dc.b    $61, $16, $16, $77, $66, $67, $17, $71, $06, $01, $21, $10, $10, $66, $50, $70
                dc.b    $1D, $07, $10, $03, $01, $10, $02, $02, $01, $10, $02, $15, $66, $66, $10, $0A
                dc.b    $B6, $71, $70, $01, $AB, $16, $11, $16, $6B, $61, $01, $10, $16, $7D, $7D, $D0
                dc.b    $D0, $06, $01, $A0, $02, $0B, $0A, $76, $00, $7D, $77, $61, $A0, $DD, $DD, $BA
                dc.b    $60, $02, $0E, $BC, $11, $DD, $DD, $61, $01, $61, $10, $10, $01, $07, $00, $10
                dc.b    $67, $02, $06, $06, $1B, $07, $10, $11, $A0, $02, $07, $7A, $00, $70, $01, $10
                dc.b    $00, $01, $02, $0A, $0A, $10, $07, $A0, $A0, $6D, $DB, $00, $AA, $B0, $09, $04
                dc.b    $AA, $AA, $0A, $AA, $02, $01, $A0, $0B, $08, $AA, $01, $67, $76, $00, $AB, $66
                dc.b    $01, $02, $0A, $A1, $60, $AA, $A0, $0A, $11, $00, $0A, $A0, $07, $02, $02, $0A
                dc.b    $A0, $03, $01, $A1, $04, $04, $77, $77, $77, $77, $0F, $01, $01, $03, $01, $10
                dc.b    $02, $01, $01, $03, $01, $10, $03, $02, $11, $11, $02, $08, $01, $11, $00, $01
                dc.b    $10, $00, $01, $10, $02, $01, $10, $05, $08, $07, $77, $00, $07, $70, $00, $07
                dc.b    $70, $02, $04, $16, $66, $66, $44, $02, $01, $01, $03, $02, $07, $20, $02, $01
                dc.b    $11, $03, $02, $7A, $10, $05, $1F, $60, $00, $72, $00, $10, $00, $01, $22, $52
                dc.b    $6D, $61, $00, $02, $11, $60, $00, $21, $76, $72, $02, $17, $B1, $10, $00, $71
                dc.b    $07, $20, $21, $1A, $01, $02, $02, $0A, $A0, $00, $07, $A0, $00, $21, $24, $FF
                dc.b    $52, $23, $02, $1E, $22, $22, $00, $22, $16, $60, $02, $11, $6B, $72, $21, $06
                dc.b    $AA, $10, $10, $6A, $A6, $20, $07, $00, $11, $00, $71, $AA, $02, $00, $45, $F5
                dc.b    $63, $44, $03, $01, $10, $02, $01, $07, $02, $03, $02, $10, $01, $06, $01, $07
                dc.b    $09, $04, $24, $5D, $CC, $AA, $04, $01, $07, $08, $01, $10, $05, $02, $0A, $11
                dc.b    $04, $01, $7A, $02, $04, $67, $61, $CD, $C6, $06, $01, $11, $02, $03, $07, $00
                dc.b    $07, $05, $01, $10, $03, $05, $01, $10, $70, $01, $70, $02, $05, $77, $6D, $CC
                dc.b    $B1, $11, $10, $04, $10, $00, $01, $70, $04, $07, $0A, $00, $A7, $00, $76, $CD
                dc.b    $73, $02, $01, $01, $02, $09, $07, $00, $02, $70, $00, $70, $10, $00, $01, $04
                dc.b    $07, $10, $00, $10, $70, $07, $00, $01, $03, $04, $23, $45, $76, $01, $06, $04
                dc.b    $01, $07, $00, $02, $04, $01, $10, $04, $01, $70, $02, $02, $17, $06, $02, $0B
                dc.b    $07, $60, $24, $46, $10, $16, $00, $B0, $77, $71, $01, $02, $09, $1A, $0A, $01
                dc.b    $11, $00, $0A, $0A, $0A, $A0, $02, $1F, $A0, $0A, $17, $A0, $00, $A7, $01, $7B
                dc.b    $BB, $71, $17, $67, $77, $17, $01, $07, $77, $71, $0A, $10, $00, $1A, $00, $A1
                dc.b    $11, $A0, $00, $0A, $AA, $00, $0A, $02, $15, $0A, $17, $A0, $00, $A7, $01, $7B
                dc.b    $BB, $71, $10, $60, $67, $11, $00, $01, $00, $76, $07, $10, $07, $1B, $03, $36
                dc.b    $1A, $01, $01, $07, $01, $01, $06, $00, $77, $06, $10, $01, $10, $11, $60, $16
                dc.b    $11, $11, $00, $17, $01, $61, $10, $01, $11, $BC, $C7, $77, $77, $A0, $0A, $AA
                dc.b    $AA, $1A, $AA, $00, $0A, $01, $11, $BA, $A0, $77, $77, $01, $11, $11, $00, $77
                dc.b    $77, $11, $11, $11, $13, $11, $02, $0C, $02, $66, $66, $61, $00, $BB, $11, $07
                dc.b    $10, $AA, $00, $07, $02, $13, $11, $70, $00, $11, $77, $00, $10, $77, $00, $11
                dc.b    $02, $11, $10, $11, $14, $00, $10, $07, $70, $02, $04, $70, $00, $01, $07, $05
                dc.b    $05, $01, $00, $70, $01, $10, $02, $04, $10, $00, $07, $01, $02, $04, $60, $01
                dc.b    $11, $11, $03, $01, $01, $02, $04, $11, $10, $01, $11, $02, $01, $10, $0F, $0E
                dc.b    $77, $A7, $6A, $A6, $06, $01, $0A, $00, $01, $00, $10, $01, $00, $06, $04, $06
                dc.b    $01, $A0, $00, $0A, $00, $10, $02, $01, $07, $03, $07, $61, $70, $01, $00, $10
                dc.b    $01, $01, $02, $02, $07, $10, $07, $03, $70, $00, $A0, $03, $05, $06, $17, $01
                dc.b    $A0, $01, $03, $06, $0A, $61, $01, $AA, $CF, $42, $04, $03, $10, $00, $02, $03
                dc.b    $01, $70, $02, $01, $0A, $02, $09, $10, $00, $16, $20, $00, $A0, $A1, $00, $71
                dc.b    $02, $05, $62, $34, $5D, $C6, $07, $06, $01, $10, $02, $03, $02, $00, $71, $02
                dc.b    $02, $01, $07, $06, $02, $20, $10, $03, $05, $01, $42, $35, $FD, $77, $02, $05
                dc.b    $A0, $00, $01, $11, $0A, $04, $1A, $01, $01, $07, $10, $10, $70, $00, $01, $00
                dc.b    $10, $11, $70, $07, $01, $71, $16, $61, $77, $71, $11, $66, $10, $11, $07, $00
                dc.b    $07, $07, $01, $71, $04, $15, $01, $07, $07, $10, $11, $10, $70, $01, $00, $11
                dc.b    $11, $61, $06, $CD, $71, $70, $00, $AA, $10, $00, $01, $03, $17, $10, $11, $00
                dc.b    $10, $07, $00, $71, $01, $00, $77, $00, $10, $11, $00, $10, $00, $01, $11, $01
                dc.b    $10, $76, $76, $11, $02, $01, $10, $03, $01, $07, $02, $07, $01, $70, $10, $01
                dc.b    $77, $00, $02, $02, $0E, $01, $00, $10, $00, $10, $20, $00, $11, $00, $20, $32
                dc.b    $00, $10, $03, $03, $01, $17, $03, $05, $70, $02, $01, $00, $01, $07, $3A, $71
                dc.b    $20, $11, $11, $17, $00, $01, $10, $11, $11, $01, $11, $01, $77, $01, $06, $77
                dc.b    $00, $60, $00, $10, $11, $A7, $01, $A1, $AA, $07, $01, $0A, $00, $B1, $00, $A0
                dc.b    $0B, $61, $16, $1A, $D6, $10, $01, $67, $11, $01, $11, $11, $00, $76, $01, $77
                dc.b    $77, $11, $07, $10                               
;=============================================================================== 
; Level Rings Layout
; [ Begin ]
;===============================================================================                          
Rings_Layout: ; Offset_0x048000:               
                dc.w    Ghz_1_Rings_Layout-Rings_Layout, Ghz_2_Rings_Layout-Rings_Layout 
                dc.w    Id_0100_Rings_Layout-Rings_Layout, Id_0101_Rings_Layout-Rings_Layout    
                dc.w    Wz_1_Rings_Layout-Rings_Layout, Wz_2_Rings_Layout-Rings_Layout 
                dc.w    Id_0300_Rings_Layout-Rings_Layout, Id_0301_Rings_Layout-Rings_Layout  
                dc.w    Mz_1_Rings_Layout-Rings_Layout, Mz_2_Rings_Layout-Rings_Layout    
                dc.w    Mz_3_Rings_Layout-Rings_Layout, Mz_4_Rings_Layout-Rings_Layout    
                dc.w    Id_0600_Rings_Layout-Rings_Layout, Id_0601_Rings_Layout-Rings_Layout 
                dc.w    Htz_1_Rings_Layout-Rings_Layout, Htz_2_Rings_Layout-Rings_Layout 
                dc.w    Hpz_1_Rings_Layout-Rings_Layout, Hpz_2_Rings_Layout-Rings_Layout 
                dc.w    Id_0900_Rings_Layout-Rings_Layout, Id_0901_Rings_Layout-Rings_Layout 
                dc.w    OOz_1_Rings_Layout-Rings_Layout, OOz_2_Rings_Layout-Rings_Layout 
                dc.w    DHz_1_Rings_Layout-Rings_Layout, DHz_2_Rings_Layout-Rings_Layout 
                dc.w    CNz_1_Rings_Layout-Rings_Layout, CNz_2_Rings_Layout-Rings_Layout
                dc.w    CPz_1_Rings_Layout-Rings_Layout, CPz_2_Rings_Layout-Rings_Layout 
                dc.w    GCz_1_Rings_Layout-Rings_Layout, GCz_2_Rings_Layout-Rings_Layout
                dc.w    NGHz_1_Rings_Layout-Rings_Layout, NGHz_2_Rings_Layout-Rings_Layout 
                dc.w    DEz_1_Rings_Layout-Rings_Layout, DEz_2_Rings_Layout-Rings_Layout
Ghz_1_Rings_Layout:   ; Offset_0x048044:               
                incbin  'data\ghz\rng_act1.dat'              
Ghz_2_Rings_Layout:   ; Offset_0x0481DE:               
                incbin  'data\ghz\rng_act2.dat'             
Id_0100_Rings_Layout: ; Offset_0x0483DC:                                   
                dc.w    $FFFF            
Id_0101_Rings_Layout: ; Offset_0x0483DE:                                   
                dc.w    $FFFF                                 
Wz_1_Rings_Layout:    ; Offset_0x0483E0:                              
                dc.w    $FFFF              
Wz_2_Rings_Layout:    ; Offset_0x0483E2:                               
                dc.w    $FFFF               
Id_0300_Rings_Layout: ; Offset_0x0483E4:                                   
                dc.w    $FFFF              
Id_0301_Rings_Layout: ; Offset_0x0483E6:                                 
                dc.w    $FFFF                               
Mz_1_Rings_Layout:    ; Offset_0x0483E8:                               
                dc.w    $FFFF              
Mz_2_Rings_Layout:    ; Offset_0x0483EA:                               
                dc.w    $FFFF                                               
Mz_3_Rings_Layout:    ; Offset_0x0483EC:                                
                dc.w    $FFFF              
Mz_4_Rings_Layout:    ; Offset_0x0483EE:                               
                dc.w    $FFFF              
Id_0600_Rings_Layout: ; Offset_0x0483F0:                                   
                dc.w    $FFFF               
Id_0601_Rings_Layout: ; Offset_0x0483F2:                                 
                dc.w    $FFFF                
Htz_1_Rings_Layout:   ; Offset_0x0483F4:             
                incbin  'data\htz\rng_act1.dat'             
Htz_2_Rings_Layout:   ; Offset_0x0484EA:                
                incbin  'data\htz\rng_act2.dat' 
Hpz_1_Rings_Layout:   ; Offset_0x048654:             
                incbin  'data\hpz\rng_act1.dat'            
Hpz_2_Rings_Layout:   ; Offset_0x0487C6:                 
                dc.w    $FFFF                                              
Id_0900_Rings_Layout: ; Offset_0x0487C8:                                   
                dc.w    $FFFF               
Id_0901_Rings_Layout: ; Offset_0x0487CA:                                 
                dc.w    $FFFF                                            
OOz_1_Rings_Layout:   ; Offset_0x0487CC:               
                incbin  'data\ooz\rng_act1.dat'      
OOz_2_Rings_Layout:   ; Offset_0x04889E:             
                incbin  'data\ooz\rng_act2.dat'                
DHz_1_Rings_Layout:   ; Offset_0x048968:               
                dc.w    $FFFF     
DHz_2_Rings_Layout:   ; Offset_0x04896A:               
                dc.w    $FFFF 
CNz_1_Rings_Layout:   ; Offset_0x04896C:                
                dc.w    $FFFF    
CNz_2_Rings_Layout:   ; Offset_0x04896E:                
                dc.w    $FFFF                
CPz_1_Rings_Layout:   ; Offset_0x048970:               
                incbin  'data\cpz\rng_act1.dat'                                               
CPz_2_Rings_Layout:   ; Offset_0x048A3E:                
                incbin  'data\cpz\rng_act2.dat'             
GCz_1_Rings_Layout:   ; Offset_0x048B94:                
                dc.w    $FFFF    
GCz_2_Rings_Layout:   ; Offset_0x048B96:                
                dc.w    $FFFF               
NGHz_1_Rings_Layout:  ; Offset_0x048B98:                
                incbin  'data\nghz\rng_act1.dat'                                               
NGHz_2_Rings_Layout:  ; Offset_0x048C76:                
                incbin  'data\nghz\rng_act2.dat'  
DEz_1_Rings_Layout:   ; Offset_0x048DB0:              
                dc.w    $FFFF    
DEz_2_Rings_Layout:   ; Offset_0x048DB2:               
                dc.w    $FFFF   
;=============================================================================== 
; Level Rings Layout
; [ End ]
;===============================================================================                                                                
Unknow_Data_0x048DB4: ; Offset_0x048DB4:
                dc.b    $71, $90, $76, $61, $89, $00, $AB, $AA, $33, $33, $00, $10, $02, $02, $20, $01
                dc.b    $04, $0C, $10, $00, $02, $00, $01, $10, $00, $20, $00, $01, $00, $02, $04, $06
                dc.b    $22, $00, $33, $33, $32, $17, $03, $01, $70, $0C, $01, $11, $02, $04, $70, $00
                dc.b    $11, $10, $04, $05, $01, $DD, $76, $11, $16, $06, $01, $01, $04, $08, $01, $00
                dc.b    $07, $00, $10, $0A, $10, $10, $02, $05, $70, $01, $00, $01, $01, $02, $04, $D0
                dc.b    $CD, $DC, $CC, $04, $01, $07, $07, $02, $11, $A0, $03, $01, $10, $02, $02, $01
                dc.b    $60, $03, $01, $0B, $02, $04, $CC, $70, $CC, $DD, $06, $01, $01, $02, $03, $07
                dc.b    $00, $01, $03, $04, $10, $0A, $10, $10, $02, $05, $70, $01, $00, $01, $01, $02
                dc.b    $06, $01, $71, $01, $33, $A1, $70, $02, $10, $67, $01, $02, $00, $11, $10, $02
                dc.b    $22, $00, $16, $61, $11, $11, $16, $77, $77, $02, $0A, $17, $77, $11, $11, $11
                dc.b    $10, $22, $33, $32, $23, $04, $03, $22, $22, $22, $02, $2A, $11, $11, $22, $00
                dc.b    $11, $00, $11, $66, $11, $11, $01, $07, $11, $11, $10, $71, $11, $77, $11, $BB
                dc.b    $99, $FB, $9B, $00, $01, $10, $00, $23, $11, $57, $01, $00, $25, $71, $02, $55
                dc.b    $67, $13, $11, $00, $07, $13, $02, $43, $63, $41, $11, $05, $50, $70, $30, $FA
                dc.b    $CC, $11, $03, $00, $A9, $26, $67, $0A, $26, $77, $77, $03, $70, $53, $33, $A1
                dc.b    $00, $22, $11, $37, $07, $71, $33, $10, $71, $77, $11, $00, $13, $10, $00, $07
                dc.b    $12, $17, $00, $77, $77, $77, $77, $77, $77, $77, $77, $33, $33, $33, $33, $11
                dc.b    $11, $11, $11, $22, $22, $22, $22, $77, $77, $77, $77, $04, $03, $75, $04, $57
                dc.b    $02, $3F, $01, $11, $70, $10, $75, $12, $25, $20, $17, $52, $00, $11, $31, $76
                dc.b    $55, $00, $31, $70, $00, $11, $14, $36, $00, $03, $07, $05, $50, $33, $70, $43
                dc.b    $50, $00, $01, $35, $70, $10, $75, $11, $25, $20, $17, $52, $00, $11, $31, $76
                dc.b    $55, $00, $31, $70, $00, $11, $14, $36, $00, $03, $07, $05, $50, $36, $00, $64
                dc.b    $50, $1A, $06, $01, $70, $06, $20, $11, $70, $02, $01, $02, $03, $12, $01, $57
                dc.b    $00, $01, $00, $13, $01, $30, $11, $11, $70, $12, $22, $22, $07, $77, $77, $77
                dc.b    $04, $1C, $77, $77, $77, $77, $77, $77, $77, $77, $77, $77, $77, $77, $33, $33
                dc.b    $33, $33, $11, $11, $11, $10, $22, $22, $22, $01, $77, $77, $70, $23, $02, $3D
                dc.b    $07, $01, $76, $66, $FF, $88, $76, $61, $89, $00, $70, $07, $71, $90, $26, $70
                dc.b    $07, $10, $12, $27, $00, $09, $10, $12, $70, $70, $01, $01, $10, $00, $30, $10
                dc.b    $30, $01, $15, $20, $06, $70, $10, $00, $03, $11, $00, $71, $10, $33, $30, $02
                dc.b    $11, $11, $A6, $07, $22, $11, $03, $60, $76, $55, $0A, $36, $70, $02, $09, $A9
                dc.b    $25, $55, $22, $22, $88, $89, $22, $20, $03, $03, $02, $20, $01, $03, $01, $01
                dc.b    $07, $01, $10, $03, $01, $07, $02, $18, $21, $70, $53, $32, $10, $00, $10, $11
                dc.b    $07, $00, $70, $00, $71, $11, $01, $17, $10, $00, $11, $71, $AA, $A0, $00, $10
                dc.b    $02, $01, $07, $02, $03, $0A, $00, $0A, $02, $02, $67, $6D, $02, $0D, $07, $01
                dc.b    $D0, $0A, $00, $70, $1D, $A0, $10, $07, $01, $77, $01, $06, $01, $01, $02, $04
                dc.b    $01, $10, $00, $10, $04, $06, $76, $01, $11, $10, $07, $11, $02, $04, $71, $10
                dc.b    $77, $77, $04, $01, $10, $04, $07, $10, $00, $01, $00, $01, $11, $10, $02, $08
                dc.b    $11, $66, $66, $10, $07, $01, $B1, $66, $02, $02, $0A, $A1, $02, $2B, $A0, $0A
                dc.b    $07, $01, $1A, $A0, $00, $77, $01, $1B, $10, $00, $77, $70, $01, $11, $11, $16
                dc.b    $01, $11, $67, $D6, $11, $00, $71, $AB, $01, $10, $07, $1A, $70, $01, $00, $71
                dc.b    $17, $10, $10, $07, $00, $01, $01, $00, $10, $02, $40, $10, $66, $11, $00, $01
                dc.b    $AB, $89, $9D, $DA, $13, $10, $10, $01, $31, $00, $20, $00, $10, $02, $70, $73
                dc.b    $12, $36, $00, $1A, $56, $70, $06, $30, $00, $07, $63, $A0, $55, $52, $9A, $00
                dc.b    $25, $30, $9F, $89, $10, $13, $10, $10, $00, $71, $77, $03, $37, $07, $71, $31
                dc.b    $A1, $00, $13, $10, $03, $70, $65, $44, $0A, $26, $70, $02, $13, $A9, $26, $67
                dc.b    $88, $88, $21, $10, $11, $11, $11, $11, $33, $33, $33, $33, $11, $11, $11, $11
                dc.b    $04, $04, $44, $44, $44, $44, $04, $33, $77, $77, $77, $77, $30, $07, $24, $47
                dc.b    $01, $00, $53, $30, $03, $05, $43, $33, $01, $12, $17, $00, $10, $21, $23, $33
                dc.b    $22, $12, $32, $66, $06, $30, $01, $22, $00, $10, $11, $11, $37, $04, $06, $65
                dc.b    $01, $00, $53, $30, $03, $05, $43, $33, $01, $12, $17, $02, $2A, $21, $23, $33
                dc.b    $42, $12, $32, $66, $06, $22, $11, $22, $77, $01, $23, $33, $07, $02, $31, $10
                dc.b    $10, $73, $03, $01, $00, $01, $11, $33, $07, $07, $21, $11, $90, $00, $72, $21
                dc.b    $01, $70, $07, $65, $09, $17, $70, $02, $13, $98, $16, $67, $88, $88, $11, $10
                dc.b    $11, $11, $11, $11, $33, $33, $33, $33, $11, $11, $11, $11, $04, $04, $44, $44
                dc.b    $44, $44, $04, $0A, $77, $77, $77, $77, $00, $77, $77, $70, $10, $77, $02, $06
                dc.b    $31, $10, $70, $07, $13, $31, $02, $0A, $01, $13, $07, $00, $41, $01, $20, $00
                dc.b    $05, $10, $03, $01, $20, $02, $05, $66, $20, $17, $07, $10, $1B, $04, $34, $77
                dc.b    $74, $43, $02, $02, $70, $07, $02, $02, $07, $70, $02, $02, $77, $70, $03, $01
                dc.b    $76, $02, $02, $77, $63, $02, $02, $76, $31, $02, $30, $63, $10, $06, $67, $12
                dc.b    $45, $77, $07, $70, $64, $07, $70, $62, $21, $71, $60, $31, $01, $22, $36, $50
                dc.b    $13, $10, $00, $01, $00, $01, $00, $65, $00, $10, $30, $07, $30, $33, $32, $23
                dc.b    $31, $22, $10, $01, $01, $01, $12, $23, $30, $23, $30, $0B, $15, $01, $67, $77
                dc.b    $17, $76, $10, $00, $05, $55, $54, $47, $70, $01, $10, $03, $00, $10, $33, $33
                dc.b    $00, $03, $02, $01, $01, $03, $02, $03, $30, $02, $03, $17, $77, $10, $03, $12
                dc.b    $67, $61, $76, $01, $16, $70, $32, $77, $77, $77, $33, $32, $17, $70, $00, $33
                dc.b    $01, $71, $02, $02, $06, $64, $02, $02, $65, $20, $02, $1C, $01, $10, $00, $06
                dc.b    $50, $03, $11, $17, $23, $56, $77, $07, $70, $00, $07, $70, $77, $00, $07, $00
                dc.b    $77, $00, $71, $77, $07, $00, $27, $67, $03, $01, $71, $02, $0B, $33, $07, $11
                dc.b    $11, $01, $22, $44, $76, $00, $12, $33, $19, $0C, $64, $56, $66, $67, $06, $44
                dc.b    $45, $56, $00, $01, $23, $30, $14, $36, $11, $32, $11, $66, $00, $77, $70, $70
                dc.b    $00, $70, $70, $70, $00, $77, $77, $07, $00, $07, $77, $77, $00, $07, $07, $70
                dc.b    $07, $07, $70, $00, $01, $11, $11, $11, $61, $11, $66, $61, $77, $70, $77, $70
                dc.b    $07, $77, $70, $70, $77, $07, $07, $70, $77, $00, $77, $00, $07, $77, $02, $02
                dc.b    $07, $77, $02, $0C, $11, $11, $11, $11, $FF, $EE, $EE, $EE, $01, $00, $77, $77
                dc.b    $02, $01, $70, $0A, $03, $01, $06, $06, $08, $0F, $DC, $CD, $CD, $BD, $06, $77
                dc.b    $77, $60, $01, $21, $12, $10, $00, $32, $53, $02, $02, $06, $20, $02, $1F, $34
                dc.b    $73, $00, $01, $21, $12, $10, $06, $77, $77, $60, $DD, $DD, $DD, $DD, $01, $66
                dc.b    $66, $66, $07, $07, $77, $77, $00, $70, $77, $77, $00, $07, $66, $66, $02, $02
                dc.b    $0B, $88, $02, $02, $03, $33, $02, $2E, $03, $00, $06, $16, $0B, $BB, $66, $66
                dc.b    $66, $66, $77, $77, $77, $77, $77, $77, $77, $70, $66, $66, $66, $67, $BB, $89
                dc.b    $99, $80, $00, $31, $00, $10, $00, $31, $00, $10, $BB, $89, $99, $86, $66, $66
                dc.b    $66, $66, $77, $77, $77, $77, $08, $04, $10, $01, $11, $11, $02, $02, $10, $10
                dc.b    $04, $0C, $01, $10, $10, $10, $66, $66, $66, $10, $77, $77, $70, $70, $02, $01
                dc.b    $07, $04, $03, $70, $11, $11, $02, $02, $10, $10, $06, $16, $8F, $E9, $AB, $BB
                dc.b    $00, $02, $10, $10, $00, $71, $01, $03, $06, $30, $10, $30, $17, $30, $03, $00
                dc.b    $05, $62, $02, $13, $31, $41, $50, $01, $00, $02, $76, $06, $02, $23, $17, $60
                dc.b    $30, $00, $66, $10, $00, $06, $10, $02, $0E, $71, $00, $11, $07, $00, $01, $00
                dc.b    $60, $00, $60, $00, $10, $00, $70, $03, $02, $11, $11, $02, $10, $01, $66, $00
                dc.b    $11, $10, $77, $11, $00, $77, $77, $77, $70, $77, $77, $77, $70, $04, $01, $77
                dc.b    $02, $0B, $76, $22, $44, $06, $22, $11, $11, $76, $43, $33, $25, $02, $03, $70
                dc.b    $77, $70, $02, $01, $70, $02, $02, $70, $77, $02, $02, $70, $77, $03, $10, $07
                dc.b    $55, $41, $77, $61, $33, $30, $16, $61, $16, $06, $23, $16, $77, $17, $20, $02
                dc.b    $1F, $07, $13, $00, $77, $07, $01, $00, $77, $07, $77, $60, $07, $70, $07, $76
                dc.b    $17, $70, $07, $70, $06, $61, $11, $11, $77, $47, $71, $06, $00, $30, $06, $17
                dc.b    $03, $01, $71, $03, $01, $10, $03, $01, $06, $03, $02, $01, $10, $02, $02, $06
                dc.b    $61, $02, $05, $65, $73, $30, $00, $62, $1C, $04, $62, $13, $00, $01, $1C, $16
                dc.b    $16, $32, $11, $11, $07, $77, $00, $07, $00, $77, $77, $70, $00, $77, $77, $70
                dc.b    $00, $77, $77, $70, $00, $77, $02, $01, $07, $03, $13, $01, $11, $11, $11, $66
                dc.b    $66, $66, $11, $77, $77, $77, $00, $77, $77, $70, $00, $77, $77, $70, $02, $08
                dc.b    $07, $77, $00, $77, $07, $77, $00, $77, $03, $08, $11, $11, $11, $11, $FE, $EF
                dc.b    $EF, $9F, $09, $03, $01, $06, $06, $04, $08, $01, $11, $16, $66, $01, $11, $66
                dc.b    $66, $02, $06, $70, $00, $54, $44, $43, $33, $02, $09, $01, $11, $00, $01, $13
                dc.b    $33, $00, $10, $30, $02, $03, $03, $00, $DD, $02, $01, $0D, $02, $0B, $13, $0D
                dc.b    $00, $11, $11, $23, $ED, $42, $53, $5F, $FC, $03, $01, $33, $02, $02, $03, $11
                dc.b    $02, $02, $01, $01, $03, $01, $13, $02, $02, $01, $30, $02, $01, $03, $05, $10
                dc.b    $8E, $8F, $93, $3D, $11, $01, $13, $30, $11, $13, $30, $00, $33, $30, $00, $30
                dc.b    $02, $01, $03, $02, $0F, $03, $31, $10, $03, $31, $10, $10, $30, $10, $01, $00
                dc.b    $89, $89, $F8, $E6, $16, $02, $70, $70, $02, $06, $10, $10, $61, $70, $11, $10
                dc.b    $14, $02, $70, $70, $02, $02, $10, $10, $02, $04, $AA, $B8, $99, $EF, $02, $05
                dc.b    $01, $00, $01, $00, $06, $02, $02, $30, $10, $03, $03, $60, $01, $10, $03, $3F
                dc.b    $03, $01, $00, $10, $00, $06, $00, $11, $46, $16, $66, $16, $17, $07, $77, $72
                dc.b    $70, $07, $07, $21, $77, $77, $01, $00, $77, $70, $73, $10, $77, $70, $10, $01
                dc.b    $00, $07, $31, $00, $11, $11, $00, $13, $45, $52, $02, $30, $10, $12, $30, $66
                dc.b    $01, $30, $66, $65, $13, $06, $65, $30, $00, $66, $30, $35, $36, $63, $53, $02
                dc.b    $0D, $33, $01, $06, $66, $06, $71, $00, $60, $36, $10, $00, $66, $61, $02, $13
                dc.b    $55, $51, $66, $00, $33, $30, $66, $60, $66, $60, $00, $66, $00, $70, $06, $06
                dc.b    $07, $10, $10, $03, $19, $17, $60, $77, $77, $10, $71, $17, $10, $60, $00, $01
                dc.b    $70, $06, $77, $00, $11, $00, $77, $00, $07, $00, $67, $60, $01, $10, $03, $18
                dc.b    $70, $01, $66, $00, $10, $00, $17, $00, $01, $45, $70, $16, $15, $11, $70, $06
                dc.b    $21, $23, $77, $76, $31, $00, $77, $77, $02, $03, $77, $77, $13, $03, $0A, $70
                dc.b    $00, $11, $11, $10, $00, $75, $47, $70, $01, $14, $02, $02, $30, $02, $08, $66
                dc.b    $66, $66, $67, $06, $45, $66, $66, $19, $01, $23, $02, $04, $F8, $99, $99, $EE
                dc.b    $0B, $01, $07, $03, $01, $70, $0B, $05, $70, $71, $00, $01, $70, $04, $01, $70
                dc.b    $04, $01, $01, $03, $02, $01, $10, $02, $02, $77, $10, $02, $0B, $70, $71, $10
                dc.b    $10, $07, $07, $11, $11, $00, $77, $76, $1B, $0C, $77, $54, $54, $45, $56, $11
                dc.b    $11, $23, $ED, $00, $13, $0D, $03, $01, $0D, $02, $06, $03, $00, $DD, $00, $10
                dc.b    $30, $02, $03, $01, $13, $33, $02, $0A, $01, $11, $53, $45, $33, $33, $00, $01
                dc.b    $76, $66, $02, $02, $01, $11, $14, $0C, $60, $77, $77, $77, $66, $66, $66, $66
                dc.b    $11, $11, $11, $11, $14, $01, $10, $03, $01, $10, $07, $18, $07, $01, $07, $07
                dc.b    $07, $88, $A7, $07, $01, $10, $01, $01, $01, $33, $01, $01, $07, $AB, $A7, $07
                dc.b    $07, $01, $07, $06, $08, $02, $01, $07, $02, $02, $88, $A7, $02, $02, $10, $01
                dc.b    $02, $02, $33, $01, $02, $02, $AB, $A7, $02, $0C, $A8, $99, $EE, $8E, $56, $10
                dc.b    $00, $70, $66, $60, $01, $70, $02, $09, $07, $70, $01, $00, $07, $00, $06, $00
                dc.b    $10, $07, $09, $11, $11, $76, $67, $55, $47, $00, $70, $01, $02, $06, $70, $00
                dc.b    $30, $00, $13, $10, $03, $01, $03, $02, $14, $03, $30, $00, $07, $66, $66, $66
                dc.b    $01, $11, $11, $11, $14, $71, $11, $17, $00, $06, $66, $60, $03, $03, $08, $06
                dc.b    $66, $66, $66, $66, $66, $66, $66, $04, $10, $66, $66, $66, $66, $11, $11, $11
                dc.b    $11, $16, $71, $11, $17, $61, $06, $66, $60, $04, $08, $66, $66, $66, $66, $66
                dc.b    $66, $66, $66, $04, $0B, $66, $66, $66, $66, $11, $11, $11, $11, $71, $77, $70
                dc.b    $03, $01, $01, $03, $07, $07, $00, $60, $00, $01, $00, $66, $07, $0F, $66, $66
                dc.b    $66, $10, $11, $11, $11, $10, $06, $66, $66, $77, $00, $77, $07, $02, $0A, $77
                dc.b    $70, $06, $00, $77, $77, $66, $00, $77, $77, $02, $01, $77, $06, $08, $06, $11
                dc.b    $11, $10, $60, $01, $16, $61, $02, $02, $70, $07, $02, $02, $07, $70, $02, $02
                dc.b    $77, $70, $03, $01, $77, $02, $02, $70, $77, $02, $01, $77, $02, $07, $01, $11
                dc.b    $61, $00, $01, $66, $61, $02, $02, $77, $70, $03, $01, $70, $02, $02, $77, $70
                dc.b    $02, $01, $77, $0A, $07, $01, $11, $11, $8F, $EE, $EE, $99, $1E, $0E, $07, $07
                dc.b    $01, $10, $07, $07, $70, $11, $00, $70, $00, $01, $10, $07, $02, $01, $11, $03
                dc.b    $02, $01, $11, $03, $01, $16, $03, $0D, $70, $61, $00, $77, $07, $10, $07, $00
                dc.b    $07, $01, $10, $00, $07, $03, $0B, $70, $01, $10, $07, $00, $11, $70, $70, $00
                dc.b    $67, $07, $03, $01, $70, $02, $03, $77, $00, $01, $07, $01, $10, $06, $01, $01
                dc.b    $03, $01, $10, $02, $02, $01, $01, $02, $07, $10, $10, $10, $00, $01, $70, $01
                dc.b    $02, $02, $77, $70, $02, $02, $07, $70, $08, $01, $77, $08, $01, $01, $03, $01
                dc.b    $11, $02, $01, $77, $0C, $01, $70, $0D, $06, $01, $11, $70, $00, $01, $11, $0F
                dc.b    $01, $77, $08, $01, $11, $03, $01, $11, $02, $01, $76, $0C, $01, $70, $0D, $0E
                dc.b    $01, $10, $CB, $BB, $BA, $AA, $03, $33, $33, $33, $00, $2B, $2B, $2B, $0F, $01
                dc.b    $0A, $03, $1B, $33, $03, $18, $18, $21, $33, $33, $32, $00, $2B, $21, $22, $33
                dc.b    $00, $33, $13, $2B, $0A, $31, $3B, $00, $33, $13, $20, $00, $31, $3B, $02, $02
                dc.b    $13, $20, $02, $0F, $03, $18, $18, $18, $00, $33, $33, $33, $33, $32, $1B, $2B
                dc.b    $2B, $31, $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $13
                dc.b    $02, $0E, $0B, $31, $18, $18, $18, $30, $33, $33, $33, $33, $2B, $2B, $2B, $2B
                dc.b    $0C, $01, $30, $03, $01, $3A, $03, $0C, $12, $18, $18, $18, $33, $33, $33, $33
                dc.b    $2B, $2B, $2B, $2B, $0F, $01, $0A, $03, $0C, $33, $18, $18, $18, $22, $33, $33
                dc.b    $33, $00, $2B, $2B, $2B, $0D, $01, $30, $03, $01, $3A, $03, $06, $12, $15, $F7
                dc.b    $FC, $00, $0D, $04, $01, $31, $06, $05, $0D, $00, $10, $00, $D0, $02, $01, $DD
                dc.b    $05, $06, $30, $10, $16, $66, $99, $88, $02, $02, $44, $44, $02, $02, $01, $11
                dc.b    $06, $02, $0C, $C0, $03, $01, $F1, $08, $04, $71, $00, $85, $DF, $03, $01, $07
                dc.b    $03, $01, $70, $0D, $0B, $01, $00, $07, $00, $01, $70, $07, $01, $00, $77, $77
                dc.b    $02, $01, $70, $02, $0E, $07, $00, $07, $00, $70, $00, $70, $07, $00, $07, $00
                dc.b    $70, $00, $70, $02, $01, $07, $03, $01, $70, $02, $01, $07, $02, $02, $01, $70
                dc.b    $02, $01, $10, $02, $02, $01, $01, $02, $0C, $10, $10, $00, $01, $01, $07, $00
                dc.b    $10, $10, $10, $01, $01, $02, $02, $10, $10, $02, $05, $01, $00, $01, $17, $10
                dc.b    $07, $01, $70, $07, $02, $60, $10, $0A, $04, $11, $10, $01, $77, $0A, $01, $11
                dc.b    $03, $01, $01, $03, $01, $10, $02, $0B, $11, $11, $66, $01, $11, $66, $66, $70
                dc.b    $00, $76, $77, $08, $01, $61, $03, $01, $01, $03, $01, $67, $03, $0C, $66, $11
                dc.b    $10, $00, $66, $61, $11, $00, $76, $70, $00, $77, $04, $0B, $14, $5A, $AA, $EE
                dc.b    $0F, $C3, $22, $11, $0F, $33, $11, $0D, $04, $65, $AA, $98, $88, $04, $0B, $EA
                dc.b    $AA, $54, $10, $12, $23, $CF, $00, $01, $13, $3F, $0D, $04, $31, $39, $0C, $BB
                dc.b    $02, $14, $33, $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $01, $31, $3B, $00
                dc.b    $03, $13, $20, $00, $01, $3B, $02, $02, $03, $20, $02, $01, $3B, $03, $01, $20
                dc.b    $1E, $01, $0B, $03, $01, $0B, $18, $1A, $18, $18, $18, $18, $33, $33, $32, $03
                dc.b    $2B, $21, $22, $3B, $00, $33, $13, $20, $0A, $31, $3B, $00, $33, $13, $20, $00
                dc.b    $31, $3B, $02, $02, $13, $20, $03, $01, $30, $02, $02, $33, $3A, $02, $07, $23
                dc.b    $13, $30, $00, $0B, $31, $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02
                dc.b    $02, $23, $13, $02, $08, $0B, $31, $19, $30, $00, $33, $31, $3A, $02, $07, $23
                dc.b    $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $13, $02, $02, $0B, $31, $03, $01
                dc.b    $23, $03, $06, $0B, $00, $B3, $A3, $A4, $CF, $1C, $04, $60, $00, $82, $DF, $0A
                dc.b    $02, $1D, $21, $02, $02, $01, $10, $02, $02, $83, $33, $02, $02, $0B, $FF, $02
                dc.b    $06, $10, $44, $71, $00, $06, $61, $02, $02, $07, $07, $18, $01, $01, $02, $02
                dc.b    $76, $77, $02, $05, $10, $07, $00, $01, $01, $03, $01, $10, $10, $05, $61, $00
                dc.b    $01, $17, $10, $0A, $01, $60, $05, $07, $11, $11, $66, $00, $11, $16, $66, $02
                dc.b    $06, $07, $00, $11, $10, $01, $77, $08, $02, $60, $10, $06, $09, $61, $11, $10
                dc.b    $00, $66, $11, $10, $00, $07, $03, $04, $71, $00, $01, $77, $1C, $04, $71, $00
                dc.b    $01, $76, $03, $01, $11, $02, $05, $11, $10, $00, $01, $10, $02, $07, $11, $00
                dc.b    $70, $71, $10, $07, $70, $02, $0B, $77, $01, $11, $00, $70, $11, $05, $AA, $99
                dc.b    $98, $15, $04, $01, $30, $02, $01, $77, $02, $03, $02, $77, $30, $02, $01, $15
                dc.b    $0B, $0E, $9C, $0F, $C3, $9A, $03, $2D, $CF, $00, $22, $02, $30, $00, $20, $10
                dc.b    $02, $02, $01, $3F, $03, $01, $F0, $03, $01, $DC, $03, $01, $13, $02, $06, $31
                dc.b    $09, $06, $B3, $03, $3A, $02, $03, $03, $13, $30, $02, $02, $31, $3A, $02, $07
                dc.b    $23, $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $13, $02, $03, $0B, $31, $1B
                dc.b    $02, $01, $28, $14, $01, $30, $03, $01, $3A, $03, $01, $0A, $1A, $01, $0A, $03
                dc.b    $01, $33, $02, $02, $0A, $21, $02, $14, $33, $13, $00, $0A, $31, $2B, $00, $33
                dc.b    $13, $20, $0A, $31, $3B, $00, $33, $13, $20, $00, $31, $3B, $02, $02, $13, $20
                dc.b    $02, $0F, $03, $18, $18, $18, $30, $13, $33, $33, $23, $12, $1B, $2B, $0B, $31
                dc.b    $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $13, $02, $02
                dc.b    $0B, $31, $02, $02, $0A, $33, $02, $01, $33, $02, $02, $0A, $31, $02, $0D, $33
                dc.b    $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $00, $31, $3B, $02, $02, $13, $20
                dc.b    $02, $04, $8B, $90, $90, $8C, $03, $01, $6E, $03, $01, $10, $02, $01, $06, $03
                dc.b    $02, $01, $F0, $06, $01, $60, $03, $17, $10, $10, $88, $77, $00, $FF, $11, $EF
                dc.b    $F0, $10, $00, $10, $F0, $16, $1E, $FE, $11, $60, $1F, $F1, $10, $00, $01, $05
                dc.b    $01, $16, $05, $0F, $AB, $A4, $53, $44, $14, $BA, $A9, $EE, $4F, $32, $21, $11
                dc.b    $00, $31, $10, $0E, $12, $0C, $C0, $00, $2A, $A5, $49, $88, $E9, $AA, $B4, $10
                dc.b    $11, $22, $2C, $40, $00, $11, $23, $11, $04, $89, $99, $AA, $27, $1C, $02, $89
                dc.b    $88, $03, $01, $11, $02, $02, $11, $03, $06, $01, $CC, $03, $03, $0F, $10, $77
                dc.b    $03, $01, $70, $05, $04, $2A, $8A, $06, $77, $10, $06, $07, $70, $01, $10, $00
                dc.b    $70, $04, $06, $01, $00, $67, $07, $00, $10, $16, $0A, $01, $10, $11, $07, $70
                dc.b    $11, $14, $AA, $E9, $8B, $09, $07, $F0, $33, $10, $14, $5A, $AA, $9A, $03, $01
                dc.b    $77, $04, $01, $10, $03, $04, $98, $9A, $A5, $67, $08, $09, $13, $30, $F0, $00
                dc.b    $9A, $AA, $54, $10, $70, $0B, $04, $C8, $A3, $A2, $A8, $03, $01, $0B, $18, $02
                dc.b    $02, $30, $02, $02, $31, $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02
                dc.b    $07, $23, $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $02, $02, $02, $01, $13
                dc.b    $03, $01, $13, $02, $14, $33, $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $0A
                dc.b    $31, $3B, $00, $33, $13, $20, $00, $20, $3B, $02, $01, $31, $03, $04, $33, $20
                dc.b    $00, $0B, $03, $01, $0B, $10, $0D, $03, $18, $18, $18, $33, $33, $33, $33, $0B
                dc.b    $2B, $2B, $30, $20, $13, $0D, $18, $18, $18, $00, $33, $33, $33, $30, $0B, $2B
                dc.b    $2B, $30, $20, $1B, $04, $90, $96, $E8, $12, $05, $01, $61, $05, $17, $10, $00
                dc.b    $01, $1F, $F1, $06, $11, $EF, $E1, $61, $0F, $01, $00, $01, $0F, $FE, $11, $FF
                dc.b    $00, $77, $88, $01, $01, $03, $01, $06, $06, $02, $0F, $10, $03, $01, $60, $02
                dc.b    $01, $01, $03, $01, $E6, $03, $07, $19, $96, $9B, $BB, $00, $0D, $20, $02, $02
                dc.b    $01, $10, $05, $0C, $4F, $03, $31, $10, $14, $BA, $A9, $9F, $00, $10, $00, $70
                dc.b    $04, $04, $89, $99, $AA, $27, $02, $02, $32, $D8, $02, $02, $32, $D0, $04, $0A
                dc.b    $11, $33, $0F, $40, $99, $AB, $B4, $10, $70, $01, $04, $06, $09, $81, $71, $00
                dc.b    $18, $FE, $18, $02, $99, $8A, $02, $04, $C2, $00, $11, $66, $02, $02, $11, $66
                dc.b    $04, $06, $D2, $10, $07, $00, $11, $30, $02, $02, $33, $0B, $02, $10, $FF, $B0
                dc.b    $16, $66, $44, $01, $11, $66, $00, $01, $11, $67, $61, $11, $10, $10, $04, $06
                dc.b    $07, $70, $01, $10, $00, $70, $04, $19, $01, $00, $66, $11, $10, $00, $61, $11
                dc.b    $10, $10, $01, $00, $06, $00, $01, $10, $07, $77, $00, $11, $00, $77, $00, $01
                dc.b    $11, $03, $02, $10, $11, $03, $01, $11, $08, $05, $71, $00, $01, $77, $01, $0B
                dc.b    $01, $11, $03, $01, $10, $0B, $04, $71, $00, $01, $77, $1C, $04, $C8, $A3, $A2
                dc.b    $A3, $17, $01, $0A, $03, $05, $33, $1B, $00, $0A, $22, $02, $14, $33, $13, $00
                dc.b    $0A, $31, $23, $00, $33, $13, $2B, $0A, $31, $3B, $00, $33, $13, $20, $00, $31
                dc.b    $3B, $02, $02, $13, $20, $02, $02, $33, $20, $02, $02, $31, $0A, $02, $07, $32
                dc.b    $13, $30, $00, $2B, $11, $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02
                dc.b    $02, $23, $13, $02, $11, $0B, $31, $18, $18, $18, $30, $00, $23, $33, $33, $03
                dc.b    $22, $1B, $2B, $00, $31, $3A, $02, $07, $23, $13, $30, $00, $0B, $31, $3A, $02
                dc.b    $02, $23, $13, $02, $0D, $0B, $31, $03, $18, $18, $33, $33, $33, $31, $00, $2B
                dc.b    $21, $21, $02, $0D, $33, $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $00, $31
                dc.b    $3B, $02, $02, $13, $20, $02, $01, $1B, $17, $01, $30, $03, $01, $3A, $03, $06
                dc.b    $ED, $E9, $09, $03, $00, $E0, $03, $10, $10, $11, $0F, $10, $FE, $FF, $F1, $1E
                dc.b    $FF, $01, $11, $F0, $10, $F1, $0F, $10, $02, $09, $10, $10, $10, $F0, $00, $EE
                dc.b    $11, $EE, $F0, $05, $0E, $E1, $11, $0F, $10, $F0, $00, $F1, $FE, $11, $10, $01
                dc.b    $10, $00, $10, $02, $01, $01, $02, $0A, $11, $10, $FF, $00, $EF, $F1, $EE, $FF
                dc.b    $00, $E0, $03, $10, $10, $11, $0F, $60, $FE, $FF, $F1, $7F, $FF, $01, $11, $F1
                dc.b    $10, $F1, $0F, $10, $02, $09, $10, $E0, $10, $F0, $00, $1E, $11, $EE, $F0, $02
                dc.b    $14, $01, $0F, $00, $E1, $10, $01, $10, $F0, $00, $F6, $FE, $11, $10, $06, $10
                dc.b    $00, $10, $01, $00, $01, $02, $09, $11, $10, $FF, $07, $07, $03, $DF, $8F, $70
                dc.b    $03, $01, $77, $03, $02, $33, $30, $02, $0B, $11, $11, $20, $00, $22, $22, $07
                dc.b    $07, $77, $77, $70, $05, $24, $75, $04, $47, $07, $00, $01, $02, $70, $00, $75
                dc.b    $11, $25, $10, $17, $52, $00, $01, $31, $76, $55, $30, $31, $70, $00, $11, $14
                dc.b    $36, $00, $03, $07, $05, $50, $30, $20, $73, $57, $03, $01, $07, $02, $12, $07
                dc.b    $77, $00, $01, $03, $33, $01, $30, $11, $11, $70, $12, $22, $22, $07, $77, $77
                dc.b    $77, $04, $06, $89, $9A, $AA, $AA, $00, $30, $05, $01, $DD, $02, $05, $0D, $00
                dc.b    $01, $00, $D0, $02, $01, $30, $03, $01, $13, $03, $06, $01, $D0, $00, $88, $88
                dc.b    $D0, $03, $01, $77, $04, $01, $70, $03, $01, $70, $02, $0C, $77, $DE, $77, $7A
                dc.b    $EE, $21, $FF, $F2, $11, $00, $11, $10, $02, $03, $EE, $32, $10, $03, $04, $10
                dc.b    $00, $0D, $02, $02, $02, $D3, $20, $02, $07, $21, $00, $01, $11, $00, $01, $10
                dc.b    $02, $0B, $10, $03, $33, $01, $03, $30, $00, $FD, $F5, $CF, $CD, $02, $1F, $33
                dc.b    $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $00, $31, $3B, $00, $02, $13, $20
                dc.b    $00, $01, $03, $18, $18, $33, $33, $33, $33, $0B, $2B, $2B, $2B, $20, $13, $0C
                dc.b    $18, $18, $18, $18, $33, $33, $33, $33, $2B, $2B, $2B, $20, $03, $01, $0B, $10
                dc.b    $0E, $18, $18, $18, $18, $33, $33, $33, $33, $32, $1B, $2B, $2B, $31, $3A, $02
                dc.b    $07, $23, $13, $30, $00, $0B, $31, $3A, $02, $13, $23, $13, $30, $00, $0B, $31
                dc.b    $3A, $18, $18, $30, $12, $33, $33, $33, $33, $2B, $2B, $21, $23, $02, $20, $33
                dc.b    $13, $00, $0A, $31, $3B, $00, $33, $13, $20, $0A, $31, $3B, $00, $33, $13, $20
                dc.b    $00, $21, $03, $18, $18, $33, $33, $33, $33, $32, $1B, $2B, $30, $31, $3A, $02
                dc.b    $07, $23, $13, $30, $00, $0B, $31, $3A, $02, $02, $23, $13, $02, $12, $0B, $31
                dc.b    $00, $18, $18, $30, $00, $33, $33, $33, $30, $C3, $CC, $CD, $CC, $0E, $10, $10
                dc.b    $02, $07, $1F, $FF, $F0, $01, $F1, $00, $0F, $04, $1A, $10, $00, $01, $0F, $01
                dc.b    $F1, $10, $F0, $00, $1F, $FF, $00, $EE, $E0, $00, $11, $FF, $F0, $10, $E1, $01
                dc.b    $10, $FE, $1F, $01, $0F, $03, $1F, $11, $00, $1F, $00, $1E, $11, $F0, $01, $01
                dc.b    $FF, $01, $10, $1E, $EE, $F1, $0E, $0F, $EF, $F0, $6E, $10, $10, $00, $60, $1F
                dc.b    $FF, $F0, $01, $F1, $00, $0F, $06, $42, $01, $0F, $01, $F1, $10, $F0, $60, $1F
                dc.b    $FF, $00, $8E, $E0, $00, $17, $FF, $F0, $10, $E6, $01, $10, $EE, $11, $01, $0F
                dc.b    $10, $0F, $00, $11, $00, $1F, $00, $1E, $11, $F1, $01, $01, $FF, $06, $10, $1E
                dc.b    $EE, $F7, $DE, $F7, $35, $48, $01, $00, $53, $30, $03, $05, $43, $33, $01, $12
                dc.b    $17, $00, $20, $21, $23, $33, $12, $12, $32, $66, $02, $02, $01, $22, $02, $06
                dc.b    $03, $33, $DC, $FE, $ED, $DD, $06, $05, $03, $33, $33, $33, $30, $04, $05, $11
                dc.b    $11, $11, $11, $01, $03, $01, $2E, $02, $02, $1F, $D0, $02, $0A, $1D, $00, $11
                dc.b    $10, $02, $D0, $33, $32, $11, $2D, $02, $09, $33, $12, $DD, $D0, $00, $32, $00
                dc.b    $0D, $DD, $04, $01, $DD, $04, $04, $77, $77, $77, $77, $04, $01, $70, $03, $02
                dc.b    $FA, $70, $02, $0A, $12, $F9, $A7, $77, $32, $11, $2F, $FF, $00, $31, $02, $06
                dc.b    $D0, $03, $10, $00, $E3, $33, $02, $03, $33, $30, $01, $02, $04, $03, $30, $00
                dc.b    $DD, $02, $04, $10, $00, $DD, $03, $03, $01, $D0, $07, $07, $D3, $10, $EE, $DD
                dc.b    $03, $22, $03, $02, $01, $DD, $02, $04, $DD, $00, $13, $0D, $06, $02, $01, $3D
                dc.b    $03, $02, $13, $D0, $02, $07, $01, $2E, $ED, $33, $33, $32, $24, $07, $01, $50
                dc.b    $06, $04, $55, $00, $55, $55, $06, $01, $30, $07, $05, $33, $33, $33, $33, $03
                dc.b    $05, $01, $11, $04, $01, $11, $02, $01, $10, $03, $01, $01, $05, $03, $33, $00
                dc.b    $01, $0F, $04, $10, $00, $11, $11, $0A, $01, $77, $02, $05, $07, $70, $77, $77
                dc.b    $70, $05, $01, $05, $03, $02, $05, $55, $04, $01, $55, $02, $03, $50, $33, $70
                dc.b    $02, $01, $30, $02, $02, $01, $12, $02, $02, $04, $41, $03, $01, $50, $06, $04
                dc.b    $55, $00, $55, $55, $06, $01, $30, $03, $0C, $21, $11, $21, $11, $12, $20, $30
                dc.b    $01, $03, $02, $22, $01, $02, $02, $11, $22, $03, $01, $11, $02, $01, $10, $03
                dc.b    $01, $01, $05, $04, $11, $22, $22, $33, $03, $07, $04, $00, $02, $00, $04, $22
                dc.b    $02, $03, $07, $22, $30, $00, $11, $11, $03, $33, $08, $04, $33, $33, $33, $33
                dc.b    $0C, $24, $01, $00, $20, $00, $31, $00, $20, $00, $04, $44, $00, $01, $70, $00
                dc.b    $41, $11, $64, $44, $41, $00, $02, $20, $00, $10, $30, $12, $20, $02, $03, $11
                dc.b    $02, $22, $00, $01, $11, $02, $03, $01, $11, $02, $03, $10, $70, $03, $02, $05
                dc.b    $77, $12, $22, $23, $34, $02, $01, $01, $03, $01, $01, $02, $01, $31, $02, $0C
                dc.b    $20, $31, $10, $00, $02, $20, $10, $10, $11, $13, $00, $10, $02, $0C, $33, $00
                dc.b    $33, $33, $23, $00, $40, $00, $10, $00, $04, $02, $03, $01, $42, $03, $07, $04
                dc.b    $00, $02, $55, $55, $11, $02, $03, $02, $10, $30, $02, $08, $01, $31, $11, $01
                dc.b    $11, $32, $00, $10, $02, $02, $20, $13, $03, $06, $13, $10, $00, $02, $00, $10
                dc.b    $02, $06, $20, $00, $11, $11, $13, $01, $03, $06, $31, $32, $33, $33, $30, $41
                dc.b    $03, $2C, $04, $04, $00, $01, $00, $04, $20, $01, $00, $40, $20, $00, $55, $50
                dc.b    $00, $10, $00, $01, $00, $10, $30, $00, $10, $10, $03, $30, $00, $10, $00, $03
                dc.b    $30, $00, $30, $10, $02, $00, $03, $11, $00, $03, $00, $01, $11, $23, $03, $01
                dc.b    $10, $02, $03, $10, $74, $03, $02, $07, $70, $52, $32, $23, $34, $74, $10, $04
                dc.b    $01, $01, $02, $02, $40, $01, $06, $01, $04, $06, $03, $70, $00, $03, $03, $01
                dc.b    $43, $07, $01, $51, $06, $04, $55, $00, $01, $55, $02, $01, $01, $03, $02, $10
                dc.b    $30, $02, $03, $01, $03, $30, $03, $05, $03, $33, $33, $30, $10, $02, $02, $03
                dc.b    $11, $03, $02, $01, $11, $04, $01, $11, $02, $03, $10, $70, $03, $02, $01, $77
                dc.b    $02, $03, $01, $17, $30, $12, $04, $10, $11, $11, $11, $05, $01, $77, $02, $05
                dc.b    $07, $70, $77, $77, $70, $04, $01, $07, $05, $01, $05, $03, $02, $05, $55, $04
                dc.b    $01, $07, $02, $05, $50, $70, $00, $05, $53, $03, $01, $03, $02, $01, $50, $06
                dc.b    $01, $55, $02, $01, $55, $07, $01, $30, $03, $0B, $21, $01, $11, $11, $00, $13
                dc.b    $20, $00, $20, $03, $32, $03, $09, $53, $02, $00, $10, $40, $02, $13, $10, $01
                dc.b    $04, $01, $01, $02, $08, $30, $01, $77, $30, $30, $00, $70, $70, $05, $05, $10
                dc.b    $07, $04, $00, $10, $06, $01, $01, $03, $03, $41, $00, $07, $02, $02, $03, $70
                dc.b    $02, $01, $03, $02, $01, $04, $0B, $06, $55, $03, $55, $55, $00, $13, $04, $01
                dc.b    $30, $03, $04, $21, $11, $11, $10, $02, $01, $01, $02, $02, $10, $01, $02, $06
                dc.b    $12, $30, $00, $20, $02, $20, $03, $03, $10, $20, $10, $02, $03, $20, $00, $10
                dc.b    $02, $02, $70, $10, $02, $01, $74, $04, $01, $02, $03, $01, $42, $0E, $03, $70
                dc.b    $00, $10, $02, $02, $04, $10, $0B, $01, $01, $02, $06, $55, $01, $00, $55, $00
                dc.b    $10, $05, $01, $30, $02, $05, $02, $65, $55, $51, $10, $03, $01, $03, $02, $01
                dc.b    $50, $06, $01, $55, $02, $16, $74, $11, $10, $00, $30, $01, $01, $11, $00, $01
                dc.b    $00, $20, $22, $21, $11, $31, $00, $03, $33, $33, $30, $10, $02, $02, $03, $11
                dc.b    $03, $02, $01, $11, $04, $13, $11, $11, $00, $10, $70, $00, $22, $23, $77, $04
                dc.b    $33, $33, $00, $04, $37, $77, $70, $00, $04, $03, $02, $40, $44, $02, $03, $44
                dc.b    $00, $40, $02, $0E, $20, $34, $00, $04, $20, $30, $00, $01, $00, $01, $44, $45
                dc.b    $44, $40, $07, $01, $50, $06, $04, $55, $00, $55, $55, $02, $01, $10, $03, $01
                dc.b    $01, $04, $01, $10, $02, $07, $10, $01, $33, $33, $10, $20, $20, $02, $02, $20
                dc.b    $02, $03, $0A, $40, $00, $04, $00, $42, $21, $04, $00, $02, $03, $02, $0B, $40
                dc.b    $00, $04, $33, $73, $34, $00, $77, $77, $70, $24, $03, $02, $20, $05, $03, $04
                dc.b    $45, $55, $00, $04, $02, $0C, $55, $04, $04, $50, $33, $00, $20, $00, $30, $00
                dc.b    $20, $40, $04, $04, $03, $00, $40, $01, $02, $01, $41, $03, $01, $01, $04, $02
                dc.b    $03, $10, $02, $01, $03, $03, $07, $04, $01, $22, $22, $27, $33, $20, $03, $01
                dc.b    $30, $03, $01, $32, $05, $04, $10, $00, $40, $11, $02, $02, $40, $30, $02, $01
                dc.b    $02, $03, $01, $02, $02, $07, $07, $00, $07, $77, $70, $00, $14, $03, $01, $10
                dc.b    $04, $09, $05, $00, $04, $00, $05, $55, $04, $04, $40, $02, $03, $04, $00, $50
                dc.b    $06, $01, $04, $02, $06, $04, $00, $50, $00, $04, $20, $03, $02, $20, $10, $0A
                dc.b    $07, $01, $00, $12, $22, $23, $22, $30, $03, $01, $20, $0B, $01, $40, $02, $04
                dc.b    $10, $41, $11, $11, $05, $01, $07, $02, $05, $07, $04, $77, $77, $70, $05, $01
                dc.b    $05, $02, $05, $03, $05, $55, $00, $03, $02, $01, $55, $02, $07, $50, $33, $40
                dc.b    $40, $00, $30, $40, $06, $01, $03, $02, $03, $50, $00, $04, $03, $02, $04, $05
                dc.b    $07, $01, $30, $02, $02, $20, $30, $02, $02, $20, $01, $03, $05, $01, $33, $33
                dc.b    $00, $01, $02, $05, $01, $00, $11, $00, $01, $02, $01, $11, $02, $01, $10, $03
                dc.b    $01, $01, $02, $0A, $01, $20, $00, $20, $01, $00, $10, $20, $00, $30, $03, $01
                dc.b    $30, $02, $01, $20, $02, $02, $04, $20, $02, $01, $04, $02, $07, $10, $00, $01
                dc.b    $01, $00, $10, $01, $02, $09, $31, $11, $13, $33, $33, $33, $32, $00, $03, $05
                dc.b    $01, $11, $04, $01, $01, $02, $02, $10, $31, $02, $01, $01, $05, $01, $03, $02
                dc.b    $02, $10, $30, $0A, $01, $03, $07, $04, $10, $11, $11, $11, $05, $0F, $BB, $B6
                dc.b    $54, $44, $0D, $E2, $11, $11, $F2, $11, $13, $33, $00, $10, $30, $02, $03, $03
                dc.b    $00, $DD, $02, $01, $0D, $02, $0B, $13, $0D, $00, $11, $11, $23, $ED, $11, $10
                dc.b    $01, $F3, $03, $01, $0F, $02, $01, $0E, $02, $0A, $0E, $E0, $FF, $EE, $E0, $FF
                dc.b    $11, $00, $0F, $11, $02, $01, $F1, $06, $02, $33, $C1, $02, $07, $CC, $CC, $10
                dc.b    $00, $11, $0C, $C1, $02, $03, $10, $0C, $D1, $02, $0C, $33, $3F, $00, $1F, $0F
                dc.b    $FF, $11, $FF, $E1, $11, $FF, $F1, $02, $04, $EE, $10, $01, $22, $02, $01, $13
                dc.b    $03, $0D, $03, $00, $21, $10, $11, $33, $DE, $32, $10, $11, $00, $D0, $31, $02
                dc.b    $0A, $D0, $30, $00, $DD, $03, $01, $00, $DD, $DE, $31, $03, $02, $D3, $10, $06
                dc.b    $01, $D0, $02, $04, $DD, $03, $00, $DD, $02, $0F, $10, $00, $03, $30, $00, $33
                dc.b    $30, $01, $00, $10, $03, $32, $22, $00, $30, $05, $01, $DD, $02, $05, $0D, $00
                dc.b    $01, $00, $D0, $02, $01, $30, $03, $01, $13, $04, $01, $D0, $02, $02, $01, $30
                dc.b    $03, $02, $1F, $D0, $03, $05, $2E, $11, $11, $11, $01, $03, $04, $11, $33, $33
                dc.b    $30, $03, $02, $03, $33, $04, $07, $22, $22, $0D, $DD, $00, $01, $D0, $02, $01
                dc.b    $13, $03, $01, $30, $02, $03, $01, $00, $D0, $03, $01, $0D, $04, $03, $DD, $00
                dc.b    $30, $02, $04, $01, $13, $0D, $DD, $02, $01, $D0, $02, $01, $13, $03, $01, $30
                dc.b    $02, $03, $01, $00, $D0, $03, $01, $0D, $04, $03, $DD, $00, $30, $02, $06, $10
                dc.b    $02, $22, $22, $11, $10, $02, $08, $FF, $F2, $11, $00, $77, $7A, $EE, $21, $02
                dc.b    $02, $77, $DE, $03, $01, $70, $03, $01, $70, $02, $09, $77, $00, $89, $9A, $DD
                dc.b    $DD, $01, $03, $30, $02, $0D, $10, $03, $33, $00, $01, $10, $00, $21, $00, $01
                dc.b    $11, $D3, $20, $02, $02, $0D, $02, $04, $0C, $10, $00, $FF, $33, $02, $22, $00
                dc.b    $10, $03, $33, $00, $01, $02, $08, $FF, $F2, $01, $10, $77, $7A, $9F, $21, $02
                dc.b    $02, $07, $AF, $03, $01, $07, $04, $04, $AA, $AA, $AA, $AA, $04, $02, $33, $30
                dc.b    $03, $04, $03, $33, $33, $11, $03, $05, $10, $11, $11, $11, $E2, $03, $02, $0D
                dc.b    $F1, $03, $03, $0E, $FF, $FF, $07, $09, $DD, $00, $0D, $DD, $00, $DD, $D0, $00
                dc.b    $32, $02, $11, $33, $12, $33, $32, $11, $2D, $11, $10, $02, $D0, $F2, $22, $12
                dc.b    $FF, $D0, $03, $10, $02, $01, $31, $02, $0A, $32, $11, $2F, $FF, $12, $F9, $A7
                dc.b    $77, $FA, $70, $02, $01, $70, $0E, $01, $07, $03, $01, $70, $02, $04, $77, $00
                dc.b    $77, $77, $09, $0C, $0D, $DD, $DD, $DD, $D0, $00, $03, $32, $22, $DD, $03, $01
                dc.b    $02, $02, $D0, $30, $02, $0B, $D0, $31, $00, $DE, $32, $10, $11, $21, $10, $11
                dc.b    $33, $02, $01, $03, $03, $08, $13, $00, $EE, $10, $01, $22, $FF, $F1, $02, $08
                dc.b    $11, $FF, $E1, $11, $00, $1F, $0F, $FF, $02, $10, $33, $3F, $00, $10, $0C, $D1
                dc.b    $11, $0C, $C1, $00, $CC, $CC, $10, $00, $33, $C1, $07, $01, $F1, $03, $0B, $0F
                dc.b    $11, $00, $EE, $E0, $FF, $11, $00, $0E, $E0, $FF, $02, $01, $0E, $04, $0C, $0F
                dc.b    $11, $10, $01, $F3, $11, $11, $23, $ED, $00, $13, $0D, $03, $01, $0D, $02, $1D
                dc.b    $03, $00, $DD, $00, $10, $30, $00, $F2, $11, $13, $33, $0D, $E2, $11, $11, $FF
                dc.b    $F2, $11, $12, $00, $01, $2E, $ED, $00, $13, $D0, $00, $01, $3D, $06, $02, $13
                dc.b    $0D, $04, $03, $DD, $00, $03, $02, $05, $DD, $66, $55, $55, $55, $80, $FC, $04
                dc.b    $FF, $FF, $FF, $FF, $07, $01, $07, $02, $0C, $07, $AF, $77, $7A, $9F, $21, $FF
                dc.b    $F2, $01, $10, $00, $01, $03, $09, $10, $03, $33, $FF, $E0, $12, $22, $0D, $F1
                dc.b    $02, $01, $E2, $03, $05, $10, $11, $11, $11, $11, $04, $05, $03, $33, $33, $33
                dc.b    $30, $06, $04, $11, $11, $16, $66, $02, $04, $07, $77, $05, $55, $02, $0A, $50
                dc.b    $00, $50, $00, $03, $30, $05, $55, $30, $03, $02, $10, $11, $00, $33, $33, $00
                dc.b    $11, $10, $01, $77, $70, $01, $17, $00, $07, $00, $70, $02, $0D, $77, $00, $55
                dc.b    $50, $00, $05, $00, $05, $00, $50, $33, $30, $55, $02, $0F, $03, $00, $03, $11
                dc.b    $00, $33, $31, $66, $77, $77, $76, $DD, $DD, $DD, $D0, $03, $01, $0D, $04, $02
                dc.b    $77, $77, $04, $01, $77, $04, $01, $70, $03, $05, $07, $AA, $AA, $99, $88, $02
                dc.b    $03, $30, $10, $DD, $04, $01, $D0, $03, $03, $0D, $00, $10, $06, $01, $31, $02
                dc.b    $01, $0D, $02, $0D, $99, $94, $76, $66, $00, $03, $30, $00, $30, $30, $03, $30
                dc.b    $03, $02, $09, $03, $10, $01, $11, $00, $01, $10, $00, $10, $03, $03, $01, $07
                dc.b    $77, $02, $06, $25, $55, $22, $22, $03, $30, $02, $04, $30, $03, $00, $03, $02
                dc.b    $0D, $33, $30, $00, $11, $00, $01, $01, $00, $10, $10, $10, $00, $01, $05, $04
                dc.b    $33, $33, $33, $33, $06, $02, $08, $80, $02, $02, $87, $78, $02, $02, $70, $07
                dc.b    $02, $01, $70, $03, $1B, $87, $00, $0F, $F0, $08, $00, $0F, $F0, $11, $EE, $00
                dc.b    $01, $33, $33, $01, $01, $0A, $A0, $01, $00, $A7, $7A, $80, $08, $70, $07, $78
                dc.b    $04, $01, $08, $02, $01, $07, $03, $04, $DD, $22, $DC, $CC, $0C, $1F, $A0, $00
                dc.b    $10, $00, $71, $11, $BC, $B0, $00, $0B, $70, $7B, $00, $07, $00, $07, $B7, $0C
                dc.b    $CC, $CB, $70, $BB, $77, $70, $0C, $77, $C0, $00, $07, $00, $70, $03, $01, $0C
                dc.b    $03, $02, $07, $55, $03, $02, $33, $B0, $02, $05, $3A, $CB, $BB, $BB, $59, $06
                dc.b    $02, $0B, $50, $02, $01, $0B, $02, $1A, $CC, $55, $09, $5C, $77, $90, $07, $97
                dc.b    $00, $70, $90, $70, $00, $09, $70, $DE, $77, $E9, $EE, $AE, $77, $93, $33, $70
                dc.b    $00, $70, $03, $02, $71, $0A, $02, $02, $B0, $A7, $02, $02, $1A, $70, $02, $01
                dc.b    $01, $03, $0D, $A7, $00, $DE, $77, $9F, $FF, $AE, $77, $92, $00, $70, $00, $70
                dc.b    $03, $02, $71, $08, $02, $02, $B0, $87, $02, $02, $1A, $70, $02, $01, $01, $03
                dc.b    $0A, $A7, $00, $FF, $70, $8F, $60, $00, $8F, $00, $97, $02, $02, $08, $88, $02
                dc.b    $02, $97, $78, $02, $02, $90, $07, $02, $01, $07, $03, $02, $08, $70, $03, $07
                dc.b    $87, $FF, $80, $FF, $F7, $00, $78, $03, $01, $07, $16, $02, $7B, $70, $02, $02
                dc.b    $B0, $70, $02, $01, $0C, $03, $01, $B7, $03, $01, $70, $12, $01, $E0, $07, $01
                dc.b    $80, $03, $01, $10, $03, $01, $70, $4C, $04, $FF, $FF, $FF, $FF, $1C, $04, $DD
                dc.b    $CC, $CB, $BB, $02, $02, $70, $07, $02, $02, $07, $70, $02, $02, $77, $70, $03
                dc.b    $01, $77, $02, $02, $70, $77, $02, $01, $77, $02, $07, $11, $11, $61, $00, $11
                dc.b    $66, $61, $02, $02, $77, $70, $03, $01, $70, $02, $02, $77, $70, $02, $01, $77
                dc.b    $0A, $03, $11, $11, $11, $00, $15, $69, $0A, $00, $15, $00, $97, $00, $14, $00
                dc.b    $97, $00, $01, $05, $3B, $0E, $00, $0F, $00, $10, $00, $10, $21, $78, $29, $79
                dc.b    $00, $10, $00, $10, $00, $F0, $08, $F1, $00, $10, $00, $10, $00, $1E, $00, $10
                dc.b    $00, $10, $00, $10, $00, $1E, $00, $1E, $00, $10, $00, $10, $21, $86, $21, $A8
                dc.b    $00, $30, $00, $07, $08, $11, $08, $26, $00, $07, $00, $30, $08, $36, $08, $21
                dc.b    $03, $17, $10, $00, $02, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00
                dc.b    $10, $00, $10, $00, $12, $08, $12, $00, $10, $02, $04, $08, $11, $00, $21, $03
                dc.b    $17, $21, $00, $22, $00, $23, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10
                dc.b    $00, $10, $00, $12, $08, $32, $08, $21, $05, $01, $07, $03, $17, $10, $00, $08
                dc.b    $00, $1E, $00, $10, $00, $10, $00, $1C, $00, $1C, $00, $10, $00, $10, $00, $12
                dc.b    $00, $15, $00, $10, $03, $03, $16, $00, $27, $03, $17, $10, $00, $28, $00, $1E
                dc.b    $00, $10, $00, $10, $00, $1C, $00, $1C, $00, $10, $00, $10, $00, $12, $00, $35
                dc.b    $00, $26, $09, $17, $1A, $00, $0B, $00, $16, $00, $10, $00, $10, $08, $17, $08
                dc.b    $17, $00, $10, $00, $10, $08, $1C, $08, $1B, $08, $1A, $02, $04, $08, $1A, $00
                dc.b    $2A, $05, $03, $2B, $00, $06, $04, $04, $08, $07, $08, $07, $05, $03, $06, $08
                dc.b    $2B, $04, $04, $08, $2A, $00, $3A, $03, $17, $30, $00, $3B, $00, $36, $00, $2B
                dc.b    $00, $0D, $08, $2C, $08, $0A, $00, $0D, $00, $2B, $00, $0B, $08, $10, $00, $30
                dc.b    $02, $14, $08, $2A, $00, $36, $00, $10, $00, $3B, $08, $06, $08, $2D, $00, $3B
                dc.b    $00, $10, $08, $3D, $08, $3D, $04, $04, $08, $3D, $08, $3D, $04, $24, $E8, $E5
                dc.b    $E8, $D9, $00, $10, $00, $10, $00, $11, $00, $10, $00, $10, $00, $10, $00, $10
                dc.b    $08, $11, $00, $10, $00, $10, $00, $12, $00, $13, $00, $10, $00, $10, $00, $21
                dc.b    $08, $20, $05, $2F, $30, $00, $3C, $00, $10, $08, $1D, $00, $36, $08, $37, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $32, $00, $32, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $34, $00, $34, $00
                dc.b    $10, $00, $10, $05, $80, $E7, $2A, $00, $2C, $01, $B0, $01, $B6, $00, $10, $00
                dc.b    $10, $00, $12, $00, $12, $00, $10, $00, $32, $00, $16, $00, $30, $00, $36, $00
                dc.b    $10, $00, $30, $00, $14, $00, $10, $00, $10, $00, $32, $00, $34, $00, $10, $00
                dc.b    $10, $00, $12, $00, $F0, $00, $10, $00, $D0, $00, $F0, $00, $30, $00, $D0, $00
                dc.b    $10, $00, $30, $00, $14, $00, $10, $00, $10, $00, $F2, $00, $F4, $00, $10, $00
                dc.b    $10, $00, $12, $00, $F0, $00, $10, $00, $F2, $00, $F0, $00, $12, $00, $F6, $00
                dc.b    $10, $00, $16, $00, $14, $00, $10, $00, $10, $00, $11, $00, $D6, $00, $F3, $00
                dc.b    $32, $00, $34, $00, $F5, $00, $36, $00, $F1, $00, $F2, $00, $F4, $00, $D0, $00
                dc.b    $D0, $00, $D2, $00, $D4, $00, $D0, $00, $D0, $00, $32, $00, $34, $00, $13, $00
                dc.b    $F2, $00, $11, $00, $F6, $00, $F6, $00, $11, $00, $D0, $00, $27, $00, $36, $00
                dc.b    $02, $00, $26, $00, $30, $00, $06, $00, $10, $00, $30, $00, $12, $00, $10, $00
                dc.b    $32, $00, $16, $00, $14, $00, $36, $00, $10, $00, $D8, $00, $DE, $01, $73, $01
                dc.b    $70, $09, $72, $01, $77, $01, $70, $01, $75, $08, $12, $00, $12, $00, $20, $01
                dc.b    $71, $00, $20, $01, $71, $00, $10, $00, $10, $08, $12, $00, $12, $00, $10, $00
                dc.b    $10, $C1, $9C, $C1, $9E, $00, $10, $00, $10, $29, $47, $21, $7A, $04, $04, $08
                dc.b    $3D, $08, $3D, $04, $1E, $E9, $E3, $E9, $DF, $00, $04, $00, $04, $61, $AA, $61
                dc.b    $AA, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $00
                dc.b    $53, $00, $10, $03, $33, $34, $00, $61, $00, $10, $00, $10, $00, $12, $00, $12
                dc.b    $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $08, $11, $00, $12, $08, $13
                dc.b    $08, $15, $00, $16, $08, $1B, $00, $18, $00, $19, $00, $10, $00, $1B, $00, $12
                dc.b    $00, $10, $00, $10, $00, $0A, $00, $0A, $05, $80, $93, $F2, $00, $F2, $00, $10
                dc.b    $00, $F2, $00, $16, $08, $F5, $00, $F5, $08, $11, $08, $F2, $00, $12, $08, $15
                dc.b    $00, $10, $00, $36, $00, $36, $00, $10, $00, $10, $00, $12, $00, $C0, $00, $10
                dc.b    $00, $C2, $00, $C3, $00, $16, $00, $C5, $00, $10, $00, $12, $00, $12, $00, $10
                dc.b    $00, $10, $00, $76, $00, $76, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10
                dc.b    $00, $10, $00, $16, $00, $16, $00, $10, $00, $16, $00, $12, $00, $14, $00, $10
                dc.b    $00, $10, $E1, $74, $E1, $74, $E1, $7A, $00, $19, $E1, $78, $00, $1B, $00, $1B
                dc.b    $00, $03, $E1, $5B, $E1, $43, $00, $E0, $00, $10, $00, $E2, $00, $12, $00, $10
                dc.b    $00, $10, $00, $84, $00, $79, $00, $F0, $00, $33, $00, $2E, $E1, $05, $00, $10
                dc.b    $01, $BC, $E1, $05, $01, $A1, $00, $03, $00, $10, $E1, $BE, $E1, $F4, $03, $15
                dc.b    $10, $00, $46, $00, $12, $00, $10, $00, $10, $00, $1E, $00, $1E, $00, $10, $00
                dc.b    $10, $E0, $58, $E1, $E6, $03, $05, $7F, $E0, $00, $E1, $8A, $03, $15, $10, $00
                dc.b    $4B, $00, $16, $00, $10, $00, $10, $00, $10, $00, $11, $00, $10, $00, $10, $00
                dc.b    $15, $00, $12, $04, $4E, $E1, $8F, $E1, $EC, $00, $03, $00, $10, $E1, $AE, $E1
                dc.b    $DE, $00, $10, $00, $10, $00, $37, $00, $31, $00, $10, $00, $51, $00, $76, $00
                dc.b    $33, $00, $10, $00, $10, $00, $12, $00, $A7, $00, $10, $00, $30, $00, $3F, $00
                dc.b    $F6, $00, $6E, $00, $30, $E1, $AD, $E1, $CE, $01, $C3, $00, $65, $E0, $8B, $E1
                dc.b    $88, $00, $11, $00, $D7, $00, $D1, $00, $D7, $00, $D7, $00, $D1, $00, $1C, $00
                dc.b    $2C, $00, $10, $03, $03, $21, $00, $30, $03, $15, $10, $00, $FF, $00, $DE, $00
                dc.b    $39, $00, $37, $00, $09, $00, $07, $00, $F0, $00, $F0, $E0, $8E, $E1, $4A, $03
                dc.b    $3D, $03, $E0, $9E, $E1, $59, $00, $30, $00, $30, $00, $04, $00, $04, $00, $10
                dc.b    $00, $10, $00, $16, $00, $16, $00, $10, $00, $10, $00, $2F, $00, $29, $00, $30
                dc.b    $00, $30, $00, $2F, $00, $29, $00, $32, $00, $32, $00, $6B, $00, $5A, $00, $21
                dc.b    $00, $10, $00, $12, $00, $80, $00, $10, $00, $F0, $E0, $F6, $E1, $42, $03, $3F
                dc.b    $0F, $01, $A4, $00, $6D, $00, $14, $00, $14, $00, $16, $00, $16, $00, $14, $00
                dc.b    $14, $01, $B2, $01, $B3, $01, $A8, $01, $A9, $00, $08, $00, $08, $00, $10, $00
                dc.b    $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $18, $01, $B3, $00, $1A, $01
                dc.b    $AB, $00, $1A, $01, $AB, $00, $1A, $01, $AB, $00, $1C, $01, $AB, $00, $01, $03
                dc.b    $0D, $0F, $01, $AE, $00, $10, $00, $01, $00, $06, $01, $AF, $00, $01, $03, $01
                dc.b    $03, $03, $41, $06, $01, $B7, $00, $12, $00, $0F, $00, $10, $00, $01, $00, $12
                dc.b    $00, $70, $00, $10, $00, $03, $00, $40, $00, $3B, $00, $07, $00, $09, $00, $05
                dc.b    $00, $0B, $00, $0B, $00, $09, $00, $0D, $00, $0F, $00, $0F, $00, $09, $00, $09
                dc.b    $00, $0F, $00, $0B, $00, $09, $00, $0D, $00, $0C, $00, $0F, $00, $0A, $08, $0B
                dc.b    $01, $FC, $00, $07, $02, $0A, $E9, $7F, $E0, $89, $00, $10, $00, $89, $00, $50
                dc.b    $03, $0F, $10, $00, $5E, $00, $D6, $00, $51, $00, $10, $00, $10, $80, $1E, $80
                dc.b    $1F, $26, $01, $80, $05, $01, $80, $37, $01, $80, $07, $01, $80, $67, $03, $80
                dc.b    $00, $80, $4D, $03, $80, $00, $80, $2D, $03, $80, $00, $80, $0D, $03, $80, $00
                dc.b    $80, $6D, $03, $80, $00, $80, $81, $0E, $04, $FF, $00, $FF, $FF, $02, $03, $FF
                dc.b    $FF, $FF, $1E, $04, $FF, $FF, $FF, $FF, $08, $04, $FF, $FF, $FF, $FF, $15, $02
                dc.b    $FF, $FF, $02, $09, $FF, $00, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $11, $02, $CC
                dc.b    $CC, $02, $03, $CC, $33, $FF, $04, $03, $FF, $00, $FF, $02, $14, $FF, $00, $FF
                dc.b    $FF, $00, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
                dc.b    $FF, $13, $01, $FF, $03, $01, $FF, $81, $AF, $05, $2E, $4D, $4E, $4D, $60, $04
                dc.b    $01, $01, $03, $01, $01, $09, $05, $7C, $4F, $4C, $4F, $30, $2A, $07, $52, $55
                dc.b    $54, $01, $53, $54, $55, $06, $0D, $1C, $1D, $1E, $1F, $1C, $01, $03, $01, $1F
                dc.b    $1C, $1D, $1E, $1F, $37, $06, $2D, $34, $35, $36, $18, $02, $02, $06, $02, $1A
                dc.b    $35, $36, $37, $2C, $09, $01, $2D, $03, $01, $2D, $2A, $0A, $56, $57, $58, $59
                dc.b    $0C, $0C, $58, $59, $5A, $5B, $03, $0D, $20, $21, $22, $23, $20, $01, $03, $01
                dc.b    $23, $20, $21, $22, $23, $37, $06, $2C, $38, $39, $3A, $15, $02, $02, $06, $02
                dc.b    $17, $39, $3A, $3B, $2D, $09, $01, $2C, $03, $01, $2C, $2A, $0C, $5C, $5D, $5E
                dc.b    $5F, $FC, $D0, $D0, $D0, $A0, $8D, $8E, $8F, $02, $02, $50, $51, $02, $03, $50
                dc.b    $01, $51, $02, $02, $50, $51, $22, $05, $2E, $4D, $4E, $4D, $60, $0C, $0B, $67
                dc.b    $4E, $4D, $4E, $2A, $2D, $3C, $3D, $3E, $10, $02, $02, $06, $02, $12, $3D, $3E
                dc.b    $3F, $2C, $09, $01, $2D, $03, $01, $2D, $2A, $10, $60, $61, $62, $63, $F0, $F0
                dc.b    $F2, $F2, $02, $91, $90, $91, $92, $00, $50, $51, $02, $03, $50, $01, $51, $02
                dc.b    $02, $50, $51, $22, $01, $2C, $03, $01, $2C, $11, $01, $2C, $03, $02, $2C, $32
                dc.b    $03, $09, $1F, $34, $35, $36, $1A, $06, $35, $36, $37, $04, $02, $32, $2C, $03
                dc.b    $01, $2C, $2A, $1A, $64, $65, $66, $67, $C5, $F5, $F7, $F7, $30, $03, $91, $90
                dc.b    $91, $9B, $09, $0A, $0B, $08, $01, $03, $01, $0B, $08, $09, $0A, $0B, $21, $01
                dc.b    $2D, $03, $01, $2D, $11, $01, $2D, $03, $02, $2D, $2D, $03, $09, $01, $38, $39
                dc.b    $3A, $17, $15, $39, $3A, $3B, $04, $02, $2D, $2D, $03, $01, $2D, $2A, $1A, $6A
                dc.b    $6B, $6B, $6B, $06, $06, $05, $FA, $FC, $FC, $FA, $91, $90, $9D, $99, $0E, $0F
                dc.b    $0C, $01, $03, $01, $0F, $0C, $0D, $0E, $0F, $21, $01, $2C, $03, $01, $2C, $11
                dc.b    $01, $2C, $03, $02, $2C, $2C, $03, $09, $01, $3C, $3D, $3E, $12, $10, $3D, $3E
                dc.b    $3F, $04, $02, $2C, $2C, $03, $01, $2C, $2A, $1A, $6F, $70, $70, $70, $1E, $A1
                dc.b    $02, $E0, $E0, $41, $E7, $90, $91, $80, $84, $12, $13, $10, $01, $03, $01, $13
                dc.b    $10, $11, $12, $13, $21, $01, $2D, $03, $07, $2D, $00, $28, $2B, $29, $2B, $01
                dc.b    $07, $05, $03, $2B, $29, $2B, $19, $03, $02, $33, $2D, $03, $0A, $1D, $4D, $4E
                dc.b    $4D, $7E, $62, $7A, $78, $0F, $02, $02, $07, $77, $1A, $07, $35, $36, $37, $33
                dc.b    $2A, $1A, $73, $74, $74, $75, $05, $74, $74, $02, $E6, $91, $90, $E1, $90, $85
                dc.b    $85, $80, $17, $14, $01, $03, $01, $17, $14, $15, $16, $17, $21, $01, $2C, $03
                dc.b    $01, $2C, $16, $01, $2C, $03, $01, $2C, $03, $0F, $40, $46, $47, $39, $03, $6A
                dc.b    $7F, $00, $79, $64, $71, $39, $3A, $48, $49, $29, $1B, $7C, $78, $79, $7A, $07
                dc.b    $0E, $79, $7A, $06, $E7, $90, $91, $EA, $91, $88, $88, $8D, $1B, $18, $01, $03
                dc.b    $01, $1B, $18, $19, $1A, $1B, $21, $01, $2D, $03, $01, $2D, $16, $01, $2D, $03
                dc.b    $01, $2D, $03, $0F, $42, $3A, $39, $3A, $79, $17, $7B, $00, $02, $17, $79, $3A
                dc.b    $39, $3A, $3B, $29, $1B, $83, $7E, $7F, $80, $02, $FC, $7F, $80, $05, $12, $91
                dc.b    $90, $1C, $90, $8D, $8D, $86, $1F, $1C, $01, $03, $01, $1F, $1C, $1D, $1E, $1F
                dc.b    $21, $01, $2C, $03, $01, $2C, $16, $01, $2C, $03, $01, $2C, $03, $0F, $44, $3E
                dc.b    $3D, $3E, $7B, $12, $79, $00, $02, $12, $7B, $3E, $3D, $3E, $3F, $29, $1B, $85
                dc.b    $86, $87, $88, $0C, $0C, $0C, $88, $13, $11, $17, $9D, $04, $04, $80, $80, $80
                dc.b    $80, $1C, $01, $03, $01, $1F, $1C, $1D, $1E, $1F, $11, $04, $01, $01, $01, $01
                dc.b    $0B, $06, $4C, $4A, $4C, $4F, $00, $05, $16, $01, $07, $03, $01, $07, $08, $01
                dc.b    $05, $03, $06, $05, $64, $4F, $4C, $4F, $28, $2B, $04, $53, $53, $53, $53, $11
                dc.b    $04, $F0, $F0, $F0, $F0, $08, $04, $A2, $A2, $A2, $A2, $84, $24, $00, $15, $69
                dc.b    $0A, $00, $15, $00, $97, $00, $14, $20, $97, $20, $01, $04, $38, $41, $00, $41
                dc.b    $01, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $16, $00
                dc.b    $16, $00, $10, $00, $10, $00, $34, $00, $34, $00, $10, $00, $10, $00, $12, $00
                dc.b    $12, $00, $10, $00, $10, $00, $16, $00, $16, $00, $10, $00, $10, $00, $32, $00
                dc.b    $22, $00, $10, $00, $30, $03, $29, $20, $00, $30, $00, $10, $00, $10, $00, $1E
                dc.b    $00, $01, $00, $11, $00, $2F, $00, $01, $00, $01, $00, $11, $00, $11, $00, $01
                dc.b    $00, $01, $00, $11, $00, $F7, $00, $11, $00, $01, $00, $11, $60, $A3, $60, $67
                dc.b    $05, $33, $50, $00, $72, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $00, $32, $00, $32, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $00, $72, $00, $72, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00
                dc.b    $10, $00, $02, $00, $32, $03, $37, $10, $00, $32, $00, $12, $00, $10, $00, $10
                dc.b    $00, $56, $00, $56, $00, $10, $00, $10, $00, $12, $00, $46, $00, $10, $00, $44
                dc.b    $00, $72, $00, $72, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10
                dc.b    $00, $32, $00, $32, $00, $10, $00, $10, $00, $12, $00, $06, $00, $10, $03, $03
                dc.b    $26, $00, $38, $03, $15, $10, $00, $37, $00, $3B, $00, $10, $00, $10, $00, $71
                dc.b    $08, $76, $00, $10, $00, $10, $00, $4C, $00, $4C, $04, $80, $B4, $60, $9D, $60
                dc.b    $4D, $00, $10, $00, $C0, $00, $17, $00, $17, $00, $10, $00, $10, $00, $11, $00
                dc.b    $11, $00, $10, $00, $10, $00, $13, $00, $13, $00, $10, $00, $E5, $08, $01, $00
                dc.b    $E4, $00, $0A, $00, $1B, $08, $1A, $08, $0B, $00, $1B, $00, $0A, $08, $0D, $08
                dc.b    $0D, $08, $03, $00, $0A, $00, $02, $08, $0B, $00, $0A, $08, $03, $08, $05, $00
                dc.b    $0C, $00, $91, $00, $0C, $08, $90, $08, $0D, $00, $0C, $00, $91, $00, $0C, $08
                dc.b    $DD, $00, $0C, $00, $48, $00, $41, $00, $05, $00, $48, $00, $0C, $00, $03, $00
                dc.b    $36, $00, $01, $00, $04, $00, $3D, $00, $38, $00, $04, $00, $01, $00, $04, $08
                dc.b    $3C, $00, $04, $00, $04, $08, $05, $08, $05, $00, $04, $00, $04, $08, $64, $00
                dc.b    $04, $00, $11, $08, $71, $00, $70, $08, $10, $08, $71, $00, $11, $08, $13, $08
                dc.b    $13, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $51, $00
                dc.b    $50, $00, $E5, $00, $10, $00, $30, $00, $15, $00, $C0, $00, $10, $61, $DB, $69
                dc.b    $DB, $0C, $06, $61, $EC, $01, $56, $00, $04, $02, $0E, $08, $05, $00, $5C, $00
                dc.b    $04, $00, $10, $08, $05, $00, $4C, $08, $71, $03, $0D, $12, $00, $5C, $00, $10
                dc.b    $00, $10, $08, $84, $00, $4C, $00, $C0, $03, $0D, $17, $00, $5C, $00, $10, $00
                dc.b    $10, $00, $11, $00, $4C, $00, $10, $03, $0D, $13, $00, $5C, $00, $10, $00, $10
                dc.b    $00, $11, $00, $4C, $00, $1B, $03, $0D, $0C, $00, $5C, $00, $0A, $00, $10, $00
                dc.b    $04, $00, $4C, $00, $0C, $03, $0B, $41, $00, $5C, $00, $48, $00, $10, $68, $85
                dc.b    $68, $F6, $03, $0D, $04, $00, $5C, $08, $05, $00, $10, $00, $04, $00, $4C, $08
                dc.b    $05, $02, $0E, $08, $71, $00, $5C, $00, $12, $00, $10, $00, $10, $00, $4C, $08
                dc.b    $84, $03, $0D, $C0, $00, $5C, $00, $17, $00, $10, $00, $10, $00, $4C, $00, $11
                dc.b    $03, $0D, $10, $00, $5C, $00, $13, $00, $10, $00, $10, $00, $4C, $00, $11, $03
                dc.b    $0D, $1B, $00, $5C, $00, $0C, $00, $10, $00, $0A, $00, $4C, $00, $04, $03, $0D
                dc.b    $0C, $00, $5C, $00, $41, $00, $10, $00, $48, $09, $1A, $69, $D3, $7C, $03, $20
                dc.b    $00, $20, $05, $03, $20, $00, $20, $80, $F5, $03, $20, $00, $20, $05, $03, $20
                dc.b    $00, $20, $80, $F5, $03, $20, $00, $20, $05, $03, $20, $00, $20, $80, $F5, $03
                dc.b    $20, $00, $20, $05, $03, $20, $00, $20, $80, $F5, $03, $20, $00, $20, $05, $03
                dc.b    $20, $00, $20, $82, $8D, $06, $0E, $0F, $12, $13, $18, $18, $02, $02, $18, $18
                dc.b    $02, $02, $18, $18, $02, $02, $18, $18, $02, $02, $18, $18, $02, $02, $18, $18
                dc.b    $02, $02, $18, $18, $02, $08, $18, $18, $2A, $57, $23, $23, $15, $68, $0E, $2F
                dc.b    $21, $2B, $26, $26, $07, $00, $02, $00, $0C, $0C, $03, $01, $00, $02, $00, $0C
                dc.b    $0C, $03, $01, $00, $02, $00, $0C, $0C, $03, $01, $00, $02, $00, $0C, $0C, $03
                dc.b    $01, $00, $02, $00, $0C, $0C, $03, $01, $00, $02, $00, $0B, $07, $09, $0A, $32
                dc.b    $06, $10, $11, $14, $15, $08, $08, $02, $02, $08, $08, $02, $02, $08, $08, $02
                dc.b    $02, $08, $08, $02, $02, $08, $08, $02, $02, $08, $08, $02, $02, $08, $08, $02
                dc.b    $08, $08, $08, $2D, $50, $3F, $3F, $16, $6B, $0E, $2F, $23, $26, $2E, $2C, $0F
                dc.b    $00, $08, $08, $0B, $09, $0B, $09, $00, $08, $08, $0B, $09, $0B, $09, $00, $08
                dc.b    $08, $0B, $09, $0B, $09, $00, $08, $08, $0B, $09, $0B, $09, $00, $08, $08, $0B
                dc.b    $09, $0B, $09, $00, $08, $08, $03, $08, $09, $0A, $32, $28, $12, $13, $0E, $0F
                dc.b    $08, $08, $18, $18, $08, $08, $18, $18, $08, $08, $18, $18, $08, $08, $18, $18
                dc.b    $08, $08, $18, $18, $08, $08, $18, $18, $08, $08, $18, $18, $08, $08, $2C, $51
                dc.b    $23, $23, $0B, $76, $0E, $2F, $3D, $37, $35, $35, $0A, $00, $0D, $0F, $01, $03
                dc.b    $0C, $0C, $00, $0D, $0F, $01, $03, $0C, $0C, $00, $0D, $0F, $01, $03, $0C, $0C
                dc.b    $00, $0D, $0F, $01, $03, $0C, $0C, $00, $0D, $0F, $01, $03, $0C, $0C, $00, $0D
                dc.b    $0F, $06, $07, $09, $0A, $32, $28, $14, $15, $10, $11, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $23, $5E, $27, $27, $08, $75, $0E
                dc.b    $05, $3F, $3A, $3A, $38, $07, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01
                dc.b    $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04
                dc.b    $03, $01, $03, $01, $03, $04, $0B, $08, $09, $0A, $32, $28, $16, $17, $0D, $0D
                dc.b    $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A
                dc.b    $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $1B, $1A, $2A, $5F
                dc.b    $23, $37, $09, $68, $0E, $05, $39, $27, $3C, $2A, $07, $03, $04, $0C, $0E, $03
                dc.b    $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C
                dc.b    $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0B, $07, $09, $0A, $32
                dc.b    $28, $18, $19, $0E, $0F, $0E, $0E, $16, $16, $0E, $0E, $16, $16, $0E, $0E, $16
                dc.b    $16, $0E, $0E, $16, $16, $0E, $0E, $16, $16, $0E, $0E, $16, $16, $0E, $0E, $16
                dc.b    $16, $0E, $0E, $25, $50, $39, $38, $1C, $68, $0E, $05, $2D, $29, $28, $2B, $07
                dc.b    $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01
                dc.b    $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04
                dc.b    $0B, $08, $09, $0A, $32, $28, $1A, $1B, $10, $11, $02, $02, $1E, $1E, $02, $02
                dc.b    $1E, $1E, $02, $02, $1E, $1E, $02, $02, $1E, $1E, $02, $02, $1E, $1E, $02, $02
                dc.b    $1E, $1E, $02, $02, $1E, $1E, $02, $02, $30, $45, $38, $39, $1C, $68, $0E, $05
                dc.b    $2E, $25, $2B, $28, $07, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03
                dc.b    $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C
                dc.b    $0E, $03, $01, $03, $04, $0B, $07, $09, $0A, $32, $28, $1C, $1D, $12, $13, $0E
                dc.b    $0E, $02, $02, $0E, $0E, $02, $02, $0E, $0E, $02, $02, $0E, $0E, $02, $02, $0E
                dc.b    $0E, $02, $02, $0E, $0E, $02, $02, $0E, $0E, $02, $02, $0E, $0E, $2F, $5A, $3F
                dc.b    $29, $1C, $7F, $0E, $05, $2F, $3C, $2A, $3E, $07, $03, $04, $03, $01, $03, $01
                dc.b    $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01
                dc.b    $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $0B, $08, $09, $0A, $32, $28
                dc.b    $0D, $0D, $14, $15, $19, $18, $06, $06, $19, $18, $06, $06, $19, $18, $06, $06
                dc.b    $19, $18, $06, $06, $19, $18, $06, $06, $19, $18, $06, $06, $19, $18, $06, $06
                dc.b    $19, $18, $52, $5F, $28, $29, $65, $68, $0E, $05, $29, $23, $2C, $2E, $07, $03
                dc.b    $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03
                dc.b    $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0B
                dc.b    $07, $09, $0A, $32, $28, $0E, $0F, $0D, $0D, $14, $14, $19, $18, $14, $14, $19
                dc.b    $18, $14, $14, $19, $18, $14, $14, $19, $18, $14, $14, $19, $18, $14, $14, $19
                dc.b    $18, $14, $14, $19, $18, $14, $14, $55, $58, $29, $29, $66, $6B, $0E, $05, $2B
                dc.b    $2E, $2E, $2C, $07, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01
                dc.b    $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01
                dc.b    $03, $01, $03, $04, $0B, $08, $09, $0A, $32, $28, $10, $11, $1A, $1B, $0C, $0C
                dc.b    $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C
                dc.b    $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $0C, $54, $59, $39, $39
                dc.b    $6B, $66, $0E, $05, $25, $2F, $20, $22, $07, $03, $04, $0C, $0E, $03, $01, $03
                dc.b    $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0C, $0E, $03
                dc.b    $01, $03, $04, $0C, $0E, $03, $01, $03, $04, $0B, $07, $09, $0A, $32, $28, $12
                dc.b    $13, $1C, $1D, $1F, $1E, $04, $04, $1F, $1E, $04, $04, $1F, $1E, $04, $04, $1F
                dc.b    $1E, $04, $04, $1F, $1E, $04, $04, $1F, $1E, $04, $04, $1F, $1E, $04, $04, $1F
                dc.b    $1E, $5B, $56, $39, $39, $68, $65, $0E, $05, $27, $22, $22, $20, $07, $03, $04
                dc.b    $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01
                dc.b    $03, $04, $03, $01, $03, $01, $03, $04, $03, $01, $03, $01, $03, $04, $0B, $08
                dc.b    $09, $0A, $84, $E9, $00, $0D, $00, $00
Rock_Splashing: ; Offset_0x04B76C: 
                incbin  'data\sprites\rockspsh.dat'                                
Unknow_Palett_0x04BAAC: ; Offset_0x04BAAC:
                dc.w    $0000, $0A20, $0666, $0888, $0CAA, $0ECC, $0246, $0008
                dc.w    $000E, $046A, $068C, $08CE, $0E22, $0E62, $0000, $0EEE
                dc.w    $0000, $0242, $0462, $0220, $0244, $0464, $0468, $068A
                dc.w    $08CC, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE
                dc.w    $0000, $0620, $0C20, $0E42, $0E66, $0A0E, $0A0E, $0A0E
                dc.w    $0A0E, $0006, $000E, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $06CE, $02AE, $026C, $0248, $0CCE, $006E, $004E
                dc.w    $088E, $066C, $044A, $0028, $0004, $0060, $0000, $0CEE
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0C00, $0000, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $0000, $0000, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0200, $0422, $0666, $0224, $0226, $0446, $0046
                dc.w    $0048, $0400, $0888, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0200, $0644, $0888, $0428, $0448, $064A, $006A
                dc.w    $008A, $0800, $0AAA, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0422, $0866, $0AAA, $042A, $064C, $0A6C, $006C
                dc.w    $00CC, $0A00, $0CCC, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0644, $0A88, $0CCC, $062C, $084E, $0C8E, $008E
                dc.w    $00EE, $0C00, $0EEE, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0848, $0C8C, $0EAE, $0A0E, $0C2E, $0C6E, $086E
                dc.w    $0A8E, $0404, $0ECE, $0282, $02C2, $04E2, $0000, $0EEE
                dc.w    $0000, $0020, $0242, $0020, $0222, $0242, $0244, $0266
                dc.w    $0488, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000, $0000
                dc.w    $0000, $00EE, $000A, $024C, $006E, $00AE, $0000, $0EEE
Unknow_Data_0x04BC4C: ; Offset_0x04BC4C:
                dc.b    $20, $00, $00, $20, $14, $CC, $BB, $BB, $BB, $77, $07, $12, $10, $11, $07, $63
                dc.b    $30, $30, $10, $76, $30, $03, $01, $00, $10, $02, $04, $07, $70, $00, $30, $03
                dc.b    $46, $30, $10, $07, $52, $11, $10, $77, $00, $21, $21, $22, $00, $02, $32, $11
                dc.b    $00, $11, $21, $02, $00, $10, $21, $12, $00, $33, $31, $01, $00, $11, $22, $22
                dc.b    $07, $77, $77, $77, $77, $77, $77, $77, $21, $22, $12, $10, $32, $00, $30, $30
                dc.b    $22, $10, $30, $00, $23, $21, $00, $30, $30, $31, $33, $00, $22, $22, $21, $10
                dc.b    $77, $77, $77, $77, $07, $77, $77, $02, $0B, $21, $70, $77, $00, $06, $70, $11
                dc.b    $00, $57, $01, $03, $02, $04, $10, $30, $07, $70, $04, $01, $03, $02, $09, $01
                dc.b    $03, $00, $76, $10, $33, $00, $10, $33, $02, $01, $33, $02, $01, $01, $03, $01
                dc.b    $11, $03, $01, $01, $02, $02, $01, $10, $02, $02, $01, $10, $02, $0A, $01, $10
                dc.b    $00, $11, $10, $10, $11, $00, $0D, $0D, $02, $02, $D0, $D0, $02, $09, $D0, $00
                dc.b    $10, $0D, $DD, $00, $10, $0D, $0D, $06, $02, $0D, $D0, $02, $07, $0D, $0D, $DD
                dc.b    $DD, $DD, $DD, $DD, $18, $13, $99, $96, $77, $77, $0F, $F1, $33, $33, $07, $10
                dc.b    $00, $44, $00, $03, $04, $00, $07, $00, $40, $07, $01, $04, $05, $08, $D2, $30
                dc.b    $40, $44, $44, $44, $40, $33, $02, $02, $04, $30, $02, $26, $04, $00, $04, $40
                dc.b    $03, $DE, $43, $30, $7E, $FE, $30, $74, $EF, $13, $03, $43, $00, $30, $ED, $D8
                dc.b    $69, $88, $06, $63, $22, $11, $03, $21, $0D, $D0, $01, $0D, $D0, $D0, $00, $D0
                dc.b    $0D, $10, $03, $01, $1D, $02, $02, $DD, $0D, $02, $20, $D0, $D0, $40, $DD, $DD
                dc.b    $D0, $0D, $DD, $D0, $01, $D0, $00, $0D, $01, $DD, $00, $0D, $01, $DD, $0D, $D1
                dc.b    $45, $00, $D0, $15, $49, $0D, $01, $54, $D0, $D0, $10, $02, $3E, $44, $53, $62
                dc.b    $CC, $06, $63, $22, $1C, $00, $31, $DD, $DD, $60, $1D, $00, $D0, $66, $20, $0D
                dc.b    $10, $DE, $6C, $00, $1D, $47, $E5, $DD, $0D, $40, $00, $D0, $D0, $9D, $A4, $DD
                dc.b    $D0, $0D, $DD, $D0, $01, $D0, $00, $0D, $01, $DD, $00, $0D, $01, $DD, $0D, $D1
                dc.b    $45, $00, $D0, $15, $49, $0D, $01, $54, $D0, $D0, $10, $02, $0B, $44, $5A, $EA
                dc.b    $77, $0F, $F1, $33, $77, $07, $13, $04, $02, $04, $13, $40, $00, $08, $03, $03
                dc.b    $DE, $F1, $70, $02, $01, $FF, $02, $0C, $30, $00, $04, $00, $33, $2D, $30, $44
                dc.b    $44, $44, $40, $33, $02, $02, $04, $30, $02, $18, $04, $00, $04, $40, $03, $DE
                dc.b    $43, $30, $7E, $FE, $30, $74, $EF, $13, $03, $43, $00, $30, $B9, $47, $96, $44
                dc.b    $00, $0D, $03, $1E, $DD, $D0, $00, $01, $1C, $1C, $CC, $33, $33, $33, $33, $03
                dc.b    $2F, $FF, $6F, $31, $DD, $09, $49, $00, $D4, $94, $D0, $01, $26, $63, $97, $00
                dc.b    $30, $10, $02, $02, $30, $10, $03, $56, $17, $70, $03, $01, $00, $10, $30, $10
                dc.b    $76, $00, $11, $07, $71, $10, $77, $70, $77, $77, $07, $77, $77, $77, $00, $21
                dc.b    $21, $12, $00, $31, $33, $13, $00, $11, $33, $13, $00, $20, $02, $33, $00, $33
                dc.b    $32, $33, $00, $12, $11, $12, $07, $77, $77, $77, $77, $77, $77, $77, $12, $12
                dc.b    $11, $20, $31, $33, $32, $30, $32, $13, $32, $30, $33, $21, $30, $30, $33, $33
                dc.b    $33, $00, $11, $20, $12, $10, $77, $77, $77, $77, $07, $76, $65, $55, $06, $01
                dc.b    $03, $02, $0E, $01, $10, $33, $07, $77, $01, $11, $06, $55, $33, $33, $01, $33
                dc.b    $11, $02, $01, $03, $02, $02, $52, $30, $05, $01, $10, $03, $2F, $11, $33, $33
                dc.b    $00, $10, $11, $11, $22, $23, $22, $02, $23, $32, $10, $00, $01, $00, $D1, $03
                dc.b    $00, $10, $D0, $32, $CC, $CD, $00, $0D, $D0, $D0, $00, $0D, $DD, $D0, $11, $11
                dc.b    $C1, $CC, $33, $33, $33, $33, $22, $FF, $FF, $F0, $00, $DD, $03, $01, $DD, $02
                dc.b    $01, $DD, $02, $01, $0F, $08, $18, $CC, $CC, $CC, $CC, $33, $33, $33, $33, $03
                dc.b    $2F, $FF, $6F, $31, $DD, $09, $49, $00, $C4, $E4, $D0, $5B, $BD, $E9, $49, $02
                dc.b    $02, $04, $40, $03, $01, $04, $02, $36, $40, $04, $00, $03, $04, $00, $07, $10
                dc.b    $00, $44, $08, $76, $53, $33, $00, $88, $8E, $EE, $99, $DD, $0F, $EE, $44, $40
                dc.b    $EF, $10, $33, $74, $7D, $FE, $30, $34, $04, $9E, $47, $40, $44, $07, $40, $04
                dc.b    $44, $04, $37, $77, $77, $73, $EE, $EE, $EE, $EE, $04, $99, $99, $44, $02, $01
                dc.b    $0D, $02, $03, $D0, $00, $12, $02, $80, $82, $0D, $13, $01, $0D, $00, $DC, $03
                dc.b    $10, $DD, $00, $06, $32, $11, $CC, $00, $66, $55, $55, $94, $45, $04, $94, $DD
                dc.b    $01, $54, $C1, $1D, $D0, $15, $55, $1D, $0D, $D1, $55, $D0, $00, $0D, $11, $00
                dc.b    $0D, $DD, $10, $CC, $C1, $11, $01, $55, $55, $55, $55, $EE, $F0, $99, $44, $11
                dc.b    $F5, $0D, $00, $FF, $6C, $00, $12, $66, $20, $0D, $13, $00, $0D, $00, $DC, $60
                dc.b    $10, $DD, $00, $06, $32, $11, $CC, $00, $66, $55, $55, $94, $45, $04, $94, $DD
                dc.b    $01, $54, $C1, $1D, $D0, $15, $55, $1D, $0D, $D1, $55, $D0, $00, $0D, $11, $00
                dc.b    $0D, $DD, $10, $CC, $C1, $11, $01, $55, $55, $55, $55, $EF, $F0, $ED, $99, $10
                dc.b    $FE, $34, $00, $FF, $E3, $40, $04, $0F, $03, $40, $04, $02, $32, $04, $00, $07
                dc.b    $10, $30, $44, $08, $71, $03, $33, $00, $8F, $EE, $EE, $99, $DD, $0F, $EE, $44
                dc.b    $40, $EF, $10, $33, $74, $7D, $FE, $30, $34, $04, $9E, $47, $40, $44, $07, $40
                dc.b    $04, $44, $04, $37, $77, $77, $73, $EE, $EE, $EE, $EE, $07, $76, $65, $55, $06
                dc.b    $01, $03, $02, $0D, $01, $10, $33, $07, $77, $01, $11, $06, $55, $22, $22, $01
                dc.b    $33, $03, $01, $03, $02, $04, $52, $30, $00, $11, $03, $01, $10, $03, $0D, $11
                dc.b    $33, $33, $00, $10, $11, $11, $22, $23, $22, $22, $22, $32, $02, $01, $01, $03
                dc.b    $1C, $10, $00, $11, $11, $DD, $DD, $00, $0D, $D0, $D0, $00, $0D, $DD, $D0, $11
                dc.b    $11, $C1, $CC, $33, $33, $33, $33, $12, $FF, $FF, $FF, $00, $DD, $03, $01, $DD
                dc.b    $02, $01, $ED, $0B, $0C, $CC, $CC, $CC, $CC, $33, $33, $33, $33, $FF, $FF, $FF
                dc.b    $FF, $08, $06, $9E, $FC, $CC, $CC, $00, $03, $07, $01, $03, $07, $01, $03, $07
                dc.b    $01, $03, $02, $07, $52, $31, $01, $11, $00, $01, $10, $03, $02, $11, $11, $02
                dc.b    $0A, $22, $22, $00, $02, $22, $3E, $01, $22, $01, $0D, $02, $2A, $01, $00, $10
                dc.b    $00, $01, $00, $31, $31, $CD, $DD, $00, $0D, $D0, $D0, $00, $1C, $1C, $0D, $02
                dc.b    $22, $33, $10, $3E, $EE, $F3, $31, $0D, $DD, $0C, $33, $00, $DD, $D0, $C0, $00
                dc.b    $0D, $D0, $00, $DD, $0D, $00, $0F, $04, $01, $0D, $03, $01, $DD, $03, $0B, $0D
                dc.b    $00, $D0, $00, $1D, $D0, $D0, $00, $0D, $DD, $0D, $02, $15, $DD, $DD, $00, $23
                dc.b    $3E, $3E, $EE, $21, $22, $12, $10, $32, $00, $30, $37, $22, $10, $30, $54, $23
                dc.b    $21, $02, $3F, $30, $31, $33, $04, $22, $22, $21, $05, $77, $77, $77, $00, $77
                dc.b    $77, $70, $63, $21, $22, $10, $06, $32, $00, $30, $66, $22, $10, $55, $46, $23
                dc.b    $21, $0C, $D5, $30, $31, $0C, $C5, $22, $22, $75, $55, $77, $77, $70, $5C, $00
                dc.b    $0F, $EE, $B7, $08, $F1, $03, $33, $00, $10, $30, $44, $00, $03, $04, $00, $07
                dc.b    $00, $40, $07, $01, $04, $05, $07, $D2, $30, $40, $44, $44, $44, $40, $02, $05
                dc.b    $04, $04, $44, $04, $04, $02, $24, $04, $40, $04, $40, $40, $40, $04, $40, $40
                dc.b    $04, $40, $44, $04, $44, $04, $04, $9D, $BF, $BB, $8C, $06, $03, $22, $11, $03
                dc.b    $21, $0D, $D0, $01, $0D, $D0, $D0, $00, $D0, $0D, $10, $03, $01, $1D, $02, $02
                dc.b    $DD, $0D, $02, $68, $D0, $D0, $40, $DD, $DD, $D0, $0D, $D0, $0D, $D1, $D0, $D0
                dc.b    $0D, $0C, $DD, $DD, $00, $DC, $DD, $0D, $0D, $DC, $00, $D1, $0D, $00, $0D, $11
                dc.b    $1D, $0D, $D0, $0D, $C0, $D1, $99, $84, $44, $98, $44, $00, $04, $44, $40, $44
                dc.b    $04, $44, $34, $40, $44, $00, $30, $44, $40, $40, $44, $00, $44, $04, $04, $40
                dc.b    $44, $40, $40, $40, $00, $40, $99, $D9, $9D, $DD, $DD, $D0, $0D, $DD, $DD, $0D
                dc.b    $DD, $D0, $0D, $00, $0D, $DD, $1D, $0D, $DC, $0D, $1D, $D0, $11, $D0, $DD, $01
                dc.b    $CD, $D0, $D0, $1C, $00, $DC, $44, $95, $55, $89, $77, $BC, $02, $0A, $11, $07
                dc.b    $C0, $00, $30, $10, $7C, $00, $03, $01, $04, $04, $07, $C0, $00, $30, $03, $09
                dc.b    $30, $10, $0C, $25, $10, $6B, $CC, $00, $10, $07, $01, $01, $03, $13, $10, $0C
                dc.b    $CC, $00, $77, $76, $66, $00, $76, $10, $00, $70, $76, $66, $66, $CC, $CC, $CC
                dc.b    $CC, $0C, $08, $CC, $CC, $CC, $CC, $66, $66, $66, $66, $04, $08, $66, $66, $66
                dc.b    $66, $CC, $CC, $CC, $CC, $0C, $08, $CC, $CC, $CC, $CC, $06, $66, $66, $66, $04
                dc.b    $08, $06, $66, $66, $66, $07, $66, $55, $55, $09, $0E, $11, $23, $33, $07, $77
                dc.b    $01, $11, $06, $55, $33, $33, $01, $33, $11, $02, $01, $03, $02, $02, $53, $10
                dc.b    $02, $22, $10, $00, $01, $00, $01, $00, $01, $00, $20, $00, $01, $00, $12, $00
                dc.b    $01, $00, $22, $00, $01, $00, $10, $00, $01, $00, $D1, $03, $00, $10, $D0, $3F
                dc.b    $CC, $C2, $00, $D0, $03, $01, $0D, $02, $02, $0D, $DD, $02, $02, $0D, $0D, $03
                dc.b    $01, $DD, $03, $01, $DD, $03, $01, $DD, $02, $01, $10, $02, $03, $0F, $00, $0D
                dc.b    $03, $11, $DD, $D0, $00, $01, $1C, $1C, $CC, $33, $33, $33, $33, $03, $2F, $FF
                dc.b    $FF, $31, $DD, $03, $47, $DD, $D0, $00, $53, $3E, $3E, $E9, $00, $21, $21, $25
                dc.b    $00, $02, $32, $11, $00, $11, $21, $02, $00, $10, $21, $12, $00, $33, $31, $04
                dc.b    $00, $11, $22, $56, $07, $77, $77, $03, $07, $77, $77, $0C, $00, $21, $21, $0F
                dc.b    $00, $02, $32, $46, $00, $11, $21, $06, $00, $10, $21, $12, $00, $33, $31, $01
                dc.b    $00, $11, $22, $22, $07, $77, $77, $77, $0F, $ED, $9D, $D9, $02, $02, $04, $40
                dc.b    $03, $01, $04, $02, $36, $40, $04, $00, $03, $04, $00, $07, $10, $00, $44, $08
                dc.b    $76, $53, $33, $00, $88, $8E, $EE, $99, $D9, $D9, $99, $40, $44, $30, $44, $04
                dc.b    $04, $74, $03, $00, $44, $04, $43, $44, $40, $44, $04, $40, $04, $44, $04, $37
                dc.b    $77, $77, $73, $EE, $EE, $EE, $EE, $04, $99, $49, $44, $02, $01, $DD, $02, $03
                dc.b    $D0, $00, $12, $02, $3E, $0D, $13, $01, $0D, $00, $DC, $03, $10, $DD, $00, $06
                dc.b    $32, $11, $CC, $00, $66, $55, $55, $94, $45, $99, $99, $DD, $01, $CD, $D0, $1D
                dc.b    $D0, $11, $D0, $1D, $0D, $DC, $0D, $0D, $00, $0D, $DD, $DD, $0D, $DD, $D0, $CC
                dc.b    $C1, $1C, $CC, $55, $55, $55, $55, $99, $99, $99, $9D, $04, $40, $04, $04, $04
                dc.b    $40, $04, $40, $02, $36, $40, $40, $44, $40, $40, $00, $04, $40, $44, $44, $37
                dc.b    $77, $33, $33, $EE, $EE, $EE, $EE, $94, $54, $59, $94, $0D, $11, $1D, $0D, $00
                dc.b    $D1, $0D, $00, $DD, $0D, $0D, $DC, $DD, $DD, $00, $DC, $D0, $D0, $0D, $0C, $1C
                dc.b    $C1, $1C, $C0, $55, $55, $55, $55, $07, $66, $55, $54, $04, $7E, $47, $10, $33
                dc.b    $01, $20, $76, $10, $32, $69, $46, $76, $67, $90, $D3, $06, $54, $D0, $C5, $52
                dc.b    $CD, $0C, $54, $CD, $00, $0C, $72, $CC, $DD, $00, $11, $55, $44, $1F, $67, $65
                dc.b    $99, $56, $65, $FC, $00, $76, $63, $CD, $DD, $33, $66, $31, $12, $DC, $26, $63
                dc.b    $30, $00, $D2, $60, $32, $D0, $DD, $FF, $12, $49, $4F, $DD, $10, $45, $66, $42
                dc.b    $36, $D1, $36, $66, $66, $C1, $30, $60, $06, $35, $62, $99, $94, $65, $9D, $00
                dc.b    $0D, $9C, $0D, $DD, $DD, $CF, $92, $0D, $D4, $36, $63, $D0, $D0, $66, $3C, $00
                dc.b    $10, $63, $10, $0D, $26, $03, $1D, $D1, $70, $66, $31, $13, $03, $94, $65, $36
                dc.b    $60, $0D, $46, $66, $31, $9E, $23, $53, $10, $00, $03, $02, $0C, $01, $33, $11
                dc.b    $00, $06, $55, $33, $33, $07, $76, $11, $11, $03, $01, $33, $02, $01, $03, $05
                dc.b    $18, $93, $00, $30, $01, $D1, $03, $00, $10, $10, $00, $01, $00, $22, $02, $23
                dc.b    $32, $11, $11, $22, $23, $33, $33, $00, $10, $03, $01, $11, $03, $07, $10, $11
                dc.b    $CC, $CC, $D2, $00, $DD, $03, $01, $DD, $02, $17, $22, $FF, $FF, $F0, $33, $33
                dc.b    $33, $33, $11, $11, $C1, $CC, $00, $0D, $DD, $D0, $00, $0D, $D0, $D0, $10, $0D
                dc.b    $D0, $02, $05, $DD, $D0, $00, $31, $DD, $02, $0C, $03, $2F, $FF, $FF, $33, $33
                dc.b    $33, $33, $CC, $CC, $CC, $CC, $08, $46, $9E, $EE, $EE, $EE, $00, $21, $21, $22
                dc.b    $00, $02, $32, $11, $47, $31, $21, $02, $00, $10, $21, $12, $40, $03, $31, $01
                dc.b    $50, $01, $22, $22, $00, $77, $77, $77, $36, $07, $77, $77, $60, $01, $21, $22
                dc.b    $66, $01, $32, $11, $64, $57, $21, $02, $5D, $C0, $21, $12, $5C, $C0, $31, $01
                dc.b    $55, $57, $22, $22, $C5, $00, $77, $77, $92, $77, $0C, $CC, $00, $06, $0F, $01
                dc.b    $01, $03, $01, $07, $02, $02, $07, $77, $02, $04, $CC, $CB, $0C, $BB, $02, $01
                dc.b    $06, $13, $01, $06, $03, $02, $07, $77, $02, $02, $CB, $CC, $18, $08, $66, $66
                dc.b    $66, $00, $66, $66, $AD, $BC, $02, $01, $01, $04, $01, $10, $04, $08, $CC, $CC
                dc.b    $01, $00, $66, $66, $77, $10, $02, $0A, $17, $70, $66, $66, $67, $00, $CC, $CC
                dc.b    $CC, $CC, $03, $01, $06, $03, $01, $69, $03, $01, $05, $03, $01, $03, $03, $01
                dc.b    $06, $02, $02, $06, $95, $02, $02, $6D, $53, $02, $03, $6B, $A9, $60, $03, $02
                dc.b    $D9, $66, $02, $06, $06, $9C, $60, $00, $04, $53, $02, $06, $02, $CF, $60, $00
                dc.b    $D9, $66, $02, $0F, $06, $66, $60, $00, $FA, $F3, $E8, $88, $50, $CC, $24, $44
                dc.b    $06, $C5, $60, $02, $01, $50, $02, $01, $06, $03, $02, $65, $50, $02, $07, $2C
                dc.b    $C5, $67, $00, $0D, $C3, $67, $02, $0F, $1F, $56, $59, $42, $1D, $10, $30, $06
                dc.b    $52, $10, $0C, $00, $06, $36, $63, $02, $02, $60, $06, $02, $13, $07, $66, $00
                dc.b    $07, $61, $01, $07, $61, $00, $07, $93, $30, $66, $66, $C1, $56, $00, $06, $05
                dc.b    $03, $01, $30, $03, $01, $60, $07, $01, $06, $03, $12, $52, $44, $66, $00, $0D
                dc.b    $D1, $60, $44, $5C, $DC, $56, $00, $05, $1D, $00, $10, $00, $52, $03, $1D, $06
                dc.b    $50, $30, $00, $06, $67, $60, $65, $92, $00, $01, $63, $F0, $31, $00, $06, $12
                dc.b    $30, $50, $70, $01, $03, $00, $10, $01, $03, $00, $27, $71, $02, $14, $21, $00
                dc.b    $10, $30, $33, $67, $01, $03, $22, $17, $70, $11, $77, $77, $07, $77, $55, $55
                dc.b    $54, $54, $02, $02, $01, $10, $02, $02, $01, $10, $02, $02, $01, $10, $03, $01
                dc.b    $01, $03, $02, $11, $33, $02, $03, $01, $10, $33, $02, $07, $32, $2F, $1C, $CC
                dc.b    $00, $0D, $D0, $05, $07, $10, $0D, $0D, $00, $10, $0D, $DD, $03, $01, $D0, $03
                dc.b    $0A, $D0, $D0, $11, $00, $0D, $0D, $CC, $DD, $DD, $DD, $18, $48, $DD, $DD, $DD
                dc.b    $DD, $43, $33, $33, $33, $71, $22, $12, $10, $12, $00, $30, $30, $22, $10, $30
                dc.b    $00, $23, $21, $00, $30, $63, $31, $33, $00, $66, $22, $21, $10, $30, $77, $77
                dc.b    $77, $C0, $77, $77, $77, $F0, $12, $12, $10, $67, $30, $30, $30, $61, $10, $30
                dc.b    $00, $03, $21, $00, $30, $30, $31, $33, $00, $22, $22, $21, $10, $77, $77, $77
                dc.b    $77, $CC, $CC, $CC, $CC, $04, $01, $60, $07, $01, $C6, $02, $11, $06, $10, $00
                dc.b    $06, $99, $10, $06, $99, $25, $30, $99, $36, $DC, $96, $9F, $A9, $0F, $02, $22
                dc.b    $06, $F2, $00, $06, $6F, $24, $06, $9F, $03, $40, $99, $3F, $F1, $00, $24, $C0
                dc.b    $30, $40, $DD, $60, $00, $04, $66, $00, $31, $01, $AB, $BD, $33, $DC, $54, $44
                dc.b    $52, $CF, $02, $02, $04, $13, $03, $01, $41, $04, $02, $44, $40, $02, $0D, $12
                dc.b    $14, $00, $40, $3F, $C2, $44, $00, $96, $69, $BB, $BB, $60, $03, $01, $F6, $03
                dc.b    $01, $30, $03, $05, $0F, $60, $00, $06, $13, $02, $01, $6D, $02, $24, $06, $D1
                dc.b    $13, $00, $6D, $1C, $A9, $66, $D1, $C0, $00, $6D, $1C, $FC, $06, $91, $CF, $25
                dc.b    $69, $4C, $F2, $40, $94, $DF, $24, $44, $4D, $03, $46, $DD, $D6, $01, $6F, $00
                dc.b    $60, $01, $02, $16, $9A, $C0, $00, $06, $25, $55, $2C, $F6, $40, $04, $01, $2F
                dc.b    $00, $42, $D2, $02, $00, $0F, $0F, $24, $40, $0F, $02, $34, $D0, $42, $FF, $20
                dc.b    $00, $04, $26, $45, $F3, $33, $27, $41, $55, $49, $CD, $37, $51, $DD, $C9, $40
                dc.b    $00, $C4, $55, $50, $52, $57, $01, $C0, $66, $00, $74, $00, $F4, $07, $07, $90
                dc.b    $0D, $46, $77, $77, $99, $41, $76, $17, $77, $77, $76, $66, $00, $07, $77, $06
                dc.b    $03, $01, $77, $10, $36, $33, $32, $11, $E3, $21, $23, $0F, $0D, $65, $66, $0F
                dc.b    $CD, $04, $50, $66, $52, $74, $10, $05, $56, $00, $D0, $0C, $10, $07, $97, $0D
                dc.b    $47, $00, $70, $04, $70, $27, $71, $66, $72, $C4, $56, $60, $00, $0D, $C4, $66
                dc.b    $00, $CD, $0D, $36, $00, $31, $00, $10, $00, $63, $D0, $03, $0D, $D0, $00, $01
                dc.b    $03, $D0, $16, $60, $02, $2F, $05, $30, $00, $03, $03, $03, $03, $00, $01, $05
                dc.b    $01, $03, $0E, $0B, $4E, $13, $00, $11, $00, $21, $00, $11, $0D, $C2, $23, $02
                dc.b    $27, $DC, $21, $22, $10, $0D, $CE, $EE, $01, $00, $DD, $D0, $01, $10, $10, $0D
                dc.b    $01, $11, $10, $00, $1C, $0C, $DD, $02, $0D, $0D, $0D, $10, $11, $11, $C1, $33
                dc.b    $23, $33, $33, $00, $EF, $FF, $F2, $03, $02, $08, $0D, $20, $D0, $D0, $00, $D0
                dc.b    $0D, $D0, $02, $01, $10, $02, $02, $0F, $1D, $03, $01, $0D, $03, $01, $0D, $03
                dc.b    $02, $10, $D0, $02, $02, $0D, $D0, $0A, $09, $5F, $27, $44, $AA, $03, $04, $30
                dc.b    $00, $08, $04, $01, $31, $02, $07, $07, $80, $40, $E0, $00, $03, $03, $02, $0F
                dc.b    $78, $10, $00, $07, $70, $34, $00, $33, $DD, $61, $63, $00, $03, $40, $3C, $03
                dc.b    $01, $8B, $02, $2B, $13, $00, $0E, $04, $08, $70, $00, $30, $30, $10, $00, $01
                dc.b    $87, $10, $00, $43, $07, $77, $98, $CD, $AA, $CC, $0F, $CF, $06, $00, $CF, $C9
                dc.b    $C6, $66, $33, $35, $59, $99, $FC, $FC, $95, $55, $9C, $F0, $0C, $31, $41, $02
                dc.b    $25, $01, $DD, $F0, $00, $FC, $66, $60, $FF, $CC, $06, $60, $F0, $33, $60, $00
                dc.b    $0F, $FF, $9D, $DD, $CC, $CF, $40, $04, $55, $56, $41, $D9, $99, $99, $40, $C0
                dc.b    $FC, $C0, $DC, $C0, $FC, $3F, $02, $02, $CD, $23, $02, $16, $31, $10, $00, $0F
                dc.b    $03, $33, $F0, $0F, $FF, $FF, $69, $99, $99, $99, $66, $65, $55, $54, $FF, $FC
                dc.b    $CC, $CD, $04, $23, $CF, $00, $DC, $00, $3F, $00, $2C, $DF, $F9, $C0, $FD, $1F
                dc.b    $94, $30, $C1, $30, $01, $F0, $30, $F0, $41, $CF, $F3, $0D, $D2, $3F, $F0, $02
                dc.b    $0F, $F0, $FF, $0F, $66, $0F, $DF, $02, $19, $60, $12, $D9, $00, $0F, $31, $40
                dc.b    $66, $60, $F3, $65, $00, $0D, $FF, $FC, $F0, $C1, $00, $0F, $F0, $C3, $F0, $0F
                dc.b    $00, $0F, $02, $1C, $CC, $D9, $FD, $CC, $53, $D4, $31, $0C, $42, $C1, $33, $CF
                dc.b    $01, $33, $F0, $9F, $13, $6F, $9F, $60, $50, $6F, $90, $09, $9F, $FF, $0F, $04
                dc.b    $02, $80, $88, $0F, $FD, $33, $3E, $CA, $AA, $D0, $00, $65, $56, $2C, $C2, $01
                dc.b    $C2, $62, $56, $5D, $0D, $07, $06, $0D, $00, $07, $06, $52, $CD, $00, $67, $76
                dc.b    $52, $00, $02, $17, $76, $70, $12, $10, $07, $77, $77, $00, $07, $06, $66, $77
                dc.b    $76, $46, $03, $45, $62, $D0, $03, $11, $24, $D4, $66, $34, $40, $21, $56, $05
                dc.b    $56, $65, $56, $65, $56, $77, $77, $77, $00, $77, $77, $77, $49, $65, $05, $50
                dc.b    $00, $25, $4C, $15, $4C, $44, $D0, $D1, $55, $4D, $0D, $D1, $30, $2F, $F2, $45
                dc.b    $67, $66, $66, $76, $61, $00, $55, $16, $32, $96, $53, $67, $00, $D3, $06, $01
                dc.b    $00, $13, $00, $73, $01, $56, $07, $13, $33, $07, $62, $22, $22, $61, $31, $DD
                dc.b    $DD, $33, $1D, $D0, $00, $52, $2C, $1C, $CC, $00, $03, $08, $0A, $30, $00, $07
                dc.b    $66, $12, $22, $06, $55, $32, $33, $02, $04, $10, $11, $01, $30, $02, $0A, $53
                dc.b    $31, $11, $1C, $01, $11, $00, $0D, $00, $11, $03, $18, $01, $11, $11, $22, $22
                dc.b    $22, $22, $33, $3E, $33, $22, $11, $0D, $0D, $10, $01, $10, $0D, $D1, $1D, $1D
                dc.b    $DD, $02, $0D, $02, $1F, $D0, $00, $DD, $0D, $10, $11, $C1, $C1, $33, $22, $33
                dc.b    $33, $31, $11, $33, $22, $1D, $03, $11, $D0, $D0, $00, $0D, $DD, $D0, $3C, $00
                dc.b    $D0, $D0, $0D, $D0, $06, $07, $1D, $D0, $D0, $00, $D0, $D0, $D0, $02, $01, $0D
                dc.b    $03, $01, $0D, $06, $06, $EE, $EE, $92, $7A, $21, $22, $02, $1C, $32, $00, $73
                dc.b    $4E, $22, $10, $18, $10, $23, $21, $06, $33, $30, $31, $30, $84, $22, $22, $21
                dc.b    $71, $77, $77, $77, $7B, $3E, $B0, $77, $77, $02, $28, $11, $22, $E4, $37, $02
                dc.b    $11, $01, $81, $21, $02, $33, $63, $21, $12, $48, $03, $31, $01, $17, $11, $22
                dc.b    $22, $B7, $77, $77, $77, $70, $07, $77, $77, $00, $77, $77, $77, $00, $17, $0C
                dc.b    $CC, $00, $01, $07, $01, $10, $03, $01, $01, $02, $02, $70, $70, $02, $0C, $77
                dc.b    $70, $7B, $BB, $77, $77, $77, $77, $CC, $CC, $CC, $CC, $14, $0C, $CB, $BB, $BB
                dc.b    $BB, $07, $77, $77, $77, $CC, $CC, $CC, $CC, $14, $0B, $BB, $BB, $BC, $CC, $77
                dc.b    $77, $70, $60, $CC, $CC, $06, $0C, $01, $10, $02, $01, $01, $04, $13, $70, $BB
                dc.b    $BB, $77, $CC, $21, $22, $15, $A0, $32, $00, $30, $00, $22, $10, $30, $0C, $23
                dc.b    $21, $02, $10, $30, $31, $33, $00, $22, $22, $21, $10, $77, $77, $77, $7C, $CC
                dc.b    $CC, $CC, $C0, $1C, $0E, $11, $11, $11, $11, $06, $66, $66, $66, $05, $67, $77
                dc.b    $77, $00, $31, $03, $02, $43, $10, $02, $02, $64, $31, $02, $03, $06, $43, $10
                dc.b    $02, $0E, $64, $31, $03, $11, $17, $30, $66, $66, $66, $66, $77, $77, $76, $50
                dc.b    $02, $10, $13, $57, $00, $01, $35, $70, $00, $13, $57, $00, $01, $35, $70, $00
                dc.b    $23, $57, $02, $0E, $33, $61, $11, $11, $66, $66, $66, $66, $15, $67, $77, $77
                dc.b    $64, $31, $02, $03, $06, $43, $10, $02, $02, $64, $31, $02, $03, $06, $43, $10
                dc.b    $02, $0D, $64, $31, $11, $11, $17, $33, $66, $66, $66, $00, $77, $77, $76, $03
                dc.b    $01, $13, $02, $02, $01, $35, $02, $09, $13, $57, $00, $01, $35, $70, $00, $23
                dc.b    $57, $02, $04, $30, $70, $00, $12, $05, $01, $10, $03, $01, $31, $03, $02, $43
                dc.b    $10, $02, $02, $64, $31, $02, $03, $06, $43, $10, $02, $06, $64, $31, $12, $00
                dc.b    $06, $40, $03, $01, $73, $02, $02, $01, $35, $02, $10, $13, $57, $00, $01, $35
                dc.b    $70, $00, $13, $57, $00, $01, $35, $70, $00, $23, $57, $02, $02, $05, $70, $02
                dc.b    $01, $55, $03, $02, $10, $10, $02, $02, $64, $31, $02, $03, $06, $43, $10, $02
                dc.b    $02, $64, $31, $02, $03, $06, $43, $10, $02, $02, $64, $31, $02, $02, $06, $33
                dc.b    $06, $01, $01, $03, $01, $13, $02, $02, $01, $35, $02, $09, $13, $57, $00, $01
                dc.b    $35, $70, $00, $23, $57, $02, $81, $04, $05, $DA, $AA, $B8, $55, $03, $32, $22
                dc.b    $10, $B1, $1D, $D0, $C4, $39, $D0, $D0, $0E, $43, $4D, $DD, $00, $34, $39, $0D
                dc.b    $00, $0E, $43, $4D, $00, $D0, $E4, $34, $02, $22, $2C, $40, $22, $23, $30, $73
                dc.b    $0D, $D1, $1B, $35, $DD, $0D, $93, $5D, $01, $D4, $35, $F0, $DC, $93, $52, $00
                dc.b    $04, $35, $F0, $00, $A3, $5F, $0D, $00, $05, $78, $84, $46, $55, $0C, $C7, $76
                dc.b    $10, $17, $71, $10, $64, $3A, $13, $30, $0A, $43, $B1, $10, $C7, $D4, $39, $23
                dc.b    $00, $1C, $43, $B0, $00, $03, $F4, $38, $00, $12, $2D, $40, $71, $11, $11, $73
                dc.b    $00, $03, $3B, $35, $00, $30, $83, $52, $11, $28, $35, $FD, $32, $A3, $5C, $33
                dc.b    $18, $35, $E1, $01, $A3, $52, $12, $11, $05, $CE, $33, $10, $55, $11, $11, $11
                dc.b    $10, $BF, $F2, $30, $34, $34, $0D, $C0, $DE, $43, $4D, $F0, $33, $D4, $39, $32
                dc.b    $01, $2E, $43, $8D, $13, $1D, $E4, $34, $12, $3E, $3D, $40, $11, $11, $11, $73
                dc.b    $03, $2F, $FB, $35, $0C, $D0, $43, $52, $0F, $D4, $35, $FD, $23, $93, $5C, $33
                dc.b    $D8, $35, $F2, $10, $73, $5F, $D1, $31, $05, $C3, $E3, $26, $55, $11, $11, $17
                dc.b    $10, $B3, $30, $00, $94, $38, $03, $00, $7E, $43, $82, $11, $33, $D4, $3A, $23
                dc.b    $10, $1F, $43, $81, $11, $21, $94, $39, $76, $48, $F6, $40, $67, $7C, $C0, $73
                dc.b    $01, $17, $71, $35, $03, $31, $A3, $57, $01, $1B, $35, $B0, $32, $93, $5C, $7C
                dc.b    $0B, $35, $D1, $00, $B3, $5E, $30, $00, $30, $79, $9A, $DE, $03, $01, $44, $02
                dc.b    $02, $01, $01, $02, $09, $13, $57, $00, $01, $35, $70, $00, $13, $57, $02, $02
                dc.b    $35, $70, $02, $01, $57, $02, $02, $05, $70, $02, $01, $36, $03, $02, $43, $10
                dc.b    $02, $02, $64, $31, $02, $03, $06, $43, $10, $02, $02, $64, $31, $02, $03, $06
                dc.b    $43, $10, $02, $02, $64, $32, $02, $02, $06, $40, $03, $01, $44, $02, $02, $01
                dc.b    $01, $02, $10, $13, $57, $00, $01, $35, $70, $00, $13, $57, $00, $01, $35, $70
                dc.b    $00, $13, $57, $02, $05, $05, $70, $00, $12, $36, $03, $02, $43, $10, $02, $02
                dc.b    $64, $31, $02, $03, $06, $43, $10, $02, $02, $64, $31, $02, $02, $06, $43, $03
                dc.b    $06, $64, $00, $12, $00, $06, $70, $03, $01, $44, $02, $02, $01, $01, $02, $17
                dc.b    $13, $57, $00, $01, $35, $70, $00, $13, $57, $00, $03, $03, $61, $11, $66, $66
                dc.b    $66, $66, $60, $77, $77, $77, $36, $03, $02, $43, $10, $02, $02, $64, $31, $02
                dc.b    $03, $06, $43, $10, $02, $0F, $64, $31, $00, $11, $17, $30, $11, $66, $66, $66
                dc.b    $66, $77, $77, $77, $15, $03, $01, $44, $02, $02, $01, $01, $02, $17, $13, $57
                dc.b    $00, $01, $35, $70, $00, $13, $57, $00, $11, $03, $61, $11, $66, $66, $66, $66
                dc.b    $60, $77, $77, $65, $36, $03, $02, $43, $10, $02, $02, $64, $31, $02, $03, $06
                dc.b    $43, $10, $02, $53, $64, $31, $00, $11, $17, $30, $00, $66, $66, $66, $65, $DF
                dc.b    $2F, $22, $15, $00, $D0, $D0, $44, $00, $0D, $D4, $01, $01, $0D, $43, $52, $00
                dc.b    $09, $35, $20, $63, $93, $5F, $0D, $0B, $35, $D1, $C1, $D3, $5B, $65, $55, $05
                dc.b    $F9, $45, $46, $36, $00, $0C, $00, $43, $9D, $DD, $00, $34, $39, $D0, $10, $D3
                dc.b    $43, $90, $00, $0D, $34, $39, $36, $11, $CC, $43, $B0, $55, $56, $A4, $3E, $07
                dc.b    $65, $5E, $40, $00, $03, $01, $44, $02, $06, $08, $01, $DA, $BB, $80, $36, $04
                dc.b    $1C, $33, $33, $33, $33, $44, $44, $44, $44, $11, $11, $11, $11, $60, $2F, $FE
                dc.b    $EC, $36, $D0, $11, $00, $43, $91, $01, $00, $73, $08, $88, $8A, $04, $1C, $33
                dc.b    $33, $33, $33, $44, $44, $44, $44, $11, $11, $11, $11, $DE, $FF, $22, $15, $00
                dc.b    $0D, $D0, $44, $00, $1C, $14, $01, $B8, $88, $80, $36, $04, $1C, $33, $33, $33
                dc.b    $33, $44, $44, $44, $44, $11, $11, $11, $11, $60, $22, $FF, $ED, $36, $0D, $D0
                dc.b    $00, $43, $41, $C1, $00, $73, $08, $88, $8B, $04, $1C, $33, $33, $33, $33, $44
                dc.b    $44, $44, $44, $11, $11, $11, $11, $CE, $EF, $F8, $15, $00, $11, $07, $44, $00
                dc.b    $10, $19, $01, $A8, $88, $80, $36, $04, $16, $33, $33, $33, $33, $44, $44, $44
                dc.b    $44, $11, $11, $11, $11, $60, $FE, $ED, $CB, $36, $10, $30, $00, $43, $80, $02
                dc.b    $04, $73, $08, $BB, $AD, $04, $10, $33, $33, $33, $33, $44, $44, $44, $44, $11
                dc.b    $11, $11, $11, $65, $77, $77, $15, $03, $01, $44, $02, $06, $01, $01, $03, $11
                dc.b    $10, $36, $04, $11, $33, $33, $33, $33, $44, $44, $44, $44, $11, $11, $11, $11
                dc.b    $60, $77, $77, $77, $36, $03, $02, $43, $10, $02, $04, $73, $01, $11, $11, $04
                dc.b    $10, $33, $33, $33, $33, $44, $44, $44, $44, $11, $11, $11, $11, $77, $77, $77
                dc.b    $15, $03, $01, $44, $02, $06, $01, $01, $11, $11, $10, $36, $04, $11, $33, $33
                dc.b    $33, $33, $44, $44, $44, $44, $11, $11, $11, $11, $60, $77, $77, $65, $36, $03
                dc.b    $02, $43, $10, $02, $03, $73, $01, $11, $05, $11, $33, $33, $33, $30, $44, $44
                dc.b    $44, $44, $11, $11, $11, $11, $60, $77, $77, $77, $36, $03, $02, $43, $10, $02
                dc.b    $02, $64, $31, $02, $03, $06, $43, $10, $02, $02, $64, $31, $02, $03, $06, $43
                dc.b    $11, $02, $02, $64, $33, $02, $02, $06, $40, $03, $01, $44, $02, $02, $01, $01
                dc.b    $02, $10, $13, $57, $00, $01, $35, $70, $00, $13, $57, $00, $11, $35, $70, $00
                dc.b    $03, $57, $02, $80, $84, $D9, $CC, $CB, $BA, $00, $16, $77, $71, $00, $33, $16
                dc.b    $77, $00, $10, $23, $16, $00, $10, $21, $33, $00, $33, $31, $01, $00, $11, $22
                dc.b    $23, $07, $77, $77, $77, $66, $65, $55, $55, $11, $13, $33, $00, $77, $71, $11
                dc.b    $33, $77, $77, $77, $66, $11, $16, $77, $77, $33, $30, $11, $10, $22, $21, $11
                dc.b    $10, $77, $77, $77, $77, $55, $55, $56, $66, $00, $33, $31, $11, $33, $11, $17
                dc.b    $77, $66, $77, $77, $77, $07, $77, $61, $11, $00, $11, $03, $33, $00, $11, $12
                dc.b    $22, $07, $77, $77, $77, $77, $70, $07, $77, $07, $77, $61, $10, $77, $61, $32
                dc.b    $00, $61, $33, $32, $30, $33, $31, $30, $30, $30, $33, $33, $00, $12, $20, $12
                dc.b    $10, $77, $77, $77, $77, $E9, $33, $33, $98, $0D, $01, $A0, $02, $02, $01, $A0
                dc.b    $03, $04, $A0, $00, $A0, $07, $02, $02, $01, $01, $04, $03, $1A, $00, $0A, $02
                dc.b    $01, $A0, $02, $06, $70, $A0, $A0, $01, $11, $A0, $02, $06, $07, $00, $A0, $01
                dc.b    $11, $10, $02, $06, $10, $7A, $00, $01, $16, $6A, $0C, $01, $A0, $03, $04, $A0
                dc.b    $00, $07, $1A, $02, $02, $07, $1A, $12, $01, $01, $03, $01, $01, $2C, $05, $0A
                dc.b    $00, $DC, $CB, $AA, $05, $01, $A0, $07, $03, $0A, $00, $A0, $03, $04, $A0, $00
                dc.b    $10, $A0, $03, $01, $0A, $02, $06, $76, $67, $DD, $DD, $70, $11, $03, $09, $11
                dc.b    $10, $00, $07, $11, $10, $00, $07, $11, $02, $02, $07, $01, $02, $0A, $06, $01
                dc.b    $10, $00, $76, $01, $10, $00, $77, $01, $02, $02, $07, $01, $02, $02, $07, $01
                dc.b    $02, $02, $77, $11, $02, $07, $77, $11, $10, $00, $70, $11, $10, $02, $01, $11
                dc.b    $02, $02, $11, $10, $02, $02, $01, $10, $02, $02, $07, $11, $02, $2B, $07, $11
                dc.b    $10, $00, $07, $01, $10, $00, $07, $71, $10, $00, $07, $71, $10, $00, $06, $71
                dc.b    $10, $00, $06, $71, $10, $00, $07, $71, $10, $00, $07, $71, $10, $00, $07, $71
                dc.b    $10, $00, $07, $61, $10, $00, $07, $11, $10, $02, $05, $01, $10, $00, $01, $01
                dc.b    $03, $01, $10, $02, $06, $11, $16, $11, $11, $00, $07, $02, $07, $07, $00, $70
                dc.b    $00, $07, $00, $70, $02, $02, $70, $70, $02, $11, $70, $77, $00, $70, $00, $77
                dc.b    $00, $70, $00, $70, $70, $70, $70, $00, $70, $70, $70, $03, $02, $70, $70, $02
                dc.b    $02, $70, $70, $03, $08, $70, $00, $70, $70, $70, $00, $70, $70, $02, $1A, $11
                dc.b    $11, $11, $11, $44, $66, $45, $AA, $22, $02, $1F, $00, $02, $01, $FF, $F0, $32
                dc.b    $2F, $F1, $3E, $00, $1F, $12, $02, $30, $0F, $02, $16, $20, $10, $E2, $02, $00
                dc.b    $2F, $01, $31, $EC, $C0, $FF, $F1, $00, $E3, $1F, $01, $00, $20, $21, $0F, $00
                dc.b    $20, $02, $20, $F0, $E3, $3E, $0F, $00, $0F, $F0, $00, $F0, $0F, $00, $F1, $FF
                dc.b    $01, $FF, $02, $30, $F1, $00, $02, $23, $00, $01, $10, $00, $31, $10, $02, $10
                dc.b    $02, $22, $22, $02, $16, $02, $31, $10, $02, $31, $01, $20, $31, $01, $32, $02
                dc.b    $01, $32, $22, $67, $45, $77, $57, $30, $00, $20, $02, $03, $0A, $22, $20, $22
                dc.b    $22, $20, $23, $33, $13, $02, $30, $02, $10, $22, $00, $33, $33, $33, $11, $20
                dc.b    $02, $11, $11, $22, $01, $11, $33, $00, $30, $03, $0A, $30, $33, $22, $20, $56
                dc.b    $50, $66, $66, $11, $05, $03, $07, $11, $00, $01, $11, $11, $11, $10, $02, $16
                dc.b    $55, $77, $56, $66, $02, $22, $30, $30, $02, $22, $33, $03, $20, $00, $20, $00
                dc.b    $23, $11, $20, $22, $33, $33, $02, $01, $30, $03, $28, $22, $20, $22, $00, $12
                dc.b    $22, $21, $11, $30, $00, $33, $03, $00, $20, $30, $30, $02, $00, $22, $22, $22
                dc.b    $22, $02, $00, $22, $22, $20, $20, $20, $22, $00, $20, $00, $22, $22, $00, $22
                dc.b    $00, $77, $76, $02, $14, $11, $00, $22, $00, $10, $01, $00, $07, $06, $77, $76
                dc.b    $61, $16, $77, $11, $01, $11, $77, $11, $10, $02, $1D, $76, $77, $70, $77, $67
                dc.b    $70, $26, $66, $10, $72, $03, $03, $00, $02, $00, $30, $77, $00, $20, $00, $21
                dc.b    $11, $13, $02, $33, $33, $33, $02, $30, $02, $09, $22, $00, $02, $22, $00, $DC
                dc.b    $8C, $AE, $F8, $08, $08, $66, $52, $41, $71, $66, $52, $41, $71, $08, $0C, $66
                dc.b    $52, $41, $71, $8A, $FE, $EF, $8B, $30, $00, $20, $02, $03, $0A, $22, $20, $22
                dc.b    $22, $20, $23, $33, $13, $02, $30, $02, $18, $22, $00, $33, $33, $33, $11, $20
                dc.b    $02, $11, $20, $02, $01, $11, $20, $00, $33, $33, $00, $02, $30, $00, $22, $22
                dc.b    $20, $02, $08, $32, $20, $22, $30, $30, $00, $22, $30, $02, $01, $22, $05, $18
                dc.b    $22, $03, $11, $02, $22, $30, $30, $02, $22, $33, $03, $20, $00, $20, $00, $23
                dc.b    $11, $20, $22, $33, $33, $00, $02, $30, $02, $1F, $02, $22, $20, $22, $00, $12
                dc.b    $22, $21, $11, $30, $00, $33, $03, $00, $20, $30, $30, $02, $00, $22, $22, $22
                dc.b    $22, $22, $00, $20, $00, $22, $00, $02, $22, $02, $01, $20, $03, $04, $22, $02
                dc.b    $21, $11, $02, $05, $33, $33, $00, $02, $30, $02, $0C, $20, $22, $22, $03, $31
                dc.b    $11, $00, $33, $33, $33, $02, $30, $03, $0C, $22, $22, $20, $20, $12, $00, $23
                dc.b    $33, $30, $00, $33, $33, $02, $01, $30, $02, $0C, $22, $02, $22, $03, $33, $31
                dc.b    $00, $33, $33, $33, $00, $30, $03, $1C, $02, $22, $22, $00, $75, $75, $44, $BB
                dc.b    $00, $22, $10, $FF, $22, $20, $23, $11, $33, $32, $00, $22, $10, $12, $00, $02
                dc.b    $23, $20, $00, $2E, $03, $19, $10, $32, $00, $02, $FF, $12, $33, $30, $C3, $13
                dc.b    $01, $12, $00, $13, $32, $20, $00, $22, $3C, $C3, $32, $CE, $F0, $0F, $F1, $03
                dc.b    $01, $0F, $03, $1D, $FF, $EE, $F0, $FF, $11, $22, $3C, $11, $00, $02, $20, $22
                dc.b    $22, $21, $13, $33, $32, $23, $31, $10, $01, $22, $02, $23, $33, $10, $20, $02
                dc.b    $22, $02, $11, $02, $22, $01, $02, $00, $23, $56, $55, $01, $33, $30, $00, $11
                dc.b    $10, $22, $00, $10, $03, $46, $70, $00, $21, $11, $26, $57, $30, $03, $30, $01
                dc.b    $30, $33, $33, $21, $21, $21, $22, $00, $67, $07, $76, $66, $10, $70, $10, $10
                dc.b    $00, $77, $11, $01, $77, $00, $77, $77, $76, $66, $66, $07, $10, $00, $01, $77
                dc.b    $10, $10, $10, $70, $76, $76, $77, $77, $76, $77, $21, $66, $11, $00, $30, $30
                dc.b    $10, $00, $33, $03, $00, $07, $22, $00, $11, $16, $67, $55, $02, $04, $10, $07
                dc.b    $01, $01, $02, $0B, $10, $10, $00, $70, $65, $57, $01, $66, $30, $00, $10, $02
                dc.b    $09, $20, $00, $11, $22, $07, $11, $00, $76, $60, $02, $04, $01, $10, $00, $70
                dc.b    $04, $0A, $77, $77, $77, $07, $67, $77, $66, $66, $10, $71, $03, $10, $01, $00
                dc.b    $11, $77, $00, $11, $00, $76, $61, $11, $00, $11, $11, $11, $00, $10, $02, $29
                dc.b    $77, $70, $07, $77, $00, $61, $70, $21, $11, $01, $00, $30, $30, $10, $00, $33
                dc.b    $03, $55, $00, $22, $22, $03, $11, $11, $00, $30, $03, $03, $00, $33, $00, $30
                dc.b    $00, $22, $12, $22, $00, $33, $33, $33, $33, $1C, $04, $11, $33, $11, $22, $02
                dc.b    $14, $33, $03, $22, $00, $30, $30, $00, $02, $01, $22, $21, $13, $31, $22, $33
                dc.b    $03, $33, $22, $33, $30, $02, $1D, $21, $22, $20, $22, $12, $20, $23, $33, $30
                dc.b    $22, $03, $03, $00, $02, $00, $30, $22, $00, $20, $00, $21, $11, $13, $02, $33
                dc.b    $33, $33, $02, $30, $02, $30, $22, $00, $02, $22, $00, $30, $22, $21, $11, $30
                dc.b    $20, $30, $30, $00, $22, $33, $03, $22, $00, $22, $22, $21, $11, $11, $00, $30
                dc.b    $00, $03, $00, $30, $30, $30, $00, $21, $21, $22, $00, $12, $00, $21, $12, $30
                dc.b    $00, $33, $30, $22, $00, $30, $05, $18, $21, $11, $03, $02, $30, $03, $30, $01
                dc.b    $30, $33, $33, $21, $21, $21, $22, $00, $12, $00, $21, $11, $30, $00, $30, $30
                dc.b    $02, $2F, $33, $03, $02, $00, $22, $22, $01, $11, $11, $00, $30, $03, $03, $00
                dc.b    $33, $00, $30, $00, $22, $12, $22, $00, $12, $20, $21, $11, $30, $00, $33, $33
                dc.b    $00, $20, $30, $00, $22, $02, $02, $22, $02, $20, $02, $00, $22, $22, $22, $00
                dc.b    $20, $07, $0D, $BB, $45, $75, $45, $00, $F1, $22, $02, $00, $F0, $00, $10, $0F
                dc.b    $02, $0E, $22, $F0, $01, $00, $02, $11, $10, $20, $23, $22, $22, $02, $1F, $C2
                dc.b    $03, $07, $C2, $23, $30, $3C, $00, $20, $02, $02, $02, $01, $10, $02, $0B, $02
                dc.b    $20, $00, $23, $CC, $32, $00, $EF, $00, $F1, $22, $02, $02, $0F, $10, $04, $08
                dc.b    $EF, $EE, $CE, $0E, $21, $00, $01, $F0, $04, $2A, $20, $02, $20, $F0, $20, $20
                dc.b    $00, $0F, $02, $00, $23, $33, $20, $02, $33, $32, $22, $31, $FF, $FE, $57, $44
                dc.b    $9A, $AA, $02, $22, $30, $30, $02, $22, $33, $03, $20, $00, $20, $00, $23, $11
                dc.b    $20, $22, $33, $33, $02, $01, $30, $03, $0D, $22, $20, $22, $00, $12, $05, $76
                dc.b    $66, $30, $00, $10, $00, $30, $02, $08, $11, $30, $67, $61, $00, $44, $06, $61
                dc.b    $03, $01, $01, $02, $36, $11, $10, $00, $11, $00, $77, $00, $10, $77, $76, $11
                dc.b    $10, $07, $11, $11, $10, $07, $10, $00, $10, $67, $77, $07, $01, $01, $66, $07
                dc.b    $10, $00, $10, $07, $10, $01, $01, $70, $76, $67, $77, $00, $77, $00, $76, $66
                dc.b    $07, $77, $10, $10, $07, $77, $11, $01, $70, $00, $77, $02, $0A, $77, $70, $77
                dc.b    $00, $77, $70, $20, $07, $00, $22, $02, $32, $07, $22, $20, $67, $77, $21, $11
                dc.b    $10, $02, $33, $33, $10, $02, $30, $00, $67, $70, $22, $02, $21, $11, $11, $02
                dc.b    $30, $00, $30, $02, $30, $03, $03, $20, $21, $12, $22, $00, $20, $00, $21, $11
                dc.b    $20, $00, $33, $33, $00, $02, $30, $00, $22, $22, $20, $02, $08, $32, $20, $22
                dc.b    $30, $30, $00, $22, $30, $02, $01, $22, $04, $04, $11, $11, $11, $33, $1C, $0F
                dc.b    $11, $33, $12, $22, $02, $22, $30, $30, $57, $55, $33, $03, $33, $32, $55, $02
                dc.b    $03, $01, $22, $52, $02, $02, $10, $27, $05, $27, $11, $01, $02, $56, $75, $65
                dc.b    $44, $30, $00, $33, $03, $00, $20, $30, $30, $02, $00, $22, $22, $22, $22, $22
                dc.b    $20, $20, $00, $02, $20, $22, $22, $20, $00, $77, $77, $00, $02, $55, $75, $21
                dc.b    $13, $02, $14, $33, $33, $00, $02, $35, $55, $00, $27, $52, $23, $03, $52, $21
                dc.b    $10, $36, $20, $10, $00, $30, $01, $02, $0D, $52, $00, $11, $10, $20, $23, $01
                dc.b    $01, $22, $00, $21, $00, $22, $02, $09, $02, $10, $20, $20, $00, $01, $02, $20
                dc.b    $20, $02, $01, $02, $04, $11, $02, $01, $02, $02, $31, $30, $02, $02, $56, $01
                dc.b    $11, $22, $60, $20, $00, $10, $25, $02, $23, $01, $20, $01, $00, $13, $02, $22
                dc.b    $33, $20, $00, $23, $33, $20, $00, $EF, $FF, $E3, $22, $CE, $EC, $C3, $20, $02
                dc.b    $22, $33, $32, $02, $3E, $FF, $01, $21, $F0, $00, $F0, $0F, $03, $01, $10, $02
                dc.b    $04, $F0, $0F, $00, $FF, $02, $01, $FF, $03, $09, $13, $11, $00, $10, $12, $20
                dc.b    $00, $21, $F1, $04, $28, $02, $00, $21, $F0, $00, $11, $EF, $01, $00, $02, $FF
                dc.b    $02, $00, $20, $00, $30, $00, $02, $FF, $33, $33, $22, $FE, $13, $31, $22, $00
                dc.b    $22, $22, $01, $12, $21, $00, $2F, $22, $10, $20, $1E, $01, $01, $02, $1C, $30
                dc.b    $12, $00, $0E, $01, $20, $00, $1F, $11, $CC, $CC, $10, $1F, $00, $0F, $13, $FF
                dc.b    $F0, $00, $20, $E3, $3F, $00, $20, $20, $03, $0F, $12, $03, $34, $FE, $20, $03
                dc.b    $00, $0E, $E3, $30, $FC, $01, $A6, $46, $66, $A5, $30, $20, $30, $30, $00, $22
                dc.b    $33, $03, $22, $00, $22, $22, $21, $11, $11, $00, $30, $00, $03, $00, $30, $30
                dc.b    $30, $00, $21, $21, $22, $00, $12, $00, $21, $12, $30, $00, $33, $30, $22, $00
                dc.b    $30, $05, $14, $21, $11, $03, $02, $30, $03, $30, $01, $30, $33, $33, $21, $21
                dc.b    $21, $22, $00, $22, $00, $77, $76, $02, $14, $11, $00, $22, $00, $10, $01, $00
                dc.b    $22, $56, $77, $21, $33, $31, $22, $33, $03, $33, $22, $33, $30, $02, $1D, $21
                dc.b    $22, $20, $22, $67, $00, $05, $54, $10, $00, $71, $10, $00, $07, $10, $11, $77
                dc.b    $00, $11, $00, $76, $61, $11, $00, $11, $11, $11, $00, $10, $02, $0B, $77, $00
                dc.b    $07, $77, $00, $11, $17, $66, $66, $01, $11, $02, $16, $10, $01, $00, $11, $77
                dc.b    $77, $61, $00, $76, $66, $61, $10, $10, $00, $01, $01, $00, $01, $10, $11, $11
                dc.b    $10, $02, $19, $10, $07, $56, $66, $10, $72, $03, $03, $00, $02, $00, $30, $77
                dc.b    $00, $20, $00, $21, $11, $13, $02, $33, $33, $33, $02, $30, $02, $09, $22, $00
                dc.b    $02, $22, $00, $11, $13, $33, $33, $1C, $77, $CB, $BB, $BB, $BB, $00, $21, $21
                dc.b    $12, $00, $31, $3B, $13, $00, $11, $B0, $13, $00, $20, $00, $33, $00, $33, $B0
                dc.b    $33, $00, $12, $10, $12, $07, $77, $7D, $A7, $77, $77, $77, $A7, $12, $12, $11
                dc.b    $20, $31, $33, $32, $3A, $32, $13, $32, $30, $33, $91, $30, $30, $33, $03, $33
                dc.b    $03, $1B, $00, $12, $B0, $A0, $0A, $7A, $30, $DA, $AA, $DA, $99, $00, $21, $8A
                dc.b    $22, $00, $02, $30, $81, $D0, $11, $B0, $02, $00, $10, $00, $82, $00, $38, $00
                dc.b    $01, $00, $10, $0A, $28, $77, $7D, $0A, $A0, $D7, $77, $AA, $AA, $21, $22, $12
                dc.b    $10, $3B, $00, $30, $30, $20, $10, $30, $00, $20, $91, $00, $30, $B0, $01, $33
                dc.b    $02, $1D, $02, $21, $10, $30, $D7, $A7, $77, $9A, $77, $A7, $D7, $21, $22, $12
                dc.b    $00, $32, $00, $38, $00, $22, $10, $30, $0A, $23, $21, $B0, $30, $30, $31, $02
                dc.b    $0B, $22, $22, $00, $03, $77, $77, $D0, $00, $DD, $ED, $70, $02, $06, $40, $20
                dc.b    $04, $D3, $03, $80, $02, $03, $44, $00, $01, $02, $08, $73, $00, $03, $00, $04
                dc.b    $00, $D0, $04, $04, $0C, $01, $40, $70, $99, $D6, $75, $00, $12, $A0, $30, $03
                dc.b    $B3, $03, $07, $03, $03, $00, $04, $3B, $30, $40, $04, $04, $10, $40, $00, $04
                dc.b    $04, $27, $67, $D9, $39, $DD, $0A, $2A, $81, $22, $00, $80, $32, $11, $00, $90
                dc.b    $21, $02, $00, $18, $21, $12, $3A, $33, $31, $01, $00, $11, $22, $22, $00, $A7
                dc.b    $77, $77, $EA, $A7, $7D, $DE, $00, $21, $2B, $02, $0A, $02, $32, $03, $00, $11
                dc.b    $21, $03, $00, $10, $28, $02, $09, $33, $30, $30, $00, $11, $80, $04, $07, $77
                dc.b    $02, $05, $ED, $DE, $76, $40, $03, $02, $06, $10, $40, $30, $01, $01, $04, $03
                dc.b    $03, $01, $44, $01, $03, $01, $10, $02, $01, $10, $03, $01, $01, $02, $0A, $11
                dc.b    $11, $51, $11, $00, $10, $40, $00, $01, $11, $04, $01, $10, $02, $01, $10, $04
                dc.b    $01, $01, $09, $08, $56, $66, $CC, $DD, $43, $00, $12, $10, $02, $05, $30, $30
                dc.b    $00, $08, $30, $02, $33, $01, $00, $30, $03, $01, $33, $00, $40, $A2, $21, $10
                dc.b    $00, $77, $77, $77, $9A, $77, $DD, $EE, $21, $22, $B0, $30, $32, $00, $38, $00
                dc.b    $22, $10, $30, $83, $26, $32, $13, $38, $00, $70, $01, $13, $17, $00, $01, $10
                dc.b    $77, $07, $01, $11, $AA, $BB, $CC, $CC, $04, $02, $40, $10, $02, $02, $04, $01
                dc.b    $02, $14, $BB, $EE, $FF, $FF, $33, $11, $11, $00, $33, $00, $11, $00, $23, $33
                dc.b    $11, $00, $CD, $DD, $EF, $EE, $03, $01, $04, $02, $36, $10, $40, $00, $01, $04
                dc.b    $03, $FF, $FE, $EA, $B8, $00, $11, $11, $33, $00, $11, $00, $33, $00, $11, $33
                dc.b    $32, $A9, $22, $11, $10, $00, $21, $21, $22, $3A, $02, $32, $11, $00, $11, $21
                dc.b    $02, $81, $22, $32, $40, $31, $10, $07, $00, $01, $10, $00, $71, $11, $10, $70
                dc.b    $77, $00, $15, $69, $0D, $00, $15, $00, $97, $00, $14, $00, $97, $00, $01, $60
                dc.b    $00, $60, $02, $35, $02, $00, $03, $00, $01, $00, $01, $00, $11, $00, $11, $00
                dc.b    $11, $00, $11, $00, $01, $00, $01, $00, $01, $00, $11, $00, $01, $00, $11, $00
                dc.b    $11, $00, $01, $00, $11, $00, $7C, $00, $7C, $00, $7E, $00, $7C, $00, $7E, $00
                dc.b    $01, $00, $7C, $00, $03, $00, $02, $00, $7E, $03, $81, $86, $76, $00, $09, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $13, $08, $13, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $17, $08, $17, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $13, $08, $13, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $35, $08, $35, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $17, $08, $17, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08, $13, $00, $12, $00
                dc.b    $10, $00, $10, $00, $11, $00, $11, $00, $10, $00, $10, $88, $18, $80, $19, $00
                dc.b    $37, $00, $10, $08, $36, $08, $11, $00, $10, $00, $37, $00, $32, $00, $15, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00
                dc.b    $10, $00, $10, $00, $12, $08, $17, $00, $10, $08, $15, $08, $71, $08, $71, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $88, $77, $88, $5C, $00
                dc.b    $01, $00, $10, $80, $43, $80, $79, $00, $10, $00, $10, $00, $12, $00, $12, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $00, $12, $00, $12, $00
                dc.b    $10, $00, $10, $88, $19, $88, $53, $00, $10, $00, $01, $80, $5C, $80, $07, $00
                dc.b    $24, $00, $24, $00, $26, $00, $26, $00, $24, $00, $24, $80, $20, $80, $0A, $00
                dc.b    $01, $00, $10, $80, $63, $80, $58, $00, $10, $00, $10, $00, $12, $00, $12, $00
                dc.b    $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $00, $12, $00, $12, $00
                dc.b    $10, $00, $10, $88, $38, $88, $73, $00, $10, $00, $01, $88, $5E, $88, $04, $00
                dc.b    $24, $00, $24, $00, $26, $08, $23, $00, $24, $08, $21, $08, $05, $08, $05, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $71, $08, $71, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00
                dc.b    $10, $00, $10, $00, $12, $00, $12, $00, $10, $08, $55, $68, $55, $60, $11, $00
                dc.b    $4C, $E0, $02, $02, $4C, $E0, $02, $57, $4E, $00, $4F, $00, $14, $00, $14, $00
                dc.b    $30, $00, $30, $00, $36, $00, $36, $00, $30, $00, $30, $00, $32, $00, $32, $00
                dc.b    $30, $00, $30, $68, $6B, $60, $5F, $00, $24, $08, $10, $80, $5F, $88, $23, $00
                dc.b    $7E, $08, $7D, $00, $7E, $08, $7D, $08, $7D, $00, $01, $00, $01, $00, $01, $00
                dc.b    $78, $00, $78, $00, $78, $00, $78, $00, $7E, $00, $7E, $00, $36, $00, $7D, $00
                dc.b    $7B, $00, $32, $00, $31, $00, $79, $00, $33, $00, $06, $00, $33, $00, $4D, $02
                dc.b    $81, $52, $08, $7E, $00, $68, $08, $17, $00, $10, $00, $10, $80, $FE, $80, $FC
                dc.b    $00, $14, $00, $14, $00, $1A, $00, $18, $00, $10, $00, $10, $00, $1C, $00, $1C
                dc.b    $00, $10, $00, $10, $00, $14, $00, $14, $00, $14, $00, $14, $00, $10, $00, $10
                dc.b    $00, $14, $00, $14, $00, $16, $00, $14, $00, $10, $00, $10, $00, $12, $00, $10
                dc.b    $00, $24, $00, $24, $00, $26, $00, $24, $00, $24, $00, $24, $00, $24, $00, $26
                dc.b    $00, $24, $00, $24, $00, $24, $00, $24, $00, $10, $00, $10, $00, $10, $00, $12
                dc.b    $00, $10, $00, $10, $00, $14, $00, $16, $00, $14, $00, $14, $00, $10, $00, $10
                dc.b    $00, $14, $00, $14, $00, $18, $00, $18, $00, $10, $00, $10, $00, $16, $00, $16
                dc.b    $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $00, $D8, $08, $D9
                dc.b    $00, $10, $00, $10, $80, $7A, $80, $7A, $00, $10, $00, $10, $80, $BA, $88, $B9
                dc.b    $80, $23, $00, $14, $80, $23, $00, $14, $00, $14, $80, $21, $80, $62, $00, $55
                dc.b    $00, $04, $00, $04, $00, $06, $00, $06, $00, $04, $00, $04, $00, $0E, $00, $0E
                dc.b    $00, $04, $00, $04, $00, $06, $00, $06, $00, $04, $00, $04, $00, $58, $00, $58
                dc.b    $00, $A5, $00, $A5, $00, $AB, $00, $AB, $00, $AB, $00, $AB, $E9, $0C, $E9, $0C
                dc.b    $00, $10, $00, $10, $00, $12, $00, $12, $00, $10, $00, $10, $08, $18, $09, $AC
                dc.b    $00, $10, $00, $01, $00, $10, $09, $BA, $00, $10, $00, $10, $81, $A1, $09, $A9
                dc.b    $00, $01, $00, $01, $80, $1F, $09, $B1, $00, $01, $00, $10, $09, $AA, $00, $12
                dc.b    $00, $10, $00, $10, $00, $FC, $00, $FC, $00, $10, $00, $10, $00, $DB, $00, $DE
                dc.b    $00, $CA, $00, $10, $00, $CD, $00, $12, $00, $10, $00, $10, $00, $C4, $00, $C4
                dc.b    $00, $19, $00, $15, $00, $0E, $A8, $0B, $00, $02, $00, $10, $E9, $E2, $A8, $D4
                dc.b    $00, $01, $E9, $2C, $E9, $2E, $E9, $2E, $E9, $2E, $00, $10, $E9, $EF, $00, $D1
                dc.b    $00, $10, $00, $10, $03, $67, $3F, $00, $2F, $00, $10, $00, $12, $00, $12, $00
                dc.b    $10, $00, $10, $00, $50, $00, $50, $00, $10, $00, $10, $E9, $93, $09, $3C, $00
                dc.b    $01, $00, $01, $E9, $EE, $09, $41, $00, $10, $00, $10, $00, $10, $00, $01, $00
                dc.b    $10, $00, $36, $00, $A2, $00, $01, $00, $30, $00, $10, $00, $CE, $00, $7A, $09
                dc.b    $A1, $00, $10, $E0, $02, $09, $1D, $00, $01, $00, $03, $E9, $EF, $09, $43, $00
                dc.b    $10, $00, $10, $00, $10, $00, $26, $00, $10, $00, $0E, $00, $83, $00, $6D, $00
                dc.b    $F0, $09, $B8, $00, $62, $09, $EC, $09, $42, $00, $11, $09, $42, $03, $19, $11
                dc.b    $00, $11, $00, $63, $00, $25, $00, $30, $00, $10, $09, $AF, $00, $68, $09, $D8
                dc.b    $00, $66, $01, $D8, $89, $D7, $01, $D6, $02, $36, $08, $D3, $81, $06, $00, $10
                dc.b    $00, $10, $08, $B8, $08, $BA, $00, $10, $00, $10, $00, $72, $00, $72, $00, $10
                dc.b    $00, $10, $00, $32, $00, $22, $00, $25, $00, $3B, $00, $24, $00, $1A, $00, $2A
                dc.b    $00, $18, $00, $1A, $00, $08, $00, $18, $00, $0E, $00, $08, $89, $C3, $01, $CC
                dc.b    $02, $03, $88, $00, $68, $05, $80, $9C, $21, $E6, $49, $E7, $00, $10, $00, $10
                dc.b    $00, $1E, $08, $1F, $00, $10, $00, $10, $08, $1F, $00, $1E, $00, $10, $00, $10
                dc.b    $08, $1E, $00, $1F, $00, $10, $00, $10, $00, $13, $08, $13, $00, $10, $00, $10
                dc.b    $00, $10, $08, $13, $00, $10, $00, $10, $C1, $D4, $C1, $D7, $00, $10, $00, $10
                dc.b    $00, $11, $00, $11, $00, $10, $00, $10, $00, $1B, $08, $1A, $00, $10, $00, $10
                dc.b    $00, $12, $00, $12, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10
                dc.b    $00, $12, $00, $12, $00, $10, $00, $10, $08, $1F, $08, $1F, $00, $10, $00, $10
                dc.b    $08, $11, $08, $11, $00, $10, $00, $10, $08, $17, $08, $17, $00, $10, $00, $10
                dc.b    $08, $11, $08, $11, $00, $10, $00, $10, $88, $79, $88, $79, $00, $10, $00, $10
                dc.b    $00, $12, $08, $13, $00, $10, $00, $10, $08, $13, $00, $12, $00, $10, $08, $55
                dc.b    $68, $55, $60, $11, $12, $01, $68, $03, $01, $68, $0B, $06, $68, $00, $20, $BF
                dc.b    $08, $03, $03, $01, $01, $02, $02, $40, $BD, $04, $02, $40, $BD, $03, $01, $01
                dc.b    $02, $04, $60, $03, $20, $BF, $5E, $01, $68, $07, $01, $68, $37, $01, $68, $07
                dc.b    $01, $68, $37, $01, $68, $07, $01, $68, $3D, $03, $80, $00, $80, $2D, $03, $80
                dc.b    $00, $80, $0D, $03, $80, $00, $80, $6D, $03, $80, $00, $80, $81, $15, $04, $FF
                dc.b    $FF, $FF, $FF, $14, $01, $FF, $03, $02, $FF, $FF, $02, $02, $FF, $FF, $02, $02
                dc.b    $FF, $FF, $03, $01, $FF, $06, $0A, $FF, $FF, $33, $33, $CC, $FF, $CC, $CC, $CC
                dc.b    $FF, $05, $01, $FF, $03, $01, $FF, $07, $09, $FF, $FF, $FF, $FF, $00, $FF, $FF
                dc.b    $FF, $FF, $04, $04, $FF, $FF, $FF, $FF, $08, $04, $FF, $FF, $FF, $FF, $10, $04
                dc.b    $FF, $FF, $FF, $FF, $02, $02, $FF, $FF, $02, $02, $FF, $FF, $0F, $0C, $FF, $FF
                dc.b    $FF, $FF, $00, $0F, $FF, $F0, $00, $0F, $FF, $F0, $81, $89, $62, $41, $04, $40
                dc.b    $41, $40, $44, $01, $40, $00, $41, $71, $16, $17, $32, $31, $15, $17, $32, $00
                dc.b    $42, $40, $05, $41, $01, $40, $44, $01, $40, $41, $01, $43, $41, $01, $40, $32
                dc.b    $57, $57, $32, $31, $57, $57, $37, $41, $01, $42, $44, $01, $40, $43, $01, $40
                dc.b    $41, $01, $40, $41, $01, $40, $00, $70, $56, $17, $32, $31, $16, $56, $72, $00
                dc.b    $41, $01, $40, $41, $01, $43, $11, $51, $51, $16, $01, $03, $03, $06, $04, $01
                dc.b    $03, $03, $07, $00, $02, $04, $01, $03, $03, $05, $02, $10, $11, $10, $11, $35
                dc.b    $4E, $43, $01, $42, $43, $42, $43, $01, $42, $00, $62, $62, $23, $22, $04, $04
                dc.b    $23, $22, $27, $21, $43, $42, $02, $46, $01, $42, $43, $01, $42, $43, $01, $40
                dc.b    $43, $01, $63, $22, $60, $60, $04, $04, $60, $60, $25, $67, $01, $42, $43, $01
                dc.b    $42, $43, $01, $42, $43, $01, $42, $43, $01, $42, $21, $63, $61, $22, $04, $04
                dc.b    $23, $61, $67, $24, $43, $01, $42, $43, $01, $42, $04, $42, $43, $01, $05, $0E
                dc.b    $02, $10, $14, $02, $02, $10, $14, $35, $04, $01, $01, $02, $01, $02, $11, $03
                dc.b    $02, $05, $29, $28, $29, $2F, $04, $04, $29, $2F, $2D, $2C, $02, $05, $00, $03
                dc.b    $03, $03, $03, $02, $05, $02, $0C, $02, $05, $29, $28, $2B, $2A, $04, $04, $2B
                dc.b    $2A, $2D, $2C, $03, $01, $03, $03, $03, $03, $02, $05, $02, $0E, $02, $05, $29
                dc.b    $28, $2B, $2A, $04, $04, $2B, $2A, $2D, $2C, $02, $05, $02, $07, $02, $05, $04
                dc.b    $01, $01, $01, $05, $0F, $01, $3E, $03, $01, $3E, $35, $17, $0C, $0D, $0C, $0D
                dc.b    $02, $04, $08, $0C, $0F, $08, $30, $34, $37, $36, $35, $34, $37, $36, $09, $0E
                dc.b    $0D, $0C, $06, $05, $13, $02, $04, $0C, $0E, $0D, $0D, $36, $34, $35, $33, $35
                dc.b    $34, $37, $36, $09, $0E, $0D, $0C, $06, $05, $1A, $02, $04, $0C, $0E, $0D, $0D
                dc.b    $36, $34, $35, $33, $35, $34, $37, $36, $03, $00, $02, $05, $03, $00, $05, $03
                dc.b    $01, $01, $06, $07, $0F, $01, $44, $03, $01, $44, $35, $0D, $01, $01, $01, $01
                dc.b    $5B, $5A, $00, $41, $1B, $5A, $00, $41, $40, $04, $08, $03, $5B, $5A, $00, $03
                dc.b    $5B, $5A, $03, $03, $15, $58, $5A, $00, $41, $1B, $5A, $00, $41, $40, $03, $00
                dc.b    $41, $40, $03, $5B, $1B, $40, $00, $5B, $5A, $03, $03, $02, $58, $5A, $02, $02
                dc.b    $5B, $5A, $03, $01, $03, $02, $0E, $41, $43, $00, $41, $01, $40, $27, $67, $6F
                dc.b    $3C, $26, $27, $2E, $3D, $0F, $01, $44, $03, $01, $44, $35, $0F, $02, $01, $01
                dc.b    $01, $5E, $5C, $00, $43, $1F, $5C, $03, $43, $42, $02, $06, $02, $08, $02, $58
                dc.b    $5C, $03, $00, $5D, $5C, $03, $03, $15, $5D, $5C, $03, $43, $1F, $5E, $06, $43
                dc.b    $42, $02, $05, $43, $42, $00, $5D, $1F, $41, $00, $5D, $5C, $03, $03, $07, $5D
                dc.b    $5C, $03, $00, $5D, $5E, $06, $02, $11, $02, $05, $00, $43, $42, $00, $43, $01
                dc.b    $42, $31, $73, $71, $32, $30, $31, $32, $33, $0F, $01, $44, $03, $01, $44, $35
                dc.b    $0C, $01, $03, $04, $01, $5F, $5C, $07, $05, $5F, $5E, $02, $05, $05, $03, $02
                dc.b    $5F, $5E, $02, $0C, $5A, $5E, $00, $02, $07, $05, $5F, $5E, $02, $05, $5F, $5E
                dc.b    $03, $02, $02, $05, $03, $02, $5A, $5E, $02, $0C, $5A, $5E, $00, $02, $07, $05
                dc.b    $5F, $5E, $02, $05, $5F, $5E, $03, $02, $02, $05, $03, $0C, $07, $05, $00, $02
                dc.b    $1F, $19, $1F, $1E, $1C, $1D, $1E, $1F, $0E, $02, $44, $02, $02, $02, $44, $02
                dc.b    $35, $04, $01, $01, $01, $01, $02, $05, $09, $0E, $0D, $0C, $06, $05, $13, $02
                dc.b    $04, $0F, $0E, $0F, $08, $19, $18, $1B, $1A, $19, $18, $1B, $1A, $09, $0E, $0D
                dc.b    $0C, $06, $05, $13, $02, $04, $0F, $0E, $0F, $08, $19, $18, $1B, $1A, $19, $18
                dc.b    $1B, $1A, $09, $0E, $0D, $0C, $06, $05, $0E, $02, $04, $0F, $0E, $0F, $08, $31
                dc.b    $16, $33, $32, $30, $17, $32, $33, $0E, $02, $10, $11, $02, $02, $10, $11, $35
                dc.b    $39, $41, $03, $40, $41, $40, $02, $41, $01, $40, $00, $41, $01, $40, $41, $01
                dc.b    $42, $41, $01, $40, $01, $41, $61, $20, $20, $22, $04, $04, $21, $27, $25, $24
                dc.b    $43, $45, $00, $41, $01, $45, $41, $01, $43, $44, $01, $40, $00, $41, $61, $20
                dc.b    $20, $22, $04, $04, $21, $27, $25, $24, $02, $05, $02, $02, $02, $05, $02, $0F
                dc.b    $01, $05, $02, $00, $03, $03, $23, $20, $23, $1C, $3F, $21, $22, $1E, $1F, $0E
                dc.b    $02, $12, $15, $02, $02, $12, $15, $35, $38, $43, $01, $42, $43, $41, $00, $43
                dc.b    $01, $41, $00, $43, $01, $42, $43, $01, $42, $43, $01, $42, $00, $43, $6B, $28
                dc.b    $2B, $2A, $04, $04, $2B, $2A, $2D, $2C, $43, $42, $00, $43, $01, $42, $43, $01
                dc.b    $42, $43, $01, $42, $00, $43, $6B, $28, $2B, $2A, $04, $04, $2B, $2A, $2D, $2C
                dc.b    $03, $03, $01, $03, $09, $1D, $29, $28, $2B, $33, $1B, $29, $12, $0B, $33, $38
                dc.b    $01, $39, $38, $01, $39, $38, $01, $39, $38, $01, $39, $38, $01, $29, $11, $38
                dc.b    $39, $10, $11, $35, $04, $01, $01, $01, $01, $02, $0C, $02, $05, $00, $02, $07
                dc.b    $05, $02, $07, $05, $00, $02, $05, $04, $10, $1D, $1C, $1F, $1E, $1F, $19, $1F
                dc.b    $1C, $07, $05, $02, $07, $05, $00, $02, $05, $08, $10, $1D, $1C, $1F, $1E, $1F
                dc.b    $19, $1F, $1C, $07, $05, $02, $07, $05, $00, $02, $05, $04, $20, $02, $05, $00
                dc.b    $02, $1F, $19, $1F, $1C, $26, $26, $22, $25, $01, $07, $06, $01, $07, $06, $01
                dc.b    $07, $06, $01, $07, $06, $01, $07, $2E, $2F, $3B, $3C, $12, $15, $35, $04, $10
                dc.b    $11, $10, $11, $04, $02, $02, $02, $02, $12, $02, $02, $02, $02, $02, $02, $02
                dc.b    $02, $02, $02, $80, $80, $82, $82, $80, $80, $80, $80, $04, $04, $02, $02, $02
                dc.b    $02, $04, $02, $02, $02, $02, $0C, $80, $80, $82, $82, $82, $82, $82, $82, $02
                dc.b    $02, $02, $02, $02, $04, $02, $02, $02, $02, $02, $02, $02, $02, $02, $1C, $80
                dc.b    $80, $82, $82, $04, $04, $04, $04, $00, $1B, $03, $03, $01, $1A, $00, $02, $1A
                dc.b    $03, $01, $03, $19, $00, $86, $86, $96, $97, $12, $13, $84, $54, $00, $15, $69
                dc.b    $0A, $00, $15, $00, $97, $00, $14, $20, $28, $20, $BE, $05, $33, $06, $00, $05
                dc.b    $00, $70, $00, $70, $00, $72, $00, $76, $00, $70, $00, $70, $00, $76, $00, $72
                dc.b    $00, $70, $00, $70, $00, $14, $00, $14, $00, $30, $00, $30, $00, $32, $00, $36
                dc.b    $00, $30, $00, $30, $00, $36, $00, $32, $00, $30, $00, $30, $20, $ED, $20, $EE
                dc.b    $04, $34, $20, $C0, $20, $C1, $00, $10, $00, $10, $00, $12, $00, $12, $00, $10
                dc.b    $00, $10, $00, $16, $00, $16, $00, $10, $00, $10, $00, $34, $00, $34, $00, $03
                dc.b    $00, $05, $00, $01, $00, $04, $00, $07, $00, $03, $00, $04, $00, $01, $00, $05
                dc.b    $00, $07, $20, $E4, $20, $E5, $0C, $34, $20, $B6, $20, $B7, $00, $70, $00, $70
                dc.b    $00, $7E, $00, $71, $00, $70, $00, $70, $00, $7F, $00, $7E, $00, $70, $00, $70
                dc.b    $00, $11, $00, $1F, $00, $30, $00, $30, $00, $3E, $00, $31, $00, $30, $00, $30
                dc.b    $00, $3F, $00, $3E, $00, $30, $00, $30, $20, $E7, $20, $E8, $4C, $80, $B4, $61
                dc.b    $CB, $69, $1B, $00, $10, $00, $C0, $00, $17, $00, $17, $00, $10, $00, $10, $00
                dc.b    $11, $00, $11, $00, $10, $00, $10, $00, $13, $00, $13, $00, $10, $00, $E5, $08
                dc.b    $01, $00, $E4, $00, $0A, $00, $1B, $08, $1A, $08, $0B, $00, $1B, $00, $0A, $08
                dc.b    $0D, $08, $0D, $08, $03, $00, $0A, $00, $02, $08, $0B, $00, $0A, $08, $03, $08
                dc.b    $05, $00, $0C, $00, $91, $00, $0C, $08, $90, $08, $0D, $00, $0C, $00, $91, $00
                dc.b    $0C, $08, $DD, $00, $0C, $00, $48, $00, $41, $00, $05, $00, $48, $00, $0C, $00
                dc.b    $03, $00, $36, $00, $01, $00, $04, $00, $3D, $00, $38, $00, $04, $00, $01, $00
                dc.b    $04, $08, $3C, $00, $04, $00, $04, $08, $05, $08, $05, $00, $04, $00, $04, $08
                dc.b    $64, $00, $04, $00, $11, $08, $71, $00, $70, $08, $10, $08, $71, $00, $11, $08
                dc.b    $13, $08, $13, $00, $10, $00, $10, $08, $11, $08, $11, $00, $10, $00, $10, $08
                dc.b    $51, $00, $50, $00, $E5, $00, $10, $00, $30, $00, $15, $00, $C0, $00, $10, $61
                dc.b    $DB, $69, $DB, $0C, $06, $61, $EC, $01, $56, $00, $04, $02, $0E, $08, $05, $00
                dc.b    $5C, $00, $04, $00, $10, $08, $05, $00, $4C, $08, $71, $03, $0D, $12, $00, $5C
                dc.b    $00, $10, $00, $10, $08, $84, $00, $4C, $00, $C0, $03, $0D, $17, $00, $5C, $00
                dc.b    $10, $00, $10, $00, $11, $00, $4C, $00, $10, $03, $0D, $13, $00, $5C, $00, $10
                dc.b    $00, $10, $00, $11, $00, $4C, $00, $1B, $03, $0D, $0C, $00, $5C, $00, $0A, $00
                dc.b    $10, $00, $04, $00, $4C, $00, $0C, $03, $0B, $41, $00, $5C, $00, $48, $00, $10
                dc.b    $68, $85, $68, $F6, $03, $0D, $04, $00, $5C, $08, $05, $00, $10, $00, $04, $00
                dc.b    $4C, $08, $05, $02, $0E, $08, $71, $00, $5C, $00, $12, $00, $10, $00, $10, $00
                dc.b    $4C, $08, $84, $03, $0D, $C0, $00, $5C, $00, $17, $00, $10, $00, $10, $00, $4C
                dc.b    $00, $11, $03, $0D, $10, $00, $5C, $00, $13, $00, $10, $00, $10, $00, $4C, $00
                dc.b    $11, $03, $0D, $1B, $00, $5C, $00, $0C, $00, $10, $00, $0A, $00, $4C, $00, $04
                dc.b    $03, $0D, $0C, $00, $5C, $00, $41, $00, $10, $00, $48, $09, $1A, $69, $D3, $7C
                dc.b    $03, $20, $00, $20, $05, $03, $20, $00, $20, $80, $F5, $03, $20, $00, $20, $05
                dc.b    $03, $20, $00, $20, $80, $F5, $03, $20, $00, $20, $05, $03, $20, $00, $20, $80
                dc.b    $F5, $03, $20, $00, $20, $05, $03, $20, $00, $20, $80, $F5, $03, $20, $00, $20
                dc.b    $05, $03, $20, $00, $20, $82, $8D, $47, $01, $02, $03, $01, $03, $01, $02, $03
                dc.b    $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01
                dc.b    $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02
                dc.b    $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03
                dc.b    $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $01, $02, $03, $01, $50
                dc.b    $47, $04, $05, $06, $04, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $04, $05, $06, $04, $50, $47, $02, $03, $01, $02, $01, $02
                dc.b    $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03
                dc.b    $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01
                dc.b    $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02
                dc.b    $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $02, $03, $01
                dc.b    $02, $50, $47, $05, $06, $04, $05, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $05, $06, $04, $05, $50, $47, $01, $02, $03, $01
                dc.b    $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03
                dc.b    $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01
                dc.b    $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02
                dc.b    $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $03, $01, $02, $01
                dc.b    $02, $03, $01, $50, $47, $04, $05, $06, $04, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $04, $05, $06, $04, $50, $47, $08, $09
                dc.b    $0A, $08, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $08, $09, $0A, $08, $50, $47, $08, $09, $0A, $08, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $08, $09, $0A, $08, $50, $47
                dc.b    $08, $09, $0A, $08, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $06, $05, $02, $06, $01, $06, $07, $01, $06, $07, $01, $06
                dc.b    $07, $01, $06, $07, $01, $06, $07, $01, $06, $07, $01, $06, $07, $01, $06, $07
                dc.b    $01, $06, $07, $0C, $0D, $0B, $0C, $50, $47, $08, $09, $0A, $08, $01, $03, $02
                dc.b    $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $1B, $1A, $19
                dc.b    $1B, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $11, $12, $10, $11
                dc.b    $50, $47, $08, $09, $0A, $08, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01
                dc.b    $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03, $02, $01, $03
                dc.b    $02, $01, $03, $02, $01, $03, $1E, $1D, $1A, $1E, $01, $06, $07, $01, $06, $07
                dc.b    $01, $06, $07, $01, $06, $07, $01, $06, $07, $01, $06, $07, $01, $06, $07, $01
                dc.b    $06, $07, $01, $06, $07, $14, $15, $13, $14, $85, $9E, $00, $00, $10, $CB, $BB                
Fire_In_Bowl: ; Offset_0x04E86C:
                incbin  'data\sprites\firebowl.dat'  
Filler_1: ; Offset_0x04EC6C: ; Filler
                cnop    $000000, $04EE00
Unknow_Data_0x04EE00: ; Offset_0x04EE00:
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $18, $18, $18, $18, $18
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20
                dc.b    $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $00, $00, $00, $00, $00, $00, $00, $20, $20
                dc.b    $20, $20, $20, $25, $25, $25, $25, $25, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $20, $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $04, $04, $04, $04, $04, $00, $10, $10, $10, $10, $10, $10, $10, $10, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $08, $08, $29, $29, $29, $29, $29, $29, $29, $29, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $29, $29, $29, $29, $29, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $19, $19, $19, $19, $19, $19, $19, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $01, $01, $04, $04, $04, $04, $14, $14
                dc.b    $14, $14, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $05, $05, $05, $05
                dc.b    $05, $01, $01, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $10, $10, $10, $10, $10, $10, $10, $10, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $08, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $00, $00, $00, $10, $10
                dc.b    $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00
                dc.b    $00, $00, $00, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $28, $28, $28
                dc.b    $28, $28, $28, $28, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $18, $18, $18, $18, $18, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00
                dc.b    $00, $00, $00, $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $00
                dc.b    $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $25, $25, $25, $25, $25
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05, $05, $04, $04, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $10, $10, $10, $10
                dc.b    $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04, $04, $00, $10
                dc.b    $10, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $29, $29, $29
                dc.b    $29, $29, $29, $29, $29, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $29
                dc.b    $29, $29, $29, $29, $09, $09, $09, $09, $09, $09, $09, $09, $09, $19, $19, $19
                dc.b    $19, $19, $19, $19, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $01, $01, $04, $04, $04, $04, $14, $14, $14, $14, $10, $10, $10, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $05, $05, $05, $05, $05, $01, $01, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $01, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $20
                dc.b    $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $10
                dc.b    $10, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $00, $00, $00, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20
                dc.b    $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08, $08, $08, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $28, $28, $28, $28, $28, $28, $28, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $20, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $10, $10, $10, $10, $10, $10, $10, $10
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $18, $18, $18, $18, $18
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $20, $20, $20, $20, $20
                dc.b    $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $00, $00, $00, $00, $00, $00, $00, $20, $20
                dc.b    $20, $20, $20, $25, $25, $25, $25, $25, $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $04, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $20, $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $04, $04, $04, $04, $04, $00, $10, $10, $10, $10, $10, $10, $10, $10, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $08, $08, $29, $29, $29, $29, $29, $29, $29, $29, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $29, $29, $29, $29, $29, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $19, $19, $19, $19, $19, $19, $19, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $01, $01, $04, $04, $04, $04, $14, $14
                dc.b    $14, $14, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $05, $05, $05, $05
                dc.b    $05, $01, $01, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $20, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $10, $10, $10, $10, $10, $10, $10, $10, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $08, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $00, $00, $00, $10, $10
                dc.b    $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00
                dc.b    $00, $00, $00, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $28, $28, $28
                dc.b    $28, $28, $28, $28, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $20, $20, $20, $20, $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10, $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08, $08, $08, $08, $08
                dc.b    $08, $08, $08, $08, $08, $08, $08, $08, $08, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00                
Filler_2: ; Offset_0x04FB98:  ; Filler                
                cnop    $000000, $050000
Sonic_Sprites: ; Offset_0x050000:
                incbin  'data\sprites\sonic.dat'     
Sonic_Mappings: ; Offset_0x0614C0: 
                dc.w    Offset_0x06160E-Sonic_Mappings
                dc.w    Offset_0x061610-Sonic_Mappings
                dc.w    Offset_0x061632-Sonic_Mappings
                dc.w    Offset_0x061644-Sonic_Mappings
                dc.w    Offset_0x06166E-Sonic_Mappings
                dc.w    Offset_0x061698-Sonic_Mappings
                dc.w    Offset_0x0616C2-Sonic_Mappings
                dc.w    Offset_0x0616E4-Sonic_Mappings
                dc.w    Offset_0x061706-Sonic_Mappings
                dc.w    Offset_0x061718-Sonic_Mappings
                dc.w    Offset_0x06172A-Sonic_Mappings
                dc.w    Offset_0x06173C-Sonic_Mappings
                dc.w    Offset_0x06175E-Sonic_Mappings
                dc.w    Offset_0x061780-Sonic_Mappings
                dc.w    Offset_0x061792-Sonic_Mappings
                dc.w    Offset_0x0617A4-Sonic_Mappings
                dc.w    Offset_0x0617BE-Sonic_Mappings
                dc.w    Offset_0x0617D8-Sonic_Mappings
                dc.w    Offset_0x0617F2-Sonic_Mappings
                dc.w    Offset_0x061814-Sonic_Mappings
                dc.w    Offset_0x061836-Sonic_Mappings
                dc.w    Offset_0x061850-Sonic_Mappings
                dc.w    Offset_0x06186A-Sonic_Mappings
                dc.w    Offset_0x061884-Sonic_Mappings
                dc.w    Offset_0x06189E-Sonic_Mappings
                dc.w    Offset_0x0618C0-Sonic_Mappings
                dc.w    Offset_0x0618EA-Sonic_Mappings
                dc.w    Offset_0x061914-Sonic_Mappings
                dc.w    Offset_0x061936-Sonic_Mappings
                dc.w    Offset_0x061958-Sonic_Mappings
                dc.w    Offset_0x06197A-Sonic_Mappings
                dc.w    Offset_0x06199C-Sonic_Mappings
                dc.w    Offset_0x0619BE-Sonic_Mappings
                dc.w    Offset_0x0619E8-Sonic_Mappings
                dc.w    Offset_0x061A0A-Sonic_Mappings
                dc.w    Offset_0x061A2C-Sonic_Mappings
                dc.w    Offset_0x061A4E-Sonic_Mappings
                dc.w    Offset_0x061A68-Sonic_Mappings
                dc.w    Offset_0x061A7A-Sonic_Mappings
                dc.w    Offset_0x061A8C-Sonic_Mappings
                dc.w    Offset_0x061A9E-Sonic_Mappings
                dc.w    Offset_0x061AB8-Sonic_Mappings
                dc.w    Offset_0x061AD2-Sonic_Mappings
                dc.w    Offset_0x061AEC-Sonic_Mappings
                dc.w    Offset_0x061AFE-Sonic_Mappings
                dc.w    Offset_0x061B10-Sonic_Mappings
                dc.w    Offset_0x061B22-Sonic_Mappings
                dc.w    Offset_0x061B34-Sonic_Mappings
                dc.w    Offset_0x061B4E-Sonic_Mappings
                dc.w    Offset_0x061B70-Sonic_Mappings
                dc.w    Offset_0x061B92-Sonic_Mappings
                dc.w    Offset_0x061BBC-Sonic_Mappings
                dc.w    Offset_0x061BDE-Sonic_Mappings
                dc.w    Offset_0x061C00-Sonic_Mappings
                dc.w    Offset_0x061C22-Sonic_Mappings
                dc.w    Offset_0x061C44-Sonic_Mappings
                dc.w    Offset_0x061C66-Sonic_Mappings
                dc.w    Offset_0x061C88-Sonic_Mappings
                dc.w    Offset_0x061CAA-Sonic_Mappings
                dc.w    Offset_0x061CCC-Sonic_Mappings
                dc.w    Offset_0x061CEE-Sonic_Mappings
                dc.w    Offset_0x061D00-Sonic_Mappings
                dc.w    Offset_0x061D12-Sonic_Mappings
                dc.w    Offset_0x061D24-Sonic_Mappings
                dc.w    Offset_0x061D36-Sonic_Mappings
                dc.w    Offset_0x061D48-Sonic_Mappings
                dc.w    Offset_0x061D5A-Sonic_Mappings
                dc.w    Offset_0x061D6C-Sonic_Mappings
                dc.w    Offset_0x061D7E-Sonic_Mappings
                dc.w    Offset_0x061D90-Sonic_Mappings
                dc.w    Offset_0x061DA2-Sonic_Mappings
                dc.w    Offset_0x061DB4-Sonic_Mappings
                dc.w    Offset_0x061DC6-Sonic_Mappings
                dc.w    Offset_0x061DD8-Sonic_Mappings
                dc.w    Offset_0x061DEA-Sonic_Mappings
                dc.w    Offset_0x061DFC-Sonic_Mappings
                dc.w    Offset_0x061E0E-Sonic_Mappings
                dc.w    Offset_0x061E20-Sonic_Mappings
                dc.w    Offset_0x061E32-Sonic_Mappings
                dc.w    Offset_0x061E44-Sonic_Mappings
                dc.w    Offset_0x061E56-Sonic_Mappings
                dc.w    Offset_0x061E68-Sonic_Mappings
                dc.w    Offset_0x061E7A-Sonic_Mappings
                dc.w    Offset_0x061E8C-Sonic_Mappings
                dc.w    Offset_0x061E9E-Sonic_Mappings
                dc.w    Offset_0x061EB0-Sonic_Mappings
                dc.w    Offset_0x061EC2-Sonic_Mappings
                dc.w    Offset_0x061ED4-Sonic_Mappings
                dc.w    Offset_0x061EE6-Sonic_Mappings
                dc.w    Offset_0x061EF8-Sonic_Mappings
                dc.w    Offset_0x061F0A-Sonic_Mappings
                dc.w    Offset_0x061F1C-Sonic_Mappings
                dc.w    Offset_0x061F2E-Sonic_Mappings
                dc.w    Offset_0x061F40-Sonic_Mappings
                dc.w    Offset_0x061F52-Sonic_Mappings
                dc.w    Offset_0x061F64-Sonic_Mappings
                dc.w    Offset_0x061F76-Sonic_Mappings
                dc.w    Offset_0x061F88-Sonic_Mappings
                dc.w    Offset_0x061F9A-Sonic_Mappings
                dc.w    Offset_0x061FAC-Sonic_Mappings
                dc.w    Offset_0x061FBE-Sonic_Mappings
                dc.w    Offset_0x061FD0-Sonic_Mappings
                dc.w    Offset_0x061FE2-Sonic_Mappings
                dc.w    Offset_0x061FF4-Sonic_Mappings
                dc.w    Offset_0x062006-Sonic_Mappings
                dc.w    Offset_0x062018-Sonic_Mappings
                dc.w    Offset_0x06202A-Sonic_Mappings
                dc.w    Offset_0x06203C-Sonic_Mappings
                dc.w    Offset_0x06204E-Sonic_Mappings
                dc.w    Offset_0x062058-Sonic_Mappings
                dc.w    Offset_0x062062-Sonic_Mappings
                dc.w    Offset_0x06206C-Sonic_Mappings
                dc.w    Offset_0x062076-Sonic_Mappings
                dc.w    Offset_0x062080-Sonic_Mappings
                dc.w    Offset_0x06208A-Sonic_Mappings
                dc.w    Offset_0x062094-Sonic_Mappings
                dc.w    Offset_0x06209E-Sonic_Mappings
                dc.w    Offset_0x0620A8-Sonic_Mappings
                dc.w    Offset_0x0620B2-Sonic_Mappings
                dc.w    Offset_0x0620BC-Sonic_Mappings
                dc.w    Offset_0x0620D6-Sonic_Mappings
                dc.w    Offset_0x0620F0-Sonic_Mappings
                dc.w    Offset_0x06210A-Sonic_Mappings
                dc.w    Offset_0x062124-Sonic_Mappings
                dc.w    Offset_0x062146-Sonic_Mappings
                dc.w    Offset_0x062168-Sonic_Mappings
                dc.w    Offset_0x06218A-Sonic_Mappings
                dc.w    Offset_0x0621A4-Sonic_Mappings
                dc.w    Offset_0x0621AE-Sonic_Mappings
                dc.w    Offset_0x0621B8-Sonic_Mappings
                dc.w    Offset_0x0621D2-Sonic_Mappings
                dc.w    Offset_0x0621EC-Sonic_Mappings
                dc.w    Offset_0x062206-Sonic_Mappings
                dc.w    Offset_0x062220-Sonic_Mappings
                dc.w    Offset_0x062232-Sonic_Mappings
                dc.w    Offset_0x062244-Sonic_Mappings
                dc.w    Offset_0x062256-Sonic_Mappings
                dc.w    Offset_0x062268-Sonic_Mappings
                dc.w    Offset_0x06228A-Sonic_Mappings
                dc.w    Offset_0x06229C-Sonic_Mappings
                dc.w    Offset_0x0622B6-Sonic_Mappings
                dc.w    Offset_0x0622D0-Sonic_Mappings
                dc.w    Offset_0x0622E2-Sonic_Mappings
                dc.w    Offset_0x0622F4-Sonic_Mappings
                dc.w    Offset_0x062306-Sonic_Mappings
                dc.w    Offset_0x062318-Sonic_Mappings
                dc.w    Offset_0x06233A-Sonic_Mappings
                dc.w    Offset_0x06235C-Sonic_Mappings
                dc.w    Offset_0x06237E-Sonic_Mappings
                dc.w    Offset_0x062398-Sonic_Mappings
                dc.w    Offset_0x0623B2-Sonic_Mappings
                dc.w    Offset_0x0623D4-Sonic_Mappings
                dc.w    Offset_0x0623EE-Sonic_Mappings
                dc.w    Offset_0x062410-Sonic_Mappings
                dc.w    Offset_0x062432-Sonic_Mappings
                dc.w    Offset_0x06244C-Sonic_Mappings
                dc.w    Offset_0x062466-Sonic_Mappings
                dc.w    Offset_0x062480-Sonic_Mappings
                dc.w    Offset_0x062492-Sonic_Mappings
                dc.w    Offset_0x06249C-Sonic_Mappings
                dc.w    Offset_0x0624AE-Sonic_Mappings
                dc.w    Offset_0x0624C8-Sonic_Mappings
                dc.w    Offset_0x0624E2-Sonic_Mappings
                dc.w    Offset_0x0624FC-Sonic_Mappings
                dc.w    Offset_0x06250E-Sonic_Mappings
                dc.w    Offset_0x062520-Sonic_Mappings
                dc.w    Offset_0x06253A-Sonic_Mappings
Offset_0x06160E:
                dc.w    $0000
Offset_0x061610:
                dc.w    $0004
                dc.l    $E4050000, $0000FFF8, $EC030004, $0002FFF0
                dc.l    $F4090008, $0004FFF8, $0409000E, $0007FFF8
Offset_0x061632:
                dc.w    $0002
                dc.l    $EC0B0000, $0000FFF0, $0C09000C, $0006FFF8
Offset_0x061644:
                dc.w    $0005
                dc.l    $EC010000, $0000FFF0, $EC050002, $0001FFF8
                dc.l    $FC090006, $0003FFF0, $0C01000C, $0006FFF8
                dc.l    $0C05000E, $00070000
Offset_0x06166E:
                dc.w    $0005
                dc.l    $EC010000, $0000FFF0, $EC050002, $0001FFF8
                dc.l    $FC090006, $0003FFF0, $0C01000C, $0006FFF8
                dc.l    $0C05000E, $00070000
Offset_0x061698:
                dc.w    $0005
                dc.l    $EC010000, $0000FFF0, $EC050002, $0001FFF8
                dc.l    $FC090006, $0003FFF0, $0C01000C, $0006FFF8
                dc.l    $0C05000E, $00070000
Offset_0x0616C2:
                dc.w    $0004
                dc.l    $E4050000, $0000FFF8, $EC030004, $0002FFF0
                dc.l    $F4090008, $0004FFF8, $0409000E, $0007FFF8
Offset_0x0616E4:
                dc.w    $0004
                dc.l    $E4050000, $0000FFF8, $EC030004, $0002FFF0
                dc.l    $F4050008, $0004FFF8, $0409000C, $0006FFF8
Offset_0x061706:
                dc.w    $0002
                dc.l    $F40B0000, $0000FFE1, $0405000C, $0006FFF9
Offset_0x061718:
                dc.w    $0002
                dc.l    $E40B0000, $0000FFEE, $040D000C, $0006FFEE
Offset_0x06172A:
                dc.w    $0002
                dc.l    $E40B0000, $0000FFF0, $0405000C, $0006FFF8
Offset_0x06173C:
                dc.w    $0004
                dc.l    $E4070000, $0000FFF0, $04050008, $0004FFF0
                dc.l    $E4070800, $08000000, $04050808, $08040000
Offset_0x06175E:
                dc.w    $0004
                dc.l    $EA0D0000, $0000FFEC, $FA090008, $0004FFEC
                dc.l    $FA07000E, $00070004, $0A050016, $000BFFEC
Offset_0x061780:
                dc.w    $0002
                dc.l    $EB0D0000, $0000FFEC, $FB0F0008, $0004FFF2
Offset_0x061792:
                dc.w    $0002
                dc.l    $EC0D0000, $0000FFEC, $FC0F0008, $0004FFF3
Offset_0x0617A4:
                dc.w    $0003
                dc.l    $EC0D0000, $0000FFEC, $FC0D0008, $0004FFF3
                dc.l    $0C050010, $0008FFF8
Offset_0x0617BE:
                dc.w    $0003
                dc.l    $EC0D0000, $0000FFEC, $FC0D0008, $0004FFF3
                dc.l    $0C050010, $0008FFF5
Offset_0x0617D8:
                dc.w    $0003
                dc.l    $EC0D0000, $0000FFED, $FC0D0008, $0004FFED
                dc.l    $0C050010, $0008FFF5
Offset_0x0617F2:
                dc.w    $0004
                dc.l    $EC090000, $0000FFF4, $FC0D0006, $0003FFEC
                dc.l    $FC01000E, $0007000C, $0C050010, $0008FFEC
Offset_0x061814:
                dc.w    $0004
                dc.l    $EC090000, $0000FFF4, $FC0D0006, $0003FFF3
                dc.l    $0C01000E, $0007FFF3, $0C050010, $00080003
Offset_0x061836:
                dc.w    $0003
                dc.l    $ED090000, $0000FFF4, $FD090006, $0003FFF4
                dc.l    $0D0D000C, $0006FFF4
Offset_0x061850:
                dc.w    $0003
                dc.l    $ED0D0000, $0000FFED, $FD0D0008, $0004FFED
                dc.l    $0D050010, $0008FFFA
Offset_0x06186A:
                dc.w    $0003
                dc.l    $EC0D0000, $0000FFEC, $FC0D0008, $0004FFF3
                dc.l    $0C050010, $0008FFFA
Offset_0x061884:
                dc.w    $0003
                dc.l    $EC0D0000, $0000FFEC, $FC0D0008, $0004FFF3
                dc.l    $0C050010, $0008FFF3
Offset_0x06189E:
                dc.w    $0004
                dc.l    $EB090000, $0000FFEB, $FB0D0006, $0003FFEB
                dc.l    $F305000E, $00070003, $0B010012, $0009FFFB
Offset_0x0618C0:
                dc.w    $0005
                dc.l    $EC090000, $0000FFEC, $FC0D0006, $0003FFEC
                dc.l    $EC01000E, $00070004, $FC010010, $0008000C
                dc.l    $0C010012, $0009FFFF
Offset_0x0618EA:
                dc.w    $0005
                dc.l    $ED090000, $0000FFED, $FD0D0006, $0003FFED
                dc.l    $ED01000E, $00070005, $FD010010, $0008000D
                dc.l    $0D010012, $00090000
Offset_0x061914:
                dc.w    $0004
                dc.l    $EE090000, $0000FFED, $EE010006, $00030005
                dc.l    $FE0D0008, $0004FFED, $06090010, $0008FFFD
Offset_0x061936:
                dc.w    $0004
                dc.l    $EE090000, $0000FFED, $EE010006, $00030005
                dc.l    $FE0D0008, $0004FFED, $06050010, $00080005
Offset_0x061958:
                dc.w    $0004
                dc.l    $EE090000, $0000FFED, $FE090006, $0003FFED
                dc.l    $F603000C, $00060005, $0E010010, $0008FFFD
Offset_0x06197A:
                dc.w    $0004
                dc.l    $EC090000, $0000FFED, $F4050006, $00030005
                dc.l    $FC09000A, $0005FFED, $0C010010, $0008FFFD
Offset_0x06199C:
                dc.w    $0004
                dc.l    $EC090000, $0000FFED, $F7050006, $00030005
                dc.l    $FC09000A, $0005FFED, $0C010010, $0008FFFD
Offset_0x0619BE:
                dc.w    $0005
                dc.l    $ED090000, $0000FFEE, $ED010006, $00030006
                dc.l    $FD090008, $0004FFEF, $FD05000E, $00070007
                dc.l    $0D010012, $0009FFFF
Offset_0x0619E8:
                dc.w    $0004
                dc.l    $EE090000, $0000FFEE, $FE090006, $0003FFEE
                dc.l    $F601000C, $00060006, $0605000E, $00070006
Offset_0x061A0A:
                dc.w    $0004
                dc.l    $EE090000, $0000FFED, $FE090006, $0003FFED
                dc.l    $F601000C, $00060005, $0605000E, $00070005
Offset_0x061A2C:
                dc.w    $0004
                dc.l    $ED090000, $0000FFED, $FD090006, $0003FFED
                dc.l    $ED03000C, $00060005, $0D050010, $0008FFFF
Offset_0x061A4E:
                dc.w    $0003
                dc.l    $F5070000, $0000FFEA, $ED0B0008, $0004FFFA
                dc.l    $0D050014, $000A0002
Offset_0x061A68:
                dc.w    $0002
                dc.l    $F5070000, $0000FFEB, $EF0B0008, $0004FFFB
Offset_0x061A7A:
                dc.w    $0002
                dc.l    $F5070000, $0000FFEC, $EE0B0008, $0004FFFC
Offset_0x061A8C:
                dc.w    $0002
                dc.l    $F5070000, $0000FFEC, $EE0B0008, $0004FFFC
Offset_0x061A9E:
                dc.w    $0003
                dc.l    $F5070000, $0000FFEC, $EF050008, $0004FFFC
                dc.l    $FF09000C, $0006FFFC
Offset_0x061AB8:
                dc.w    $0003
                dc.l    $F4070000, $0000FFEC, $EC050008, $0004FFFC
                dc.l    $FC09000C, $0006FFFC
Offset_0x061AD2:
                dc.w    $0003
                dc.l    $F5070000, $0000FFEC, $ED050008, $0004FFFC
                dc.l    $FD0B000C, $0006FFFC
Offset_0x061AEC:
                dc.w    $0002
                dc.l    $F5070000, $0000FFEC, $ED0B0008, $0004FFFC
Offset_0x061AFE:
                dc.w    $0002
                dc.l    $F5070000, $0000FFED, $ED0B0008, $0004FFFD
Offset_0x061B10:
                dc.w    $0002
                dc.l    $F4070000, $0000FFED, $F40B0008, $0004FFFD
Offset_0x061B22:
                dc.w    $0002
                dc.l    $F5070000, $0000FFEC, $EE0B0008, $0004FFFC
Offset_0x061B34:
                dc.w    $0003
                dc.l    $F5070000, $0000FFEC, $EE050008, $0004FFFC
                dc.l    $FE09000C, $0006FFFC
Offset_0x061B4E:
                dc.w    $0004
                dc.l    $EE090000, $0000FFF3, $FE070006, $0003FFEB
                dc.l    $FE0D000E, $0007FFFB, $0E010016, $000BFFFB
Offset_0x061B70:
                dc.w    $0004
                dc.l    $ED0D0000, $0000FFF4, $FD070008, $0004FFEC
                dc.l    $FD0D0010, $0008FFFC, $0D010018, $000CFFFC
Offset_0x061B92:
                dc.w    $0005
                dc.l    $EC0D0000, $0000FFF5, $EC010008, $00040015
                dc.l    $FC07000A, $0005FFED, $FC090012, $0009FFFD
                dc.l    $0C010018, $000CFFFD
Offset_0x061BBC:
                dc.w    $0004
                dc.l    $EC0D0000, $0000FFF6, $FC070008, $0004FFEE
                dc.l    $FC090010, $0008FFFE, $0C010016, $000BFFFE
Offset_0x061BDE:
                dc.w    $0004
                dc.l    $EC0D0000, $0000FFF6, $FC070008, $0004FFEE
                dc.l    $FC050010, $0008FFFE, $0C010014, $000AFFFE
Offset_0x061C00:
                dc.w    $0004
                dc.l    $EC010000, $0000FFF6, $F4090002, $0001FFFE
                dc.l    $FC070008, $0004FFEE, $04050010, $0008FFFE
Offset_0x061C22:
                dc.w    $0004
                dc.l    $EC050000, $0000FFF4, $FC070004, $0002FFEC
                dc.l    $FC0D000C, $0006FFFC, $0C050014, $000AFFFC
Offset_0x061C44:
                dc.w    $0004
                dc.l    $EC050000, $0000FFF4, $FC070004, $0002FFEC
                dc.l    $FC09000C, $0006FFFC, $0C010012, $0009FFFC
Offset_0x061C66:
                dc.w    $0004
                dc.l    $EB090000, $0000FFF5, $FB070006, $0003FFED
                dc.l    $FB09000E, $0007FFFD, $0B010014, $000AFFFD
Offset_0x061C88:
                dc.w    $0004
                dc.l    $EB0D0000, $0000FFF6, $FB070008, $0004FFEE
                dc.l    $FB050010, $0008FFFE, $0B010014, $000AFFFE
Offset_0x061CAA:
                dc.w    $0004
                dc.l    $EC0D0000, $0000FFF6, $FC070008, $0004FFEE
                dc.l    $FC050010, $0008FFFE, $0C010014, $000AFFFE
Offset_0x061CCC:
                dc.w    $0004
                dc.l    $EC0D0000, $0000FFF5, $FC070008, $0004FFED
                dc.l    $FC090010, $0008FFFD, $0C010016, $000BFFFD
Offset_0x061CEE:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFF0, $F00F0000, $0000FFF0
Offset_0x061D00:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFF0, $F00F0000, $0000FFF0
Offset_0x061D12:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFF0, $F00F0000, $0000FFF0
Offset_0x061D24:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFF0, $F00F0000, $0000FFF0
Offset_0x061D36:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFED, $F10F0000, $0000FFF1
Offset_0x061D48:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFED, $F10F0000, $0000FFF1
Offset_0x061D5A:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFED, $F10F0000, $0000FFF1
Offset_0x061D6C:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFED, $F10F0000, $0000FFF1
Offset_0x061D7E:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFEA, $F20F0000, $0000FFF2
Offset_0x061D90:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFEA, $F20F0000, $0000FFF2
Offset_0x061DA2:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFEA, $F20F0000, $0000FFF2
Offset_0x061DB4:
                dc.w    $0002
                dc.l    $F40F0010, $0008FFEA, $F20F0000, $0000FFF2
Offset_0x061DC6:
                dc.w    $0002
                dc.l    $F60F0010, $0008FFF9, $EA0F0000, $0000FFED
Offset_0x061DD8:
                dc.w    $0002
                dc.l    $F60F0010, $0008FFF9, $EA0F0000, $0000FFED
Offset_0x061DEA:
                dc.w    $0002
                dc.l    $F60F0010, $0008FFF9, $EA0F0000, $0000FFED
Offset_0x061DFC:
                dc.w    $0002
                dc.l    $F60F0010, $0008FFF9, $EA0F0000, $0000FFED
Offset_0x061E0E:
                dc.w    $0002
                dc.l    $F80F0010, $0008FFF7, $EA0F0000, $0000FFEE
Offset_0x061E20:
                dc.w    $0002
                dc.l    $F80F0010, $0008FFF7, $EA0F0000, $0000FFEE
Offset_0x061E32:
                dc.w    $0002
                dc.l    $F80F0010, $0008FFF7, $EA0F0000, $0000FFEE
Offset_0x061E44:
                dc.w    $0002
                dc.l    $F80F0010, $0008FFF7, $EA0F0000, $0000FFEE
Offset_0x061E56:
                dc.w    $0002
                dc.l    $FA0F0010, $0008FFF5, $EA0F0000, $0000FFEF
Offset_0x061E68:
                dc.w    $0002
                dc.l    $FA0F0010, $0008FFF5, $EA0F0000, $0000FFEF
Offset_0x061E7A:
                dc.w    $0002
                dc.l    $FA0F0010, $0008FFF5, $EA0F0000, $0000FFEF
Offset_0x061E8C:
                dc.w    $0002
                dc.l    $FA0F0010, $0008FFF5, $EA0F0000, $0000FFEF
Offset_0x061E9E:
                dc.w    $0002
                dc.l    $F00B000C, $0006FFFC, $F00B0000, $0000FFF0
Offset_0x061EB0:
                dc.w    $0002
                dc.l    $F00B000C, $0006FFFC, $F00B0000, $0000FFF0
Offset_0x061EC2:
                dc.w    $0002
                dc.l    $F00B000C, $0006FFFC, $F00B0000, $0000FFF0
Offset_0x061ED4:
                dc.w    $0002
                dc.l    $F00B000C, $0006FFFC, $F00B0000, $0000FFF0
Offset_0x061EE6:
                dc.w    $0002
                dc.l    $F30B000C, $0006FFFC, $EF0B0000, $0000FFF1
Offset_0x061EF8:
                dc.w    $0002
                dc.l    $F30B000C, $0006FFFC, $EF0B0000, $0000FFF1
Offset_0x061F0A:
                dc.w    $0002
                dc.l    $F30B000C, $0006FFFC, $EF0B0000, $0000FFF1
Offset_0x061F1C:
                dc.w    $0002
                dc.l    $F30B000C, $0006FFFC, $EF0B0000, $0000FFF1
Offset_0x061F2E:
                dc.w    $0002
                dc.l    $F60B000C, $0006FFFC, $EE0B0000, $0000FFF2
Offset_0x061F40:
                dc.w    $0002
                dc.l    $F60B000C, $0006FFFC, $EE0B0000, $0000FFF2
Offset_0x061F52:
                dc.w    $0002
                dc.l    $F60B000C, $0006FFFC, $EE0B0000, $0000FFF2
Offset_0x061F64:
                dc.w    $0002
                dc.l    $F60B000C, $0006FFFC, $EE0B0000, $0000FFF2
Offset_0x061F76:
                dc.w    $0002
                dc.l    $E70F0010, $0008FFF6, $F30F0000, $0000FFEA
Offset_0x061F88:
                dc.w    $0002
                dc.l    $E70B0010, $0008FFFE, $F30F0000, $0000FFEA
Offset_0x061F9A:
                dc.w    $0002
                dc.l    $E70F0010, $0008FFF6, $F30F0000, $0000FFEA
Offset_0x061FAC:
                dc.w    $0002
                dc.l    $E70B0010, $0008FFFE, $F30F0000, $0000FFEA
Offset_0x061FBE:
                dc.w    $0002
                dc.l    $E90F0010, $0008FFF8, $F20F0000, $0000FFEA
Offset_0x061FD0:
                dc.w    $0002
                dc.l    $E90B0010, $00080000, $F20F0000, $0000FFEA
Offset_0x061FE2:
                dc.w    $0002
                dc.l    $E90F0010, $0008FFF8, $F20F0000, $0000FFEA
Offset_0x061FF4:
                dc.w    $0002
                dc.l    $E90B0010, $00080000, $F20F0000, $0000FFEA
Offset_0x062006:
                dc.w    $0002
                dc.l    $EB0F0010, $0008FFFA, $F10F0000, $0000FFEA
Offset_0x062018:
                dc.w    $0002
                dc.l    $EB0B0010, $00080002, $F10F0000, $0000FFEA
Offset_0x06202A:
                dc.w    $0002
                dc.l    $EB0F0010, $0008FFFA, $F10F0000, $0000FFEA
Offset_0x06203C:
                dc.w    $0002
                dc.l    $EB0B0010, $00080002, $F10F0000, $0000FFEA
Offset_0x06204E:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x062058:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x062062:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x06206C:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x062076:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x062080:
                dc.w    $0001
                dc.l    $F80F0000, $0000FFF4
Offset_0x06208A:
                dc.w    $0001
                dc.l    $F80F0000, $0000FFF4
Offset_0x062094:
                dc.w    $0001
                dc.l    $F80F0000, $0000FFF4
Offset_0x06209E:
                dc.w    $0001
                dc.l    $F80F0000, $0000FFF4
Offset_0x0620A8:
                dc.w    $0001
                dc.l    $F80F0000, $0000FFF4
Offset_0x0620B2:
                dc.w    $0001
                dc.l    $F80F0000, $0000FFF4
Offset_0x0620BC:
                dc.w    $0003
                dc.l    $E5090000, $0000FFF8, $F5090006, $0003FFF8
                dc.l    $050D000C, $0006FFF0
Offset_0x0620D6:
                dc.w    $0003
                dc.l    $E5090000, $0000FFF8, $F5090006, $0003FFF8
                dc.l    $0509000C, $0006FFF8
Offset_0x0620F0:
                dc.w    $0003
                dc.l    $E5090000, $0000FFF8, $F5090006, $0003FFF8
                dc.l    $050D000C, $0006FFF0
Offset_0x06210A:
                dc.w    $0003
                dc.l    $E5090000, $0000FFF8, $F5090006, $0003FFF8
                dc.l    $0509000C, $0006FFF8
Offset_0x062124:
                dc.w    $0004
                dc.l    $E40B0000, $0000FFE8, $F405000C, $00060000
                dc.l    $04011010, $1008FFE8, $040D0012, $0009FFF0
Offset_0x062146:
                dc.w    $0004
                dc.l    $E40B0000, $0000FFE8, $F405000C, $00060000
                dc.l    $04011010, $1008FFE8, $040D0012, $0009FFF0
Offset_0x062168:
                dc.w    $0004
                dc.l    $E40B0000, $0000FFE8, $F405000C, $00060000
                dc.l    $04011010, $1008FFE8, $040D0012, $0009FFF0
Offset_0x06218A:
                dc.w    $0003
                dc.l    $E5030000, $0000FFF0, $E5070004, $0002FFF8
                dc.l    $0505000C, $0006FFF8
Offset_0x0621A4:
                dc.w    $0001
                dc.l    $F40B0000, $0000FFF6
Offset_0x0621AE:
                dc.w    $0001
                dc.l    $F40F0000, $0000FFF2
Offset_0x0621B8:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $E8030008, $00040000
                dc.l    $0805000C, $00060000
Offset_0x0621D2:
                dc.w    $0003
                dc.l    $ED070000, $0000FFF0, $E5030008, $00040000
                dc.l    $0505000C, $00060000
Offset_0x0621EC:
                dc.w    $0003
                dc.l    $EE0B0000, $0000FFF0, $FE01000C, $00060008
                dc.l    $0E05000E, $00070000
Offset_0x062206:
                dc.w    $0003
                dc.l    $ED0B0000, $0000FFF0, $FD01000C, $00060008
                dc.l    $0D05000E, $00070000
Offset_0x062220:
                dc.w    $0002
                dc.l    $E40B0000, $0000FFF4, $040D000C, $0006FFF4
Offset_0x062232:
                dc.w    $0002
                dc.l    $E40B0000, $0000FFF8, $0409000C, $0006FFF8
Offset_0x062244:
                dc.w    $0002
                dc.l    $E40B0000, $0000FFF0, $040D000C, $0006FFF0
Offset_0x062256:
                dc.w    $0002
                dc.l    $F40F0000, $0000FFE8, $04010010, $00080008
Offset_0x062268:
                dc.w    $0004
                dc.l    $E4090000, $0000FFF6, $F40D0006, $0003FFF2
                dc.l    $040D000E, $0007FFEE, $04010016, $000B000E
Offset_0x06228A:
                dc.w    $0002
                dc.l    $E40B0000, $0000FFF9, $040D000C, $0006FFEF
Offset_0x06229C:
                dc.w    $0003
                dc.l    $E4090000, $0000FFFD, $F40D0006, $0003FFFB
                dc.l    $0405000E, $00070002
Offset_0x0622B6:
                dc.w    $0003
                dc.l    $E4090000, $0000FFFC, $F40D0006, $0003FFFA
                dc.l    $0405000E, $00070002
Offset_0x0622D0:
                dc.w    $0002
                dc.l    $F8010000, $0000FFEC, $F00F0002, $0001FFF4
Offset_0x0622E2:
                dc.w    $0002
                dc.l    $F0030000, $0000FFEC, $F00F0004, $0002FFF4
Offset_0x0622F4:
                dc.w    $0002
                dc.l    $EC0F0000, $0000FFE8, $EC070010, $00080008
Offset_0x062306:
                dc.w    $0002
                dc.l    $EC0F0000, $0000FFE8, $EC070010, $00080008
Offset_0x062318:
                dc.w    $0004
                dc.l    $FC050000, $0000FFEC, $F40D0004, $0002FFFC
                dc.l    $0401000C, $0006FFFC, $0405000E, $00070004
Offset_0x06233A:
                dc.w    $0004
                dc.l    $F4090000, $0000FFE8, $04050006, $0003FFF0
                dc.l    $F4090800, $08000000, $04050806, $08030000
Offset_0x06235C:
                dc.w    $0004
                dc.l    $FC050800, $08000004, $F40D0804, $0802FFE4
                dc.l    $0401080C, $0806FFFC, $0405080E, $0807FFEC
Offset_0x06237E:
                dc.w    $0003
                dc.l    $F40D0000, $0000FFE4, $04090008, $0004FFEC
                dc.l    $FC01000E, $00070004
Offset_0x062398:
                dc.w    $0003
                dc.l    $F40D0800, $0800FFFC, $04090808, $0804FFFC
                dc.l    $FC01080E, $0807FFF4
Offset_0x0623B2:
                dc.w    $0004
                dc.l    $F40D0000, $0000FFFC, $FC050008, $0004FFEC
                dc.l    $0401000C, $0006FFFC, $0405000E, $00070004
Offset_0x0623D4:
                dc.w    $0003
                dc.l    $E4090000, $0000FFF4, $F40F0006, $0003FFEC
                dc.l    $04010016, $000B000C
Offset_0x0623EE:
                dc.w    $0004
                dc.l    $EC0D0000, $0000FFEA, $EC010008, $0004000A
                dc.l    $FC09000A, $0005FFF2, $0C0D0010, $0008FFF2
Offset_0x062410:
                dc.w    $0004
                dc.l    $EC0D0000, $0000FFEA, $EC010008, $0004000A
                dc.l    $FC09000A, $0005FFF2, $0C0D0010, $0008FFF2
Offset_0x062432:
                dc.w    $0003
                dc.l    $EC0D0000, $0000FFEA, $EC010008, $0004000A
                dc.l    $FC0B000A, $0005FFF2
Offset_0x06244C:
                dc.w    $0003
                dc.l    $E4090000, $0000FFF0, $F40B0006, $0003FFF0
                dc.l    $F4010012, $00090008
Offset_0x062466:
                dc.w    $0003
                dc.l    $E50B0000, $0000FFF0, $F401000C, $00060008
                dc.l    $0505000E, $0007FFF8
Offset_0x062480:
                dc.w    $0002
                dc.l    $EC0B0000, $0000FFF1, $FC01000C, $00060009
Offset_0x062492:
                dc.w    $0001
                dc.l    $EE0F0000, $0000FFF0
Offset_0x06249C:
                dc.w    $0002
                dc.l    $F20B0000, $0000FFF0, $FA01000C, $00060008
Offset_0x0624AE:
                dc.w    $0003
                dc.l    $E4010000, $00000000, $F40B0002, $0001FFF0
                dc.l    $F401000E, $00070008
Offset_0x0624C8:
                dc.w    $0003
                dc.l    $E5090000, $0000FFF0, $F50B0006, $0003FFF0
                dc.l    $ED030012, $00090008
Offset_0x0624E2:
                dc.w    $0003
                dc.l    $E4050000, $0000FFF8, $F40B0004, $0002FFF0
                dc.l    $F4010010, $00080008
Offset_0x0624FC:
                dc.w    $0002
                dc.l    $ED0B0000, $0000FFF0, $F501000C, $00060008
Offset_0x06250E:
                dc.w    $0002
                dc.l    $F4010000, $0000FFF0, $F10B0002, $0001FFF8
Offset_0x062520:
                dc.w    $0003
                dc.l    $E4050000, $0000FFF1, $F40B0004, $0002FFF0
                dc.l    $F4010010, $00080008
Offset_0x06253A:
                dc.w    $0002
                dc.l    $E1050000, $0000FFF0, $F10F0004, $0002FFF0               
Tails_Sprites: ; Offset_0x06254C:
                incbin  'data\sprites\tails.dat'              
Sonic_Dyn_Script: ; Offset_0x06DA4C:                   
                dc.w    Offset_0x06DB9A-Sonic_Dyn_Script
                dc.w    Offset_0x06DB9C-Sonic_Dyn_Script 
                dc.w    Offset_0x06DBA6-Sonic_Dyn_Script 
                dc.w    Offset_0x06DBAC-Sonic_Dyn_Script 
                dc.w    Offset_0x06DBB8-Sonic_Dyn_Script
                dc.w    Offset_0x06DBC4-Sonic_Dyn_Script
                dc.w    Offset_0x06DBD0-Sonic_Dyn_Script
                dc.w    Offset_0x06DBDA-Sonic_Dyn_Script
                dc.w    Offset_0x06DBE4-Sonic_Dyn_Script
                dc.w    Offset_0x06DBEA-Sonic_Dyn_Script
                dc.w    Offset_0x06DBF0-Sonic_Dyn_Script
                dc.w    Offset_0x06DBF6-Sonic_Dyn_Script
                dc.w    Offset_0x06DC00-Sonic_Dyn_Script
                dc.w    Offset_0x06DC0A-Sonic_Dyn_Script
                dc.w    Offset_0x06DC10-Sonic_Dyn_Script  
                dc.w    Offset_0x06DC16-Sonic_Dyn_Script 
                dc.w    Offset_0x06DC1E-Sonic_Dyn_Script
                dc.w    Offset_0x06DC26-Sonic_Dyn_Script
                dc.w    Offset_0x06DC2E-Sonic_Dyn_Script
                dc.w    Offset_0x06DC38-Sonic_Dyn_Script
                dc.w    Offset_0x06DC42-Sonic_Dyn_Script
                dc.w    Offset_0x06DC4A-Sonic_Dyn_Script
                dc.w    Offset_0x06DC52-Sonic_Dyn_Script
                dc.w    Offset_0x06DC5A-Sonic_Dyn_Script
                dc.w    Offset_0x06DC62-Sonic_Dyn_Script
                dc.w    Offset_0x06DC6C-Sonic_Dyn_Script
                dc.w    Offset_0x06DC78-Sonic_Dyn_Script
                dc.w    Offset_0x06DC84-Sonic_Dyn_Script
                dc.w    Offset_0x06DC8E-Sonic_Dyn_Script
                dc.w    Offset_0x06DC98-Sonic_Dyn_Script  
                dc.w    Offset_0x06DCA2-Sonic_Dyn_Script
                dc.w    Offset_0x06DCAC-Sonic_Dyn_Script
                dc.w    Offset_0x06DCB6-Sonic_Dyn_Script
                dc.w    Offset_0x06DCC2-Sonic_Dyn_Script
                dc.w    Offset_0x06DCCC-Sonic_Dyn_Script
                dc.w    Offset_0x06DCD6-Sonic_Dyn_Script
                dc.w    Offset_0x06DCE0-Sonic_Dyn_Script
                dc.w    Offset_0x06DCE8-Sonic_Dyn_Script
                dc.w    Offset_0x06DCEE-Sonic_Dyn_Script
                dc.w    Offset_0x06DCF4-Sonic_Dyn_Script
                dc.w    Offset_0x06DCFA-Sonic_Dyn_Script
                dc.w    Offset_0x06DD02-Sonic_Dyn_Script
                dc.w    Offset_0x06DD0A-Sonic_Dyn_Script
                dc.w    Offset_0x06DD12-Sonic_Dyn_Script
                dc.w    Offset_0x06DD18-Sonic_Dyn_Script
                dc.w    Offset_0x06DD1E-Sonic_Dyn_Script
                dc.w    Offset_0x06DD24-Sonic_Dyn_Script
                dc.w    Offset_0x06DD2A-Sonic_Dyn_Script
                dc.w    Offset_0x06DD32-Sonic_Dyn_Script
                dc.w    Offset_0x06DD3C-Sonic_Dyn_Script
                dc.w    Offset_0x06DD46-Sonic_Dyn_Script
                dc.w    Offset_0x06DD52-Sonic_Dyn_Script
                dc.w    Offset_0x06DD5C-Sonic_Dyn_Script
                dc.w    Offset_0x06DD66-Sonic_Dyn_Script
                dc.w    Offset_0x06DD70-Sonic_Dyn_Script
                dc.w    Offset_0x06DD7A-Sonic_Dyn_Script
                dc.w    Offset_0x06DD84-Sonic_Dyn_Script
                dc.w    Offset_0x06DD8E-Sonic_Dyn_Script
                dc.w    Offset_0x06DD98-Sonic_Dyn_Script                
                dc.w    Offset_0x06DDA2-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDAC-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDB2-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDB8-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDBE-Sonic_Dyn_Script                  
                dc.w    Offset_0x06DDAC-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDB2-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDB8-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDBE-Sonic_Dyn_Script                  
                dc.w    Offset_0x06DDAC-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDB2-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDB8-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDBE-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DDC4-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDCA-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDD0-Sonic_Dyn_Script
                dc.w    Offset_0x06DDD6-Sonic_Dyn_Script                  
                dc.w    Offset_0x06DDC4-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDCA-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDD0-Sonic_Dyn_Script
                dc.w    Offset_0x06DDD6-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DDC4-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDCA-Sonic_Dyn_Script 
                dc.w    Offset_0x06DDD0-Sonic_Dyn_Script
                dc.w    Offset_0x06DDD6-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DDDC-Sonic_Dyn_Script
                dc.w    Offset_0x06DDE2-Sonic_Dyn_Script
                dc.w    Offset_0x06DDE8-Sonic_Dyn_Script
                dc.w    Offset_0x06DDEE-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DDDC-Sonic_Dyn_Script
                dc.w    Offset_0x06DDE2-Sonic_Dyn_Script
                dc.w    Offset_0x06DDE8-Sonic_Dyn_Script
                dc.w    Offset_0x06DDEE-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DDDC-Sonic_Dyn_Script
                dc.w    Offset_0x06DDE2-Sonic_Dyn_Script
                dc.w    Offset_0x06DDE8-Sonic_Dyn_Script
                dc.w    Offset_0x06DDEE-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DDF4-Sonic_Dyn_Script
                dc.w    Offset_0x06DDFA-Sonic_Dyn_Script
                dc.w    Offset_0x06DE00-Sonic_Dyn_Script
                dc.w    Offset_0x06DE06-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DDF4-Sonic_Dyn_Script
                dc.w    Offset_0x06DDFA-Sonic_Dyn_Script
                dc.w    Offset_0x06DE00-Sonic_Dyn_Script
                dc.w    Offset_0x06DE06-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DDF4-Sonic_Dyn_Script
                dc.w    Offset_0x06DDFA-Sonic_Dyn_Script
                dc.w    Offset_0x06DE00-Sonic_Dyn_Script
                dc.w    Offset_0x06DE06-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DE0C-Sonic_Dyn_Script
                dc.w    Offset_0x06DE10-Sonic_Dyn_Script
                dc.w    Offset_0x06DE14-Sonic_Dyn_Script
                dc.w    Offset_0x06DE18-Sonic_Dyn_Script
                dc.w    Offset_0x06DE1C-Sonic_Dyn_Script
                dc.w    Offset_0x06DE20-Sonic_Dyn_Script
                dc.w    Offset_0x06DE24-Sonic_Dyn_Script
                dc.w    Offset_0x06DE28-Sonic_Dyn_Script
                dc.w    Offset_0x06DE2C-Sonic_Dyn_Script
                dc.w    Offset_0x06DE30-Sonic_Dyn_Script
                dc.w    Offset_0x06DE34-Sonic_Dyn_Script
                dc.w    Offset_0x06DE38-Sonic_Dyn_Script
                dc.w    Offset_0x06DE40-Sonic_Dyn_Script
                dc.w    Offset_0x06DE48-Sonic_Dyn_Script
                dc.w    Offset_0x06DE50-Sonic_Dyn_Script
                dc.w    Offset_0x06DE58-Sonic_Dyn_Script
                dc.w    Offset_0x06DE62-Sonic_Dyn_Script
                dc.w    Offset_0x06DE6C-Sonic_Dyn_Script
                dc.w    Offset_0x06DE76-Sonic_Dyn_Script
                dc.w    Offset_0x06DE7E-Sonic_Dyn_Script
                dc.w    Offset_0x06DE82-Sonic_Dyn_Script
                dc.w    Offset_0x06DE86-Sonic_Dyn_Script
                dc.w    Offset_0x06DE8E-Sonic_Dyn_Script
                dc.w    Offset_0x06DE96-Sonic_Dyn_Script
                dc.w    Offset_0x06DE9E-Sonic_Dyn_Script                                   
                dc.w    Offset_0x06DEA6-Sonic_Dyn_Script
                dc.w    Offset_0x06DEAC-Sonic_Dyn_Script
                dc.w    Offset_0x06DEB2-Sonic_Dyn_Script
                dc.w    Offset_0x06DEB8-Sonic_Dyn_Script
                dc.w    Offset_0x06DEBE-Sonic_Dyn_Script
                dc.w    Offset_0x06DEC8-Sonic_Dyn_Script
                dc.w    Offset_0x06DECE-Sonic_Dyn_Script
                dc.w    Offset_0x06DED6-Sonic_Dyn_Script
                dc.w    Offset_0x06DEDE-Sonic_Dyn_Script
                dc.w    Offset_0x06DEE4-Sonic_Dyn_Script
                dc.w    Offset_0x06DEEA-Sonic_Dyn_Script
                dc.w    Offset_0x06DEF0-Sonic_Dyn_Script
                dc.w    Offset_0x06DEF6-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DF00-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DEF6-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DF06-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DF06-Sonic_Dyn_Script                 
                dc.w    Offset_0x06DF0E-Sonic_Dyn_Script
                dc.w    Offset_0x06DF18-Sonic_Dyn_Script
                dc.w    Offset_0x06DF20-Sonic_Dyn_Script
                dc.w    Offset_0x06DF2A-Sonic_Dyn_Script
                dc.w    Offset_0x06DF34-Sonic_Dyn_Script
                dc.w    Offset_0x06DF3C-Sonic_Dyn_Script
                dc.w    Offset_0x06DF44-Sonic_Dyn_Script
                dc.w    Offset_0x06DF4C-Sonic_Dyn_Script
                dc.w    Offset_0x06DF52-Sonic_Dyn_Script
                dc.w    Offset_0x06DF56-Sonic_Dyn_Script
                dc.w    Offset_0x06DF5C-Sonic_Dyn_Script
                dc.w    Offset_0x06DF64-Sonic_Dyn_Script
                dc.w    Offset_0x06DF6C-Sonic_Dyn_Script
                dc.w    Offset_0x06DF74-Sonic_Dyn_Script
                dc.w    Offset_0x06DF7A-Sonic_Dyn_Script
                dc.w    Offset_0x06DF80-Sonic_Dyn_Script
                dc.w    Offset_0x06DF88-Sonic_Dyn_Script 
Offset_0x06DB9A:                               
                dc.w    $0000  
Offset_0x06DB9C:    
                dc.w    $0004                      ; Total of Animations
                dc.w    $3000, $3004, $5008, $500E ; Frames/Tiles
Offset_0x06DBA6:               
                dc.w    $0002                      ; Total of Animations
                dc.w    $B014, $5020               ; Frames/Tiles
Offset_0x06DBAC:                
                dc.w    $0005
                dc.w    $1026, $3028, $502C, $1032, $3034 
Offset_0x06DBB8:                
                dc.w    $0005
                dc.w    $1026, $3038, $502C, $1032, $3034
Offset_0x06DBC4:  
                dc.w    $0005
                dc.w    $1026, $3038, $502C, $1032, $303C
Offset_0x06DBD0:             
                dc.w    $0004
                dc.w    $3040, $3044, $5048, $500E
Offset_0x06DBDA:             
                dc.w    $0004
                dc.w    $304E, $3052, $3056, $500E
Offset_0x06DBE4:                
                dc.w    $0002
                dc.w    $B05A, $3066
Offset_0x06DBEA:
                dc.w    $0002
                dc.w    $B06A, $7076
Offset_0x06DBF0:    
                dc.w    $0002
                dc.w    $B07E, $308A
Offset_0x06DBF6:
                dc.w    $0004
                dc.w    $708E, $3096, $708E, $3096
Offset_0x06DC00:    
                dc.w    $0004
                dc.w    $709A, $50A2, $70A8, $30B0
Offset_0x06DC0A:
                dc.w    $0002
                dc.w    $709A, $F0B4
Offset_0x06DC10:
                dc.w    $0002
                dc.w    $709A, $F0C4
Offset_0x06DC16:
                dc.w    $0003
                dc.w    $70D4, $70DC, $30E4
Offset_0x06DC1E:
                dc.w    $0003
                dc.w    $70D4, $70E8, $30F0
Offset_0x06DC26:
                dc.w    $0003
                dc.w    $70F4, $70FC, $3104
Offset_0x06DC2E:
                dc.w    $0004
                dc.w    $5108, $710E, $1116, $3118
Offset_0x06DC38:
                dc.w    $0004
                dc.w    $5108, $711C, $1124, $3126
Offset_0x06DC42:
                dc.w    $0003
                dc.w    $5108, $512A, $7130 
Offset_0x06DC4A:
                dc.w    $0003
                dc.w    $70F4, $7138, $3140
Offset_0x06DC52:
                dc.w    $0003
                dc.w    $70D4, $7144, $314C
Offset_0x06DC5A:
                dc.w    $0003
                dc.w    $709A, $7150, $3158
Offset_0x06DC62:
                dc.w    $0004
                dc.w    $515C, $7162, $316A, $116E
Offset_0x06DC6C:
                dc.w    $0005
                dc.w    $515C, $7170, $1178, $117A, $117C
Offset_0x06DC78:
                dc.w    $0005
                dc.w    $515C, $717E, $1186, $1188, $118A
Offset_0x06DC84:
                dc.w    $0004
                dc.w    $518C, $1192, $7194, $519C
Offset_0x06DC8E:
                dc.w    $0004
                dc.w    $518C, $1192, $71A2, $31AA
Offset_0x06DC98:            
                dc.w    $0004
                dc.w    $51AE, $51B4, $31BA, $11BE
Offset_0x06DCA2:
                dc.w    $0004
                dc.w    $51C0, $31C6, $51CA, $11D0
Offset_0x06DCAC:
                dc.w    $0004
                dc.w    $51C0, $31D2, $51D6, $11DC
Offset_0x06DCB6:
                dc.w    $0005
                dc.w    $51C0, $11DE, $51E0, $31E6, $11EA
Offset_0x06DCC2:
                dc.w    $0004
                dc.w    $51AE, $51EC, $11F2, $31F4
Offset_0x06DCCC:
                dc.w    $0004
                dc.w    $518C, $51F8, $11FE, $3200
Offset_0x06DCD6:
                dc.w    $0004
                dc.w    $515C, $5204, $320A, $320E
Offset_0x06DCE0:
                dc.w    $0003
                dc.w    $7212, $B21A, $3226
Offset_0x06DCE8:
                dc.w    $0002
                dc.w    $7212, $B22A
Offset_0x06DCEE:
                dc.w    $0002
                dc.w    $7212, $B236
Offset_0x06DCF4:
                dc.w    $0002
                dc.w    $7242, $B24A
Offset_0x06DCFA:
                dc.w    $0003
                dc.w    $7242, $3256, $525A
Offset_0x06DD02:
                dc.w    $0003
                dc.w    $7260, $3268, $526C
Offset_0x06DD0A:
                dc.w    $0003
                dc.w    $7272, $327A, $B27E
Offset_0x06DD12:
                dc.w    $0002
                dc.w    $7272, $B28A
Offset_0x06DD18:
                dc.w    $0002
                dc.w    $7272, $B296
Offset_0x06DD1E:
                dc.w    $0002
                dc.w    $7260, $B2A2
Offset_0x06DD24:
                dc.w    $0002
                dc.w    $7242, $B2AE
Offset_0x06DD2A:
                dc.w    $0003
                dc.w    $7212, $32BA, $52BE
Offset_0x06DD32:
                dc.w    $0004
                dc.w    $52C4, $72CA, $72D2, $12DA
Offset_0x06DD3C:
                dc.w    $0004
                dc.w    $72DC, $72CA, $72E4, $12DA
Offset_0x06DD46:
                dc.w    $0005
                dc.w    $72EC, $12F4, $72CA, $52F6, $12DA
Offset_0x06DD52:
                dc.w    $0004
                dc.w    $72FC, $7304, $530C, $1312
Offset_0x06DD5C:
                dc.w    $0004
                dc.w    $7314, $7304, $331C, $1312
Offset_0x06DD66:
                dc.w    $0004
                dc.w    $1320, $5322, $7328, $3330
Offset_0x06DD70:
                dc.w    $0004
                dc.w    $3334, $7338, $7340, $3348
Offset_0x06DD7A:
                dc.w    $0004
                dc.w    $334C, $7338, $5350, $1348
Offset_0x06DD84:
                dc.w    $0004
                dc.w    $5356, $7338, $535C, $1348
Offset_0x06DD8E:
                dc.w    $0004
                dc.w    $7362, $7328, $336A, $136E
Offset_0x06DD98:  
                dc.w    $0004
                dc.w    $7370, $7304, $3378, $1312                  
Offset_0x06DDA2:
                dc.w    $0004
                dc.w    $737C, $72CA, $5384, $12DA
Offset_0x06DDAC:
                dc.w    $0002
                dc.w    $F38A, $F3AA
Offset_0x06DDB2:
                dc.w    $0002
                dc.w    $F39A, $F3BA
Offset_0x06DDB8:
                dc.w    $0002
                dc.w    $F38A, $F3CA
Offset_0x06DDBE:
                dc.w    $0002
                dc.w    $F39A, $F3DA 
Offset_0x06DDC4:
                dc.w    $0002
                dc.w    $F3EA, $F40A
Offset_0x06DDCA:
                dc.w    $0002
                dc.w    $F3EA, $F41A
Offset_0x06DDD0:
                dc.w    $0002
                dc.w    $F3EA, $F42A
Offset_0x06DDD6:
                dc.w    $0002
                dc.w    $F3EA, $F43A
Offset_0x06DDDC:
                dc.w    $0002
                dc.w    $B44A, $B462
Offset_0x06DDE2:
                dc.w    $0002
                dc.w    $B456, $B46E
Offset_0x06DDE8:
                dc.w    $0002
                dc.w    $B44A, $B47A
Offset_0x06DDEE:
                dc.w    $0002
                dc.w    $B456, $B486
Offset_0x06DDF4:
                dc.w    $0002
                dc.w    $F492, $F4B2
Offset_0x06DDFA:
                dc.w    $0002
                dc.w    $F4A2, $B4C2
Offset_0x06DE00:
                dc.w    $0002
                dc.w    $F492, $F4CE
Offset_0x06DE06:
                dc.w    $0002
                dc.w    $F4A2, $B4DE  
Offset_0x06DE0C:
                dc.w    $0001
                dc.w    $F4EA
Offset_0x06DE10:
                dc.w    $0001
                dc.w    $F4FA
Offset_0x06DE14:
                dc.w    $0001
                dc.w    $F50A
Offset_0x06DE18:
                dc.w    $0001
                dc.w    $F51A
Offset_0x06DE1C:
                dc.w    $0001
                dc.w    $F52A
Offset_0x06DE20:
                dc.w    $0001
                dc.w    $F53A
Offset_0x06DE24:
                dc.w    $0001
                dc.w    $F54A
Offset_0x06DE28:
                dc.w    $0001
                dc.w    $F55A
Offset_0x06DE2C:
                dc.w    $0001
                dc.w    $F56A
Offset_0x06DE30:
                dc.w    $0001
                dc.w    $F57A
Offset_0x06DE34:
                dc.w    $0001
                dc.w    $F58A
Offset_0x06DE38:
                dc.w    $0003
                dc.w    $559A, $55A0, $75A6
Offset_0x06DE40:
                dc.w    $0003
                dc.w    $559A, $55AE, $55B4
Offset_0x06DE48:
                dc.w    $0003
                dc.w    $559A, $55A0, $75BA
Offset_0x06DE50:
                dc.w    $0003
                dc.w    $559A, $55AE, $55C2
Offset_0x06DE58:
                dc.w    $0004
                dc.w    $B5C8, $35D4, $108E, $75D8
Offset_0x06DE62:
                dc.w    $0004
                dc.w    $B5C8, $35D4, $108E, $75E0
Offset_0x06DE6C:
                dc.w    $0004
                dc.w    $B5C8, $35D4, $108E, $75E8
Offset_0x06DE76:
                dc.w    $0003
                dc.w    $3052, $75F0, $35F8
Offset_0x06DE7E:
                dc.w    $0001
                dc.w    $B5FC
Offset_0x06DE82:
                dc.w    $0001
                dc.w    $F608
Offset_0x06DE86:
                dc.w    $0003
                dc.w    $7618, $3620, $3624
Offset_0x06DE8E:
                dc.w    $0003
                dc.w    $7628, $3630, $3634
Offset_0x06DE96:
                dc.w    $0003
                dc.w    $B638, $1644, $3646
Offset_0x06DE9E:  
                dc.w    $0003
                dc.w    $B64A, $1656, $3658
Offset_0x06DEA6:   
                dc.w    $0002
                dc.w    $B65C, $7668
Offset_0x06DEAC:
                dc.w    $0002
                dc.w    $B670, $567C
Offset_0x06DEB2:
                dc.w    $0002
                dc.w    $B682, $768E
Offset_0x06DEB8:
                dc.w    $0002
                dc.w    $F696, $16A6
Offset_0x06DEBE:
                dc.w    $0004
                dc.w    $56A8, $76AE, $76B6, $16BE
Offset_0x06DEC8:
                dc.w    $0002
                dc.w    $B6C0, $76CC
Offset_0x06DECE:
                dc.w    $0003
                dc.w    $56D4, $76DA, $36E2
Offset_0x06DED6:
                dc.w    $0003
                dc.w    $56D4, $76E6, $36E2
Offset_0x06DEDE:
                dc.w    $0002
                dc.w    $16EE, $F6F0
Offset_0x06DEE4:
                dc.w    $0002
                dc.w    $3700, $F704
Offset_0x06DEEA:
                dc.w    $0002
                dc.w    $F714, $7724
Offset_0x06DEF0:
                dc.w    $0002
                dc.w    $F72C, $773C
Offset_0x06DEF6:
                dc.w    $0004
                dc.w    $3744, $7748, $1750, $3752
Offset_0x06DF00:
                dc.w    $0002
                dc.w    $5756, $375C
Offset_0x06DF06:
                dc.w    $0003
                dc.w    $7760, $5768, $176E
Offset_0x06DF0E:
                dc.w    $0004
                dc.w    $7770, $3778, $177C, $3752
Offset_0x06DF18:
                dc.w    $0003
                dc.w    $577E, $F784, $1794
Offset_0x06DF20:
                dc.w    $0004
                dc.w    $7796, $179E, $57A0, $77A6
Offset_0x06DF2A:
                dc.w    $0004
                dc.w    $77AE, $179E, $57B6, $77A6
Offset_0x06DF34:
                dc.w    $0003
                dc.w    $77BC, $17C4, $B7C6
Offset_0x06DF3C:
                dc.w    $0003
                dc.w    $57D2, $B7D8, $17E4
Offset_0x06DF44:
                dc.w    $0003
                dc.w    $B7E6, $17F2, $37F4
Offset_0x06DF4C:
                dc.w    $0002
                dc.w    $B800, $180C
Offset_0x06DF52:
                dc.w    $0001
                dc.w    $F80E
Offset_0x06DF56:
                dc.w    $0002
                dc.w    $B81E, $182A
Offset_0x06DF5C:
                dc.w    $0003
                dc.w    $182C, $B82E, $183A
Offset_0x06DF64:
                dc.w    $0003
                dc.w    $583C, $B842, $384E
Offset_0x06DF6C:
                dc.w    $0003
                dc.w    $3852, $B856, $1862
Offset_0x06DF74:
                dc.w    $0002
                dc.w    $B864, $1870
Offset_0x06DF7A:
                dc.w    $0002
                dc.w    $1872, $B874
Offset_0x06DF80:
                dc.w    $0003
                dc.w    $3880, $B884, $1890
Offset_0x06DF88:                
                dc.w    $0002
                dc.w    $3892, $F896
Shield: ; Offset_0x06DF8E:
                incbin  'data\sprites\shield.nem'  
Invencibility_Stars: ; Offset_0x06E114:                              
                incbin  'data\sprites\invstars.nem'  
Unused_Dust: ; Offset_0x06E1FC:   
                incbin  'data\sprites\dust.dat'                 
Tails_Mappings: ; Offset_0x06FB3C: 
                dc.w    Offset_0x06FC46-Tails_Mappings
                dc.w    Offset_0x06FC48-Tails_Mappings
                dc.w    Offset_0x06FC5A-Tails_Mappings
                dc.w    Offset_0x06FC6C-Tails_Mappings
                dc.w    Offset_0x06FC7E-Tails_Mappings
                dc.w    Offset_0x06FC90-Tails_Mappings
                dc.w    Offset_0x06FC9A-Tails_Mappings
                dc.w    Offset_0x06FCA4-Tails_Mappings
                dc.w    Offset_0x06FCB6-Tails_Mappings
                dc.w    Offset_0x06FCC8-Tails_Mappings
                dc.w    Offset_0x06FCD2-Tails_Mappings
                dc.w    Offset_0x06FCDC-Tails_Mappings
                dc.w    Offset_0x06FCE6-Tails_Mappings
                dc.w    Offset_0x06FCF0-Tails_Mappings
                dc.w    Offset_0x06FCFA-Tails_Mappings
                dc.w    Offset_0x06FD14-Tails_Mappings
                dc.w    Offset_0x06FD2E-Tails_Mappings
                dc.w    Offset_0x06FD48-Tails_Mappings
                dc.w    Offset_0x06FD62-Tails_Mappings
                dc.w    Offset_0x06FD7C-Tails_Mappings
                dc.w    Offset_0x06FD96-Tails_Mappings
                dc.w    Offset_0x06FDB0-Tails_Mappings
                dc.w    Offset_0x06FDCA-Tails_Mappings
                dc.w    Offset_0x06FDE4-Tails_Mappings
                dc.w    Offset_0x06FDFE-Tails_Mappings
                dc.w    Offset_0x06FE18-Tails_Mappings
                dc.w    Offset_0x06FE32-Tails_Mappings
                dc.w    Offset_0x06FE4C-Tails_Mappings
                dc.w    Offset_0x06FE66-Tails_Mappings
                dc.w    Offset_0x06FE80-Tails_Mappings
                dc.w    Offset_0x06FE9A-Tails_Mappings
                dc.w    Offset_0x06FEB4-Tails_Mappings
                dc.w    Offset_0x06FECE-Tails_Mappings
                dc.w    Offset_0x06FEE8-Tails_Mappings
                dc.w    Offset_0x06FF02-Tails_Mappings
                dc.w    Offset_0x06FF1C-Tails_Mappings
                dc.w    Offset_0x06FF36-Tails_Mappings
                dc.w    Offset_0x06FF50-Tails_Mappings
                dc.w    Offset_0x06FF6A-Tails_Mappings
                dc.w    Offset_0x06FF7C-Tails_Mappings
                dc.w    Offset_0x06FF96-Tails_Mappings
                dc.w    Offset_0x06FFA8-Tails_Mappings
                dc.w    Offset_0x06FFC2-Tails_Mappings
                dc.w    Offset_0x06FFD4-Tails_Mappings
                dc.w    Offset_0x06FFEE-Tails_Mappings
                dc.w    Offset_0x070000-Tails_Mappings
                dc.w    Offset_0x07001A-Tails_Mappings
                dc.w    Offset_0x07002C-Tails_Mappings
                dc.w    Offset_0x07003E-Tails_Mappings
                dc.w    Offset_0x070050-Tails_Mappings
                dc.w    Offset_0x070062-Tails_Mappings
                dc.w    Offset_0x070074-Tails_Mappings
                dc.w    Offset_0x070086-Tails_Mappings
                dc.w    Offset_0x0700A0-Tails_Mappings
                dc.w    Offset_0x0700BA-Tails_Mappings
                dc.w    Offset_0x0700D4-Tails_Mappings
                dc.w    Offset_0x0700EE-Tails_Mappings
                dc.w    Offset_0x070108-Tails_Mappings
                dc.w    Offset_0x070122-Tails_Mappings
                dc.w    Offset_0x07013C-Tails_Mappings
                dc.w    Offset_0x070156-Tails_Mappings
                dc.w    Offset_0x07013C-Tails_Mappings
                dc.w    Offset_0x070170-Tails_Mappings
                dc.w    Offset_0x07018A-Tails_Mappings
                dc.w    Offset_0x0701A4-Tails_Mappings
                dc.w    Offset_0x0701BE-Tails_Mappings
                dc.w    Offset_0x0701D8-Tails_Mappings
                dc.w    Offset_0x0701F2-Tails_Mappings
                dc.w    Offset_0x07020C-Tails_Mappings
                dc.w    Offset_0x070226-Tails_Mappings
                dc.w    Offset_0x070240-Tails_Mappings
                dc.w    Offset_0x07024A-Tails_Mappings
                dc.w    Offset_0x070254-Tails_Mappings
                dc.w    Offset_0x07025E-Tails_Mappings
                dc.w    Offset_0x070268-Tails_Mappings
                dc.w    Offset_0x070272-Tails_Mappings
                dc.w    Offset_0x07027C-Tails_Mappings
                dc.w    Offset_0x070286-Tails_Mappings
                dc.w    Offset_0x070290-Tails_Mappings
                dc.w    Offset_0x07029A-Tails_Mappings
                dc.w    Offset_0x0702A4-Tails_Mappings
                dc.w    Offset_0x0702AE-Tails_Mappings
                dc.w    Offset_0x0702B8-Tails_Mappings
                dc.w    Offset_0x0702C2-Tails_Mappings
                dc.w    Offset_0x0702CC-Tails_Mappings
                dc.w    Offset_0x0702D6-Tails_Mappings
                dc.w    Offset_0x0702E0-Tails_Mappings
                dc.w    Offset_0x0702EA-Tails_Mappings
                dc.w    Offset_0x0702F4-Tails_Mappings
                dc.w    Offset_0x0702FE-Tails_Mappings
                dc.w    Offset_0x070310-Tails_Mappings
                dc.w    Offset_0x070322-Tails_Mappings
                dc.w    Offset_0x07032C-Tails_Mappings
                dc.w    Offset_0x070336-Tails_Mappings
                dc.w    Offset_0x070340-Tails_Mappings
                dc.w    Offset_0x070352-Tails_Mappings
                dc.w    Offset_0x070364-Tails_Mappings
                dc.w    Offset_0x07036E-Tails_Mappings
                dc.w    Offset_0x070378-Tails_Mappings
                dc.w    Offset_0x070382-Tails_Mappings
                dc.w    Offset_0x070394-Tails_Mappings
                dc.w    Offset_0x0703A6-Tails_Mappings
                dc.w    Offset_0x0703B8-Tails_Mappings
                dc.w    Offset_0x0703CA-Tails_Mappings
                dc.w    Offset_0x0703DC-Tails_Mappings
                dc.w    Offset_0x0703EE-Tails_Mappings
                dc.w    Offset_0x070400-Tails_Mappings
                dc.w    Offset_0x070412-Tails_Mappings
                dc.w    Offset_0x07041C-Tails_Mappings
                dc.w    Offset_0x07042E-Tails_Mappings
                dc.w    Offset_0x070440-Tails_Mappings
                dc.w    Offset_0x070452-Tails_Mappings
                dc.w    Offset_0x070464-Tails_Mappings
                dc.w    Offset_0x070476-Tails_Mappings
                dc.w    Offset_0x070488-Tails_Mappings
                dc.w    Offset_0x07049A-Tails_Mappings
                dc.w    Offset_0x0704AC-Tails_Mappings
                dc.w    Offset_0x0704B6-Tails_Mappings
                dc.w    Offset_0x0704C0-Tails_Mappings
                dc.w    Offset_0x0704D2-Tails_Mappings
                dc.w    Offset_0x0704DC-Tails_Mappings
                dc.w    Offset_0x0704E6-Tails_Mappings
                dc.w    Offset_0x0704F0-Tails_Mappings
                dc.w    Offset_0x0704FA-Tails_Mappings
                dc.w    Offset_0x070504-Tails_Mappings
                dc.w    Offset_0x07050E-Tails_Mappings
                dc.w    Offset_0x070518-Tails_Mappings
                dc.w    Offset_0x070522-Tails_Mappings
                dc.w    Offset_0x070534-Tails_Mappings
                dc.w    Offset_0x070546-Tails_Mappings
                dc.w    Offset_0x070550-Tails_Mappings
                dc.w    Offset_0x07055A-Tails_Mappings
                dc.w    Offset_0x070564-Tails_Mappings
Offset_0x06FC46:
                dc.w    $0000
Offset_0x06FC48:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
Offset_0x06FC5A:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
Offset_0x06FC6C:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
Offset_0x06FC7E:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
Offset_0x06FC90:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFF4
Offset_0x06FC9A:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFF4
Offset_0x06FCA4:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
Offset_0x06FCB6:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF4, $00090006, $0003FFF4
Offset_0x06FCC8:
                dc.w    $0001
                dc.l    $F0070000, $0000FFEC
Offset_0x06FCD2:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFE4
Offset_0x06FCDC:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFE4
Offset_0x06FCE6:
                dc.w    $0001
                dc.l    $00090000, $0000FFE4
Offset_0x06FCF0:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFE4
Offset_0x06FCFA:
                dc.w    $0003
                dc.l    $EC090000, $0000FFF0, $FC0D0006, $0003FFF0
                dc.l    $FC09000E, $0007FFE2
Offset_0x06FD14:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF3, $000D0006, $0003FFF0
                dc.l    $0009000E, $0007FFE4
Offset_0x06FD2E:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF8, $00090006, $0003FFF3
                dc.l    $FD09000C, $0006FFE4
Offset_0x06FD48:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF2, $00090006, $0003FFF2
                dc.l    $FD09000C, $0006FFE6
Offset_0x06FD62:
                dc.w    $0003
                dc.l    $EC090000, $0000FFF0, $FC0D0006, $0003FFF0
                dc.l    $FC09000E, $0007FFE2
Offset_0x06FD7C:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF3, $000D0006, $0003FFF0
                dc.l    $0009000E, $0007FFE4
Offset_0x06FD96:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF8, $00090006, $0003FFF1
                dc.l    $FD09000C, $0006FFE4
Offset_0x06FDB0:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF2, $00090006, $0003FFF2
                dc.l    $FD09000C, $0006FFE6
Offset_0x06FDCA:
                dc.w    $0003
                dc.l    $E3010000, $0000FFF3, $F3030002, $0001FFEC
                dc.l    $F30B0006, $0003FFF4
Offset_0x06FDE4:
                dc.w    $0003
                dc.l    $E7050000, $0000FFF6, $F70B0004, $0002FFEE
                dc.l    $FE050010, $00080006
Offset_0x06FDFE:
                dc.w    $0003
                dc.l    $E6050000, $0000FFF8, $F6030004, $0002FFEF
                dc.l    $F60B0008, $0004FFF7
Offset_0x06FE18:
                dc.w    $0003
                dc.l    $E3010000, $0000FFF7, $F30F0002, $0001FFEC
                dc.l    $FB010012, $0009000C
Offset_0x06FE32:
                dc.w    $0003
                dc.l    $E3010000, $0000FFF3, $F3030002, $0001FFEC
                dc.l    $F30B0006, $0003FFF4
Offset_0x06FE4C:
                dc.w    $0003
                dc.l    $E7050000, $0000FFF6, $F70B0004, $0002FFEE
                dc.l    $FF050010, $00080006
Offset_0x06FE66:
                dc.w    $0003
                dc.l    $E6050000, $0000FFF8, $F6030004, $0002FFEF
                dc.l    $F60B0008, $0004FFF7
Offset_0x06FE80:
                dc.w    $0003
                dc.l    $E3010000, $0000FFF7, $F30F0002, $0001FFEC
                dc.l    $03010012, $0009000C
Offset_0x06FE9A:
                dc.w    $0003
                dc.l    $F0070000, $0000FFEC, $F0070008, $0004FFFC
                dc.l    $06070010, $0008FFFC
Offset_0x06FEB4:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $00080000
Offset_0x06FECE:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $0008FFFD
Offset_0x06FEE8:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $0008FFFD
Offset_0x06FF02:
                dc.w    $0003
                dc.l    $F0070000, $0000FFEC, $F0070008, $0004FFFC
                dc.l    $06070010, $0008FFFC
Offset_0x06FF1C:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $00080000
Offset_0x06FF36:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $0008FFFD
Offset_0x06FF50:
                dc.w    $0003
                dc.l    $F0070000, $0000FFF0, $F0070008, $00040000
                dc.l    $04070010, $0008FFFD
Offset_0x06FF6A:
                dc.w    $0002
                dc.l    $04010000, $0000FFEB, $F40F0002, $0001FFF3
Offset_0x06FF7C:
                dc.w    $0003
                dc.l    $E2050000, $0000FFF8, $FA010004, $0002FFF0
                dc.l    $F20F0006, $0003FFF8
Offset_0x06FF96:
                dc.w    $0002
                dc.l    $F9010000, $0000FFEC, $F10F0002, $0001FFF4
Offset_0x06FFA8:
                dc.w    $0003
                dc.l    $FC010000, $0000FFEF, $E5010002, $0001FFFF
                dc.l    $F50F0004, $0002FFF7
Offset_0x06FFC2:
                dc.w    $0002
                dc.l    $04010000, $0000FFEB, $F40F0002, $0001FFF3
Offset_0x06FFD4:
                dc.w    $0003
                dc.l    $E2010000, $00000000, $FA010002, $0001FFF0
                dc.l    $F20F0004, $0002FFF8
Offset_0x06FFEE:
                dc.w    $0002
                dc.l    $F9010000, $0000FFEC, $F10F0002, $0001FFF4
Offset_0x070000:
                dc.w    $0003
                dc.l    $E4010000, $0000FFFF, $FC010002, $0001FFEF
                dc.l    $F40F0004, $0002FFF7
Offset_0x07001A:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F0070010, $0008FFEA
Offset_0x07002C:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F8050010, $0008FFEA
Offset_0x07003E:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F8050010, $0008FFEA
Offset_0x070050:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F8051010, $1008FFEA
Offset_0x070062:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F0070010, $0008FFEA
Offset_0x070074:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $F0071810, $1808FFEA
Offset_0x070086:
                dc.w    $0003
                dc.l    $E4010000, $0000FFFA, $F40B0002, $0001FFF0
                dc.l    $FE0B000E, $0007FFE8
Offset_0x0700A0:
                dc.w    $0003
                dc.l    $E4050000, $0000FFF8, $F40B0004, $0002FFF0
                dc.l    $04050010, $0008FFEF
Offset_0x0700BA:
                dc.w    $0003
                dc.l    $E4010000, $0000FFFA, $F40B0002, $0001FFF0
                dc.l    $0405000E, $0007FFEF
Offset_0x0700D4:
                dc.w    $0003
                dc.l    $E4050000, $0000FFF8, $F40B0004, $0002FFF0
                dc.l    $04050010, $0008FFEF
Offset_0x0700EE:
                dc.w    $0003
                dc.l    $E4010000, $0000FFFA, $F40B0002, $0001FFF0
                dc.l    $FC0B000E, $0007FFEA
Offset_0x070108:
                dc.w    $0003
                dc.l    $E4050000, $0000FFF8, $F40B0004, $0002FFF0
                dc.l    $E90B1810, $1808FFF2
Offset_0x070122:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
                dc.l    $060D000E, $0007FFF0
Offset_0x07013C:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
                dc.l    $0605000E, $0007FFF8
Offset_0x070156:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
                dc.l    $0605000E, $0007FFF8
Offset_0x070170:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
                dc.l    $060D000E, $0007FFF0
Offset_0x07018A:
                dc.w    $0003
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
                dc.l    $060D000E, $0007FFF0
Offset_0x0701A4:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $FE0B0810, $08080000
Offset_0x0701BE:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $01050810, $08080004
Offset_0x0701D8:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $01050810, $08080004
Offset_0x0701F2:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $01050810, $08080004
Offset_0x07020C:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $FC0B0810, $0808FFFE
Offset_0x070226:
                dc.w    $0003
                dc.l    $F80B0000, $0000FFEC, $F805000C, $00060004
                dc.l    $FC0B1010, $10080006
Offset_0x070240:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x07024A:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x070254:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x07025E:
                dc.w    $0001
                dc.l    $F8090000, $0000FFDC
Offset_0x070268:
                dc.w    $0001
                dc.l    $F8090000, $0000FFDC
Offset_0x070272:
                dc.w    $0001
                dc.l    $F8090000, $0000FFDC
Offset_0x07027C:
                dc.w    $0001
                dc.l    $F8090000, $0000FFDC
Offset_0x070286:
                dc.w    $0001
                dc.l    $07090000, $0000FFE1
Offset_0x070290:
                dc.w    $0001
                dc.l    $07090000, $0000FFE1
Offset_0x07029A:
                dc.w    $0001
                dc.l    $07090000, $0000FFE1
Offset_0x0702A4:
                dc.w    $0001
                dc.l    $07090000, $0000FFE1
Offset_0x0702AE:
                dc.w    $0001
                dc.l    $0C070000, $0000FFF8
Offset_0x0702B8:
                dc.w    $0001
                dc.l    $0C070000, $0000FFF8
Offset_0x0702C2:
                dc.w    $0001
                dc.l    $0C070000, $0000FFF8
Offset_0x0702CC:
                dc.w    $0001
                dc.l    $0C070000, $0000FFF8
Offset_0x0702D6:
                dc.w    $0001
                dc.l    $07070000, $00000007
Offset_0x0702E0:
                dc.w    $0001
                dc.l    $07070000, $00000007
Offset_0x0702EA:
                dc.w    $0001
                dc.l    $07070000, $00000007
Offset_0x0702F4:
                dc.w    $0001
                dc.l    $07070000, $00000007
Offset_0x0702FE:
                dc.w    $0002
                dc.l    $E8050000, $0000FFF8, $F80B0004, $0002FFF0
Offset_0x070310:
                dc.w    $0002
                dc.l    $E8050000, $0000FFF8, $F80B0004, $0002FFF0
Offset_0x070322:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFF9
Offset_0x07032C:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x070336:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x070340:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $E40D0010, $0008FFEA
Offset_0x070352:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFF0, $E40D0810, $0808FFEA
Offset_0x070364:
                dc.w    $0001
                dc.l    $F40F0000, $0000FFF0
Offset_0x07036E:
                dc.w    $0001
                dc.l    $F40F0000, $0000FFF0
Offset_0x070378:
                dc.w    $0001
                dc.l    $F40F0000, $0000FFF0
Offset_0x070382:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF8, $000D0006, $0003FFF0
Offset_0x070394:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF8, $00090006, $0003FFF8
Offset_0x0703A6:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF8, $00090006, $0003FFF8
Offset_0x0703B8:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF8, $00090006, $0003FFF8
Offset_0x0703CA:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
Offset_0x0703DC:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF0, $000D0006, $0003FFF0
Offset_0x0703EE:
                dc.w    $0002
                dc.l    $F8010000, $0000FFF0, $F00B0002, $0001FFF8
Offset_0x070400:
                dc.w    $0002
                dc.l    $F0090000, $0000FFF8, $000D0006, $0003FFF0
Offset_0x070412:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x07041C:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFEC, $F0030010, $0008000C
Offset_0x07042E:
                dc.w    $0002
                dc.l    $F00F0000, $0000FFEC, $F0030010, $0008000C
Offset_0x070440:
                dc.w    $0002
                dc.l    $F8050000, $0000FFEC, $F00B0004, $0002FFFC
Offset_0x070452:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F0070800, $08000000
Offset_0x070464:
                dc.w    $0002
                dc.l    $F8050800, $08000004, $F00B0804, $0802FFEC
Offset_0x070476:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0, $F8050008, $00040000
Offset_0x070488:
                dc.w    $0002
                dc.l    $F0070800, $08000000, $F8050808, $0804FFF0
Offset_0x07049A:
                dc.w    $0002
                dc.l    $F8050000, $0000FFEC, $F00B0004, $0002FFFC
Offset_0x0704AC:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
Offset_0x0704B6:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFF1
Offset_0x0704C0:
                dc.w    $0002
                dc.l    $E4050000, $0000FFF8, $F40B0004, $0002FFF1
Offset_0x0704D2:
                dc.w    $0001
                dc.l    $F20B0000, $0000FFF2
Offset_0x0704DC:
                dc.w    $0001
                dc.l    $F40B0000, $0000FFF0
Offset_0x0704E6:
                dc.w    $0001
                dc.l    $F30B0000, $0000FFF2
Offset_0x0704F0:
                dc.w    $0001
                dc.l    $F20B0000, $0000FFF2
Offset_0x0704FA:
                dc.w    $0001
                dc.l    $F20B0000, $0000FFF2
Offset_0x070504:
                dc.w    $0001
                dc.l    $F00B0000, $0000FFF1
Offset_0x07050E:
                dc.w    $0001
                dc.l    $ED0B0000, $0000FFF0
Offset_0x070518:
                dc.w    $0001
                dc.l    $EC0B0000, $0000FFF1
Offset_0x070522:
                dc.w    $0002
                dc.l    $F4090000, $0000FFF3, $04050006, $0003FFF3
Offset_0x070534:
                dc.w    $0002
                dc.l    $F2070000, $0000FFF0, $EC030008, $00040000
Offset_0x070546:
                dc.w    $0001
                dc.l    $F8090000, $0000FFE0
Offset_0x070550:
                dc.w    $0001
                dc.l    $F8090000, $0000FFE0
Offset_0x07055A:
                dc.w    $0001
                dc.l    $F8090000, $0000FFE0
Offset_0x070564:
                dc.w    $0001
                dc.l    $F8090000, $0000FFE0
Tails_Dyn_Script: ; Offset_0x07056E:   
                dc.w    Offset_0x070678-Tails_Dyn_Script
                dc.w    Offset_0x07067A-Tails_Dyn_Script
                dc.w    Offset_0x070680-Tails_Dyn_Script
                dc.w    Offset_0x070686-Tails_Dyn_Script
                dc.w    Offset_0x07068C-Tails_Dyn_Script
                dc.w    Offset_0x070692-Tails_Dyn_Script
                dc.w    Offset_0x070696-Tails_Dyn_Script
                dc.w    Offset_0x07069A-Tails_Dyn_Script
                dc.w    Offset_0x0706A0-Tails_Dyn_Script
                dc.w    Offset_0x0706A6-Tails_Dyn_Script
                dc.w    Offset_0x0706AA-Tails_Dyn_Script
                dc.w    Offset_0x0706AE-Tails_Dyn_Script
                dc.w    Offset_0x0706B2-Tails_Dyn_Script
                dc.w    Offset_0x0706B6-Tails_Dyn_Script
                dc.w    Offset_0x0706BA-Tails_Dyn_Script
                dc.w    Offset_0x0706C2-Tails_Dyn_Script
                dc.w    Offset_0x0706CA-Tails_Dyn_Script
                dc.w    Offset_0x0706D2-Tails_Dyn_Script
                dc.w    Offset_0x0706DA-Tails_Dyn_Script
                dc.w    Offset_0x0706E2-Tails_Dyn_Script
                dc.w    Offset_0x0706EA-Tails_Dyn_Script
                dc.w    Offset_0x0706F2-Tails_Dyn_Script
                dc.w    Offset_0x0706FA-Tails_Dyn_Script
                dc.w    Offset_0x070702-Tails_Dyn_Script
                dc.w    Offset_0x07070A-Tails_Dyn_Script
                dc.w    Offset_0x070712-Tails_Dyn_Script
                dc.w    Offset_0x07071A-Tails_Dyn_Script
                dc.w    Offset_0x070722-Tails_Dyn_Script
                dc.w    Offset_0x07072A-Tails_Dyn_Script
                dc.w    Offset_0x070732-Tails_Dyn_Script
                dc.w    Offset_0x07073A-Tails_Dyn_Script
                dc.w    Offset_0x070742-Tails_Dyn_Script
                dc.w    Offset_0x07074A-Tails_Dyn_Script
                dc.w    Offset_0x070752-Tails_Dyn_Script
                dc.w    Offset_0x07075A-Tails_Dyn_Script
                dc.w    Offset_0x070762-Tails_Dyn_Script
                dc.w    Offset_0x07076A-Tails_Dyn_Script
                dc.w    Offset_0x070772-Tails_Dyn_Script
                dc.w    Offset_0x07077A-Tails_Dyn_Script
                dc.w    Offset_0x070780-Tails_Dyn_Script
                dc.w    Offset_0x070788-Tails_Dyn_Script
                dc.w    Offset_0x07078E-Tails_Dyn_Script
                dc.w    Offset_0x070796-Tails_Dyn_Script
                dc.w    Offset_0x07079C-Tails_Dyn_Script
                dc.w    Offset_0x0707A4-Tails_Dyn_Script
                dc.w    Offset_0x0707AA-Tails_Dyn_Script
                dc.w    Offset_0x0707B2-Tails_Dyn_Script
                dc.w    Offset_0x0707B8-Tails_Dyn_Script
                dc.w    Offset_0x0707BE-Tails_Dyn_Script
                dc.w    Offset_0x0707B8-Tails_Dyn_Script
                dc.w    Offset_0x0707C4-Tails_Dyn_Script
                dc.w    Offset_0x0707CA-Tails_Dyn_Script
                dc.w    Offset_0x0707D0-Tails_Dyn_Script
                dc.w    Offset_0x0707D8-Tails_Dyn_Script
                dc.w    Offset_0x0707E0-Tails_Dyn_Script
                dc.w    Offset_0x0707E8-Tails_Dyn_Script
                dc.w    Offset_0x0707F0-Tails_Dyn_Script
                dc.w    Offset_0x0707F8-Tails_Dyn_Script
                dc.w    Offset_0x070800-Tails_Dyn_Script
                dc.w    Offset_0x070808-Tails_Dyn_Script
                dc.w    Offset_0x070810-Tails_Dyn_Script
                dc.w    Offset_0x070808-Tails_Dyn_Script
                dc.w    Offset_0x070818-Tails_Dyn_Script
                dc.w    Offset_0x070820-Tails_Dyn_Script
                dc.w    Offset_0x070828-Tails_Dyn_Script
                dc.w    Offset_0x070830-Tails_Dyn_Script
                dc.w    Offset_0x070838-Tails_Dyn_Script
                dc.w    Offset_0x070840-Tails_Dyn_Script
                dc.w    Offset_0x070848-Tails_Dyn_Script
                dc.w    Offset_0x070850-Tails_Dyn_Script
                dc.w    Offset_0x070858-Tails_Dyn_Script
                dc.w    Offset_0x07085C-Tails_Dyn_Script
                dc.w    Offset_0x070860-Tails_Dyn_Script
                dc.w    Offset_0x070864-Tails_Dyn_Script
                dc.w    Offset_0x070868-Tails_Dyn_Script
                dc.w    Offset_0x07086C-Tails_Dyn_Script
                dc.w    Offset_0x070870-Tails_Dyn_Script
                dc.w    Offset_0x070874-Tails_Dyn_Script
                dc.w    Offset_0x070878-Tails_Dyn_Script
                dc.w    Offset_0x07087C-Tails_Dyn_Script
                dc.w    Offset_0x070880-Tails_Dyn_Script
                dc.w    Offset_0x070884-Tails_Dyn_Script
                dc.w    Offset_0x070888-Tails_Dyn_Script
                dc.w    Offset_0x07088C-Tails_Dyn_Script
                dc.w    Offset_0x070890-Tails_Dyn_Script
                dc.w    Offset_0x070894-Tails_Dyn_Script
                dc.w    Offset_0x070898-Tails_Dyn_Script
                dc.w    Offset_0x07089C-Tails_Dyn_Script
                dc.w    Offset_0x0708A0-Tails_Dyn_Script
                dc.w    Offset_0x0708A4-Tails_Dyn_Script
                dc.w    Offset_0x0708AA-Tails_Dyn_Script
                dc.w    Offset_0x0708B0-Tails_Dyn_Script
                dc.w    Offset_0x0708B4-Tails_Dyn_Script
                dc.w    Offset_0x0708B8-Tails_Dyn_Script
                dc.w    Offset_0x0708BC-Tails_Dyn_Script
                dc.w    Offset_0x0708BC-Tails_Dyn_Script
                dc.w    Offset_0x0708C2-Tails_Dyn_Script
                dc.w    Offset_0x0708C6-Tails_Dyn_Script
                dc.w    Offset_0x0708CA-Tails_Dyn_Script
                dc.w    Offset_0x0708CE-Tails_Dyn_Script
                dc.w    Offset_0x0708D4-Tails_Dyn_Script
                dc.w    Offset_0x0708DA-Tails_Dyn_Script
                dc.w    Offset_0x0708E0-Tails_Dyn_Script
                dc.w    Offset_0x0708E6-Tails_Dyn_Script
                dc.w    Offset_0x0708EC-Tails_Dyn_Script
                dc.w    Offset_0x0708F2-Tails_Dyn_Script
                dc.w    Offset_0x0708F8-Tails_Dyn_Script
                dc.w    Offset_0x0708FE-Tails_Dyn_Script
                dc.w    Offset_0x070902-Tails_Dyn_Script
                dc.w    Offset_0x070908-Tails_Dyn_Script
                dc.w    Offset_0x07090E-Tails_Dyn_Script
                dc.w    Offset_0x070914-Tails_Dyn_Script
                dc.w    Offset_0x07090E-Tails_Dyn_Script
                dc.w    Offset_0x07091A-Tails_Dyn_Script
                dc.w    Offset_0x07091A-Tails_Dyn_Script
                dc.w    Offset_0x070920-Tails_Dyn_Script
                dc.w    Offset_0x070926-Tails_Dyn_Script
                dc.w    Offset_0x07092A-Tails_Dyn_Script
                dc.w    Offset_0x07092E-Tails_Dyn_Script
                dc.w    Offset_0x070934-Tails_Dyn_Script
                dc.w    Offset_0x070938-Tails_Dyn_Script
                dc.w    Offset_0x07093C-Tails_Dyn_Script
                dc.w    Offset_0x070940-Tails_Dyn_Script
                dc.w    Offset_0x070944-Tails_Dyn_Script
                dc.w    Offset_0x070948-Tails_Dyn_Script
                dc.w    Offset_0x07094C-Tails_Dyn_Script
                dc.w    Offset_0x070950-Tails_Dyn_Script
                dc.w    Offset_0x070954-Tails_Dyn_Script
                dc.w    Offset_0x07095A-Tails_Dyn_Script
                dc.w    Offset_0x070864-Tails_Dyn_Script
                dc.w    Offset_0x070868-Tails_Dyn_Script
                dc.w    Offset_0x07086C-Tails_Dyn_Script
                dc.w    Offset_0x070870-Tails_Dyn_Script
Offset_0x070678:
                dc.w    $0000
Offset_0x07067A:
                dc.w    $0002
                dc.w    $5000, $5006
Offset_0x070680:
                dc.w    $0002
                dc.w    $500C, $5006
Offset_0x070686:
                dc.w    $0002
                dc.w    $5012, $5006
Offset_0x07068C:
                dc.w    $0002
                dc.w    $5018, $5006
Offset_0x070692:
                dc.w    $0001
                dc.w    $B01E
Offset_0x070696:
                dc.w    $0001
                dc.w    $B02A
Offset_0x07069A:
                dc.w    $0002
                dc.w    $5036, $503C
Offset_0x0706A0:
                dc.w    $0002
                dc.w    $5036, $5042
Offset_0x0706A6:
                dc.w    $0001
                dc.w    $7048
Offset_0x0706AA:
                dc.w    $0001
                dc.w    $B050
Offset_0x0706AE:
                dc.w    $0001
                dc.w    $B05C
Offset_0x0706B2:
                dc.w    $0001
                dc.w    $5068
Offset_0x0706B6:
                dc.w    $0001
                dc.w    $B06E
Offset_0x0706BA:
                dc.w    $0003
                dc.w    $507A, $7080, $50CA
Offset_0x0706C2:
                dc.w    $0003
                dc.w    $5088, $708E, $50D0
Offset_0x0706CA:
                dc.w    $0003
                dc.w    $5096, $509C, $50D6
Offset_0x0706D2:
                dc.w    $0003
                dc.w    $50A2, $50A8, $50DC
Offset_0x0706DA:
                dc.w    $0003
                dc.w    $507A, $70AE, $50CA
Offset_0x0706E2:
                dc.w    $0003
                dc.w    $5088, $70B6, $50D0
Offset_0x0706EA:
                dc.w    $0003
                dc.w    $5096, $50BE, $50D6
Offset_0x0706F2:
                dc.w    $0003
                dc.w    $50A2, $50C4, $50DC
Offset_0x0706FA:
                dc.w    $0003
                dc.w    $10E2, $30E4, $B0E8
Offset_0x070702:
                dc.w    $0003
                dc.w    $30F4, $B0F8, $3104
Offset_0x07070A:
                dc.w    $0003
                dc.w    $3108, $310C, $B110
Offset_0x070712:
                dc.w    $0003
                dc.w    $111C, $F11E, $112E
Offset_0x07071A:
                dc.w    $0003
                dc.w    $10E2, $30E4, $B130
Offset_0x070722:
                dc.w    $0003
                dc.w    $30F4, $B13C, $3148
Offset_0x07072A:
                dc.w    $0003
                dc.w    $3108, $310C, $B14C
Offset_0x070732:
                dc.w    $0003
                dc.w    $111C, $F158, $1168
Offset_0x07073A:
                dc.w    $0003
                dc.w    $716A, $7172, $71CA
Offset_0x070742:
                dc.w    $0003
                dc.w    $717A, $7182, $71D2
Offset_0x07074A:
                dc.w    $0003
                dc.w    $718A, $7192, $71DA
Offset_0x070752:
                dc.w    $0003
                dc.w    $719A, $71A2, $71E2
Offset_0x07075A:
                dc.w    $0003
                dc.w    $716A, $71AA, $71CA
Offset_0x070762:
                dc.w    $0003
                dc.w    $717A, $71B2, $71D2
Offset_0x07076A:
                dc.w    $0003
                dc.w    $718A, $71BA, $71DA
Offset_0x070772:
                dc.w    $0003
                dc.w    $719A, $71C2, $71E2
Offset_0x07077A:
                dc.w    $0002
                dc.w    $11EA, $F1EC
Offset_0x070780:
                dc.w    $0003
                dc.w    $31FC, $1200, $F202
Offset_0x070788:
                dc.w    $0002
                dc.w    $1212, $F214
Offset_0x07078E:
                dc.w    $0003
                dc.w    $1224, $1226, $F228
Offset_0x070796:
                dc.w    $0002
                dc.w    $11EA, $F238
Offset_0x07079C:
                dc.w    $0003
                dc.w    $1248, $1200, $F24A
Offset_0x0707A4:
                dc.w    $0002
                dc.w    $1212, $F25A
Offset_0x0707AA:
                dc.w    $0003
                dc.w    $126A, $1224, $F26C
Offset_0x0707B2:
                dc.w    $0002
                dc.w    $F27C, $729C
Offset_0x0707B8:
                dc.w    $0002
                dc.w    $F28C, $32A4
Offset_0x0707BE:
                dc.w    $0002
                dc.w    $F27C, $32A8
Offset_0x0707C4:
                dc.w    $0002
                dc.w    $F27C, $72AC
Offset_0x0707CA:
                dc.w    $0002
                dc.w    $F28C, $72AC
Offset_0x0707D0:
                dc.w    $0003
                dc.w    $12B4, $B2B6, $B2D2
Offset_0x0707D8:
                dc.w    $0003
                dc.w    $32C2, $B2C6, $32DE
Offset_0x0707E0:
                dc.w    $0003
                dc.w    $12B4, $B2B6, $32E2
Offset_0x0707E8:
                dc.w    $0003
                dc.w    $32C2, $B2C6, $32E6
Offset_0x0707F0:
                dc.w    $0003
                dc.w    $12B4, $B2B6, $B2EA
Offset_0x0707F8:
                dc.w    $0003
                dc.w    $32C2, $B2C6, $B2EA
Offset_0x070800:
                dc.w    $0003
                dc.w    $52F6, $72FC, $7312
Offset_0x070808:
                dc.w    $0003
                dc.w    $5304, $730A, $331E
Offset_0x070810:
                dc.w    $0003
                dc.w    $52F6, $72FC, $331A
Offset_0x070818:
                dc.w    $0003
                dc.w    $52F6, $72FC, $7322
Offset_0x070820:
                dc.w    $0003
                dc.w    $5304, $730A, $7322
Offset_0x070828:
                dc.w    $0003
                dc.w    $B32A, $3336, $B2D2
Offset_0x070830:
                dc.w    $0003
                dc.w    $B33A, $3346, $32DE
Offset_0x070838:
                dc.w    $0003
                dc.w    $B32A, $3336, $32E2
Offset_0x070840:
                dc.w    $0003
                dc.w    $B33A, $3346, $32E6
Offset_0x070848:
                dc.w    $0003
                dc.w    $B32A, $3336, $B2EA
Offset_0x070850:
                dc.w    $0003
                dc.w    $B33A, $3346, $B2EA
Offset_0x070858:
                dc.w    $0001
                dc.w    $F34A
Offset_0x07085C:
                dc.w    $0001
                dc.w    $F35A
Offset_0x070860:
                dc.w    $0001
                dc.w    $F36A
Offset_0x070864:
                dc.w    $0001
                dc.w    $50CA
Offset_0x070868:
                dc.w    $0001
                dc.w    $50D0
Offset_0x07086C:
                dc.w    $0001
                dc.w    $50D6
Offset_0x070870:
                dc.w    $0001
                dc.w    $50DC
Offset_0x070874:
                dc.w    $0001
                dc.w    $537A
Offset_0x070878:
                dc.w    $0001
                dc.w    $5380
Offset_0x07087C:
                dc.w    $0001
                dc.w    $5386
Offset_0x070880:
                dc.w    $0001
                dc.w    $538C
Offset_0x070884:
                dc.w    $0001
                dc.w    $71CA
Offset_0x070888:
                dc.w    $0001
                dc.w    $71D2
Offset_0x07088C:
                dc.w    $0001
                dc.w    $71DA
Offset_0x070890:
                dc.w    $0001
                dc.w    $71E2
Offset_0x070894:
                dc.w    $0001
                dc.w    $7392
Offset_0x070898:
                dc.w    $0001
                dc.w    $739A
Offset_0x07089C:
                dc.w    $0001
                dc.w    $73A2
Offset_0x0708A0:
                dc.w    $0001
                dc.w    $73AA
Offset_0x0708A4:
                dc.w    $0002
                dc.w    $33B2, $B3B6
Offset_0x0708AA:
                dc.w    $0002
                dc.w    $33B2, $B3C2
Offset_0x0708B0:
                dc.w    $0001
                dc.w    $B3CE
Offset_0x0708B4:
                dc.w    $0001
                dc.w    $F3DA
Offset_0x0708B8:
                dc.w    $0001
                dc.w    $F3EA
Offset_0x0708BC:
                dc.w    $0002
                dc.w    $F3FA, $740A
Offset_0x0708C2:
                dc.w    $0001
                dc.w    $F412
Offset_0x0708C6:
                dc.w    $0001
                dc.w    $F422
Offset_0x0708CA:
                dc.w    $0001
                dc.w    $F432
Offset_0x0708CE:
                dc.w    $0002
                dc.w    $5442, $7448
Offset_0x0708D4:
                dc.w    $0002
                dc.w    $5442, $5450
Offset_0x0708DA:
                dc.w    $0002
                dc.w    $5442, $5456
Offset_0x0708E0:
                dc.w    $0002
                dc.w    $5442, $545C
Offset_0x0708E6:
                dc.w    $0002
                dc.w    $5462, $7468
Offset_0x0708EC:
                dc.w    $0002
                dc.w    $5470, $7476
Offset_0x0708F2:
                dc.w    $0002
                dc.w    $147E, $B480
Offset_0x0708F8:
                dc.w    $0002
                dc.w    $548C, $7492
Offset_0x0708FE:
                dc.w    $0001
                dc.w    $F49A
Offset_0x070902:
                dc.w    $0002
                dc.w    $F4AA, $34BA
Offset_0x070908:
                dc.w    $0002
                dc.w    $F4BE, $34CE
Offset_0x07090E:
                dc.w    $0002
                dc.w    $34D2, $B4D6
Offset_0x070914:
                dc.w    $0002
                dc.w    $74E2, $74E2
Offset_0x07091A:
                dc.w    $0002
                dc.w    $74EA, $34F2
Offset_0x070920:
                dc.w    $0002
                dc.w    $34F6, $B4FA
Offset_0x070926:
                dc.w    $0001
                dc.w    $F506
Offset_0x07092A:
                dc.w    $0001
                dc.w    $B516
Offset_0x07092E:
                dc.w    $0002
                dc.w    $3522, $B526
Offset_0x070934:
                dc.w    $0001
                dc.w    $B532
Offset_0x070938:
                dc.w    $0001
                dc.w    $B53E
Offset_0x07093C:
                dc.w    $0001
                dc.w    $B54A
Offset_0x070940:
                dc.w    $0001
                dc.w    $B556
Offset_0x070944:
                dc.w    $0001
                dc.w    $B562
Offset_0x070948:
                dc.w    $0001
                dc.w    $B56E
Offset_0x07094C:
                dc.w    $0001
                dc.w    $B57A
Offset_0x070950:
                dc.w    $0001
                dc.w    $B586
Offset_0x070954:
                dc.w    $0002
                dc.w    $5592, $3598
Offset_0x07095A:
                dc.w    $0002
                dc.w    $759C, $35A4                             
SegaLogo: ; Offset_0x070960:                
                incbin  'data\sprites\sega.nem'
SegaLogo_Mappings: ; Offset_0x070DD0:
                incbin  'data\all\sega.eni'
TS_Wings_Sonic_Mappings: ; Offset_0x070ECC: 
                incbin  'data\all\titlescr.eni'
Title_Screen_Bg_Mappings: ; Offset_0x071024:
                incbin  'data\all\titscrbg.eni'
Title_Screen_R_Bg_Mappings: ; Offset_0x0712D8:                
                incbin  'data\all\titscrb2.eni'
Title_Screen_Bg_Wings: ; Offset_0x071520: 
                incbin  'data\sprites\titlescr.nem' ; Title Screen Wings and background
Title_Screen_Sonic_Tails: ; Offset_0x072E82: 
                incbin  'data\sprites\sontascr.nem' ; Sonic And Tails in Title Screen  
FireBall: ; Offset_0x0739C6:                 
                incbin  'data\sprites\fireball.nem'
Ghz_Waterfall: ; Offset_0x073B3C:  
                incbin  'data\ghz\watrfall.nem'  
Htz_Lava_Bubble: ; Offset_0x073C42:   
                incbin  'data\htz\lvbubble.nem'              
Ghz_Bridge: ; Offset_0x073D90: 
                incbin  'data\ghz\bridge.nem'                  
Htz_Teleferic:  ; Offset_0x073E68: 
                incbin  'data\htz\telefrcs.nem' 
Htz_Automatic_Door: ; Offset_0x07415C: 
                incbin  'data\htz\autodoor.nem' 
Htz_See_saw: ; Offset_0x0741D4: 
                incbin  'data\htz\see-saw.nem'
Fireball_1: ; Offset_0x07436C: 
                incbin  'data\sprites\firebal1.nem'                
Htz_Rock:; Offset_0x07447A: 
                incbin  'data\htz\rock.nem'             
Htz_See_saw_badnick: ; Offset_0x0745B0: 
                incbin  'data\htz\see-sawb.nem' 
Mz_Rotating_Gear: ; Offset_0x07461C:      
                incbin  'data\mz\gear.nem'   
Mz_Machine_Ball: ; Offset_0x074A74: 
                incbin  'data\mz\m_ball.nem'  
Mz_Block: ; Offset_0x074B1C:     
                incbin  'data\mz\block.nem'  
Mz_Steam: ; Offset_0x074BEA:  
                incbin  'data\mz\steam.nem'                 
Mz_Harpoon: ; Offset_0x074CF4:     
                incbin  'data\mz\harpoon.nem'  
Mz_Screw_Nut: ; Offset_0x074DB6:  
                incbin  'data\mz\screwnut.nem'                                                            
Mz_Lava_Bubble: ; Offset_0x074E2C:   
                incbin  'data\mz\lvbubble.nem' 
Offset_0x074EE2:  
                incbin  'data\mz\0x074EE2.nem'                  
Mz_Parallelogram_Elevator: ; Offset_0x074F52:  
                incbin  'data\mz\parallel.nem' 
Offset_0x0751FE:  
                incbin  'data\mz\0x0751FE.nem'  
Mz_Mini_Gear: ; Offset_0x0752A0:  
                incbin  'data\mz\minigear.nem'                                 
Mz_Teleport: ; Mz_Four_Block: ; Offset_0x075382:                 
                dc.b    $00, $04, $86, $71, $00, $FF, $00, $00, $00, $00, $00, $00                                 
Hpz_Bridge: ; Offset_0x07538E: 
                incbin  'data\hpz\bridge.nem'
Hpz_Waterfall: ; Offset_0x075506: 
                incbin  'data\hpz\watrfall.nem'               
Hpz_Emerald: ; Offset_0x075868: 
                incbin  'data\hpz\emerald.nem'                                 
Hpz_Platform: ; Offset_0x075ADA: 
                incbin  'data\hpz\platform.nem'               
Hpz_Orbs_Comp: ; Offset_0x075B9A: ; Compressed 
                incbin  'data\hpz\orbs.nem'                
Hpz_Unknow_Platform: ; Offset_0x075DD6: 
                incbin  'data\hpz\unkptfm.nem'  
OOz_Elevator: ; Offset_0x075F70:  
                incbin  'data\ooz\elevator.nem' 
OOz_Giant_Spikeball: ; Offset_0x076060:  
                incbin  'data\ooz\gspkball.nem'   
OOz_Touch_Boost_Up: ; Offset_0x076258:  
                incbin  'data\ooz\boost_up.nem'   
OOz_Break_Boost: ; Offset_0x0762EE:  
                incbin  'data\ooz\brkboost.nem'                    
OOz_Oil: ; Offset_0x07635A:  
                incbin  'data\ooz\oil.nem' 
OOz_Tube_Oil: ; Offset_0x0764D6:  
                incbin  'data\ooz\tube_oil.nem'   
OOz_Ball: ; Offset_0x076602:  
                incbin  'data\ooz\ball.nem'     
OOz_Cannon: ; Offset_0x076722:  
                incbin  'data\ooz\cannon.nem'  
OOz_Collapsing_Platform: ; Offset_0x076A12:  
                incbin  'data\ooz\platform.nem'  
OOz_Spring_Push_Boost: ; Offset_0x076CA6:   
                incbin  'data\ooz\spngpush.nem'  
OOz_Swing_Platform: ; Offset_0x076E68:   
                incbin  'data\ooz\swngptfm.nem' 
Dhz_Box: ; Offset_0x07708A:   
                incbin  'data\dhz\box.nem' 
Dhz_Collapsing_Platform: ; Offset_0x0772C8:   
                incbin  'data\dhz\clp_ptfm.nem' 
Dhz_Vines: ; Offset_0x077472:   
                incbin  'data\dhz\vines.nem' 
Dhz_Vines_1: ; Offset_0x07756A:   
                incbin  'data\dhz\vines_1.nem'  
Dhz_Bridge: ; Offset_0x077614:   
                incbin  'data\dhz\bridge.nem' 
Cpz_Elevator: ; Offset_0x077684:      
                incbin  'data\cpz\elevator.nem'                                                                                                                                                                                                                                      
Water_Surface: ; Offset_0x0777D2: 
                incbin  'data\sprites\watrsurf.nem'  
Cpz_Speed_Booster: ; Offset_0x077942:      
                incbin  'data\cpz\speedbst.nem' 
Cpz_Worms: ; Offset_0x0779AA:      
                incbin  'data\cpz\worms.nem'                                 
Cpz_Metal_Structure: ; Offset_0x077A1C:      
                incbin  'data\cpz\metal_st.nem' 
Offset_0x077C26:      
                incbin  'data\cpz\0x077C26.nem'                
Cpz_Automatic_Door: ; Offset_0x077C66:      
                incbin  'data\cpz\autodoor.nem' 
Cpz_Open_Close_Platform: ; Offset_0x077CD2:      
                incbin  'data\cpz\oc_ptfrm.nem'   
Cpz_Platforms: ; Offset_0x077EB4:      
                incbin  'data\cpz\platform.nem'                   
Cpz_Spring_Tubes: ; Offset_0x078074:      
                incbin  'data\cpz\spgtubes.nem' 
Nghz_Water_Surface: ; Offset_0x078270:      
                incbin  'data\nghz\watrsurf.nem'   
Nghz_Leaves: ; Offset_0x078356:     
                incbin  'data\nghz\leaves.nem'                                                 
Nghz_Arrow_Shooter: ; Offset_0x0783E2:                                  
                incbin  'data\nghz\arrow_s.nem' 
Nghz_Water_Splash: ; Offset_0x078540:                                  
                incbin  'data\nghz\w_splash.nem'                                                             
Switch: ; Offset_0x078580:      
                incbin  'data\sprites\switch.nem'   
Vertical_Spring: ; Offset_0x078658: 
                incbin  'data\sprites\v_spring.nem' 
Horizontal_Spring: ; Offset_0x078774: 
                incbin  'data\sprites\h_spring.nem'                       
Diagonal_Spring: ; Offset_0x07883E: 
                incbin  'data\sprites\d_spring.nem'                   
Head_up_display_Sprites: ; Offset_0x078A12: 
                incbin  'data\sprites\hud.nem' ; Head-up display  
Head_up_display_Sonic: ; Offset_0x078B1A:
                incbin  'data\sprites\hudsonic.nem'   
Rings: ; Offset_0x078C30: 
                incbin  'data\sprites\rings.nem' 
Monitors: ; Offset_0x078D24:
                incbin  'data\sprites\monitors.nem' ; Monitors    
Spikes: ; Offset_0x07914E:                
                incbin  'data\sprites\spikes.nem' 
Enemy_Points_Spr: ; Offset_0x07919E:
                incbin  'data\sprites\points.nem'                                               
Lamp_Post: ; Offset_0x079278:                
                incbin  'data\sprites\lamppost.nem' 
End_Panel: ; Offset_0x07931E:  
                incbin  'data\sprites\endpanel.nem' 
Diagonal_Spring_1: ; Offset_0x0798F4:                
                incbin  'data\sprites\dspring1.nem'                 
Dhz_Horizontal_Spikes: ; Offset_0x079A44:                
                incbin  'data\dhz\h_spikes.nem' 
Air_Bubbles_Numbers: ; Offset_0x079AC0: 
                incbin  'data\sprites\airbubls.nem'                     
Hpz_Crocobot: ; Offset_0x07A11A: 
                incbin  'data\hpz\Crocobot.nem' 
Ghz_Buzzer_Bomber: ; Offset_0x07A4BC: 
                incbin  'data\ghz\buzzbomb.nem'                  
Hpz_Batbot: ; Offset_0x07A6A2: 
                incbin  'data\hpz\batbot.nem' 
OOz_Octus: ; Offset_0x07A9F8: 
                incbin  'data\ooz\octus.nem'                 
Hpz_Rhinobot: ; Offset_0x07AD18: 
                incbin  'data\hpz\rhinobot.nem'                                 
Hpz_Dinobot: ; Offset_0x07B114: 
                incbin  'data\hpz\dinobot.nem'                  
Hpz_Piranha: ; Offset_0x07B4EA: 
                incbin  'data\hpz\piranha.nem'  
OOz_Aquis: ; Offset_0x07B9E2: 
                incbin  'data\ooz\aquis.nem' 
Spinning_Ball: ; Offset_0x07BE30: 
                incbin  'data\sprites\spinball.nem'   
Blink: ; Offset_0x07C0C6: 
                incbin  'data\sprites\blink.nem'    
Bubble_Monster: ; Offset_0x07C2F2: 
                incbin  'data\sprites\bmonster.nem'                                                                 
Ghz_Motobug: ; Offset_0x07C514: 
                incbin  'data\ghz\motobug.nem'                   
Crawl: ; Offset_0x07C710: 
                incbin  'data\cnz\crawl.nem'                
Ghz_Chopper: ; Offset_0x07CA92: 
                incbin  'data\ghz\chopper.nem'
Robotnik_Ship: ; Offset_0x07CC9E: 
                incbin  'data\sprites\robotnik.nem'  
Cpz_Boss: ; Offset_0x07D3DA: 
                incbin  'data\cpz\boss.nem' 
Boss_Explosions: ; Offset_0x07D938: 
                incbin  'data\sprites\bossexpl.nem'                 
Ship_Boost: ; Offset_0x07DFC0: 
                incbin  'data\sprites\shpboost.nem'    
Boss_Smoke: ; Offset_0x07E03E: 
                incbin  'data\sprites\b_smoke.nem'                                                                                           
Ghz_Boss_Car: ; Offset_0x07E124: 
                incbin  'data\ghz\boss_car.nem'                                                                                
Ghz_Boss_Blades: ; Offset_0x07E910: 
                incbin  'data\ghz\b_blades.nem'                 
Title_Cards: ; Offset_0x07EA04:                 
                incbin  'data\sprites\titlcard.nem' ; Title Cards
Explosion: ; Offset_0x07F012:  
                incbin  'data\sprites\explosn.nem'
Game_Time_Over: ; Offset_0x07F678:
                incbin  'data\sprites\gt_over.nem'
Vertical_Springs_Sonic_1: ; Offset_0x07F80A:                
                incbin  'data\sprites\vspng_s1.nem'  
Horizontal_Springs_Sonic_1: ; Offset_0x07F90C:                
                incbin  'data\sprites\hspng_s1.nem'                 
Big_Ring_Flash: ; Offset_0x07F9E8:
                incbin  'data\sprites\rngflash.nem'                  
Hidden_Points: ; Offset_0x07FB5C:
                incbin  'data\sprites\h_points.nem' 
Sonic_Continue_Screen: ; Offset_0x07FE5E:
                incbin  'data\sprites\sonicctn.nem'   
Continue_Special_Stage_Results_Screen: ; Offset_0x08010E:
                incbin  'data\sprites\cont_ss.nem'                                                                               
Rabbit: ; Offset_0x080348:
                incbin  'data\sprites\rabbit.nem'
White_Bird: ; Offset_0x0804A0:  
                incbin  'data\sprites\wthebird.nem'
Black_Bird: ; Offset_0x0805FC:  
                incbin  'data\sprites\blckbird.nem'     
Seal: ; Offset_0x080778:  
                incbin  'data\sprites\seal.nem' 
Pig: ; Offset_0x080894:  
                incbin  'data\sprites\pig.nem' 
Blue_Bird: ; Offset_0x0809CA:  
                incbin  'data\sprites\bluebird.nem'                                                     
Bear: ; Offset_0x080B04:  
                incbin  'data\sprites\bear.nem'                                                            
Green_Hill_16x16_Map: ; Offset_0x080C60: 
                incbin  'data\ghz\ghz_16.dat'                               
Green_Hill_8x8_Tiles: ; Offset_0x081C00: 
                incbin  'data\ghz\ghz_8.nem'                                
Hill_Top_16x16_Map: ; Offset_0x084A50:    
                incbin  'data\htz\htz_16.dat'                                  
Hill_Top_8x8_Tiles: ; Offset_0x085200:  
                incbin  'data\htz\htz_8.nem'                                
Htz_Init_Sprites_Dyn_Reload: ; Offset_0x086626:    
                incbin  'data\htz\init_spr.nem'                             
Green_Hill_128x128_Map: ; Offset_0x08692E:  
                incbin  'data\ghz\ghz_128.kos'
                dc.w    $0000 ; Filler                 
Wood_16x16_Map: ; Offset_0x089B8E:  
                incbin  'data\wz\wz_16.dat'                 
Wood_8x8_Tiles: ; Offset_0x08AB2E: 
                incbin  'data\wz\wz_8.nem'                
Waterfall: ; Offset_0x08E6C6:  
                incbin  'data\sprites\watrfall.nem'                
Wood_128x128_Map: ; Offset_0x08E826:                
                incbin  'data\wz\wz_128.kos'  
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000 ; Filler
Metropolis_16x16_Map: ; Offset_0x090456:
                incbin  'data\mz\mz_16.dat'
Metropolis_8x8_Tiles: ; Offset_0x091716:
                incbin  'data\mz\mz_8.nem'                                 
Mz_Init_Sprites_Dyn_Reload: ; Offset_0x094994:  
                incbin  'data\mz\init_spr.nem'                  
Metropolis_128x128_Map: ; Offset_0x094C56:                 
                incbin  'data\mz\mz_128.kos'    
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000 ; Filler           
Hidden_Palace_16x16_Map: ; Offset_0x097596:
                incbin  'data\hpz\hpz_16.dat'
Hidden_Palace_8x8_Tiles: ; Offset_0x098B76:
                incbin  'data\hpz\hpz_8.nem'                                
Hpz_Init_Sprites_Dyn_Reload: ; Offset_0x09B884: ;  Orbs
                incbin  'data\hpz\init_spr.nem'  
Hidden_Palace_128x128_Map: ; Offset_0x09B9F8:                 
                incbin  'data\hpz\hpz_128.kos'                
                dc.w    $0000, $0000, $0000 ; Filler                     
Oil_Ocean_16x16_Map: ; Offset_0x09D778:
                incbin  'data\ooz\ooz_16.dat'
Oil_Ocean_8x8_Tiles: ; Offset_0x09ED58:  
                incbin  'data\ooz\ooz_8.nem'                                 
OOz_Init_Sprites_Dyn_Reload: ; Offset_0x0A186A: ;  red ball, oil ...
                incbin  'data\ooz\init_spr.nem' 
Oil_Ocean_128x128_Map: ; Offset_0x0A1A58:                 
                incbin  'data\ooz\ooz_128.kos'                
                dc.w    $0000, $0000, $0000, $0000, $0000 ; Filler           
Dust_Hill_16x16_Map: ; Offset_0x0A3F88:
                incbin  'data\dhz\dhz_16.dat' 
Dust_Hill_8x8_Tiles: ; Offset_0x0A5248:  
                incbin  'data\dhz\dhz_8.nem'
Dust_Hill_128x128_Map: ; Offset_0x0A8B6A:               
                incbin  'data\dhz\dhz_128.kos'                
                dc.w    $0000, $0000, $0000, $0000, $0000 ; Filler    
Casino_Night_16x16_Map: ; Offset_0x0AB5CA:
                incbin  'data\cnz\cnz_16.dat'  
Casino_Night_8x8_Tiles: ; Offset_0x0ABF2A: 
                incbin  'data\cnz\cnz_8.nem'    
Cnz_Cards: ; Offset_0x0AEF3C:               
                incbin  'data\cnz\cards.nem'
Casino_Night_128x128_Map: ; Offset_0x0AF026:                
                incbin  'data\cnz\cnz_128.kos'                
                dc.w    $0000, $0000, $0000, $0000, $0000, $0000, $0000 ; Filler    
Chemical_Plant_16x16_Map: ; Offset_0x0B0F26:  
                incbin  'data\cpz\cpz_16.dat'  
Chemical_Plant_8x8_Tiles: ; Offset_0x0B2506: 
                incbin  'data\cpz\cpz_8.nem'
Cpz_Init_Sprites_Dyn_Reload: ; Offset_0x0B602E:  
                incbin  'data\cpz\init_spr.nem' 
Chemical_Plant_128x128_Map: ; Offset_0x0B6058:                 
                incbin  'data\cpz\cpz_128.kos'                
                dc.w    $0000, $0000, $0000 ; Filler  
Neo_Green_Hill_16x16_Map: ; Offset_0x0B8558:
                incbin  'data\nghz\nghz_16.dat'   
Neo_Green_Hill_8x8_Tiles: ; Offset_0x0B9E58:
                incbin  'data\nghz\nghz_8.nem'                                
Nghz_Init_Sprites_Dyn_Reload: ; Offset_0x0BF408:  Waterfalls
                incbin  'data\nghz\init_spr.nem'  
Neo_Green_Hill_128x128_Map: ; Offset_0x0BF568:                  
                incbin  'data\nghz\nghz_128.kos'                 
Offset_0x0C2138: ; Leftover end of compressed Nghz 128x128 mappings...
                dc.w    $C00B, $F8C4, $C00B, $5200, $F8C0, $F80E, $00F0, $0000  
Unknow_Uncompressed_12x128_Map: ; Offset_0x0C2148:                                            
                incbin  'data\all\unk_128.dat' 
Chemical_Plant_16x16_Map_Previous_Builder: ; Offset_0x0C943C:                                            
                incbin  'data\all\cpz_16.dat'                 
Chemical_Plant_8x8_Tiles_Previous_Builder: ; Offset_0x0CAA1C:                                            
                incbin  'data\sprites\cpz_8.nem'  
Cpz_Building: ; Offset_0x0CDFC6: ;  Left over                                                        
                incbin  'data\sprites\building.nem'   
Chemical_Plant_128x128_Map_Previous_Builder:  ; Offset_0x0CE03A:                                              
                incbin  'data\all\cpz_128.dat'                  
Neo_Green_Hill_16x16_Map_Previous_Builder: ; Offset_0x0D603A:                                            
                incbin  'data\all\nghz_16.dat'                              
Neo_Green_Hill_8x8_Tiles_Previous_Builder: ; Offset_0x0D793A:                                            
                incbin  'data\nghz\nghz_8.nem'                                             
Nghz_Init_Sprites_Dyn_Reload_2: ; Offset_0x0DCEEA: ; Waterfalls  ; Left over
                incbin  'data\nghz\init_spr.nem'                  
Neo_Green_Hill_128x128_Map_Previous_Builder: ; Offset_0x0DD04A:                                   
                incbin  'data\all\nghz_128.dat'                  
Neo_Green_Hill_8x8_Incomplete_Tiles_Previous_Builder: ; Offset_0x0E504A:                                   
                incbin  'data\sprites\nghz_8.nem'                                
Nghz_Init_Sprites_Dyn_Reload_3: ; Offset_0x0E57E6: ; Waterfalls  ; Left over
                incbin  'data\nghz\init_spr.nem'
                
Uncompiled_Asm: ; Offset_0x0E5946:                 
Cr              equ     $0D
Lf              equ     $0A
Tab             equ     $09    
                dc.b    $3B, $20, $88, $B3, $8F, $6B, $91, $4F
                dc.b    ' $8000  ', $88, $B3, $8F, $6B, $8C, $E3
                dc.b    ' $2c00  ', $88, $B3, $8F, $6B, $97, $A6
                dc.b    ' 34.4%  ', $83, $5A, $83, $8B, $90, $94
                dc.b    ' 1024', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$1d,$7f,$00,$ff,$f8,$7e,$04,$01,$fb,$02,$00,$03,$04,$05,$04,$80', Cr, Lf 
                dc.b    Tab, 'dc.b', Tab,'$ff,$fa,$ff,$07,$54,$0b,$54,$0a,$50,$0c,$50,$ff,$8f,$0d,$54,$0f', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$54,$0e,$50,$10,$50,$11,$52,$19,$52,$18,$ff,$ff,$fc,$1a,$52,$1b', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$51,$8a,$51,$8b,$52,$1c,$02,$1e,$02,$1f,$02,$2a,$9f,$ff,$02,$2b', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$01,$8c,$01,$8d,$f4,$1d,$02,$2c,$02,$2d,$01,$ff,$f4,$88,$01,$89', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$01,$8e,$01,$8f,$02,$1a,$e4,$02,$2e,$02,$46,$c0,$2f,$e0,$ff,$1b', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$ec,$fc,$dc,$00,$70,$02,$c4,$d4,$ee,$18,$02,$19,$01,$3f,$f6,$fd', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$e4,$e6,$04,$2e,$04,$2d,$04,$9d,$fe,$77,$bd,$00,$be,$f9,$50,$31', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$54,$30,$54,$2f,$7f,$f8,$56,$03,$56,$02,$56,$01,$05,$ff,$f0,$52', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$1d,$52,$1e,$e1,$9f,$52,$1f,$fc,$50,$3e,$54,$3c,$56,$04,$54,$36', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$09,$e0,$c4,$9c,$f8,$ea,$1a,$50,$48,$24,$41,$ba,$a4,$b2,$fc,$fc', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$21,$9a,$f2,$80,$f6,$9c,$fc,$1d,$5e,$92,$68,$01,$8a,$01,$8b,$ee', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$fc,$68,$f2,$fd,$d5,$fd,$ce,$f7,$f7,$80,$fd,$f0,$f8,$0f,$04,$35', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f0,$f8,$0d,$54,$3f,$54,$39,$7f,$fe,$54,$38,$01,$ff,$02,$00,$06', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$00,$60,$1a,$54,$43,$54,$ff,$f3,$42,$55,$fe,$55,$fd,$55,$fc,$55', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$fb,$54,$46,$a4,$1c,$ff,$11,$50,$49,$54,$44,$54,$52,$50,$51,$54', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$50,$80,$b2,$12,$8e,$8f,$4e,$06,$fc,$f2,$f2,$3c,$90,$fa,$58,$5c', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$80,$f8,$20,$60,$f8,$20,$40,$f3,$02,$0a,$02,$2c,$3c,$0b,$70,$40', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f6,$86,$2a,$54,$29,$52,$f4,$62,$f8,$11,$c0,$f1,$2a,$52,$2b,$bc', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f4,$fc,$1a,$62,$f1,$72,$6e,$f2,$f2,$78,$00,$16,$bd,$fe,$00,$17', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$fc,$f8,$0c,$18,$00,$19,$fc,$f8,$0c,$e0,$f8,$2e,$54,$06,$54,$04', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$50,$fb,$be,$08,$50,$09,$f8,$fe,$50,$12,$50,$13,$fc,$f8,$0b,$00', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$14,$00,$15,$f7,$fc,$fc,$f8,$0c,$1e,$00,$1f,$fc,$f8,$0c,$20,$00', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$21,$fc,$f4,$50,$f5,$f7,$07,$50,$f6,$50,$f7,$e8,$fe,$50,$f8,$50', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$87,$52,$1b,$3c,$1f,$fd,$e0,$fc,$50,$f9,$50,$85,$40,$ae,$f1,$50', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$fa,$50,$fb,$07,$e1,$50,$fc,$50,$8b,$f6,$86,$f1,$2a,$1c,$50,$2f', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$b2,$8c,$50,$8d,$50,$8e,$24,$f1,$24,$ee,$0a,$24,$9a,$eb,$92,$f3', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$7c,$f2,$0a,$f2,$e0,$ec,$af,$9f,$dc,$05,$6d,$ae,$ef,$60,$f2,$1a', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$06,$25,$01,$89,$45,$94,$e4,$4e,$ed,$e0,$e8,$2a,$f3,$11,$ae,$e0', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f0,$c0,$28,$02,$29,$38,$f6,$00,$8c,$c0,$fd,$ce,$e4,$a0,$59,$44', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$c0,$8d,$ce,$00,$ea,$bc,$e0,$0b,$a8,$d6,$fc,$1b,$dc,$e2,$f8,$f0', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$68,$ec,$ea,$bd,$f8,$e5,$20,$f0,$15,$a0,$e8,$09,$20,$f0,$16,$50', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$54,$0d,$20,$f5,$1b,$52,$1c,$92,$a0,$dc,$e4,$60,$e5,$a8,$6e,$e2', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$80,$6e,$e4,$82,$28,$12,$fc,$4e,$e2,$80,$6e,$e2,$44,$ee,$e7,$fa', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$00,$66,$8e,$fe,$56,$25,$51,$8c,$c0,$c2,$e4,$bc,$f0,$fe,$38,$02', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$15,$d8,$80,$fc,$06,$f8,$9d,$59,$f0,$12,$02,$11,$02,$10,$80,$fc', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f6,$5a,$30,$fe,$e0,$ee,$13,$80,$2e,$52,$2f,$f9,$6d,$7f,$f5,$05', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f9,$02,$16,$00,$23,$00,$24,$e4,$f3,$f2,$f1,$80,$ea,$50,$2b,$20', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$8c,$50,$76,$5a,$f3,$84,$51,$89,$40,$a0,$5c,$58,$60,$6e,$00,$f9', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$11,$95,$ae,$f5,$1b,$5a,$f6,$6a,$e3,$6a,$fc,$02,$82,$e8,$10,$96', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$ee,$ea,$47,$0f,$ce,$f2,$13,$02,$14,$76,$b2,$f2,$16,$02,$17,$44', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$8c,$ee,$e4,$88,$ea,$33,$fa,$d4,$04,$23,$f2,$e4,$e6,$fc,$54,$27', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$54,$4f,$e4,$94,$54,$93,$04,$92,$e0,$ea,$e4,$f2,$54,$af,$af,$85', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$54,$97,$04,$98,$c6,$fd,$52,$f3,$54,$87,$54,$99,$bc,$fc,$ff,$ff', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$00,$e8,$39,$50,$6b,$50,$6c,$50,$6d,$50,$73,$50,$74,$50,$75,$50', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$76,$50,$ff,$8f,$77,$50,$78,$50,$79,$50,$15,$50,$7a,$50,$7b,$50', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$7c,$5e,$51,$f8,$20,$ee,$12,$00,$13,$fc,$f8,$0c,$00,$e8,$0e,$08', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$6e,$e2,$4d,$d2,$fc,$f2,$bc,$d2,$8a,$32,$ee,$f6,$60,$04,$f0,$fa', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$22,$fa,$00,$23,$06,$5c,$32,$fc,$80,$f1,$26,$54,$25,$67,$c1,$50', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$27,$f6,$58,$20,$80,$f2,$20,$60,$d1,$51,$55,$f1,$6d,$d8,$80,$f3', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$cc,$f3,$28,$f1,$80,$f0,$09,$12,$dc,$2d,$a3,$04,$e1,$d8,$ea,$18', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$84,$d6,$a0,$d8,$4f,$41,$80,$f4,$02,$25,$01,$24,$ae,$05,$c0,$80', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f4,$88,$23,$f0,$25,$92,$12,$05,$fa,$ab,$02,$d6,$e0,$ff,$92,$f3', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$e0,$fc,$8a,$f1,$e0,$86,$a7,$88,$10,$88,$01,$f9,$01,$fa,$80,$5d', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$21,$05,$fa,$60,$fc,$50,$28,$80,$fe,$e0,$e9,$fc,$2d,$1b,$94,$84', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$bc,$c9,$52,$86,$c0,$ce,$64,$ea,$2a,$7c,$74,$19,$fa,$e9,$76,$d2', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$58,$55,$05,$48,$01,$5d,$f9,$5e,$f2,$fc,$f4,$57,$05,$52,$85,$e9', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$1b,$05,$49,$f4,$fe,$02,$d5,$ff,$f2,$f4,$f8,$09,$ff,$f8,$32,$32', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$d6,$96,$ca,$ff,$d8,$38,$50,$39,$50,$3f,$a2,$49,$a2,$4a,$fc,$54', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$ea,$fe,$7f,$af,$02,$0d,$02,$0e,$02,$0f,$06,$0d,$cc,$f8,$0a,$c1', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$00,$c2,$bc,$f8,$0c,$d2,$f9,$f0,$f8,$2c,$c0,$e1,$f0,$07,$04,$05', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f1,$07,$51,$bf,$aa,$75,$50,$c1,$50,$c2,$54,$31,$a0,$c6,$ac,$da', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$ee,$f5,$46,$f2,$aa,$20,$60,$f3,$e4,$f3,$dc,$de,$d2,$cc,$6e,$de', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$d4,$52,$d8,$0c,$b2,$ac,$e2,$e8,$5c,$f3,$d8,$c8,$e2,$82,$b2,$20', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$de,$34,$f3,$ec,$1a,$f2,$84,$db,$b8,$84,$6a,$e8,$fe,$c4,$b8,$c0', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$b8,$49,$20,$fc,$c0,$b8,$10,$1b,$2d,$e8,$08,$f3,$00,$f1,$51,$fc', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$da,$8a,$f2,$bd,$ae,$d7,$97,$01,$73,$06,$99,$fc,$fe,$98,$f6,$e4', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$04,$0a,$fc,$f6,$f4,$9b,$7f,$46,$f6,$06,$9f,$02,$e2,$0a,$98,$0a', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f4,$e6,$38,$e9,$fe,$e3,$04,$00,$fa,$f4,$fc,$50,$f5,$93,$43,$e2', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$06,$91,$02,$fe,$92,$f8,$f0,$07,$84,$98,$06,$96,$02,$fe,$b0,$f8', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$91,$20,$06,$95,$f0,$c4,$fe,$9a,$8d,$87,$f8,$06,$9c,$f0,$e4,$02', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$e5,$aa,$08,$fe,$02,$bc,$f8,$fa,$eb,$32,$50,$33,$50,$34,$9f,$ff', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$50,$b4,$50,$b5,$50,$b6,$fc,$b7,$50,$b8,$50,$b9,$54,$e1,$fb,$b9', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f0,$fe,$ba,$f0,$bb,$f0,$bc,$68,$d2,$06,$19,$fc,$ff,$f4,$ae,$fc', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$ad,$fc,$ac,$fc,$ab,$fc,$aa,$f0,$fc,$a6,$fc,$fb,$8b,$a5,$fc,$a4', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$48,$d6,$30,$be,$3c,$a3,$3c,$a2,$38,$d0,$09,$c5,$56,$f0,$a1,$58', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$c0,$0b,$f0,$a0,$f0,$f8,$0e,$9f,$40,$b0,$52,$58,$d5,$b5,$6e,$80', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f7,$58,$d5,$80,$f0,$0d,$f1,$72,$cc,$80,$f7,$01,$6d,$c0,$f8,$1e', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$58,$45,$fd,$48,$f6,$bc,$fc,$c0,$c0,$ee,$9c,$ea,$18,$a1,$6d,$01', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$4b,$f8,$48,$05,$55,$8e,$cc,$a6,$f0,$52,$05,$57,$d1,$a0,$05,$56', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$ec,$38,$ea,$88,$a0,$32,$cb,$c0,$fe,$ec,$fe,$c6,$f0,$ec,$fe,$01', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$1f,$02,$5d,$01,$ff,$bf,$0f,$01,$10,$02,$45,$02,$30,$02,$31,$c1', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$da,$c2,$33,$c2,$32,$ff,$cf,$d2,$e2,$02,$34,$02,$35,$02,$32,$c1', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$db,$c2,$3c,$02,$3d,$7f,$00,$f0,$47,$02,$36,$02,$37,$c1,$dc,$e0', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$ea,$0e,$ff,$f0,$44,$ce,$c5,$d8,$c1,$d9,$02,$40,$02,$f0,$ff,$41', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f0,$c1,$d4,$c1,$d5,$c1,$d6,$c1,$d7,$02,$3e,$02,$ff,$3f,$3f,$02', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$46,$c0,$c1,$c0,$c2,$c2,$3a,$c2,$3b,$02,$38,$02,$39,$01,$02,$d8', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f0,$d0,$c8,$02,$7e,$c0,$c4,$f8,$30,$01,$29,$01,$2a,$02,$44,$92', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$d6,$aa,$c0,$a3,$aa,$80,$d3,$8b,$2e,$ca,$d3,$a0,$c9,$9a,$d2,$a4', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$cd,$aa,$eb,$80,$cf,$a4,$cd,$66,$d2,$a8,$ce,$80,$d6,$04,$5e,$72', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$ce,$60,$d5,$5d,$97,$f6,$54,$61,$54,$60,$e4,$fc,$ea,$52,$1c,$e0', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$a9,$63,$54,$ff,$da,$62,$54,$67,$54,$66,$54,$65,$54,$64,$f2,$bc', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$e0,$ac,$54,$e0,$a9,$7f,$e1,$51,$fb,$51,$fc,$51,$fd,$51,$fe,$80', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$e8,$0f,$fc,$50,$ba,$5b,$50,$50,$bb,$50,$80,$e8,$14,$0c,$80,$e8', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$0c,$f0,$80,$e8,$7b,$e0,$d8,$3f,$fd,$ef,$ec,$e9,$9a,$f2,$1e,$54', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$9d,$54,$9c,$54,$90,$54,$8f,$92,$b7,$1c,$1f,$d5,$54,$8e,$54,$8d', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$50,$50,$e0,$e8,$ba,$b2,$9e,$80,$9a,$aa,$aa,$1d,$9c,$bb,$c4,$da', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$7c,$ea,$ba,$b2,$36,$db,$f8,$9d,$00,$be,$aa,$f4,$a0,$c8,$09,$8e', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$a6,$0e,$a3,$92,$c6,$c0,$9a,$d4,$04,$24,$00,$c2,$ff,$5a,$32,$f0', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$09,$e6,$54,$4f,$54,$4e,$54,$4d,$54,$4c,$54,$d5,$7e,$59,$54,$9c', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$c3,$a8,$b1,$00,$ea,$1c,$80,$99,$57,$54,$56,$54,$5f,$11,$55,$60', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$ff,$aa,$ea,$80,$9a,$a0,$fe,$06,$bc,$95,$54,$68,$d6,$5c,$d6,$12', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$9c,$56,$dc,$e4,$9a,$ea,$84,$c4,$8f,$3f,$5c,$ac,$51,$09,$83,$f2', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$62,$02,$63,$01,$88,$05,$7c,$a2,$f6,$51,$00,$91,$09,$24,$f2,$fc', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$10,$25,$05,$64,$91,$f0,$96,$b2,$ee,$61,$1d,$92,$c1,$f2,$50,$91', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$a8,$c2,$fc,$fe,$f0,$96,$ac,$b0,$f0,$48,$b1,$8d,$64,$e1,$20,$c3', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f0,$00,$9e,$8c,$aa,$92,$95,$78,$f2,$60,$f8,$09,$8e,$93,$92,$f3', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$d1,$f5,$72,$90,$09,$1f,$36,$44,$ef,$00,$53,$40,$b1,$fa,$f1,$50', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$4a,$ff,$ff,$50,$4b,$50,$4c,$50,$4d,$50,$4e,$50,$4f,$50,$55,$50', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$56,$50,$57,$3d,$48,$50,$3d,$f8,$f5,$18,$50,$40,$f6,$fc,$f7,$2a', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$a9,$2a,$20,$9a,$b6,$bb,$20,$90,$0a,$e8,$ee,$fe,$e8,$a4,$a4,$ff', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$e4,$f4,$c6,$80,$de,$0e,$b5,$50,$46,$50,$47,$50,$48,$50,$3f,$c2', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$3a,$50,$3b,$50,$42,$50,$43,$a0,$ff,$51,$5f,$55,$50,$52,$50,$44', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$50,$45,$d8,$f1,$3c,$f2,$e4,$c3,$2e,$f8,$09,$a0,$8e,$95,$05,$a0', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$fd,$80,$88,$0a,$e0,$ef,$0e,$b2,$c5,$ce,$55,$62,$00,$bb,$5c,$f8', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$0a,$60,$f6,$5c,$8a,$3c,$5a,$2b,$2a,$d2,$fe,$01,$12,$a0,$09,$52', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f3,$f0,$5a,$f3,$8e,$fe,$30,$91,$f0,$b6,$f2,$ea,$8a,$32,$c0,$d1', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$96,$fd,$2e,$bd,$f0,$b2,$fe,$12,$cb,$2c,$c0,$40,$fd,$0e,$a0,$5c', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$8f,$be,$56,$a0,$a6,$4e,$a2,$51,$82,$b8,$09,$88,$a1,$53,$22,$b8', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$2d,$c0,$82,$f5,$27,$f0,$f8,$0b,$a6,$b9,$c0,$81,$54,$34,$54,$33', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$54,$32,$f0,$ed,$92,$40,$d1,$e0,$ea,$1a,$c0,$82,$54,$37,$c0,$81', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$68,$68,$55,$72,$f2,$58,$aa,$81,$41,$00,$e0,$60,$8e,$b0,$0a,$c0', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$80,$09,$7a,$b0,$0a,$bf,$28,$80,$c0,$40,$c0,$be,$cc,$a3,$cc,$00', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$d8,$0a,$f0,$00,$d8,$0c,$8a,$ba,$f0,$00,$d8,$0c,$f0,$00,$d8,$0a', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$88,$fe,$54,$b4,$7f,$fd,$cc,$f4,$f4,$bc,$f4,$bb,$f4,$ba,$f4,$80', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$d1,$7c,$d1,$bf,$50,$c0,$f8,$ff,$fa,$aa,$f8,$ab,$f8,$ac,$f8,$ad', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f8,$ae,$d4,$91,$26,$b7,$f8,$b1,$f8,$fb,$dd,$b2,$f8,$b3,$16,$b0', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$0b,$38,$af,$38,$b0,$30,$06,$b0,$0c,$38,$a9,$f0,$f8,$0e,$d6,$ed', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$a8,$f0,$f8,$0e,$a7,$f0,$f8,$0d,$ff,$f8,$13,$f0,$d5,$f0,$f8,$0e', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$d6,$f0,$f8,$0e,$d7,$fd,$ff,$05,$6e,$f2,$f8,$09,$f4,$d8,$f0,$d9', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$55,$71,$55,$70,$55,$6f,$50,$dd,$7f,$7f,$f0,$de,$f0,$df,$f0,$e0', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f2,$18,$00,$f1,$72,$51,$73,$50,$ef,$f0,$d8,$f0,$ff,$f1,$f2,$00', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$d9,$a2,$fe,$1f,$a1,$88,$7f,$70,$a1,$89,$a2,$2c,$a2,$2d,$a2,$1a', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$f4,$f8,$c8,$67,$02,$59,$5d,$ef,$a0,$6c,$f0,$fe,$f2,$5a,$00,$d4', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$9b,$f8,$4c,$2d,$00,$2e,$ac,$e8,$0a,$2f,$ff,$6d,$50,$30,$50,$31', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$50,$36,$50,$37,$50,$3c,$40,$df,$1e,$40,$d9,$1b,$ad,$6a,$7c,$e7', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$54,$e2,$8d,$88,$94,$f8,$d4,$a0,$8c,$92,$8e,$ee,$cb,$8f,$05,$19', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$ee,$bf,$2a,$e2,$f4,$80,$88,$0a,$e6,$04,$14,$f2,$e0,$ba,$f6,$ee', Cr, Lf
                dc.b    Tab, 'dc.b', Tab,'$c0,$d3,$94,$f5,$e0,$c0,$d0,$15,$58,$85,$80,$84,$da,$'
Incomplete_Sega_Snd: ; Left Over ; Offset_0x0E8000:  
                incbin  'data\all\sega.snd'  
; $F0000 => Sounds $98 to $9F
; $F8000 => Sounds $81 to $97 
;================================ Sound Driver ================================                 
Sound_Driver: ; Offset_0x0EC000: S2B_0x0EC000:                 

                move	SR, -(A7)
                movem.l D0-A6, -(SP)
                move    #$2700, SR
                lea     ($00A11100), A3
		lea     ($00A11200), A2
		moveq   #$00, D2
		move.w  #$0100, D1 
	        move.w  D1, (A3)	
                move.w  D1, (A2)
Sound_Driver_001:                
                btst    D2, (A3)
                bne.s   Sound_Driver_001 
                jsr     Sound_Driver_002(PC)
                move.w  D2, (A2)
                move.w  D2, (A3)
                moveq   #$17, D0
Sound_Driver_Loop_01:
                dbra    D0, Sound_Driver_Loop_01
                move.w  D1, (A2)
                movem.l (SP)+,D0-A6
                move    (SP)+, SR
                rts
Sound_Driver_002:
                lea     Sound_Driver_009(PC), A6 
                move.w  #$0DF3, D7
                moveq   #$00, D6
                lea     ($00A00000), A5
                moveq   #$00, D5
                lea     ($00A00000), A4
Sound_Driver_003:                
                lsr.w   #$01, D6
                btst    #$08, D6
                bne.s   Sound_Driver_004
                jsr     Sound_Driver_007(PC)
                move.b  D0, D6
                ori.w   #$FF00, D6
Sound_Driver_004:  
                btst    #$00, D6
                beq.s   Sound_Driver_005
                jsr     Sound_Driver_007(PC)
                move.b  D0, (A5)+
                addq.w  #$01, D5
                bra.w   Sound_Driver_003 
Sound_Driver_005:                  
                jsr     Sound_Driver_007(PC)
                moveq   #$00, D4
                move.b  D0, D4 
                jsr     Sound_Driver_007(PC)
                move.b  D0, D3 
                andi.w  #$000F, D3
                addq.w  #$02, D3
                andi.w  #$00F0, D0
                lsl.w   #$04, D0
                add.w   D0, D4
                addi.w  #$0012, D4
                andi.w  #$0FFF, D4
                move.w  D5, D0
                andi.w  #$F000, D0
                add.w   D0, D4
                cmp.w   D4, D5  
                bcc.s   Sound_Driver_006
                subi.w  #$1000, D4
                bcc.s   Sound_Driver_006
                add.w   D3, D5
                addq.w  #$01, D5
Sound_Driver_Loop_02:                
                move.b  #$00, (A5)+
                addq.w  #$01, D4
                dbra    D3, Sound_Driver_Loop_02
                bra.w   Sound_Driver_003
Sound_Driver_006:                
                add.w   D3, D5
                addq.w  #$01, D5
Sound_Driver_Loop_03:                 
                move.b  $00(A4, D4), (A5)+
                addq.w  #$01, D4
                dbra    D3, Sound_Driver_Loop_03 
                bra.w   Sound_Driver_003 
Sound_Driver_007:                
                move.b  (A6)+, D0   
                subq.w  #$01, D7  
                bne.s   Sound_Driver_008
                addq.w  #$04, A7
Sound_Driver_008:      
                rts           
Sound_Driver_009:  
                dc.w    $FFF3,$3180,$1BC3,$2D01,$00FF,$3A00,$4087,$38FA
                dc.w    $C900,$FFDD,$CB01,$5628,$0218,$10FF,$F5CF,$F132
                dc.w    $0040,$F5CF,$FF79,$3201,$40F1,$C900,$00EA,$0601
                dc.w    $020B,$0203,$1103,$D9CD,$B9FF,$0BAF,$32AA,$11DD
                dc.w    $2180,$FF1B,$3A83,$1BB7,$2806,$CDFF,$BD05,$C3E9
                dc.w    $00DD,$3501,$FFCC,$F40A,$3A84,$1BB7,$C4EF,$0B0A
                dc.w    $3A8E,$4700,$370B,$3AFF,$891B,$DDB6,$0ADD,$B60B
                dc.w    $FFC4,$2106,$3A88,$1BFE,$80FF,$C45E,$063E,$FF32
                dc.w    $871B,$FFDD,$2197,$1BDD,$CB00,$7EEF,$C4A9,$01AF
                dc.w    $6900,$0606,$C5DF,$112A,$00DD,$1970,$02FE,$01DF
                dc.w    $C110,$F006,$037D,$0896,$04FE,$8A00,$AF1E,$0121
                dc.w    $0060,$731A,$A501,$77AA,$003E,$802C,$008D,$0A88
                dc.w    $0FFA,$9A09,$77A7,$043A,$A811,$B7FA,$FF05,$01D9
                dc.w    $0601,$F1FB,$C9F7,$3E80,$08E6,$00D6,$8132,$A8FF
                dc.w    $1187,$87C6,$7532,$2201,$FFC6,$0232,$2601,$F121
                dc.w    $3CFF,$01E3,$2A75,$0FED,$5B77,$FF0F,$0100,$01FB
                dc.w    $C9CD,$88FF,$0AFB,$FD21,$7901,$1100,$FF00,$7AB3
                dc.w    $28FC,$10FE,$F3DB,$3E2A,$0900,$7E07,$3310,$E60F
                dc.w    $7F32,$5101,$08FD,$8600,$0F00,$6F08,$41FB,$002A
                dc.w    $10F5,$F12D,$12AF,$417E,$231B,$3710,$6F3B,$16FB
                dc.w    $F700,$C338,$1610,$0204,$0810,$FF20,$4080,$FFFE
                dc.w    $FCF8,$F0FF,$E0C0,$151C,$0000,$3F1C,$FF69,$1CBD
                dc.w    $1CE7,$1C11,$1DFF,$111D,$3B1D,$0000,$651D,$FF8F
                dc.w    $1DB9,$1DE3,$1D0D,$1EFF,$0D1E,$DD35,$0BC0,$DD6E
                dc.w    $FF03,$DD66,$047E,$23FE,$E0FF,$3806,$CDDF,$0BC3
                dc.w    $B301,$FFB7,$F2D5,$01DD,$770D,$7EFF,$B7F2,$D401
                dc.w    $DD7E,$0CDD,$FF77,$0BC3,$D801,$23CD,$6B7F,$02DD
                dc.w    $7503,$DD74,$0470,$00FF,$56C0,$DD7E,$0DFE,$80C8
                dc.w    $FFD6,$8187,$C68D,$32F3,$01DF,$ED4B,$8D0F,$79FB
                dc.w    $0078,$32B7,$2901,$C997,$1020,$0D70,$00A6,$FFCD
                dc.w    $1902,$CDDB,$03C3,$9CFF,$0BCD,$A502,$CDBD,$02C3
                dc.w    $D3EB,$039B,$1370,$008E,$A117,$2302,$FFF5,$CDAC
                dc.w    $0BF1,$B7F2,$41FF,$02CD,$4702,$7EB7,$FA7C,$FD02
                dc.w    $C211,$C37C,$02D6,$8028,$FF14,$DD86,$0587,$C61B
                dc.w    $32FF,$5602,$ED5B,$1B03,$DD73,$DF0D,$DD72,$0EC9
                dc.w    $7000,$CEAF,$FEB1,$10DD,$770E,$C94F,$DD46,$DF02
                dc.w    $1007,$DD77,$BB11,$C981,$A3C3,$6FC5,$15BA,$1270
                dc.w    $0066,$D010,$10BF,$DD77,$0FDD,$3609,$FDF0,$00FF
                dc.w    $5EC8,$DD6E,$11DD,$6612,$FFC3,$180E,$DD7E,$0FB7
                dc.w    $C8AF,$DD35,$0FC0,$4D21,$D1FE,$F07E,$BFC2,$A305
                dc.w    $C3AC,$0BA0,$2000,$F94E,$9B21,$8820,$7E13,$B728
                dc.w    $0497,$DD35,$13EB,$1014,$9A10,$8C21,$23FF,$7EDD
                dc.w    $7714,$DD7E,$16B7,$F720,$0F23,$CA21,$16DD,$7E15
                dc.w    $DFED,$44DD,$7715,$EB10,$16DD,$FF6E,$17DD,$6618
                dc.w    $0600,$DDFF,$4E15,$CB79,$CA0B,$0306,$FFFF,$09DD
                dc.w    $7517,$DD74,$18FF,$DD4E,$0DDD,$460E,$09EB,$FFE9
                dc.w    $5E02,$8402,$AB02,$D3FF,$02FE,$022D,$035C,$038F
                dc.w    $FF03,$C503,$FF03,$3C04,$7CFF,$045E,$0A84,$0AAB
                dc.w    $0AD3,$FF0A,$FE0A,$2D0B,$5C0B,$8FFF,$0BC5,$0BFF
                dc.w    $0B3C,$0C7C,$FF0C,$5E12,$8412,$AB12,$D3FF,$12FE
                dc.w    $122D,$135C,$138F,$FF13,$C513,$FF13,$3C14,$7CFF
                dc.w    $145E,$1A84,$1AAB,$1AD3,$FF1A,$FE1A,$2D1B,$5C1B
                dc.w    $8FFF,$1BC5,$1BFF,$1B3C,$1C7C,$FF1C,$5E22,$8422
                dc.w    $AB22,$D3FF,$22FE,$222D,$235C,$238F,$FF23,$C523
                dc.w    $FF23,$3C24,$7CFF,$245E,$2A84,$2AAB,$2AD3,$FF2A
                dc.w    $FE2A,$2D2B,$5C2B,$8FFF,$2BC5,$2BFF,$2B3C,$2C7C
                dc.w    $FF2C,$5E32,$8432,$AB32,$D3FF,$32FE,$322D,$335C
                dc.w    $338F,$FF33,$C533,$FF33,$3C34,$7CFF,$345E,$3A84
                dc.w    $3AAB,$3AD3,$FF3A,$FE3A,$2D3B,$5C3B,$8FFF,$3BC5
                dc.w    $3BFF,$3B3C,$3C7C,$FD3C,$AC23,$5E0D,$DD56,$0E7A
                dc.w    $EFB3,$CA42,$05CC,$1226,$00DD,$FF6E,$19CB,$7D28
                dc.w    $0226,$FFFF,$194C,$DD7E,$01E6,$03C6,$FFA4,$D74D
                dc.w    $D604,$D7C9,$56FF,$0326,$03F9,$02CE,$02A5,$FF02
                dc.w    $8002,$5C02,$3A02,$1AFF,$02FB,$01DF,$01C4,$01AB
                dc.w    $FF01,$9301,$7D01,$6701,$53FF,$0140,$012E,$011D
                dc.w    $010D,$FF01,$FE00,$EF00,$E200,$D6FF,$00C9,$00BE
                dc.w    $00B4,$00A9,$FF00,$A000,$9700,$8F00,$87FF,$007F
                dc.w    $0078,$0071,$006B,$FF00,$6500,$5F00,$5A00,$55FF
                dc.w    $0050,$004B,$0047,$0043,$FF00,$4000,$3C00,$3900
                dc.w    $36FF,$0033,$0030,$002D,$002B,$FF00,$2800,$2600
                dc.w    $2400,$22FF,$0020,$001F,$001D,$001B,$FF00,$1A00
                dc.w    $1800,$1700,$167F,$0015,$0013,$0012,$0023,$10FC
                dc.w    $3E00,$EE15,$B404,$CD04,$05C3,$DB4C,$05FE,$1147
                dc.w    $0501,$2110,$05FE,$072F,$0BC3,$BE04,$B7F2,$D76F
                dc.w    $04CD,$DD04,$292A,$8138,$3823,$FF0A,$32EC,$04ED
                dc.w    $5B0A,$04B6,$4628,$3EFF,$5223,$C3A3,$D830,$0EF7
                dc.w    $7E20,$38CE,$33DD,$7E00,$E6F9,$06DD,$3AEB,$30FE
                dc.w    $E020,$023E,$FFC0,$477D,$E60F,$B032,$11DF,$7F7D
                dc.w    $CB3C,$1F22,$501F,$1FF3,$E63F,$1E50,$4C22,$C9DD
                dc.w    $7E08,$F696,$2046,$0635,$5128,$2721,$A9FF,$0F3D
                dc.w    $875F,$1600,$197E,$FF23,$66DD,$8609,$6F8C,$95FF
                dc.w    $677E,$DD34,$09B7,$F274,$FF05,$FE80,$282B,$80FE
                dc.w    $109F,$3802,$3E0F,$47FE,$4376,$2120,$DD0A,$EB30
                dc.w    $B0C6,$102C,$527E,$10B7,$B728,$F093,$2120,$EAEB
                dc.w    $1009,$DC4C,$21CF,$1101,$F61F,$2C51,$2111,$FF7F
                dc.w    $369F,$36BF,$36DF,$36FF,$FFC9,$FACD,$05FE,$02C8
                dc.w    $FFDD,$3603,$02CD,$700A,$C3AF,$B105,$DDE5,$B150
                dc.w    $006C,$0106,$EF07,$CDFA,$059F,$0CDD,$213B,$671D
                dc.w    $0603,$C750,$2800,$DDE1,$4C21,$FB7E,$28BA,$0156
                dc.w    $2013,$DD4E,$DD07,$EB33,$B4D7,$C535,$50CD,$76BB
                dc.w    $0DC1,$B602,$10DA,$C95F,$02C0,$FF21,$891B,$3A80
                dc.w    $1B4F,$06FF,$037E,$5F36,$0023,$FE81,$FF38,$22D6
                dc.w    $A030,$057B,$32FF,$881B,$C9E5,$C630,$6FCE,$BD0F
                dc.w    $5450,$B938,$054F,$2B61,$E1FF,$79B7,$F832,$801B
                dc.w    $C910,$FFD3,$C9B7,$CA88,$0AF0,$DDFF,$3608,$80FE
                dc.w    $A0DA,$E306,$FFFE,$A0D8,$FEE1,$DA95,$08FF,$FEF9
                dc.w    $D8FE,$FED0,$D6F9,$FF87,$8732,$8206,$18FE,$C3FF
                dc.w    $F609,$00C3,$9706,$00C3,$DF07,$0B00,$C314,$7B60
                dc.w    $880A,$3F00,$3E2B,$0E80,$DF9F,$03DE,$017E,$A902
                dc.b    $21
;0x000EC70D Sega_Pointer 8C9E
Sega_Snd_Ptr    equ     (Sega_Snd&$FFFF)|$8000                               
                dc.w    ((Sega_Snd_Ptr>>$08)|(Sega_Snd_Ptr<<$08))&$FFFF 
                dc.b    $11
                dc.w    $BA30,$2D12,$F70E,$807E,$0F00,$2300
                dc.w    $060C,$BB10,$FE5F,$00B9,$2010,$A667,$1BDF,$7AB3
                dc.w    $C2B8,$0628,$003A,$95FF,$1B4F,$3E2B,$DFC9,$32A9
                dc.w    $FF11,$FE98,$203B,$3A91,$1B67,$B720,$3C6C,$01B6
                dc.w    $0006,$0A70,$0055,$960A,$60F8,$D952,$0670,$00BE
                dc.w    $EB61,$F711,$371E,$3000,$01BB,$01ED,$DDB0,$AE00
                dc.w    $911B,$AF45,$6018,$07FD,$AF0A,$7032,$901B,$CDAE
                dc.w    $0AF3,$3AA9,$F800,$4850,$2188,$1119,$BF7E,$3293
                dc.w    $1B21,$6927,$7047,$BFE6,$8032,$961B,$7847,$5121
                dc.b    $EF
;0x000EC79D Music_Pointers 0080                
Snd_81To97_Ptr  equ     (Music_81_To_97&$FFFF)|$8000                               
                dc.w    ((Snd_81To97_Ptr>>$08)|(Snd_81To97_Ptr<<$08))&$FFFF                 
                dc.b    $19
                dc.w    $E528,$00E1,$5E23,$FF56,$D5DD,$E1DD
                dc.w    $5E00,$DDFF,$5601,$ED53,$8C1B,$DD7E,$FF05,$3292
                dc.w    $1B47,$3A94,$1BFF,$B778,$2803,$3A93,$1B32,$FF82
                dc.w    $1B32,$811B,$DDE5,$E1F7,$1106,$000F,$5002,$B7CA
                dc.w    $F9DF,$0747,$FDE5,$FD6D,$014E,$04FF,$118B,$08FD
                dc.w    $CB00,$FE1A,$FF13,$FD77,$01FD,$7102,$FDFF,$360A
                dc.w    $2AFD,$3607,$C0FD,$FF36,$0B01,$D5C5,$FD7D,$C6FF
                dc.w    $035F,$FD8C,$9357,$EDA0,$FCAB,$73B6,$00FD,$19C1
                dc.w    $D110,$CCFB,$FDE1,$7470,$FE07,$2004,$AFFF,$4F18
                dc.w    $183E,$280E,$06DF,$FF3E,$420E,$FF06,$04EF,$C6FF
                dc.w    $0410,$FB3E,$B60E,$C0EF,$BF3E,$804F,$3295,$1BCD
                dc.w    $60DD,$BF7E,$03B7,$CA45,$087B,$72BD,$C51C,$8271
                dc.w    $9287,$7F9D,$7FAB,$7123,$7E2F,$23FD,$7708,$B375
                dc.w    $CABC,$70F0,$62F4,$B601,$E951,$1CEB,$30B7,$FA60
                dc.w    $08DF,$D602,$8718,$0627,$501F,$E6FF,$0FC6,$8932
                dc.w    $6C08,$2A89,$7B01,$CBEA,$61DA,$DD21,$C17A,$00C4
                dc.w    $1E20,$0A60,$F9DD,$50F0,$406C,$80C9,$06FE,$6711
                dc.w    $0506,$80A0,$C04F,$DDFF,$7E11,$DDB6,$04DD,$B60E
                dc.w    $FFC2,$7809,$79FE,$B520,$0FFF,$3AAB,$11B7,$2002
                dc.w    $0ECE,$FF2F,$32AB,$11C3,$C508,$79FF,$FEA7,$200A
                dc.w    $3AAC,$11B7,$EDC0,$AE00,$AC11,$9F0C
                dc.b    $21
;0x000EC8E9 Sfx_Pointers 00F0
Sfx_Pointers    equ     (Sfx_A0_To_F9&$FFFF)|$8000                               
                dc.w    ((Sfx_Pointers>>$08)|(Sfx_Pointers<<$08))&$FFFF 
                dc.b    $D7
                dc.w    $79D6,$A047,$556F,$4670,$23ED,$FF53,$6809,$4E23
                dc.w    $4623,$C5BF,$AF32,$5F09,$E523,$2920,$01DD,$0949
                dc.w    $80C3,$1A09,$DF80,$FEC0,$B720,$0CF5,$9952,$EE20
                dc.w    $1E50,$F1D6,$4E86,$2009,$5981,$D67A,$502B,$09FF
                dc.w    $DD2A,$9901,$DD5D,$DD54,$FFD5,$6B62,$3600,$1301
                dc.w    $29DF,$00ED,$B0D1,$E1AB,$71C1,$C5AF,$DD71,$02DD
                dc.w    $0C80,$DD95,$707B,$EFC6,$015F,$8AA9,$773E,$00B7
                dc.w    $F8EF,$1099,$7023,$10DD,$731C,$DD72,$7F1D,$C105
                dc.w    $C2EF,$08C3,$2901,$AE46,$60CD,$7809,$EF63,$C570
                dc.w    $01CA,$B3EC,$09F5,$6243,$81BF,$091D,$22DD,$69E5
                dc.w    $4980,$5480,$AA16,$9089,$01E7,$62BC,$4E20,$0063
                dc.w    $DDE1,$C3EC,$8690,$A389,$058B,$904E,$86D3,$959C
                dc.w    $1251,$3C50,$1BF6,$1E50,$DDE1,$B602,$C105,$1091
                dc.w    $FFC9,$CD7D,$093E,$0332,$85DF,$1B3E,$2832,$840C
                dc.w    $7097,$1B3F,$3294,$1BC9,$3A85,$3500,$BB20,$F505
                dc.w    $EB10,$044D,$60DD,$3605,$03F8,$BB50,$6382,$E852
                dc.w    $11DD,$3406,$F2FD,$39E6,$61BE,$1805,$C5CD,$E7EE
                dc.w    $0565,$E206,$03E8,$5434,$063E,$BF10,$DDBE,$06D2
                dc.w    $5E20,$A308,$9DC5,$3A50,$CD7C,$0506,$65E5,$503E
                dc.w    $FF28,$0603,$480D,$DFCB,$D1DF,$DF10,$F83E,$30D0
                dc.w    $7060,$DFA7,$EF3C,$10F1,$0086,$6179,$E171,$27F7
                dc.w    $0E00,$DF30,$0011,$811B,$366F,$0001,$B602,$0672
                dc.w    $881B,$B554,$D630,$00DD,$46EE,$2011,$4CA0,$14DD
                dc.w    $FB4E,$104C,$A009,$DD4E,$0AC5,$FA84,$A6BA,$0570
                dc.w    $C1DD,$7009,$DD7B,$710A,$C2A0,$14DD,$7110,$C2A0
                dc.w    $AF00,$DD71,$1191,$A83A,$6872,$21FD,$A2E1,$6334
                dc.w    $1910,$FCC9,$0639,$80D8,$6164,$7028,$0F18,$EC20
                dc.w    $F7A2,$AB92,$1B02,$000B,$6773,$78F5,$9132,$FF39
                dc.w    $1E32,$381E,$7832,$4BEF,$1EC9,$3A8F,$FB93,$0FC9
                dc.w    $3AFD,$90DA,$600D,$3A97,$1BE6,$FBDE,$F290,$AF32
                dc.w    $8E1B,$EB10,$10DD,$F736,$0F02,$0DAA,$08DD,$3506
                dc.w    $EA27,$A8EB,$33A4,$1257,$B0DD,$7E06,$1663,$53C5
                dc.w    $4750,$A7E1,$E551,$6B53,$9750,$DFF0,$4F3E,$28DF
                dc.w    $89B2,$14C0,$FF3E,$28DD,$4E01,$DFC9,$3AD5,$96DA
                dc.w    $6010,$8A6C,$C99F,$0CC9,$D6BD,$E06A,$60E9,$0B7E
                dc.w    $236F,$6052,$AF0C,$00C3,$70DA,$B074,$DAB0,$78FA
                dc.w    $DAB0,$8BDA,$B00C,$0D00,$C310,$AAEE,$B019,$EEB0
                dc.w    $1FEE,$B026,$EEB0,$2DAA,$EEB0,$34EE,$B049,$EEB0
                dc.w    $50EE,$B056,$FAEE,$B058,$EEB0,$0D0E,$00C3,$36AA
                dc.w    $1AC0,$3C1A,$C0D0,$1AC0,$E01A,$C0E6,$EA1A,$C0EA
                dc.w    $1AC0,$ED1A,$C00B,$0F00,$37C3,$240F,$FDF1,$7EF8
                dc.w    $CC12,$8380,$7F07,$E637,$B1DD,$7707,$8380,$FEF9
                dc.w    $53C9,$DD77,$19C9,$3286,$7640,$B04E,$0AED,$20E5
                dc.w    $E109,$CD81,$FB0C,$0CC6,$A0C9,$2137,$1E11,$3C01
                dc.w    $74C6,$6197,$1BF6,$04F2,$902F,$B086,$95B0,$914F
                dc.w    $F360,$6380,$E856,$A190,$0637,$81DD,$77F4,$6156
                dc.w    $204B,$A001,$6A42,$33A4,$0E4D,$2171,$81A8,$C307
                dc.w    $63E5,$AE00,$B58E,$EB91,$900C,$7091,$1BC9,$64C1
                dc.w    $FDC1,$3C01,$7702,$C9DD,$8606,$B6AB,$C0C3,$E7F0
                dc.w    $11E6,$2B5D,$C00F,$F7DD,$7710,$FDC0,$05DD,$7705
                dc.w    $65C9,$6773,$C90D,$A1E0,$6577,$026B,$816C,$E551
                dc.w    $FFC2,$C9AF,$B080,$2BC9,$0BD1,$FB08,$4FCC,$12E5
                dc.w    $CD67,$0DE1,$BFC9,$3AAA,$11B7,$7955,$B06E,$FF1C
                dc.w    $DD66,$1D18,$032A,$8CFF,$1BE5,$4F06,$0087,$6F60
                dc.w    $FF29,$295D,$5429,$1909,$D1EE,$4B50,$32BB,$0D54
                dc.w    $C4B0,$D7D6,$BF80,$0604,$4E23,$D7D5,$70F9,$DFF5
                dc.w    $C610,$0610,$89D4,$C624,$FEF4,$50D7,$DD75,$1EDD
                dc.w    $741F,$FF3E,$00E6,$07C6,$DF5F,$16FF,$0D1A,$DD77
                dc.w    $1A5F,$DD56,$FB06,$F187,$D1CB,$1B30,$05F5,$EF7A
                dc.w    $814F,$F18B,$D1F0,$C908,$1ECD,$D00C,$0E0E,$0FA1
                dc.w    $219B,$21CF,$10EB,$5E1A,$EB33,$40B6,$D0CB,$7AC0
                dc.w    $FFE5,$DD6E,$1EDD,$661F,$CDF9,$CC52,$D070,$00DE
                dc.w    $2BDD,$7511,$FFDD,$7412,$DD7D,$C613,$5F3D,$DDA8
                dc.w    $767E,$23CB,$3FD8,$2051,$203F,$17DD,$7718,$C92B
                dc.w    $FBD1,$4C21,$F9BE,$F111,$A121,$200C,$3A87,$1B2F
                dc.w    $B7FA,$CE0E,$1E20,$1870,$8155,$D167,$F2CD,$0E0D
                dc.w    $7142,$82A5,$0E8C,$957B,$770E,$9694,$56CA,$A00E
                dc.w    $E251,$9C9B,$9ACA,$5DE1,$C1C1,$21D0,$4E86,$B4F8
                dc.w    $62E5,$C69F,$8EE3,$3601,$E0DD,$77A6,$6F01,$56C0
                dc.w    $2C51,$24E1,$9E45,$D1C9,$FF66,$6FC9,$4E23,$E5C6
                dc.w    $20F9,$6FDE,$301C,$9019,$7EB7,$2001,$DF71,$35E1
                dc.w    $2805,$CD81,$C923,$FD23,$5820,$7E0A,$D602,$DD77
                dc.w    $FF0A,$4623,$EBDD,$856F,$DDFE,$5350,$7323,$7260
                dc.w    $69C9,$3EBF,$880E,$0FDF,$3E8C,$14F0,$2B57,$C980
                dc.w    $701F,$F568,$1FF0,$602A,$F1A4,$2CF0,$1FF6,$7F31
                dc.w    $F91F,$F180,$4EFC,$90FE,$5EF1
               ;dc.w    $00D0,$9402,$94D2,$23FF,$076B,$EA68,$02D3,$EC50
               ;dc.w    $FF0A,$B7D9,$B50B,$6CE5,$FFFF,$04
DAC01_Offset    equ     (DAC_Sample01&$FFFF)|$8000          
DAC01_Size      equ     DAC_Sample01_End-DAC_Sample01 
DAC02_Offset    equ     (DAC_Sample02&$FFFF)|$8000          
DAC02_Size      equ     DAC_Sample02_End-DAC_Sample02   
DAC03_Offset    equ     (DAC_Sample03&$FFFF)|$8000          
DAC03_Size      equ     DAC_Sample03_End-DAC_Sample03  
DAC04_Offset    equ     (DAC_Sample04&$FFFF)|$8000          
DAC04_Size      equ     DAC_Sample04_End-DAC_Sample04   
DAC05_Offset    equ     (DAC_Sample05&$FFFF)|$8000          
DAC05_Size      equ     DAC_Sample05_End-DAC_Sample05  
DAC06_Offset    equ     (DAC_Sample06&$FFFF)|$8000          
DAC06_Size      equ     DAC_Sample06_End-DAC_Sample06        
                dc.w    ((DAC01_Offset>>$08)|(DAC01_Offset<<$08))&$FFFF               
                dc.w    ((DAC01_Size>>$08)|(DAC01_Size<<$08))&$FFFF                 
                dc.w    ((DAC02_Offset>>$08)|(DAC02_Offset<<$08))&$FFFF 
                dc.b    DAC02_Size&$FF,$FF,(DAC02_Size>>$08)&$FF
                dc.w    ((DAC03_Offset>>$08)|(DAC03_Offset<<$08))&$FFFF 
                dc.w    ((DAC03_Size>>$08)|(DAC03_Size<<$08))&$FFFF 
                dc.w    ((DAC04_Offset>>$08)|(DAC04_Offset<<$08))&$FFFF 
                dc.b    DAC04_Size&$FF,$FF,(DAC04_Size>>$08)&$FF
                dc.w    ((DAC05_Offset>>$08)|(DAC05_Offset<<$08))&$FFFF               
                dc.w    ((DAC05_Size>>$08)|(DAC05_Size<<$08))&$FFFF 
                dc.w    ((DAC06_Offset>>$08)|(DAC06_Offset<<$08))&$FFFF 
                dc.b    DAC06_Size&$FF,$FF,(DAC06_Size>>$08)&$FF                  
                dc.b    $81
                dc.w    $1782,$0183,$1784,$FF04,$851B
                dc.w    $860A,$0000,$85FF,$1285,$1585,$1C85,$1D86,$FF0A
                dc.w    $860E,$8613,$C30F,$DAFF,$0FE1,$0FF2,$0F0C,$10FD
                dc.w    $FF0F,$3610,$5210,$7A10,$8BBF,$10C9,$10E5,$1065
                dc.w    $8041,$01FF,$0101,$0202,$0203,$0303,$FF04,$0404
                dc.w    $0505,$0506,$06FF,$0607,$8000,$0204,$0608,$8310
                dc.w    $80B2,$F1B8,$F1BE,$F1C4,$F0C6,$F000,$2102,$D6F2
                dc.w    $7E80,$BAF0,$B7F0,$02B4,$F081,$4001,$00CE,$F0FA
                dc.w    $F5B4,$F004,$08EE,$F1EE,$F1BA,$F002,$1A02,$04F9
                dc.w    $F40D,$07BA,$F7DE,$F127,$0A19,$0320,$BDF0,$BEF2
                dc.w    $C1F2,$DBF1,$C6F0,$01E2,$F03C,$00FF,$0809,$0A0B
                dc.w    $0C0D,$0E0F,$00F9,$FF89,$0F0D,$0A18,$0720,$01BD
                dc.w    $F0EB,$F30B,$0900,$B006,$ECF1,$8F0F,$9F09,$A10F
                dc.w    $0319,$5502,$171C,$E05A,$022B,$1C5F,$023F,$1C66
                dc.w    $0103,$8080,$FF81,$8283,$8485,$8687,$88FF,$898A
                dc.w    $8B8C,$8D8E,$8F8F,$BF90,$9192,$9394,$9468,$0305
                dc.w    $FF05,$0772,$7326,$1508,$FF03,$0520,$7E1F,$8412
                dc.w    $7902 
                
                cnop    $0000,$1000                 
DAC_Sample01:
                dc.w    $03BC,$7FD5,$2DD5,$3BF7,$D0F7,$6ED7,$EFE8,$D64E
                dc.w    $E77E,$96E6,$53D5,$41D5,$0000,$0000,$D4A1,$EEDC
                dc.w    $4FD5,$DDDE,$CCB9,$0000,$04AB,$259B,$34C3,$244B
                dc.w    $A434,$4495,$1443,$4534,$2444,$3444,$2432,$4342
                dc.w    $B431,$93B3,$A4C0,$3BB2,$C1BB,$BABB,$BCBA,$BCBB
                dc.w    $CCBB,$CBCB,$CBBB,$CCAC,$ABBB,$CB9A,$BBB0,$AB90
                dc.w    $A190,$A320,$0330,$2322,$3333,$3133,$3333,$3333
                dc.w    $3233,$2343,$B242,$3222,$1321,$1122,$1110,$9039
                dc.w    $AA22,$A9A1,$00AA,$009A,$9AB0,$90BA,$A9B2,$ABA1
                dc.w    $0BA0,$1CA3,$A09A,$A02A,$900A,$2A02,$0A02,$A20A
                dc.w    $2B22,$2AA2,$002B,$993A,$A009,$A00B,$2AA2,$9B1A
                dc.w    $B01A,$9AB3,$1BC2,$2092,$0BA4,$2B12,$1102,$3B04
                dc.w    $3AB3,$24A2,$B433,$C342,$A409,$04A2,$203A,$211A
                dc.w    $3A0A,$32BC,$3100,$0AB2,$1B92,$0AA2,$AB39,$BB23
                dc.w    $BB09,$B902,$BC94,$BB91,$A901,$AA03,$9B20,$0B22
                dc.w    $2CA4,$9B9B,$029A,$A22A,$9121,$2210,$B4A2,$2A03
                dc.w    $1010,$9221,$39A0,$3299,$23BA,$23AA,$2A91,$0919
                dc.w    $A30A,$921B,$13AA,$A301,$A903,$9193,$A922,$0210
                dc.w    $001A,$23B0,$A209,$19A9,$91B0,$2A99,$001A,$A12A
                dc.w    $9992,$B21A,$B12A,$BA20,$B12A,$AA30,$A2A0,$291A
                dc.w    $12AA,$20A2,$2A92,$2A30,$0002,$2990,$0292,$B13B
                dc.w    $1A3B,$22A2,$21A1,$3A12,$011A,$1929,$093A,$B24B
                dc.w    $AA30,$A31A,$11A2,$A92A,$0099,$AA4B,$BB32,$3B2A
                dc.w    $219B,$23AA,$10AA,$03BA,$A190,$AB20,$AA90,$4CB3
                dc.w    $3BA0,$0939,$AA22,$9920,$A30A,$933C,$339A,$32B0
                dc.w    $2110,$0920,$A21A,$922A,$A3B2,$0A19,$13AC,$24CA
                dc.w    $31AA,$310B,$2292,$29A9,$24BB,$0320,$20A3,$3999
                dc.w    $331B,$0021,$3B00,$0A99,$00B0,$9091,$CA32,$AAA9
                dc.w    $2A02,$A901,$2AB1,$2AB2,$1AA2,$B101,$A991,$90A1
                dc.w    $991A,$21A9,$A201,$1A0A,$23B1,$20A2,$2A11,$1A22
                dc.w    $9102,$2A13,$0001,$1A13,$92A3,$31B3,$30A3,$292A
                dc.w    $109A,$2999,$0BA0,$39BA,$2A23,$B923,$BA33,$BA29
                dc.w    $B02A,$B10B,$0090,$190A,$220C,$3300,$0B99,$12AB
                dc.w    $11AB,$229A,$3AA3,$1A00,$0019,$2A91,$3AA0,$2091
                dc.w    $1AA2,$2991,$9012,$0A11,$2A09,$912A,$A121,$AA30
                dc.w    $0200,$2122,$9931,$2010,$1022,$A011,$19A1,$A202
                dc.w    $A900,$9009,$0A19,$A91A,$2A9A,$019A,$10A9,$1990
                dc.w    $019A,$A1A9,$90A0,$2A09,$1090,$1909,$2091,$9001
                dc.w    $9011,$0A10,$0020,$A100,$0190,$1091,$021A,$1212
                dc.w    $0001,$1200,$1020,$0119,$1191,$1001,$0010,$0001
                dc.w    $0900,$0919,$1900,$0009,$9100,$9990,$0991,$A900
                dc.w    $9900,$9009
DAC_Sample01_End: 
DAC_Sample02:   
                dc.w    $3567,$F472,$F2E7,$D2DD,$DEDC,$DDAD,$55FD,$7F27
                dc.w    $7FD8,$4FF6,$66ED,$7FF5,$66DD,$6F56,$6E54,$69E6
                dc.w    $CD6F,$65E6,$4E34,$7581,$57DC,$6343,$DEF7,$20CD
                dc.w    $C0D4,$DBCB,$0AA0,$2901,$0ACE,$EC35,$5545,$5555
                dc.w    $2433,$4045,$654E,$DDED,$DEE4,$7ED7,$2E56,$CE66
                dc.w    $E492,$E75A,$DDE1,$DCCB,$CCCE,$45DD,$E675,$ECBE
                dc.w    $564C,$453E,$B66E,$A47D,$F56D,$E415,$3456,$5E36
                dc.w    $6CDE,$4DDD,$DDE4,$CD54,$DE5D,$ED46,$7536,$C6C6
                dc.w    $9FC4,$ED44,$EDB7,$2E46,$D464,$5034,$E3D4,$914B
                dc.w    $5E5B,$DDEB,$E465,$2655,$BEC6,$CDD5,$CED6,$CDE6
                dc.w    $63DE,$D4DC,$5554,$3ED5,$D66C,$D315,$4444,$5C55
                dc.w    $44E1,$6EDD,$55EE,$D6DE,$C605,$56A4,$AAED,$454E
                dc.w    $C2BB,$DC6D,$DDBE,$34C5,$2565,$D555,$73ED,$41CC
                dc.w    $ECDD,$B51D,$DBB2,$57DD,$C5C5,$5D66,$EC52,$6DED
                dc.w    $5D1E,$55EC,$4E4B,$C756,$DE26,$EBAE,$404B,$4DCE
                dc.w    $45DC,$63D5,$6601,$46BD,$E64E,$CCED,$DF75,$4CE7
                dc.w    $CE7C,$BCEB,$5A7D,$D66E,$DC6E,$EDD2,$4ACD,$D56E
                dc.w    $A6C5,$5C55,$E64D,$DCD4,$65D5,$55CE,$D36E,$44EB
                dc.w    $D51B,$D4CC,$37EE,$A436,$D2D4,$6DD6,$5AB4,$AD4A
                dc.w    $EBD3,$AED4,$C356,$BC66,$E5CC,$E53B,$D462,$4C04
                dc.w    $DD5C,$54E4,$413E,$56AD,$E4D4,$6CC4,$EC42,$5355
                dc.w    $B52A,$40E3,$BE05,$55CD,$AD5D,$DB5C,$5EB5,$D6D6
                dc.w    $2DC5,$65ED,$444C,$CCA6,$A0DD,$64E4,$D5C4,$D156
                dc.w    $ADC2,$E3CC,$A4CE,$EA56,$65BC,$2636,$C5ED,$66ED
                dc.w    $C5EE,$64AD,$DCAF,$666E,$E55D,$565C,$3646,$EDCC
                dc.w    $D53A,$D4DD,$55D4,$CEC5,$DE6C,$53A4,$C36C,$5D3A
                dc.w    $C644,$4AE5,$CD21,$BB4E,$5BD5,$0DC3,$6CD5,$55DD
                dc.w    $C4DE,$35C4,$5001,$665C,$EC54,$3D4D,$34CE,$B2A4
                dc.w    $D3DC,$CEA5,$65C4,$44B6,$623C,$DE25,$5EED,$94A2
                dc.w    $EB4C,$41D6,$1305,$653D,$5345,$5DCC,$24D4,$DECD
                dc.w    $DCCC,$E56A,$1356,$D956,$CC6D,$4429,$CBCC,$DCDA
                dc.w    $4DD1,$456E,$9515,$4AD4,$4AC2,$4CDA,$D4AD,$4A65
                dc.w    $DC5D,$3D44,$4444,$ABD2,$5E4E,$6DBD,$D55D,$DAD6
                dc.w    $6CC5,$6E24,$2454,$A14D,$0C25,$B3DC,$D4EC,$C1B9
                dc.w    $0DB5,$644D,$3553,$325B,$CC34,$DDE6,$5DDC,$9CB2
                dc.w    $46CD,$EB7A,$22C4,$DC55,$CED1,$C29D,$45C3,$535B
                dc.w    $5B65,$4CDC,$AE6B,$DCDE,$54D2,$332C,$945D,$4454
                dc.w    $04B3,$425D,$DCCC,$C5DE,$B64A,$D4CB,$454A,$CCC4
                dc.w    $5CD3,$64B3,$DD94,$C354,$E904,$BDE2,$6644,$D393
                dc.w    $B53A,$A42C,$DBD2,$C49C,$D5C4,$04B9,$4454,$DCCD
                dc.w    $D5DD,$4556,$DCB5,$2A50,$B3C5,$3CBC,$C044,$DDE5
                dc.w    $6BEB,$ACD5,$2A45,$5D94,$61DA,$3554,$5BDC,$A325
                dc.w    $CDEC,$0D4B,$1CC5,$1C34,$3435,$5CDC,$D5BA,$4CDC
                dc.w    $443B,$46D9,$5DB5,$9CCB,$0BCC,$5A24,$AB2B,$654E
                dc.w    $C4DC,$C56D,$C44A,$BDD5,$0DCA,$4BB2,$44CC,$4CD6
                dc.w    $9CD2,$4CC4,$694C,$3A5B,$1D4C,$334B,$BCAC,$44DA
                dc.w    $CB42,$A2A4,$BD55,$9C5A,$2C45,$5DD4,$D3CC,$C54D
                dc.w    $D5AC,$2A13,$4CD4,$9CAD,$53B6,$3C4C,$B42A,$BA4C
                dc.w    $DCDA,$64B0,$B034,$523C,$A62D,$DC33,$DC4D,$C53D
                dc.w    $C454,$10A5,$BCC5,$594C,$DC4C,$DDA2,$49A3,$B50B
                dc.w    $244C,$E955,$DC44,$5234,$DB5A,$D2C5,$AD49,$354C
                dc.w    $31C4,$2D45,$DC9D,$C92C,$BCA4,$5B10,$413C,$05C4
                dc.w    $55DE,$4539,$BA4A,$C0CB,$42CA,$A2A4,$39BB,$3544
                dc.w    $BBE2,$C254,$9BC4,$1D44,$CB92,$D431,$2AC1,$0345
                dc.w    $4DD4,$4ACB,$DAB1,$3C45,$43C3,$25CD,$55DD,$4035
                dc.w    $9C4C,$432D,$D4D5,$430A,$DB12,$D043,$3AAC,$DB40
                dc.w    $3123,$C45A,$A423,$235C,$AB4D,$BBBB,$44BD,$3D34
                dc.w    $0D34,$44C5,$222C,$B04C,$C49B,$C04A,$3233,$CA24
                dc.w    $ACB3,$4ABD,$CC1C,$ACC4,$4C56,$42C3,$4CAC,$55BD
                dc.w    $4CC4,$2922,$A2DD,$1531,$43AC,$2C34,$52CC,$C09A
                dc.w    $DC5C,$BBD0,$5254,$4DA5,$CDC1,$4C0C,$B455,$43AD
                dc.w    $B5BC,$2ACB,$4A15,$4CC0,$40C2,$2249,$CBA2,$55CC
                dc.w    $4BC9,$CCB2,$BDD2,$2C43,$4AC4,$5534,$1CD3,$4C4B
                dc.w    $C24C,$BCBB,$4A43,$C332,$3442,$AA24,$ADBB,$CDC2
                dc.w    $4453,$A4C2,$32B2,$BBB3,$35CC,$914C,$C3CB,$53CC
                dc.w    $CA2A,$CB2A,$C52C,$243C,$CA55,$3DD1,$554C,$043B
                dc.w    $20CB,$D244,$2394,$9DD4,$9CCC,$BB45,$354A,$BAA1
                dc.w    $B1BC,$13C1,$CC50,$43C4,$4CA2,$0CD4,$B45B,$CDB4
                dc.w    $5CB4,$4102,$33C0,$B344,$B292,$BCCD,$192C,$A341
                dc.w    $B332,$52AB,$CB90,$C45A,$BCC5,$29BC,$CABC,$4345
                dc.w    $C44C,$A45C,$4B41,$ACCB,$BDCC,$B2A1,$4442,$C342
                dc.w    $AC55,$ADC4,$4239,$CCCA,$C24C,$AB1B,$539B,$94CB
                dc.w    $BA24,$415C,$D9B2,$54AB,$D203,$BD45,$AA4B,$429C
                dc.w    $3944,$CCA2,$BBCA,$C230,$4A34,$93CB,$B4BC,$AB42
                dc.w    $43C3,$0BD2,$4430,$BC04,$4309,$CDA4,$4090,$B300
                dc.w    $22A0,$0CB0,$2BC4,$543C,$C1C5,$3CC9,$3BCA,$243C
                dc.w    $BAA4,$9B42,$AAC4,$2B14,$32A3,$BCB4,$A2BA,$10B0
                dc.w    $C93A,$2233,$3513,$C2AA,$41BB,$BCCD,$54AC,$245A
                dc.w    $32DC,$AB13,$0022,$290B,$99BB,$4BBB,$B432,$3CC3
                dc.w    $A34A,$41C0,$C153,$0B3B,$33A3,$19B4,$43BC,$BBB3
                dc.w    $2BB3,$34BC,$A20C,$C942,$B133,$ACC3,$449B,$CB42
                dc.w    $233B,$C323,$BCBB,$A223,$AB4B,$443B,$2AAC,$24C1
                dc.w    $B30A,$3BAB,$053A,$B23A,$BC41,$C293,$4BB9,$92A1
                dc.w    $A04B,$12BB,$49BA,$B3C2,$AB2A,$90C1,$4343,$ABB0
                dc.w    $32BC,$323B,$4233,$ABCA,$21AA,$CB0A,$241C,$1330
                dc.w    $B220,$4034,$2A1C,$B3C2,$49CB,$1BB9,$0932,$0990
                dc.w    $3CA3,$AA4C,$A4A2,$441B,$41A4,$ACAA,$B3BC,$A433
                dc.w    $BC94,$910C,$CC11,$A944,$4392,$1BCB,$50CA,$BB19
                dc.w    $0234,$3130,$BCC4,$13CC,$0332,$1233,$232A,$ABC2
                dc.w    $9CBA,$229A,$4BBA,$B430,$BB33,$4212,$4139,$AB0A
                dc.w    $02BC,$A00C,$BA22,$B94B,$B935,$32CC,$B221,$31BA
                dc.w    $3224,$413C,$B932,$BC01,$21CC,$AAB9,$220B,$22A2
                dc.w    $3A14,$32AA,$03B0,$0132,$A1AB,$940A,$B332,$A22B
                dc.w    $AC00,$BA03,$ABB2,$BB33,$43CB,$3235,$2BB3,$B09B
                dc.w    $CCBA,$9C24,$4CB1,$1233,$43AB,$413C,$A2A0,$9B19
                dc.w    $12AA,$33CA,$2993,$421B,$32A1,$AB23,$AB0A,$C9B9
                dc.w    $24CC,$B34A,$9192,$3A45,$0CB3,$3BC3,$29A9,$0B40
                dc.w    $BCAB,$BB44,$9C24,$2342,$902A,$C941,$CB23,$2ACB
                dc.w    $143A,$91AC,$9432,$19A9,$23A0,$90AC,$A109,$B101
                dc.w    $B13C,$3459,$B043,$0AB0,$221B,$CBA9,$BB03,$3BB3
                dc.w    $9B24,$331A,$30BB,$39BA,$BBA2,$2312,$1A90,$BB34
                dc.w    $0A0A,$042A,$9120,$CAC9,$3202,$1B03,$40A2,$AAA2
                dc.w    $43BB,$00A3,$9A30,$CA2A,$C402,$2ACB,$AA31,$9232
                dc.w    $1B91,$9A2A,$1A33,$BB22,$0B19,$AB09,$A222,$1B33
                dc.w    $AA19,$3A90,$0A13,$2A1A,$B022,$21C9,$3333,$A133
                dc.w    $A01B,$CA0B,$B2AB,$9B90,$3424,$1AA0,$BB43,$0B93
                dc.w    $3221,$B34A,$BCB9,$22B0,$24BA,$22AA,$201B,$BA12
                dc.w    $AA23,$120A,$A200,$00BA,$0020,$1234,$2A13,$BA13
                dc.w    $ACB9,$3AB2,$20BA,$3220,$1CA9,$2032,$9032,$9AA2
                dc.w    $1AA2,$2B9B,$12A0,$2AA9,$A9AB,$3232,$B13B,$A3AB
                dc.w    $332B,$030B,$032A,$BB93,$3290,$220C,$932B,$2209
                dc.w    $B319,$2231,$B391,$CB33,$12A0,$1ABB,$A31A,$A9BA
                dc.w    $0011,$1299,$1232,$09B3,$AB23,$0B3A,$BA09,$10A3
                dc.w    $AA33,$2CB2,$42BA,$A9BB,$1221,$1B02,$9312,$2A23
                dc.w    $0BA1
                dc.b    $13
DAC_Sample02_End: 
DAC_Sample05:
                dc.w    $4655,$6303,$32DE,$FE57,$DEDE,$DC05,$3DEB,$B576
                dc.w    $6643,$5EFB,$BDCC,$EB34,$AB73,$C03D,$DC93,$21BC
                dc.w    $CCA3,$6425,$6566,$5009,$DDCC,$253D,$DDC6,$AEFE
                dc.w    $DD41,$3063,$DD56,$CEB5,$DC45,$4554,$3454,$AB42
                dc.w    $39BC,$CCCC,$DC2A,$DCDC,$5550,$5665,$4559,$2CEA
                dc.w    $339B,$3DD0,$3CDB,$9BEE,$DA9C,$EC43,$4445,$5CD9
                dc.w    $64DC,$1C44,$6646,$6CD4,$53DE,$EEBB,$D355,$5533
                dc.w    $23CC,$9559,$243D,$CABB,$BECC,$A54B,$444D,$DACC
                dc.w    $DCDD,$CE46,$5BBA,$4444,$4313,$6555,$3ABA,$351B
                dc.w    $B342,$BCDB,$3CDE,$DC46,$545B,$ED40,$DCDA,$2C44
                dc.w    $3352,$DA55,$CDDD,$B149,$EDA5,$6C25,$DC66,$453D
                dc.w    $2434,$5225,$4ABA,$DB4A,$D23C,$42BB,$CCEE,$143C
                dc.w    $BC34,$934A,$CDDC,$2C45,$49C4,$5544,$5CDC,$BB03
                dc.w    $BDA5,$5A45,$352A,$CB65,$CA1B,$9CDD,$54C3,$52DC
                dc.w    $D450,$DDCC,$DC1C,$CDBB,$B454,$ADA5,$BC55,$B443
                dc.w    $49C4,$4454,$D963,$C4DD,$C9AB,$455C,$B45C,$DC54
                dc.w    $EDCC,$C2AA,$54A2,$AB64,$CDDD,$E3A0,$BA30,$3A4A
                dc.w    $24CA,$5543,$2B2A,$9C44,$0549,$43B4,$495C,$E45D
                dc.w    $04DC,$0BD5,$0E45,$3BCB,$33DC,$DC54,$CC25,$9D56
                dc.w    $3ECA,$DACA,$4403,$5315,$42A2,$324A,$14CD,$244C
                dc.w    $A103,$5045,$CDD9,$CD24,$1DD1,$3D45,$3CC3,$B2B1
                dc.w    $BBB3,$444C,$D933,$53D3,$5CA4,$4132,$BC9B,$3225
                dc.w    $5CC9,$155D,$CBDC,$40C5,$4D95,$BCA3,$33CC,$CD42
                dc.w    $EC53,$D245,$33CC,$143C,$9AB3,$40B5,$4A25,$422A
                dc.w    $D0A1,$53C9,$9CC3,$3B33,$CB3C,$A5CC,$2BC2,$33AB
                dc.w    $C1B2,$4349,$CCD1,$54CC,$3BDB,$5432,$1443,$CCC5
                dc.w    $4CC3,$BB45,$4ACC,$A450,$AAB4,$3DC0,$3CCB,$44BA
                dc.w    $A14B,$CBAB,$BB41,$DA43,$C350,$B9C3,$1C34,$3320
                dc.w    $3CB4,$4294,$BC24,$441D,$CABC,$45B9,$CC44,$32CB
                dc.w    $4BB0,$BCAB,$AADB,$4345,$9CB9,$2C44,$2CAB,$B144
                dc.w    $C042,$AC25,$4BC3,$3CC3,$3332,$04AC,$3A29,$CB34
                dc.w    $B2AC,$A33A,$C2BC,$A449,$CB1C,$C232,$AC02,$2423
                dc.w    $BC45,$A92B,$B013,$39A4,$3BC3,$454B,$A4CD,$A322
                dc.w    $BCDA,$20B4,$54DD,$B143,$9BBB,$BA04,$2C34,$3929
                dc.w    $C04B,$C439,$BB45,$CD34,$124C,$C243,$23A0,$3ACA
                dc.w    $5ACA,$4332,$ABBC,$2BCA,$42CD,$143B,$CA04,$2B14
                dc.w    $4CDB,$A019,$A231,$2444,$313C,$B339,$33BB,$3430
                dc.w    $DC55,$CDC4,$4CB4,$BDC4,$53BB,$CC23,$902A,$CB33
                dc.w    $B11C,$1342,$C13A,$9031,$242A,$CCA1,$3334,$3CA4
                dc.w    $421A,$C930,$333C,$DCA3,$3333,$A144,$BACD,$DB44
                dc.w    $1AB3,$ACC4,$49AB,$B1A0,$4343,$BDC3,$5420,$1390
                dc.w    $2201,$232A,$A121,$B932,$BC93,$BA1B,$CA43,$AC0B
                dc.w    $B24B,$BA20,$A32B,$CAA3,$3921,$133B,$3429,$BB34
                dc.w    $21BC,$11BB,$43A2,$340C,$B92A,$3390,$31AB,$B03A
                dc.w    $CC44,$2CA9,$BB93,$ACCB,$1442,$00CC,$2222,$99B4
                dc.w    $5913,$BB33,$A321,$2032,$4ACA,$10A4,$0CB9,$A22A
                dc.w    $B2BA,$2ACC,$0332,$BB9A,$9923,$3AC3,$40CB,$3224
                dc.w    $2014,$2CAB,$00A2,$49BB,$3349,$B912,$3932,$BBA1
                dc.w    $A99A,$2310,$1BA3,$10BC,$BABA,$A33A,$2BBA,$9ABA
                dc.w    $4491,$1220,$A029,$0003,$2343,$0B0B,$243C,$A343
                dc.w    $ACA9,$A0AB,$12BC,$2AA2,$ACB2,$A233,$A11B,$B222
                dc.w    $3ABA,$BC34,$3230,$229A,$339A,$339B,$BA33,$0A1C
                dc.w    $1441,$CC13,$3923,$ABAA,$B34B,$CC93,$439B,$ABBB
                dc.w    $11CB,$933B,$141C,$B933,$AB04,$539B,$A991,$3309
                dc.w    $3430,$AA9B,$B122,$1AC0,$32BC,$922A,$CB24,$BCB1
                dc.w    $A220,$0A11,$0092,$222B,$A311,$2000,$3221,$32AB
                dc.w    $A933,$00AB,$B243,$ABCB,$3419,$22BC,$A431,$1ABA
                dc.w    $09A9,$BBB9,$331B,$A0AA,$ABBB,$9443,$3B23,$0BC2
                dc.w    $4439,$1212,$39A0,$2AB9,$3323,$2BBB,$A0AA,$B930
                dc.w    $BC02,$103B,$CCA2,$2221,$9000,$1329,$9B14,$3190
                dc.w    $1000,$221B,$B934,$2902,$BB93,$9921,$2AB0,$2109
                dc.w    $0001,$1A12,$BB9A,$222A,$CBAB,$931A,$A232,$AAA0
                dc.w    $AB03,$3202,$3322,$2100,$BA24,$3012,$2B91,$A030
                dc.w    $AB92,$AA2A,$BB9B,$BAB2,$30BB,$9332,$BB99,$2192
                dc.w    $2229,$A332,$19B1,$3232,$9909,$0AB3,$3910,$A099
                dc.w    $43BB,$21CA,$9102,$2909,$120A,$21BA,$CA02,$9232
                dc.w    $BCAA,$10A9,$2192,$1122,$0921,$A934,$2333,$1A9A
                dc.w    $13AA,$A033,$0BAA,$BA1A,$AABA,$3102,$9BBC,$A010
                dc.w    $0010,$9022,$339B,$91A1,$3331,$0A91,$3191,$2AA0
                dc.w    $3201,$2ABA,$A901,$2221,$BB91,$32BB,$1219,$1290
                dc.w    $9A99,$AABB,$1299,$AB02,$211A,$BA02,$2333,$320A
                dc.w    $2319,$0091,$333A,$A923,$9AAA,$A9AA,$32AB,$BBAA
                dc.w    $AA11,$090A,$A010,$A01A,$A012,$3199,$1233,$2229
                dc.w    $A992,$3319,$AAB9,$2299,$1112,$0009,$BAA2,$2190
                dc.w    $9913,$190A,$BBA1,$0B92,$2A00,$AB91,$1010,$AB12
                dc.w    $321A,$9091,$3232,$3322,$0190,$21AB,$A233,$19BB
                dc.w    $AB00,$A10A,$A00B,$AAA0,$AB99,$A933,$219A,$0221
                dc.w    $22A0,$0913,$4091,$9A22,$90A9,$2222,$AA00,$A010
                dc.w    $0009,$9220,$ABBA,$0123,$1AA1,$229A,$BAAA,$B000
                dc.w    $9012,$29AB,$A122,$2220,$0122,$2122,$19A0,$4332
                dc.w    $0A9A,$A920,$AB90,$A9AA,$99AB,$BA93,$102A,$B99A
                dc.w    $1222,$ABB3,$3322,$0AA1,$2321,$1901,$2211,$0AA0
                dc.w    $2999,$229A,$A220,$9AB9,$0022,$0119,$90AA,$AA03
                dc.w    $0B90,$0112,$ABBB,$A220,$9912,$0122,$10A0,$3302
                dc.w    $2223,$29A9,$1222,$009A,$0119,$AABA,$B9AA,$9990
                dc.w    $9100,$9AB0,$1992,$20AA,$1202,$3190,$9133,$2111
                dc.w    $AA12,$399A,$9010,$0121,$99AB,$9122,$0AAA,$2209
                dc.w    $9909,$1091,$22AA,$C0AA,$0221,$AAA9,$220B,$A911
                dc.w    $2222,$2311,$9022,$2101,$1221,$0109,$AA01,$11A0
                dc.w    $29BB,$AA9B,$BAAA,$A023,$009A,$9012,$100A,$0321
                dc.w    $0000,$0232,$221A,$9120,$0009,$AAA0,$331A,$AA02
                dc.w    $109A,$BA92,$320A,$9910,$99AA,$9911,$3AAA,$09AB
                dc.w    $0000,$1112,$09A0,$2201,$1222,$2222,$1110,$0122
                dc.w    $0909,$A019,$9AAB,$9991,$1A9B,$BAB9,$9012,$9901
                dc.w    $1222,$0090,$9232,$100A,$9022,$2200,$1122,$19AA
                dc.w    $BA23,$19AA,$9012,$29AA,$0010,$9A00,$0001,$9000
                dc.w    $AAA0,$9900,$1109,$A909,$AA02,$2091,$2333,$1991
                dc.w    $1222,$2112,$19A9,$009A,$0109,$99AA,$AA0A,$AAA9
                dc.w    $AA12,$00AA,$A002,$221A,$0222,$2220,$90A2,$2229
                dc.w    $9110,$0190,$0190,$1110,$9AAA,$010A,$9000,$0021
                dc.w    $299A,$0900,$0000,$AAA0,$9A99,$9991,$1212,$1000
                dc.w    $9A00,$1223,$2222,$2019,$0021,$1111,$0A9A,$AAAA
                dc.w    $9999,$0000,$AAAB,$AA01,$0900,$1212,$09A0,$1222
                dc.w    $3011,$0111,$1109,$9011,$1009,$AA91,$1099,$0022
                dc.w    $199A,$9110,$9A9A,$9210,$0001,$9A90,$99AA,$0019
                dc.w    $0000,$9990,$2101,$2231,$0009,$1232,$9012,$2219
                dc.w    $0999,$9000,$A9AA,$AAAA,$99A9,$9190,$010A,$AA09
                dc.w    $1211,$2222,$2101,$1001,$0001,$2009,$0000,$0010
                dc.w    $0090,$10AA,$0109,$9091,$1110,$09A9,$0AA0,$1009
                dc.w    $9011,$0099,$AAA0,$1199,$0121,$0900,$2212,$2222
                dc.w    $2110,$AA92,$2201,$1000,$09AA,$ABA9,$AA99,$999A
                dc.w    $9910,$0100,$1120,$9A90,$2220,$0112,$2222,$1990
                dc.w    $0900,$1000,$9009,$0010,$9A00,$0901,$9009,$0A21
                dc.w    $2009,$9900,$00B9,$9009,$9011,$0900,$0090,$A901
                dc.w    $0122,$2211,$1212,$2112,$110A,$9A99,$9001,$0000
                dc.w    $99AA,$BAAA,$A900,$0001,$9A91,$1201,$1012,$2210
                dc.w    $0000,$0222,$2109,$0090,$9099,$A901,$2000,$9990
                dc.w    $0001,$0990,$0100,$0900,$0000,$00A9,$9999,$0099
                dc.w    $9000,$1111,$1901,$0110,$0211,$2221,$1100,$2190
                dc.w    $0109,$999A,$AA99,$9000,$0BA9,$99A9,$0909,$9122
                dc.w    $2101,$0100,$0132,$2109,$0010,$1900,$0100,$000A
                dc.w    $9A00,$1009,$0010,$0109,$A000,$0100,$9010,$090A
                dc.w    $A910,$0900,$0909,$0009,$9901,$1122,$2100,$0111
                dc.w    $1121,$0111,$1000,$0A99,$0209,$AAAA,$9BA9,$A990
                dc.w    $0110,$0009,$9001,$1121,$1012,$1110,$1901,$1112
                dc.w    $0009,$A900,$0009,$9000,$0099,$0001,$1009,$9001
                dc.w    $090A,$9021,$0000,$0000,$AAA0,$9901,$0009,$0910
                dc.w    $1111,$0121,$2212,$1100,$1009,$0011,$9999,$0099
                dc.w    $AA90,$0AA9,$A99A,$9901,$0012,$1011,$1010,$0003
                dc.w    $0201,$0101,$1000,$0900,$1000,$9999,$9900,$0000
                dc.w    $0100,$0090,$0100,$0900,$0001,$900A,$A090,$1009
                dc.w    $9990,$0901,$2100,$1010,$2111,$1011,$1211,$0000
                dc.w    $9009,$0090,$0999,$AA0B,$9999,$0090,$9090,$0000
                dc.w    $0121,$2221,$0110,$0000,$1111,$0900,$0010,$0999
                dc.w    $0009,$0990,$AA00,$3010,$0011,$190A,$90AA,$0121
                dc.w    $0000,$0A99,$0090,$9900,$1000,$0090,$1113,$0111
                dc.w    $1111,$1010,$9011,$0099,$9009,$99A9,$90AA,$9999
                dc.w    $9090,$0000,$0010,$1111,$0112,$2120,$0101,$0009
                dc.w    $9909,$0001,$1000,$9000,$0099,$900A,$9000,$0022
                dc.w    $0010,$0000,$990A,$9091,$0009,$0990,$0009,$0101
                dc.w    $0011,$0002,$1011,$2211,$1090,$0100,$9090,$1099
                dc.w    $AAAA,$A099,$9990,$0100,$0909,$0111,$2110,$0002
                dc.w    $1100,$1211,$0100,$0099,$9990,$9009,$0100,$1090
                dc.w    $9000,$0000,$0000,$0001,$0900,$1000,$9000,$AA99
                dc.w    $0000,$0000,$0001,$0011,$2101,$1111,$1000,$0011
                dc.w    $1009,$9009,$0999,$9990,$0AAA,$9999,$0001,$0100
                dc.w    $0110,$1010,$3011,$0100,$1000,$0101,$0009,$9099
                dc.w    $0990,$0000,$0000,$0001,$0090,$0000,$1000,$9000
                dc.w    $0000,$0000,$0A90,$9990,$0000,$0001,$1121,$0010
                dc.w    $1111,$1000,$0010,$0000,$0000,$099A,$9A0B,$9909
                dc.w    $0090,$9900,$0011,$1111,$1211,$0001,$0010,$0100
                dc.w    $1019,$0909,$0090,$0909,$0000,$0000,$0000,$0010
                dc.w    $0000,$0900,$0001,$900A,$9000,$0009,$0000,$0090
                dc.w    $9900,$1113,$0111,$1110,$0001,$0000,$0090,$0990
                dc.w    $9009,$990A,$A999,$9909,$0101,$0100,$1011,$0301
                dc.w    $1101,$0009,$0000,$1001,$0900,$9099,$9000,$0000
                dc.w    $00A9,$2100,$0000,$1000,$0090,$1009,$0000,$0A99
                dc.w    $0900,$0000,$0100,$0000,$0010,$2112,$1110,$1010
                dc.w    $0900,$0909,$0090,$99A0,$AA00,$0090,$9990,$9009
                dc.w    $1011,$1113,$0010,$1010,$1100,$0000,$9990,$0000
                dc.w    $0009,$0900,$0000,$A902,$1010,$0000,$0000,$0000
                dc.w    $0009,$0000,$A999,$0000,$0000,$0001,$0010,$2101
                dc.w    $0100,$1011,$1010,$0010,$0909,$9099,$9990,$A999
                dc.w    $A990,$0011,$1000,$0000,$0101,$1211,$2101,$0000
                dc.w    $0000,$9009,$0999,$0000,$0000,$0000,$0000,$0001
                dc.w    $0100,$0909,$0000,$0000,$0000,$0A99,$0990,$0001
                dc.w    $0000,$0101,$0211,$1101,$1100,$1900,$0000,$0090
                dc.w    $0099,$9990,$AA99,$9909,$0001,$0010,$1111,$2100
                dc.w    $0001,$0011,$0110,$0000,$9090,$9900,$9000,$000A
                dc.w    $9000,$2101,$0001,$0000,$9000,$0009,$0000,$00A9
                dc.w    $0009,$0909,$0000,$0001,$0112,$1101,$0110,$1100
                dc.w    $0010,$0009,$9909,$0009,$9090,$AA99,$9090,$9010
                dc.w    $1011,$0010,$1210,$1110,$0000,$0000,$0100,$0090
                dc.w    $9090,$900A,$9021,$0000,$0000,$0110,$1000,$0009
                dc.w    $9090,$0000,$A900,$9009,$0000,$0000,$0000,$0112
                dc.w    $1011,$1111,$0000,$0010,$9009,$0909,$0909,$900A
                dc.w    $A099,$0909,$0090,$1011,$1112,$1011,$0010,$0100
                dc.w    $0000,$0900,$9900,$0000,$9000,$0000,$0A20,$0001
                dc.w    $0000,$0101,$0000,$0909,$090A,$A090,$0000,$0000
                dc.w    $0000,$1001,$0021,$0101,$0111,$0110,$0190,$0900
                dc.w    $9909,$9990,$A990,$9090,$9000,$0000,$0100,$1110
                dc.w    $2111,$0100,$1000,$0000,$0090,$9090,$900A,$9021
                dc.w    $0000,$0000,$0010,$0000,$0100,$0000,$0000,$0909
                dc.w    $0AA9,$9090,$0010,$0100,$1001,$0211,$0111,$0010
                dc.w    $0000,$0100,$0190,$9909,$9990,$AA09,$0909,$0000
                dc.w    $0010,$0101,$1021,$0010,$0110,$0100,$0000,$9009
                dc.w    $0900,$0900,$0A90,$0002,$1001,$0100,$0000,$0900
                dc.w    $0100,$0090
                dc.b    $90 
DAC_Sample05_End:
DAC_Sample06: 
                dc.w    $0123,$5456,$E4F5,$E5CF,$D56C,$D76D,$BC46,$CAF7
                dc.w    $6F74,$C525,$6DDE,$2DCE,$5FD5,$5EC6,$9EED,$C6B4
                dc.w    $5CC2,$6366,$4445,$4C55,$64AD,$DD0D,$EC2D,$DE14
                dc.w    $CCDD,$C223,$C444,$556B,$E355,$B6A4,$5542,$C15C
                dc.w    $3DBA,$BCDD,$9BDD,$99DD,$D4BB,$3935,$9CB5,$25A5
                dc.w    $5355,$CC96,$553B,$B4BD,$14EE,$B4DD,$BDD4,$DDD1
                dc.w    $5A5D,$4553,$4A4D,$5455,$3023,$53BB,$63BE,$14CE
                dc.w    $55EE,$1DC0,$3C34,$4BD3,$C50B,$1A1D,$3445,$A5B5
                dc.w    $5553,$524A,$D1D9,$DCCC,$D1CC,$AC3C,$2CD3,$4C54
                dc.w    $12C3,$4C3A,$4B25,$4434,$441C,$CB4C,$2C94,$B343
                dc.w    $4CDB,$BC0B,$CCCD,$C044,$D4A5,$3B43,$4B53,$39CA
                dc.w    $0313,$B4B3,$935D,$4900,$B213,$BBCB,$CC24,$D9AC
                dc.w    $B449,$CDA2,$3494,$A3C5,$C45A,$B023,$359C,$412C
                dc.w    $42AA,$CB3B,$CA4B,$9BAB,$CAC2,$ACA2,$2104,$939B
                dc.w    $A044,$9242,$12B4,$3BC4,$03CC,$5B1A,$2A2B,$2133
                dc.w    $ACCD,$22A2,$9B14,$B03A,$B3B3,$C9BB,$43A2,$3439
                dc.w    $BB94,$B439,$B942,$3A34,$31CB,$C1AC,$C3AC,$9A49
                dc.w    $02AC,$B229,$29BB,$B329,$A410,$3334,$44A2,$29B9
                dc.w    $3C0A,$A13A,$92B0,$BB4B,$2BAB,$A2CA,$A3CA,$CA93
                dc.w    $B042,$2411,$3342,$A110,$1292,$A223,$A143,$B9AC
                dc.w    $B39B,$CB39,$C0BB,$2BBA,$C320,$A340,$1313,$2300
                dc.w    $1313,$A1A4,$B341,$291A,$ABCB,$9AA0,$1BAA,$B9AA
                dc.w    $BBB9,$0242,$2A33,$3429,$AACA,$B492,$3213,$3393
                dc.w    $B21B,$33AA,$BBB9,$9A9C,$1A9A,$22A2,$202B,$12AB
                dc.w    $0B12,$0A09,$3924,$AB09,$4312,$1323,$3A12,$BB0B
                dc.w    $120C,$2AAA,$9BAA,$AA02,$022B,$AA0B,$B9B1,$1333
                dc.w    $3220,$3393,$2312,$3402,$209B,$9ACB,$9CC0,$1BBB
                dc.w    $19C4,$B002,$0A02,$A3A9,$3132,$3404,$3121,$030A
                dc.w    $1B29,$BAB0,$BB9A,$BAA9,$0000,$30B2,$B09A,$A123
                dc.w    $2A22,$2323,$2392,$9911,$999B,$B911,$2AAA,$99B3
                dc.w    $12C0,$1911,$3912,$114B,$01AA,$11BA,$2AAA,$A223
                dc.w    $0B1A,$2A22,$1A92,$B9B1,$013A,$9303,$321A,$0201
                dc.w    $AA91,$B090,$B332,$A0A1,$A09B,$3BBB,$1A92,$292B
                dc.w    $3122,$3AA0,$3112,$321A,$B9A0,$2A00,$9211,$21A9
                dc.w    $A92A,$20BA,$AA11,$3BB0,$1A1A,$21AA,$0913,$0021
                dc.w    $121B,$0300,$0220,$2222,$2122,$AAB9,$0ABA,$BAA1
                dc.w    $AA21,$A110,$0BBA,$1BA3,$1A22,$313A,$3302,$2331
                dc.w    $2930,$A399,$B0BA,$AAAA,$90B1,$A2A0,$ABA9,$B29A
                dc.w    $A22A,$2A22,$2222,$3232,$2323,$A010,$2009,$0AB9
                dc.w    $9BA9,$A0AA,$0919,$A99A,$A990,$0B00,$1222,$2032
                dc.w    $3002,$2221,$110A,$92A0,$0091,$2A90,$1AA0,$A990
                dc.w    $0A99,$0BA0,$A091,$9911,$2001,$010A,$2121,$1222
                dc.w    $2231,$20A0,$000A,$9A2A,$A919,$2AA1,$ABA9,$9AB1
                dc.w    $A091,$1093,$0092,$1102,$2211,$3012,$0092,$2900
                dc.w    $9A01,$0AA1,$99A9,$AB09,$AA2A,$9002,$2122,$2112
                dc.w    $1999,$1910,$0909,$A92A,$992A,$1A01,$A121,$9313
                dc.w    $9100,$9001,$0A02,$0099,$2010,$A9A0,$9ABA,$09AB
                dc.w    $0900,$2910,$2312,$2222,$2921,$1199,$9229,$1100
                dc.w    $0A10,$BA0A,$0A0B,$BA00,$AA02,$0919,$1022,$29A0
                dc.w    $2102,$3121,$2029,$1109,$92A0,$920A,$0990,$09A0
                dc.w    $9A9A,$A990,$A019,$0110,$0110,$1100,$1193,$0000
                dc.w    $1902,$2022,$11A2,$A092,$90AA,$090A,$90B0,$9991
                dc.w    $9990,$90A9,$A212,$1200,$1230,$0309,$0110,$0100
                dc.w    $2920,$1A90,$900A,$0AA0,$AAA0,$90AA,$A001,$1210
                dc.w    $1211,$9001,$0022,$1000,$2029,$1299,$119A,$99A9
                dc.w    $0A9A,$0901,$1A00,$0111,$0090,$0000,$1210,$00A2
                dc.w    $1010,$0119,$000A,$9AA0,$1900,$0910,$0913,$0000
                dc.w    $2110,$9009,$0001,$90A0,$0000,$00A9,$A20A,$0000
                dc.w    $1900,$1019,$1910,$2100,$1210,$0000,$0999,$1990
                dc.w    $000A,$2000,$0000,$0A99,$0009,$1091,$1090,$0121
                dc.w    $00A2,$0000,$0000,$0000,$0190,$0109,$1901,$1020
                dc.w    $9001,$AA00,$0000,$A900,$9099,$9901,$0900,$1110
                dc.w    $2221,$0101,$1090,$1000,$1909,$0099,$0099,$190A
                dc.w    $2B9A,$9900,$0090,$1111,$0110,$3101,$1100,$0191
                dc.w    $1900,$9190,$9099,$0900,$0A99,$9090,$0910,$0109
                dc.w    $1191,$1021,$0000,$1910,$9000,$0101,$0010,$9000
                dc.w    $9190,$9109,$00A2,$0000,$0000,$00A9,$00A0,$0101
                dc.w    $9001,$0000,$0910,$0221,$1009,$1000,$9919,$1920
                dc.w    $9009,$0900,$0AA0,$0091,$0990,$0001,$1001,$2101
                dc.w    $1000,$0000,$0990,$0000,$0000,$0000,$1090,$0000
                dc.w    $0000,$000A,$2000,$0000,$0A90,$9100,$2100,$00A2
                dc.w    $0A99,$0012,$A210,$0010,$1000,$0010,$9000,$0009
                dc.w    $0900,$0000,$A999,$9000,$0000,$1101,$0210,$0019
                dc.w    $1000,$1910,$0000,$0091,$0190,$0090,$090A,$9900
                dc.w    $0000,$0090,$0000,$0010,$1021,$0019,$1000,$9100
                dc.w    $0091,$0001,$9100,$0010,$9199,$9000,$AA90,$9010
                dc.w    $0010,$102A,$210A,$9000,$0002,$1001,$0100,$1000
                dc.w    $0009,$0919,$0090,$0000,$00A9,$0090,$9010,$0091
                dc.w    $0000,$0091,$0102,$1010,$1010,$0019,$0090,$9009
                dc.w    $0000,$0000,$A909,$0000,$0010,$0000,$9100
                dc.b    $00
DAC_Sample06_End:
DAC_Sample03:  
                dc.w    $5E35,$E67F,$F47D,$E5C5,$5053,$EE6B,$61EC,$4135
                dc.w    $DC54,$E53D,$62DC,$A34A,$20B3,$0A3B,$AA30,$B3AA
                dc.w    $32A6,$8A88,$7778,$D7FF,$776C,$1FB4,$6E55,$EE67
                dc.w    $BF3C,$6D2C,$553D,$1CB5,$33CC,$92D5,$5D29,$C4AA
                dc.w    $3AC2,$44BA,$AC23,$3AB0,$321C,$B33F,$77DF,$E67E
                dc.w    $F666,$7FDE,$E57F,$5D7D,$EE55,$64EE,$416D,$D5B9
                dc.w    $25DB,$4BC0,$054B,$AC2C,$414C,$0C78,$77E6,$FF77
                dc.w    $FEC5,$653D,$E452,$06E5,$6E9E,$5DD6,$62E6,$D06F
                dc.w    $65E2,$D4A5,$D3A6,$EB5C,$5E7E,$E5E3,$6136,$F6BD
                dc.w    $51EC,$56CA,$1E5C,$6CE6,$6DF5,$C564,$5E3C,$DBC6
                dc.w    $4E6E,$7F45,$C5E5,$DC66,$EDC4,$66F0,$D606,$25ED
                dc.w    $ED65,$4AE6,$D5E2,$646F,$EC64,$651E,$ED46,$7FC4
                dc.w    $C6E1,$C162,$F66C,$2E5D,$6E6D,$A5DB,$25B5,$DDB4
                dc.w    $4B4C,$AC46,$E5DB,$6DAD,$D555,$ADBD,$5C55,$EC5D
                dc.w    $410C,$64EC,$D562,$CDD4,$963C,$EA53,$59E2,$5D45
                dc.w    $D45E,$D62D,$3432,$C41D,$435D,$9CB5,$4DBB,$53B3
                dc.w    $BD54,$BAD5,$CC5D,$53CC,$235D,$BAA4,$44CD,$33C3
                dc.w    $5D3B,$30BC,$244A,$AAAC,$243C,$3AD5,$243D,$C53C
                dc.w    $0000,$3B01,$BB41,$33D4,$0B9C,$52CB,$310D,$53B1
                dc.w    $C24C,$3B4A,$92C1,$0A40,$4C3A,$C033,$ABB3,$22B0
                dc.w    $23AB,$33A9,$CB44,$BC39,$4C2A,$2B2A,$A339,$B132
                dc.w    $AB94,$1BC2,$339A,$2991,$B2A3,$3AAB,$23A0,$9B12
                dc.w    $3A0C,$413B,$CA33,$3BAA,$331A,$C131,$B93A,$221A
                dc.w    $002A,$B2A3,$29BB,$2923,$1AAA,$3021,$AB02,$1109
                dc.w    $19A2,$19AA,$302A,$A22A,$1BA3,$1002,$A0A9,$211B
                dc.w    $2290,$B312,$AB22,$2A01,$AB92,$23AB,$3009,$A3AA
                dc.w    $A32A,$2BA3,$1029,$A0AA,$3A22,$2BAA,$B332,$2BB1
                dc.w    $2A02,$21BA,$0329,$9AA1,$2101,$0900,$11A1,$B931
                dc.w    $9109,$B032,$2B0B,$1210,$A22A,$A201,$20A9,$0B3B
                dc.w    $3019,$0019,$0191,$BA23,$29AA,$AA42,$AB21,$90A2
                dc.w    $0012,$A9AA,$0301,$09B1,$39A2,$0A22,$B200,$029B
                dc.w    $0002,$1000,$0A21,$199B,$3001,$900A,$2019,$0010
                dc.w    $BA31,$000A,$2A20,$2A00,$19B9,$231A,$0001,$90B9
                dc.w    $2309,$029B,$2111,$BA30,$0190,$B130,$09AA,$0300
                dc.w    $129B,$2A2A,$2019,$A2A2,$1090,$2AA2,$A211,$A0AA
                dc.w    $1211,$09A2,$0A20,$0119,$9A92,$AA32,$2ABA,$1320
                dc.w    $9B00,$0221,$AB10,$212A,$A2A9,$2100,$A200,$0000
                dc.w    $0AA3,$1900,$0000,$0000,$0190,$0000,$0001,$09A2
                dc.w    $0001,$9019,$AA31,$900A
DAC_Sample03_End:      
DAC_Sample04: 
                dc.w    $AABC,$DC94,$9C40,$BA10,$3124,$2B30,$0222,$9023
                dc.w    $23A9,$0214,$1213,$033A,$A922,$4002,$0214,$B21A
                dc.w    $2200,$0210,$B9CA,$CDED,$677C,$DCCC,$CBBA,$ACA0
                dc.w    $A9BA,$A9A2,$C1AA,$90AB,$2B1A,$9AA2,$00BA,$9A92
                dc.w    $A0A0,$B93B,$0A00,$A9AB,$30B9,$A00A,$9ABA,$BCDE
                dc.w    $D466,$51BA,$1003,$9242,$02A2,$0310,$0000,$0000
                dc.w    $0BA9,$2A0B,$90B3,$BA90,$2AB9,$B9A4,$9BAB,$2123
                dc.w    $B003,$BBC0,$31BA,$1312,$A022,$A224,$A020,$0392
                dc.w    $312A,$2221,$0333,$0A02,$A3A2,$2233,$0212,$A022
                dc.w    $3300,$22A0,$23AB,$056C,$D0CC,$BB44,$3BDD,$567D
                dc.w    $EB43,$DBA2,$AA92,$1A92,$A0B3,$0BA2,$A90B,$9B30
                dc.w    $BA2B,$10A0,$0A90,$B00A,$9A2A,$00AB,$9A9B,$BDD3
                dc.w    $5523,$4CB0,$2AA2,$2A0A,$9021,$A9B0,$3C3A,$2B1A
                dc.w    $A020,$BA1A,$433B,$BBBA,$ABBA,$ABB0,$AABB,$BCCD
                dc.w    $DBA4,$652A,$ACAC,$3555,$BDAC,$BB2B,$000A,$203B
                dc.w    $A020,$A203,$1B93,$BBCD,$9455,$5445,$4CBC,$BA02
                dc.w    $0A20,$2A21,$0A92,$BBDD,$C556,$553C,$CBCA,$A002
                dc.w    $AA2A,$BBAC,$DD45,$6544,$3CCC,$1A9A,$0ABC,$CDE0
                dc.w    $5564,$2444,$CCCB,$CAAC,$BCDD,$D556,$5343,$DCBC
                dc.w    $AB20,$0BAB,$CBDE,$C565,$633C,$CCA0,$BAB0,$CBCD
                dc.w    $DD35,$6662,$DD1C,$DA3B,$31BA,$BABB,$DDD3,$6673
                dc.w    $CECD,$2B21,$2000,$0A2B,$200A,$ACDD,$C946,$763D
                dc.w    $DDDB,$0CB2,$0A2B,$ACCC,$BB55,$675B,$EDED,$B31B
                dc.w    $B943,$3AAC,$BA2B,$DE47,$75CD,$ECCD,$CCC3,$400C
                dc.w    $AADD,$A765,$5DDD,$CCB0,$2CBD,$B30B,$CCDD,$9774
                dc.w    $5DDE,$DE1C,$CC0C,$CD67,$73CE,$DECC,$DCBB,$CCC4
                dc.w    $775B,$DECD,$CBCD,$CCBC,$DA67,$71CD,$EDCB,$CCDC
                dc.w    $DDC9,$7764,$DDED,$CBCD,$CED9,$6776,$DEDE,$ACCC
                dc.w    $DECC,$4674,$BBBA,$B212,$2A02,$1030,$0039,$02BB
                dc.w    $DA46,$54BD,$CCBA,$CAAC,$ACBB,$A9AA,$BA0B,$2B9B
                dc.w    $9AA2,$ACCD,$E966,$54CB,$A02A,$CD36,$76DE,$DD23
                dc.w    $20CB,$0202,$10A9,$2A0A,$CCEE,$C666,$77EE,$EED4
                dc.w    $321A,$0ADD,$ED27,$774D,$EFDA,$49CD,$DDD3,$7765
                dc.w    $DDEE,$CB02,$1BBD,$CDDD,$578D,$EEFC,$A9A2,$22BC
                dc.w    $BDDC,$578C,$EFFC,$BDB4,$0DB6,$775D,$EEED,$BABB
                dc.w    $BBCD,$A677,$5EEE,$DDBC,$1B90,$ABD2,$6765,$DDED
                dc.w    $DBAB,$BCA9,$2BC5,$772D,$DEDD,$D0BB,$39CC,$B277
                dc.w    $4DDD,$DDCC,$CA22,$21A0,$00CB,$5766,$BEEF,$4BC1
                dc.w    $4430,$2BDC,$C676,$90ED,$EDCB,$334B,$BCCB,$6763
                dc.w    $CEED,$DBAA,$90AB,$BCA6,$76CD,$DDBA,$CDDD,$CC0B
                dc.w    $B677,$CDEE,$EDAA,$20CB,$AD57,$7DC9,$D9CD,$DD9B
                dc.w    $DCBB,$ACC6,$77BD,$CEDD,$DCAB,$CBCC,$D067,$7ADE
                dc.w    $EDDC,$A0A9,$CBCC,$5774,$CEDE,$CDCB,$C433,$AACD
                dc.w    $C477,$5BEE,$EDCC,$DCBC,$3776,$0DEE,$EDBC,$42A2
                dc.w    $1D96,$77DD,$EEED,$100A,$CCBC,$5771,$BCED,$ED00
                dc.w    $B93B,$BABB,$D676,$5DCE,$EDA9,$A0BA,$BCBC,$1676
                dc.w    $5CEE,$DDBC,$CABB,$ACA6,$77AD,$EEEC,$AA9A,$CA0C
                dc.w    $D677,$6FEE,$EA45,$3BCC,$B20D,$2776,$DEDE,$DD9A
                dc.w    $2BDD,$DC68,$5BDC,$EDDC,$C2AD,$DDD2,$686C,$EDEE
                dc.w    $DA31,$CCDD,$D677,$6EEE,$ECCC,$CCAC,$4752,$AAC3
                dc.w    $121A,$2A32,$3AB0,$2332,$CC22,$213C,$9020,$0A0A
                dc.w    $92AB,$AACA,$9DD1,$764D,$EBDC,$BBCC,$BB2A,$ABAA
                dc.w    $2B2B,$1A2C,$1A0C,$DDB6,$632B,$931A,$4CDC,$677D
                dc.w    $EEDC,$BAA4,$A122,$3A9A,$20A9,$CBEE,$D675,$769E
                dc.w    $DEDC,$1231,$000B,$BDEE,$D677,$61DE,$DEBB,$332B
                dc.w    $ACCD,$DED7,$77DE,$EEB3,$10AC,$CCCD,$DC77,$6AED
                dc.w    $EBDC,$3BBD,$CDDA,$6765,$5DDE,$CDBB,$CBDA,$DEC4
                dc.w    $776D,$DCE3,$BBDC,$CBCD,$CCB5,$774E,$DDC4,$4ADD
                dc.w    $CCAC,$CDB3,$5766,$2DDE,$B9CC,$D1CD,$DB45,$766D
                dc.w    $DBDC,$CCCB,$BCDD,$CA57,$665E,$CDDB,$BABB,$A9AC
                dc.w    $CDCD,$4776,$CEDD,$DCAB,$B92B,$CCBD,$C577,$54DE
                dc.w    $ED3D,$C934,$32AD,$EEB6,$77EF,$60E3,$62C4,$3555
                dc.w    $DEEE,$4750,$CEE6,$5544,$CDDD,$ACEC,$A565,$333C
                dc.w    $C5AC,$054E,$EC00,$02AA,$20AB,$A9B1,$C1AB,$DED5
                dc.w    $87EF,$EDB2,$334A,$1A02,$21AA,$CDDD,$3776,$5EEE
                dc.w    $CB04,$12A3,$902B,$ACCC,$CDB6,$766D,$DDDC,$CACB
                dc.w    $902B,$BBDB,$BDC6,$7554,$DCCD,$ACDC,$B10A,$BCCD
                dc.w    $BDD6,$765C,$CCEB,$BCCC,$9CA2,$BBCC,$1BDC,$5766
                dc.w    $CECD,$CCBC,$CCB3,$30AC,$CBCB,$C476,$6DE2,$D3AC
                dc.w    $BADC,$1333,$2B0C,$DBBB,$2675,$4CDC,$D0AC,$BCCB
                dc.w    $1492,$A0BB,$CABC,$1765,$ACCC,$CCA9,$2CAB,$CB42
                dc.w    $000B,$ACCD,$DB67,$7DCD,$DCC2,$1BCC,$D123,$1302
                dc.w    $AC1C,$BCDE,$677D,$CCC3,$B2AB,$CCCC,$DAA2,$4302
                dc.w    $AA9B,$0ACD,$ED68,$5BDD,$EECC,$D244,$4433,$0BBB
                dc.w    $A2AA,$CCDD,$D576,$54CD,$CD10,$CBCB,$CB02,$A212
                dc.w    $000A,$BBBA,$ACBD,$DC77,$053D,$EEDC,$0455,$5BCB
                dc.w    $DCC9,$0BBC,$ABCB,$CDD6,$7639,$DDBC,$3B12,$3A32
                dc.w    $2A2A,$0BAD,$A200,$CBCB,$0A0B,$BCCD,$B577,$BADD
                dc.w    $CBC9,$0AAC,$CCC2,$3122,$1200,$A492,$ABAB,$ABA9
                dc.w    $CD47,$655C,$EC0B,$3000,$BA9A,$2BBC,$C0A2,$0002
                dc.w    $AABB,$CA3D,$DC56,$64B9,$AA12,$33A2,$A222,$10A2
                dc.w    $49C3,$BA21,$0A9A,$2AAB,$3200,$0CA2,$3BCC,$B22A
                dc.w    $2BA1,$B2BC,$0AAB,$B41C,$B002,$1A2A,$ACCA,$C565
                dc.w    $DEA5,$5CCB,$93BB,$9CDC,$5776,$EEEC,$BA41,$A20A
                dc.w    $22A0,$A202,$1030,$0039,$0202,$A4B2,$303A,$231B
                dc.w    $3021,$22A4,$B2A3,$921A,$9B49,$A9B0,$030B,$0A20
                dc.w    $A9A0,$0A9C,$1A20,$AA9B,$3B0A,$AB0B,$AAC2,$AA22
                dc.w    $B90C,$BCDC,$5644,$BBA0,$A20A,$0200,$A20C,$4AAA
                dc.w    $92A0,$412A,$0BAC,$BBB0,$B9BA,$CACA,$0233,$3A0C
                dc.w    $C9CC,$C2B3,$02A2,$21A2,$214B,$0223,$3022,$131B
                dc.w    $3321,$AAC0,$5542,$1223,$0203,$4249,$210A,$9B04
                dc.w    $90AB,$2302,$233A,$9CB2,$A223,$B1AA,$B9A9,$4B94
                dc.w    $3AA1,$2B2B,$BCCA,$0A22,$210A,$900A,$00A2,$C149
                dc.w    $BADC,$1652,$B032,$39A2,$0000,$A0A2,$A92A,$00BA
                dc.w    $BB2B,$A9A0,$0BB1,$0A9A,$BA10,$AA2A,$A92A,$000B
                dc.w    $9AA9,$02BC,$D056,$2A2A,$2229,$04BC,$9B32,$214B
                dc.w    $BAAC,$2444,$49DE,$E544,$553C,$DCB2,$2BC9,$02AA
                dc.w    $9022,$900A,$3032,$10A0,$B3B3,$BCC1,$5641,$44BB
                dc.w    $B2BB,$24B9,$49C1,$43AC,$2229,$C33A,$CA3A,$AA34
                dc.w    $9CBB,$A921,$0221,$02B3,$BAB0,$ACAA,$CCC3,$6654
                dc.w    $3CD0,$410C,$CC45,$530C,$CDCC,$BC00,$4443,$CBBA
                dc.w    $AAB2,$21A2,$C2BD,$DD35,$6649,$0445,$CC9C,$1A9A
                dc.w    $CC13,$42AB,$BBBA,$2BBC,$4C12,$1B9C,$DDEE,$5666
                dc.w    $5A34,$54D9,$D124,$0CCC,$A90C,$A240,$BA2A,$A1A0
                dc.w    $C1BC,$EE34,$4566,$644C,$DCC4,$00CB,$BA92,$1B9A
                dc.w    $BB0A,$000C,$1ACC,$CEED,$5677,$30EE,$CA55,$4CCC
                dc.w    $DA44,$3BB2,$A2BD,$DBCE,$E556,$6665,$DE0D,$300C
                dc.w    $3BAB,$A00C,$CCEE,$B146,$774C,$EECC,$A0B9,$31BA
                dc.w    $BA0C,$DDEC,$4567,$7CEE,$CCAC,$1BCB,$CDDD,$B565
                dc.w    $4574,$CEE0,$B923,$9CBD,$DDD9,$5659,$C567,$BDEE
                dc.w    $90CC,$EDDA,$566D,$D576,$DCDE,$D332,$2ADC,$CDDD
                dc.w    $B256,$773E,$FCBA,$BACD,$DD35,$6006,$74DD,$EDA2
                dc.w    $0BAB,$CDDC,$B664,$CD66,$64DE,$ECBB,$ABDE,$C565
                dc.w    $666A,$DDEC,$CABB,$ADEE,$4665,$76BE,$EDDD,$EED5
                dc.w    $777E,$EC4C,$EC5C,$CCAB,$DEC5,$5367,$6CFD,$CCBC
                dc.w    $DEC5,$64B6,$75DF,$CCDD,$DDB4,$6779,$EF3C,$BDDD
                dc.w    $DA57,$751E,$EDCC,$BDCE,$3546,$666B,$EFA9,$BBCE
                dc.w    $D567,$7CEF,$CDDD,$4644,$6652,$EFDE,$2655,$4563
                dc.w    $4CEE,$EDC5,$6514,$5524,$0EEE,$CC56,$6CC5,$5134
                dc.w    $DFEC,$3666,$5B12,$DFEB,$674C,$DBC4,$0C40,$C131
                dc.w    $2A0A,$A94A,$9200,$A200,$CB44,$10A3,$54EF,$A666
                dc.w    $CDD9,$2232,$20C4,$00C1,$0322,$1CE4,$6552,$AEFC
                dc.w    $67AC,$DDD6,$5530,$EFD6,$64B5,$5340,$FF26,$7B04
                dc.w    $4350,$EFE5,$74B5,$545C,$FEED,$6664,$654C,$EFCE
                dc.w    $D367,$751F,$FED3,$6655,$655D,$FEDE,$2556,$765E
                dc.w    $FEDE,$0577,$6DFE,$DEC3,$5656,$70EF,$DDEC,$5776
                dc.w    $EFCD,$ED36,$676D,$FDDE,$D167,$7CEE,$EDDD,$4676
                dc.w    $4EFB,$EC35,$6666,$EFDE,$C465,$665B,$FDDE,$B576
                dc.w    $61EF,$ADE4,$6666,$5EF1,$DDDA,$677E,$EEDD,$EC66
                dc.w    $76EF,$DEC3,$676C,$FCED,$A567,$6CEF,$BDD9,$6666
                dc.w    $9EEE,$CDC5,$676C,$FDDD,$DC67,$6CF0,$DEC1,$6674
                dc.w    $DFDE,$B456,$75DF,$CDDD,$A576,$6FED,$EC26,$764E
                dc.w    $EEDE,$4667,$5EEE,$DDD3,$6763,$EEDD,$CEC5,$773E
                dc.w    $EEEE,$5775,$FEEE,$4665,$39CA,$0A20,$2310,$B0AA
                dc.w    $1002,$1AAA,$9AAD,$C673,$EF4C,$CDDB,$6659,$CDC3
                dc.w    $67EF,$BDDD,$C677,$CFEC,$DDD4,$6765,$EFDE,$C366
                dc.w    $76EF,$DDEB,$677E,$FDEC,$4676,$4EEE,$EC46,$76CF
                dc.w    $DED3,$6760,$EEEE,$C677,$EFDD,$E567,$6DFD,$ED67
                dc.w    $64EE,$EE36,$76EE,$EDD5,$764E,$FCD4,$676E,$EEED
                dc.w    $676C,$FDEC,$676C,$FDEC,$577D,$FDDE,$3676,$EEEE
                dc.w    $1676,$EFCD,$A676,$EFDD,$3675,$EEED,$B676,$EFCE
                dc.w    $3667,$DFDE,$1676,$EFDD,$5666,$CEEE,$C576,$0FDE
                dc.w    $2766,$FDEC,$9576,$BFDE,$A567,$4EEE,$E576,$5FDD
                dc.w    $E676,$EFD5,$75EF,$4553,$43AC,$A22A,$0A22,$13C3
                dc.w    $0A20,$A200,$3BBD,$A662,$EEDC,$A555,$2BA9,$65EE
                dc.w    $DD35,$5565,$EFBD,$576C,$FDD1,$763F,$EC46,$75EF
                dc.w    $DC47,$63FD,$E367,$6EFD,$D576,$EFB2,$567D,$FEB3
                dc.w    $674F,$ED46,$74EF,$C267,$3EFC,$2576,$DFEC,$2666
                dc.w    $CF15,$65BE,$D0CC,$D475,$EF45,$665E,$F2D4,$675E
                dc.w    $FDB5,$67DF,$EB56,$7BFE,$C366,$6DFC,$D466,$6EFB
                dc.w    $5665,$EF14,$5662,$EEE5,$566B,$FD95,$664E,$F256
                dc.w    $64EF,$4566,$5EF1,$5656,$CFE5,$5662,$EF46,$556C
                dc.w    $FE56,$456C,$FE56,$555E,$ED65,$0AAB,$2BBC,$4554
                dc.w    $CEEC,$655A,$D2B3,$BA31,$2B2B,$3B45,$9EE6,$51C9
                dc.w    $55DE,$D554,$60EE,$0555,$5CEE,$5545,$5BEE,$9635
                dc.w    $5AEE,$3552,$54CE,$D355,$6CEE,$2555,$5DED,$5555
                dc.w    $DED5,$555D,$ED55,$444C,$ED55,$54AE,$D055,$A342
                dc.w    $DE35,$5B44,$3EE3,$5555,$1EE1,$5445,$49EE,$5554
                dc.w    $5CEE,$4565,$0EEC,$6345,$4CEE,$5555,$5DFC,$56A5
                dc.w    $51EE,$A556,$5DFD,$5645,$5DFC,$6505,$54EF,$1656
                dc.w    $6DFE,$5656,$5DFE,$5645,$69EF,$C656,$55EF,$D660
                dc.w    $569E,$FD66,$456C,$FED6,$666E,$FE56,$75EF,$E665
                dc.w    $3CCC,$0004,$A10C,$141A,$0BA1,$2292,$C420,$BB33
                dc.w    $ACD5,$66DF,$ED57,$5CCD,$C366,$3FEE,$3665,$0265
                dc.w    $EF45,$2322,$0000,$0000,$0000,$0000,$0000,$0A0B
DAC_Sample04_End:     

                cnop    $0000,$F0000 
Music_98_Offset equ     (Music_98&$FFFF)|$8000
Music_99_Offset equ     (Music_99&$FFFF)|$8000
Music_9A_Offset equ     (Music_9A&$FFFF)|$8000
Music_9B_Offset equ     (Music_9B&$FFFF)|$8000   
Music_9C_Offset equ     (Music_9C&$FFFF)|$8000
Music_9D_Offset equ     (Music_9D&$FFFF)|$8000
; Music_9E_Offset equ     (Music_9E&$FFFF)|$8000
; Music_9F_Offset equ     (Music_9F&$FFFF)|$8000  
                             
                dc.w    ((Music_98_Offset>>$08)|(Music_98_Offset<<$08))&$FFFF 
                dc.w    ((Music_99_Offset>>$08)|(Music_99_Offset<<$08))&$FFFF 
                dc.w    ((Music_9A_Offset>>$08)|(Music_9A_Offset<<$08))&$FFFF
                dc.w    ((Music_9B_Offset>>$08)|(Music_9B_Offset<<$08))&$FFFF 
                dc.w    ((Music_9C_Offset>>$08)|(Music_9C_Offset<<$08))&$FFFF 
                dc.w    ((Music_9D_Offset>>$08)|(Music_9D_Offset<<$08))&$FFFF
Music_98: ; Offset_0x0F000C:             
                incbin  'data\sounds\1up_98.snd'                
Music_99: ; Offset_0x0F00F9:                
                incbin  'data\sounds\tscrn_99.snd'
Music_9A: ; Offset_0x0F02A5:              
                incbin  'data\sounds\rscrn_9A.snd'
Music_9B: ; Offset_0x0F03FA:                           
                incbin  'data\sounds\tgovr_9B.snd'
Music_9C: ; Offset_0x0F0549:
                incbin  'data\sounds\cont_9C.snd'
Music_9D: ; Offset_0x0F06A6:
                incbin  'data\sounds\emrld_9D.snd'

                cnop    $000000, $0F1E8C
Sega_Snd: ; Offset_0x0F1E8C:                
                incbin  'data\sounds\sega.snd'                 
                
                cnop    $000000, $0F8000    
Music_81_Offset equ     (Music_81&$FFFF)|$8000  
Music_82_Offset equ     (Music_82&$FFFF)|$8000  
Music_83_Offset equ     (Music_83&$FFFF)|$8000  
Music_84_Offset equ     (Music_84&$FFFF)|$8000  
Music_85_Offset equ     (Music_85&$FFFF)|$8000  
Music_86_Offset equ     (Music_86&$FFFF)|$8000  
Music_87_Offset equ     (Music_87&$FFFF)|$8000  
Music_88_Offset equ     (Music_88&$FFFF)|$8000  
Music_89_Offset equ     (Music_89&$FFFF)|$8000  
Music_8A_Offset equ     (Music_8A&$FFFF)|$8000  
Music_8B_Offset equ     (Music_8B&$FFFF)|$8000  
Music_8C_Offset equ     (Music_8C&$FFFF)|$8000  
Music_8D_Offset equ     (Music_8D&$FFFF)|$8000  
Music_8E_Offset equ     (Music_8E&$FFFF)|$8000  
Music_8F_Offset equ     (Music_8F&$FFFF)|$8000  
Music_90_Offset equ     (Music_90&$FFFF)|$8000  
Music_91_Offset equ     (Music_91&$FFFF)|$8000  
Music_92_Offset equ     (Music_92&$FFFF)|$8000  
Music_93_Offset equ     (Music_93&$FFFF)|$8000  
Music_94_Offset equ     (Music_94&$FFFF)|$8000  
Music_95_Offset equ     (Music_95&$FFFF)|$8000  
Music_96_Offset equ     (Music_96&$FFFF)|$8000  
Music_97_Offset equ     (Music_97&$FFFF)|$8000  

Music_81_To_97: ; Offset_0x0F8000:                
                dc.w    (((Music_81_Offset>>$08)|(Music_81_Offset<<$08))&$FFFF)
                dc.w    (((Music_82_Offset>>$08)|(Music_82_Offset<<$08))&$FFFF)
                dc.w    (((Music_83_Offset>>$08)|(Music_83_Offset<<$08))&$FFFF)
                dc.w    (((Music_84_Offset>>$08)|(Music_84_Offset<<$08))&$FFFF)
                dc.w    (((Music_85_Offset>>$08)|(Music_85_Offset<<$08))&$FFFF)
                dc.w    (((Music_86_Offset>>$08)|(Music_86_Offset<<$08))&$FFFF)
                dc.w    (((Music_87_Offset>>$08)|(Music_87_Offset<<$08))&$FFFF)
                dc.w    (((Music_88_Offset>>$08)|(Music_88_Offset<<$08))&$FFFF)
                dc.w    (((Music_89_Offset>>$08)|(Music_89_Offset<<$08))&$FFFF)
                dc.w    (((Music_8A_Offset>>$08)|(Music_8A_Offset<<$08))&$FFFF)
                dc.w    (((Music_8B_Offset>>$08)|(Music_8B_Offset<<$08))&$FFFF)
                dc.w    (((Music_8C_Offset>>$08)|(Music_8C_Offset<<$08))&$FFFF)
                dc.w    (((Music_8D_Offset>>$08)|(Music_8D_Offset<<$08))&$FFFF)
                dc.w    (((Music_8E_Offset>>$08)|(Music_8E_Offset<<$08))&$FFFF)
                dc.w    (((Music_8F_Offset>>$08)|(Music_8F_Offset<<$08))&$FFFF)
                dc.w    (((Music_90_Offset>>$08)|(Music_90_Offset<<$08))&$FFFF)
                dc.w    (((Music_92_Offset>>$08)|(Music_92_Offset<<$08))&$FFFF)
                dc.w    (((Music_93_Offset>>$08)|(Music_93_Offset<<$08))&$FFFF)
                dc.w    (((Music_94_Offset>>$08)|(Music_94_Offset<<$08))&$FFFF)
                dc.w    (((Music_95_Offset>>$08)|(Music_95_Offset<<$08))&$FFFF)
                dc.w    (((Music_96_Offset>>$08)|(Music_96_Offset<<$08))&$FFFF)               
                
Music_81: ; Offset_0x0F802A:
                incbin  'data\sounds\ooz_81.snd'
Music_82: ; Offset_0x0F85AC: 
                incbin  'data\sounds\ghz_82.snd'
Music_83: ; Offset_0x0F8D1D:
                incbin  'data\sounds\mz_wz_83.snd'
Music_84: ; Offset_0x0F927A: 
                incbin  'data\sounds\cnz_84.snd'               
Music_85: ; Offset_0x0F9DEE: 
                incbin  'data\sounds\dhz_85.snd' 
Music_86: ; Offset_0x0FA49E: 
                incbin  'data\sounds\hpz_86.snd' 
Music_87: ; Offset_0x0FA8E7: 
                incbin  'data\sounds\nghz_87.snd' 
Music_88: ; Offset_0x0FB10A: 
                incbin  'data\sounds\music_88.snd' 
Music_89: ; Offset_0x0FB778:  
                incbin  'data\sounds\ss_89.snd' 
Music_8A:                 
Music_8B: ; Offset_0x0FBD7F:   
                incbin  'data\sounds\menu_8A.snd' 
Music_8C: ; Offset_0x0FBED8:  
                incbin  'data\sounds\music_8C.snd'
Music_8D: ; Offset_0x0FC249:    
                incbin  'data\sounds\cpz_8D.snd' 
Music_8E: ; Offset_0x0FC8AE:   
                incbin  'data\sounds\boss_8E.snd'
Music_8F: ; Offset_0x0FCB08:  
                incbin  'data\sounds\music_8F.snd'
Music_90:
Music_91: ; Offset_0x0FCF0B:                 
                incbin  'data\sounds\music_90.snd'
Music_92: ; Offset_0x0FD322:  
                incbin  'data\sounds\music_92.snd'
Music_93: ; Offset_0x0FD73B:  
                incbin  'data\sounds\music_93.snd'
Music_94: ; Offset_0x0FDC54:   
                incbin  'data\sounds\music_94.snd'
Music_95: ; Offset_0x0FE0B7:  
                incbin  'data\sounds\invcb_95.snd'
Music_96:
Music_97: ; Offset_0x0FE3BE:              
                incbin  'data\sounds\htz_96.snd'              
                                
                cnop    $000000, $0FF000 
Sfx_A0_Offset   equ     (Sfx_A0&$FFFF)|$8000   
Sfx_A1_Offset   equ     (Sfx_A1&$FFFF)|$8000    
Sfx_A2_Offset   equ     (Sfx_A2&$FFFF)|$8000    
Sfx_A3_Offset   equ     (Sfx_A3&$FFFF)|$8000  
Sfx_A4_Offset   equ     (Sfx_A4&$FFFF)|$8000 
Sfx_A5_Offset   equ     (Sfx_A5&$FFFF)|$8000  
Sfx_A6_Offset   equ     (Sfx_A6&$FFFF)|$8000   
Sfx_A7_Offset   equ     (Sfx_A7&$FFFF)|$8000    
Sfx_A8_Offset   equ     (Sfx_A8&$FFFF)|$8000    
Sfx_A9_Offset   equ     (Sfx_A9&$FFFF)|$8000  
Sfx_AA_Offset   equ     (Sfx_AA&$FFFF)|$8000 
Sfx_AB_Offset   equ     (Sfx_AB&$FFFF)|$8000  
Sfx_AC_Offset   equ     (Sfx_AC&$FFFF)|$8000   
Sfx_AD_Offset   equ     (Sfx_AD&$FFFF)|$8000    
Sfx_AE_Offset   equ     (Sfx_AE&$FFFF)|$8000    
Sfx_AF_Offset   equ     (Sfx_AF&$FFFF)|$8000  
Sfx_B0_Offset   equ     (Sfx_B0&$FFFF)|$8000 
Sfx_B1_Offset   equ     (Sfx_B1&$FFFF)|$8000  
Sfx_B2_Offset   equ     (Sfx_B2&$FFFF)|$8000   
Sfx_B3_Offset   equ     (Sfx_B3&$FFFF)|$8000    
Sfx_B4_Offset   equ     (Sfx_B4&$FFFF)|$8000    
Sfx_B5_Offset   equ     (Sfx_B5&$FFFF)|$8000  
Sfx_B6_Offset   equ     (Sfx_B6&$FFFF)|$8000 
Sfx_B7_Offset   equ     (Sfx_B7&$FFFF)|$8000  
Sfx_B8_Offset   equ     (Sfx_B8&$FFFF)|$8000    
Sfx_B9_Offset   equ     (Sfx_B9&$FFFF)|$8000  
Sfx_BA_Offset   equ     (Sfx_BA&$FFFF)|$8000 
Sfx_BB_Offset   equ     (Sfx_BB&$FFFF)|$8000  
Sfx_BC_Offset   equ     (Sfx_BC&$FFFF)|$8000   
Sfx_BD_Offset   equ     (Sfx_BD&$FFFF)|$8000    
Sfx_BE_Offset   equ     (Sfx_BE&$FFFF)|$8000    
Sfx_BF_Offset   equ     (Sfx_BF&$FFFF)|$8000 
Sfx_C0_Offset   equ     (Sfx_C0&$FFFF)|$8000 
Sfx_C1_Offset   equ     (Sfx_C1&$FFFF)|$8000  
Sfx_C2_Offset   equ     (Sfx_C2&$FFFF)|$8000   
Sfx_C3_Offset   equ     (Sfx_C3&$FFFF)|$8000    
Sfx_C4_Offset   equ     (Sfx_C4&$FFFF)|$8000    
Sfx_C5_Offset   equ     (Sfx_C5&$FFFF)|$8000  
Sfx_C6_Offset   equ     (Sfx_C6&$FFFF)|$8000 
Sfx_C7_Offset   equ     (Sfx_C7&$FFFF)|$8000  
Sfx_C8_Offset   equ     (Sfx_C8&$FFFF)|$8000    
Sfx_C9_Offset   equ     (Sfx_C9&$FFFF)|$8000  
Sfx_CA_Offset   equ     (Sfx_CA&$FFFF)|$8000 
Sfx_CB_Offset   equ     (Sfx_CB&$FFFF)|$8000  
Sfx_CC_Offset   equ     (Sfx_CC&$FFFF)|$8000   
Sfx_CD_Offset   equ     (Sfx_CD&$FFFF)|$8000    
Sfx_CE_Offset   equ     (Sfx_CE&$FFFF)|$8000    
Sfx_CF_Offset   equ     (Sfx_CF&$FFFF)|$8000 
Sfx_D0_Offset   equ     (Sfx_D0&$FFFF)|$8000 
Sfx_D1_Offset   equ     (Sfx_D1&$FFFF)|$8000  
Sfx_D2_Offset   equ     (Sfx_D2&$FFFF)|$8000   
Sfx_D3_Offset   equ     (Sfx_D3&$FFFF)|$8000    
Sfx_D4_Offset   equ     (Sfx_D4&$FFFF)|$8000    
Sfx_D5_Offset   equ     (Sfx_D5&$FFFF)|$8000  
Sfx_D6_Offset   equ     (Sfx_D6&$FFFF)|$8000 
Sfx_D7_Offset   equ     (Sfx_D7&$FFFF)|$8000  
Sfx_D8_Offset   equ     (Sfx_D8&$FFFF)|$8000    
Sfx_D9_Offset   equ     (Sfx_D9&$FFFF)|$8000  
Sfx_DA_Offset   equ     (Sfx_DA&$FFFF)|$8000 
Sfx_DB_Offset   equ     (Sfx_DB&$FFFF)|$8000  
Sfx_DC_Offset   equ     (Sfx_DC&$FFFF)|$8000   
Sfx_DD_Offset   equ     (Sfx_DD&$FFFF)|$8000    
Sfx_DE_Offset   equ     (Sfx_DE&$FFFF)|$8000    
Sfx_DF_Offset   equ     (Sfx_DF&$FFFF)|$8000 
Sfx_E0_Offset   equ     (Sfx_E0&$FFFF)|$8000 
        
Sfx_A0_To_F9: ; Offset_0x0FF000:      
                dc.w    (((Sfx_A0_Offset>>$08)|(Sfx_A0_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_A1_Offset>>$08)|(Sfx_A1_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_A2_Offset>>$08)|(Sfx_A2_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_A3_Offset>>$08)|(Sfx_A3_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_A4_Offset>>$08)|(Sfx_A4_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_A5_Offset>>$08)|(Sfx_A5_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_A6_Offset>>$08)|(Sfx_A6_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_A7_Offset>>$08)|(Sfx_A7_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_A8_Offset>>$08)|(Sfx_A8_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_A9_Offset>>$08)|(Sfx_A9_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_AA_Offset>>$08)|(Sfx_AA_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_AB_Offset>>$08)|(Sfx_AB_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_AC_Offset>>$08)|(Sfx_AC_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_AD_Offset>>$08)|(Sfx_AD_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_AE_Offset>>$08)|(Sfx_AE_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_AF_Offset>>$08)|(Sfx_AF_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_B0_Offset>>$08)|(Sfx_B0_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_B1_Offset>>$08)|(Sfx_B1_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_B2_Offset>>$08)|(Sfx_B2_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_B3_Offset>>$08)|(Sfx_B3_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_B4_Offset>>$08)|(Sfx_B4_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_B5_Offset>>$08)|(Sfx_B5_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_B6_Offset>>$08)|(Sfx_B6_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_B7_Offset>>$08)|(Sfx_B7_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_B8_Offset>>$08)|(Sfx_B8_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_B9_Offset>>$08)|(Sfx_B9_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_BA_Offset>>$08)|(Sfx_BA_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_BB_Offset>>$08)|(Sfx_BB_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_BC_Offset>>$08)|(Sfx_BC_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_BD_Offset>>$08)|(Sfx_BD_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_BE_Offset>>$08)|(Sfx_BE_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_BF_Offset>>$08)|(Sfx_BF_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_C0_Offset>>$08)|(Sfx_C0_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_C1_Offset>>$08)|(Sfx_C1_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_C2_Offset>>$08)|(Sfx_C2_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_C3_Offset>>$08)|(Sfx_C3_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_C4_Offset>>$08)|(Sfx_C4_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_C5_Offset>>$08)|(Sfx_C5_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_C6_Offset>>$08)|(Sfx_C6_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_C7_Offset>>$08)|(Sfx_C7_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_C8_Offset>>$08)|(Sfx_C8_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_C9_Offset>>$08)|(Sfx_C9_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_CA_Offset>>$08)|(Sfx_CA_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_CB_Offset>>$08)|(Sfx_CB_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_CC_Offset>>$08)|(Sfx_CC_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_CD_Offset>>$08)|(Sfx_CD_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_CE_Offset>>$08)|(Sfx_CE_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_CF_Offset>>$08)|(Sfx_CF_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_D0_Offset>>$08)|(Sfx_D0_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_D1_Offset>>$08)|(Sfx_D1_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_D2_Offset>>$08)|(Sfx_D2_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_D3_Offset>>$08)|(Sfx_D3_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_D4_Offset>>$08)|(Sfx_D4_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_D5_Offset>>$08)|(Sfx_D5_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_D6_Offset>>$08)|(Sfx_D6_Offset<<$08))&$FFFF)      
                dc.w    (((Sfx_D7_Offset>>$08)|(Sfx_D7_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_D8_Offset>>$08)|(Sfx_D8_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_D9_Offset>>$08)|(Sfx_D9_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_DA_Offset>>$08)|(Sfx_DA_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_DB_Offset>>$08)|(Sfx_DB_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_DC_Offset>>$08)|(Sfx_DC_Offset<<$08))&$FFFF)   
                dc.w    (((Sfx_DD_Offset>>$08)|(Sfx_DD_Offset<<$08))&$FFFF)
                dc.w    (((Sfx_DE_Offset>>$08)|(Sfx_DE_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_DF_Offset>>$08)|(Sfx_DF_Offset<<$08))&$FFFF) 
                dc.w    (((Sfx_E0_Offset>>$08)|(Sfx_E0_Offset<<$08))&$FFFF) 
Sfx_A0: ; Offset_0x0FF082:          
                dc.b    $00, $00, $01, $01, $80, $80, $8C, $F0, $F4, $00, $F5, $00, $9E, $05, $F0, $02
                dc.b    $01, $F8, $65, $A3, $15, $F2  
Sfx_A1: ; Offset_0x0FF098:                
                dc.b    $A2, $F0, $01, $01, $80, $05, $BB, $F0, $00, $01, $3C, $05, $0A, $01, $01, $56
                dc.b    $5C, $5C, $5C, $0E, $11, $11, $11, $09, $06, $0A, $0A, $4F, $3F, $3F, $3F, $17
                dc.b    $20, $80, $80, $EF, $00, $BD, $06, $BA, $16, $F2
Sfx_A2: ; Offset_0x0FF0C2: 
                dc.b    $00, $00, $01, $01, $80, $C0, $CC, $F0, $00, $00, $F0, $01, $01, $F0, $08, $F3
                dc.b    $E7, $C0, $04, $CA, $04, $C0, $01, $EC, $01, $F7, $00, $06, $D7, $F0, $F2
Sfx_A3: ; Offset_0x0FF0E1:                       
                dc.b    $FA, $F0, $01, $01, $80, $05, $EB, $F0, $F4, $00, $EF, $00, $B0, $07, $E7, $AD
                dc.b    $01, $E6, $01, $F7, $00, $2F, $F1, $F0, $F2, $30, $30, $30, $30, $30, $9E, $DC
                dc.b    $D8, $DC, $0E, $04, $0A, $05, $08, $08, $08, $08, $BF, $BF, $BF, $BF, $14, $14
                dc.b    $3C, $80
Sfx_A4: ; Offset_0x0FF113:                 
                dc.b    $00, $00, $01, $02, $80, $A0, $23, $F1, $F4, $00, $80, $C0, $35, $F1, $F4, $00
                dc.b    $F5, $00, $AF, $01, $80, $AF, $80, $03, $AF, $01, $80, $01, $F7, $00, $0B, $2B
                dc.b    $F1, $F2, $F5, $00, $80, $01, $AD, $80, $AD, $80, $03, $AD, $01, $80, $01, $F7
                dc.b    $00, $0B, $3E, $F1, $F2                 
Sfx_A5: ; Offset_0x0FF148:                    
                dc.b    $5B, $F1, $01, $01, $80, $05, $52, $F1, $00, $00, $EF, $00, $80, $01, $8B, $0A
                dc.b    $80, $02, $F2, $FA, $21, $10, $30, $32, $2F, $2F, $1F, $2F, $05, $09, $08, $02
                dc.b    $06, $06, $0F, $02, $1F, $4F, $2F, $2F, $0F, $0E, $1A, $80 
Sfx_A6: ; Offset_0x0FF174:  
                dc.b    $8A, $F1, $01, $01, $80, $05, $7E, $F1, $F2, $00, $EF, $00, $F0, $01, $01, $10
                dc.b    $FF, $CF, $05, $D7, $25, $F2, $3B, $3C, $30, $39, $31, $DF, $1F, $1F, $DF, $04
                dc.b    $04, $05, $01, $04, $04, $04, $02, $FF, $1F, $0F, $AF, $29, $0F, $20, $80
Sfx_A7: ; Offset_0x0FF1A3:    
                dc.b    $B9, $F1, $01, $01, $80, $04, $AD, $F1, $00, $06, $EF, $00, $8F, $07, $80, $02
                dc.b    $8F, $06, $80, $10, $ED, $F2, $FA, $21, $10, $30, $32, $1F, $1F, $1F, $1F, $05
                dc.b    $09, $18, $02, $06, $06, $0F, $02, $1F, $4F, $2F, $2F, $0F, $0E, $0E, $80
Sfx_A8: ; Offset_0x0FF1D2:    
                dc.b    $8A, $F1, $01, $01, $80, $05, $DC, $F1, $F2, $04, $EF, $00, $A6, $02, $E7, $A4
                dc.b    $01, $E7, $E9, $02, $F7, $00, $26, $DF, $F1, $F2
Sfx_A9: ; Offset_0x0FF1EC:  
                dc.b    $00, $00, $01, $01, $80, $A0, $F6, $F1, $00, $00, $F0, $01, $01, $E6, $35, $8E
                dc.b    $06, $F2
Sfx_AA: ; Offset_0x0FF1FE:   
                dc.b    $26, $F2, $01, $02, $80, $C0, $0E, $F2, $00, $00, $80, $05, $21, $F2, $00, $03
                dc.b    $F5, $00, $F3, $E7, $C2, $05, $C6, $05, $E7, $07, $EC, $01, $E7, $F7, $00, $0F
                dc.b    $17, $F2, $F2, $EF, $00, $A6, $14, $F2, $00, $00, $02, $03, $00, $D9, $1F, $DF
                dc.b    $1F, $12, $14, $11, $0F, $0A, $0A, $00, $0D, $FF, $FF, $FF, $FF, $22, $27, $07
                dc.b    $80               
Sfx_AB: ; Offset_0x0FF23F:   
                dc.b    $00, $00, $01, $01, $80, $C0, $49, $F2, $00, $00, $F5, $00, $F3, $E7, $C6, $03
                dc.b    $80, $03, $C6, $01, $E7, $01, $EC, $01, $E7, $F7, $00, $15, $54, $F2, $F2
Sfx_AC: ; Offset_0x0FF25E:    
                dc.b    $79, $F2, $01, $01, $80, $05, $68, $F2, $00, $00, $EF, $00, $F0, $01, $01, $0C
                dc.b    $01, $81, $0A, $E6, $10, $F7, $00, $04, $6F, $F2, $F2, $F9, $21, $10, $30, $32
                dc.b    $1F, $1F, $1F, $1F, $05, $09, $18, $02, $0B, $10, $1F, $05, $1F, $4F, $2F, $2F
                dc.b    $0E, $04, $07, $80
Sfx_AD: ; Offset_0x0FF292:  
                dc.b    $AF, $F2, $01, $01, $80, $05, $9C, $F2, $0E, $00, $EF, $00, $F0, $01, $01, $21
                dc.b    $6E, $A6, $07, $80, $06, $F0, $01, $01, $44, $1E, $AD, $08, $F2, $35, $05, $08
                dc.b    $09, $07, $1E, $0D, $0D, $0E, $0C, $03, $15, $06, $16, $09, $0E, $10, $2F, $1F
                dc.b    $2F, $1F, $15, $12, $12, $80
Sfx_AE: ; Offset_0x0FF2C8:
                dc.b    $F9, $F2, $01, $02, $80, $05, $D8, $F2, $00, $00, $80, $C0, $E6, $F2, $00, $00
                dc.b    $EF, $00, $80, $01, $F0, $01, $01, $40, $48, $83, $06, $85, $02, $F2, $F5, $00
                dc.b    $80, $0B, $F3, $E7, $C6, $01, $E7, $02, $EC, $01, $E7, $F7, $00, $10, $EF, $F2
                dc.b    $F2, $FA, $02, $00, $03, $05, $12, $0F, $11, $13, $05, $09, $18, $02, $06, $06
                dc.b    $0F, $02, $1F, $4F, $2F, $2F, $2F, $0E, $1A, $80                  
Sfx_AF: ; Offset_0x0FF312:   
                dc.b    $26, $F3, $01, $01, $80, $05, $1C, $F3, $0C, $00, $EF, $00, $80, $01, $A3, $05
                dc.b    $E7, $A4, $26, $F2, $30, $30, $30, $30, $30, $9E, $AC, $A8, $DC, $0E, $04, $0A
                dc.b    $05, $08, $08, $08, $08, $BF, $BF, $BF, $BF, $04, $14, $2C, $80             
Sfx_B0: ; Offset_0x0FF33F:     
                dc.b    $57, $F3, $01, $01, $80, $05, $49, $F3, $FB, $05, $EF, $00, $DF, $7F, $DF, $02
                dc.b    $E6, $01, $F7, $00, $1B, $4D, $F3, $F2, $83, $1F, $1F, $15, $1F, $1F, $1F, $1F
                dc.b    $1F, $00, $00, $00, $00, $02, $02, $02, $02, $2F, $FF, $2F, $3F, $0B, $01, $16
                dc.b    $82     
Sfx_B1: ; Offset_0x0FF370:                  
                dc.b    $83, $F3, $01, $01, $80, $05, $7A, $F3, $FB, $02, $EF, $00, $B3, $05, $80, $01
                dc.b    $B3, $09, $F2, $83, $12, $13, $10, $1E, $1F, $1F, $1F, $1F, $00, $00, $00, $00
                dc.b    $02, $02, $02, $02, $2F, $FF, $2F, $3F, $05, $34, $10, $87
Sfx_B2: ; Offset_0x0FF39C:    
                dc.b    $D2, $F3, $01, $02, $80, $04, $BE, $F3, $0C, $04, $80, $05, $AC, $F3, $0E, $02
                dc.b    $EF, $00, $F0, $01, $01, $83, $0C, $8A, $05, $05, $E6, $03, $F7, $00, $0A, $B3
                dc.b    $F3, $F2, $80, $06, $EF, $00, $F0, $01, $01, $6F, $0E, $8D, $04, $05, $E6, $03
                dc.b    $F7, $00, $0A, $C7, $F3, $F2, $35, $14, $04, $1A, $09, $0E, $11, $10, $0E, $0C
                dc.b    $03, $15, $06, $16, $09, $0E, $10, $2F, $4F, $2F, $4F, $2F, $12, $12, $80
Sfx_B3: ; Offset_0x0FF3EB:
                dc.b    $F9, $F2, $01, $02, $80, $05, $FB, $F3, $00, $00, $80, $C0, $09, $F4, $00, $00
                dc.b    $EF, $00, $80, $01, $F0, $01, $01, $40, $48, $83, $06, $85, $02, $F2, $F5, $00
                dc.b    $80, $0B, $F3, $E7, $A7, $25, $E7, $02, $EC, $01, $E7, $F7, $00, $10, $12, $F4
                dc.b    $F2  
Sfx_B4: ; Offset_0x0FF41C:
                dc.b    $45, $F4, $01, $03, $80, $05, $32, $F4, $00, $00, $80, $04, $37, $F4, $00, $00
                dc.b    $80, $02, $40, $F4, $00, $02, $EF, $00, $F6, $3D, $F4, $EF, $00, $E1, $07, $80
                dc.b    $01, $BA, $20, $F2, $EF, $01, $9A, $03, $F2, $3C, $05, $0A, $01, $01, $56, $5C
                dc.b    $5C, $5C, $0E, $11, $11, $11, $09, $06, $0A, $0A, $4F, $3F, $3F, $3F, $1F, $2B
                dc.b    $80, $80, $05, $00, $00, $00, $00, $1F, $1F, $1F, $1F, $12, $0C, $0C, $0C, $12
                dc.b    $08, $08, $08, $1F, $5F, $5F, $5F, $07, $80, $80, $80 

Sfx_B5: ; Offset_0x0FF477:
                dc.b    $47, $F8, $01, $01, $80, $05, $81, $F4, $00, $05, $EF, $00, $E0, $40, $C1, $05
                dc.b    $C4, $05, $C9, $1B, $F2 
Sfx_B6: ; Offset_0x0FF48C:  
                dc.b    $00, $00, $01, $01, $80, $C0, $96, $F4, $00, $00, $F0, $01, $01, $F0, $08, $F3
                dc.b    $E7, $C1, $07, $D0, $01, $EC, $01, $F7, $00, $0C, $9F, $F4, $F2
Sfx_B7: ; Offset_0x0FF4A9:
                dc.b    $CB, $F4, $01, $01, $80, $05, $B3, $F4, $00, $00, $EF, $00, $F0, $01, $01, $20
                dc.b    $08, $8B, $0A, $F7, $00, $08, $BA, $F4, $8B, $10, $E6, $03, $F7, $00, $09, $C1
                dc.b    $F4, $F2, $FA, $21, $10, $30, $32, $1F, $1F, $1F, $1F, $05, $09, $18, $02, $06
                dc.b    $06, $0F, $02, $1F, $4F, $2F, $2F, $0F, $0E, $1A, $80
Sfx_B8: ; Offset_0x0FF4E4:
                dc.b    $00, $00, $01, $01, $80, $C0, $EE, $F4, $00, $00, $F0, $01, $01, $F0, $08, $F3
                dc.b    $E7, $B4, $08, $B0, $02, $EC, $01, $F7, $00, $03, $F7, $F4, $F2    
Sfx_B9: ; Offset_0x0FF501:   
                dc.b    $79, $F2, $01, $04, $80, $02, $1D, $F5, $10, $00, $80, $04, $28, $F5, $00, $00
                dc.b    $80, $05, $24, $F5, $10, $00, $80, $C0, $39, $F5, $00, $00, $E0, $40, $80, $02
                dc.b    $F6, $28, $F5, $E0, $80, $80, $01, $EF, $00, $F0, $03, $01, $20, $04, $81, $18
                dc.b    $E6, $0A, $F7, $00, $06, $2F, $F5, $F2, $F0, $01, $01, $0F, $05, $F3, $E7, $B0
                dc.b    $18, $E7, $EC, $03, $F7, $00, $05, $40, $F5, $F2
Sfx_BA: ; Offset_0x0FF54B:
                dc.b    $5A, $F5, $01, $01, $80, $05, $55, $F5, $00, $07, $EF, $00, $AE, $08, $F2, $1C
                dc.b    $2E, $0F, $02, $02, $1F, $1F, $1F, $1F, $18, $14, $0F, $0E, $00, $00, $00, $00
                dc.b    $FF, $FF, $FF, $FF, $20, $1B, $80, $80 
Sfx_BB: ; Offset_0x0FF573:
                dc.b    $85, $F5, $01, $01, $80, $05, $7D, $F5, $F4, $00, $EF, $00, $9B, $04, $80, $A0
                dc.b    $06, $F2, $3C, $00, $00, $00, $00, $1F, $1F, $1F, $1F, $00, $0F, $16, $0F, $00
                dc.b    $00, $00, $00, $0F, $FF, $AF, $FF, $00, $0A, $80, $80
Sfx_BC: ; Offset_0x0FF59E:
                dc.b    $C6, $F5, $01, $02, $80, $05, $AE, $F5, $90, $00, $80, $C0, $B8, $F5, $00, $00
                dc.b    $EF, $00, $F0, $01, $01, $C5, $1A, $CD, $07, $F2, $F5, $07, $80, $07, $F0, $01
                dc.b    $02, $05, $FF, $F3, $E7, $BB, $4F, $F2, $FD, $09, $00, $03, $00, $1F, $1F, $1F
                dc.b    $1F, $10, $0C, $0C, $0C, $0B, $10, $1F, $05, $1F, $4F, $2F, $2F, $09, $92, $84
                dc.b    $8E           
Sfx_BD: ; Offset_0x0FF5DF:
                dc.b    $00, $F6, $01, $02, $80, $05, $EF, $F5, $10, $0A, $80, $04, $F9, $F5, $00, $00
                dc.b    $EF, $00, $F0, $01, $01, $60, $01, $A7, $08, $F2, $80, $08, $EF, $01, $84, $22
                dc.b    $F2, $FA, $21, $19, $3A, $30, $1F, $1F, $1F, $1F, $05, $09, $18, $02, $0B, $10
                dc.b    $1F, $05, $1F, $4F, $2F, $2F, $0E, $04, $07, $80, $FA, $31, $10, $30, $32, $1F
                dc.b    $1F, $1F, $1F, $05, $05, $18, $10, $0B, $10, $1F, $10, $1F, $1F, $2F, $2F, $0D
                dc.b    $01, $00, $80               
Sfx_BE: ; Offset_0x0FF632:
                dc.b    $53, $F6, $01, $01, $80, $04, $3C, $F6, $0C, $05, $EF, $00, $80, $01, $F0, $03
                dc.b    $01, $09, $FF, $CA, $25, $F4, $E7, $E6, $01, $D0, $02, $F7, $00, $2A, $48, $F6
                dc.b    $F2, $3C, $00, $02, $44, $02, $1F, $1F, $1F, $15, $00, $00, $1F, $00, $00, $00
                dc.b    $00, $00, $0F, $0F, $0F, $0F, $0D, $28, $00, $00
Sfx_BF: ; Offset_0x0FF66C:
                dc.b    $C5, $F6, $01, $03, $80, $02, $82, $F6, $F4, $06, $80, $04, $9D, $F6, $F4, $06
                dc.b    $80, $05, $B2, $F6, $F4, $06, $EF, $00, $C9, $07, $CD, $D0, $CB, $CE, $D2, $CD
                dc.b    $D0, $D4, $CE, $D2, $D5, $D0, $07, $D4, $D7, $E6, $05, $F7, $00, $08, $91, $F6
                dc.b    $F2, $EF, $00, $E1, $01, $80, $07, $CD, $15, $CE, $D0, $D2, $D4, $15, $E6, $05
                dc.b    $F7, $00, $08, $A8, $F6, $F2, $EF, $00, $E1, $01, $C9, $15, $CB, $CD, $CE, $D0
                dc.b    $15, $E6, $05, $F7, $00, $08, $BB, $F6, $F2, $14, $25, $36, $33, $11, $1F, $1F
                dc.b    $1F, $1F, $15, $1C, $18, $13, $0B, $0D, $08, $09, $0F, $8F, $9F, $0F, $24, $0A
                dc.b    $05, $80               
Sfx_C0: ; Offset_0x0FF6DE:
                dc.b    $F3, $F6, $01, $01, $80, $05, $E8, $F6, $00, $03, $EF, $00, $94, $05, $80, $05
                dc.b    $94, $04, $80, $04, $F2, $38, $08, $08, $08, $08, $1F, $1F, $1F, $0E, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $0F, $0F, $0F, $1F, $00, $00, $00, $80
Sfx_C1: ; Offset_0x0FF70C:
                dc.b    $2D, $F7, $01, $02, $80, $05, $1C, $F7, $00, $00, $80, $C0, $26, $F7, $00, $02
                dc.b    $F0, $03, $01, $72, $0B, $EF, $00, $BA, $16, $F2, $F5, $01, $F3, $E7, $B0, $1B
                dc.b    $F2, $3C, $0F, $03, $01, $01, $1F, $1F, $1F, $1F, $19, $19, $12, $0E, $05, $00
                dc.b    $12, $0F, $0F, $FF, $7F, $FF, $00, $00, $80, $80               
Sfx_C2: ; Offset_0x0FF746:
                dc.b    $C5, $F6, $01, $01, $80, $05, $50, $F7, $0C, $08, $EF, $00, $BA, $08, $BA, $25
                dc.b    $F2
Sfx_C3: ; Offset_0x0FF757:
                dc.b    $86, $F7, $01, $02, $80, $04, $67, $F7, $0C, $00, $80, $05, $73, $F7, $00, $13
                dc.b    $EF, $01, $80, $01, $A2, $08, $EF, $00, $E7, $AD, $26, $F2, $EF, $02, $F0, $06
                dc.b    $01, $03, $FF, $80, $0A, $C3, $06, $F7, $00, $05, $7C, $F7, $C3, $17, $F2, $30
                dc.b    $30, $34, $5C, $30, $9E, $AC, $A8, $DC, $0E, $04, $0A, $05, $08, $08, $08, $08
                dc.b    $BF, $BF, $BF, $BF, $24, $04, $1C, $80, $30, $30, $34, $5C, $30, $9E, $AC, $A8
                dc.b    $DC, $0E, $04, $0A, $05, $08, $08, $08, $08, $BF, $BF, $BF, $BF, $24, $04, $2C
                dc.b    $80, $04, $37, $77, $72, $49, $1F, $1F, $1F, $1F, $07, $07, $0A, $0D, $00, $00
                dc.b    $0B, $0B, $1F, $1F, $0F, $0F, $13, $13, $81, $88
Sfx_C4: ; Offset_0x0FF7D1:
                dc.b    $E0, $F7, $01, $01, $80, $05, $DB, $F7, $00, $00, $EF, $00, $8A, $22, $F2, $FA
                dc.b    $21, $10, $30, $32, $1F, $1F, $1F, $1F, $05, $05, $18, $10, $0B, $10, $1F, $10
                dc.b    $1F, $4F, $2F, $2F, $0D, $04, $07, $80
Sfx_C5: ; Offset_0x0FF7F9:
                dc.b    $2E, $F8, $01, $03, $80, $05, $0F, $F8, $00, $00, $80, $04, $18, $F8, $00, $00
                dc.b    $80, $C0, $1F, $F8, $00, $00, $EF, $00, $8A, $08, $80, $02, $8A, $08, $F2, $EF
                dc.b    $01, $80, $12, $C6, $55, $F2, $F5, $02, $F3, $E7, $80, $02, $C2, $05, $C4, $04
                dc.b    $C2, $05, $C4, $04, $F2, $3B, $03, $02, $02, $06, $18, $1A, $1A, $96, $17, $0A
                dc.b    $0E, $10, $00, $00, $00, $00, $FF, $FF, $FF, $FF, $00, $39, $28, $80, $04, $37
                dc.b    $77, $72, $49, $1F, $1F, $1F, $1F, $07, $07, $0A, $0D, $00, $00, $0B, $0B, $1F
                dc.b    $1F, $0F, $0F, $23, $23, $80, $80
Sfx_C6: ; Offset_0x0FF860:
                dc.b    $47, $F8, $01, $02, $80, $04, $70, $F8, $00, $05, $80, $05, $7C, $F8, $00, $08
                dc.b    $EF, $00, $C6, $02, $05, $05, $05, $05, $05, $05, $3A, $F2, $EF, $00, $80, $02
                dc.b    $C4, $02, $05, $15, $02, $05, $32, $F2               
Sfx_C7: ; Offset_0x0FF888:
                dc.b    $9D, $F8, $01, $01, $80, $05, $92, $F8, $00, $00, $EF, $00, $BE, $05, $80, $04
                dc.b    $BE, $04, $80, $04, $F2, $28, $2F, $37, $5F, $2B, $1F, $1F, $1F, $1F, $15, $15
                dc.b    $15, $13, $13, $0D, $0C, $10, $2F, $3F, $2F, $2F, $00, $1F, $10, $80
Sfx_C8: ; Offset_0x0FF8B6:
                dc.b    $00, $00, $01, $01, $80, $C0, $C0, $F8, $00, $00, $F5, $00, $F3, $E7, $A7, $25
                dc.b    $F2
Sfx_C9: ; Offset_0x0FF8C7:
                dc.b    $DB, $F8, $01, $01, $80, $05, $D1, $F8, $0E, $00, $EF, $00, $F0, $01, $01, $33
                dc.b    $18, $B9, $1A, $F2, $3B, $0A, $05, $31, $02, $5F, $5F, $5F, $5F, $04, $16, $14
                dc.b    $0C, $00, $00, $04, $00, $1F, $D8, $6F, $FF, $03, $00, $25, $80
Sfx_CA: ; Offset_0x0FF8F4:
                dc.b    $08, $F9, $01, $01, $80, $05, $FE, $F8, $00, $02, $EF, $00, $F0, $01, $01, $5B
                dc.b    $02, $CC, $65, $F2, $20, $36, $30, $35, $31, $41, $3B, $49, $4B, $09, $09, $06
                dc.b    $08, $01, $02, $03, $A9, $0F, $0F, $0F, $0F, $29, $23, $27, $80               
Sfx_CB: ; Offset_0x0FF921:
                dc.b    $79, $F2, $01, $02, $80, $05, $31, $F9, $00, $00, $80, $C0, $42, $F9, $00, $00
                dc.b    $EF, $00, $F0, $03, $01, $20, $04, $81, $18, $E6, $0A, $F7, $00, $06, $38, $F9
                dc.b    $F2, $F0, $01, $01, $0F, $05, $F3, $E7, $B0, $18, $E7, $EC, $03, $F7, $00, $05
                dc.b    $49, $F9, $F2
Sfx_CC: ; Offset_0x0FF954:
                dc.b    $75, $F9, $01, $01, $80, $04, $5E, $F9, $00, $02, $EF, $00, $80, $01, $F0, $03
                dc.b    $01, $5D, $0F, $B0, $0C, $F4, $E7, $E6, $02, $BD, $02, $F7, $00, $19, $6A, $F9
                dc.b    $F2, $20, $36, $30, $35, $31, $DF, $9F, $DF, $9F, $07, $09, $06, $06, $07, $06
                dc.b    $06, $08, $2F, $1F, $1F, $FF, $16, $13, $30, $80           
Sfx_CD: ; Offset_0x0FF98E:
                dc.b    $00, $00, $01, $01, $80, $C0, $98, $F9, $00, $00, $BB, $02, $F2               
Sfx_CE: ; Offset_0x0FF99B:
                dc.b    $47, $F8, $01, $01, $80, $04, $A5, $F9, $00, $05, $EF, $00, $E0, $80, $C1, $04
                dc.b    $C4, $05, $C9, $1B, $F2
Sfx_CF: ; Offset_0x0FF9B0:
                dc.b    $CE, $F9, $01, $02, $80, $04, $C0, $F9, $27, $03, $80, $05, $C2, $F9, $27, $00
                dc.b    $80, $04, $EF, $00, $B4, $05, $E6, $02, $F7, $00, $15, $C4, $F9, $F2, $F4, $06
                dc.b    $0F, $04, $0E, $1F, $1F, $1F, $1F, $00, $0B, $00, $0B, $00, $05, $00, $08, $0F
                dc.b    $FF, $0F, $FF, $0C, $03, $8B, $80
Sfx_D0: ; Offset_0x0FF9E7:
                dc.b    $02, $FA, $01, $01, $80, $05, $F1, $F9, $00, $00, $EF, $00, $9D, $05, $9D, $02
                dc.b    $AD, $05, $9D, $02, $AD, $05, $9D, $02, $AD, $05, $F2, $3B, $70, $53, $70, $51
                dc.b    $0F, $0F, $0F, $0F, $0F, $0F, $00, $0F, $00, $00, $00, $00, $0F, $0F, $0F, $0F
                dc.b    $0E, $2F, $0C, $80
Sfx_D1: ; Offset_0x0FFA1B:
                dc.b    $2A, $FA, $01, $01, $80, $05, $25, $FA, $00, $01, $EF, $00, $81, $05, $F2, $35
                dc.b    $02, $01, $00, $04, $1F, $1F, $1F, $1F, $00, $19, $12, $14, $00, $00, $0C, $0F
                dc.b    $0F, $FF, $EF, $FF, $00, $00, $00, $80               
Sfx_D2: ; Offset_0x0FFA43:
                dc.b    $5B, $FA, $01, $01, $80, $05, $4D, $FA, $00, $00, $EF, $00, $F0, $01, $01, $2D
                dc.b    $21, $81, $26, $81, $26, $81, $26, $F2, $0E, $05, $06, $04, $0F, $1F, $1F, $1F
                dc.b    $1F, $1F, $1F, $1F, $1F, $05, $08, $05, $05, $0F, $0F, $0F, $0F, $51, $82, $44
                dc.b    $97    
Sfx_D3: ; Offset_0x0FFA74:
                dc.b    $88, $FA, $01, $01, $80, $05, $7E, $FA, $00, $00, $EF, $00, $F0, $01, $02, $3F
                dc.b    $04, $96, $3A, $F2, $05, $07, $30, $0F, $0A, $30, $1F, $1F, $1F, $03, $03, $03
                dc.b    $03, $1F, $0F, $0F, $0F, $AF, $AF, $AF, $AF, $4D, $80, $80, $80
Sfx_D4: ; Offset_0x0FFAA1:
                dc.b    $C7, $FA, $01, $02, $80, $04, $B1, $FA, $00, $00, $80, $05, $BB, $FA, $00, $00
                dc.b    $EF, $00, $F0, $01, $01, $E7, $01, $93, $17, $F2, $EF, $00, $E1, $02, $F0, $01
                dc.b    $01, $E7, $01, $93, $17, $F2, $3E, $20, $0E, $0F, $0F, $1F, $1F, $1F, $1F, $1F
                dc.b    $1F, $1F, $1F, $0F, $0E, $0F, $0E, $0F, $0F, $0F, $0F, $8E, $80, $80, $80
Sfx_D5: ; Offset_0x0FFAE0:
                dc.b    $F4, $FA, $01, $01, $80, $05, $EA, $FA, $00, $00, $EF, $00, $F0, $01, $01, $02
                dc.b    $02, $B1, $15, $F2, $35, $29, $09, $08, $0F, $1A, $1F, $10, $1F, $0F, $1F, $1F
                dc.b    $1F, $0C, $0D, $0E, $0E, $0F, $0F, $0F, $0F, $80, $80, $80, $80
Sfx_D6: ; Offset_0x0FFB0D:
                dc.b    $3A, $FB, $01, $02, $80, $04, $1D, $FB, $00, $08, $80, $05, $1D, $FB, $0C, $08
                dc.b    $EF, $00, $F0, $01, $01, $12, $FF, $8F, $45, $F0, $00, $00, $00, $00, $E7, $E6
                dc.b    $03, $A0, $01, $E6, $02, $E7, $0A, $F7, $00, $07, $30, $FB, $F2, $34, $01, $0B
                dc.b    $0E, $09, $9F, $AF, $AF, $CF, $02, $00, $02, $00, $07, $0A, $04, $05, $BF, $BF
                dc.b    $BF, $BF, $50, $1C, $00, $80               
Sfx_D7: ; Offset_0x0FFB53:
                dc.b    $67, $FB, $01, $01, $80, $05, $5D, $FB, $00, $06, $EF, $00, $F0, $01, $01, $07
                dc.b    $01, $99, $1B, $F2, $3E, $20, $0F, $1F, $0F, $1F, $1F, $1F, $1F, $1F, $1F, $1F
                dc.b    $1F, $0F, $0E, $0F, $0E, $0F, $0F, $0F, $0F, $8C, $80, $80, $80
Sfx_D8: ; Offset_0x0FFB80:
                dc.b    $9E, $FB, $01, $01, $80, $05, $8A, $FB, $00, $00, $EF, $00, $B7, $03, $BB, $03
                dc.b    $C7, $0A, $E6, $08, $C7, $05, $80, $05, $F7, $00, $03, $92, $FB, $F2, $3C, $05
                dc.b    $0A, $01, $01, $56, $5C, $5C, $5C, $0E, $11, $11, $11, $09, $06, $0A, $0A, $4F
                dc.b    $3F, $3F, $3F, $17, $20, $80, $80
Sfx_D9: ; Offset_0x0FFBB7:
                dc.b    $ED, $FB, $01, $03, $80, $80, $CD, $FB, $EC, $00, $80, $A0, $CD, $FB, $EA, $00
                dc.b    $80, $05, $DC, $FB, $00, $00, $F0, $01, $01, $81, $45, $9C, $05, $EC, $02, $F7
                dc.b    $00, $02, $D2, $FB, $F2, $EF, $00, $F0, $01, $01, $0C, $01, $92, $07, $E6, $0A
                dc.b    $F7, $00, $03, $E3, $FB, $F2, $43, $01, $01, $01, $01, $5F, $5F, $5F, $5F, $0E
                dc.b    $11, $11, $11, $09, $06, $0A, $0A, $4F, $3F, $3F, $3F, $17, $20, $80, $80
Sfx_DA: ; Offset_0x0FFC06:
                dc.b    $2E, $FC, $01, $02, $80, $C0, $16, $FC, $00, $02, $80, $05, $1D, $FC, $00, $00
                dc.b    $F3, $E7, $F5, $01, $CC, $29, $F2, $EF, $00, $F0, $01, $01, $7F, $F1, $AA, $0A
                dc.b    $E6, $0C, $F7, $00, $03, $24, $FC, $F2, $47, $03, $02, $02, $04, $5F, $5F, $5F
                dc.b    $5F, $0E, $1A, $11, $0A, $09, $0A, $0A, $0A, $4F, $3F, $3F, $3F, $7F, $80, $80
                dc.b    $A3               
Sfx_DB: ; Offset_0x0FFC47:
                dc.b    $64, $FC, $01, $01, $80, $C0, $51, $FC, $00, $00, $F5, $00, $F3, $E7, $C5, $01
                dc.b    $CE, $02, $E7, $02, $EC, $01, $E7, $F7, $00, $14, $5A, $FC, $F2
Sfx_DC: ; Offset_0x0FFC64:
                dc.b    $A8, $FC, $01, $03, $80, $04, $7A, $FC, $00, $00, $80, $05, $81, $FC, $00, $00
                dc.b    $80, $C0, $8A, $FC, $00, $00, $EF, $00, $8D, $06, $8D, $30, $F2, $80, $0C, $EF
                dc.b    $00, $8D, $06, $8D, $30, $F2, $F5, $00, $F3, $E7, $F0, $01, $01, $01, $01, $99
                dc.b    $0F, $F0, $01, $01, $05, $05, $95, $1F, $E7, $12, $EC, $01, $E7, $0F, $F7, $00
                dc.b    $1F, $9E, $FC, $F2, $38, $71, $00, $00, $60, $0A, $0A, $0F, $0F, $00, $00, $00
                dc.b    $12, $00, $09, $07, $0B, $0F, $0F, $0F, $0F, $11, $04, $0E, $80           
Sfx_DD: ; Offset_0x0FFCC1:
                dc.b    $D2, $FC, $01, $01, $80, $05, $CB, $FC, $00, $00, $EF, $00, $BB, $05, $BB, $05
                dc.b    $F2, $3E, $20, $3F, $1F, $BF, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $0F, $0F
                dc.b    $0F, $0F, $0F, $0F, $0F, $0F, $8C, $80, $80, $80               
Sfx_DE: ; Offset_0x0FFCEB:
                dc.b    $0F, $FD, $01, $01, $80, $05, $F5, $FC, $00, $00, $EF, $00, $F0, $01, $01, $0F
                dc.b    $FE, $93, $43, $F0, $01, $01, $03, $03, $9F, $0F, $E7, $03, $E6, $01, $F7, $00
                dc.b    $23, $05, $FD, $F2, $3C, $00, $02, $40, $02, $1F, $1F, $1F, $15, $00, $00, $1F
                dc.b    $00, $00, $00, $00, $00, $0F, $0F, $0F, $0F, $0D, $28, $00, $00
Sfx_DF: ; Offset_0x0FFD28:
                dc.b    $5A, $FD, $01, $02, $80, $05, $38, $FD, $15, $00, $80, $02, $49, $FD, $F4, $05
                dc.b    $EF, $00, $F0, $01, $01, $19, $31, $9D, $3A, $E6, $05, $F7, $00, $02, $3F, $FD
                dc.b    $F2, $EF, $00, $F0, $01, $01, $19, $31, $9D, $3A, $E6, $05, $F7, $00, $02, $50
                dc.b    $FD, $F2, $30, $30, $30, $30, $3C, $9E, $AC, $A8, $DF, $0E, $04, $0A, $00, $08
                dc.b    $08, $08, $08, $BF, $BF, $BF, $BF, $04, $14, $2C, $80
Sfx_E0: ; Offset_0x0FFD73:
                dc.b    $CF, $FD, $01, $03, $80, $05, $89, $FD, $00, $00, $80, $02, $A6, $FD, $F7, $00
                dc.b    $80, $C0, $C3, $FD, $00, $00, $EF, $00, $F0, $01, $01, $19, $F6, $C4, $25, $F0
                dc.b    $01, $01, $00, $00, $E7, $E6, $0F, $D0, $0F, $E7, $03, $E6, $02, $F7, $00, $13
                dc.b    $9C, $FD, $F2, $EF, $00, $F0, $01, $01, $19, $F6, $D5, $25, $F0, $01, $01, $00
                dc.b    $00, $E7, $E6, $0F, $DB, $0F, $E7, $03, $E6, $02, $F7, $00, $13, $B9, $FD, $F2
                dc.b    $F5, $01, $F3, $E7, $F0, $01, $01, $01, $01, $AC, $24, $F2, $34, $00, $03, $0C
                dc.b    $09, $9F, $AC, $AF, $D5, $06, $00, $02, $00, $02, $0A, $04, $08, $BF, $BF, $BF
                dc.b    $BF, $00, $1C, $00, $80
           
                cnop    $000000, $0FFFFE
                dc.w    $0000
               